"use strict";function _typeof(obj){"@babel/helpers - typeof";if(typeof Symbol==="function"&&typeof Symbol.iterator==="symbol"){_typeof=function _typeof(obj){return typeof obj;};}else{_typeof=function _typeof(obj){return obj&&typeof Symbol==="function"&&obj.constructor===Symbol&&obj!==Symbol.prototype?"symbol":typeof obj;};}return _typeof(obj);}/*!
 * jQuery JavaScript Library v3.5.1
 * https://jquery.com/
 *
 * Includes Sizzle.js
 * https://sizzlejs.com/
 *
 * Copyright JS Foundation and other contributors
 * Released under the MIT license
 * https://jquery.org/license
 *
 * Date: 2020-05-04T22:49Z
 */(function(global,factory){"use strict";if((typeof module==="undefined"?"undefined":_typeof(module))==="object"&&_typeof(module.exports)==="object"){// For CommonJS and CommonJS-like environments where a proper `window`
// is present, execute the factory and get jQuery.
// For environments that do not have a `window` with a `document`
// (such as Node.js), expose a factory as module.exports.
// This accentuates the need for the creation of a real `window`.
// e.g. var jQuery = require("jquery")(window);
// See ticket #14549 for more info.
module.exports=global.document?factory(global,true):function(w){if(!w.document){throw new Error("jQuery requires a window with a document");}return factory(w);};}else{factory(global);}// Pass this if window is not defined yet
})(typeof window!=="undefined"?window:void 0,function(window,noGlobal){// Edge <= 12 - 13+, Firefox <=18 - 45+, IE 10 - 11, Safari 5.1 - 9+, iOS 6 - 9.1
// throw exceptions when non-strict code (e.g., ASP.NET 4.5) accesses strict mode
// arguments.callee.caller (trac-13335). But as of jQuery 3.0 (2016), strict mode should be common
// enough that all such attempts are guarded in a try block.
"use strict";var arr=[];var getProto=Object.getPrototypeOf;var _slice=arr.slice;var flat=arr.flat?function(array){return arr.flat.call(array);}:function(array){return arr.concat.apply([],array);};var push=arr.push;var indexOf=arr.indexOf;var class2type={};var toString=class2type.toString;var hasOwn=class2type.hasOwnProperty;var fnToString=hasOwn.toString;var ObjectFunctionString=fnToString.call(Object);var support={};var isFunction=function isFunction(obj){// Support: Chrome <=57, Firefox <=52
// In some browsers, typeof returns "function" for HTML <object> elements
// (i.e., `typeof document.createElement( "object" ) === "function"`).
// We don't want to classify *any* DOM node as a function.
return typeof obj==="function"&&typeof obj.nodeType!=="number";};var isWindow=function isWindow(obj){return obj!=null&&obj===obj.window;};var document=window.document;var preservedScriptAttributes={type:true,src:true,nonce:true,noModule:true};function DOMEval(code,node,doc){doc=doc||document;var i,val,script=doc.createElement("script");script.text=code;if(node){for(i in preservedScriptAttributes){// Support: Firefox 64+, Edge 18+
// Some browsers don't support the "nonce" property on scripts.
// On the other hand, just using `getAttribute` is not enough as
// the `nonce` attribute is reset to an empty string whenever it
// becomes browsing-context connected.
// See https://github.com/whatwg/html/issues/2369
// See https://html.spec.whatwg.org/#nonce-attributes
// The `node.getAttribute` check was added for the sake of
// `jQuery.globalEval` so that it can fake a nonce-containing node
// via an object.
val=node[i]||node.getAttribute&&node.getAttribute(i);if(val){script.setAttribute(i,val);}}}doc.head.appendChild(script).parentNode.removeChild(script);}function toType(obj){if(obj==null){return obj+"";}// Support: Android <=2.3 only (functionish RegExp)
return _typeof(obj)==="object"||typeof obj==="function"?class2type[toString.call(obj)]||"object":_typeof(obj);}/* global Symbol */ // Defining this global in .eslintrc.json would create a danger of using the global
// unguarded in another place, it seems safer to define global only for this module
var version="3.5.1",// Define a local copy of jQuery
jQuery=function jQuery(selector,context){// The jQuery object is actually just the init constructor 'enhanced'
// Need init if jQuery is called (just allow error to be thrown if not included)
return new jQuery.fn.init(selector,context);};jQuery.fn=jQuery.prototype={// The current version of jQuery being used
jquery:version,constructor:jQuery,// The default length of a jQuery object is 0
length:0,toArray:function toArray(){return _slice.call(this);},// Get the Nth element in the matched element set OR
// Get the whole matched element set as a clean array
get:function get(num){// Return all the elements in a clean array
if(num==null){return _slice.call(this);}// Return just the one element from the set
return num<0?this[num+this.length]:this[num];},// Take an array of elements and push it onto the stack
// (returning the new matched element set)
pushStack:function pushStack(elems){// Build a new jQuery matched element set
var ret=jQuery.merge(this.constructor(),elems);// Add the old object onto the stack (as a reference)
ret.prevObject=this;// Return the newly-formed element set
return ret;},// Execute a callback for every element in the matched set.
each:function each(callback){return jQuery.each(this,callback);},map:function map(callback){return this.pushStack(jQuery.map(this,function(elem,i){return callback.call(elem,i,elem);}));},slice:function slice(){return this.pushStack(_slice.apply(this,arguments));},first:function first(){return this.eq(0);},last:function last(){return this.eq(-1);},even:function even(){return this.pushStack(jQuery.grep(this,function(_elem,i){return(i+1)%2;}));},odd:function odd(){return this.pushStack(jQuery.grep(this,function(_elem,i){return i%2;}));},eq:function eq(i){var len=this.length,j=+i+(i<0?len:0);return this.pushStack(j>=0&&j<len?[this[j]]:[]);},end:function end(){return this.prevObject||this.constructor();},// For internal use only.
// Behaves like an Array's method, not like a jQuery method.
push:push,sort:arr.sort,splice:arr.splice};jQuery.extend=jQuery.fn.extend=function(){var options,name,src,copy,copyIsArray,clone,target=arguments[0]||{},i=1,length=arguments.length,deep=false;// Handle a deep copy situation
if(typeof target==="boolean"){deep=target;// Skip the boolean and the target
target=arguments[i]||{};i++;}// Handle case when target is a string or something (possible in deep copy)
if(_typeof(target)!=="object"&&!isFunction(target)){target={};}// Extend jQuery itself if only one argument is passed
if(i===length){target=this;i--;}for(;i<length;i++){// Only deal with non-null/undefined values
if((options=arguments[i])!=null){// Extend the base object
for(name in options){copy=options[name];// Prevent Object.prototype pollution
// Prevent never-ending loop
if(name==="__proto__"||target===copy){continue;}// Recurse if we're merging plain objects or arrays
if(deep&&copy&&(jQuery.isPlainObject(copy)||(copyIsArray=Array.isArray(copy)))){src=target[name];// Ensure proper type for the source value
if(copyIsArray&&!Array.isArray(src)){clone=[];}else if(!copyIsArray&&!jQuery.isPlainObject(src)){clone={};}else{clone=src;}copyIsArray=false;// Never move original objects, clone them
target[name]=jQuery.extend(deep,clone,copy);// Don't bring in undefined values
}else if(copy!==undefined){target[name]=copy;}}}}// Return the modified object
return target;};jQuery.extend({// Unique for each copy of jQuery on the page
expando:"jQuery"+(version+Math.random()).replace(/\D/g,""),// Assume jQuery is ready without the ready module
isReady:true,error:function error(msg){throw new Error(msg);},noop:function noop(){},isPlainObject:function isPlainObject(obj){var proto,Ctor;// Detect obvious negatives
// Use toString instead of jQuery.type to catch host objects
if(!obj||toString.call(obj)!=="[object Object]"){return false;}proto=getProto(obj);// Objects with no prototype (e.g., `Object.create( null )`) are plain
if(!proto){return true;}// Objects with prototype are plain iff they were constructed by a global Object function
Ctor=hasOwn.call(proto,"constructor")&&proto.constructor;return typeof Ctor==="function"&&fnToString.call(Ctor)===ObjectFunctionString;},isEmptyObject:function isEmptyObject(obj){var name;for(name in obj){return false;}return true;},// Evaluates a script in a provided context; falls back to the global one
// if not specified.
globalEval:function globalEval(code,options,doc){DOMEval(code,{nonce:options&&options.nonce},doc);},each:function each(obj,callback){var length,i=0;if(isArrayLike(obj)){length=obj.length;for(;i<length;i++){if(callback.call(obj[i],i,obj[i])===false){break;}}}else{for(i in obj){if(callback.call(obj[i],i,obj[i])===false){break;}}}return obj;},// results is for internal usage only
makeArray:function makeArray(arr,results){var ret=results||[];if(arr!=null){if(isArrayLike(Object(arr))){jQuery.merge(ret,typeof arr==="string"?[arr]:arr);}else{push.call(ret,arr);}}return ret;},inArray:function inArray(elem,arr,i){return arr==null?-1:indexOf.call(arr,elem,i);},// Support: Android <=4.0 only, PhantomJS 1 only
// push.apply(_, arraylike) throws on ancient WebKit
merge:function merge(first,second){var len=+second.length,j=0,i=first.length;for(;j<len;j++){first[i++]=second[j];}first.length=i;return first;},grep:function grep(elems,callback,invert){var callbackInverse,matches=[],i=0,length=elems.length,callbackExpect=!invert;// Go through the array, only saving the items
// that pass the validator function
for(;i<length;i++){callbackInverse=!callback(elems[i],i);if(callbackInverse!==callbackExpect){matches.push(elems[i]);}}return matches;},// arg is for internal usage only
map:function map(elems,callback,arg){var length,value,i=0,ret=[];// Go through the array, translating each of the items to their new values
if(isArrayLike(elems)){length=elems.length;for(;i<length;i++){value=callback(elems[i],i,arg);if(value!=null){ret.push(value);}}// Go through every key on the object,
}else{for(i in elems){value=callback(elems[i],i,arg);if(value!=null){ret.push(value);}}}// Flatten any nested arrays
return flat(ret);},// A global GUID counter for objects
guid:1,// jQuery.support is not used in Core but other projects attach their
// properties to it so it needs to exist.
support:support});if(typeof Symbol==="function"){jQuery.fn[Symbol.iterator]=arr[Symbol.iterator];}// Populate the class2type map
jQuery.each("Boolean Number String Function Array Date RegExp Object Error Symbol".split(" "),function(_i,name){class2type["[object "+name+"]"]=name.toLowerCase();});function isArrayLike(obj){// Support: real iOS 8.2 only (not reproducible in simulator)
// `in` check used to prevent JIT error (gh-2145)
// hasOwn isn't used here due to false negatives
// regarding Nodelist length in IE
var length=!!obj&&"length"in obj&&obj.length,type=toType(obj);if(isFunction(obj)||isWindow(obj)){return false;}return type==="array"||length===0||typeof length==="number"&&length>0&&length-1 in obj;}var Sizzle=/*!
 * Sizzle CSS Selector Engine v2.3.5
 * https://sizzlejs.com/
 *
 * Copyright JS Foundation and other contributors
 * Released under the MIT license
 * https://js.foundation/
 *
 * Date: 2020-03-14
 */function(window){var i,support,Expr,getText,isXML,tokenize,compile,select,outermostContext,sortInput,hasDuplicate,// Local document vars
setDocument,document,docElem,documentIsHTML,rbuggyQSA,rbuggyMatches,matches,contains,// Instance-specific data
expando="sizzle"+1*new Date(),preferredDoc=window.document,dirruns=0,done=0,classCache=createCache(),tokenCache=createCache(),compilerCache=createCache(),nonnativeSelectorCache=createCache(),sortOrder=function sortOrder(a,b){if(a===b){hasDuplicate=true;}return 0;},// Instance methods
hasOwn={}.hasOwnProperty,arr=[],pop=arr.pop,pushNative=arr.push,push=arr.push,slice=arr.slice,// Use a stripped-down indexOf as it's faster than native
// https://jsperf.com/thor-indexof-vs-for/5
indexOf=function indexOf(list,elem){var i=0,len=list.length;for(;i<len;i++){if(list[i]===elem){return i;}}return-1;},booleans="checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|"+"ismap|loop|multiple|open|readonly|required|scoped",// Regular expressions
// http://www.w3.org/TR/css3-selectors/#whitespace
whitespace="[\\x20\\t\\r\\n\\f]",// https://www.w3.org/TR/css-syntax-3/#ident-token-diagram
identifier="(?:\\\\[\\da-fA-F]{1,6}"+whitespace+"?|\\\\[^\\r\\n\\f]|[\\w-]|[^\0-\\x7f])+",// Attribute selectors: http://www.w3.org/TR/selectors/#attribute-selectors
attributes="\\["+whitespace+"*("+identifier+")(?:"+whitespace+// Operator (capture 2)
"*([*^$|!~]?=)"+whitespace+// "Attribute values must be CSS identifiers [capture 5]
// or strings [capture 3 or capture 4]"
"*(?:'((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\"|("+identifier+"))|)"+whitespace+"*\\]",pseudos=":("+identifier+")(?:\\(("+// To reduce the number of selectors needing tokenize in the preFilter, prefer arguments:
// 1. quoted (capture 3; capture 4 or capture 5)
"('((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\")|"+// 2. simple (capture 6)
"((?:\\\\.|[^\\\\()[\\]]|"+attributes+")*)|"+// 3. anything else (capture 2)
".*"+")\\)|)",// Leading and non-escaped trailing whitespace, capturing some non-whitespace characters preceding the latter
rwhitespace=new RegExp(whitespace+"+","g"),rtrim=new RegExp("^"+whitespace+"+|((?:^|[^\\\\])(?:\\\\.)*)"+whitespace+"+$","g"),rcomma=new RegExp("^"+whitespace+"*,"+whitespace+"*"),rcombinators=new RegExp("^"+whitespace+"*([>+~]|"+whitespace+")"+whitespace+"*"),rdescend=new RegExp(whitespace+"|>"),rpseudo=new RegExp(pseudos),ridentifier=new RegExp("^"+identifier+"$"),matchExpr={"ID":new RegExp("^#("+identifier+")"),"CLASS":new RegExp("^\\.("+identifier+")"),"TAG":new RegExp("^("+identifier+"|[*])"),"ATTR":new RegExp("^"+attributes),"PSEUDO":new RegExp("^"+pseudos),"CHILD":new RegExp("^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\("+whitespace+"*(even|odd|(([+-]|)(\\d*)n|)"+whitespace+"*(?:([+-]|)"+whitespace+"*(\\d+)|))"+whitespace+"*\\)|)","i"),"bool":new RegExp("^(?:"+booleans+")$","i"),// For use in libraries implementing .is()
// We use this for POS matching in `select`
"needsContext":new RegExp("^"+whitespace+"*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\("+whitespace+"*((?:-\\d)?\\d*)"+whitespace+"*\\)|)(?=[^-]|$)","i")},rhtml=/HTML$/i,rinputs=/^(?:input|select|textarea|button)$/i,rheader=/^h\d$/i,rnative=/^[^{]+\{\s*\[native \w/,// Easily-parseable/retrievable ID or TAG or CLASS selectors
rquickExpr=/^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/,rsibling=/[+~]/,// CSS escapes
// http://www.w3.org/TR/CSS21/syndata.html#escaped-characters
runescape=new RegExp("\\\\[\\da-fA-F]{1,6}"+whitespace+"?|\\\\([^\\r\\n\\f])","g"),funescape=function funescape(escape,nonHex){var high="0x"+escape.slice(1)-0x10000;return nonHex?// Strip the backslash prefix from a non-hex escape sequence
nonHex:// Replace a hexadecimal escape sequence with the encoded Unicode code point
// Support: IE <=11+
// For values outside the Basic Multilingual Plane (BMP), manually construct a
// surrogate pair
high<0?String.fromCharCode(high+0x10000):String.fromCharCode(high>>10|0xD800,high&0x3FF|0xDC00);},// CSS string/identifier serialization
// https://drafts.csswg.org/cssom/#common-serializing-idioms
rcssescape=/([\0-\x1f\x7f]|^-?\d)|^-$|[^\0-\x1f\x7f-\uFFFF\w-]/g,fcssescape=function fcssescape(ch,asCodePoint){if(asCodePoint){// U+0000 NULL becomes U+FFFD REPLACEMENT CHARACTER
if(ch==="\0"){return"\uFFFD";}// Control characters and (dependent upon position) numbers get escaped as code points
return ch.slice(0,-1)+"\\"+ch.charCodeAt(ch.length-1).toString(16)+" ";}// Other potentially-special ASCII characters get backslash-escaped
return"\\"+ch;},// Used for iframes
// See setDocument()
// Removing the function wrapper causes a "Permission Denied"
// error in IE
unloadHandler=function unloadHandler(){setDocument();},inDisabledFieldset=addCombinator(function(elem){return elem.disabled===true&&elem.nodeName.toLowerCase()==="fieldset";},{dir:"parentNode",next:"legend"});// Optimize for push.apply( _, NodeList )
try{push.apply(arr=slice.call(preferredDoc.childNodes),preferredDoc.childNodes);// Support: Android<4.0
// Detect silently failing push.apply
// eslint-disable-next-line no-unused-expressions
arr[preferredDoc.childNodes.length].nodeType;}catch(e){push={apply:arr.length?// Leverage slice if possible
function(target,els){pushNative.apply(target,slice.call(els));}:// Support: IE<9
// Otherwise append directly
function(target,els){var j=target.length,i=0;// Can't trust NodeList.length
while(target[j++]=els[i++]){}target.length=j-1;}};}function Sizzle(selector,context,results,seed){var m,i,elem,nid,match,groups,newSelector,newContext=context&&context.ownerDocument,// nodeType defaults to 9, since context defaults to document
nodeType=context?context.nodeType:9;results=results||[];// Return early from calls with invalid selector or context
if(typeof selector!=="string"||!selector||nodeType!==1&&nodeType!==9&&nodeType!==11){return results;}// Try to shortcut find operations (as opposed to filters) in HTML documents
if(!seed){setDocument(context);context=context||document;if(documentIsHTML){// If the selector is sufficiently simple, try using a "get*By*" DOM method
// (excepting DocumentFragment context, where the methods don't exist)
if(nodeType!==11&&(match=rquickExpr.exec(selector))){// ID selector
if(m=match[1]){// Document context
if(nodeType===9){if(elem=context.getElementById(m)){// Support: IE, Opera, Webkit
// TODO: identify versions
// getElementById can match elements by name instead of ID
if(elem.id===m){results.push(elem);return results;}}else{return results;}// Element context
}else{// Support: IE, Opera, Webkit
// TODO: identify versions
// getElementById can match elements by name instead of ID
if(newContext&&(elem=newContext.getElementById(m))&&contains(context,elem)&&elem.id===m){results.push(elem);return results;}}// Type selector
}else if(match[2]){push.apply(results,context.getElementsByTagName(selector));return results;// Class selector
}else if((m=match[3])&&support.getElementsByClassName&&context.getElementsByClassName){push.apply(results,context.getElementsByClassName(m));return results;}}// Take advantage of querySelectorAll
if(support.qsa&&!nonnativeSelectorCache[selector+" "]&&(!rbuggyQSA||!rbuggyQSA.test(selector))&&(// Support: IE 8 only
// Exclude object elements
nodeType!==1||context.nodeName.toLowerCase()!=="object")){newSelector=selector;newContext=context;// qSA considers elements outside a scoping root when evaluating child or
// descendant combinators, which is not what we want.
// In such cases, we work around the behavior by prefixing every selector in the
// list with an ID selector referencing the scope context.
// The technique has to be used as well when a leading combinator is used
// as such selectors are not recognized by querySelectorAll.
// Thanks to Andrew Dupont for this technique.
if(nodeType===1&&(rdescend.test(selector)||rcombinators.test(selector))){// Expand context for sibling selectors
newContext=rsibling.test(selector)&&testContext(context.parentNode)||context;// We can use :scope instead of the ID hack if the browser
// supports it & if we're not changing the context.
if(newContext!==context||!support.scope){// Capture the context ID, setting it first if necessary
if(nid=context.getAttribute("id")){nid=nid.replace(rcssescape,fcssescape);}else{context.setAttribute("id",nid=expando);}}// Prefix every selector in the list
groups=tokenize(selector);i=groups.length;while(i--){groups[i]=(nid?"#"+nid:":scope")+" "+toSelector(groups[i]);}newSelector=groups.join(",");}try{push.apply(results,newContext.querySelectorAll(newSelector));return results;}catch(qsaError){nonnativeSelectorCache(selector,true);}finally{if(nid===expando){context.removeAttribute("id");}}}}}// All others
return select(selector.replace(rtrim,"$1"),context,results,seed);}/**
 * Create key-value caches of limited size
 * @returns {function(string, object)} Returns the Object data after storing it on itself with
 *	property name the (space-suffixed) string and (if the cache is larger than Expr.cacheLength)
 *	deleting the oldest entry
 */function createCache(){var keys=[];function cache(key,value){// Use (key + " ") to avoid collision with native prototype properties (see Issue #157)
if(keys.push(key+" ")>Expr.cacheLength){// Only keep the most recent entries
delete cache[keys.shift()];}return cache[key+" "]=value;}return cache;}/**
 * Mark a function for special use by Sizzle
 * @param {Function} fn The function to mark
 */function markFunction(fn){fn[expando]=true;return fn;}/**
 * Support testing using an element
 * @param {Function} fn Passed the created element and returns a boolean result
 */function assert(fn){var el=document.createElement("fieldset");try{return!!fn(el);}catch(e){return false;}finally{// Remove from its parent by default
if(el.parentNode){el.parentNode.removeChild(el);}// release memory in IE
el=null;}}/**
 * Adds the same handler for all of the specified attrs
 * @param {String} attrs Pipe-separated list of attributes
 * @param {Function} handler The method that will be applied
 */function addHandle(attrs,handler){var arr=attrs.split("|"),i=arr.length;while(i--){Expr.attrHandle[arr[i]]=handler;}}/**
 * Checks document order of two siblings
 * @param {Element} a
 * @param {Element} b
 * @returns {Number} Returns less than 0 if a precedes b, greater than 0 if a follows b
 */function siblingCheck(a,b){var cur=b&&a,diff=cur&&a.nodeType===1&&b.nodeType===1&&a.sourceIndex-b.sourceIndex;// Use IE sourceIndex if available on both nodes
if(diff){return diff;}// Check if b follows a
if(cur){while(cur=cur.nextSibling){if(cur===b){return-1;}}}return a?1:-1;}/**
 * Returns a function to use in pseudos for input types
 * @param {String} type
 */function createInputPseudo(type){return function(elem){var name=elem.nodeName.toLowerCase();return name==="input"&&elem.type===type;};}/**
 * Returns a function to use in pseudos for buttons
 * @param {String} type
 */function createButtonPseudo(type){return function(elem){var name=elem.nodeName.toLowerCase();return(name==="input"||name==="button")&&elem.type===type;};}/**
 * Returns a function to use in pseudos for :enabled/:disabled
 * @param {Boolean} disabled true for :disabled; false for :enabled
 */function createDisabledPseudo(disabled){// Known :disabled false positives: fieldset[disabled] > legend:nth-of-type(n+2) :can-disable
return function(elem){// Only certain elements can match :enabled or :disabled
// https://html.spec.whatwg.org/multipage/scripting.html#selector-enabled
// https://html.spec.whatwg.org/multipage/scripting.html#selector-disabled
if("form"in elem){// Check for inherited disabledness on relevant non-disabled elements:
// * listed form-associated elements in a disabled fieldset
//   https://html.spec.whatwg.org/multipage/forms.html#category-listed
//   https://html.spec.whatwg.org/multipage/forms.html#concept-fe-disabled
// * option elements in a disabled optgroup
//   https://html.spec.whatwg.org/multipage/forms.html#concept-option-disabled
// All such elements have a "form" property.
if(elem.parentNode&&elem.disabled===false){// Option elements defer to a parent optgroup if present
if("label"in elem){if("label"in elem.parentNode){return elem.parentNode.disabled===disabled;}else{return elem.disabled===disabled;}}// Support: IE 6 - 11
// Use the isDisabled shortcut property to check for disabled fieldset ancestors
return elem.isDisabled===disabled||// Where there is no isDisabled, check manually
/* jshint -W018 */elem.isDisabled!==!disabled&&inDisabledFieldset(elem)===disabled;}return elem.disabled===disabled;// Try to winnow out elements that can't be disabled before trusting the disabled property.
// Some victims get caught in our net (label, legend, menu, track), but it shouldn't
// even exist on them, let alone have a boolean value.
}else if("label"in elem){return elem.disabled===disabled;}// Remaining elements are neither :enabled nor :disabled
return false;};}/**
 * Returns a function to use in pseudos for positionals
 * @param {Function} fn
 */function createPositionalPseudo(fn){return markFunction(function(argument){argument=+argument;return markFunction(function(seed,matches){var j,matchIndexes=fn([],seed.length,argument),i=matchIndexes.length;// Match elements found at the specified indexes
while(i--){if(seed[j=matchIndexes[i]]){seed[j]=!(matches[j]=seed[j]);}}});});}/**
 * Checks a node for validity as a Sizzle context
 * @param {Element|Object=} context
 * @returns {Element|Object|Boolean} The input node if acceptable, otherwise a falsy value
 */function testContext(context){return context&&typeof context.getElementsByTagName!=="undefined"&&context;}// Expose support vars for convenience
support=Sizzle.support={};/**
 * Detects XML nodes
 * @param {Element|Object} elem An element or a document
 * @returns {Boolean} True iff elem is a non-HTML XML node
 */isXML=Sizzle.isXML=function(elem){var namespace=elem.namespaceURI,docElem=(elem.ownerDocument||elem).documentElement;// Support: IE <=8
// Assume HTML when documentElement doesn't yet exist, such as inside loading iframes
// https://bugs.jquery.com/ticket/4833
return!rhtml.test(namespace||docElem&&docElem.nodeName||"HTML");};/**
 * Sets document-related variables once based on the current document
 * @param {Element|Object} [doc] An element or document object to use to set the document
 * @returns {Object} Returns the current document
 */setDocument=Sizzle.setDocument=function(node){var hasCompare,subWindow,doc=node?node.ownerDocument||node:preferredDoc;// Return early if doc is invalid or already selected
// Support: IE 11+, Edge 17 - 18+
// IE/Edge sometimes throw a "Permission denied" error when strict-comparing
// two documents; shallow comparisons work.
// eslint-disable-next-line eqeqeq
if(doc==document||doc.nodeType!==9||!doc.documentElement){return document;}// Update global variables
document=doc;docElem=document.documentElement;documentIsHTML=!isXML(document);// Support: IE 9 - 11+, Edge 12 - 18+
// Accessing iframe documents after unload throws "permission denied" errors (jQuery #13936)
// Support: IE 11+, Edge 17 - 18+
// IE/Edge sometimes throw a "Permission denied" error when strict-comparing
// two documents; shallow comparisons work.
// eslint-disable-next-line eqeqeq
if(preferredDoc!=document&&(subWindow=document.defaultView)&&subWindow.top!==subWindow){// Support: IE 11, Edge
if(subWindow.addEventListener){subWindow.addEventListener("unload",unloadHandler,false);// Support: IE 9 - 10 only
}else if(subWindow.attachEvent){subWindow.attachEvent("onunload",unloadHandler);}}// Support: IE 8 - 11+, Edge 12 - 18+, Chrome <=16 - 25 only, Firefox <=3.6 - 31 only,
// Safari 4 - 5 only, Opera <=11.6 - 12.x only
// IE/Edge & older browsers don't support the :scope pseudo-class.
// Support: Safari 6.0 only
// Safari 6.0 supports :scope but it's an alias of :root there.
support.scope=assert(function(el){docElem.appendChild(el).appendChild(document.createElement("div"));return typeof el.querySelectorAll!=="undefined"&&!el.querySelectorAll(":scope fieldset div").length;});/* Attributes
	---------------------------------------------------------------------- */ // Support: IE<8
// Verify that getAttribute really returns attributes and not properties
// (excepting IE8 booleans)
support.attributes=assert(function(el){el.className="i";return!el.getAttribute("className");});/* getElement(s)By*
	---------------------------------------------------------------------- */ // Check if getElementsByTagName("*") returns only elements
support.getElementsByTagName=assert(function(el){el.appendChild(document.createComment(""));return!el.getElementsByTagName("*").length;});// Support: IE<9
support.getElementsByClassName=rnative.test(document.getElementsByClassName);// Support: IE<10
// Check if getElementById returns elements by name
// The broken getElementById methods don't pick up programmatically-set names,
// so use a roundabout getElementsByName test
support.getById=assert(function(el){docElem.appendChild(el).id=expando;return!document.getElementsByName||!document.getElementsByName(expando).length;});// ID filter and find
if(support.getById){Expr.filter["ID"]=function(id){var attrId=id.replace(runescape,funescape);return function(elem){return elem.getAttribute("id")===attrId;};};Expr.find["ID"]=function(id,context){if(typeof context.getElementById!=="undefined"&&documentIsHTML){var elem=context.getElementById(id);return elem?[elem]:[];}};}else{Expr.filter["ID"]=function(id){var attrId=id.replace(runescape,funescape);return function(elem){var node=typeof elem.getAttributeNode!=="undefined"&&elem.getAttributeNode("id");return node&&node.value===attrId;};};// Support: IE 6 - 7 only
// getElementById is not reliable as a find shortcut
Expr.find["ID"]=function(id,context){if(typeof context.getElementById!=="undefined"&&documentIsHTML){var node,i,elems,elem=context.getElementById(id);if(elem){// Verify the id attribute
node=elem.getAttributeNode("id");if(node&&node.value===id){return[elem];}// Fall back on getElementsByName
elems=context.getElementsByName(id);i=0;while(elem=elems[i++]){node=elem.getAttributeNode("id");if(node&&node.value===id){return[elem];}}}return[];}};}// Tag
Expr.find["TAG"]=support.getElementsByTagName?function(tag,context){if(typeof context.getElementsByTagName!=="undefined"){return context.getElementsByTagName(tag);// DocumentFragment nodes don't have gEBTN
}else if(support.qsa){return context.querySelectorAll(tag);}}:function(tag,context){var elem,tmp=[],i=0,// By happy coincidence, a (broken) gEBTN appears on DocumentFragment nodes too
results=context.getElementsByTagName(tag);// Filter out possible comments
if(tag==="*"){while(elem=results[i++]){if(elem.nodeType===1){tmp.push(elem);}}return tmp;}return results;};// Class
Expr.find["CLASS"]=support.getElementsByClassName&&function(className,context){if(typeof context.getElementsByClassName!=="undefined"&&documentIsHTML){return context.getElementsByClassName(className);}};/* QSA/matchesSelector
	---------------------------------------------------------------------- */ // QSA and matchesSelector support
// matchesSelector(:active) reports false when true (IE9/Opera 11.5)
rbuggyMatches=[];// qSa(:focus) reports false when true (Chrome 21)
// We allow this because of a bug in IE8/9 that throws an error
// whenever `document.activeElement` is accessed on an iframe
// So, we allow :focus to pass through QSA all the time to avoid the IE error
// See https://bugs.jquery.com/ticket/13378
rbuggyQSA=[];if(support.qsa=rnative.test(document.querySelectorAll)){// Build QSA regex
// Regex strategy adopted from Diego Perini
assert(function(el){var input;// Select is set to empty string on purpose
// This is to test IE's treatment of not explicitly
// setting a boolean content attribute,
// since its presence should be enough
// https://bugs.jquery.com/ticket/12359
docElem.appendChild(el).innerHTML="<a id='"+expando+"'></a>"+"<select id='"+expando+"-\r\\' msallowcapture=''>"+"<option selected=''></option></select>";// Support: IE8, Opera 11-12.16
// Nothing should be selected when empty strings follow ^= or $= or *=
// The test attribute must be unknown in Opera but "safe" for WinRT
// https://msdn.microsoft.com/en-us/library/ie/hh465388.aspx#attribute_section
if(el.querySelectorAll("[msallowcapture^='']").length){rbuggyQSA.push("[*^$]="+whitespace+"*(?:''|\"\")");}// Support: IE8
// Boolean attributes and "value" are not treated correctly
if(!el.querySelectorAll("[selected]").length){rbuggyQSA.push("\\["+whitespace+"*(?:value|"+booleans+")");}// Support: Chrome<29, Android<4.4, Safari<7.0+, iOS<7.0+, PhantomJS<1.9.8+
if(!el.querySelectorAll("[id~="+expando+"-]").length){rbuggyQSA.push("~=");}// Support: IE 11+, Edge 15 - 18+
// IE 11/Edge don't find elements on a `[name='']` query in some cases.
// Adding a temporary attribute to the document before the selection works
// around the issue.
// Interestingly, IE 10 & older don't seem to have the issue.
input=document.createElement("input");input.setAttribute("name","");el.appendChild(input);if(!el.querySelectorAll("[name='']").length){rbuggyQSA.push("\\["+whitespace+"*name"+whitespace+"*="+whitespace+"*(?:''|\"\")");}// Webkit/Opera - :checked should return selected option elements
// http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked
// IE8 throws error here and will not see later tests
if(!el.querySelectorAll(":checked").length){rbuggyQSA.push(":checked");}// Support: Safari 8+, iOS 8+
// https://bugs.webkit.org/show_bug.cgi?id=136851
// In-page `selector#id sibling-combinator selector` fails
if(!el.querySelectorAll("a#"+expando+"+*").length){rbuggyQSA.push(".#.+[+~]");}// Support: Firefox <=3.6 - 5 only
// Old Firefox doesn't throw on a badly-escaped identifier.
el.querySelectorAll("\\\f");rbuggyQSA.push("[\\r\\n\\f]");});assert(function(el){el.innerHTML="<a href='' disabled='disabled'></a>"+"<select disabled='disabled'><option/></select>";// Support: Windows 8 Native Apps
// The type and name attributes are restricted during .innerHTML assignment
var input=document.createElement("input");input.setAttribute("type","hidden");el.appendChild(input).setAttribute("name","D");// Support: IE8
// Enforce case-sensitivity of name attribute
if(el.querySelectorAll("[name=d]").length){rbuggyQSA.push("name"+whitespace+"*[*^$|!~]?=");}// FF 3.5 - :enabled/:disabled and hidden elements (hidden elements are still enabled)
// IE8 throws error here and will not see later tests
if(el.querySelectorAll(":enabled").length!==2){rbuggyQSA.push(":enabled",":disabled");}// Support: IE9-11+
// IE's :disabled selector does not pick up the children of disabled fieldsets
docElem.appendChild(el).disabled=true;if(el.querySelectorAll(":disabled").length!==2){rbuggyQSA.push(":enabled",":disabled");}// Support: Opera 10 - 11 only
// Opera 10-11 does not throw on post-comma invalid pseudos
el.querySelectorAll("*,:x");rbuggyQSA.push(",.*:");});}if(support.matchesSelector=rnative.test(matches=docElem.matches||docElem.webkitMatchesSelector||docElem.mozMatchesSelector||docElem.oMatchesSelector||docElem.msMatchesSelector)){assert(function(el){// Check to see if it's possible to do matchesSelector
// on a disconnected node (IE 9)
support.disconnectedMatch=matches.call(el,"*");// This should fail with an exception
// Gecko does not error, returns false instead
matches.call(el,"[s!='']:x");rbuggyMatches.push("!=",pseudos);});}rbuggyQSA=rbuggyQSA.length&&new RegExp(rbuggyQSA.join("|"));rbuggyMatches=rbuggyMatches.length&&new RegExp(rbuggyMatches.join("|"));/* Contains
	---------------------------------------------------------------------- */hasCompare=rnative.test(docElem.compareDocumentPosition);// Element contains another
// Purposefully self-exclusive
// As in, an element does not contain itself
contains=hasCompare||rnative.test(docElem.contains)?function(a,b){var adown=a.nodeType===9?a.documentElement:a,bup=b&&b.parentNode;return a===bup||!!(bup&&bup.nodeType===1&&(adown.contains?adown.contains(bup):a.compareDocumentPosition&&a.compareDocumentPosition(bup)&16));}:function(a,b){if(b){while(b=b.parentNode){if(b===a){return true;}}}return false;};/* Sorting
	---------------------------------------------------------------------- */ // Document order sorting
sortOrder=hasCompare?function(a,b){// Flag for duplicate removal
if(a===b){hasDuplicate=true;return 0;}// Sort on method existence if only one input has compareDocumentPosition
var compare=!a.compareDocumentPosition-!b.compareDocumentPosition;if(compare){return compare;}// Calculate position if both inputs belong to the same document
// Support: IE 11+, Edge 17 - 18+
// IE/Edge sometimes throw a "Permission denied" error when strict-comparing
// two documents; shallow comparisons work.
// eslint-disable-next-line eqeqeq
compare=(a.ownerDocument||a)==(b.ownerDocument||b)?a.compareDocumentPosition(b):// Otherwise we know they are disconnected
1;// Disconnected nodes
if(compare&1||!support.sortDetached&&b.compareDocumentPosition(a)===compare){// Choose the first element that is related to our preferred document
// Support: IE 11+, Edge 17 - 18+
// IE/Edge sometimes throw a "Permission denied" error when strict-comparing
// two documents; shallow comparisons work.
// eslint-disable-next-line eqeqeq
if(a==document||a.ownerDocument==preferredDoc&&contains(preferredDoc,a)){return-1;}// Support: IE 11+, Edge 17 - 18+
// IE/Edge sometimes throw a "Permission denied" error when strict-comparing
// two documents; shallow comparisons work.
// eslint-disable-next-line eqeqeq
if(b==document||b.ownerDocument==preferredDoc&&contains(preferredDoc,b)){return 1;}// Maintain original order
return sortInput?indexOf(sortInput,a)-indexOf(sortInput,b):0;}return compare&4?-1:1;}:function(a,b){// Exit early if the nodes are identical
if(a===b){hasDuplicate=true;return 0;}var cur,i=0,aup=a.parentNode,bup=b.parentNode,ap=[a],bp=[b];// Parentless nodes are either documents or disconnected
if(!aup||!bup){// Support: IE 11+, Edge 17 - 18+
// IE/Edge sometimes throw a "Permission denied" error when strict-comparing
// two documents; shallow comparisons work.
/* eslint-disable eqeqeq */return a==document?-1:b==document?1:/* eslint-enable eqeqeq */aup?-1:bup?1:sortInput?indexOf(sortInput,a)-indexOf(sortInput,b):0;// If the nodes are siblings, we can do a quick check
}else if(aup===bup){return siblingCheck(a,b);}// Otherwise we need full lists of their ancestors for comparison
cur=a;while(cur=cur.parentNode){ap.unshift(cur);}cur=b;while(cur=cur.parentNode){bp.unshift(cur);}// Walk down the tree looking for a discrepancy
while(ap[i]===bp[i]){i++;}return i?// Do a sibling check if the nodes have a common ancestor
siblingCheck(ap[i],bp[i]):// Otherwise nodes in our document sort first
// Support: IE 11+, Edge 17 - 18+
// IE/Edge sometimes throw a "Permission denied" error when strict-comparing
// two documents; shallow comparisons work.
/* eslint-disable eqeqeq */ap[i]==preferredDoc?-1:bp[i]==preferredDoc?1:/* eslint-enable eqeqeq */0;};return document;};Sizzle.matches=function(expr,elements){return Sizzle(expr,null,null,elements);};Sizzle.matchesSelector=function(elem,expr){setDocument(elem);if(support.matchesSelector&&documentIsHTML&&!nonnativeSelectorCache[expr+" "]&&(!rbuggyMatches||!rbuggyMatches.test(expr))&&(!rbuggyQSA||!rbuggyQSA.test(expr))){try{var ret=matches.call(elem,expr);// IE 9's matchesSelector returns false on disconnected nodes
if(ret||support.disconnectedMatch||// As well, disconnected nodes are said to be in a document
// fragment in IE 9
elem.document&&elem.document.nodeType!==11){return ret;}}catch(e){nonnativeSelectorCache(expr,true);}}return Sizzle(expr,document,null,[elem]).length>0;};Sizzle.contains=function(context,elem){// Set document vars if needed
// Support: IE 11+, Edge 17 - 18+
// IE/Edge sometimes throw a "Permission denied" error when strict-comparing
// two documents; shallow comparisons work.
// eslint-disable-next-line eqeqeq
if((context.ownerDocument||context)!=document){setDocument(context);}return contains(context,elem);};Sizzle.attr=function(elem,name){// Set document vars if needed
// Support: IE 11+, Edge 17 - 18+
// IE/Edge sometimes throw a "Permission denied" error when strict-comparing
// two documents; shallow comparisons work.
// eslint-disable-next-line eqeqeq
if((elem.ownerDocument||elem)!=document){setDocument(elem);}var fn=Expr.attrHandle[name.toLowerCase()],// Don't get fooled by Object.prototype properties (jQuery #13807)
val=fn&&hasOwn.call(Expr.attrHandle,name.toLowerCase())?fn(elem,name,!documentIsHTML):undefined;return val!==undefined?val:support.attributes||!documentIsHTML?elem.getAttribute(name):(val=elem.getAttributeNode(name))&&val.specified?val.value:null;};Sizzle.escape=function(sel){return(sel+"").replace(rcssescape,fcssescape);};Sizzle.error=function(msg){throw new Error("Syntax error, unrecognized expression: "+msg);};/**
 * Document sorting and removing duplicates
 * @param {ArrayLike} results
 */Sizzle.uniqueSort=function(results){var elem,duplicates=[],j=0,i=0;// Unless we *know* we can detect duplicates, assume their presence
hasDuplicate=!support.detectDuplicates;sortInput=!support.sortStable&&results.slice(0);results.sort(sortOrder);if(hasDuplicate){while(elem=results[i++]){if(elem===results[i]){j=duplicates.push(i);}}while(j--){results.splice(duplicates[j],1);}}// Clear input after sorting to release objects
// See https://github.com/jquery/sizzle/pull/225
sortInput=null;return results;};/**
 * Utility function for retrieving the text value of an array of DOM nodes
 * @param {Array|Element} elem
 */getText=Sizzle.getText=function(elem){var node,ret="",i=0,nodeType=elem.nodeType;if(!nodeType){// If no nodeType, this is expected to be an array
while(node=elem[i++]){// Do not traverse comment nodes
ret+=getText(node);}}else if(nodeType===1||nodeType===9||nodeType===11){// Use textContent for elements
// innerText usage removed for consistency of new lines (jQuery #11153)
if(typeof elem.textContent==="string"){return elem.textContent;}else{// Traverse its children
for(elem=elem.firstChild;elem;elem=elem.nextSibling){ret+=getText(elem);}}}else if(nodeType===3||nodeType===4){return elem.nodeValue;}// Do not include comment or processing instruction nodes
return ret;};Expr=Sizzle.selectors={// Can be adjusted by the user
cacheLength:50,createPseudo:markFunction,match:matchExpr,attrHandle:{},find:{},relative:{">":{dir:"parentNode",first:true}," ":{dir:"parentNode"},"+":{dir:"previousSibling",first:true},"~":{dir:"previousSibling"}},preFilter:{"ATTR":function ATTR(match){match[1]=match[1].replace(runescape,funescape);// Move the given value to match[3] whether quoted or unquoted
match[3]=(match[3]||match[4]||match[5]||"").replace(runescape,funescape);if(match[2]==="~="){match[3]=" "+match[3]+" ";}return match.slice(0,4);},"CHILD":function CHILD(match){/* matches from matchExpr["CHILD"]
				1 type (only|nth|...)
				2 what (child|of-type)
				3 argument (even|odd|\d*|\d*n([+-]\d+)?|...)
				4 xn-component of xn+y argument ([+-]?\d*n|)
				5 sign of xn-component
				6 x of xn-component
				7 sign of y-component
				8 y of y-component
			*/match[1]=match[1].toLowerCase();if(match[1].slice(0,3)==="nth"){// nth-* requires argument
if(!match[3]){Sizzle.error(match[0]);}// numeric x and y parameters for Expr.filter.CHILD
// remember that false/true cast respectively to 0/1
match[4]=+(match[4]?match[5]+(match[6]||1):2*(match[3]==="even"||match[3]==="odd"));match[5]=+(match[7]+match[8]||match[3]==="odd");// other types prohibit arguments
}else if(match[3]){Sizzle.error(match[0]);}return match;},"PSEUDO":function PSEUDO(match){var excess,unquoted=!match[6]&&match[2];if(matchExpr["CHILD"].test(match[0])){return null;}// Accept quoted arguments as-is
if(match[3]){match[2]=match[4]||match[5]||"";// Strip excess characters from unquoted arguments
}else if(unquoted&&rpseudo.test(unquoted)&&(// Get excess from tokenize (recursively)
excess=tokenize(unquoted,true))&&(// advance to the next closing parenthesis
excess=unquoted.indexOf(")",unquoted.length-excess)-unquoted.length)){// excess is a negative index
match[0]=match[0].slice(0,excess);match[2]=unquoted.slice(0,excess);}// Return only captures needed by the pseudo filter method (type and argument)
return match.slice(0,3);}},filter:{"TAG":function TAG(nodeNameSelector){var nodeName=nodeNameSelector.replace(runescape,funescape).toLowerCase();return nodeNameSelector==="*"?function(){return true;}:function(elem){return elem.nodeName&&elem.nodeName.toLowerCase()===nodeName;};},"CLASS":function CLASS(className){var pattern=classCache[className+" "];return pattern||(pattern=new RegExp("(^|"+whitespace+")"+className+"("+whitespace+"|$)"))&&classCache(className,function(elem){return pattern.test(typeof elem.className==="string"&&elem.className||typeof elem.getAttribute!=="undefined"&&elem.getAttribute("class")||"");});},"ATTR":function ATTR(name,operator,check){return function(elem){var result=Sizzle.attr(elem,name);if(result==null){return operator==="!=";}if(!operator){return true;}result+="";/* eslint-disable max-len */return operator==="="?result===check:operator==="!="?result!==check:operator==="^="?check&&result.indexOf(check)===0:operator==="*="?check&&result.indexOf(check)>-1:operator==="$="?check&&result.slice(-check.length)===check:operator==="~="?(" "+result.replace(rwhitespace," ")+" ").indexOf(check)>-1:operator==="|="?result===check||result.slice(0,check.length+1)===check+"-":false;/* eslint-enable max-len */};},"CHILD":function CHILD(type,what,_argument,first,last){var simple=type.slice(0,3)!=="nth",forward=type.slice(-4)!=="last",ofType=what==="of-type";return first===1&&last===0?// Shortcut for :nth-*(n)
function(elem){return!!elem.parentNode;}:function(elem,_context,xml){var cache,uniqueCache,outerCache,node,nodeIndex,start,dir=simple!==forward?"nextSibling":"previousSibling",parent=elem.parentNode,name=ofType&&elem.nodeName.toLowerCase(),useCache=!xml&&!ofType,diff=false;if(parent){// :(first|last|only)-(child|of-type)
if(simple){while(dir){node=elem;while(node=node[dir]){if(ofType?node.nodeName.toLowerCase()===name:node.nodeType===1){return false;}}// Reverse direction for :only-* (if we haven't yet done so)
start=dir=type==="only"&&!start&&"nextSibling";}return true;}start=[forward?parent.firstChild:parent.lastChild];// non-xml :nth-child(...) stores cache data on `parent`
if(forward&&useCache){// Seek `elem` from a previously-cached index
// ...in a gzip-friendly way
node=parent;outerCache=node[expando]||(node[expando]={});// Support: IE <9 only
// Defend against cloned attroperties (jQuery gh-1709)
uniqueCache=outerCache[node.uniqueID]||(outerCache[node.uniqueID]={});cache=uniqueCache[type]||[];nodeIndex=cache[0]===dirruns&&cache[1];diff=nodeIndex&&cache[2];node=nodeIndex&&parent.childNodes[nodeIndex];while(node=++nodeIndex&&node&&node[dir]||(// Fallback to seeking `elem` from the start
diff=nodeIndex=0)||start.pop()){// When found, cache indexes on `parent` and break
if(node.nodeType===1&&++diff&&node===elem){uniqueCache[type]=[dirruns,nodeIndex,diff];break;}}}else{// Use previously-cached element index if available
if(useCache){// ...in a gzip-friendly way
node=elem;outerCache=node[expando]||(node[expando]={});// Support: IE <9 only
// Defend against cloned attroperties (jQuery gh-1709)
uniqueCache=outerCache[node.uniqueID]||(outerCache[node.uniqueID]={});cache=uniqueCache[type]||[];nodeIndex=cache[0]===dirruns&&cache[1];diff=nodeIndex;}// xml :nth-child(...)
// or :nth-last-child(...) or :nth(-last)?-of-type(...)
if(diff===false){// Use the same loop as above to seek `elem` from the start
while(node=++nodeIndex&&node&&node[dir]||(diff=nodeIndex=0)||start.pop()){if((ofType?node.nodeName.toLowerCase()===name:node.nodeType===1)&&++diff){// Cache the index of each encountered element
if(useCache){outerCache=node[expando]||(node[expando]={});// Support: IE <9 only
// Defend against cloned attroperties (jQuery gh-1709)
uniqueCache=outerCache[node.uniqueID]||(outerCache[node.uniqueID]={});uniqueCache[type]=[dirruns,diff];}if(node===elem){break;}}}}}// Incorporate the offset, then check against cycle size
diff-=last;return diff===first||diff%first===0&&diff/first>=0;}};},"PSEUDO":function PSEUDO(pseudo,argument){// pseudo-class names are case-insensitive
// http://www.w3.org/TR/selectors/#pseudo-classes
// Prioritize by case sensitivity in case custom pseudos are added with uppercase letters
// Remember that setFilters inherits from pseudos
var args,fn=Expr.pseudos[pseudo]||Expr.setFilters[pseudo.toLowerCase()]||Sizzle.error("unsupported pseudo: "+pseudo);// The user may use createPseudo to indicate that
// arguments are needed to create the filter function
// just as Sizzle does
if(fn[expando]){return fn(argument);}// But maintain support for old signatures
if(fn.length>1){args=[pseudo,pseudo,"",argument];return Expr.setFilters.hasOwnProperty(pseudo.toLowerCase())?markFunction(function(seed,matches){var idx,matched=fn(seed,argument),i=matched.length;while(i--){idx=indexOf(seed,matched[i]);seed[idx]=!(matches[idx]=matched[i]);}}):function(elem){return fn(elem,0,args);};}return fn;}},pseudos:{// Potentially complex pseudos
"not":markFunction(function(selector){// Trim the selector passed to compile
// to avoid treating leading and trailing
// spaces as combinators
var input=[],results=[],matcher=compile(selector.replace(rtrim,"$1"));return matcher[expando]?markFunction(function(seed,matches,_context,xml){var elem,unmatched=matcher(seed,null,xml,[]),i=seed.length;// Match elements unmatched by `matcher`
while(i--){if(elem=unmatched[i]){seed[i]=!(matches[i]=elem);}}}):function(elem,_context,xml){input[0]=elem;matcher(input,null,xml,results);// Don't keep the element (issue #299)
input[0]=null;return!results.pop();};}),"has":markFunction(function(selector){return function(elem){return Sizzle(selector,elem).length>0;};}),"contains":markFunction(function(text){text=text.replace(runescape,funescape);return function(elem){return(elem.textContent||getText(elem)).indexOf(text)>-1;};}),// "Whether an element is represented by a :lang() selector
// is based solely on the element's language value
// being equal to the identifier C,
// or beginning with the identifier C immediately followed by "-".
// The matching of C against the element's language value is performed case-insensitively.
// The identifier C does not have to be a valid language name."
// http://www.w3.org/TR/selectors/#lang-pseudo
"lang":markFunction(function(lang){// lang value must be a valid identifier
if(!ridentifier.test(lang||"")){Sizzle.error("unsupported lang: "+lang);}lang=lang.replace(runescape,funescape).toLowerCase();return function(elem){var elemLang;do{if(elemLang=documentIsHTML?elem.lang:elem.getAttribute("xml:lang")||elem.getAttribute("lang")){elemLang=elemLang.toLowerCase();return elemLang===lang||elemLang.indexOf(lang+"-")===0;}}while((elem=elem.parentNode)&&elem.nodeType===1);return false;};}),// Miscellaneous
"target":function target(elem){var hash=window.location&&window.location.hash;return hash&&hash.slice(1)===elem.id;},"root":function root(elem){return elem===docElem;},"focus":function focus(elem){return elem===document.activeElement&&(!document.hasFocus||document.hasFocus())&&!!(elem.type||elem.href||~elem.tabIndex);},// Boolean properties
"enabled":createDisabledPseudo(false),"disabled":createDisabledPseudo(true),"checked":function checked(elem){// In CSS3, :checked should return both checked and selected elements
// http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked
var nodeName=elem.nodeName.toLowerCase();return nodeName==="input"&&!!elem.checked||nodeName==="option"&&!!elem.selected;},"selected":function selected(elem){// Accessing this property makes selected-by-default
// options in Safari work properly
if(elem.parentNode){// eslint-disable-next-line no-unused-expressions
elem.parentNode.selectedIndex;}return elem.selected===true;},// Contents
"empty":function empty(elem){// http://www.w3.org/TR/selectors/#empty-pseudo
// :empty is negated by element (1) or content nodes (text: 3; cdata: 4; entity ref: 5),
//   but not by others (comment: 8; processing instruction: 7; etc.)
// nodeType < 6 works because attributes (2) do not appear as children
for(elem=elem.firstChild;elem;elem=elem.nextSibling){if(elem.nodeType<6){return false;}}return true;},"parent":function parent(elem){return!Expr.pseudos["empty"](elem);},// Element/input types
"header":function header(elem){return rheader.test(elem.nodeName);},"input":function input(elem){return rinputs.test(elem.nodeName);},"button":function button(elem){var name=elem.nodeName.toLowerCase();return name==="input"&&elem.type==="button"||name==="button";},"text":function text(elem){var attr;return elem.nodeName.toLowerCase()==="input"&&elem.type==="text"&&(// Support: IE<8
// New HTML5 attribute values (e.g., "search") appear with elem.type === "text"
(attr=elem.getAttribute("type"))==null||attr.toLowerCase()==="text");},// Position-in-collection
"first":createPositionalPseudo(function(){return[0];}),"last":createPositionalPseudo(function(_matchIndexes,length){return[length-1];}),"eq":createPositionalPseudo(function(_matchIndexes,length,argument){return[argument<0?argument+length:argument];}),"even":createPositionalPseudo(function(matchIndexes,length){var i=0;for(;i<length;i+=2){matchIndexes.push(i);}return matchIndexes;}),"odd":createPositionalPseudo(function(matchIndexes,length){var i=1;for(;i<length;i+=2){matchIndexes.push(i);}return matchIndexes;}),"lt":createPositionalPseudo(function(matchIndexes,length,argument){var i=argument<0?argument+length:argument>length?length:argument;for(;--i>=0;){matchIndexes.push(i);}return matchIndexes;}),"gt":createPositionalPseudo(function(matchIndexes,length,argument){var i=argument<0?argument+length:argument;for(;++i<length;){matchIndexes.push(i);}return matchIndexes;})}};Expr.pseudos["nth"]=Expr.pseudos["eq"];// Add button/input type pseudos
for(i in{radio:true,checkbox:true,file:true,password:true,image:true}){Expr.pseudos[i]=createInputPseudo(i);}for(i in{submit:true,reset:true}){Expr.pseudos[i]=createButtonPseudo(i);}// Easy API for creating new setFilters
function setFilters(){}setFilters.prototype=Expr.filters=Expr.pseudos;Expr.setFilters=new setFilters();tokenize=Sizzle.tokenize=function(selector,parseOnly){var matched,match,tokens,type,soFar,groups,preFilters,cached=tokenCache[selector+" "];if(cached){return parseOnly?0:cached.slice(0);}soFar=selector;groups=[];preFilters=Expr.preFilter;while(soFar){// Comma and first run
if(!matched||(match=rcomma.exec(soFar))){if(match){// Don't consume trailing commas as valid
soFar=soFar.slice(match[0].length)||soFar;}groups.push(tokens=[]);}matched=false;// Combinators
if(match=rcombinators.exec(soFar)){matched=match.shift();tokens.push({value:matched,// Cast descendant combinators to space
type:match[0].replace(rtrim," ")});soFar=soFar.slice(matched.length);}// Filters
for(type in Expr.filter){if((match=matchExpr[type].exec(soFar))&&(!preFilters[type]||(match=preFilters[type](match)))){matched=match.shift();tokens.push({value:matched,type:type,matches:match});soFar=soFar.slice(matched.length);}}if(!matched){break;}}// Return the length of the invalid excess
// if we're just parsing
// Otherwise, throw an error or return tokens
return parseOnly?soFar.length:soFar?Sizzle.error(selector):// Cache the tokens
tokenCache(selector,groups).slice(0);};function toSelector(tokens){var i=0,len=tokens.length,selector="";for(;i<len;i++){selector+=tokens[i].value;}return selector;}function addCombinator(matcher,combinator,base){var dir=combinator.dir,skip=combinator.next,key=skip||dir,checkNonElements=base&&key==="parentNode",doneName=done++;return combinator.first?// Check against closest ancestor/preceding element
function(elem,context,xml){while(elem=elem[dir]){if(elem.nodeType===1||checkNonElements){return matcher(elem,context,xml);}}return false;}:// Check against all ancestor/preceding elements
function(elem,context,xml){var oldCache,uniqueCache,outerCache,newCache=[dirruns,doneName];// We can't set arbitrary data on XML nodes, so they don't benefit from combinator caching
if(xml){while(elem=elem[dir]){if(elem.nodeType===1||checkNonElements){if(matcher(elem,context,xml)){return true;}}}}else{while(elem=elem[dir]){if(elem.nodeType===1||checkNonElements){outerCache=elem[expando]||(elem[expando]={});// Support: IE <9 only
// Defend against cloned attroperties (jQuery gh-1709)
uniqueCache=outerCache[elem.uniqueID]||(outerCache[elem.uniqueID]={});if(skip&&skip===elem.nodeName.toLowerCase()){elem=elem[dir]||elem;}else if((oldCache=uniqueCache[key])&&oldCache[0]===dirruns&&oldCache[1]===doneName){// Assign to newCache so results back-propagate to previous elements
return newCache[2]=oldCache[2];}else{// Reuse newcache so results back-propagate to previous elements
uniqueCache[key]=newCache;// A match means we're done; a fail means we have to keep checking
if(newCache[2]=matcher(elem,context,xml)){return true;}}}}}return false;};}function elementMatcher(matchers){return matchers.length>1?function(elem,context,xml){var i=matchers.length;while(i--){if(!matchers[i](elem,context,xml)){return false;}}return true;}:matchers[0];}function multipleContexts(selector,contexts,results){var i=0,len=contexts.length;for(;i<len;i++){Sizzle(selector,contexts[i],results);}return results;}function condense(unmatched,map,filter,context,xml){var elem,newUnmatched=[],i=0,len=unmatched.length,mapped=map!=null;for(;i<len;i++){if(elem=unmatched[i]){if(!filter||filter(elem,context,xml)){newUnmatched.push(elem);if(mapped){map.push(i);}}}}return newUnmatched;}function setMatcher(preFilter,selector,matcher,postFilter,postFinder,postSelector){if(postFilter&&!postFilter[expando]){postFilter=setMatcher(postFilter);}if(postFinder&&!postFinder[expando]){postFinder=setMatcher(postFinder,postSelector);}return markFunction(function(seed,results,context,xml){var temp,i,elem,preMap=[],postMap=[],preexisting=results.length,// Get initial elements from seed or context
elems=seed||multipleContexts(selector||"*",context.nodeType?[context]:context,[]),// Prefilter to get matcher input, preserving a map for seed-results synchronization
matcherIn=preFilter&&(seed||!selector)?condense(elems,preMap,preFilter,context,xml):elems,matcherOut=matcher?// If we have a postFinder, or filtered seed, or non-seed postFilter or preexisting results,
postFinder||(seed?preFilter:preexisting||postFilter)?// ...intermediate processing is necessary
[]:// ...otherwise use results directly
results:matcherIn;// Find primary matches
if(matcher){matcher(matcherIn,matcherOut,context,xml);}// Apply postFilter
if(postFilter){temp=condense(matcherOut,postMap);postFilter(temp,[],context,xml);// Un-match failing elements by moving them back to matcherIn
i=temp.length;while(i--){if(elem=temp[i]){matcherOut[postMap[i]]=!(matcherIn[postMap[i]]=elem);}}}if(seed){if(postFinder||preFilter){if(postFinder){// Get the final matcherOut by condensing this intermediate into postFinder contexts
temp=[];i=matcherOut.length;while(i--){if(elem=matcherOut[i]){// Restore matcherIn since elem is not yet a final match
temp.push(matcherIn[i]=elem);}}postFinder(null,matcherOut=[],temp,xml);}// Move matched elements from seed to results to keep them synchronized
i=matcherOut.length;while(i--){if((elem=matcherOut[i])&&(temp=postFinder?indexOf(seed,elem):preMap[i])>-1){seed[temp]=!(results[temp]=elem);}}}// Add elements to results, through postFinder if defined
}else{matcherOut=condense(matcherOut===results?matcherOut.splice(preexisting,matcherOut.length):matcherOut);if(postFinder){postFinder(null,results,matcherOut,xml);}else{push.apply(results,matcherOut);}}});}function matcherFromTokens(tokens){var checkContext,matcher,j,len=tokens.length,leadingRelative=Expr.relative[tokens[0].type],implicitRelative=leadingRelative||Expr.relative[" "],i=leadingRelative?1:0,// The foundational matcher ensures that elements are reachable from top-level context(s)
matchContext=addCombinator(function(elem){return elem===checkContext;},implicitRelative,true),matchAnyContext=addCombinator(function(elem){return indexOf(checkContext,elem)>-1;},implicitRelative,true),matchers=[function(elem,context,xml){var ret=!leadingRelative&&(xml||context!==outermostContext)||((checkContext=context).nodeType?matchContext(elem,context,xml):matchAnyContext(elem,context,xml));// Avoid hanging onto element (issue #299)
checkContext=null;return ret;}];for(;i<len;i++){if(matcher=Expr.relative[tokens[i].type]){matchers=[addCombinator(elementMatcher(matchers),matcher)];}else{matcher=Expr.filter[tokens[i].type].apply(null,tokens[i].matches);// Return special upon seeing a positional matcher
if(matcher[expando]){// Find the next relative operator (if any) for proper handling
j=++i;for(;j<len;j++){if(Expr.relative[tokens[j].type]){break;}}return setMatcher(i>1&&elementMatcher(matchers),i>1&&toSelector(// If the preceding token was a descendant combinator, insert an implicit any-element `*`
tokens.slice(0,i-1).concat({value:tokens[i-2].type===" "?"*":""})).replace(rtrim,"$1"),matcher,i<j&&matcherFromTokens(tokens.slice(i,j)),j<len&&matcherFromTokens(tokens=tokens.slice(j)),j<len&&toSelector(tokens));}matchers.push(matcher);}}return elementMatcher(matchers);}function matcherFromGroupMatchers(elementMatchers,setMatchers){var bySet=setMatchers.length>0,byElement=elementMatchers.length>0,superMatcher=function superMatcher(seed,context,xml,results,outermost){var elem,j,matcher,matchedCount=0,i="0",unmatched=seed&&[],setMatched=[],contextBackup=outermostContext,// We must always have either seed elements or outermost context
elems=seed||byElement&&Expr.find["TAG"]("*",outermost),// Use integer dirruns iff this is the outermost matcher
dirrunsUnique=dirruns+=contextBackup==null?1:Math.random()||0.1,len=elems.length;if(outermost){// Support: IE 11+, Edge 17 - 18+
// IE/Edge sometimes throw a "Permission denied" error when strict-comparing
// two documents; shallow comparisons work.
// eslint-disable-next-line eqeqeq
outermostContext=context==document||context||outermost;}// Add elements passing elementMatchers directly to results
// Support: IE<9, Safari
// Tolerate NodeList properties (IE: "length"; Safari: <number>) matching elements by id
for(;i!==len&&(elem=elems[i])!=null;i++){if(byElement&&elem){j=0;// Support: IE 11+, Edge 17 - 18+
// IE/Edge sometimes throw a "Permission denied" error when strict-comparing
// two documents; shallow comparisons work.
// eslint-disable-next-line eqeqeq
if(!context&&elem.ownerDocument!=document){setDocument(elem);xml=!documentIsHTML;}while(matcher=elementMatchers[j++]){if(matcher(elem,context||document,xml)){results.push(elem);break;}}if(outermost){dirruns=dirrunsUnique;}}// Track unmatched elements for set filters
if(bySet){// They will have gone through all possible matchers
if(elem=!matcher&&elem){matchedCount--;}// Lengthen the array for every element, matched or not
if(seed){unmatched.push(elem);}}}// `i` is now the count of elements visited above, and adding it to `matchedCount`
// makes the latter nonnegative.
matchedCount+=i;// Apply set filters to unmatched elements
// NOTE: This can be skipped if there are no unmatched elements (i.e., `matchedCount`
// equals `i`), unless we didn't visit _any_ elements in the above loop because we have
// no element matchers and no seed.
// Incrementing an initially-string "0" `i` allows `i` to remain a string only in that
// case, which will result in a "00" `matchedCount` that differs from `i` but is also
// numerically zero.
if(bySet&&i!==matchedCount){j=0;while(matcher=setMatchers[j++]){matcher(unmatched,setMatched,context,xml);}if(seed){// Reintegrate element matches to eliminate the need for sorting
if(matchedCount>0){while(i--){if(!(unmatched[i]||setMatched[i])){setMatched[i]=pop.call(results);}}}// Discard index placeholder values to get only actual matches
setMatched=condense(setMatched);}// Add matches to results
push.apply(results,setMatched);// Seedless set matches succeeding multiple successful matchers stipulate sorting
if(outermost&&!seed&&setMatched.length>0&&matchedCount+setMatchers.length>1){Sizzle.uniqueSort(results);}}// Override manipulation of globals by nested matchers
if(outermost){dirruns=dirrunsUnique;outermostContext=contextBackup;}return unmatched;};return bySet?markFunction(superMatcher):superMatcher;}compile=Sizzle.compile=function(selector,match/* Internal Use Only */){var i,setMatchers=[],elementMatchers=[],cached=compilerCache[selector+" "];if(!cached){// Generate a function of recursive functions that can be used to check each element
if(!match){match=tokenize(selector);}i=match.length;while(i--){cached=matcherFromTokens(match[i]);if(cached[expando]){setMatchers.push(cached);}else{elementMatchers.push(cached);}}// Cache the compiled function
cached=compilerCache(selector,matcherFromGroupMatchers(elementMatchers,setMatchers));// Save selector and tokenization
cached.selector=selector;}return cached;};/**
 * A low-level selection function that works with Sizzle's compiled
 *  selector functions
 * @param {String|Function} selector A selector or a pre-compiled
 *  selector function built with Sizzle.compile
 * @param {Element} context
 * @param {Array} [results]
 * @param {Array} [seed] A set of elements to match against
 */select=Sizzle.select=function(selector,context,results,seed){var i,tokens,token,type,find,compiled=typeof selector==="function"&&selector,match=!seed&&tokenize(selector=compiled.selector||selector);results=results||[];// Try to minimize operations if there is only one selector in the list and no seed
// (the latter of which guarantees us context)
if(match.length===1){// Reduce context if the leading compound selector is an ID
tokens=match[0]=match[0].slice(0);if(tokens.length>2&&(token=tokens[0]).type==="ID"&&context.nodeType===9&&documentIsHTML&&Expr.relative[tokens[1].type]){context=(Expr.find["ID"](token.matches[0].replace(runescape,funescape),context)||[])[0];if(!context){return results;// Precompiled matchers will still verify ancestry, so step up a level
}else if(compiled){context=context.parentNode;}selector=selector.slice(tokens.shift().value.length);}// Fetch a seed set for right-to-left matching
i=matchExpr["needsContext"].test(selector)?0:tokens.length;while(i--){token=tokens[i];// Abort if we hit a combinator
if(Expr.relative[type=token.type]){break;}if(find=Expr.find[type]){// Search, expanding context for leading sibling combinators
if(seed=find(token.matches[0].replace(runescape,funescape),rsibling.test(tokens[0].type)&&testContext(context.parentNode)||context)){// If seed is empty or no tokens remain, we can return early
tokens.splice(i,1);selector=seed.length&&toSelector(tokens);if(!selector){push.apply(results,seed);return results;}break;}}}}// Compile and execute a filtering function if one is not provided
// Provide `match` to avoid retokenization if we modified the selector above
(compiled||compile(selector,match))(seed,context,!documentIsHTML,results,!context||rsibling.test(selector)&&testContext(context.parentNode)||context);return results;};// One-time assignments
// Sort stability
support.sortStable=expando.split("").sort(sortOrder).join("")===expando;// Support: Chrome 14-35+
// Always assume duplicates if they aren't passed to the comparison function
support.detectDuplicates=!!hasDuplicate;// Initialize against the default document
setDocument();// Support: Webkit<537.32 - Safari 6.0.3/Chrome 25 (fixed in Chrome 27)
// Detached nodes confoundingly follow *each other*
support.sortDetached=assert(function(el){// Should return 1, but returns 4 (following)
return el.compareDocumentPosition(document.createElement("fieldset"))&1;});// Support: IE<8
// Prevent attribute/property "interpolation"
// https://msdn.microsoft.com/en-us/library/ms536429%28VS.85%29.aspx
if(!assert(function(el){el.innerHTML="<a href='#'></a>";return el.firstChild.getAttribute("href")==="#";})){addHandle("type|href|height|width",function(elem,name,isXML){if(!isXML){return elem.getAttribute(name,name.toLowerCase()==="type"?1:2);}});}// Support: IE<9
// Use defaultValue in place of getAttribute("value")
if(!support.attributes||!assert(function(el){el.innerHTML="<input/>";el.firstChild.setAttribute("value","");return el.firstChild.getAttribute("value")==="";})){addHandle("value",function(elem,_name,isXML){if(!isXML&&elem.nodeName.toLowerCase()==="input"){return elem.defaultValue;}});}// Support: IE<9
// Use getAttributeNode to fetch booleans when getAttribute lies
if(!assert(function(el){return el.getAttribute("disabled")==null;})){addHandle(booleans,function(elem,name,isXML){var val;if(!isXML){return elem[name]===true?name.toLowerCase():(val=elem.getAttributeNode(name))&&val.specified?val.value:null;}});}return Sizzle;}(window);jQuery.find=Sizzle;jQuery.expr=Sizzle.selectors;// Deprecated
jQuery.expr[":"]=jQuery.expr.pseudos;jQuery.uniqueSort=jQuery.unique=Sizzle.uniqueSort;jQuery.text=Sizzle.getText;jQuery.isXMLDoc=Sizzle.isXML;jQuery.contains=Sizzle.contains;jQuery.escapeSelector=Sizzle.escape;var dir=function dir(elem,_dir,until){var matched=[],truncate=until!==undefined;while((elem=elem[_dir])&&elem.nodeType!==9){if(elem.nodeType===1){if(truncate&&jQuery(elem).is(until)){break;}matched.push(elem);}}return matched;};var _siblings=function siblings(n,elem){var matched=[];for(;n;n=n.nextSibling){if(n.nodeType===1&&n!==elem){matched.push(n);}}return matched;};var rneedsContext=jQuery.expr.match.needsContext;function nodeName(elem,name){return elem.nodeName&&elem.nodeName.toLowerCase()===name.toLowerCase();};var rsingleTag=/^<([a-z][^\/\0>:\x20\t\r\n\f]*)[\x20\t\r\n\f]*\/?>(?:<\/\1>|)$/i;// Implement the identical functionality for filter and not
function winnow(elements,qualifier,not){if(isFunction(qualifier)){return jQuery.grep(elements,function(elem,i){return!!qualifier.call(elem,i,elem)!==not;});}// Single element
if(qualifier.nodeType){return jQuery.grep(elements,function(elem){return elem===qualifier!==not;});}// Arraylike of elements (jQuery, arguments, Array)
if(typeof qualifier!=="string"){return jQuery.grep(elements,function(elem){return indexOf.call(qualifier,elem)>-1!==not;});}// Filtered directly for both simple and complex selectors
return jQuery.filter(qualifier,elements,not);}jQuery.filter=function(expr,elems,not){var elem=elems[0];if(not){expr=":not("+expr+")";}if(elems.length===1&&elem.nodeType===1){return jQuery.find.matchesSelector(elem,expr)?[elem]:[];}return jQuery.find.matches(expr,jQuery.grep(elems,function(elem){return elem.nodeType===1;}));};jQuery.fn.extend({find:function find(selector){var i,ret,len=this.length,self=this;if(typeof selector!=="string"){return this.pushStack(jQuery(selector).filter(function(){for(i=0;i<len;i++){if(jQuery.contains(self[i],this)){return true;}}}));}ret=this.pushStack([]);for(i=0;i<len;i++){jQuery.find(selector,self[i],ret);}return len>1?jQuery.uniqueSort(ret):ret;},filter:function filter(selector){return this.pushStack(winnow(this,selector||[],false));},not:function not(selector){return this.pushStack(winnow(this,selector||[],true));},is:function is(selector){return!!winnow(this,// If this is a positional/relative selector, check membership in the returned set
// so $("p:first").is("p:last") won't return true for a doc with two "p".
typeof selector==="string"&&rneedsContext.test(selector)?jQuery(selector):selector||[],false).length;}});// Initialize a jQuery object
// A central reference to the root jQuery(document)
var rootjQuery,// A simple way to check for HTML strings
// Prioritize #id over <tag> to avoid XSS via location.hash (#9521)
// Strict HTML recognition (#11290: must start with <)
// Shortcut simple #id case for speed
rquickExpr=/^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]+))$/,init=jQuery.fn.init=function(selector,context,root){var match,elem;// HANDLE: $(""), $(null), $(undefined), $(false)
if(!selector){return this;}// Method init() accepts an alternate rootjQuery
// so migrate can support jQuery.sub (gh-2101)
root=root||rootjQuery;// Handle HTML strings
if(typeof selector==="string"){if(selector[0]==="<"&&selector[selector.length-1]===">"&&selector.length>=3){// Assume that strings that start and end with <> are HTML and skip the regex check
match=[null,selector,null];}else{match=rquickExpr.exec(selector);}// Match html or make sure no context is specified for #id
if(match&&(match[1]||!context)){// HANDLE: $(html) -> $(array)
if(match[1]){context=context instanceof jQuery?context[0]:context;// Option to run scripts is true for back-compat
// Intentionally let the error be thrown if parseHTML is not present
jQuery.merge(this,jQuery.parseHTML(match[1],context&&context.nodeType?context.ownerDocument||context:document,true));// HANDLE: $(html, props)
if(rsingleTag.test(match[1])&&jQuery.isPlainObject(context)){for(match in context){// Properties of context are called as methods if possible
if(isFunction(this[match])){this[match](context[match]);// ...and otherwise set as attributes
}else{this.attr(match,context[match]);}}}return this;// HANDLE: $(#id)
}else{elem=document.getElementById(match[2]);if(elem){// Inject the element directly into the jQuery object
this[0]=elem;this.length=1;}return this;}// HANDLE: $(expr, $(...))
}else if(!context||context.jquery){return(context||root).find(selector);// HANDLE: $(expr, context)
// (which is just equivalent to: $(context).find(expr)
}else{return this.constructor(context).find(selector);}// HANDLE: $(DOMElement)
}else if(selector.nodeType){this[0]=selector;this.length=1;return this;// HANDLE: $(function)
// Shortcut for document ready
}else if(isFunction(selector)){return root.ready!==undefined?root.ready(selector):// Execute immediately if ready is not present
selector(jQuery);}return jQuery.makeArray(selector,this);};// Give the init function the jQuery prototype for later instantiation
init.prototype=jQuery.fn;// Initialize central reference
rootjQuery=jQuery(document);var rparentsprev=/^(?:parents|prev(?:Until|All))/,// Methods guaranteed to produce a unique set when starting from a unique set
guaranteedUnique={children:true,contents:true,next:true,prev:true};jQuery.fn.extend({has:function has(target){var targets=jQuery(target,this),l=targets.length;return this.filter(function(){var i=0;for(;i<l;i++){if(jQuery.contains(this,targets[i])){return true;}}});},closest:function closest(selectors,context){var cur,i=0,l=this.length,matched=[],targets=typeof selectors!=="string"&&jQuery(selectors);// Positional selectors never match, since there's no _selection_ context
if(!rneedsContext.test(selectors)){for(;i<l;i++){for(cur=this[i];cur&&cur!==context;cur=cur.parentNode){// Always skip document fragments
if(cur.nodeType<11&&(targets?targets.index(cur)>-1:// Don't pass non-elements to Sizzle
cur.nodeType===1&&jQuery.find.matchesSelector(cur,selectors))){matched.push(cur);break;}}}}return this.pushStack(matched.length>1?jQuery.uniqueSort(matched):matched);},// Determine the position of an element within the set
index:function index(elem){// No argument, return index in parent
if(!elem){return this[0]&&this[0].parentNode?this.first().prevAll().length:-1;}// Index in selector
if(typeof elem==="string"){return indexOf.call(jQuery(elem),this[0]);}// Locate the position of the desired element
return indexOf.call(this,// If it receives a jQuery object, the first element is used
elem.jquery?elem[0]:elem);},add:function add(selector,context){return this.pushStack(jQuery.uniqueSort(jQuery.merge(this.get(),jQuery(selector,context))));},addBack:function addBack(selector){return this.add(selector==null?this.prevObject:this.prevObject.filter(selector));}});function sibling(cur,dir){while((cur=cur[dir])&&cur.nodeType!==1){}return cur;}jQuery.each({parent:function parent(elem){var parent=elem.parentNode;return parent&&parent.nodeType!==11?parent:null;},parents:function parents(elem){return dir(elem,"parentNode");},parentsUntil:function parentsUntil(elem,_i,until){return dir(elem,"parentNode",until);},next:function next(elem){return sibling(elem,"nextSibling");},prev:function prev(elem){return sibling(elem,"previousSibling");},nextAll:function nextAll(elem){return dir(elem,"nextSibling");},prevAll:function prevAll(elem){return dir(elem,"previousSibling");},nextUntil:function nextUntil(elem,_i,until){return dir(elem,"nextSibling",until);},prevUntil:function prevUntil(elem,_i,until){return dir(elem,"previousSibling",until);},siblings:function siblings(elem){return _siblings((elem.parentNode||{}).firstChild,elem);},children:function children(elem){return _siblings(elem.firstChild);},contents:function contents(elem){if(elem.contentDocument!=null&&// Support: IE 11+
// <object> elements with no `data` attribute has an object
// `contentDocument` with a `null` prototype.
getProto(elem.contentDocument)){return elem.contentDocument;}// Support: IE 9 - 11 only, iOS 7 only, Android Browser <=4.3 only
// Treat the template element as a regular one in browsers that
// don't support it.
if(nodeName(elem,"template")){elem=elem.content||elem;}return jQuery.merge([],elem.childNodes);}},function(name,fn){jQuery.fn[name]=function(until,selector){var matched=jQuery.map(this,fn,until);if(name.slice(-5)!=="Until"){selector=until;}if(selector&&typeof selector==="string"){matched=jQuery.filter(selector,matched);}if(this.length>1){// Remove duplicates
if(!guaranteedUnique[name]){jQuery.uniqueSort(matched);}// Reverse order for parents* and prev-derivatives
if(rparentsprev.test(name)){matched.reverse();}}return this.pushStack(matched);};});var rnothtmlwhite=/[^\x20\t\r\n\f]+/g;// Convert String-formatted options into Object-formatted ones
function createOptions(options){var object={};jQuery.each(options.match(rnothtmlwhite)||[],function(_,flag){object[flag]=true;});return object;}/*
 * Create a callback list using the following parameters:
 *
 *	options: an optional list of space-separated options that will change how
 *			the callback list behaves or a more traditional option object
 *
 * By default a callback list will act like an event callback list and can be
 * "fired" multiple times.
 *
 * Possible options:
 *
 *	once:			will ensure the callback list can only be fired once (like a Deferred)
 *
 *	memory:			will keep track of previous values and will call any callback added
 *					after the list has been fired right away with the latest "memorized"
 *					values (like a Deferred)
 *
 *	unique:			will ensure a callback can only be added once (no duplicate in the list)
 *
 *	stopOnFalse:	interrupt callings when a callback returns false
 *
 */jQuery.Callbacks=function(options){// Convert options from String-formatted to Object-formatted if needed
// (we check in cache first)
options=typeof options==="string"?createOptions(options):jQuery.extend({},options);var// Flag to know if list is currently firing
firing,// Last fire value for non-forgettable lists
memory,// Flag to know if list was already fired
_fired,// Flag to prevent firing
_locked,// Actual callback list
list=[],// Queue of execution data for repeatable lists
queue=[],// Index of currently firing callback (modified by add/remove as needed)
firingIndex=-1,// Fire callbacks
fire=function fire(){// Enforce single-firing
_locked=_locked||options.once;// Execute callbacks for all pending executions,
// respecting firingIndex overrides and runtime changes
_fired=firing=true;for(;queue.length;firingIndex=-1){memory=queue.shift();while(++firingIndex<list.length){// Run callback and check for early termination
if(list[firingIndex].apply(memory[0],memory[1])===false&&options.stopOnFalse){// Jump to end and forget the data so .add doesn't re-fire
firingIndex=list.length;memory=false;}}}// Forget the data if we're done with it
if(!options.memory){memory=false;}firing=false;// Clean up if we're done firing for good
if(_locked){// Keep an empty list if we have data for future add calls
if(memory){list=[];// Otherwise, this object is spent
}else{list="";}}},// Actual Callbacks object
self={// Add a callback or a collection of callbacks to the list
add:function add(){if(list){// If we have memory from a past run, we should fire after adding
if(memory&&!firing){firingIndex=list.length-1;queue.push(memory);}(function add(args){jQuery.each(args,function(_,arg){if(isFunction(arg)){if(!options.unique||!self.has(arg)){list.push(arg);}}else if(arg&&arg.length&&toType(arg)!=="string"){// Inspect recursively
add(arg);}});})(arguments);if(memory&&!firing){fire();}}return this;},// Remove a callback from the list
remove:function remove(){jQuery.each(arguments,function(_,arg){var index;while((index=jQuery.inArray(arg,list,index))>-1){list.splice(index,1);// Handle firing indexes
if(index<=firingIndex){firingIndex--;}}});return this;},// Check if a given callback is in the list.
// If no argument is given, return whether or not list has callbacks attached.
has:function has(fn){return fn?jQuery.inArray(fn,list)>-1:list.length>0;},// Remove all callbacks from the list
empty:function empty(){if(list){list=[];}return this;},// Disable .fire and .add
// Abort any current/pending executions
// Clear all callbacks and values
disable:function disable(){_locked=queue=[];list=memory="";return this;},disabled:function disabled(){return!list;},// Disable .fire
// Also disable .add unless we have memory (since it would have no effect)
// Abort any pending executions
lock:function lock(){_locked=queue=[];if(!memory&&!firing){list=memory="";}return this;},locked:function locked(){return!!_locked;},// Call all callbacks with the given context and arguments
fireWith:function fireWith(context,args){if(!_locked){args=args||[];args=[context,args.slice?args.slice():args];queue.push(args);if(!firing){fire();}}return this;},// Call all the callbacks with the given arguments
fire:function fire(){self.fireWith(this,arguments);return this;},// To know if the callbacks have already been called at least once
fired:function fired(){return!!_fired;}};return self;};function Identity(v){return v;}function Thrower(ex){throw ex;}function adoptValue(value,resolve,reject,noValue){var method;try{// Check for promise aspect first to privilege synchronous behavior
if(value&&isFunction(method=value.promise)){method.call(value).done(resolve).fail(reject);// Other thenables
}else if(value&&isFunction(method=value.then)){method.call(value,resolve,reject);// Other non-thenables
}else{// Control `resolve` arguments by letting Array#slice cast boolean `noValue` to integer:
// * false: [ value ].slice( 0 ) => resolve( value )
// * true: [ value ].slice( 1 ) => resolve()
resolve.apply(undefined,[value].slice(noValue));}// For Promises/A+, convert exceptions into rejections
// Since jQuery.when doesn't unwrap thenables, we can skip the extra checks appearing in
// Deferred#then to conditionally suppress rejection.
}catch(value){// Support: Android 4.0 only
// Strict mode functions invoked without .call/.apply get global-object context
reject.apply(undefined,[value]);}}jQuery.extend({Deferred:function Deferred(func){var tuples=[// action, add listener, callbacks,
// ... .then handlers, argument index, [final state]
["notify","progress",jQuery.Callbacks("memory"),jQuery.Callbacks("memory"),2],["resolve","done",jQuery.Callbacks("once memory"),jQuery.Callbacks("once memory"),0,"resolved"],["reject","fail",jQuery.Callbacks("once memory"),jQuery.Callbacks("once memory"),1,"rejected"]],_state="pending",_promise={state:function state(){return _state;},always:function always(){deferred.done(arguments).fail(arguments);return this;},"catch":function _catch(fn){return _promise.then(null,fn);},// Keep pipe for back-compat
pipe:function pipe()/* fnDone, fnFail, fnProgress */{var fns=arguments;return jQuery.Deferred(function(newDefer){jQuery.each(tuples,function(_i,tuple){// Map tuples (progress, done, fail) to arguments (done, fail, progress)
var fn=isFunction(fns[tuple[4]])&&fns[tuple[4]];// deferred.progress(function() { bind to newDefer or newDefer.notify })
// deferred.done(function() { bind to newDefer or newDefer.resolve })
// deferred.fail(function() { bind to newDefer or newDefer.reject })
deferred[tuple[1]](function(){var returned=fn&&fn.apply(this,arguments);if(returned&&isFunction(returned.promise)){returned.promise().progress(newDefer.notify).done(newDefer.resolve).fail(newDefer.reject);}else{newDefer[tuple[0]+"With"](this,fn?[returned]:arguments);}});});fns=null;}).promise();},then:function then(onFulfilled,onRejected,onProgress){var maxDepth=0;function resolve(depth,deferred,handler,special){return function(){var that=this,args=arguments,mightThrow=function mightThrow(){var returned,then;// Support: Promises/A+ section 2.3.3.3.3
// https://promisesaplus.com/#point-59
// Ignore double-resolution attempts
if(depth<maxDepth){return;}returned=handler.apply(that,args);// Support: Promises/A+ section 2.3.1
// https://promisesaplus.com/#point-48
if(returned===deferred.promise()){throw new TypeError("Thenable self-resolution");}// Support: Promises/A+ sections 2.3.3.1, 3.5
// https://promisesaplus.com/#point-54
// https://promisesaplus.com/#point-75
// Retrieve `then` only once
then=returned&&(// Support: Promises/A+ section 2.3.4
// https://promisesaplus.com/#point-64
// Only check objects and functions for thenability
_typeof(returned)==="object"||typeof returned==="function")&&returned.then;// Handle a returned thenable
if(isFunction(then)){// Special processors (notify) just wait for resolution
if(special){then.call(returned,resolve(maxDepth,deferred,Identity,special),resolve(maxDepth,deferred,Thrower,special));// Normal processors (resolve) also hook into progress
}else{// ...and disregard older resolution values
maxDepth++;then.call(returned,resolve(maxDepth,deferred,Identity,special),resolve(maxDepth,deferred,Thrower,special),resolve(maxDepth,deferred,Identity,deferred.notifyWith));}// Handle all other returned values
}else{// Only substitute handlers pass on context
// and multiple values (non-spec behavior)
if(handler!==Identity){that=undefined;args=[returned];}// Process the value(s)
// Default process is resolve
(special||deferred.resolveWith)(that,args);}},// Only normal processors (resolve) catch and reject exceptions
process=special?mightThrow:function(){try{mightThrow();}catch(e){if(jQuery.Deferred.exceptionHook){jQuery.Deferred.exceptionHook(e,process.stackTrace);}// Support: Promises/A+ section 2.3.3.3.4.1
// https://promisesaplus.com/#point-61
// Ignore post-resolution exceptions
if(depth+1>=maxDepth){// Only substitute handlers pass on context
// and multiple values (non-spec behavior)
if(handler!==Thrower){that=undefined;args=[e];}deferred.rejectWith(that,args);}}};// Support: Promises/A+ section 2.3.3.3.1
// https://promisesaplus.com/#point-57
// Re-resolve promises immediately to dodge false rejection from
// subsequent errors
if(depth){process();}else{// Call an optional hook to record the stack, in case of exception
// since it's otherwise lost when execution goes async
if(jQuery.Deferred.getStackHook){process.stackTrace=jQuery.Deferred.getStackHook();}window.setTimeout(process);}};}return jQuery.Deferred(function(newDefer){// progress_handlers.add( ... )
tuples[0][3].add(resolve(0,newDefer,isFunction(onProgress)?onProgress:Identity,newDefer.notifyWith));// fulfilled_handlers.add( ... )
tuples[1][3].add(resolve(0,newDefer,isFunction(onFulfilled)?onFulfilled:Identity));// rejected_handlers.add( ... )
tuples[2][3].add(resolve(0,newDefer,isFunction(onRejected)?onRejected:Thrower));}).promise();},// Get a promise for this deferred
// If obj is provided, the promise aspect is added to the object
promise:function promise(obj){return obj!=null?jQuery.extend(obj,_promise):_promise;}},deferred={};// Add list-specific methods
jQuery.each(tuples,function(i,tuple){var list=tuple[2],stateString=tuple[5];// promise.progress = list.add
// promise.done = list.add
// promise.fail = list.add
_promise[tuple[1]]=list.add;// Handle state
if(stateString){list.add(function(){// state = "resolved" (i.e., fulfilled)
// state = "rejected"
_state=stateString;},// rejected_callbacks.disable
// fulfilled_callbacks.disable
tuples[3-i][2].disable,// rejected_handlers.disable
// fulfilled_handlers.disable
tuples[3-i][3].disable,// progress_callbacks.lock
tuples[0][2].lock,// progress_handlers.lock
tuples[0][3].lock);}// progress_handlers.fire
// fulfilled_handlers.fire
// rejected_handlers.fire
list.add(tuple[3].fire);// deferred.notify = function() { deferred.notifyWith(...) }
// deferred.resolve = function() { deferred.resolveWith(...) }
// deferred.reject = function() { deferred.rejectWith(...) }
deferred[tuple[0]]=function(){deferred[tuple[0]+"With"](this===deferred?undefined:this,arguments);return this;};// deferred.notifyWith = list.fireWith
// deferred.resolveWith = list.fireWith
// deferred.rejectWith = list.fireWith
deferred[tuple[0]+"With"]=list.fireWith;});// Make the deferred a promise
_promise.promise(deferred);// Call given func if any
if(func){func.call(deferred,deferred);}// All done!
return deferred;},// Deferred helper
when:function when(singleValue){var// count of uncompleted subordinates
remaining=arguments.length,// count of unprocessed arguments
i=remaining,// subordinate fulfillment data
resolveContexts=Array(i),resolveValues=_slice.call(arguments),// the master Deferred
master=jQuery.Deferred(),// subordinate callback factory
updateFunc=function updateFunc(i){return function(value){resolveContexts[i]=this;resolveValues[i]=arguments.length>1?_slice.call(arguments):value;if(! --remaining){master.resolveWith(resolveContexts,resolveValues);}};};// Single- and empty arguments are adopted like Promise.resolve
if(remaining<=1){adoptValue(singleValue,master.done(updateFunc(i)).resolve,master.reject,!remaining);// Use .then() to unwrap secondary thenables (cf. gh-3000)
if(master.state()==="pending"||isFunction(resolveValues[i]&&resolveValues[i].then)){return master.then();}}// Multiple arguments are aggregated like Promise.all array elements
while(i--){adoptValue(resolveValues[i],updateFunc(i),master.reject);}return master.promise();}});// These usually indicate a programmer mistake during development,
// warn about them ASAP rather than swallowing them by default.
var rerrorNames=/^(Eval|Internal|Range|Reference|Syntax|Type|URI)Error$/;jQuery.Deferred.exceptionHook=function(error,stack){// Support: IE 8 - 9 only
// Console exists when dev tools are open, which can happen at any time
if(window.console&&window.console.warn&&error&&rerrorNames.test(error.name)){window.console.warn("jQuery.Deferred exception: "+error.message,error.stack,stack);}};jQuery.readyException=function(error){window.setTimeout(function(){throw error;});};// The deferred used on DOM ready
var readyList=jQuery.Deferred();jQuery.fn.ready=function(fn){readyList.then(fn)// Wrap jQuery.readyException in a function so that the lookup
// happens at the time of error handling instead of callback
// registration.
.catch(function(error){jQuery.readyException(error);});return this;};jQuery.extend({// Is the DOM ready to be used? Set to true once it occurs.
isReady:false,// A counter to track how many items to wait for before
// the ready event fires. See #6781
readyWait:1,// Handle when the DOM is ready
ready:function ready(wait){// Abort if there are pending holds or we're already ready
if(wait===true?--jQuery.readyWait:jQuery.isReady){return;}// Remember that the DOM is ready
jQuery.isReady=true;// If a normal DOM Ready event fired, decrement, and wait if need be
if(wait!==true&&--jQuery.readyWait>0){return;}// If there are functions bound, to execute
readyList.resolveWith(document,[jQuery]);}});jQuery.ready.then=readyList.then;// The ready event handler and self cleanup method
function completed(){document.removeEventListener("DOMContentLoaded",completed);window.removeEventListener("load",completed);jQuery.ready();}// Catch cases where $(document).ready() is called
// after the browser event has already occurred.
// Support: IE <=9 - 10 only
// Older IE sometimes signals "interactive" too soon
if(document.readyState==="complete"||document.readyState!=="loading"&&!document.documentElement.doScroll){// Handle it asynchronously to allow scripts the opportunity to delay ready
window.setTimeout(jQuery.ready);}else{// Use the handy event callback
document.addEventListener("DOMContentLoaded",completed);// A fallback to window.onload, that will always work
window.addEventListener("load",completed);}// Multifunctional method to get and set values of a collection
// The value/s can optionally be executed if it's a function
var access=function access(elems,fn,key,value,chainable,emptyGet,raw){var i=0,len=elems.length,bulk=key==null;// Sets many values
if(toType(key)==="object"){chainable=true;for(i in key){access(elems,fn,i,key[i],true,emptyGet,raw);}// Sets one value
}else if(value!==undefined){chainable=true;if(!isFunction(value)){raw=true;}if(bulk){// Bulk operations run against the entire set
if(raw){fn.call(elems,value);fn=null;// ...except when executing function values
}else{bulk=fn;fn=function fn(elem,_key,value){return bulk.call(jQuery(elem),value);};}}if(fn){for(;i<len;i++){fn(elems[i],key,raw?value:value.call(elems[i],i,fn(elems[i],key)));}}}if(chainable){return elems;}// Gets
if(bulk){return fn.call(elems);}return len?fn(elems[0],key):emptyGet;};// Matches dashed string for camelizing
var rmsPrefix=/^-ms-/,rdashAlpha=/-([a-z])/g;// Used by camelCase as callback to replace()
function fcamelCase(_all,letter){return letter.toUpperCase();}// Convert dashed to camelCase; used by the css and data modules
// Support: IE <=9 - 11, Edge 12 - 15
// Microsoft forgot to hump their vendor prefix (#9572)
function camelCase(string){return string.replace(rmsPrefix,"ms-").replace(rdashAlpha,fcamelCase);}var acceptData=function acceptData(owner){// Accepts only:
//  - Node
//    - Node.ELEMENT_NODE
//    - Node.DOCUMENT_NODE
//  - Object
//    - Any
return owner.nodeType===1||owner.nodeType===9||!+owner.nodeType;};function Data(){this.expando=jQuery.expando+Data.uid++;}Data.uid=1;Data.prototype={cache:function cache(owner){// Check if the owner object already has a cache
var value=owner[this.expando];// If not, create one
if(!value){value={};// We can accept data for non-element nodes in modern browsers,
// but we should not, see #8335.
// Always return an empty object.
if(acceptData(owner)){// If it is a node unlikely to be stringify-ed or looped over
// use plain assignment
if(owner.nodeType){owner[this.expando]=value;// Otherwise secure it in a non-enumerable property
// configurable must be true to allow the property to be
// deleted when data is removed
}else{Object.defineProperty(owner,this.expando,{value:value,configurable:true});}}}return value;},set:function set(owner,data,value){var prop,cache=this.cache(owner);// Handle: [ owner, key, value ] args
// Always use camelCase key (gh-2257)
if(typeof data==="string"){cache[camelCase(data)]=value;// Handle: [ owner, { properties } ] args
}else{// Copy the properties one-by-one to the cache object
for(prop in data){cache[camelCase(prop)]=data[prop];}}return cache;},get:function get(owner,key){return key===undefined?this.cache(owner):// Always use camelCase key (gh-2257)
owner[this.expando]&&owner[this.expando][camelCase(key)];},access:function access(owner,key,value){// In cases where either:
//
//   1. No key was specified
//   2. A string key was specified, but no value provided
//
// Take the "read" path and allow the get method to determine
// which value to return, respectively either:
//
//   1. The entire cache object
//   2. The data stored at the key
//
if(key===undefined||key&&typeof key==="string"&&value===undefined){return this.get(owner,key);}// When the key is not a string, or both a key and value
// are specified, set or extend (existing objects) with either:
//
//   1. An object of properties
//   2. A key and value
//
this.set(owner,key,value);// Since the "set" path can have two possible entry points
// return the expected data based on which path was taken[*]
return value!==undefined?value:key;},remove:function remove(owner,key){var i,cache=owner[this.expando];if(cache===undefined){return;}if(key!==undefined){// Support array or space separated string of keys
if(Array.isArray(key)){// If key is an array of keys...
// We always set camelCase keys, so remove that.
key=key.map(camelCase);}else{key=camelCase(key);// If a key with the spaces exists, use it.
// Otherwise, create an array by matching non-whitespace
key=key in cache?[key]:key.match(rnothtmlwhite)||[];}i=key.length;while(i--){delete cache[key[i]];}}// Remove the expando if there's no more data
if(key===undefined||jQuery.isEmptyObject(cache)){// Support: Chrome <=35 - 45
// Webkit & Blink performance suffers when deleting properties
// from DOM nodes, so set to undefined instead
// https://bugs.chromium.org/p/chromium/issues/detail?id=378607 (bug restricted)
if(owner.nodeType){owner[this.expando]=undefined;}else{delete owner[this.expando];}}},hasData:function hasData(owner){var cache=owner[this.expando];return cache!==undefined&&!jQuery.isEmptyObject(cache);}};var dataPriv=new Data();var dataUser=new Data();//	Implementation Summary
//
//	1. Enforce API surface and semantic compatibility with 1.9.x branch
//	2. Improve the module's maintainability by reducing the storage
//		paths to a single mechanism.
//	3. Use the same single mechanism to support "private" and "user" data.
//	4. _Never_ expose "private" data to user code (TODO: Drop _data, _removeData)
//	5. Avoid exposing implementation details on user objects (eg. expando properties)
//	6. Provide a clear path for implementation upgrade to WeakMap in 2014
var rbrace=/^(?:\{[\w\W]*\}|\[[\w\W]*\])$/,rmultiDash=/[A-Z]/g;function getData(data){if(data==="true"){return true;}if(data==="false"){return false;}if(data==="null"){return null;}// Only convert to a number if it doesn't change the string
if(data===+data+""){return+data;}if(rbrace.test(data)){return JSON.parse(data);}return data;}function dataAttr(elem,key,data){var name;// If nothing was found internally, try to fetch any
// data from the HTML5 data-* attribute
if(data===undefined&&elem.nodeType===1){name="data-"+key.replace(rmultiDash,"-$&").toLowerCase();data=elem.getAttribute(name);if(typeof data==="string"){try{data=getData(data);}catch(e){}// Make sure we set the data so it isn't changed later
dataUser.set(elem,key,data);}else{data=undefined;}}return data;}jQuery.extend({hasData:function hasData(elem){return dataUser.hasData(elem)||dataPriv.hasData(elem);},data:function data(elem,name,_data){return dataUser.access(elem,name,_data);},removeData:function removeData(elem,name){dataUser.remove(elem,name);},// TODO: Now that all calls to _data and _removeData have been replaced
// with direct calls to dataPriv methods, these can be deprecated.
_data:function _data(elem,name,data){return dataPriv.access(elem,name,data);},_removeData:function _removeData(elem,name){dataPriv.remove(elem,name);}});jQuery.fn.extend({data:function data(key,value){var i,name,data,elem=this[0],attrs=elem&&elem.attributes;// Gets all values
if(key===undefined){if(this.length){data=dataUser.get(elem);if(elem.nodeType===1&&!dataPriv.get(elem,"hasDataAttrs")){i=attrs.length;while(i--){// Support: IE 11 only
// The attrs elements can be null (#14894)
if(attrs[i]){name=attrs[i].name;if(name.indexOf("data-")===0){name=camelCase(name.slice(5));dataAttr(elem,name,data[name]);}}}dataPriv.set(elem,"hasDataAttrs",true);}}return data;}// Sets multiple values
if(_typeof(key)==="object"){return this.each(function(){dataUser.set(this,key);});}return access(this,function(value){var data;// The calling jQuery object (element matches) is not empty
// (and therefore has an element appears at this[ 0 ]) and the
// `value` parameter was not undefined. An empty jQuery object
// will result in `undefined` for elem = this[ 0 ] which will
// throw an exception if an attempt to read a data cache is made.
if(elem&&value===undefined){// Attempt to get data from the cache
// The key will always be camelCased in Data
data=dataUser.get(elem,key);if(data!==undefined){return data;}// Attempt to "discover" the data in
// HTML5 custom data-* attrs
data=dataAttr(elem,key);if(data!==undefined){return data;}// We tried really hard, but the data doesn't exist.
return;}// Set the data...
this.each(function(){// We always store the camelCased key
dataUser.set(this,key,value);});},null,value,arguments.length>1,null,true);},removeData:function removeData(key){return this.each(function(){dataUser.remove(this,key);});}});jQuery.extend({queue:function queue(elem,type,data){var queue;if(elem){type=(type||"fx")+"queue";queue=dataPriv.get(elem,type);// Speed up dequeue by getting out quickly if this is just a lookup
if(data){if(!queue||Array.isArray(data)){queue=dataPriv.access(elem,type,jQuery.makeArray(data));}else{queue.push(data);}}return queue||[];}},dequeue:function dequeue(elem,type){type=type||"fx";var queue=jQuery.queue(elem,type),startLength=queue.length,fn=queue.shift(),hooks=jQuery._queueHooks(elem,type),next=function next(){jQuery.dequeue(elem,type);};// If the fx queue is dequeued, always remove the progress sentinel
if(fn==="inprogress"){fn=queue.shift();startLength--;}if(fn){// Add a progress sentinel to prevent the fx queue from being
// automatically dequeued
if(type==="fx"){queue.unshift("inprogress");}// Clear up the last queue stop function
delete hooks.stop;fn.call(elem,next,hooks);}if(!startLength&&hooks){hooks.empty.fire();}},// Not public - generate a queueHooks object, or return the current one
_queueHooks:function _queueHooks(elem,type){var key=type+"queueHooks";return dataPriv.get(elem,key)||dataPriv.access(elem,key,{empty:jQuery.Callbacks("once memory").add(function(){dataPriv.remove(elem,[type+"queue",key]);})});}});jQuery.fn.extend({queue:function queue(type,data){var setter=2;if(typeof type!=="string"){data=type;type="fx";setter--;}if(arguments.length<setter){return jQuery.queue(this[0],type);}return data===undefined?this:this.each(function(){var queue=jQuery.queue(this,type,data);// Ensure a hooks for this queue
jQuery._queueHooks(this,type);if(type==="fx"&&queue[0]!=="inprogress"){jQuery.dequeue(this,type);}});},dequeue:function dequeue(type){return this.each(function(){jQuery.dequeue(this,type);});},clearQueue:function clearQueue(type){return this.queue(type||"fx",[]);},// Get a promise resolved when queues of a certain type
// are emptied (fx is the type by default)
promise:function promise(type,obj){var tmp,count=1,defer=jQuery.Deferred(),elements=this,i=this.length,resolve=function resolve(){if(! --count){defer.resolveWith(elements,[elements]);}};if(typeof type!=="string"){obj=type;type=undefined;}type=type||"fx";while(i--){tmp=dataPriv.get(elements[i],type+"queueHooks");if(tmp&&tmp.empty){count++;tmp.empty.add(resolve);}}resolve();return defer.promise(obj);}});var pnum=/[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/.source;var rcssNum=new RegExp("^(?:([+-])=|)("+pnum+")([a-z%]*)$","i");var cssExpand=["Top","Right","Bottom","Left"];var documentElement=document.documentElement;var isAttached=function isAttached(elem){return jQuery.contains(elem.ownerDocument,elem);},composed={composed:true};// Support: IE 9 - 11+, Edge 12 - 18+, iOS 10.0 - 10.2 only
// Check attachment across shadow DOM boundaries when possible (gh-3504)
// Support: iOS 10.0-10.2 only
// Early iOS 10 versions support `attachShadow` but not `getRootNode`,
// leading to errors. We need to check for `getRootNode`.
if(documentElement.getRootNode){isAttached=function isAttached(elem){return jQuery.contains(elem.ownerDocument,elem)||elem.getRootNode(composed)===elem.ownerDocument;};}var isHiddenWithinTree=function isHiddenWithinTree(elem,el){// isHiddenWithinTree might be called from jQuery#filter function;
// in that case, element will be second argument
elem=el||elem;// Inline style trumps all
return elem.style.display==="none"||elem.style.display===""&&// Otherwise, check computed style
// Support: Firefox <=43 - 45
// Disconnected elements can have computed display: none, so first confirm that elem is
// in the document.
isAttached(elem)&&jQuery.css(elem,"display")==="none";};function adjustCSS(elem,prop,valueParts,tween){var adjusted,scale,maxIterations=20,currentValue=tween?function(){return tween.cur();}:function(){return jQuery.css(elem,prop,"");},initial=currentValue(),unit=valueParts&&valueParts[3]||(jQuery.cssNumber[prop]?"":"px"),// Starting value computation is required for potential unit mismatches
initialInUnit=elem.nodeType&&(jQuery.cssNumber[prop]||unit!=="px"&&+initial)&&rcssNum.exec(jQuery.css(elem,prop));if(initialInUnit&&initialInUnit[3]!==unit){// Support: Firefox <=54
// Halve the iteration target value to prevent interference from CSS upper bounds (gh-2144)
initial=initial/2;// Trust units reported by jQuery.css
unit=unit||initialInUnit[3];// Iteratively approximate from a nonzero starting point
initialInUnit=+initial||1;while(maxIterations--){// Evaluate and update our best guess (doubling guesses that zero out).
// Finish if the scale equals or crosses 1 (making the old*new product non-positive).
jQuery.style(elem,prop,initialInUnit+unit);if((1-scale)*(1-(scale=currentValue()/initial||0.5))<=0){maxIterations=0;}initialInUnit=initialInUnit/scale;}initialInUnit=initialInUnit*2;jQuery.style(elem,prop,initialInUnit+unit);// Make sure we update the tween properties later on
valueParts=valueParts||[];}if(valueParts){initialInUnit=+initialInUnit||+initial||0;// Apply relative offset (+=/-=) if specified
adjusted=valueParts[1]?initialInUnit+(valueParts[1]+1)*valueParts[2]:+valueParts[2];if(tween){tween.unit=unit;tween.start=initialInUnit;tween.end=adjusted;}}return adjusted;}var defaultDisplayMap={};function getDefaultDisplay(elem){var temp,doc=elem.ownerDocument,nodeName=elem.nodeName,display=defaultDisplayMap[nodeName];if(display){return display;}temp=doc.body.appendChild(doc.createElement(nodeName));display=jQuery.css(temp,"display");temp.parentNode.removeChild(temp);if(display==="none"){display="block";}defaultDisplayMap[nodeName]=display;return display;}function showHide(elements,show){var display,elem,values=[],index=0,length=elements.length;// Determine new display value for elements that need to change
for(;index<length;index++){elem=elements[index];if(!elem.style){continue;}display=elem.style.display;if(show){// Since we force visibility upon cascade-hidden elements, an immediate (and slow)
// check is required in this first loop unless we have a nonempty display value (either
// inline or about-to-be-restored)
if(display==="none"){values[index]=dataPriv.get(elem,"display")||null;if(!values[index]){elem.style.display="";}}if(elem.style.display===""&&isHiddenWithinTree(elem)){values[index]=getDefaultDisplay(elem);}}else{if(display!=="none"){values[index]="none";// Remember what we're overwriting
dataPriv.set(elem,"display",display);}}}// Set the display of the elements in a second loop to avoid constant reflow
for(index=0;index<length;index++){if(values[index]!=null){elements[index].style.display=values[index];}}return elements;}jQuery.fn.extend({show:function show(){return showHide(this,true);},hide:function hide(){return showHide(this);},toggle:function toggle(state){if(typeof state==="boolean"){return state?this.show():this.hide();}return this.each(function(){if(isHiddenWithinTree(this)){jQuery(this).show();}else{jQuery(this).hide();}});}});var rcheckableType=/^(?:checkbox|radio)$/i;var rtagName=/<([a-z][^\/\0>\x20\t\r\n\f]*)/i;var rscriptType=/^$|^module$|\/(?:java|ecma)script/i;(function(){var fragment=document.createDocumentFragment(),div=fragment.appendChild(document.createElement("div")),input=document.createElement("input");// Support: Android 4.0 - 4.3 only
// Check state lost if the name is set (#11217)
// Support: Windows Web Apps (WWA)
// `name` and `type` must use .setAttribute for WWA (#14901)
input.setAttribute("type","radio");input.setAttribute("checked","checked");input.setAttribute("name","t");div.appendChild(input);// Support: Android <=4.1 only
// Older WebKit doesn't clone checked state correctly in fragments
support.checkClone=div.cloneNode(true).cloneNode(true).lastChild.checked;// Support: IE <=11 only
// Make sure textarea (and checkbox) defaultValue is properly cloned
div.innerHTML="<textarea>x</textarea>";support.noCloneChecked=!!div.cloneNode(true).lastChild.defaultValue;// Support: IE <=9 only
// IE <=9 replaces <option> tags with their contents when inserted outside of
// the select element.
div.innerHTML="<option></option>";support.option=!!div.lastChild;})();// We have to close these tags to support XHTML (#13200)
var wrapMap={// XHTML parsers do not magically insert elements in the
// same way that tag soup parsers do. So we cannot shorten
// this by omitting <tbody> or other required elements.
thead:[1,"<table>","</table>"],col:[2,"<table><colgroup>","</colgroup></table>"],tr:[2,"<table><tbody>","</tbody></table>"],td:[3,"<table><tbody><tr>","</tr></tbody></table>"],_default:[0,"",""]};wrapMap.tbody=wrapMap.tfoot=wrapMap.colgroup=wrapMap.caption=wrapMap.thead;wrapMap.th=wrapMap.td;// Support: IE <=9 only
if(!support.option){wrapMap.optgroup=wrapMap.option=[1,"<select multiple='multiple'>","</select>"];}function getAll(context,tag){// Support: IE <=9 - 11 only
// Use typeof to avoid zero-argument method invocation on host objects (#15151)
var ret;if(typeof context.getElementsByTagName!=="undefined"){ret=context.getElementsByTagName(tag||"*");}else if(typeof context.querySelectorAll!=="undefined"){ret=context.querySelectorAll(tag||"*");}else{ret=[];}if(tag===undefined||tag&&nodeName(context,tag)){return jQuery.merge([context],ret);}return ret;}// Mark scripts as having already been evaluated
function setGlobalEval(elems,refElements){var i=0,l=elems.length;for(;i<l;i++){dataPriv.set(elems[i],"globalEval",!refElements||dataPriv.get(refElements[i],"globalEval"));}}var rhtml=/<|&#?\w+;/;function buildFragment(elems,context,scripts,selection,ignored){var elem,tmp,tag,wrap,attached,j,fragment=context.createDocumentFragment(),nodes=[],i=0,l=elems.length;for(;i<l;i++){elem=elems[i];if(elem||elem===0){// Add nodes directly
if(toType(elem)==="object"){// Support: Android <=4.0 only, PhantomJS 1 only
// push.apply(_, arraylike) throws on ancient WebKit
jQuery.merge(nodes,elem.nodeType?[elem]:elem);// Convert non-html into a text node
}else if(!rhtml.test(elem)){nodes.push(context.createTextNode(elem));// Convert html into DOM nodes
}else{tmp=tmp||fragment.appendChild(context.createElement("div"));// Deserialize a standard representation
tag=(rtagName.exec(elem)||["",""])[1].toLowerCase();wrap=wrapMap[tag]||wrapMap._default;tmp.innerHTML=wrap[1]+jQuery.htmlPrefilter(elem)+wrap[2];// Descend through wrappers to the right content
j=wrap[0];while(j--){tmp=tmp.lastChild;}// Support: Android <=4.0 only, PhantomJS 1 only
// push.apply(_, arraylike) throws on ancient WebKit
jQuery.merge(nodes,tmp.childNodes);// Remember the top-level container
tmp=fragment.firstChild;// Ensure the created nodes are orphaned (#12392)
tmp.textContent="";}}}// Remove wrapper from fragment
fragment.textContent="";i=0;while(elem=nodes[i++]){// Skip elements already in the context collection (trac-4087)
if(selection&&jQuery.inArray(elem,selection)>-1){if(ignored){ignored.push(elem);}continue;}attached=isAttached(elem);// Append to fragment
tmp=getAll(fragment.appendChild(elem),"script");// Preserve script evaluation history
if(attached){setGlobalEval(tmp);}// Capture executables
if(scripts){j=0;while(elem=tmp[j++]){if(rscriptType.test(elem.type||"")){scripts.push(elem);}}}}return fragment;}var rkeyEvent=/^key/,rmouseEvent=/^(?:mouse|pointer|contextmenu|drag|drop)|click/,rtypenamespace=/^([^.]*)(?:\.(.+)|)/;function returnTrue(){return true;}function returnFalse(){return false;}// Support: IE <=9 - 11+
// focus() and blur() are asynchronous, except when they are no-op.
// So expect focus to be synchronous when the element is already active,
// and blur to be synchronous when the element is not already active.
// (focus and blur are always synchronous in other supported browsers,
// this just defines when we can count on it).
function expectSync(elem,type){return elem===safeActiveElement()===(type==="focus");}// Support: IE <=9 only
// Accessing document.activeElement can throw unexpectedly
// https://bugs.jquery.com/ticket/13393
function safeActiveElement(){try{return document.activeElement;}catch(err){}}function _on(elem,types,selector,data,fn,one){var origFn,type;// Types can be a map of types/handlers
if(_typeof(types)==="object"){// ( types-Object, selector, data )
if(typeof selector!=="string"){// ( types-Object, data )
data=data||selector;selector=undefined;}for(type in types){_on(elem,type,selector,data,types[type],one);}return elem;}if(data==null&&fn==null){// ( types, fn )
fn=selector;data=selector=undefined;}else if(fn==null){if(typeof selector==="string"){// ( types, selector, fn )
fn=data;data=undefined;}else{// ( types, data, fn )
fn=data;data=selector;selector=undefined;}}if(fn===false){fn=returnFalse;}else if(!fn){return elem;}if(one===1){origFn=fn;fn=function fn(event){// Can use an empty set, since event contains the info
jQuery().off(event);return origFn.apply(this,arguments);};// Use same guid so caller can remove using origFn
fn.guid=origFn.guid||(origFn.guid=jQuery.guid++);}return elem.each(function(){jQuery.event.add(this,types,fn,data,selector);});}/*
 * Helper functions for managing events -- not part of the public interface.
 * Props to Dean Edwards' addEvent library for many of the ideas.
 */jQuery.event={global:{},add:function add(elem,types,handler,data,selector){var handleObjIn,eventHandle,tmp,events,t,handleObj,special,handlers,type,namespaces,origType,elemData=dataPriv.get(elem);// Only attach events to objects that accept data
if(!acceptData(elem)){return;}// Caller can pass in an object of custom data in lieu of the handler
if(handler.handler){handleObjIn=handler;handler=handleObjIn.handler;selector=handleObjIn.selector;}// Ensure that invalid selectors throw exceptions at attach time
// Evaluate against documentElement in case elem is a non-element node (e.g., document)
if(selector){jQuery.find.matchesSelector(documentElement,selector);}// Make sure that the handler has a unique ID, used to find/remove it later
if(!handler.guid){handler.guid=jQuery.guid++;}// Init the element's event structure and main handler, if this is the first
if(!(events=elemData.events)){events=elemData.events=Object.create(null);}if(!(eventHandle=elemData.handle)){eventHandle=elemData.handle=function(e){// Discard the second event of a jQuery.event.trigger() and
// when an event is called after a page has unloaded
return typeof jQuery!=="undefined"&&jQuery.event.triggered!==e.type?jQuery.event.dispatch.apply(elem,arguments):undefined;};}// Handle multiple events separated by a space
types=(types||"").match(rnothtmlwhite)||[""];t=types.length;while(t--){tmp=rtypenamespace.exec(types[t])||[];type=origType=tmp[1];namespaces=(tmp[2]||"").split(".").sort();// There *must* be a type, no attaching namespace-only handlers
if(!type){continue;}// If event changes its type, use the special event handlers for the changed type
special=jQuery.event.special[type]||{};// If selector defined, determine special event api type, otherwise given type
type=(selector?special.delegateType:special.bindType)||type;// Update special based on newly reset type
special=jQuery.event.special[type]||{};// handleObj is passed to all event handlers
handleObj=jQuery.extend({type:type,origType:origType,data:data,handler:handler,guid:handler.guid,selector:selector,needsContext:selector&&jQuery.expr.match.needsContext.test(selector),namespace:namespaces.join(".")},handleObjIn);// Init the event handler queue if we're the first
if(!(handlers=events[type])){handlers=events[type]=[];handlers.delegateCount=0;// Only use addEventListener if the special events handler returns false
if(!special.setup||special.setup.call(elem,data,namespaces,eventHandle)===false){if(elem.addEventListener){elem.addEventListener(type,eventHandle);}}}if(special.add){special.add.call(elem,handleObj);if(!handleObj.handler.guid){handleObj.handler.guid=handler.guid;}}// Add to the element's handler list, delegates in front
if(selector){handlers.splice(handlers.delegateCount++,0,handleObj);}else{handlers.push(handleObj);}// Keep track of which events have ever been used, for event optimization
jQuery.event.global[type]=true;}},// Detach an event or set of events from an element
remove:function remove(elem,types,handler,selector,mappedTypes){var j,origCount,tmp,events,t,handleObj,special,handlers,type,namespaces,origType,elemData=dataPriv.hasData(elem)&&dataPriv.get(elem);if(!elemData||!(events=elemData.events)){return;}// Once for each type.namespace in types; type may be omitted
types=(types||"").match(rnothtmlwhite)||[""];t=types.length;while(t--){tmp=rtypenamespace.exec(types[t])||[];type=origType=tmp[1];namespaces=(tmp[2]||"").split(".").sort();// Unbind all events (on this namespace, if provided) for the element
if(!type){for(type in events){jQuery.event.remove(elem,type+types[t],handler,selector,true);}continue;}special=jQuery.event.special[type]||{};type=(selector?special.delegateType:special.bindType)||type;handlers=events[type]||[];tmp=tmp[2]&&new RegExp("(^|\\.)"+namespaces.join("\\.(?:.*\\.|)")+"(\\.|$)");// Remove matching events
origCount=j=handlers.length;while(j--){handleObj=handlers[j];if((mappedTypes||origType===handleObj.origType)&&(!handler||handler.guid===handleObj.guid)&&(!tmp||tmp.test(handleObj.namespace))&&(!selector||selector===handleObj.selector||selector==="**"&&handleObj.selector)){handlers.splice(j,1);if(handleObj.selector){handlers.delegateCount--;}if(special.remove){special.remove.call(elem,handleObj);}}}// Remove generic event handler if we removed something and no more handlers exist
// (avoids potential for endless recursion during removal of special event handlers)
if(origCount&&!handlers.length){if(!special.teardown||special.teardown.call(elem,namespaces,elemData.handle)===false){jQuery.removeEvent(elem,type,elemData.handle);}delete events[type];}}// Remove data and the expando if it's no longer used
if(jQuery.isEmptyObject(events)){dataPriv.remove(elem,"handle events");}},dispatch:function dispatch(nativeEvent){var i,j,ret,matched,handleObj,handlerQueue,args=new Array(arguments.length),// Make a writable jQuery.Event from the native event object
event=jQuery.event.fix(nativeEvent),handlers=(dataPriv.get(this,"events")||Object.create(null))[event.type]||[],special=jQuery.event.special[event.type]||{};// Use the fix-ed jQuery.Event rather than the (read-only) native event
args[0]=event;for(i=1;i<arguments.length;i++){args[i]=arguments[i];}event.delegateTarget=this;// Call the preDispatch hook for the mapped type, and let it bail if desired
if(special.preDispatch&&special.preDispatch.call(this,event)===false){return;}// Determine handlers
handlerQueue=jQuery.event.handlers.call(this,event,handlers);// Run delegates first; they may want to stop propagation beneath us
i=0;while((matched=handlerQueue[i++])&&!event.isPropagationStopped()){event.currentTarget=matched.elem;j=0;while((handleObj=matched.handlers[j++])&&!event.isImmediatePropagationStopped()){// If the event is namespaced, then each handler is only invoked if it is
// specially universal or its namespaces are a superset of the event's.
if(!event.rnamespace||handleObj.namespace===false||event.rnamespace.test(handleObj.namespace)){event.handleObj=handleObj;event.data=handleObj.data;ret=((jQuery.event.special[handleObj.origType]||{}).handle||handleObj.handler).apply(matched.elem,args);if(ret!==undefined){if((event.result=ret)===false){event.preventDefault();event.stopPropagation();}}}}}// Call the postDispatch hook for the mapped type
if(special.postDispatch){special.postDispatch.call(this,event);}return event.result;},handlers:function handlers(event,_handlers){var i,handleObj,sel,matchedHandlers,matchedSelectors,handlerQueue=[],delegateCount=_handlers.delegateCount,cur=event.target;// Find delegate handlers
if(delegateCount&&// Support: IE <=9
// Black-hole SVG <use> instance trees (trac-13180)
cur.nodeType&&// Support: Firefox <=42
// Suppress spec-violating clicks indicating a non-primary pointer button (trac-3861)
// https://www.w3.org/TR/DOM-Level-3-Events/#event-type-click
// Support: IE 11 only
// ...but not arrow key "clicks" of radio inputs, which can have `button` -1 (gh-2343)
!(event.type==="click"&&event.button>=1)){for(;cur!==this;cur=cur.parentNode||this){// Don't check non-elements (#13208)
// Don't process clicks on disabled elements (#6911, #8165, #11382, #11764)
if(cur.nodeType===1&&!(event.type==="click"&&cur.disabled===true)){matchedHandlers=[];matchedSelectors={};for(i=0;i<delegateCount;i++){handleObj=_handlers[i];// Don't conflict with Object.prototype properties (#13203)
sel=handleObj.selector+" ";if(matchedSelectors[sel]===undefined){matchedSelectors[sel]=handleObj.needsContext?jQuery(sel,this).index(cur)>-1:jQuery.find(sel,this,null,[cur]).length;}if(matchedSelectors[sel]){matchedHandlers.push(handleObj);}}if(matchedHandlers.length){handlerQueue.push({elem:cur,handlers:matchedHandlers});}}}}// Add the remaining (directly-bound) handlers
cur=this;if(delegateCount<_handlers.length){handlerQueue.push({elem:cur,handlers:_handlers.slice(delegateCount)});}return handlerQueue;},addProp:function addProp(name,hook){Object.defineProperty(jQuery.Event.prototype,name,{enumerable:true,configurable:true,get:isFunction(hook)?function(){if(this.originalEvent){return hook(this.originalEvent);}}:function(){if(this.originalEvent){return this.originalEvent[name];}},set:function set(value){Object.defineProperty(this,name,{enumerable:true,configurable:true,writable:true,value:value});}});},fix:function fix(originalEvent){return originalEvent[jQuery.expando]?originalEvent:new jQuery.Event(originalEvent);},special:{load:{// Prevent triggered image.load events from bubbling to window.load
noBubble:true},click:{// Utilize native event to ensure correct state for checkable inputs
setup:function setup(data){// For mutual compressibility with _default, replace `this` access with a local var.
// `|| data` is dead code meant only to preserve the variable through minification.
var el=this||data;// Claim the first handler
if(rcheckableType.test(el.type)&&el.click&&nodeName(el,"input")){// dataPriv.set( el, "click", ... )
leverageNative(el,"click",returnTrue);}// Return false to allow normal processing in the caller
return false;},trigger:function trigger(data){// For mutual compressibility with _default, replace `this` access with a local var.
// `|| data` is dead code meant only to preserve the variable through minification.
var el=this||data;// Force setup before triggering a click
if(rcheckableType.test(el.type)&&el.click&&nodeName(el,"input")){leverageNative(el,"click");}// Return non-false to allow normal event-path propagation
return true;},// For cross-browser consistency, suppress native .click() on links
// Also prevent it if we're currently inside a leveraged native-event stack
_default:function _default(event){var target=event.target;return rcheckableType.test(target.type)&&target.click&&nodeName(target,"input")&&dataPriv.get(target,"click")||nodeName(target,"a");}},beforeunload:{postDispatch:function postDispatch(event){// Support: Firefox 20+
// Firefox doesn't alert if the returnValue field is not set.
if(event.result!==undefined&&event.originalEvent){event.originalEvent.returnValue=event.result;}}}}};// Ensure the presence of an event listener that handles manually-triggered
// synthetic events by interrupting progress until reinvoked in response to
// *native* events that it fires directly, ensuring that state changes have
// already occurred before other listeners are invoked.
function leverageNative(el,type,expectSync){// Missing expectSync indicates a trigger call, which must force setup through jQuery.event.add
if(!expectSync){if(dataPriv.get(el,type)===undefined){jQuery.event.add(el,type,returnTrue);}return;}// Register the controller as a special universal handler for all event namespaces
dataPriv.set(el,type,false);jQuery.event.add(el,type,{namespace:false,handler:function handler(event){var notAsync,result,saved=dataPriv.get(this,type);if(event.isTrigger&1&&this[type]){// Interrupt processing of the outer synthetic .trigger()ed event
// Saved data should be false in such cases, but might be a leftover capture object
// from an async native handler (gh-4350)
if(!saved.length){// Store arguments for use when handling the inner native event
// There will always be at least one argument (an event object), so this array
// will not be confused with a leftover capture object.
saved=_slice.call(arguments);dataPriv.set(this,type,saved);// Trigger the native event and capture its result
// Support: IE <=9 - 11+
// focus() and blur() are asynchronous
notAsync=expectSync(this,type);this[type]();result=dataPriv.get(this,type);if(saved!==result||notAsync){dataPriv.set(this,type,false);}else{result={};}if(saved!==result){// Cancel the outer synthetic event
event.stopImmediatePropagation();event.preventDefault();return result.value;}// If this is an inner synthetic event for an event with a bubbling surrogate
// (focus or blur), assume that the surrogate already propagated from triggering the
// native event and prevent that from happening again here.
// This technically gets the ordering wrong w.r.t. to `.trigger()` (in which the
// bubbling surrogate propagates *after* the non-bubbling base), but that seems
// less bad than duplication.
}else if((jQuery.event.special[type]||{}).delegateType){event.stopPropagation();}// If this is a native event triggered above, everything is now in order
// Fire an inner synthetic event with the original arguments
}else if(saved.length){// ...and capture the result
dataPriv.set(this,type,{value:jQuery.event.trigger(// Support: IE <=9 - 11+
// Extend with the prototype to reset the above stopImmediatePropagation()
jQuery.extend(saved[0],jQuery.Event.prototype),saved.slice(1),this)});// Abort handling of the native event
event.stopImmediatePropagation();}}});}jQuery.removeEvent=function(elem,type,handle){// This "if" is needed for plain objects
if(elem.removeEventListener){elem.removeEventListener(type,handle);}};jQuery.Event=function(src,props){// Allow instantiation without the 'new' keyword
if(!(this instanceof jQuery.Event)){return new jQuery.Event(src,props);}// Event object
if(src&&src.type){this.originalEvent=src;this.type=src.type;// Events bubbling up the document may have been marked as prevented
// by a handler lower down the tree; reflect the correct value.
this.isDefaultPrevented=src.defaultPrevented||src.defaultPrevented===undefined&&// Support: Android <=2.3 only
src.returnValue===false?returnTrue:returnFalse;// Create target properties
// Support: Safari <=6 - 7 only
// Target should not be a text node (#504, #13143)
this.target=src.target&&src.target.nodeType===3?src.target.parentNode:src.target;this.currentTarget=src.currentTarget;this.relatedTarget=src.relatedTarget;// Event type
}else{this.type=src;}// Put explicitly provided properties onto the event object
if(props){jQuery.extend(this,props);}// Create a timestamp if incoming event doesn't have one
this.timeStamp=src&&src.timeStamp||Date.now();// Mark it as fixed
this[jQuery.expando]=true;};// jQuery.Event is based on DOM3 Events as specified by the ECMAScript Language Binding
// https://www.w3.org/TR/2003/WD-DOM-Level-3-Events-20030331/ecma-script-binding.html
jQuery.Event.prototype={constructor:jQuery.Event,isDefaultPrevented:returnFalse,isPropagationStopped:returnFalse,isImmediatePropagationStopped:returnFalse,isSimulated:false,preventDefault:function preventDefault(){var e=this.originalEvent;this.isDefaultPrevented=returnTrue;if(e&&!this.isSimulated){e.preventDefault();}},stopPropagation:function stopPropagation(){var e=this.originalEvent;this.isPropagationStopped=returnTrue;if(e&&!this.isSimulated){e.stopPropagation();}},stopImmediatePropagation:function stopImmediatePropagation(){var e=this.originalEvent;this.isImmediatePropagationStopped=returnTrue;if(e&&!this.isSimulated){e.stopImmediatePropagation();}this.stopPropagation();}};// Includes all common event props including KeyEvent and MouseEvent specific props
jQuery.each({altKey:true,bubbles:true,cancelable:true,changedTouches:true,ctrlKey:true,detail:true,eventPhase:true,metaKey:true,pageX:true,pageY:true,shiftKey:true,view:true,"char":true,code:true,charCode:true,key:true,keyCode:true,button:true,buttons:true,clientX:true,clientY:true,offsetX:true,offsetY:true,pointerId:true,pointerType:true,screenX:true,screenY:true,targetTouches:true,toElement:true,touches:true,which:function which(event){var button=event.button;// Add which for key events
if(event.which==null&&rkeyEvent.test(event.type)){return event.charCode!=null?event.charCode:event.keyCode;}// Add which for click: 1 === left; 2 === middle; 3 === right
if(!event.which&&button!==undefined&&rmouseEvent.test(event.type)){if(button&1){return 1;}if(button&2){return 3;}if(button&4){return 2;}return 0;}return event.which;}},jQuery.event.addProp);jQuery.each({focus:"focusin",blur:"focusout"},function(type,delegateType){jQuery.event.special[type]={// Utilize native event if possible so blur/focus sequence is correct
setup:function setup(){// Claim the first handler
// dataPriv.set( this, "focus", ... )
// dataPriv.set( this, "blur", ... )
leverageNative(this,type,expectSync);// Return false to allow normal processing in the caller
return false;},trigger:function trigger(){// Force setup before trigger
leverageNative(this,type);// Return non-false to allow normal event-path propagation
return true;},delegateType:delegateType};});// Create mouseenter/leave events using mouseover/out and event-time checks
// so that event delegation works in jQuery.
// Do the same for pointerenter/pointerleave and pointerover/pointerout
//
// Support: Safari 7 only
// Safari sends mouseenter too often; see:
// https://bugs.chromium.org/p/chromium/issues/detail?id=470258
// for the description of the bug (it existed in older Chrome versions as well).
jQuery.each({mouseenter:"mouseover",mouseleave:"mouseout",pointerenter:"pointerover",pointerleave:"pointerout"},function(orig,fix){jQuery.event.special[orig]={delegateType:fix,bindType:fix,handle:function handle(event){var ret,target=this,related=event.relatedTarget,handleObj=event.handleObj;// For mouseenter/leave call the handler if related is outside the target.
// NB: No relatedTarget if the mouse left/entered the browser window
if(!related||related!==target&&!jQuery.contains(target,related)){event.type=handleObj.origType;ret=handleObj.handler.apply(this,arguments);event.type=fix;}return ret;}};});jQuery.fn.extend({on:function on(types,selector,data,fn){return _on(this,types,selector,data,fn);},one:function one(types,selector,data,fn){return _on(this,types,selector,data,fn,1);},off:function off(types,selector,fn){var handleObj,type;if(types&&types.preventDefault&&types.handleObj){// ( event )  dispatched jQuery.Event
handleObj=types.handleObj;jQuery(types.delegateTarget).off(handleObj.namespace?handleObj.origType+"."+handleObj.namespace:handleObj.origType,handleObj.selector,handleObj.handler);return this;}if(_typeof(types)==="object"){// ( types-object [, selector] )
for(type in types){this.off(type,selector,types[type]);}return this;}if(selector===false||typeof selector==="function"){// ( types [, fn] )
fn=selector;selector=undefined;}if(fn===false){fn=returnFalse;}return this.each(function(){jQuery.event.remove(this,types,fn,selector);});}});var// Support: IE <=10 - 11, Edge 12 - 13 only
// In IE/Edge using regex groups here causes severe slowdowns.
// See https://connect.microsoft.com/IE/feedback/details/1736512/
rnoInnerhtml=/<script|<style|<link/i,// checked="checked" or checked
rchecked=/checked\s*(?:[^=]|=\s*.checked.)/i,rcleanScript=/^\s*<!(?:\[CDATA\[|--)|(?:\]\]|--)>\s*$/g;// Prefer a tbody over its parent table for containing new rows
function manipulationTarget(elem,content){if(nodeName(elem,"table")&&nodeName(content.nodeType!==11?content:content.firstChild,"tr")){return jQuery(elem).children("tbody")[0]||elem;}return elem;}// Replace/restore the type attribute of script elements for safe DOM manipulation
function disableScript(elem){elem.type=(elem.getAttribute("type")!==null)+"/"+elem.type;return elem;}function restoreScript(elem){if((elem.type||"").slice(0,5)==="true/"){elem.type=elem.type.slice(5);}else{elem.removeAttribute("type");}return elem;}function cloneCopyEvent(src,dest){var i,l,type,pdataOld,udataOld,udataCur,events;if(dest.nodeType!==1){return;}// 1. Copy private data: events, handlers, etc.
if(dataPriv.hasData(src)){pdataOld=dataPriv.get(src);events=pdataOld.events;if(events){dataPriv.remove(dest,"handle events");for(type in events){for(i=0,l=events[type].length;i<l;i++){jQuery.event.add(dest,type,events[type][i]);}}}}// 2. Copy user data
if(dataUser.hasData(src)){udataOld=dataUser.access(src);udataCur=jQuery.extend({},udataOld);dataUser.set(dest,udataCur);}}// Fix IE bugs, see support tests
function fixInput(src,dest){var nodeName=dest.nodeName.toLowerCase();// Fails to persist the checked state of a cloned checkbox or radio button.
if(nodeName==="input"&&rcheckableType.test(src.type)){dest.checked=src.checked;// Fails to return the selected option to the default selected state when cloning options
}else if(nodeName==="input"||nodeName==="textarea"){dest.defaultValue=src.defaultValue;}}function domManip(collection,args,callback,ignored){// Flatten any nested arrays
args=flat(args);var fragment,first,scripts,hasScripts,node,doc,i=0,l=collection.length,iNoClone=l-1,value=args[0],valueIsFunction=isFunction(value);// We can't cloneNode fragments that contain checked, in WebKit
if(valueIsFunction||l>1&&typeof value==="string"&&!support.checkClone&&rchecked.test(value)){return collection.each(function(index){var self=collection.eq(index);if(valueIsFunction){args[0]=value.call(this,index,self.html());}domManip(self,args,callback,ignored);});}if(l){fragment=buildFragment(args,collection[0].ownerDocument,false,collection,ignored);first=fragment.firstChild;if(fragment.childNodes.length===1){fragment=first;}// Require either new content or an interest in ignored elements to invoke the callback
if(first||ignored){scripts=jQuery.map(getAll(fragment,"script"),disableScript);hasScripts=scripts.length;// Use the original fragment for the last item
// instead of the first because it can end up
// being emptied incorrectly in certain situations (#8070).
for(;i<l;i++){node=fragment;if(i!==iNoClone){node=jQuery.clone(node,true,true);// Keep references to cloned scripts for later restoration
if(hasScripts){// Support: Android <=4.0 only, PhantomJS 1 only
// push.apply(_, arraylike) throws on ancient WebKit
jQuery.merge(scripts,getAll(node,"script"));}}callback.call(collection[i],node,i);}if(hasScripts){doc=scripts[scripts.length-1].ownerDocument;// Reenable scripts
jQuery.map(scripts,restoreScript);// Evaluate executable scripts on first document insertion
for(i=0;i<hasScripts;i++){node=scripts[i];if(rscriptType.test(node.type||"")&&!dataPriv.access(node,"globalEval")&&jQuery.contains(doc,node)){if(node.src&&(node.type||"").toLowerCase()!=="module"){// Optional AJAX dependency, but won't run scripts if not present
if(jQuery._evalUrl&&!node.noModule){jQuery._evalUrl(node.src,{nonce:node.nonce||node.getAttribute("nonce")},doc);}}else{DOMEval(node.textContent.replace(rcleanScript,""),node,doc);}}}}}}return collection;}function _remove(elem,selector,keepData){var node,nodes=selector?jQuery.filter(selector,elem):elem,i=0;for(;(node=nodes[i])!=null;i++){if(!keepData&&node.nodeType===1){jQuery.cleanData(getAll(node));}if(node.parentNode){if(keepData&&isAttached(node)){setGlobalEval(getAll(node,"script"));}node.parentNode.removeChild(node);}}return elem;}jQuery.extend({htmlPrefilter:function htmlPrefilter(html){return html;},clone:function clone(elem,dataAndEvents,deepDataAndEvents){var i,l,srcElements,destElements,clone=elem.cloneNode(true),inPage=isAttached(elem);// Fix IE cloning issues
if(!support.noCloneChecked&&(elem.nodeType===1||elem.nodeType===11)&&!jQuery.isXMLDoc(elem)){// We eschew Sizzle here for performance reasons: https://jsperf.com/getall-vs-sizzle/2
destElements=getAll(clone);srcElements=getAll(elem);for(i=0,l=srcElements.length;i<l;i++){fixInput(srcElements[i],destElements[i]);}}// Copy the events from the original to the clone
if(dataAndEvents){if(deepDataAndEvents){srcElements=srcElements||getAll(elem);destElements=destElements||getAll(clone);for(i=0,l=srcElements.length;i<l;i++){cloneCopyEvent(srcElements[i],destElements[i]);}}else{cloneCopyEvent(elem,clone);}}// Preserve script evaluation history
destElements=getAll(clone,"script");if(destElements.length>0){setGlobalEval(destElements,!inPage&&getAll(elem,"script"));}// Return the cloned set
return clone;},cleanData:function cleanData(elems){var data,elem,type,special=jQuery.event.special,i=0;for(;(elem=elems[i])!==undefined;i++){if(acceptData(elem)){if(data=elem[dataPriv.expando]){if(data.events){for(type in data.events){if(special[type]){jQuery.event.remove(elem,type);// This is a shortcut to avoid jQuery.event.remove's overhead
}else{jQuery.removeEvent(elem,type,data.handle);}}}// Support: Chrome <=35 - 45+
// Assign undefined instead of using delete, see Data#remove
elem[dataPriv.expando]=undefined;}if(elem[dataUser.expando]){// Support: Chrome <=35 - 45+
// Assign undefined instead of using delete, see Data#remove
elem[dataUser.expando]=undefined;}}}}});jQuery.fn.extend({detach:function detach(selector){return _remove(this,selector,true);},remove:function remove(selector){return _remove(this,selector);},text:function text(value){return access(this,function(value){return value===undefined?jQuery.text(this):this.empty().each(function(){if(this.nodeType===1||this.nodeType===11||this.nodeType===9){this.textContent=value;}});},null,value,arguments.length);},append:function append(){return domManip(this,arguments,function(elem){if(this.nodeType===1||this.nodeType===11||this.nodeType===9){var target=manipulationTarget(this,elem);target.appendChild(elem);}});},prepend:function prepend(){return domManip(this,arguments,function(elem){if(this.nodeType===1||this.nodeType===11||this.nodeType===9){var target=manipulationTarget(this,elem);target.insertBefore(elem,target.firstChild);}});},before:function before(){return domManip(this,arguments,function(elem){if(this.parentNode){this.parentNode.insertBefore(elem,this);}});},after:function after(){return domManip(this,arguments,function(elem){if(this.parentNode){this.parentNode.insertBefore(elem,this.nextSibling);}});},empty:function empty(){var elem,i=0;for(;(elem=this[i])!=null;i++){if(elem.nodeType===1){// Prevent memory leaks
jQuery.cleanData(getAll(elem,false));// Remove any remaining nodes
elem.textContent="";}}return this;},clone:function clone(dataAndEvents,deepDataAndEvents){dataAndEvents=dataAndEvents==null?false:dataAndEvents;deepDataAndEvents=deepDataAndEvents==null?dataAndEvents:deepDataAndEvents;return this.map(function(){return jQuery.clone(this,dataAndEvents,deepDataAndEvents);});},html:function html(value){return access(this,function(value){var elem=this[0]||{},i=0,l=this.length;if(value===undefined&&elem.nodeType===1){return elem.innerHTML;}// See if we can take a shortcut and just use innerHTML
if(typeof value==="string"&&!rnoInnerhtml.test(value)&&!wrapMap[(rtagName.exec(value)||["",""])[1].toLowerCase()]){value=jQuery.htmlPrefilter(value);try{for(;i<l;i++){elem=this[i]||{};// Remove element nodes and prevent memory leaks
if(elem.nodeType===1){jQuery.cleanData(getAll(elem,false));elem.innerHTML=value;}}elem=0;// If using innerHTML throws an exception, use the fallback method
}catch(e){}}if(elem){this.empty().append(value);}},null,value,arguments.length);},replaceWith:function replaceWith(){var ignored=[];// Make the changes, replacing each non-ignored context element with the new content
return domManip(this,arguments,function(elem){var parent=this.parentNode;if(jQuery.inArray(this,ignored)<0){jQuery.cleanData(getAll(this));if(parent){parent.replaceChild(elem,this);}}// Force callback invocation
},ignored);}});jQuery.each({appendTo:"append",prependTo:"prepend",insertBefore:"before",insertAfter:"after",replaceAll:"replaceWith"},function(name,original){jQuery.fn[name]=function(selector){var elems,ret=[],insert=jQuery(selector),last=insert.length-1,i=0;for(;i<=last;i++){elems=i===last?this:this.clone(true);jQuery(insert[i])[original](elems);// Support: Android <=4.0 only, PhantomJS 1 only
// .get() because push.apply(_, arraylike) throws on ancient WebKit
push.apply(ret,elems.get());}return this.pushStack(ret);};});var rnumnonpx=new RegExp("^("+pnum+")(?!px)[a-z%]+$","i");var getStyles=function getStyles(elem){// Support: IE <=11 only, Firefox <=30 (#15098, #14150)
// IE throws on elements created in popups
// FF meanwhile throws on frame elements through "defaultView.getComputedStyle"
var view=elem.ownerDocument.defaultView;if(!view||!view.opener){view=window;}return view.getComputedStyle(elem);};var swap=function swap(elem,options,callback){var ret,name,old={};// Remember the old values, and insert the new ones
for(name in options){old[name]=elem.style[name];elem.style[name]=options[name];}ret=callback.call(elem);// Revert the old values
for(name in options){elem.style[name]=old[name];}return ret;};var rboxStyle=new RegExp(cssExpand.join("|"),"i");(function(){// Executing both pixelPosition & boxSizingReliable tests require only one layout
// so they're executed at the same time to save the second computation.
function computeStyleTests(){// This is a singleton, we need to execute it only once
if(!div){return;}container.style.cssText="position:absolute;left:-11111px;width:60px;"+"margin-top:1px;padding:0;border:0";div.style.cssText="position:relative;display:block;box-sizing:border-box;overflow:scroll;"+"margin:auto;border:1px;padding:1px;"+"width:60%;top:1%";documentElement.appendChild(container).appendChild(div);var divStyle=window.getComputedStyle(div);pixelPositionVal=divStyle.top!=="1%";// Support: Android 4.0 - 4.3 only, Firefox <=3 - 44
reliableMarginLeftVal=roundPixelMeasures(divStyle.marginLeft)===12;// Support: Android 4.0 - 4.3 only, Safari <=9.1 - 10.1, iOS <=7.0 - 9.3
// Some styles come back with percentage values, even though they shouldn't
div.style.right="60%";pixelBoxStylesVal=roundPixelMeasures(divStyle.right)===36;// Support: IE 9 - 11 only
// Detect misreporting of content dimensions for box-sizing:border-box elements
boxSizingReliableVal=roundPixelMeasures(divStyle.width)===36;// Support: IE 9 only
// Detect overflow:scroll screwiness (gh-3699)
// Support: Chrome <=64
// Don't get tricked when zoom affects offsetWidth (gh-4029)
div.style.position="absolute";scrollboxSizeVal=roundPixelMeasures(div.offsetWidth/3)===12;documentElement.removeChild(container);// Nullify the div so it wouldn't be stored in the memory and
// it will also be a sign that checks already performed
div=null;}function roundPixelMeasures(measure){return Math.round(parseFloat(measure));}var pixelPositionVal,boxSizingReliableVal,scrollboxSizeVal,pixelBoxStylesVal,reliableTrDimensionsVal,reliableMarginLeftVal,container=document.createElement("div"),div=document.createElement("div");// Finish early in limited (non-browser) environments
if(!div.style){return;}// Support: IE <=9 - 11 only
// Style of cloned element affects source element cloned (#8908)
div.style.backgroundClip="content-box";div.cloneNode(true).style.backgroundClip="";support.clearCloneStyle=div.style.backgroundClip==="content-box";jQuery.extend(support,{boxSizingReliable:function boxSizingReliable(){computeStyleTests();return boxSizingReliableVal;},pixelBoxStyles:function pixelBoxStyles(){computeStyleTests();return pixelBoxStylesVal;},pixelPosition:function pixelPosition(){computeStyleTests();return pixelPositionVal;},reliableMarginLeft:function reliableMarginLeft(){computeStyleTests();return reliableMarginLeftVal;},scrollboxSize:function scrollboxSize(){computeStyleTests();return scrollboxSizeVal;},// Support: IE 9 - 11+, Edge 15 - 18+
// IE/Edge misreport `getComputedStyle` of table rows with width/height
// set in CSS while `offset*` properties report correct values.
// Behavior in IE 9 is more subtle than in newer versions & it passes
// some versions of this test; make sure not to make it pass there!
reliableTrDimensions:function reliableTrDimensions(){var table,tr,trChild,trStyle;if(reliableTrDimensionsVal==null){table=document.createElement("table");tr=document.createElement("tr");trChild=document.createElement("div");table.style.cssText="position:absolute;left:-11111px";tr.style.height="1px";trChild.style.height="9px";documentElement.appendChild(table).appendChild(tr).appendChild(trChild);trStyle=window.getComputedStyle(tr);reliableTrDimensionsVal=parseInt(trStyle.height)>3;documentElement.removeChild(table);}return reliableTrDimensionsVal;}});})();function curCSS(elem,name,computed){var width,minWidth,maxWidth,ret,// Support: Firefox 51+
// Retrieving style before computed somehow
// fixes an issue with getting wrong values
// on detached elements
style=elem.style;computed=computed||getStyles(elem);// getPropertyValue is needed for:
//   .css('filter') (IE 9 only, #12537)
//   .css('--customProperty) (#3144)
if(computed){ret=computed.getPropertyValue(name)||computed[name];if(ret===""&&!isAttached(elem)){ret=jQuery.style(elem,name);}// A tribute to the "awesome hack by Dean Edwards"
// Android Browser returns percentage for some values,
// but width seems to be reliably pixels.
// This is against the CSSOM draft spec:
// https://drafts.csswg.org/cssom/#resolved-values
if(!support.pixelBoxStyles()&&rnumnonpx.test(ret)&&rboxStyle.test(name)){// Remember the original values
width=style.width;minWidth=style.minWidth;maxWidth=style.maxWidth;// Put in the new values to get a computed value out
style.minWidth=style.maxWidth=style.width=ret;ret=computed.width;// Revert the changed values
style.width=width;style.minWidth=minWidth;style.maxWidth=maxWidth;}}return ret!==undefined?// Support: IE <=9 - 11 only
// IE returns zIndex value as an integer.
ret+"":ret;}function addGetHookIf(conditionFn,hookFn){// Define the hook, we'll check on the first run if it's really needed.
return{get:function get(){if(conditionFn()){// Hook not needed (or it's not possible to use it due
// to missing dependency), remove it.
delete this.get;return;}// Hook needed; redefine it so that the support test is not executed again.
return(this.get=hookFn).apply(this,arguments);}};}var cssPrefixes=["Webkit","Moz","ms"],emptyStyle=document.createElement("div").style,vendorProps={};// Return a vendor-prefixed property or undefined
function vendorPropName(name){// Check for vendor prefixed names
var capName=name[0].toUpperCase()+name.slice(1),i=cssPrefixes.length;while(i--){name=cssPrefixes[i]+capName;if(name in emptyStyle){return name;}}}// Return a potentially-mapped jQuery.cssProps or vendor prefixed property
function finalPropName(name){var final=jQuery.cssProps[name]||vendorProps[name];if(final){return final;}if(name in emptyStyle){return name;}return vendorProps[name]=vendorPropName(name)||name;}var// Swappable if display is none or starts with table
// except "table", "table-cell", or "table-caption"
// See here for display values: https://developer.mozilla.org/en-US/docs/CSS/display
rdisplayswap=/^(none|table(?!-c[ea]).+)/,rcustomProp=/^--/,cssShow={position:"absolute",visibility:"hidden",display:"block"},cssNormalTransform={letterSpacing:"0",fontWeight:"400"};function setPositiveNumber(_elem,value,subtract){// Any relative (+/-) values have already been
// normalized at this point
var matches=rcssNum.exec(value);return matches?// Guard against undefined "subtract", e.g., when used as in cssHooks
Math.max(0,matches[2]-(subtract||0))+(matches[3]||"px"):value;}function boxModelAdjustment(elem,dimension,box,isBorderBox,styles,computedVal){var i=dimension==="width"?1:0,extra=0,delta=0;// Adjustment may not be necessary
if(box===(isBorderBox?"border":"content")){return 0;}for(;i<4;i+=2){// Both box models exclude margin
if(box==="margin"){delta+=jQuery.css(elem,box+cssExpand[i],true,styles);}// If we get here with a content-box, we're seeking "padding" or "border" or "margin"
if(!isBorderBox){// Add padding
delta+=jQuery.css(elem,"padding"+cssExpand[i],true,styles);// For "border" or "margin", add border
if(box!=="padding"){delta+=jQuery.css(elem,"border"+cssExpand[i]+"Width",true,styles);// But still keep track of it otherwise
}else{extra+=jQuery.css(elem,"border"+cssExpand[i]+"Width",true,styles);}// If we get here with a border-box (content + padding + border), we're seeking "content" or
// "padding" or "margin"
}else{// For "content", subtract padding
if(box==="content"){delta-=jQuery.css(elem,"padding"+cssExpand[i],true,styles);}// For "content" or "padding", subtract border
if(box!=="margin"){delta-=jQuery.css(elem,"border"+cssExpand[i]+"Width",true,styles);}}}// Account for positive content-box scroll gutter when requested by providing computedVal
if(!isBorderBox&&computedVal>=0){// offsetWidth/offsetHeight is a rounded sum of content, padding, scroll gutter, and border
// Assuming integer scroll gutter, subtract the rest and round down
delta+=Math.max(0,Math.ceil(elem["offset"+dimension[0].toUpperCase()+dimension.slice(1)]-computedVal-delta-extra-0.5// If offsetWidth/offsetHeight is unknown, then we can't determine content-box scroll gutter
// Use an explicit zero to avoid NaN (gh-3964)
))||0;}return delta;}function getWidthOrHeight(elem,dimension,extra){// Start with computed style
var styles=getStyles(elem),// To avoid forcing a reflow, only fetch boxSizing if we need it (gh-4322).
// Fake content-box until we know it's needed to know the true value.
boxSizingNeeded=!support.boxSizingReliable()||extra,isBorderBox=boxSizingNeeded&&jQuery.css(elem,"boxSizing",false,styles)==="border-box",valueIsBorderBox=isBorderBox,val=curCSS(elem,dimension,styles),offsetProp="offset"+dimension[0].toUpperCase()+dimension.slice(1);// Support: Firefox <=54
// Return a confounding non-pixel value or feign ignorance, as appropriate.
if(rnumnonpx.test(val)){if(!extra){return val;}val="auto";}// Support: IE 9 - 11 only
// Use offsetWidth/offsetHeight for when box sizing is unreliable.
// In those cases, the computed value can be trusted to be border-box.
if((!support.boxSizingReliable()&&isBorderBox||// Support: IE 10 - 11+, Edge 15 - 18+
// IE/Edge misreport `getComputedStyle` of table rows with width/height
// set in CSS while `offset*` properties report correct values.
// Interestingly, in some cases IE 9 doesn't suffer from this issue.
!support.reliableTrDimensions()&&nodeName(elem,"tr")||// Fall back to offsetWidth/offsetHeight when value is "auto"
// This happens for inline elements with no explicit setting (gh-3571)
val==="auto"||// Support: Android <=4.1 - 4.3 only
// Also use offsetWidth/offsetHeight for misreported inline dimensions (gh-3602)
!parseFloat(val)&&jQuery.css(elem,"display",false,styles)==="inline")&&// Make sure the element is visible & connected
elem.getClientRects().length){isBorderBox=jQuery.css(elem,"boxSizing",false,styles)==="border-box";// Where available, offsetWidth/offsetHeight approximate border box dimensions.
// Where not available (e.g., SVG), assume unreliable box-sizing and interpret the
// retrieved value as a content box dimension.
valueIsBorderBox=offsetProp in elem;if(valueIsBorderBox){val=elem[offsetProp];}}// Normalize "" and auto
val=parseFloat(val)||0;// Adjust for the element's box model
return val+boxModelAdjustment(elem,dimension,extra||(isBorderBox?"border":"content"),valueIsBorderBox,styles,// Provide the current computed size to request scroll gutter calculation (gh-3589)
val)+"px";}jQuery.extend({// Add in style property hooks for overriding the default
// behavior of getting and setting a style property
cssHooks:{opacity:{get:function get(elem,computed){if(computed){// We should always get a number back from opacity
var ret=curCSS(elem,"opacity");return ret===""?"1":ret;}}}},// Don't automatically add "px" to these possibly-unitless properties
cssNumber:{"animationIterationCount":true,"columnCount":true,"fillOpacity":true,"flexGrow":true,"flexShrink":true,"fontWeight":true,"gridArea":true,"gridColumn":true,"gridColumnEnd":true,"gridColumnStart":true,"gridRow":true,"gridRowEnd":true,"gridRowStart":true,"lineHeight":true,"opacity":true,"order":true,"orphans":true,"widows":true,"zIndex":true,"zoom":true},// Add in properties whose names you wish to fix before
// setting or getting the value
cssProps:{},// Get and set the style property on a DOM Node
style:function style(elem,name,value,extra){// Don't set styles on text and comment nodes
if(!elem||elem.nodeType===3||elem.nodeType===8||!elem.style){return;}// Make sure that we're working with the right name
var ret,type,hooks,origName=camelCase(name),isCustomProp=rcustomProp.test(name),style=elem.style;// Make sure that we're working with the right name. We don't
// want to query the value if it is a CSS custom property
// since they are user-defined.
if(!isCustomProp){name=finalPropName(origName);}// Gets hook for the prefixed version, then unprefixed version
hooks=jQuery.cssHooks[name]||jQuery.cssHooks[origName];// Check if we're setting a value
if(value!==undefined){type=_typeof(value);// Convert "+=" or "-=" to relative numbers (#7345)
if(type==="string"&&(ret=rcssNum.exec(value))&&ret[1]){value=adjustCSS(elem,name,ret);// Fixes bug #9237
type="number";}// Make sure that null and NaN values aren't set (#7116)
if(value==null||value!==value){return;}// If a number was passed in, add the unit (except for certain CSS properties)
// The isCustomProp check can be removed in jQuery 4.0 when we only auto-append
// "px" to a few hardcoded values.
if(type==="number"&&!isCustomProp){value+=ret&&ret[3]||(jQuery.cssNumber[origName]?"":"px");}// background-* props affect original clone's values
if(!support.clearCloneStyle&&value===""&&name.indexOf("background")===0){style[name]="inherit";}// If a hook was provided, use that value, otherwise just set the specified value
if(!hooks||!("set"in hooks)||(value=hooks.set(elem,value,extra))!==undefined){if(isCustomProp){style.setProperty(name,value);}else{style[name]=value;}}}else{// If a hook was provided get the non-computed value from there
if(hooks&&"get"in hooks&&(ret=hooks.get(elem,false,extra))!==undefined){return ret;}// Otherwise just get the value from the style object
return style[name];}},css:function css(elem,name,extra,styles){var val,num,hooks,origName=camelCase(name),isCustomProp=rcustomProp.test(name);// Make sure that we're working with the right name. We don't
// want to modify the value if it is a CSS custom property
// since they are user-defined.
if(!isCustomProp){name=finalPropName(origName);}// Try prefixed name followed by the unprefixed name
hooks=jQuery.cssHooks[name]||jQuery.cssHooks[origName];// If a hook was provided get the computed value from there
if(hooks&&"get"in hooks){val=hooks.get(elem,true,extra);}// Otherwise, if a way to get the computed value exists, use that
if(val===undefined){val=curCSS(elem,name,styles);}// Convert "normal" to computed value
if(val==="normal"&&name in cssNormalTransform){val=cssNormalTransform[name];}// Make numeric if forced or a qualifier was provided and val looks numeric
if(extra===""||extra){num=parseFloat(val);return extra===true||isFinite(num)?num||0:val;}return val;}});jQuery.each(["height","width"],function(_i,dimension){jQuery.cssHooks[dimension]={get:function get(elem,computed,extra){if(computed){// Certain elements can have dimension info if we invisibly show them
// but it must have a current display style that would benefit
return rdisplayswap.test(jQuery.css(elem,"display"))&&(// Support: Safari 8+
// Table columns in Safari have non-zero offsetWidth & zero
// getBoundingClientRect().width unless display is changed.
// Support: IE <=11 only
// Running getBoundingClientRect on a disconnected node
// in IE throws an error.
!elem.getClientRects().length||!elem.getBoundingClientRect().width)?swap(elem,cssShow,function(){return getWidthOrHeight(elem,dimension,extra);}):getWidthOrHeight(elem,dimension,extra);}},set:function set(elem,value,extra){var matches,styles=getStyles(elem),// Only read styles.position if the test has a chance to fail
// to avoid forcing a reflow.
scrollboxSizeBuggy=!support.scrollboxSize()&&styles.position==="absolute",// To avoid forcing a reflow, only fetch boxSizing if we need it (gh-3991)
boxSizingNeeded=scrollboxSizeBuggy||extra,isBorderBox=boxSizingNeeded&&jQuery.css(elem,"boxSizing",false,styles)==="border-box",subtract=extra?boxModelAdjustment(elem,dimension,extra,isBorderBox,styles):0;// Account for unreliable border-box dimensions by comparing offset* to computed and
// faking a content-box to get border and padding (gh-3699)
if(isBorderBox&&scrollboxSizeBuggy){subtract-=Math.ceil(elem["offset"+dimension[0].toUpperCase()+dimension.slice(1)]-parseFloat(styles[dimension])-boxModelAdjustment(elem,dimension,"border",false,styles)-0.5);}// Convert to pixels if value adjustment is needed
if(subtract&&(matches=rcssNum.exec(value))&&(matches[3]||"px")!=="px"){elem.style[dimension]=value;value=jQuery.css(elem,dimension);}return setPositiveNumber(elem,value,subtract);}};});jQuery.cssHooks.marginLeft=addGetHookIf(support.reliableMarginLeft,function(elem,computed){if(computed){return(parseFloat(curCSS(elem,"marginLeft"))||elem.getBoundingClientRect().left-swap(elem,{marginLeft:0},function(){return elem.getBoundingClientRect().left;}))+"px";}});// These hooks are used by animate to expand properties
jQuery.each({margin:"",padding:"",border:"Width"},function(prefix,suffix){jQuery.cssHooks[prefix+suffix]={expand:function expand(value){var i=0,expanded={},// Assumes a single number if not a string
parts=typeof value==="string"?value.split(" "):[value];for(;i<4;i++){expanded[prefix+cssExpand[i]+suffix]=parts[i]||parts[i-2]||parts[0];}return expanded;}};if(prefix!=="margin"){jQuery.cssHooks[prefix+suffix].set=setPositiveNumber;}});jQuery.fn.extend({css:function css(name,value){return access(this,function(elem,name,value){var styles,len,map={},i=0;if(Array.isArray(name)){styles=getStyles(elem);len=name.length;for(;i<len;i++){map[name[i]]=jQuery.css(elem,name[i],false,styles);}return map;}return value!==undefined?jQuery.style(elem,name,value):jQuery.css(elem,name);},name,value,arguments.length>1);}});function Tween(elem,options,prop,end,easing){return new Tween.prototype.init(elem,options,prop,end,easing);}jQuery.Tween=Tween;Tween.prototype={constructor:Tween,init:function init(elem,options,prop,end,easing,unit){this.elem=elem;this.prop=prop;this.easing=easing||jQuery.easing._default;this.options=options;this.start=this.now=this.cur();this.end=end;this.unit=unit||(jQuery.cssNumber[prop]?"":"px");},cur:function cur(){var hooks=Tween.propHooks[this.prop];return hooks&&hooks.get?hooks.get(this):Tween.propHooks._default.get(this);},run:function run(percent){var eased,hooks=Tween.propHooks[this.prop];if(this.options.duration){this.pos=eased=jQuery.easing[this.easing](percent,this.options.duration*percent,0,1,this.options.duration);}else{this.pos=eased=percent;}this.now=(this.end-this.start)*eased+this.start;if(this.options.step){this.options.step.call(this.elem,this.now,this);}if(hooks&&hooks.set){hooks.set(this);}else{Tween.propHooks._default.set(this);}return this;}};Tween.prototype.init.prototype=Tween.prototype;Tween.propHooks={_default:{get:function get(tween){var result;// Use a property on the element directly when it is not a DOM element,
// or when there is no matching style property that exists.
if(tween.elem.nodeType!==1||tween.elem[tween.prop]!=null&&tween.elem.style[tween.prop]==null){return tween.elem[tween.prop];}// Passing an empty string as a 3rd parameter to .css will automatically
// attempt a parseFloat and fallback to a string if the parse fails.
// Simple values such as "10px" are parsed to Float;
// complex values such as "rotate(1rad)" are returned as-is.
result=jQuery.css(tween.elem,tween.prop,"");// Empty strings, null, undefined and "auto" are converted to 0.
return!result||result==="auto"?0:result;},set:function set(tween){// Use step hook for back compat.
// Use cssHook if its there.
// Use .style if available and use plain properties where available.
if(jQuery.fx.step[tween.prop]){jQuery.fx.step[tween.prop](tween);}else if(tween.elem.nodeType===1&&(jQuery.cssHooks[tween.prop]||tween.elem.style[finalPropName(tween.prop)]!=null)){jQuery.style(tween.elem,tween.prop,tween.now+tween.unit);}else{tween.elem[tween.prop]=tween.now;}}}};// Support: IE <=9 only
// Panic based approach to setting things on disconnected nodes
Tween.propHooks.scrollTop=Tween.propHooks.scrollLeft={set:function set(tween){if(tween.elem.nodeType&&tween.elem.parentNode){tween.elem[tween.prop]=tween.now;}}};jQuery.easing={linear:function linear(p){return p;},swing:function swing(p){return 0.5-Math.cos(p*Math.PI)/2;},_default:"swing"};jQuery.fx=Tween.prototype.init;// Back compat <1.8 extension point
jQuery.fx.step={};var fxNow,inProgress,rfxtypes=/^(?:toggle|show|hide)$/,rrun=/queueHooks$/;function schedule(){if(inProgress){if(document.hidden===false&&window.requestAnimationFrame){window.requestAnimationFrame(schedule);}else{window.setTimeout(schedule,jQuery.fx.interval);}jQuery.fx.tick();}}// Animations created synchronously will run synchronously
function createFxNow(){window.setTimeout(function(){fxNow=undefined;});return fxNow=Date.now();}// Generate parameters to create a standard animation
function genFx(type,includeWidth){var which,i=0,attrs={height:type};// If we include width, step value is 1 to do all cssExpand values,
// otherwise step value is 2 to skip over Left and Right
includeWidth=includeWidth?1:0;for(;i<4;i+=2-includeWidth){which=cssExpand[i];attrs["margin"+which]=attrs["padding"+which]=type;}if(includeWidth){attrs.opacity=attrs.width=type;}return attrs;}function createTween(value,prop,animation){var tween,collection=(Animation.tweeners[prop]||[]).concat(Animation.tweeners["*"]),index=0,length=collection.length;for(;index<length;index++){if(tween=collection[index].call(animation,prop,value)){// We're done with this property
return tween;}}}function defaultPrefilter(elem,props,opts){var prop,value,toggle,hooks,oldfire,propTween,restoreDisplay,display,isBox="width"in props||"height"in props,anim=this,orig={},style=elem.style,hidden=elem.nodeType&&isHiddenWithinTree(elem),dataShow=dataPriv.get(elem,"fxshow");// Queue-skipping animations hijack the fx hooks
if(!opts.queue){hooks=jQuery._queueHooks(elem,"fx");if(hooks.unqueued==null){hooks.unqueued=0;oldfire=hooks.empty.fire;hooks.empty.fire=function(){if(!hooks.unqueued){oldfire();}};}hooks.unqueued++;anim.always(function(){// Ensure the complete handler is called before this completes
anim.always(function(){hooks.unqueued--;if(!jQuery.queue(elem,"fx").length){hooks.empty.fire();}});});}// Detect show/hide animations
for(prop in props){value=props[prop];if(rfxtypes.test(value)){delete props[prop];toggle=toggle||value==="toggle";if(value===(hidden?"hide":"show")){// Pretend to be hidden if this is a "show" and
// there is still data from a stopped show/hide
if(value==="show"&&dataShow&&dataShow[prop]!==undefined){hidden=true;// Ignore all other no-op show/hide data
}else{continue;}}orig[prop]=dataShow&&dataShow[prop]||jQuery.style(elem,prop);}}// Bail out if this is a no-op like .hide().hide()
propTween=!jQuery.isEmptyObject(props);if(!propTween&&jQuery.isEmptyObject(orig)){return;}// Restrict "overflow" and "display" styles during box animations
if(isBox&&elem.nodeType===1){// Support: IE <=9 - 11, Edge 12 - 15
// Record all 3 overflow attributes because IE does not infer the shorthand
// from identically-valued overflowX and overflowY and Edge just mirrors
// the overflowX value there.
opts.overflow=[style.overflow,style.overflowX,style.overflowY];// Identify a display type, preferring old show/hide data over the CSS cascade
restoreDisplay=dataShow&&dataShow.display;if(restoreDisplay==null){restoreDisplay=dataPriv.get(elem,"display");}display=jQuery.css(elem,"display");if(display==="none"){if(restoreDisplay){display=restoreDisplay;}else{// Get nonempty value(s) by temporarily forcing visibility
showHide([elem],true);restoreDisplay=elem.style.display||restoreDisplay;display=jQuery.css(elem,"display");showHide([elem]);}}// Animate inline elements as inline-block
if(display==="inline"||display==="inline-block"&&restoreDisplay!=null){if(jQuery.css(elem,"float")==="none"){// Restore the original display value at the end of pure show/hide animations
if(!propTween){anim.done(function(){style.display=restoreDisplay;});if(restoreDisplay==null){display=style.display;restoreDisplay=display==="none"?"":display;}}style.display="inline-block";}}}if(opts.overflow){style.overflow="hidden";anim.always(function(){style.overflow=opts.overflow[0];style.overflowX=opts.overflow[1];style.overflowY=opts.overflow[2];});}// Implement show/hide animations
propTween=false;for(prop in orig){// General show/hide setup for this element animation
if(!propTween){if(dataShow){if("hidden"in dataShow){hidden=dataShow.hidden;}}else{dataShow=dataPriv.access(elem,"fxshow",{display:restoreDisplay});}// Store hidden/visible for toggle so `.stop().toggle()` "reverses"
if(toggle){dataShow.hidden=!hidden;}// Show elements before animating them
if(hidden){showHide([elem],true);}/* eslint-disable no-loop-func */anim.done(function(){/* eslint-enable no-loop-func */ // The final step of a "hide" animation is actually hiding the element
if(!hidden){showHide([elem]);}dataPriv.remove(elem,"fxshow");for(prop in orig){jQuery.style(elem,prop,orig[prop]);}});}// Per-property setup
propTween=createTween(hidden?dataShow[prop]:0,prop,anim);if(!(prop in dataShow)){dataShow[prop]=propTween.start;if(hidden){propTween.end=propTween.start;propTween.start=0;}}}}function propFilter(props,specialEasing){var index,name,easing,value,hooks;// camelCase, specialEasing and expand cssHook pass
for(index in props){name=camelCase(index);easing=specialEasing[name];value=props[index];if(Array.isArray(value)){easing=value[1];value=props[index]=value[0];}if(index!==name){props[name]=value;delete props[index];}hooks=jQuery.cssHooks[name];if(hooks&&"expand"in hooks){value=hooks.expand(value);delete props[name];// Not quite $.extend, this won't overwrite existing keys.
// Reusing 'index' because we have the correct "name"
for(index in value){if(!(index in props)){props[index]=value[index];specialEasing[index]=easing;}}}else{specialEasing[name]=easing;}}}function Animation(elem,properties,options){var result,stopped,index=0,length=Animation.prefilters.length,deferred=jQuery.Deferred().always(function(){// Don't match elem in the :animated selector
delete tick.elem;}),tick=function tick(){if(stopped){return false;}var currentTime=fxNow||createFxNow(),remaining=Math.max(0,animation.startTime+animation.duration-currentTime),// Support: Android 2.3 only
// Archaic crash bug won't allow us to use `1 - ( 0.5 || 0 )` (#12497)
temp=remaining/animation.duration||0,percent=1-temp,index=0,length=animation.tweens.length;for(;index<length;index++){animation.tweens[index].run(percent);}deferred.notifyWith(elem,[animation,percent,remaining]);// If there's more to do, yield
if(percent<1&&length){return remaining;}// If this was an empty animation, synthesize a final progress notification
if(!length){deferred.notifyWith(elem,[animation,1,0]);}// Resolve the animation and report its conclusion
deferred.resolveWith(elem,[animation]);return false;},animation=deferred.promise({elem:elem,props:jQuery.extend({},properties),opts:jQuery.extend(true,{specialEasing:{},easing:jQuery.easing._default},options),originalProperties:properties,originalOptions:options,startTime:fxNow||createFxNow(),duration:options.duration,tweens:[],createTween:function createTween(prop,end){var tween=jQuery.Tween(elem,animation.opts,prop,end,animation.opts.specialEasing[prop]||animation.opts.easing);animation.tweens.push(tween);return tween;},stop:function stop(gotoEnd){var index=0,// If we are going to the end, we want to run all the tweens
// otherwise we skip this part
length=gotoEnd?animation.tweens.length:0;if(stopped){return this;}stopped=true;for(;index<length;index++){animation.tweens[index].run(1);}// Resolve when we played the last frame; otherwise, reject
if(gotoEnd){deferred.notifyWith(elem,[animation,1,0]);deferred.resolveWith(elem,[animation,gotoEnd]);}else{deferred.rejectWith(elem,[animation,gotoEnd]);}return this;}}),props=animation.props;propFilter(props,animation.opts.specialEasing);for(;index<length;index++){result=Animation.prefilters[index].call(animation,elem,props,animation.opts);if(result){if(isFunction(result.stop)){jQuery._queueHooks(animation.elem,animation.opts.queue).stop=result.stop.bind(result);}return result;}}jQuery.map(props,createTween,animation);if(isFunction(animation.opts.start)){animation.opts.start.call(elem,animation);}// Attach callbacks from options
animation.progress(animation.opts.progress).done(animation.opts.done,animation.opts.complete).fail(animation.opts.fail).always(animation.opts.always);jQuery.fx.timer(jQuery.extend(tick,{elem:elem,anim:animation,queue:animation.opts.queue}));return animation;}jQuery.Animation=jQuery.extend(Animation,{tweeners:{"*":[function(prop,value){var tween=this.createTween(prop,value);adjustCSS(tween.elem,prop,rcssNum.exec(value),tween);return tween;}]},tweener:function tweener(props,callback){if(isFunction(props)){callback=props;props=["*"];}else{props=props.match(rnothtmlwhite);}var prop,index=0,length=props.length;for(;index<length;index++){prop=props[index];Animation.tweeners[prop]=Animation.tweeners[prop]||[];Animation.tweeners[prop].unshift(callback);}},prefilters:[defaultPrefilter],prefilter:function prefilter(callback,prepend){if(prepend){Animation.prefilters.unshift(callback);}else{Animation.prefilters.push(callback);}}});jQuery.speed=function(speed,easing,fn){var opt=speed&&_typeof(speed)==="object"?jQuery.extend({},speed):{complete:fn||!fn&&easing||isFunction(speed)&&speed,duration:speed,easing:fn&&easing||easing&&!isFunction(easing)&&easing};// Go to the end state if fx are off
if(jQuery.fx.off){opt.duration=0;}else{if(typeof opt.duration!=="number"){if(opt.duration in jQuery.fx.speeds){opt.duration=jQuery.fx.speeds[opt.duration];}else{opt.duration=jQuery.fx.speeds._default;}}}// Normalize opt.queue - true/undefined/null -> "fx"
if(opt.queue==null||opt.queue===true){opt.queue="fx";}// Queueing
opt.old=opt.complete;opt.complete=function(){if(isFunction(opt.old)){opt.old.call(this);}if(opt.queue){jQuery.dequeue(this,opt.queue);}};return opt;};jQuery.fn.extend({fadeTo:function fadeTo(speed,to,easing,callback){// Show any hidden elements after setting opacity to 0
return this.filter(isHiddenWithinTree).css("opacity",0).show()// Animate to the value specified
.end().animate({opacity:to},speed,easing,callback);},animate:function animate(prop,speed,easing,callback){var empty=jQuery.isEmptyObject(prop),optall=jQuery.speed(speed,easing,callback),doAnimation=function doAnimation(){// Operate on a copy of prop so per-property easing won't be lost
var anim=Animation(this,jQuery.extend({},prop),optall);// Empty animations, or finishing resolves immediately
if(empty||dataPriv.get(this,"finish")){anim.stop(true);}};doAnimation.finish=doAnimation;return empty||optall.queue===false?this.each(doAnimation):this.queue(optall.queue,doAnimation);},stop:function stop(type,clearQueue,gotoEnd){var stopQueue=function stopQueue(hooks){var stop=hooks.stop;delete hooks.stop;stop(gotoEnd);};if(typeof type!=="string"){gotoEnd=clearQueue;clearQueue=type;type=undefined;}if(clearQueue){this.queue(type||"fx",[]);}return this.each(function(){var dequeue=true,index=type!=null&&type+"queueHooks",timers=jQuery.timers,data=dataPriv.get(this);if(index){if(data[index]&&data[index].stop){stopQueue(data[index]);}}else{for(index in data){if(data[index]&&data[index].stop&&rrun.test(index)){stopQueue(data[index]);}}}for(index=timers.length;index--;){if(timers[index].elem===this&&(type==null||timers[index].queue===type)){timers[index].anim.stop(gotoEnd);dequeue=false;timers.splice(index,1);}}// Start the next in the queue if the last step wasn't forced.
// Timers currently will call their complete callbacks, which
// will dequeue but only if they were gotoEnd.
if(dequeue||!gotoEnd){jQuery.dequeue(this,type);}});},finish:function finish(type){if(type!==false){type=type||"fx";}return this.each(function(){var index,data=dataPriv.get(this),queue=data[type+"queue"],hooks=data[type+"queueHooks"],timers=jQuery.timers,length=queue?queue.length:0;// Enable finishing flag on private data
data.finish=true;// Empty the queue first
jQuery.queue(this,type,[]);if(hooks&&hooks.stop){hooks.stop.call(this,true);}// Look for any active animations, and finish them
for(index=timers.length;index--;){if(timers[index].elem===this&&timers[index].queue===type){timers[index].anim.stop(true);timers.splice(index,1);}}// Look for any animations in the old queue and finish them
for(index=0;index<length;index++){if(queue[index]&&queue[index].finish){queue[index].finish.call(this);}}// Turn off finishing flag
delete data.finish;});}});jQuery.each(["toggle","show","hide"],function(_i,name){var cssFn=jQuery.fn[name];jQuery.fn[name]=function(speed,easing,callback){return speed==null||typeof speed==="boolean"?cssFn.apply(this,arguments):this.animate(genFx(name,true),speed,easing,callback);};});// Generate shortcuts for custom animations
jQuery.each({slideDown:genFx("show"),slideUp:genFx("hide"),slideToggle:genFx("toggle"),fadeIn:{opacity:"show"},fadeOut:{opacity:"hide"},fadeToggle:{opacity:"toggle"}},function(name,props){jQuery.fn[name]=function(speed,easing,callback){return this.animate(props,speed,easing,callback);};});jQuery.timers=[];jQuery.fx.tick=function(){var timer,i=0,timers=jQuery.timers;fxNow=Date.now();for(;i<timers.length;i++){timer=timers[i];// Run the timer and safely remove it when done (allowing for external removal)
if(!timer()&&timers[i]===timer){timers.splice(i--,1);}}if(!timers.length){jQuery.fx.stop();}fxNow=undefined;};jQuery.fx.timer=function(timer){jQuery.timers.push(timer);jQuery.fx.start();};jQuery.fx.interval=13;jQuery.fx.start=function(){if(inProgress){return;}inProgress=true;schedule();};jQuery.fx.stop=function(){inProgress=null;};jQuery.fx.speeds={slow:600,fast:200,// Default speed
_default:400};// Based off of the plugin by Clint Helfers, with permission.
// https://web.archive.org/web/20100324014747/http://blindsignals.com/index.php/2009/07/jquery-delay/
jQuery.fn.delay=function(time,type){time=jQuery.fx?jQuery.fx.speeds[time]||time:time;type=type||"fx";return this.queue(type,function(next,hooks){var timeout=window.setTimeout(next,time);hooks.stop=function(){window.clearTimeout(timeout);};});};(function(){var input=document.createElement("input"),select=document.createElement("select"),opt=select.appendChild(document.createElement("option"));input.type="checkbox";// Support: Android <=4.3 only
// Default value for a checkbox should be "on"
support.checkOn=input.value!=="";// Support: IE <=11 only
// Must access selectedIndex to make default options select
support.optSelected=opt.selected;// Support: IE <=11 only
// An input loses its value after becoming a radio
input=document.createElement("input");input.value="t";input.type="radio";support.radioValue=input.value==="t";})();var boolHook,attrHandle=jQuery.expr.attrHandle;jQuery.fn.extend({attr:function attr(name,value){return access(this,jQuery.attr,name,value,arguments.length>1);},removeAttr:function removeAttr(name){return this.each(function(){jQuery.removeAttr(this,name);});}});jQuery.extend({attr:function attr(elem,name,value){var ret,hooks,nType=elem.nodeType;// Don't get/set attributes on text, comment and attribute nodes
if(nType===3||nType===8||nType===2){return;}// Fallback to prop when attributes are not supported
if(typeof elem.getAttribute==="undefined"){return jQuery.prop(elem,name,value);}// Attribute hooks are determined by the lowercase version
// Grab necessary hook if one is defined
if(nType!==1||!jQuery.isXMLDoc(elem)){hooks=jQuery.attrHooks[name.toLowerCase()]||(jQuery.expr.match.bool.test(name)?boolHook:undefined);}if(value!==undefined){if(value===null){jQuery.removeAttr(elem,name);return;}if(hooks&&"set"in hooks&&(ret=hooks.set(elem,value,name))!==undefined){return ret;}elem.setAttribute(name,value+"");return value;}if(hooks&&"get"in hooks&&(ret=hooks.get(elem,name))!==null){return ret;}ret=jQuery.find.attr(elem,name);// Non-existent attributes return null, we normalize to undefined
return ret==null?undefined:ret;},attrHooks:{type:{set:function set(elem,value){if(!support.radioValue&&value==="radio"&&nodeName(elem,"input")){var val=elem.value;elem.setAttribute("type",value);if(val){elem.value=val;}return value;}}}},removeAttr:function removeAttr(elem,value){var name,i=0,// Attribute names can contain non-HTML whitespace characters
// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2
attrNames=value&&value.match(rnothtmlwhite);if(attrNames&&elem.nodeType===1){while(name=attrNames[i++]){elem.removeAttribute(name);}}}});// Hooks for boolean attributes
boolHook={set:function set(elem,value,name){if(value===false){// Remove boolean attributes when set to false
jQuery.removeAttr(elem,name);}else{elem.setAttribute(name,name);}return name;}};jQuery.each(jQuery.expr.match.bool.source.match(/\w+/g),function(_i,name){var getter=attrHandle[name]||jQuery.find.attr;attrHandle[name]=function(elem,name,isXML){var ret,handle,lowercaseName=name.toLowerCase();if(!isXML){// Avoid an infinite loop by temporarily removing this function from the getter
handle=attrHandle[lowercaseName];attrHandle[lowercaseName]=ret;ret=getter(elem,name,isXML)!=null?lowercaseName:null;attrHandle[lowercaseName]=handle;}return ret;};});var rfocusable=/^(?:input|select|textarea|button)$/i,rclickable=/^(?:a|area)$/i;jQuery.fn.extend({prop:function prop(name,value){return access(this,jQuery.prop,name,value,arguments.length>1);},removeProp:function removeProp(name){return this.each(function(){delete this[jQuery.propFix[name]||name];});}});jQuery.extend({prop:function prop(elem,name,value){var ret,hooks,nType=elem.nodeType;// Don't get/set properties on text, comment and attribute nodes
if(nType===3||nType===8||nType===2){return;}if(nType!==1||!jQuery.isXMLDoc(elem)){// Fix name and attach hooks
name=jQuery.propFix[name]||name;hooks=jQuery.propHooks[name];}if(value!==undefined){if(hooks&&"set"in hooks&&(ret=hooks.set(elem,value,name))!==undefined){return ret;}return elem[name]=value;}if(hooks&&"get"in hooks&&(ret=hooks.get(elem,name))!==null){return ret;}return elem[name];},propHooks:{tabIndex:{get:function get(elem){// Support: IE <=9 - 11 only
// elem.tabIndex doesn't always return the
// correct value when it hasn't been explicitly set
// https://web.archive.org/web/20141116233347/http://fluidproject.org/blog/2008/01/09/getting-setting-and-removing-tabindex-values-with-javascript/
// Use proper attribute retrieval(#12072)
var tabindex=jQuery.find.attr(elem,"tabindex");if(tabindex){return parseInt(tabindex,10);}if(rfocusable.test(elem.nodeName)||rclickable.test(elem.nodeName)&&elem.href){return 0;}return-1;}}},propFix:{"for":"htmlFor","class":"className"}});// Support: IE <=11 only
// Accessing the selectedIndex property
// forces the browser to respect setting selected
// on the option
// The getter ensures a default option is selected
// when in an optgroup
// eslint rule "no-unused-expressions" is disabled for this code
// since it considers such accessions noop
if(!support.optSelected){jQuery.propHooks.selected={get:function get(elem){/* eslint no-unused-expressions: "off" */var parent=elem.parentNode;if(parent&&parent.parentNode){parent.parentNode.selectedIndex;}return null;},set:function set(elem){/* eslint no-unused-expressions: "off" */var parent=elem.parentNode;if(parent){parent.selectedIndex;if(parent.parentNode){parent.parentNode.selectedIndex;}}}};}jQuery.each(["tabIndex","readOnly","maxLength","cellSpacing","cellPadding","rowSpan","colSpan","useMap","frameBorder","contentEditable"],function(){jQuery.propFix[this.toLowerCase()]=this;});// Strip and collapse whitespace according to HTML spec
// https://infra.spec.whatwg.org/#strip-and-collapse-ascii-whitespace
function stripAndCollapse(value){var tokens=value.match(rnothtmlwhite)||[];return tokens.join(" ");}function getClass(elem){return elem.getAttribute&&elem.getAttribute("class")||"";}function classesToArray(value){if(Array.isArray(value)){return value;}if(typeof value==="string"){return value.match(rnothtmlwhite)||[];}return[];}jQuery.fn.extend({addClass:function addClass(value){var classes,elem,cur,curValue,clazz,j,finalValue,i=0;if(isFunction(value)){return this.each(function(j){jQuery(this).addClass(value.call(this,j,getClass(this)));});}classes=classesToArray(value);if(classes.length){while(elem=this[i++]){curValue=getClass(elem);cur=elem.nodeType===1&&" "+stripAndCollapse(curValue)+" ";if(cur){j=0;while(clazz=classes[j++]){if(cur.indexOf(" "+clazz+" ")<0){cur+=clazz+" ";}}// Only assign if different to avoid unneeded rendering.
finalValue=stripAndCollapse(cur);if(curValue!==finalValue){elem.setAttribute("class",finalValue);}}}}return this;},removeClass:function removeClass(value){var classes,elem,cur,curValue,clazz,j,finalValue,i=0;if(isFunction(value)){return this.each(function(j){jQuery(this).removeClass(value.call(this,j,getClass(this)));});}if(!arguments.length){return this.attr("class","");}classes=classesToArray(value);if(classes.length){while(elem=this[i++]){curValue=getClass(elem);// This expression is here for better compressibility (see addClass)
cur=elem.nodeType===1&&" "+stripAndCollapse(curValue)+" ";if(cur){j=0;while(clazz=classes[j++]){// Remove *all* instances
while(cur.indexOf(" "+clazz+" ")>-1){cur=cur.replace(" "+clazz+" "," ");}}// Only assign if different to avoid unneeded rendering.
finalValue=stripAndCollapse(cur);if(curValue!==finalValue){elem.setAttribute("class",finalValue);}}}}return this;},toggleClass:function toggleClass(value,stateVal){var type=_typeof(value),isValidValue=type==="string"||Array.isArray(value);if(typeof stateVal==="boolean"&&isValidValue){return stateVal?this.addClass(value):this.removeClass(value);}if(isFunction(value)){return this.each(function(i){jQuery(this).toggleClass(value.call(this,i,getClass(this),stateVal),stateVal);});}return this.each(function(){var className,i,self,classNames;if(isValidValue){// Toggle individual class names
i=0;self=jQuery(this);classNames=classesToArray(value);while(className=classNames[i++]){// Check each className given, space separated list
if(self.hasClass(className)){self.removeClass(className);}else{self.addClass(className);}}// Toggle whole class name
}else if(value===undefined||type==="boolean"){className=getClass(this);if(className){// Store className if set
dataPriv.set(this,"__className__",className);}// If the element has a class name or if we're passed `false`,
// then remove the whole classname (if there was one, the above saved it).
// Otherwise bring back whatever was previously saved (if anything),
// falling back to the empty string if nothing was stored.
if(this.setAttribute){this.setAttribute("class",className||value===false?"":dataPriv.get(this,"__className__")||"");}}});},hasClass:function hasClass(selector){var className,elem,i=0;className=" "+selector+" ";while(elem=this[i++]){if(elem.nodeType===1&&(" "+stripAndCollapse(getClass(elem))+" ").indexOf(className)>-1){return true;}}return false;}});var rreturn=/\r/g;jQuery.fn.extend({val:function val(value){var hooks,ret,valueIsFunction,elem=this[0];if(!arguments.length){if(elem){hooks=jQuery.valHooks[elem.type]||jQuery.valHooks[elem.nodeName.toLowerCase()];if(hooks&&"get"in hooks&&(ret=hooks.get(elem,"value"))!==undefined){return ret;}ret=elem.value;// Handle most common string cases
if(typeof ret==="string"){return ret.replace(rreturn,"");}// Handle cases where value is null/undef or number
return ret==null?"":ret;}return;}valueIsFunction=isFunction(value);return this.each(function(i){var val;if(this.nodeType!==1){return;}if(valueIsFunction){val=value.call(this,i,jQuery(this).val());}else{val=value;}// Treat null/undefined as ""; convert numbers to string
if(val==null){val="";}else if(typeof val==="number"){val+="";}else if(Array.isArray(val)){val=jQuery.map(val,function(value){return value==null?"":value+"";});}hooks=jQuery.valHooks[this.type]||jQuery.valHooks[this.nodeName.toLowerCase()];// If set returns undefined, fall back to normal setting
if(!hooks||!("set"in hooks)||hooks.set(this,val,"value")===undefined){this.value=val;}});}});jQuery.extend({valHooks:{option:{get:function get(elem){var val=jQuery.find.attr(elem,"value");return val!=null?val:// Support: IE <=10 - 11 only
// option.text throws exceptions (#14686, #14858)
// Strip and collapse whitespace
// https://html.spec.whatwg.org/#strip-and-collapse-whitespace
stripAndCollapse(jQuery.text(elem));}},select:{get:function get(elem){var value,option,i,options=elem.options,index=elem.selectedIndex,one=elem.type==="select-one",values=one?null:[],max=one?index+1:options.length;if(index<0){i=max;}else{i=one?index:0;}// Loop through all the selected options
for(;i<max;i++){option=options[i];// Support: IE <=9 only
// IE8-9 doesn't update selected after form reset (#2551)
if((option.selected||i===index)&&// Don't return options that are disabled or in a disabled optgroup
!option.disabled&&(!option.parentNode.disabled||!nodeName(option.parentNode,"optgroup"))){// Get the specific value for the option
value=jQuery(option).val();// We don't need an array for one selects
if(one){return value;}// Multi-Selects return an array
values.push(value);}}return values;},set:function set(elem,value){var optionSet,option,options=elem.options,values=jQuery.makeArray(value),i=options.length;while(i--){option=options[i];/* eslint-disable no-cond-assign */if(option.selected=jQuery.inArray(jQuery.valHooks.option.get(option),values)>-1){optionSet=true;}/* eslint-enable no-cond-assign */}// Force browsers to behave consistently when non-matching value is set
if(!optionSet){elem.selectedIndex=-1;}return values;}}}});// Radios and checkboxes getter/setter
jQuery.each(["radio","checkbox"],function(){jQuery.valHooks[this]={set:function set(elem,value){if(Array.isArray(value)){return elem.checked=jQuery.inArray(jQuery(elem).val(),value)>-1;}}};if(!support.checkOn){jQuery.valHooks[this].get=function(elem){return elem.getAttribute("value")===null?"on":elem.value;};}});// Return jQuery for attributes-only inclusion
support.focusin="onfocusin"in window;var rfocusMorph=/^(?:focusinfocus|focusoutblur)$/,stopPropagationCallback=function stopPropagationCallback(e){e.stopPropagation();};jQuery.extend(jQuery.event,{trigger:function trigger(event,data,elem,onlyHandlers){var i,cur,tmp,bubbleType,ontype,handle,special,lastElement,eventPath=[elem||document],type=hasOwn.call(event,"type")?event.type:event,namespaces=hasOwn.call(event,"namespace")?event.namespace.split("."):[];cur=lastElement=tmp=elem=elem||document;// Don't do events on text and comment nodes
if(elem.nodeType===3||elem.nodeType===8){return;}// focus/blur morphs to focusin/out; ensure we're not firing them right now
if(rfocusMorph.test(type+jQuery.event.triggered)){return;}if(type.indexOf(".")>-1){// Namespaced trigger; create a regexp to match event type in handle()
namespaces=type.split(".");type=namespaces.shift();namespaces.sort();}ontype=type.indexOf(":")<0&&"on"+type;// Caller can pass in a jQuery.Event object, Object, or just an event type string
event=event[jQuery.expando]?event:new jQuery.Event(type,_typeof(event)==="object"&&event);// Trigger bitmask: & 1 for native handlers; & 2 for jQuery (always true)
event.isTrigger=onlyHandlers?2:3;event.namespace=namespaces.join(".");event.rnamespace=event.namespace?new RegExp("(^|\\.)"+namespaces.join("\\.(?:.*\\.|)")+"(\\.|$)"):null;// Clean up the event in case it is being reused
event.result=undefined;if(!event.target){event.target=elem;}// Clone any incoming data and prepend the event, creating the handler arg list
data=data==null?[event]:jQuery.makeArray(data,[event]);// Allow special events to draw outside the lines
special=jQuery.event.special[type]||{};if(!onlyHandlers&&special.trigger&&special.trigger.apply(elem,data)===false){return;}// Determine event propagation path in advance, per W3C events spec (#9951)
// Bubble up to document, then to window; watch for a global ownerDocument var (#9724)
if(!onlyHandlers&&!special.noBubble&&!isWindow(elem)){bubbleType=special.delegateType||type;if(!rfocusMorph.test(bubbleType+type)){cur=cur.parentNode;}for(;cur;cur=cur.parentNode){eventPath.push(cur);tmp=cur;}// Only add window if we got to document (e.g., not plain obj or detached DOM)
if(tmp===(elem.ownerDocument||document)){eventPath.push(tmp.defaultView||tmp.parentWindow||window);}}// Fire handlers on the event path
i=0;while((cur=eventPath[i++])&&!event.isPropagationStopped()){lastElement=cur;event.type=i>1?bubbleType:special.bindType||type;// jQuery handler
handle=(dataPriv.get(cur,"events")||Object.create(null))[event.type]&&dataPriv.get(cur,"handle");if(handle){handle.apply(cur,data);}// Native handler
handle=ontype&&cur[ontype];if(handle&&handle.apply&&acceptData(cur)){event.result=handle.apply(cur,data);if(event.result===false){event.preventDefault();}}}event.type=type;// If nobody prevented the default action, do it now
if(!onlyHandlers&&!event.isDefaultPrevented()){if((!special._default||special._default.apply(eventPath.pop(),data)===false)&&acceptData(elem)){// Call a native DOM method on the target with the same name as the event.
// Don't do default actions on window, that's where global variables be (#6170)
if(ontype&&isFunction(elem[type])&&!isWindow(elem)){// Don't re-trigger an onFOO event when we call its FOO() method
tmp=elem[ontype];if(tmp){elem[ontype]=null;}// Prevent re-triggering of the same event, since we already bubbled it above
jQuery.event.triggered=type;if(event.isPropagationStopped()){lastElement.addEventListener(type,stopPropagationCallback);}elem[type]();if(event.isPropagationStopped()){lastElement.removeEventListener(type,stopPropagationCallback);}jQuery.event.triggered=undefined;if(tmp){elem[ontype]=tmp;}}}}return event.result;},// Piggyback on a donor event to simulate a different one
// Used only for `focus(in | out)` events
simulate:function simulate(type,elem,event){var e=jQuery.extend(new jQuery.Event(),event,{type:type,isSimulated:true});jQuery.event.trigger(e,null,elem);}});jQuery.fn.extend({trigger:function trigger(type,data){return this.each(function(){jQuery.event.trigger(type,data,this);});},triggerHandler:function triggerHandler(type,data){var elem=this[0];if(elem){return jQuery.event.trigger(type,data,elem,true);}}});// Support: Firefox <=44
// Firefox doesn't have focus(in | out) events
// Related ticket - https://bugzilla.mozilla.org/show_bug.cgi?id=687787
//
// Support: Chrome <=48 - 49, Safari <=9.0 - 9.1
// focus(in | out) events fire after focus & blur events,
// which is spec violation - http://www.w3.org/TR/DOM-Level-3-Events/#events-focusevent-event-order
// Related ticket - https://bugs.chromium.org/p/chromium/issues/detail?id=449857
if(!support.focusin){jQuery.each({focus:"focusin",blur:"focusout"},function(orig,fix){// Attach a single capturing handler on the document while someone wants focusin/focusout
var handler=function handler(event){jQuery.event.simulate(fix,event.target,jQuery.event.fix(event));};jQuery.event.special[fix]={setup:function setup(){// Handle: regular nodes (via `this.ownerDocument`), window
// (via `this.document`) & document (via `this`).
var doc=this.ownerDocument||this.document||this,attaches=dataPriv.access(doc,fix);if(!attaches){doc.addEventListener(orig,handler,true);}dataPriv.access(doc,fix,(attaches||0)+1);},teardown:function teardown(){var doc=this.ownerDocument||this.document||this,attaches=dataPriv.access(doc,fix)-1;if(!attaches){doc.removeEventListener(orig,handler,true);dataPriv.remove(doc,fix);}else{dataPriv.access(doc,fix,attaches);}}};});}var location=window.location;var nonce={guid:Date.now()};var rquery=/\?/;// Cross-browser xml parsing
jQuery.parseXML=function(data){var xml;if(!data||typeof data!=="string"){return null;}// Support: IE 9 - 11 only
// IE throws on parseFromString with invalid input.
try{xml=new window.DOMParser().parseFromString(data,"text/xml");}catch(e){xml=undefined;}if(!xml||xml.getElementsByTagName("parsererror").length){jQuery.error("Invalid XML: "+data);}return xml;};var rbracket=/\[\]$/,rCRLF=/\r?\n/g,rsubmitterTypes=/^(?:submit|button|image|reset|file)$/i,rsubmittable=/^(?:input|select|textarea|keygen)/i;function buildParams(prefix,obj,traditional,add){var name;if(Array.isArray(obj)){// Serialize array item.
jQuery.each(obj,function(i,v){if(traditional||rbracket.test(prefix)){// Treat each array item as a scalar.
add(prefix,v);}else{// Item is non-scalar (array or object), encode its numeric index.
buildParams(prefix+"["+(_typeof(v)==="object"&&v!=null?i:"")+"]",v,traditional,add);}});}else if(!traditional&&toType(obj)==="object"){// Serialize object item.
for(name in obj){buildParams(prefix+"["+name+"]",obj[name],traditional,add);}}else{// Serialize scalar item.
add(prefix,obj);}}// Serialize an array of form elements or a set of
// key/values into a query string
jQuery.param=function(a,traditional){var prefix,s=[],add=function add(key,valueOrFunction){// If value is a function, invoke it and use its return value
var value=isFunction(valueOrFunction)?valueOrFunction():valueOrFunction;s[s.length]=encodeURIComponent(key)+"="+encodeURIComponent(value==null?"":value);};if(a==null){return"";}// If an array was passed in, assume that it is an array of form elements.
if(Array.isArray(a)||a.jquery&&!jQuery.isPlainObject(a)){// Serialize the form elements
jQuery.each(a,function(){add(this.name,this.value);});}else{// If traditional, encode the "old" way (the way 1.3.2 or older
// did it), otherwise encode params recursively.
for(prefix in a){buildParams(prefix,a[prefix],traditional,add);}}// Return the resulting serialization
return s.join("&");};jQuery.fn.extend({serialize:function serialize(){return jQuery.param(this.serializeArray());},serializeArray:function serializeArray(){return this.map(function(){// Can add propHook for "elements" to filter or add form elements
var elements=jQuery.prop(this,"elements");return elements?jQuery.makeArray(elements):this;}).filter(function(){var type=this.type;// Use .is( ":disabled" ) so that fieldset[disabled] works
return this.name&&!jQuery(this).is(":disabled")&&rsubmittable.test(this.nodeName)&&!rsubmitterTypes.test(type)&&(this.checked||!rcheckableType.test(type));}).map(function(_i,elem){var val=jQuery(this).val();if(val==null){return null;}if(Array.isArray(val)){return jQuery.map(val,function(val){return{name:elem.name,value:val.replace(rCRLF,"\r\n")};});}return{name:elem.name,value:val.replace(rCRLF,"\r\n")};}).get();}});var r20=/%20/g,rhash=/#.*$/,rantiCache=/([?&])_=[^&]*/,rheaders=/^(.*?):[ \t]*([^\r\n]*)$/mg,// #7653, #8125, #8152: local protocol detection
rlocalProtocol=/^(?:about|app|app-storage|.+-extension|file|res|widget):$/,rnoContent=/^(?:GET|HEAD)$/,rprotocol=/^\/\//,/* Prefilters
	 * 1) They are useful to introduce custom dataTypes (see ajax/jsonp.js for an example)
	 * 2) These are called:
	 *    - BEFORE asking for a transport
	 *    - AFTER param serialization (s.data is a string if s.processData is true)
	 * 3) key is the dataType
	 * 4) the catchall symbol "*" can be used
	 * 5) execution will start with transport dataType and THEN continue down to "*" if needed
	 */prefilters={},/* Transports bindings
	 * 1) key is the dataType
	 * 2) the catchall symbol "*" can be used
	 * 3) selection will start with transport dataType and THEN go to "*" if needed
	 */transports={},// Avoid comment-prolog char sequence (#10098); must appease lint and evade compression
allTypes="*/".concat("*"),// Anchor tag for parsing the document origin
originAnchor=document.createElement("a");originAnchor.href=location.href;// Base "constructor" for jQuery.ajaxPrefilter and jQuery.ajaxTransport
function addToPrefiltersOrTransports(structure){// dataTypeExpression is optional and defaults to "*"
return function(dataTypeExpression,func){if(typeof dataTypeExpression!=="string"){func=dataTypeExpression;dataTypeExpression="*";}var dataType,i=0,dataTypes=dataTypeExpression.toLowerCase().match(rnothtmlwhite)||[];if(isFunction(func)){// For each dataType in the dataTypeExpression
while(dataType=dataTypes[i++]){// Prepend if requested
if(dataType[0]==="+"){dataType=dataType.slice(1)||"*";(structure[dataType]=structure[dataType]||[]).unshift(func);// Otherwise append
}else{(structure[dataType]=structure[dataType]||[]).push(func);}}}};}// Base inspection function for prefilters and transports
function inspectPrefiltersOrTransports(structure,options,originalOptions,jqXHR){var inspected={},seekingTransport=structure===transports;function inspect(dataType){var selected;inspected[dataType]=true;jQuery.each(structure[dataType]||[],function(_,prefilterOrFactory){var dataTypeOrTransport=prefilterOrFactory(options,originalOptions,jqXHR);if(typeof dataTypeOrTransport==="string"&&!seekingTransport&&!inspected[dataTypeOrTransport]){options.dataTypes.unshift(dataTypeOrTransport);inspect(dataTypeOrTransport);return false;}else if(seekingTransport){return!(selected=dataTypeOrTransport);}});return selected;}return inspect(options.dataTypes[0])||!inspected["*"]&&inspect("*");}// A special extend for ajax options
// that takes "flat" options (not to be deep extended)
// Fixes #9887
function ajaxExtend(target,src){var key,deep,flatOptions=jQuery.ajaxSettings.flatOptions||{};for(key in src){if(src[key]!==undefined){(flatOptions[key]?target:deep||(deep={}))[key]=src[key];}}if(deep){jQuery.extend(true,target,deep);}return target;}/* Handles responses to an ajax request:
 * - finds the right dataType (mediates between content-type and expected dataType)
 * - returns the corresponding response
 */function ajaxHandleResponses(s,jqXHR,responses){var ct,type,finalDataType,firstDataType,contents=s.contents,dataTypes=s.dataTypes;// Remove auto dataType and get content-type in the process
while(dataTypes[0]==="*"){dataTypes.shift();if(ct===undefined){ct=s.mimeType||jqXHR.getResponseHeader("Content-Type");}}// Check if we're dealing with a known content-type
if(ct){for(type in contents){if(contents[type]&&contents[type].test(ct)){dataTypes.unshift(type);break;}}}// Check to see if we have a response for the expected dataType
if(dataTypes[0]in responses){finalDataType=dataTypes[0];}else{// Try convertible dataTypes
for(type in responses){if(!dataTypes[0]||s.converters[type+" "+dataTypes[0]]){finalDataType=type;break;}if(!firstDataType){firstDataType=type;}}// Or just use first one
finalDataType=finalDataType||firstDataType;}// If we found a dataType
// We add the dataType to the list if needed
// and return the corresponding response
if(finalDataType){if(finalDataType!==dataTypes[0]){dataTypes.unshift(finalDataType);}return responses[finalDataType];}}/* Chain conversions given the request and the original response
 * Also sets the responseXXX fields on the jqXHR instance
 */function ajaxConvert(s,response,jqXHR,isSuccess){var conv2,current,conv,tmp,prev,converters={},// Work with a copy of dataTypes in case we need to modify it for conversion
dataTypes=s.dataTypes.slice();// Create converters map with lowercased keys
if(dataTypes[1]){for(conv in s.converters){converters[conv.toLowerCase()]=s.converters[conv];}}current=dataTypes.shift();// Convert to each sequential dataType
while(current){if(s.responseFields[current]){jqXHR[s.responseFields[current]]=response;}// Apply the dataFilter if provided
if(!prev&&isSuccess&&s.dataFilter){response=s.dataFilter(response,s.dataType);}prev=current;current=dataTypes.shift();if(current){// There's only work to do if current dataType is non-auto
if(current==="*"){current=prev;// Convert response if prev dataType is non-auto and differs from current
}else if(prev!=="*"&&prev!==current){// Seek a direct converter
conv=converters[prev+" "+current]||converters["* "+current];// If none found, seek a pair
if(!conv){for(conv2 in converters){// If conv2 outputs current
tmp=conv2.split(" ");if(tmp[1]===current){// If prev can be converted to accepted input
conv=converters[prev+" "+tmp[0]]||converters["* "+tmp[0]];if(conv){// Condense equivalence converters
if(conv===true){conv=converters[conv2];// Otherwise, insert the intermediate dataType
}else if(converters[conv2]!==true){current=tmp[0];dataTypes.unshift(tmp[1]);}break;}}}}// Apply converter (if not an equivalence)
if(conv!==true){// Unless errors are allowed to bubble, catch and return them
if(conv&&s.throws){response=conv(response);}else{try{response=conv(response);}catch(e){return{state:"parsererror",error:conv?e:"No conversion from "+prev+" to "+current};}}}}}}return{state:"success",data:response};}jQuery.extend({// Counter for holding the number of active queries
active:0,// Last-Modified header cache for next request
lastModified:{},etag:{},ajaxSettings:{url:location.href,type:"GET",isLocal:rlocalProtocol.test(location.protocol),global:true,processData:true,async:true,contentType:"application/x-www-form-urlencoded; charset=UTF-8",/*
		timeout: 0,
		data: null,
		dataType: null,
		username: null,
		password: null,
		cache: null,
		throws: false,
		traditional: false,
		headers: {},
		*/accepts:{"*":allTypes,text:"text/plain",html:"text/html",xml:"application/xml, text/xml",json:"application/json, text/javascript"},contents:{xml:/\bxml\b/,html:/\bhtml/,json:/\bjson\b/},responseFields:{xml:"responseXML",text:"responseText",json:"responseJSON"},// Data converters
// Keys separate source (or catchall "*") and destination types with a single space
converters:{// Convert anything to text
"* text":String,// Text to html (true = no transformation)
"text html":true,// Evaluate text as a json expression
"text json":JSON.parse,// Parse text as xml
"text xml":jQuery.parseXML},// For options that shouldn't be deep extended:
// you can add your own custom options here if
// and when you create one that shouldn't be
// deep extended (see ajaxExtend)
flatOptions:{url:true,context:true}},// Creates a full fledged settings object into target
// with both ajaxSettings and settings fields.
// If target is omitted, writes into ajaxSettings.
ajaxSetup:function ajaxSetup(target,settings){return settings?// Building a settings object
ajaxExtend(ajaxExtend(target,jQuery.ajaxSettings),settings):// Extending ajaxSettings
ajaxExtend(jQuery.ajaxSettings,target);},ajaxPrefilter:addToPrefiltersOrTransports(prefilters),ajaxTransport:addToPrefiltersOrTransports(transports),// Main method
ajax:function ajax(url,options){// If url is an object, simulate pre-1.5 signature
if(_typeof(url)==="object"){options=url;url=undefined;}// Force options to be an object
options=options||{};var transport,// URL without anti-cache param
cacheURL,// Response headers
responseHeadersString,responseHeaders,// timeout handle
timeoutTimer,// Url cleanup var
urlAnchor,// Request state (becomes false upon send and true upon completion)
completed,// To know if global events are to be dispatched
fireGlobals,// Loop variable
i,// uncached part of the url
uncached,// Create the final options object
s=jQuery.ajaxSetup({},options),// Callbacks context
callbackContext=s.context||s,// Context for global events is callbackContext if it is a DOM node or jQuery collection
globalEventContext=s.context&&(callbackContext.nodeType||callbackContext.jquery)?jQuery(callbackContext):jQuery.event,// Deferreds
deferred=jQuery.Deferred(),completeDeferred=jQuery.Callbacks("once memory"),// Status-dependent callbacks
_statusCode=s.statusCode||{},// Headers (they are sent all at once)
requestHeaders={},requestHeadersNames={},// Default abort message
strAbort="canceled",// Fake xhr
jqXHR={readyState:0,// Builds headers hashtable if needed
getResponseHeader:function getResponseHeader(key){var match;if(completed){if(!responseHeaders){responseHeaders={};while(match=rheaders.exec(responseHeadersString)){responseHeaders[match[1].toLowerCase()+" "]=(responseHeaders[match[1].toLowerCase()+" "]||[]).concat(match[2]);}}match=responseHeaders[key.toLowerCase()+" "];}return match==null?null:match.join(", ");},// Raw string
getAllResponseHeaders:function getAllResponseHeaders(){return completed?responseHeadersString:null;},// Caches the header
setRequestHeader:function setRequestHeader(name,value){if(completed==null){name=requestHeadersNames[name.toLowerCase()]=requestHeadersNames[name.toLowerCase()]||name;requestHeaders[name]=value;}return this;},// Overrides response content-type header
overrideMimeType:function overrideMimeType(type){if(completed==null){s.mimeType=type;}return this;},// Status-dependent callbacks
statusCode:function statusCode(map){var code;if(map){if(completed){// Execute the appropriate callbacks
jqXHR.always(map[jqXHR.status]);}else{// Lazy-add the new callbacks in a way that preserves old ones
for(code in map){_statusCode[code]=[_statusCode[code],map[code]];}}}return this;},// Cancel the request
abort:function abort(statusText){var finalText=statusText||strAbort;if(transport){transport.abort(finalText);}done(0,finalText);return this;}};// Attach deferreds
deferred.promise(jqXHR);// Add protocol if not provided (prefilters might expect it)
// Handle falsy url in the settings object (#10093: consistency with old signature)
// We also use the url parameter if available
s.url=((url||s.url||location.href)+"").replace(rprotocol,location.protocol+"//");// Alias method option to type as per ticket #12004
s.type=options.method||options.type||s.method||s.type;// Extract dataTypes list
s.dataTypes=(s.dataType||"*").toLowerCase().match(rnothtmlwhite)||[""];// A cross-domain request is in order when the origin doesn't match the current origin.
if(s.crossDomain==null){urlAnchor=document.createElement("a");// Support: IE <=8 - 11, Edge 12 - 15
// IE throws exception on accessing the href property if url is malformed,
// e.g. http://example.com:80x/
try{urlAnchor.href=s.url;// Support: IE <=8 - 11 only
// Anchor's host property isn't correctly set when s.url is relative
urlAnchor.href=urlAnchor.href;s.crossDomain=originAnchor.protocol+"//"+originAnchor.host!==urlAnchor.protocol+"//"+urlAnchor.host;}catch(e){// If there is an error parsing the URL, assume it is crossDomain,
// it can be rejected by the transport if it is invalid
s.crossDomain=true;}}// Convert data if not already a string
if(s.data&&s.processData&&typeof s.data!=="string"){s.data=jQuery.param(s.data,s.traditional);}// Apply prefilters
inspectPrefiltersOrTransports(prefilters,s,options,jqXHR);// If request was aborted inside a prefilter, stop there
if(completed){return jqXHR;}// We can fire global events as of now if asked to
// Don't fire events if jQuery.event is undefined in an AMD-usage scenario (#15118)
fireGlobals=jQuery.event&&s.global;// Watch for a new set of requests
if(fireGlobals&&jQuery.active++===0){jQuery.event.trigger("ajaxStart");}// Uppercase the type
s.type=s.type.toUpperCase();// Determine if request has content
s.hasContent=!rnoContent.test(s.type);// Save the URL in case we're toying with the If-Modified-Since
// and/or If-None-Match header later on
// Remove hash to simplify url manipulation
cacheURL=s.url.replace(rhash,"");// More options handling for requests with no content
if(!s.hasContent){// Remember the hash so we can put it back
uncached=s.url.slice(cacheURL.length);// If data is available and should be processed, append data to url
if(s.data&&(s.processData||typeof s.data==="string")){cacheURL+=(rquery.test(cacheURL)?"&":"?")+s.data;// #9682: remove data so that it's not used in an eventual retry
delete s.data;}// Add or update anti-cache param if needed
if(s.cache===false){cacheURL=cacheURL.replace(rantiCache,"$1");uncached=(rquery.test(cacheURL)?"&":"?")+"_="+nonce.guid++ +uncached;}// Put hash and anti-cache on the URL that will be requested (gh-1732)
s.url=cacheURL+uncached;// Change '%20' to '+' if this is encoded form body content (gh-2658)
}else if(s.data&&s.processData&&(s.contentType||"").indexOf("application/x-www-form-urlencoded")===0){s.data=s.data.replace(r20,"+");}// Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.
if(s.ifModified){if(jQuery.lastModified[cacheURL]){jqXHR.setRequestHeader("If-Modified-Since",jQuery.lastModified[cacheURL]);}if(jQuery.etag[cacheURL]){jqXHR.setRequestHeader("If-None-Match",jQuery.etag[cacheURL]);}}// Set the correct header, if data is being sent
if(s.data&&s.hasContent&&s.contentType!==false||options.contentType){jqXHR.setRequestHeader("Content-Type",s.contentType);}// Set the Accepts header for the server, depending on the dataType
jqXHR.setRequestHeader("Accept",s.dataTypes[0]&&s.accepts[s.dataTypes[0]]?s.accepts[s.dataTypes[0]]+(s.dataTypes[0]!=="*"?", "+allTypes+"; q=0.01":""):s.accepts["*"]);// Check for headers option
for(i in s.headers){jqXHR.setRequestHeader(i,s.headers[i]);}// Allow custom headers/mimetypes and early abort
if(s.beforeSend&&(s.beforeSend.call(callbackContext,jqXHR,s)===false||completed)){// Abort if not done already and return
return jqXHR.abort();}// Aborting is no longer a cancellation
strAbort="abort";// Install callbacks on deferreds
completeDeferred.add(s.complete);jqXHR.done(s.success);jqXHR.fail(s.error);// Get transport
transport=inspectPrefiltersOrTransports(transports,s,options,jqXHR);// If no transport, we auto-abort
if(!transport){done(-1,"No Transport");}else{jqXHR.readyState=1;// Send global event
if(fireGlobals){globalEventContext.trigger("ajaxSend",[jqXHR,s]);}// If request was aborted inside ajaxSend, stop there
if(completed){return jqXHR;}// Timeout
if(s.async&&s.timeout>0){timeoutTimer=window.setTimeout(function(){jqXHR.abort("timeout");},s.timeout);}try{completed=false;transport.send(requestHeaders,done);}catch(e){// Rethrow post-completion exceptions
if(completed){throw e;}// Propagate others as results
done(-1,e);}}// Callback for when everything is done
function done(status,nativeStatusText,responses,headers){var isSuccess,success,error,response,modified,statusText=nativeStatusText;// Ignore repeat invocations
if(completed){return;}completed=true;// Clear timeout if it exists
if(timeoutTimer){window.clearTimeout(timeoutTimer);}// Dereference transport for early garbage collection
// (no matter how long the jqXHR object will be used)
transport=undefined;// Cache response headers
responseHeadersString=headers||"";// Set readyState
jqXHR.readyState=status>0?4:0;// Determine if successful
isSuccess=status>=200&&status<300||status===304;// Get response data
if(responses){response=ajaxHandleResponses(s,jqXHR,responses);}// Use a noop converter for missing script
if(!isSuccess&&jQuery.inArray("script",s.dataTypes)>-1){s.converters["text script"]=function(){};}// Convert no matter what (that way responseXXX fields are always set)
response=ajaxConvert(s,response,jqXHR,isSuccess);// If successful, handle type chaining
if(isSuccess){// Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.
if(s.ifModified){modified=jqXHR.getResponseHeader("Last-Modified");if(modified){jQuery.lastModified[cacheURL]=modified;}modified=jqXHR.getResponseHeader("etag");if(modified){jQuery.etag[cacheURL]=modified;}}// if no content
if(status===204||s.type==="HEAD"){statusText="nocontent";// if not modified
}else if(status===304){statusText="notmodified";// If we have data, let's convert it
}else{statusText=response.state;success=response.data;error=response.error;isSuccess=!error;}}else{// Extract error from statusText and normalize for non-aborts
error=statusText;if(status||!statusText){statusText="error";if(status<0){status=0;}}}// Set data for the fake xhr object
jqXHR.status=status;jqXHR.statusText=(nativeStatusText||statusText)+"";// Success/Error
if(isSuccess){deferred.resolveWith(callbackContext,[success,statusText,jqXHR]);}else{deferred.rejectWith(callbackContext,[jqXHR,statusText,error]);}// Status-dependent callbacks
jqXHR.statusCode(_statusCode);_statusCode=undefined;if(fireGlobals){globalEventContext.trigger(isSuccess?"ajaxSuccess":"ajaxError",[jqXHR,s,isSuccess?success:error]);}// Complete
completeDeferred.fireWith(callbackContext,[jqXHR,statusText]);if(fireGlobals){globalEventContext.trigger("ajaxComplete",[jqXHR,s]);// Handle the global AJAX counter
if(! --jQuery.active){jQuery.event.trigger("ajaxStop");}}}return jqXHR;},getJSON:function getJSON(url,data,callback){return jQuery.get(url,data,callback,"json");},getScript:function getScript(url,callback){return jQuery.get(url,undefined,callback,"script");}});jQuery.each(["get","post"],function(_i,method){jQuery[method]=function(url,data,callback,type){// Shift arguments if data argument was omitted
if(isFunction(data)){type=type||callback;callback=data;data=undefined;}// The url can be an options object (which then must have .url)
return jQuery.ajax(jQuery.extend({url:url,type:method,dataType:type,data:data,success:callback},jQuery.isPlainObject(url)&&url));};});jQuery.ajaxPrefilter(function(s){var i;for(i in s.headers){if(i.toLowerCase()==="content-type"){s.contentType=s.headers[i]||"";}}});jQuery._evalUrl=function(url,options,doc){return jQuery.ajax({url:url,// Make this explicit, since user can override this through ajaxSetup (#11264)
type:"GET",dataType:"script",cache:true,async:false,global:false,// Only evaluate the response if it is successful (gh-4126)
// dataFilter is not invoked for failure responses, so using it instead
// of the default converter is kludgy but it works.
converters:{"text script":function textScript(){}},dataFilter:function dataFilter(response){jQuery.globalEval(response,options,doc);}});};jQuery.fn.extend({wrapAll:function wrapAll(html){var wrap;if(this[0]){if(isFunction(html)){html=html.call(this[0]);}// The elements to wrap the target around
wrap=jQuery(html,this[0].ownerDocument).eq(0).clone(true);if(this[0].parentNode){wrap.insertBefore(this[0]);}wrap.map(function(){var elem=this;while(elem.firstElementChild){elem=elem.firstElementChild;}return elem;}).append(this);}return this;},wrapInner:function wrapInner(html){if(isFunction(html)){return this.each(function(i){jQuery(this).wrapInner(html.call(this,i));});}return this.each(function(){var self=jQuery(this),contents=self.contents();if(contents.length){contents.wrapAll(html);}else{self.append(html);}});},wrap:function wrap(html){var htmlIsFunction=isFunction(html);return this.each(function(i){jQuery(this).wrapAll(htmlIsFunction?html.call(this,i):html);});},unwrap:function unwrap(selector){this.parent(selector).not("body").each(function(){jQuery(this).replaceWith(this.childNodes);});return this;}});jQuery.expr.pseudos.hidden=function(elem){return!jQuery.expr.pseudos.visible(elem);};jQuery.expr.pseudos.visible=function(elem){return!!(elem.offsetWidth||elem.offsetHeight||elem.getClientRects().length);};jQuery.ajaxSettings.xhr=function(){try{return new window.XMLHttpRequest();}catch(e){}};var xhrSuccessStatus={// File protocol always yields status code 0, assume 200
0:200,// Support: IE <=9 only
// #1450: sometimes IE returns 1223 when it should be 204
1223:204},xhrSupported=jQuery.ajaxSettings.xhr();support.cors=!!xhrSupported&&"withCredentials"in xhrSupported;support.ajax=xhrSupported=!!xhrSupported;jQuery.ajaxTransport(function(options){var _callback,errorCallback;// Cross domain only allowed if supported through XMLHttpRequest
if(support.cors||xhrSupported&&!options.crossDomain){return{send:function send(headers,complete){var i,xhr=options.xhr();xhr.open(options.type,options.url,options.async,options.username,options.password);// Apply custom fields if provided
if(options.xhrFields){for(i in options.xhrFields){xhr[i]=options.xhrFields[i];}}// Override mime type if needed
if(options.mimeType&&xhr.overrideMimeType){xhr.overrideMimeType(options.mimeType);}// X-Requested-With header
// For cross-domain requests, seeing as conditions for a preflight are
// akin to a jigsaw puzzle, we simply never set it to be sure.
// (it can always be set on a per-request basis or even using ajaxSetup)
// For same-domain requests, won't change header if already provided.
if(!options.crossDomain&&!headers["X-Requested-With"]){headers["X-Requested-With"]="XMLHttpRequest";}// Set headers
for(i in headers){xhr.setRequestHeader(i,headers[i]);}// Callback
_callback=function callback(type){return function(){if(_callback){_callback=errorCallback=xhr.onload=xhr.onerror=xhr.onabort=xhr.ontimeout=xhr.onreadystatechange=null;if(type==="abort"){xhr.abort();}else if(type==="error"){// Support: IE <=9 only
// On a manual native abort, IE9 throws
// errors on any property access that is not readyState
if(typeof xhr.status!=="number"){complete(0,"error");}else{complete(// File: protocol always yields status 0; see #8605, #14207
xhr.status,xhr.statusText);}}else{complete(xhrSuccessStatus[xhr.status]||xhr.status,xhr.statusText,// Support: IE <=9 only
// IE9 has no XHR2 but throws on binary (trac-11426)
// For XHR2 non-text, let the caller handle it (gh-2498)
(xhr.responseType||"text")!=="text"||typeof xhr.responseText!=="string"?{binary:xhr.response}:{text:xhr.responseText},xhr.getAllResponseHeaders());}}};};// Listen to events
xhr.onload=_callback();errorCallback=xhr.onerror=xhr.ontimeout=_callback("error");// Support: IE 9 only
// Use onreadystatechange to replace onabort
// to handle uncaught aborts
if(xhr.onabort!==undefined){xhr.onabort=errorCallback;}else{xhr.onreadystatechange=function(){// Check readyState before timeout as it changes
if(xhr.readyState===4){// Allow onerror to be called first,
// but that will not handle a native abort
// Also, save errorCallback to a variable
// as xhr.onerror cannot be accessed
window.setTimeout(function(){if(_callback){errorCallback();}});}};}// Create the abort callback
_callback=_callback("abort");try{// Do send the request (this may raise an exception)
xhr.send(options.hasContent&&options.data||null);}catch(e){// #14683: Only rethrow if this hasn't been notified as an error yet
if(_callback){throw e;}}},abort:function abort(){if(_callback){_callback();}}};}});// Prevent auto-execution of scripts when no explicit dataType was provided (See gh-2432)
jQuery.ajaxPrefilter(function(s){if(s.crossDomain){s.contents.script=false;}});// Install script dataType
jQuery.ajaxSetup({accepts:{script:"text/javascript, application/javascript, "+"application/ecmascript, application/x-ecmascript"},contents:{script:/\b(?:java|ecma)script\b/},converters:{"text script":function textScript(text){jQuery.globalEval(text);return text;}}});// Handle cache's special case and crossDomain
jQuery.ajaxPrefilter("script",function(s){if(s.cache===undefined){s.cache=false;}if(s.crossDomain){s.type="GET";}});// Bind script tag hack transport
jQuery.ajaxTransport("script",function(s){// This transport only deals with cross domain or forced-by-attrs requests
if(s.crossDomain||s.scriptAttrs){var script,_callback2;return{send:function send(_,complete){script=jQuery("<script>").attr(s.scriptAttrs||{}).prop({charset:s.scriptCharset,src:s.url}).on("load error",_callback2=function callback(evt){script.remove();_callback2=null;if(evt){complete(evt.type==="error"?404:200,evt.type);}});// Use native DOM manipulation to avoid our domManip AJAX trickery
document.head.appendChild(script[0]);},abort:function abort(){if(_callback2){_callback2();}}};}});var oldCallbacks=[],rjsonp=/(=)\?(?=&|$)|\?\?/;// Default jsonp settings
jQuery.ajaxSetup({jsonp:"callback",jsonpCallback:function jsonpCallback(){var callback=oldCallbacks.pop()||jQuery.expando+"_"+nonce.guid++;this[callback]=true;return callback;}});// Detect, normalize options and install callbacks for jsonp requests
jQuery.ajaxPrefilter("json jsonp",function(s,originalSettings,jqXHR){var callbackName,overwritten,responseContainer,jsonProp=s.jsonp!==false&&(rjsonp.test(s.url)?"url":typeof s.data==="string"&&(s.contentType||"").indexOf("application/x-www-form-urlencoded")===0&&rjsonp.test(s.data)&&"data");// Handle iff the expected data type is "jsonp" or we have a parameter to set
if(jsonProp||s.dataTypes[0]==="jsonp"){// Get callback name, remembering preexisting value associated with it
callbackName=s.jsonpCallback=isFunction(s.jsonpCallback)?s.jsonpCallback():s.jsonpCallback;// Insert callback into url or form data
if(jsonProp){s[jsonProp]=s[jsonProp].replace(rjsonp,"$1"+callbackName);}else if(s.jsonp!==false){s.url+=(rquery.test(s.url)?"&":"?")+s.jsonp+"="+callbackName;}// Use data converter to retrieve json after script execution
s.converters["script json"]=function(){if(!responseContainer){jQuery.error(callbackName+" was not called");}return responseContainer[0];};// Force json dataType
s.dataTypes[0]="json";// Install callback
overwritten=window[callbackName];window[callbackName]=function(){responseContainer=arguments;};// Clean-up function (fires after converters)
jqXHR.always(function(){// If previous value didn't exist - remove it
if(overwritten===undefined){jQuery(window).removeProp(callbackName);// Otherwise restore preexisting value
}else{window[callbackName]=overwritten;}// Save back as free
if(s[callbackName]){// Make sure that re-using the options doesn't screw things around
s.jsonpCallback=originalSettings.jsonpCallback;// Save the callback name for future use
oldCallbacks.push(callbackName);}// Call if it was a function and we have a response
if(responseContainer&&isFunction(overwritten)){overwritten(responseContainer[0]);}responseContainer=overwritten=undefined;});// Delegate to script
return"script";}});// Support: Safari 8 only
// In Safari 8 documents created via document.implementation.createHTMLDocument
// collapse sibling forms: the second one becomes a child of the first one.
// Because of that, this security measure has to be disabled in Safari 8.
// https://bugs.webkit.org/show_bug.cgi?id=137337
support.createHTMLDocument=function(){var body=document.implementation.createHTMLDocument("").body;body.innerHTML="<form></form><form></form>";return body.childNodes.length===2;}();// Argument "data" should be string of html
// context (optional): If specified, the fragment will be created in this context,
// defaults to document
// keepScripts (optional): If true, will include scripts passed in the html string
jQuery.parseHTML=function(data,context,keepScripts){if(typeof data!=="string"){return[];}if(typeof context==="boolean"){keepScripts=context;context=false;}var base,parsed,scripts;if(!context){// Stop scripts or inline event handlers from being executed immediately
// by using document.implementation
if(support.createHTMLDocument){context=document.implementation.createHTMLDocument("");// Set the base href for the created document
// so any parsed elements with URLs
// are based on the document's URL (gh-2965)
base=context.createElement("base");base.href=document.location.href;context.head.appendChild(base);}else{context=document;}}parsed=rsingleTag.exec(data);scripts=!keepScripts&&[];// Single tag
if(parsed){return[context.createElement(parsed[1])];}parsed=buildFragment([data],context,scripts);if(scripts&&scripts.length){jQuery(scripts).remove();}return jQuery.merge([],parsed.childNodes);};/**
 * Load a url into a page
 */jQuery.fn.load=function(url,params,callback){var selector,type,response,self=this,off=url.indexOf(" ");if(off>-1){selector=stripAndCollapse(url.slice(off));url=url.slice(0,off);}// If it's a function
if(isFunction(params)){// We assume that it's the callback
callback=params;params=undefined;// Otherwise, build a param string
}else if(params&&_typeof(params)==="object"){type="POST";}// If we have elements to modify, make the request
if(self.length>0){jQuery.ajax({url:url,// If "type" variable is undefined, then "GET" method will be used.
// Make value of this field explicit since
// user can override it through ajaxSetup method
type:type||"GET",dataType:"html",data:params}).done(function(responseText){// Save response for use in complete callback
response=arguments;self.html(selector?// If a selector was specified, locate the right elements in a dummy div
// Exclude scripts to avoid IE 'Permission Denied' errors
jQuery("<div>").append(jQuery.parseHTML(responseText)).find(selector):// Otherwise use the full result
responseText);// If the request succeeds, this function gets "data", "status", "jqXHR"
// but they are ignored because response was set above.
// If it fails, this function gets "jqXHR", "status", "error"
}).always(callback&&function(jqXHR,status){self.each(function(){callback.apply(this,response||[jqXHR.responseText,status,jqXHR]);});});}return this;};jQuery.expr.pseudos.animated=function(elem){return jQuery.grep(jQuery.timers,function(fn){return elem===fn.elem;}).length;};jQuery.offset={setOffset:function setOffset(elem,options,i){var curPosition,curLeft,curCSSTop,curTop,curOffset,curCSSLeft,calculatePosition,position=jQuery.css(elem,"position"),curElem=jQuery(elem),props={};// Set position first, in-case top/left are set even on static elem
if(position==="static"){elem.style.position="relative";}curOffset=curElem.offset();curCSSTop=jQuery.css(elem,"top");curCSSLeft=jQuery.css(elem,"left");calculatePosition=(position==="absolute"||position==="fixed")&&(curCSSTop+curCSSLeft).indexOf("auto")>-1;// Need to be able to calculate position if either
// top or left is auto and position is either absolute or fixed
if(calculatePosition){curPosition=curElem.position();curTop=curPosition.top;curLeft=curPosition.left;}else{curTop=parseFloat(curCSSTop)||0;curLeft=parseFloat(curCSSLeft)||0;}if(isFunction(options)){// Use jQuery.extend here to allow modification of coordinates argument (gh-1848)
options=options.call(elem,i,jQuery.extend({},curOffset));}if(options.top!=null){props.top=options.top-curOffset.top+curTop;}if(options.left!=null){props.left=options.left-curOffset.left+curLeft;}if("using"in options){options.using.call(elem,props);}else{if(typeof props.top==="number"){props.top+="px";}if(typeof props.left==="number"){props.left+="px";}curElem.css(props);}}};jQuery.fn.extend({// offset() relates an element's border box to the document origin
offset:function offset(options){// Preserve chaining for setter
if(arguments.length){return options===undefined?this:this.each(function(i){jQuery.offset.setOffset(this,options,i);});}var rect,win,elem=this[0];if(!elem){return;}// Return zeros for disconnected and hidden (display: none) elements (gh-2310)
// Support: IE <=11 only
// Running getBoundingClientRect on a
// disconnected node in IE throws an error
if(!elem.getClientRects().length){return{top:0,left:0};}// Get document-relative position by adding viewport scroll to viewport-relative gBCR
rect=elem.getBoundingClientRect();win=elem.ownerDocument.defaultView;return{top:rect.top+win.pageYOffset,left:rect.left+win.pageXOffset};},// position() relates an element's margin box to its offset parent's padding box
// This corresponds to the behavior of CSS absolute positioning
position:function position(){if(!this[0]){return;}var offsetParent,offset,doc,elem=this[0],parentOffset={top:0,left:0};// position:fixed elements are offset from the viewport, which itself always has zero offset
if(jQuery.css(elem,"position")==="fixed"){// Assume position:fixed implies availability of getBoundingClientRect
offset=elem.getBoundingClientRect();}else{offset=this.offset();// Account for the *real* offset parent, which can be the document or its root element
// when a statically positioned element is identified
doc=elem.ownerDocument;offsetParent=elem.offsetParent||doc.documentElement;while(offsetParent&&(offsetParent===doc.body||offsetParent===doc.documentElement)&&jQuery.css(offsetParent,"position")==="static"){offsetParent=offsetParent.parentNode;}if(offsetParent&&offsetParent!==elem&&offsetParent.nodeType===1){// Incorporate borders into its offset, since they are outside its content origin
parentOffset=jQuery(offsetParent).offset();parentOffset.top+=jQuery.css(offsetParent,"borderTopWidth",true);parentOffset.left+=jQuery.css(offsetParent,"borderLeftWidth",true);}}// Subtract parent offsets and element margins
return{top:offset.top-parentOffset.top-jQuery.css(elem,"marginTop",true),left:offset.left-parentOffset.left-jQuery.css(elem,"marginLeft",true)};},// This method will return documentElement in the following cases:
// 1) For the element inside the iframe without offsetParent, this method will return
//    documentElement of the parent window
// 2) For the hidden or detached element
// 3) For body or html element, i.e. in case of the html node - it will return itself
//
// but those exceptions were never presented as a real life use-cases
// and might be considered as more preferable results.
//
// This logic, however, is not guaranteed and can change at any point in the future
offsetParent:function offsetParent(){return this.map(function(){var offsetParent=this.offsetParent;while(offsetParent&&jQuery.css(offsetParent,"position")==="static"){offsetParent=offsetParent.offsetParent;}return offsetParent||documentElement;});}});// Create scrollLeft and scrollTop methods
jQuery.each({scrollLeft:"pageXOffset",scrollTop:"pageYOffset"},function(method,prop){var top="pageYOffset"===prop;jQuery.fn[method]=function(val){return access(this,function(elem,method,val){// Coalesce documents and windows
var win;if(isWindow(elem)){win=elem;}else if(elem.nodeType===9){win=elem.defaultView;}if(val===undefined){return win?win[prop]:elem[method];}if(win){win.scrollTo(!top?val:win.pageXOffset,top?val:win.pageYOffset);}else{elem[method]=val;}},method,val,arguments.length);};});// Support: Safari <=7 - 9.1, Chrome <=37 - 49
// Add the top/left cssHooks using jQuery.fn.position
// Webkit bug: https://bugs.webkit.org/show_bug.cgi?id=29084
// Blink bug: https://bugs.chromium.org/p/chromium/issues/detail?id=589347
// getComputedStyle returns percent when specified for top/left/bottom/right;
// rather than make the css module depend on the offset module, just check for it here
jQuery.each(["top","left"],function(_i,prop){jQuery.cssHooks[prop]=addGetHookIf(support.pixelPosition,function(elem,computed){if(computed){computed=curCSS(elem,prop);// If curCSS returns percentage, fallback to offset
return rnumnonpx.test(computed)?jQuery(elem).position()[prop]+"px":computed;}});});// Create innerHeight, innerWidth, height, width, outerHeight and outerWidth methods
jQuery.each({Height:"height",Width:"width"},function(name,type){jQuery.each({padding:"inner"+name,content:type,"":"outer"+name},function(defaultExtra,funcName){// Margin is only for outerHeight, outerWidth
jQuery.fn[funcName]=function(margin,value){var chainable=arguments.length&&(defaultExtra||typeof margin!=="boolean"),extra=defaultExtra||(margin===true||value===true?"margin":"border");return access(this,function(elem,type,value){var doc;if(isWindow(elem)){// $( window ).outerWidth/Height return w/h including scrollbars (gh-1729)
return funcName.indexOf("outer")===0?elem["inner"+name]:elem.document.documentElement["client"+name];}// Get document width or height
if(elem.nodeType===9){doc=elem.documentElement;// Either scroll[Width/Height] or offset[Width/Height] or client[Width/Height],
// whichever is greatest
return Math.max(elem.body["scroll"+name],doc["scroll"+name],elem.body["offset"+name],doc["offset"+name],doc["client"+name]);}return value===undefined?// Get width or height on the element, requesting but not forcing parseFloat
jQuery.css(elem,type,extra):// Set width or height on the element
jQuery.style(elem,type,value,extra);},type,chainable?margin:undefined,chainable);};});});jQuery.each(["ajaxStart","ajaxStop","ajaxComplete","ajaxError","ajaxSuccess","ajaxSend"],function(_i,type){jQuery.fn[type]=function(fn){return this.on(type,fn);};});jQuery.fn.extend({bind:function bind(types,data,fn){return this.on(types,null,data,fn);},unbind:function unbind(types,fn){return this.off(types,null,fn);},delegate:function delegate(selector,types,data,fn){return this.on(types,selector,data,fn);},undelegate:function undelegate(selector,types,fn){// ( namespace ) or ( selector, types [, fn] )
return arguments.length===1?this.off(selector,"**"):this.off(types,selector||"**",fn);},hover:function hover(fnOver,fnOut){return this.mouseenter(fnOver).mouseleave(fnOut||fnOver);}});jQuery.each(("blur focus focusin focusout resize scroll click dblclick "+"mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave "+"change select submit keydown keypress keyup contextmenu").split(" "),function(_i,name){// Handle event binding
jQuery.fn[name]=function(data,fn){return arguments.length>0?this.on(name,null,data,fn):this.trigger(name);};});// Support: Android <=4.0 only
// Make sure we trim BOM and NBSP
var rtrim=/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g;// Bind a function to a context, optionally partially applying any
// arguments.
// jQuery.proxy is deprecated to promote standards (specifically Function#bind)
// However, it is not slated for removal any time soon
jQuery.proxy=function(fn,context){var tmp,args,proxy;if(typeof context==="string"){tmp=fn[context];context=fn;fn=tmp;}// Quick check to determine if target is callable, in the spec
// this throws a TypeError, but we will just return undefined.
if(!isFunction(fn)){return undefined;}// Simulated bind
args=_slice.call(arguments,2);proxy=function proxy(){return fn.apply(context||this,args.concat(_slice.call(arguments)));};// Set the guid of unique handler to the same of original handler, so it can be removed
proxy.guid=fn.guid=fn.guid||jQuery.guid++;return proxy;};jQuery.holdReady=function(hold){if(hold){jQuery.readyWait++;}else{jQuery.ready(true);}};jQuery.isArray=Array.isArray;jQuery.parseJSON=JSON.parse;jQuery.nodeName=nodeName;jQuery.isFunction=isFunction;jQuery.isWindow=isWindow;jQuery.camelCase=camelCase;jQuery.type=toType;jQuery.now=Date.now;jQuery.isNumeric=function(obj){// As of jQuery 3.0, isNumeric is limited to
// strings and numbers (primitives or objects)
// that can be coerced to finite numbers (gh-2662)
var type=jQuery.type(obj);return(type==="number"||type==="string")&&// parseFloat NaNs numeric-cast false positives ("")
// ...but misinterprets leading-number strings, particularly hex literals ("0x...")
// subtraction forces infinities to NaN
!isNaN(obj-parseFloat(obj));};jQuery.trim=function(text){return text==null?"":(text+"").replace(rtrim,"");};// Register as a named AMD module, since jQuery can be concatenated with other
// files that may use define, but not via a proper concatenation script that
// understands anonymous AMD modules. A named AMD is safest and most robust
// way to register. Lowercase jquery is used because AMD module names are
// derived from file names, and jQuery is normally delivered in a lowercase
// file name. Do this after creating the global so that if an AMD module wants
// to call noConflict to hide this version of jQuery, it will work.
// Note that for maximum portability, libraries that are not jQuery should
// declare themselves as anonymous modules, and avoid setting a global if an
// AMD loader is present. jQuery is a special case. For more information, see
// https://github.com/jrburke/requirejs/wiki/Updating-existing-libraries#wiki-anon
if(typeof define==="function"&&define.amd){define("jquery",[],function(){return jQuery;});}var// Map over jQuery in case of overwrite
_jQuery=window.jQuery,// Map over the $ in case of overwrite
_$=window.$;jQuery.noConflict=function(deep){if(window.$===jQuery){window.$=_$;}if(deep&&window.jQuery===jQuery){window.jQuery=_jQuery;}return jQuery;};// Expose jQuery and $ identifiers, even in AMD
// (#7102#comment:10, https://github.com/jquery/jquery/pull/557)
// and CommonJS for browser emulators (#13566)
if(typeof noGlobal==="undefined"){window.jQuery=window.$=jQuery;}return jQuery;});/*! jQuery UI - v1.12.1 - 2016-09-14
* http://jqueryui.com
* Includes: widget.js, position.js, data.js, disable-selection.js, effect.js, effects/effect-blind.js, effects/effect-bounce.js, effects/effect-clip.js, effects/effect-drop.js, effects/effect-explode.js, effects/effect-fade.js, effects/effect-fold.js, effects/effect-highlight.js, effects/effect-puff.js, effects/effect-pulsate.js, effects/effect-scale.js, effects/effect-shake.js, effects/effect-size.js, effects/effect-slide.js, effects/effect-transfer.js, focusable.js, form-reset-mixin.js, jquery-1-7.js, keycode.js, labels.js, scroll-parent.js, tabbable.js, unique-id.js, widgets/accordion.js, widgets/autocomplete.js, widgets/button.js, widgets/checkboxradio.js, widgets/controlgroup.js, widgets/datepicker.js, widgets/dialog.js, widgets/draggable.js, widgets/droppable.js, widgets/menu.js, widgets/mouse.js, widgets/progressbar.js, widgets/resizable.js, widgets/selectable.js, widgets/selectmenu.js, widgets/slider.js, widgets/sortable.js, widgets/spinner.js, widgets/tabs.js, widgets/tooltip.js
* Copyright jQuery Foundation and other contributors; Licensed MIT */(function(t){"function"==typeof define&&define.amd?define(["jquery"],t):t(jQuery);})(function(t){function e(t){for(var e=t.css("visibility");"inherit"===e;){t=t.parent(),e=t.css("visibility");}return"hidden"!==e;}function i(t){for(var e,i;t.length&&t[0]!==document;){if(e=t.css("position"),("absolute"===e||"relative"===e||"fixed"===e)&&(i=parseInt(t.css("zIndex"),10),!isNaN(i)&&0!==i))return i;t=t.parent();}return 0;}function s(){this._curInst=null,this._keyEvent=!1,this._disabledInputs=[],this._datepickerShowing=!1,this._inDialog=!1,this._mainDivId="ui-datepicker-div",this._inlineClass="ui-datepicker-inline",this._appendClass="ui-datepicker-append",this._triggerClass="ui-datepicker-trigger",this._dialogClass="ui-datepicker-dialog",this._disableClass="ui-datepicker-disabled",this._unselectableClass="ui-datepicker-unselectable",this._currentClass="ui-datepicker-current-day",this._dayOverClass="ui-datepicker-days-cell-over",this.regional=[],this.regional[""]={closeText:"Done",prevText:"Prev",nextText:"Next",currentText:"Today",monthNames:["January","February","March","April","May","June","July","August","September","October","November","December"],monthNamesShort:["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],dayNames:["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],dayNamesShort:["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],dayNamesMin:["Su","Mo","Tu","We","Th","Fr","Sa"],weekHeader:"Wk",dateFormat:"mm/dd/yy",firstDay:0,isRTL:!1,showMonthAfterYear:!1,yearSuffix:""},this._defaults={showOn:"focus",showAnim:"fadeIn",showOptions:{},defaultDate:null,appendText:"",buttonText:"...",buttonImage:"",buttonImageOnly:!1,hideIfNoPrevNext:!1,navigationAsDateFormat:!1,gotoCurrent:!1,changeMonth:!1,changeYear:!1,yearRange:"c-10:c+10",showOtherMonths:!1,selectOtherMonths:!1,showWeek:!1,calculateWeek:this.iso8601Week,shortYearCutoff:"+10",minDate:null,maxDate:null,duration:"fast",beforeShowDay:null,beforeShow:null,onSelect:null,onChangeMonthYear:null,onClose:null,numberOfMonths:1,showCurrentAtPos:0,stepMonths:1,stepBigMonths:12,altField:"",altFormat:"",constrainInput:!0,showButtonPanel:!1,autoSize:!1,disabled:!1},t.extend(this._defaults,this.regional[""]),this.regional.en=t.extend(!0,{},this.regional[""]),this.regional["en-US"]=t.extend(!0,{},this.regional.en),this.dpDiv=n(t("<div id='"+this._mainDivId+"' class='ui-datepicker ui-widget ui-widget-content ui-helper-clearfix ui-corner-all'></div>"));}function n(e){var i="button, .ui-datepicker-prev, .ui-datepicker-next, .ui-datepicker-calendar td a";return e.on("mouseout",i,function(){t(this).removeClass("ui-state-hover"),-1!==this.className.indexOf("ui-datepicker-prev")&&t(this).removeClass("ui-datepicker-prev-hover"),-1!==this.className.indexOf("ui-datepicker-next")&&t(this).removeClass("ui-datepicker-next-hover");}).on("mouseover",i,o);}function o(){t.datepicker._isDisabledDatepicker(m.inline?m.dpDiv.parent()[0]:m.input[0])||(t(this).parents(".ui-datepicker-calendar").find("a").removeClass("ui-state-hover"),t(this).addClass("ui-state-hover"),-1!==this.className.indexOf("ui-datepicker-prev")&&t(this).addClass("ui-datepicker-prev-hover"),-1!==this.className.indexOf("ui-datepicker-next")&&t(this).addClass("ui-datepicker-next-hover"));}function a(e,i){t.extend(e,i);for(var s in i){null==i[s]&&(e[s]=i[s]);}return e;}function r(t){return function(){var e=this.element.val();t.apply(this,arguments),this._refresh(),e!==this.element.val()&&this._trigger("change");};}t.ui=t.ui||{},t.ui.version="1.12.1";var h=0,l=Array.prototype.slice;t.cleanData=function(e){return function(i){var s,n,o;for(o=0;null!=(n=i[o]);o++){try{s=t._data(n,"events"),s&&s.remove&&t(n).triggerHandler("remove");}catch(a){}}e(i);};}(t.cleanData),t.widget=function(e,i,s){var n,o,a,r={},h=e.split(".")[0];e=e.split(".")[1];var l=h+"-"+e;return s||(s=i,i=t.Widget),t.isArray(s)&&(s=t.extend.apply(null,[{}].concat(s))),t.expr[":"][l.toLowerCase()]=function(e){return!!t.data(e,l);},t[h]=t[h]||{},n=t[h][e],o=t[h][e]=function(t,e){return this._createWidget?(arguments.length&&this._createWidget(t,e),void 0):new o(t,e);},t.extend(o,n,{version:s.version,_proto:t.extend({},s),_childConstructors:[]}),a=new i(),a.options=t.widget.extend({},a.options),t.each(s,function(e,s){return t.isFunction(s)?(r[e]=function(){function t(){return i.prototype[e].apply(this,arguments);}function n(t){return i.prototype[e].apply(this,t);}return function(){var e,i=this._super,o=this._superApply;return this._super=t,this._superApply=n,e=s.apply(this,arguments),this._super=i,this._superApply=o,e;};}(),void 0):(r[e]=s,void 0);}),o.prototype=t.widget.extend(a,{widgetEventPrefix:n?a.widgetEventPrefix||e:e},r,{constructor:o,namespace:h,widgetName:e,widgetFullName:l}),n?(t.each(n._childConstructors,function(e,i){var s=i.prototype;t.widget(s.namespace+"."+s.widgetName,o,i._proto);}),delete n._childConstructors):i._childConstructors.push(o),t.widget.bridge(e,o),o;},t.widget.extend=function(e){for(var i,s,n=l.call(arguments,1),o=0,a=n.length;a>o;o++){for(i in n[o]){s=n[o][i],n[o].hasOwnProperty(i)&&void 0!==s&&(e[i]=t.isPlainObject(s)?t.isPlainObject(e[i])?t.widget.extend({},e[i],s):t.widget.extend({},s):s);}}return e;},t.widget.bridge=function(e,i){var s=i.prototype.widgetFullName||e;t.fn[e]=function(n){var o="string"==typeof n,a=l.call(arguments,1),r=this;return o?this.length||"instance"!==n?this.each(function(){var i,o=t.data(this,s);return"instance"===n?(r=o,!1):o?t.isFunction(o[n])&&"_"!==n.charAt(0)?(i=o[n].apply(o,a),i!==o&&void 0!==i?(r=i&&i.jquery?r.pushStack(i.get()):i,!1):void 0):t.error("no such method '"+n+"' for "+e+" widget instance"):t.error("cannot call methods on "+e+" prior to initialization; "+"attempted to call method '"+n+"'");}):r=void 0:(a.length&&(n=t.widget.extend.apply(null,[n].concat(a))),this.each(function(){var e=t.data(this,s);e?(e.option(n||{}),e._init&&e._init()):t.data(this,s,new i(n,this));})),r;};},t.Widget=function(){},t.Widget._childConstructors=[],t.Widget.prototype={widgetName:"widget",widgetEventPrefix:"",defaultElement:"<div>",options:{classes:{},disabled:!1,create:null},_createWidget:function _createWidget(e,i){i=t(i||this.defaultElement||this)[0],this.element=t(i),this.uuid=h++,this.eventNamespace="."+this.widgetName+this.uuid,this.bindings=t(),this.hoverable=t(),this.focusable=t(),this.classesElementLookup={},i!==this&&(t.data(i,this.widgetFullName,this),this._on(!0,this.element,{remove:function remove(t){t.target===i&&this.destroy();}}),this.document=t(i.style?i.ownerDocument:i.document||i),this.window=t(this.document[0].defaultView||this.document[0].parentWindow)),this.options=t.widget.extend({},this.options,this._getCreateOptions(),e),this._create(),this.options.disabled&&this._setOptionDisabled(this.options.disabled),this._trigger("create",null,this._getCreateEventData()),this._init();},_getCreateOptions:function _getCreateOptions(){return{};},_getCreateEventData:t.noop,_create:t.noop,_init:t.noop,destroy:function destroy(){var e=this;this._destroy(),t.each(this.classesElementLookup,function(t,i){e._removeClass(i,t);}),this.element.off(this.eventNamespace).removeData(this.widgetFullName),this.widget().off(this.eventNamespace).removeAttr("aria-disabled"),this.bindings.off(this.eventNamespace);},_destroy:t.noop,widget:function widget(){return this.element;},option:function option(e,i){var s,n,o,a=e;if(0===arguments.length)return t.widget.extend({},this.options);if("string"==typeof e)if(a={},s=e.split("."),e=s.shift(),s.length){for(n=a[e]=t.widget.extend({},this.options[e]),o=0;s.length-1>o;o++){n[s[o]]=n[s[o]]||{},n=n[s[o]];}if(e=s.pop(),1===arguments.length)return void 0===n[e]?null:n[e];n[e]=i;}else{if(1===arguments.length)return void 0===this.options[e]?null:this.options[e];a[e]=i;}return this._setOptions(a),this;},_setOptions:function _setOptions(t){var e;for(e in t){this._setOption(e,t[e]);}return this;},_setOption:function _setOption(t,e){return"classes"===t&&this._setOptionClasses(e),this.options[t]=e,"disabled"===t&&this._setOptionDisabled(e),this;},_setOptionClasses:function _setOptionClasses(e){var i,s,n;for(i in e){n=this.classesElementLookup[i],e[i]!==this.options.classes[i]&&n&&n.length&&(s=t(n.get()),this._removeClass(n,i),s.addClass(this._classes({element:s,keys:i,classes:e,add:!0})));}},_setOptionDisabled:function _setOptionDisabled(t){this._toggleClass(this.widget(),this.widgetFullName+"-disabled",null,!!t),t&&(this._removeClass(this.hoverable,null,"ui-state-hover"),this._removeClass(this.focusable,null,"ui-state-focus"));},enable:function enable(){return this._setOptions({disabled:!1});},disable:function disable(){return this._setOptions({disabled:!0});},_classes:function _classes(e){function i(i,o){var a,r;for(r=0;i.length>r;r++){a=n.classesElementLookup[i[r]]||t(),a=e.add?t(t.unique(a.get().concat(e.element.get()))):t(a.not(e.element).get()),n.classesElementLookup[i[r]]=a,s.push(i[r]),o&&e.classes[i[r]]&&s.push(e.classes[i[r]]);}}var s=[],n=this;return e=t.extend({element:this.element,classes:this.options.classes||{}},e),this._on(e.element,{remove:"_untrackClassesElement"}),e.keys&&i(e.keys.match(/\S+/g)||[],!0),e.extra&&i(e.extra.match(/\S+/g)||[]),s.join(" ");},_untrackClassesElement:function _untrackClassesElement(e){var i=this;t.each(i.classesElementLookup,function(s,n){-1!==t.inArray(e.target,n)&&(i.classesElementLookup[s]=t(n.not(e.target).get()));});},_removeClass:function _removeClass(t,e,i){return this._toggleClass(t,e,i,!1);},_addClass:function _addClass(t,e,i){return this._toggleClass(t,e,i,!0);},_toggleClass:function _toggleClass(t,e,i,s){s="boolean"==typeof s?s:i;var n="string"==typeof t||null===t,o={extra:n?e:i,keys:n?t:e,element:n?this.element:t,add:s};return o.element.toggleClass(this._classes(o),s),this;},_on:function _on(e,i,s){var n,o=this;"boolean"!=typeof e&&(s=i,i=e,e=!1),s?(i=n=t(i),this.bindings=this.bindings.add(i)):(s=i,i=this.element,n=this.widget()),t.each(s,function(s,a){function r(){return e||o.options.disabled!==!0&&!t(this).hasClass("ui-state-disabled")?("string"==typeof a?o[a]:a).apply(o,arguments):void 0;}"string"!=typeof a&&(r.guid=a.guid=a.guid||r.guid||t.guid++);var h=s.match(/^([\w:-]*)\s*(.*)$/),l=h[1]+o.eventNamespace,c=h[2];c?n.on(l,c,r):i.on(l,r);});},_off:function _off(e,i){i=(i||"").split(" ").join(this.eventNamespace+" ")+this.eventNamespace,e.off(i).off(i),this.bindings=t(this.bindings.not(e).get()),this.focusable=t(this.focusable.not(e).get()),this.hoverable=t(this.hoverable.not(e).get());},_delay:function _delay(t,e){function i(){return("string"==typeof t?s[t]:t).apply(s,arguments);}var s=this;return setTimeout(i,e||0);},_hoverable:function _hoverable(e){this.hoverable=this.hoverable.add(e),this._on(e,{mouseenter:function mouseenter(e){this._addClass(t(e.currentTarget),null,"ui-state-hover");},mouseleave:function mouseleave(e){this._removeClass(t(e.currentTarget),null,"ui-state-hover");}});},_focusable:function _focusable(e){this.focusable=this.focusable.add(e),this._on(e,{focusin:function focusin(e){this._addClass(t(e.currentTarget),null,"ui-state-focus");},focusout:function focusout(e){this._removeClass(t(e.currentTarget),null,"ui-state-focus");}});},_trigger:function _trigger(e,i,s){var n,o,a=this.options[e];if(s=s||{},i=t.Event(i),i.type=(e===this.widgetEventPrefix?e:this.widgetEventPrefix+e).toLowerCase(),i.target=this.element[0],o=i.originalEvent)for(n in o){n in i||(i[n]=o[n]);}return this.element.trigger(i,s),!(t.isFunction(a)&&a.apply(this.element[0],[i].concat(s))===!1||i.isDefaultPrevented());}},t.each({show:"fadeIn",hide:"fadeOut"},function(e,i){t.Widget.prototype["_"+e]=function(s,n,o){"string"==typeof n&&(n={effect:n});var a,r=n?n===!0||"number"==typeof n?i:n.effect||i:e;n=n||{},"number"==typeof n&&(n={duration:n}),a=!t.isEmptyObject(n),n.complete=o,n.delay&&s.delay(n.delay),a&&t.effects&&t.effects.effect[r]?s[e](n):r!==e&&s[r]?s[r](n.duration,n.easing,o):s.queue(function(i){t(this)[e](),o&&o.call(s[0]),i();});};}),t.widget,function(){function e(t,e,i){return[parseFloat(t[0])*(u.test(t[0])?e/100:1),parseFloat(t[1])*(u.test(t[1])?i/100:1)];}function i(e,i){return parseInt(t.css(e,i),10)||0;}function s(e){var i=e[0];return 9===i.nodeType?{width:e.width(),height:e.height(),offset:{top:0,left:0}}:t.isWindow(i)?{width:e.width(),height:e.height(),offset:{top:e.scrollTop(),left:e.scrollLeft()}}:i.preventDefault?{width:0,height:0,offset:{top:i.pageY,left:i.pageX}}:{width:e.outerWidth(),height:e.outerHeight(),offset:e.offset()};}var n,o=Math.max,a=Math.abs,r=/left|center|right/,h=/top|center|bottom/,l=/[\+\-]\d+(\.[\d]+)?%?/,c=/^\w+/,u=/%$/,d=t.fn.position;t.position={scrollbarWidth:function scrollbarWidth(){if(void 0!==n)return n;var e,i,s=t("<div style='display:block;position:absolute;width:50px;height:50px;overflow:hidden;'><div style='height:100px;width:auto;'></div></div>"),o=s.children()[0];return t("body").append(s),e=o.offsetWidth,s.css("overflow","scroll"),i=o.offsetWidth,e===i&&(i=s[0].clientWidth),s.remove(),n=e-i;},getScrollInfo:function getScrollInfo(e){var i=e.isWindow||e.isDocument?"":e.element.css("overflow-x"),s=e.isWindow||e.isDocument?"":e.element.css("overflow-y"),n="scroll"===i||"auto"===i&&e.width<e.element[0].scrollWidth,o="scroll"===s||"auto"===s&&e.height<e.element[0].scrollHeight;return{width:o?t.position.scrollbarWidth():0,height:n?t.position.scrollbarWidth():0};},getWithinInfo:function getWithinInfo(e){var i=t(e||window),s=t.isWindow(i[0]),n=!!i[0]&&9===i[0].nodeType,o=!s&&!n;return{element:i,isWindow:s,isDocument:n,offset:o?t(e).offset():{left:0,top:0},scrollLeft:i.scrollLeft(),scrollTop:i.scrollTop(),width:i.outerWidth(),height:i.outerHeight()};}},t.fn.position=function(n){if(!n||!n.of)return d.apply(this,arguments);n=t.extend({},n);var u,p,f,g,m,_,v=t(n.of),b=t.position.getWithinInfo(n.within),y=t.position.getScrollInfo(b),w=(n.collision||"flip").split(" "),k={};return _=s(v),v[0].preventDefault&&(n.at="left top"),p=_.width,f=_.height,g=_.offset,m=t.extend({},g),t.each(["my","at"],function(){var t,e,i=(n[this]||"").split(" ");1===i.length&&(i=r.test(i[0])?i.concat(["center"]):h.test(i[0])?["center"].concat(i):["center","center"]),i[0]=r.test(i[0])?i[0]:"center",i[1]=h.test(i[1])?i[1]:"center",t=l.exec(i[0]),e=l.exec(i[1]),k[this]=[t?t[0]:0,e?e[0]:0],n[this]=[c.exec(i[0])[0],c.exec(i[1])[0]];}),1===w.length&&(w[1]=w[0]),"right"===n.at[0]?m.left+=p:"center"===n.at[0]&&(m.left+=p/2),"bottom"===n.at[1]?m.top+=f:"center"===n.at[1]&&(m.top+=f/2),u=e(k.at,p,f),m.left+=u[0],m.top+=u[1],this.each(function(){var s,r,h=t(this),l=h.outerWidth(),c=h.outerHeight(),d=i(this,"marginLeft"),_=i(this,"marginTop"),x=l+d+i(this,"marginRight")+y.width,C=c+_+i(this,"marginBottom")+y.height,D=t.extend({},m),I=e(k.my,h.outerWidth(),h.outerHeight());"right"===n.my[0]?D.left-=l:"center"===n.my[0]&&(D.left-=l/2),"bottom"===n.my[1]?D.top-=c:"center"===n.my[1]&&(D.top-=c/2),D.left+=I[0],D.top+=I[1],s={marginLeft:d,marginTop:_},t.each(["left","top"],function(e,i){t.ui.position[w[e]]&&t.ui.position[w[e]][i](D,{targetWidth:p,targetHeight:f,elemWidth:l,elemHeight:c,collisionPosition:s,collisionWidth:x,collisionHeight:C,offset:[u[0]+I[0],u[1]+I[1]],my:n.my,at:n.at,within:b,elem:h});}),n.using&&(r=function r(t){var e=g.left-D.left,i=e+p-l,s=g.top-D.top,r=s+f-c,u={target:{element:v,left:g.left,top:g.top,width:p,height:f},element:{element:h,left:D.left,top:D.top,width:l,height:c},horizontal:0>i?"left":e>0?"right":"center",vertical:0>r?"top":s>0?"bottom":"middle"};l>p&&p>a(e+i)&&(u.horizontal="center"),c>f&&f>a(s+r)&&(u.vertical="middle"),u.important=o(a(e),a(i))>o(a(s),a(r))?"horizontal":"vertical",n.using.call(this,t,u);}),h.offset(t.extend(D,{using:r}));});},t.ui.position={fit:{left:function left(t,e){var i,s=e.within,n=s.isWindow?s.scrollLeft:s.offset.left,a=s.width,r=t.left-e.collisionPosition.marginLeft,h=n-r,l=r+e.collisionWidth-a-n;e.collisionWidth>a?h>0&&0>=l?(i=t.left+h+e.collisionWidth-a-n,t.left+=h-i):t.left=l>0&&0>=h?n:h>l?n+a-e.collisionWidth:n:h>0?t.left+=h:l>0?t.left-=l:t.left=o(t.left-r,t.left);},top:function top(t,e){var i,s=e.within,n=s.isWindow?s.scrollTop:s.offset.top,a=e.within.height,r=t.top-e.collisionPosition.marginTop,h=n-r,l=r+e.collisionHeight-a-n;e.collisionHeight>a?h>0&&0>=l?(i=t.top+h+e.collisionHeight-a-n,t.top+=h-i):t.top=l>0&&0>=h?n:h>l?n+a-e.collisionHeight:n:h>0?t.top+=h:l>0?t.top-=l:t.top=o(t.top-r,t.top);}},flip:{left:function left(t,e){var i,s,n=e.within,o=n.offset.left+n.scrollLeft,r=n.width,h=n.isWindow?n.scrollLeft:n.offset.left,l=t.left-e.collisionPosition.marginLeft,c=l-h,u=l+e.collisionWidth-r-h,d="left"===e.my[0]?-e.elemWidth:"right"===e.my[0]?e.elemWidth:0,p="left"===e.at[0]?e.targetWidth:"right"===e.at[0]?-e.targetWidth:0,f=-2*e.offset[0];0>c?(i=t.left+d+p+f+e.collisionWidth-r-o,(0>i||a(c)>i)&&(t.left+=d+p+f)):u>0&&(s=t.left-e.collisionPosition.marginLeft+d+p+f-h,(s>0||u>a(s))&&(t.left+=d+p+f));},top:function top(t,e){var i,s,n=e.within,o=n.offset.top+n.scrollTop,r=n.height,h=n.isWindow?n.scrollTop:n.offset.top,l=t.top-e.collisionPosition.marginTop,c=l-h,u=l+e.collisionHeight-r-h,d="top"===e.my[1],p=d?-e.elemHeight:"bottom"===e.my[1]?e.elemHeight:0,f="top"===e.at[1]?e.targetHeight:"bottom"===e.at[1]?-e.targetHeight:0,g=-2*e.offset[1];0>c?(s=t.top+p+f+g+e.collisionHeight-r-o,(0>s||a(c)>s)&&(t.top+=p+f+g)):u>0&&(i=t.top-e.collisionPosition.marginTop+p+f+g-h,(i>0||u>a(i))&&(t.top+=p+f+g));}},flipfit:{left:function left(){t.ui.position.flip.left.apply(this,arguments),t.ui.position.fit.left.apply(this,arguments);},top:function top(){t.ui.position.flip.top.apply(this,arguments),t.ui.position.fit.top.apply(this,arguments);}}};}(),t.ui.position,t.extend(t.expr[":"],{data:t.expr.createPseudo?t.expr.createPseudo(function(e){return function(i){return!!t.data(i,e);};}):function(e,i,s){return!!t.data(e,s[3]);}}),t.fn.extend({disableSelection:function(){var t="onselectstart"in document.createElement("div")?"selectstart":"mousedown";return function(){return this.on(t+".ui-disableSelection",function(t){t.preventDefault();});};}(),enableSelection:function enableSelection(){return this.off(".ui-disableSelection");}});var c="ui-effects-",u="ui-effects-style",d="ui-effects-animated",p=t;t.effects={effect:{}},function(t,e){function i(t,e,i){var s=u[e.type]||{};return null==t?i||!e.def?null:e.def:(t=s.floor?~~t:parseFloat(t),isNaN(t)?e.def:s.mod?(t+s.mod)%s.mod:0>t?0:t>s.max?s.max:t);}function s(i){var s=l(),n=s._rgba=[];return i=i.toLowerCase(),f(h,function(t,o){var a,r=o.re.exec(i),h=r&&o.parse(r),l=o.space||"rgba";return h?(a=s[l](h),s[c[l].cache]=a[c[l].cache],n=s._rgba=a._rgba,!1):e;}),n.length?("0,0,0,0"===n.join()&&t.extend(n,o.transparent),s):o[i];}function n(t,e,i){return i=(i+1)%1,1>6*i?t+6*(e-t)*i:1>2*i?e:2>3*i?t+6*(e-t)*(2/3-i):t;}var o,a="backgroundColor borderBottomColor borderLeftColor borderRightColor borderTopColor color columnRuleColor outlineColor textDecorationColor textEmphasisColor",r=/^([\-+])=\s*(\d+\.?\d*)/,h=[{re:/rgba?\(\s*(\d{1,3})\s*,\s*(\d{1,3})\s*,\s*(\d{1,3})\s*(?:,\s*(\d?(?:\.\d+)?)\s*)?\)/,parse:function parse(t){return[t[1],t[2],t[3],t[4]];}},{re:/rgba?\(\s*(\d+(?:\.\d+)?)\%\s*,\s*(\d+(?:\.\d+)?)\%\s*,\s*(\d+(?:\.\d+)?)\%\s*(?:,\s*(\d?(?:\.\d+)?)\s*)?\)/,parse:function parse(t){return[2.55*t[1],2.55*t[2],2.55*t[3],t[4]];}},{re:/#([a-f0-9]{2})([a-f0-9]{2})([a-f0-9]{2})/,parse:function parse(t){return[parseInt(t[1],16),parseInt(t[2],16),parseInt(t[3],16)];}},{re:/#([a-f0-9])([a-f0-9])([a-f0-9])/,parse:function parse(t){return[parseInt(t[1]+t[1],16),parseInt(t[2]+t[2],16),parseInt(t[3]+t[3],16)];}},{re:/hsla?\(\s*(\d+(?:\.\d+)?)\s*,\s*(\d+(?:\.\d+)?)\%\s*,\s*(\d+(?:\.\d+)?)\%\s*(?:,\s*(\d?(?:\.\d+)?)\s*)?\)/,space:"hsla",parse:function parse(t){return[t[1],t[2]/100,t[3]/100,t[4]];}}],l=t.Color=function(e,i,s,n){return new t.Color.fn.parse(e,i,s,n);},c={rgba:{props:{red:{idx:0,type:"byte"},green:{idx:1,type:"byte"},blue:{idx:2,type:"byte"}}},hsla:{props:{hue:{idx:0,type:"degrees"},saturation:{idx:1,type:"percent"},lightness:{idx:2,type:"percent"}}}},u={"byte":{floor:!0,max:255},percent:{max:1},degrees:{mod:360,floor:!0}},d=l.support={},p=t("<p>")[0],f=t.each;p.style.cssText="background-color:rgba(1,1,1,.5)",d.rgba=p.style.backgroundColor.indexOf("rgba")>-1,f(c,function(t,e){e.cache="_"+t,e.props.alpha={idx:3,type:"percent",def:1};}),l.fn=t.extend(l.prototype,{parse:function parse(n,a,r,h){if(n===e)return this._rgba=[null,null,null,null],this;(n.jquery||n.nodeType)&&(n=t(n).css(a),a=e);var u=this,d=t.type(n),p=this._rgba=[];return a!==e&&(n=[n,a,r,h],d="array"),"string"===d?this.parse(s(n)||o._default):"array"===d?(f(c.rgba.props,function(t,e){p[e.idx]=i(n[e.idx],e);}),this):"object"===d?(n instanceof l?f(c,function(t,e){n[e.cache]&&(u[e.cache]=n[e.cache].slice());}):f(c,function(e,s){var o=s.cache;f(s.props,function(t,e){if(!u[o]&&s.to){if("alpha"===t||null==n[t])return;u[o]=s.to(u._rgba);}u[o][e.idx]=i(n[t],e,!0);}),u[o]&&0>t.inArray(null,u[o].slice(0,3))&&(u[o][3]=1,s.from&&(u._rgba=s.from(u[o])));}),this):e;},is:function is(t){var i=l(t),s=!0,n=this;return f(c,function(t,o){var a,r=i[o.cache];return r&&(a=n[o.cache]||o.to&&o.to(n._rgba)||[],f(o.props,function(t,i){return null!=r[i.idx]?s=r[i.idx]===a[i.idx]:e;})),s;}),s;},_space:function _space(){var t=[],e=this;return f(c,function(i,s){e[s.cache]&&t.push(i);}),t.pop();},transition:function transition(t,e){var s=l(t),n=s._space(),o=c[n],a=0===this.alpha()?l("transparent"):this,r=a[o.cache]||o.to(a._rgba),h=r.slice();return s=s[o.cache],f(o.props,function(t,n){var o=n.idx,a=r[o],l=s[o],c=u[n.type]||{};null!==l&&(null===a?h[o]=l:(c.mod&&(l-a>c.mod/2?a+=c.mod:a-l>c.mod/2&&(a-=c.mod)),h[o]=i((l-a)*e+a,n)));}),this[n](h);},blend:function blend(e){if(1===this._rgba[3])return this;var i=this._rgba.slice(),s=i.pop(),n=l(e)._rgba;return l(t.map(i,function(t,e){return(1-s)*n[e]+s*t;}));},toRgbaString:function toRgbaString(){var e="rgba(",i=t.map(this._rgba,function(t,e){return null==t?e>2?1:0:t;});return 1===i[3]&&(i.pop(),e="rgb("),e+i.join()+")";},toHslaString:function toHslaString(){var e="hsla(",i=t.map(this.hsla(),function(t,e){return null==t&&(t=e>2?1:0),e&&3>e&&(t=Math.round(100*t)+"%"),t;});return 1===i[3]&&(i.pop(),e="hsl("),e+i.join()+")";},toHexString:function toHexString(e){var i=this._rgba.slice(),s=i.pop();return e&&i.push(~~(255*s)),"#"+t.map(i,function(t){return t=(t||0).toString(16),1===t.length?"0"+t:t;}).join("");},toString:function toString(){return 0===this._rgba[3]?"transparent":this.toRgbaString();}}),l.fn.parse.prototype=l.fn,c.hsla.to=function(t){if(null==t[0]||null==t[1]||null==t[2])return[null,null,null,t[3]];var e,i,s=t[0]/255,n=t[1]/255,o=t[2]/255,a=t[3],r=Math.max(s,n,o),h=Math.min(s,n,o),l=r-h,c=r+h,u=.5*c;return e=h===r?0:s===r?60*(n-o)/l+360:n===r?60*(o-s)/l+120:60*(s-n)/l+240,i=0===l?0:.5>=u?l/c:l/(2-c),[Math.round(e)%360,i,u,null==a?1:a];},c.hsla.from=function(t){if(null==t[0]||null==t[1]||null==t[2])return[null,null,null,t[3]];var e=t[0]/360,i=t[1],s=t[2],o=t[3],a=.5>=s?s*(1+i):s+i-s*i,r=2*s-a;return[Math.round(255*n(r,a,e+1/3)),Math.round(255*n(r,a,e)),Math.round(255*n(r,a,e-1/3)),o];},f(c,function(s,n){var o=n.props,a=n.cache,h=n.to,c=n.from;l.fn[s]=function(s){if(h&&!this[a]&&(this[a]=h(this._rgba)),s===e)return this[a].slice();var n,r=t.type(s),u="array"===r||"object"===r?s:arguments,d=this[a].slice();return f(o,function(t,e){var s=u["object"===r?t:e.idx];null==s&&(s=d[e.idx]),d[e.idx]=i(s,e);}),c?(n=l(c(d)),n[a]=d,n):l(d);},f(o,function(e,i){l.fn[e]||(l.fn[e]=function(n){var o,a=t.type(n),h="alpha"===e?this._hsla?"hsla":"rgba":s,l=this[h](),c=l[i.idx];return"undefined"===a?c:("function"===a&&(n=n.call(this,c),a=t.type(n)),null==n&&i.empty?this:("string"===a&&(o=r.exec(n),o&&(n=c+parseFloat(o[2])*("+"===o[1]?1:-1))),l[i.idx]=n,this[h](l)));});});}),l.hook=function(e){var i=e.split(" ");f(i,function(e,i){t.cssHooks[i]={set:function set(e,n){var o,a,r="";if("transparent"!==n&&("string"!==t.type(n)||(o=s(n)))){if(n=l(o||n),!d.rgba&&1!==n._rgba[3]){for(a="backgroundColor"===i?e.parentNode:e;(""===r||"transparent"===r)&&a&&a.style;){try{r=t.css(a,"backgroundColor"),a=a.parentNode;}catch(h){}}n=n.blend(r&&"transparent"!==r?r:"_default");}n=n.toRgbaString();}try{e.style[i]=n;}catch(h){}}},t.fx.step[i]=function(e){e.colorInit||(e.start=l(e.elem,i),e.end=l(e.end),e.colorInit=!0),t.cssHooks[i].set(e.elem,e.start.transition(e.end,e.pos));};});},l.hook(a),t.cssHooks.borderColor={expand:function expand(t){var e={};return f(["Top","Right","Bottom","Left"],function(i,s){e["border"+s+"Color"]=t;}),e;}},o=t.Color.names={aqua:"#00ffff",black:"#000000",blue:"#0000ff",fuchsia:"#ff00ff",gray:"#808080",green:"#008000",lime:"#00ff00",maroon:"#800000",navy:"#000080",olive:"#808000",purple:"#800080",red:"#ff0000",silver:"#c0c0c0",teal:"#008080",white:"#ffffff",yellow:"#ffff00",transparent:[null,null,null,0],_default:"#ffffff"};}(p),function(){function e(e){var i,s,n=e.ownerDocument.defaultView?e.ownerDocument.defaultView.getComputedStyle(e,null):e.currentStyle,o={};if(n&&n.length&&n[0]&&n[n[0]])for(s=n.length;s--;){i=n[s],"string"==typeof n[i]&&(o[t.camelCase(i)]=n[i]);}else for(i in n){"string"==typeof n[i]&&(o[i]=n[i]);}return o;}function i(e,i){var s,o,a={};for(s in i){o=i[s],e[s]!==o&&(n[s]||(t.fx.step[s]||!isNaN(parseFloat(o)))&&(a[s]=o));}return a;}var s=["add","remove","toggle"],n={border:1,borderBottom:1,borderColor:1,borderLeft:1,borderRight:1,borderTop:1,borderWidth:1,margin:1,padding:1};t.each(["borderLeftStyle","borderRightStyle","borderBottomStyle","borderTopStyle"],function(e,i){t.fx.step[i]=function(t){("none"!==t.end&&!t.setAttr||1===t.pos&&!t.setAttr)&&(p.style(t.elem,i,t.end),t.setAttr=!0);};}),t.fn.addBack||(t.fn.addBack=function(t){return this.add(null==t?this.prevObject:this.prevObject.filter(t));}),t.effects.animateClass=function(n,o,a,r){var h=t.speed(o,a,r);return this.queue(function(){var o,a=t(this),r=a.attr("class")||"",l=h.children?a.find("*").addBack():a;l=l.map(function(){var i=t(this);return{el:i,start:e(this)};}),o=function o(){t.each(s,function(t,e){n[e]&&a[e+"Class"](n[e]);});},o(),l=l.map(function(){return this.end=e(this.el[0]),this.diff=i(this.start,this.end),this;}),a.attr("class",r),l=l.map(function(){var e=this,i=t.Deferred(),s=t.extend({},h,{queue:!1,complete:function complete(){i.resolve(e);}});return this.el.animate(this.diff,s),i.promise();}),t.when.apply(t,l.get()).done(function(){o(),t.each(arguments,function(){var e=this.el;t.each(this.diff,function(t){e.css(t,"");});}),h.complete.call(a[0]);});});},t.fn.extend({addClass:function(e){return function(i,s,n,o){return s?t.effects.animateClass.call(this,{add:i},s,n,o):e.apply(this,arguments);};}(t.fn.addClass),removeClass:function(e){return function(i,s,n,o){return arguments.length>1?t.effects.animateClass.call(this,{remove:i},s,n,o):e.apply(this,arguments);};}(t.fn.removeClass),toggleClass:function(e){return function(i,s,n,o,a){return"boolean"==typeof s||void 0===s?n?t.effects.animateClass.call(this,s?{add:i}:{remove:i},n,o,a):e.apply(this,arguments):t.effects.animateClass.call(this,{toggle:i},s,n,o);};}(t.fn.toggleClass),switchClass:function switchClass(e,i,s,n,o){return t.effects.animateClass.call(this,{add:i,remove:e},s,n,o);}});}(),function(){function e(e,i,s,n){return t.isPlainObject(e)&&(i=e,e=e.effect),e={effect:e},null==i&&(i={}),t.isFunction(i)&&(n=i,s=null,i={}),("number"==typeof i||t.fx.speeds[i])&&(n=s,s=i,i={}),t.isFunction(s)&&(n=s,s=null),i&&t.extend(e,i),s=s||i.duration,e.duration=t.fx.off?0:"number"==typeof s?s:s in t.fx.speeds?t.fx.speeds[s]:t.fx.speeds._default,e.complete=n||i.complete,e;}function i(e){return!e||"number"==typeof e||t.fx.speeds[e]?!0:"string"!=typeof e||t.effects.effect[e]?t.isFunction(e)?!0:"object"!=_typeof(e)||e.effect?!1:!0:!0;}function s(t,e){var i=e.outerWidth(),s=e.outerHeight(),n=/^rect\((-?\d*\.?\d*px|-?\d+%|auto),?\s*(-?\d*\.?\d*px|-?\d+%|auto),?\s*(-?\d*\.?\d*px|-?\d+%|auto),?\s*(-?\d*\.?\d*px|-?\d+%|auto)\)$/,o=n.exec(t)||["",0,i,s,0];return{top:parseFloat(o[1])||0,right:"auto"===o[2]?i:parseFloat(o[2]),bottom:"auto"===o[3]?s:parseFloat(o[3]),left:parseFloat(o[4])||0};}t.expr&&t.expr.filters&&t.expr.filters.animated&&(t.expr.filters.animated=function(e){return function(i){return!!t(i).data(d)||e(i);};}(t.expr.filters.animated)),t.uiBackCompat!==!1&&t.extend(t.effects,{save:function save(t,e){for(var i=0,s=e.length;s>i;i++){null!==e[i]&&t.data(c+e[i],t[0].style[e[i]]);}},restore:function restore(t,e){for(var i,s=0,n=e.length;n>s;s++){null!==e[s]&&(i=t.data(c+e[s]),t.css(e[s],i));}},setMode:function setMode(t,e){return"toggle"===e&&(e=t.is(":hidden")?"show":"hide"),e;},createWrapper:function createWrapper(e){if(e.parent().is(".ui-effects-wrapper"))return e.parent();var i={width:e.outerWidth(!0),height:e.outerHeight(!0),"float":e.css("float")},s=t("<div></div>").addClass("ui-effects-wrapper").css({fontSize:"100%",background:"transparent",border:"none",margin:0,padding:0}),n={width:e.width(),height:e.height()},o=document.activeElement;try{o.id;}catch(a){o=document.body;}return e.wrap(s),(e[0]===o||t.contains(e[0],o))&&t(o).trigger("focus"),s=e.parent(),"static"===e.css("position")?(s.css({position:"relative"}),e.css({position:"relative"})):(t.extend(i,{position:e.css("position"),zIndex:e.css("z-index")}),t.each(["top","left","bottom","right"],function(t,s){i[s]=e.css(s),isNaN(parseInt(i[s],10))&&(i[s]="auto");}),e.css({position:"relative",top:0,left:0,right:"auto",bottom:"auto"})),e.css(n),s.css(i).show();},removeWrapper:function removeWrapper(e){var i=document.activeElement;return e.parent().is(".ui-effects-wrapper")&&(e.parent().replaceWith(e),(e[0]===i||t.contains(e[0],i))&&t(i).trigger("focus")),e;}}),t.extend(t.effects,{version:"1.12.1",define:function define(e,i,s){return s||(s=i,i="effect"),t.effects.effect[e]=s,t.effects.effect[e].mode=i,s;},scaledDimensions:function scaledDimensions(t,e,i){if(0===e)return{height:0,width:0,outerHeight:0,outerWidth:0};var s="horizontal"!==i?(e||100)/100:1,n="vertical"!==i?(e||100)/100:1;return{height:t.height()*n,width:t.width()*s,outerHeight:t.outerHeight()*n,outerWidth:t.outerWidth()*s};},clipToBox:function clipToBox(t){return{width:t.clip.right-t.clip.left,height:t.clip.bottom-t.clip.top,left:t.clip.left,top:t.clip.top};},unshift:function unshift(t,e,i){var s=t.queue();e>1&&s.splice.apply(s,[1,0].concat(s.splice(e,i))),t.dequeue();},saveStyle:function saveStyle(t){t.data(u,t[0].style.cssText);},restoreStyle:function restoreStyle(t){t[0].style.cssText=t.data(u)||"",t.removeData(u);},mode:function mode(t,e){var i=t.is(":hidden");return"toggle"===e&&(e=i?"show":"hide"),(i?"hide"===e:"show"===e)&&(e="none"),e;},getBaseline:function getBaseline(t,e){var i,s;switch(t[0]){case"top":i=0;break;case"middle":i=.5;break;case"bottom":i=1;break;default:i=t[0]/e.height;}switch(t[1]){case"left":s=0;break;case"center":s=.5;break;case"right":s=1;break;default:s=t[1]/e.width;}return{x:s,y:i};},createPlaceholder:function createPlaceholder(e){var i,s=e.css("position"),n=e.position();return e.css({marginTop:e.css("marginTop"),marginBottom:e.css("marginBottom"),marginLeft:e.css("marginLeft"),marginRight:e.css("marginRight")}).outerWidth(e.outerWidth()).outerHeight(e.outerHeight()),/^(static|relative)/.test(s)&&(s="absolute",i=t("<"+e[0].nodeName+">").insertAfter(e).css({display:/^(inline|ruby)/.test(e.css("display"))?"inline-block":"block",visibility:"hidden",marginTop:e.css("marginTop"),marginBottom:e.css("marginBottom"),marginLeft:e.css("marginLeft"),marginRight:e.css("marginRight"),"float":e.css("float")}).outerWidth(e.outerWidth()).outerHeight(e.outerHeight()).addClass("ui-effects-placeholder"),e.data(c+"placeholder",i)),e.css({position:s,left:n.left,top:n.top}),i;},removePlaceholder:function removePlaceholder(t){var e=c+"placeholder",i=t.data(e);i&&(i.remove(),t.removeData(e));},cleanUp:function cleanUp(e){t.effects.restoreStyle(e),t.effects.removePlaceholder(e);},setTransition:function setTransition(e,i,s,n){return n=n||{},t.each(i,function(t,i){var o=e.cssUnit(i);o[0]>0&&(n[i]=o[0]*s+o[1]);}),n;}}),t.fn.extend({effect:function effect(){function i(e){function i(){r.removeData(d),t.effects.cleanUp(r),"hide"===s.mode&&r.hide(),a();}function a(){t.isFunction(h)&&h.call(r[0]),t.isFunction(e)&&e();}var r=t(this);s.mode=c.shift(),t.uiBackCompat===!1||o?"none"===s.mode?(r[l](),a()):n.call(r[0],s,i):(r.is(":hidden")?"hide"===l:"show"===l)?(r[l](),a()):n.call(r[0],s,a);}var s=e.apply(this,arguments),n=t.effects.effect[s.effect],o=n.mode,a=s.queue,r=a||"fx",h=s.complete,l=s.mode,c=[],u=function u(e){var i=t(this),s=t.effects.mode(i,l)||o;i.data(d,!0),c.push(s),o&&("show"===s||s===o&&"hide"===s)&&i.show(),o&&"none"===s||t.effects.saveStyle(i),t.isFunction(e)&&e();};return t.fx.off||!n?l?this[l](s.duration,h):this.each(function(){h&&h.call(this);}):a===!1?this.each(u).each(i):this.queue(r,u).queue(r,i);},show:function(t){return function(s){if(i(s))return t.apply(this,arguments);var n=e.apply(this,arguments);return n.mode="show",this.effect.call(this,n);};}(t.fn.show),hide:function(t){return function(s){if(i(s))return t.apply(this,arguments);var n=e.apply(this,arguments);return n.mode="hide",this.effect.call(this,n);};}(t.fn.hide),toggle:function(t){return function(s){if(i(s)||"boolean"==typeof s)return t.apply(this,arguments);var n=e.apply(this,arguments);return n.mode="toggle",this.effect.call(this,n);};}(t.fn.toggle),cssUnit:function cssUnit(e){var i=this.css(e),s=[];return t.each(["em","px","%","pt"],function(t,e){i.indexOf(e)>0&&(s=[parseFloat(i),e]);}),s;},cssClip:function cssClip(t){return t?this.css("clip","rect("+t.top+"px "+t.right+"px "+t.bottom+"px "+t.left+"px)"):s(this.css("clip"),this);},transfer:function transfer(e,i){var s=t(this),n=t(e.to),o="fixed"===n.css("position"),a=t("body"),r=o?a.scrollTop():0,h=o?a.scrollLeft():0,l=n.offset(),c={top:l.top-r,left:l.left-h,height:n.innerHeight(),width:n.innerWidth()},u=s.offset(),d=t("<div class='ui-effects-transfer'></div>").appendTo("body").addClass(e.className).css({top:u.top-r,left:u.left-h,height:s.innerHeight(),width:s.innerWidth(),position:o?"fixed":"absolute"}).animate(c,e.duration,e.easing,function(){d.remove(),t.isFunction(i)&&i();});}}),t.fx.step.clip=function(e){e.clipInit||(e.start=t(e.elem).cssClip(),"string"==typeof e.end&&(e.end=s(e.end,e.elem)),e.clipInit=!0),t(e.elem).cssClip({top:e.pos*(e.end.top-e.start.top)+e.start.top,right:e.pos*(e.end.right-e.start.right)+e.start.right,bottom:e.pos*(e.end.bottom-e.start.bottom)+e.start.bottom,left:e.pos*(e.end.left-e.start.left)+e.start.left});};}(),function(){var e={};t.each(["Quad","Cubic","Quart","Quint","Expo"],function(t,i){e[i]=function(e){return Math.pow(e,t+2);};}),t.extend(e,{Sine:function Sine(t){return 1-Math.cos(t*Math.PI/2);},Circ:function Circ(t){return 1-Math.sqrt(1-t*t);},Elastic:function Elastic(t){return 0===t||1===t?t:-Math.pow(2,8*(t-1))*Math.sin((80*(t-1)-7.5)*Math.PI/15);},Back:function Back(t){return t*t*(3*t-2);},Bounce:function Bounce(t){for(var e,i=4;((e=Math.pow(2,--i))-1)/11>t;){;}return 1/Math.pow(4,3-i)-7.5625*Math.pow((3*e-2)/22-t,2);}}),t.each(e,function(e,i){t.easing["easeIn"+e]=i,t.easing["easeOut"+e]=function(t){return 1-i(1-t);},t.easing["easeInOut"+e]=function(t){return .5>t?i(2*t)/2:1-i(-2*t+2)/2;};});}();var f=t.effects;t.effects.define("blind","hide",function(e,i){var s={up:["bottom","top"],vertical:["bottom","top"],down:["top","bottom"],left:["right","left"],horizontal:["right","left"],right:["left","right"]},n=t(this),o=e.direction||"up",a=n.cssClip(),r={clip:t.extend({},a)},h=t.effects.createPlaceholder(n);r.clip[s[o][0]]=r.clip[s[o][1]],"show"===e.mode&&(n.cssClip(r.clip),h&&h.css(t.effects.clipToBox(r)),r.clip=a),h&&h.animate(t.effects.clipToBox(r),e.duration,e.easing),n.animate(r,{queue:!1,duration:e.duration,easing:e.easing,complete:i});}),t.effects.define("bounce",function(e,i){var s,n,o,a=t(this),r=e.mode,h="hide"===r,l="show"===r,c=e.direction||"up",u=e.distance,d=e.times||5,p=2*d+(l||h?1:0),f=e.duration/p,g=e.easing,m="up"===c||"down"===c?"top":"left",_="up"===c||"left"===c,v=0,b=a.queue().length;for(t.effects.createPlaceholder(a),o=a.css(m),u||(u=a["top"===m?"outerHeight":"outerWidth"]()/3),l&&(n={opacity:1},n[m]=o,a.css("opacity",0).css(m,_?2*-u:2*u).animate(n,f,g)),h&&(u/=Math.pow(2,d-1)),n={},n[m]=o;d>v;v++){s={},s[m]=(_?"-=":"+=")+u,a.animate(s,f,g).animate(n,f,g),u=h?2*u:u/2;}h&&(s={opacity:0},s[m]=(_?"-=":"+=")+u,a.animate(s,f,g)),a.queue(i),t.effects.unshift(a,b,p+1);}),t.effects.define("clip","hide",function(e,i){var s,n={},o=t(this),a=e.direction||"vertical",r="both"===a,h=r||"horizontal"===a,l=r||"vertical"===a;s=o.cssClip(),n.clip={top:l?(s.bottom-s.top)/2:s.top,right:h?(s.right-s.left)/2:s.right,bottom:l?(s.bottom-s.top)/2:s.bottom,left:h?(s.right-s.left)/2:s.left},t.effects.createPlaceholder(o),"show"===e.mode&&(o.cssClip(n.clip),n.clip=s),o.animate(n,{queue:!1,duration:e.duration,easing:e.easing,complete:i});}),t.effects.define("drop","hide",function(e,i){var s,n=t(this),o=e.mode,a="show"===o,r=e.direction||"left",h="up"===r||"down"===r?"top":"left",l="up"===r||"left"===r?"-=":"+=",c="+="===l?"-=":"+=",u={opacity:0};t.effects.createPlaceholder(n),s=e.distance||n["top"===h?"outerHeight":"outerWidth"](!0)/2,u[h]=l+s,a&&(n.css(u),u[h]=c+s,u.opacity=1),n.animate(u,{queue:!1,duration:e.duration,easing:e.easing,complete:i});}),t.effects.define("explode","hide",function(e,i){function s(){b.push(this),b.length===u*d&&n();}function n(){p.css({visibility:"visible"}),t(b).remove(),i();}var o,a,r,h,l,c,u=e.pieces?Math.round(Math.sqrt(e.pieces)):3,d=u,p=t(this),f=e.mode,g="show"===f,m=p.show().css("visibility","hidden").offset(),_=Math.ceil(p.outerWidth()/d),v=Math.ceil(p.outerHeight()/u),b=[];for(o=0;u>o;o++){for(h=m.top+o*v,c=o-(u-1)/2,a=0;d>a;a++){r=m.left+a*_,l=a-(d-1)/2,p.clone().appendTo("body").wrap("<div></div>").css({position:"absolute",visibility:"visible",left:-a*_,top:-o*v}).parent().addClass("ui-effects-explode").css({position:"absolute",overflow:"hidden",width:_,height:v,left:r+(g?l*_:0),top:h+(g?c*v:0),opacity:g?0:1}).animate({left:r+(g?0:l*_),top:h+(g?0:c*v),opacity:g?1:0},e.duration||500,e.easing,s);}}}),t.effects.define("fade","toggle",function(e,i){var s="show"===e.mode;t(this).css("opacity",s?0:1).animate({opacity:s?1:0},{queue:!1,duration:e.duration,easing:e.easing,complete:i});}),t.effects.define("fold","hide",function(e,i){var s=t(this),n=e.mode,o="show"===n,a="hide"===n,r=e.size||15,h=/([0-9]+)%/.exec(r),l=!!e.horizFirst,c=l?["right","bottom"]:["bottom","right"],u=e.duration/2,d=t.effects.createPlaceholder(s),p=s.cssClip(),f={clip:t.extend({},p)},g={clip:t.extend({},p)},m=[p[c[0]],p[c[1]]],_=s.queue().length;h&&(r=parseInt(h[1],10)/100*m[a?0:1]),f.clip[c[0]]=r,g.clip[c[0]]=r,g.clip[c[1]]=0,o&&(s.cssClip(g.clip),d&&d.css(t.effects.clipToBox(g)),g.clip=p),s.queue(function(i){d&&d.animate(t.effects.clipToBox(f),u,e.easing).animate(t.effects.clipToBox(g),u,e.easing),i();}).animate(f,u,e.easing).animate(g,u,e.easing).queue(i),t.effects.unshift(s,_,4);}),t.effects.define("highlight","show",function(e,i){var s=t(this),n={backgroundColor:s.css("backgroundColor")};"hide"===e.mode&&(n.opacity=0),t.effects.saveStyle(s),s.css({backgroundImage:"none",backgroundColor:e.color||"#ffff99"}).animate(n,{queue:!1,duration:e.duration,easing:e.easing,complete:i});}),t.effects.define("size",function(e,i){var s,n,o,a=t(this),r=["fontSize"],h=["borderTopWidth","borderBottomWidth","paddingTop","paddingBottom"],l=["borderLeftWidth","borderRightWidth","paddingLeft","paddingRight"],c=e.mode,u="effect"!==c,d=e.scale||"both",p=e.origin||["middle","center"],f=a.css("position"),g=a.position(),m=t.effects.scaledDimensions(a),_=e.from||m,v=e.to||t.effects.scaledDimensions(a,0);t.effects.createPlaceholder(a),"show"===c&&(o=_,_=v,v=o),n={from:{y:_.height/m.height,x:_.width/m.width},to:{y:v.height/m.height,x:v.width/m.width}},("box"===d||"both"===d)&&(n.from.y!==n.to.y&&(_=t.effects.setTransition(a,h,n.from.y,_),v=t.effects.setTransition(a,h,n.to.y,v)),n.from.x!==n.to.x&&(_=t.effects.setTransition(a,l,n.from.x,_),v=t.effects.setTransition(a,l,n.to.x,v))),("content"===d||"both"===d)&&n.from.y!==n.to.y&&(_=t.effects.setTransition(a,r,n.from.y,_),v=t.effects.setTransition(a,r,n.to.y,v)),p&&(s=t.effects.getBaseline(p,m),_.top=(m.outerHeight-_.outerHeight)*s.y+g.top,_.left=(m.outerWidth-_.outerWidth)*s.x+g.left,v.top=(m.outerHeight-v.outerHeight)*s.y+g.top,v.left=(m.outerWidth-v.outerWidth)*s.x+g.left),a.css(_),("content"===d||"both"===d)&&(h=h.concat(["marginTop","marginBottom"]).concat(r),l=l.concat(["marginLeft","marginRight"]),a.find("*[width]").each(function(){var i=t(this),s=t.effects.scaledDimensions(i),o={height:s.height*n.from.y,width:s.width*n.from.x,outerHeight:s.outerHeight*n.from.y,outerWidth:s.outerWidth*n.from.x},a={height:s.height*n.to.y,width:s.width*n.to.x,outerHeight:s.height*n.to.y,outerWidth:s.width*n.to.x};n.from.y!==n.to.y&&(o=t.effects.setTransition(i,h,n.from.y,o),a=t.effects.setTransition(i,h,n.to.y,a)),n.from.x!==n.to.x&&(o=t.effects.setTransition(i,l,n.from.x,o),a=t.effects.setTransition(i,l,n.to.x,a)),u&&t.effects.saveStyle(i),i.css(o),i.animate(a,e.duration,e.easing,function(){u&&t.effects.restoreStyle(i);});})),a.animate(v,{queue:!1,duration:e.duration,easing:e.easing,complete:function complete(){var e=a.offset();0===v.opacity&&a.css("opacity",_.opacity),u||(a.css("position","static"===f?"relative":f).offset(e),t.effects.saveStyle(a)),i();}});}),t.effects.define("scale",function(e,i){var s=t(this),n=e.mode,o=parseInt(e.percent,10)||(0===parseInt(e.percent,10)?0:"effect"!==n?0:100),a=t.extend(!0,{from:t.effects.scaledDimensions(s),to:t.effects.scaledDimensions(s,o,e.direction||"both"),origin:e.origin||["middle","center"]},e);e.fade&&(a.from.opacity=1,a.to.opacity=0),t.effects.effect.size.call(this,a,i);}),t.effects.define("puff","hide",function(e,i){var s=t.extend(!0,{},e,{fade:!0,percent:parseInt(e.percent,10)||150});t.effects.effect.scale.call(this,s,i);}),t.effects.define("pulsate","show",function(e,i){var s=t(this),n=e.mode,o="show"===n,a="hide"===n,r=o||a,h=2*(e.times||5)+(r?1:0),l=e.duration/h,c=0,u=1,d=s.queue().length;for((o||!s.is(":visible"))&&(s.css("opacity",0).show(),c=1);h>u;u++){s.animate({opacity:c},l,e.easing),c=1-c;}s.animate({opacity:c},l,e.easing),s.queue(i),t.effects.unshift(s,d,h+1);}),t.effects.define("shake",function(e,i){var s=1,n=t(this),o=e.direction||"left",a=e.distance||20,r=e.times||3,h=2*r+1,l=Math.round(e.duration/h),c="up"===o||"down"===o?"top":"left",u="up"===o||"left"===o,d={},p={},f={},g=n.queue().length;for(t.effects.createPlaceholder(n),d[c]=(u?"-=":"+=")+a,p[c]=(u?"+=":"-=")+2*a,f[c]=(u?"-=":"+=")+2*a,n.animate(d,l,e.easing);r>s;s++){n.animate(p,l,e.easing).animate(f,l,e.easing);}n.animate(p,l,e.easing).animate(d,l/2,e.easing).queue(i),t.effects.unshift(n,g,h+1);}),t.effects.define("slide","show",function(e,i){var s,n,o=t(this),a={up:["bottom","top"],down:["top","bottom"],left:["right","left"],right:["left","right"]},r=e.mode,h=e.direction||"left",l="up"===h||"down"===h?"top":"left",c="up"===h||"left"===h,u=e.distance||o["top"===l?"outerHeight":"outerWidth"](!0),d={};t.effects.createPlaceholder(o),s=o.cssClip(),n=o.position()[l],d[l]=(c?-1:1)*u+n,d.clip=o.cssClip(),d.clip[a[h][1]]=d.clip[a[h][0]],"show"===r&&(o.cssClip(d.clip),o.css(l,d[l]),d.clip=s,d[l]=n),o.animate(d,{queue:!1,duration:e.duration,easing:e.easing,complete:i});});var f;t.uiBackCompat!==!1&&(f=t.effects.define("transfer",function(e,i){t(this).transfer(e,i);})),t.ui.focusable=function(i,s){var n,o,a,r,h,l=i.nodeName.toLowerCase();return"area"===l?(n=i.parentNode,o=n.name,i.href&&o&&"map"===n.nodeName.toLowerCase()?(a=t("img[usemap='#"+o+"']"),a.length>0&&a.is(":visible")):!1):(/^(input|select|textarea|button|object)$/.test(l)?(r=!i.disabled,r&&(h=t(i).closest("fieldset")[0],h&&(r=!h.disabled))):r="a"===l?i.href||s:s,r&&t(i).is(":visible")&&e(t(i)));},t.extend(t.expr[":"],{focusable:function focusable(e){return t.ui.focusable(e,null!=t.attr(e,"tabindex"));}}),t.ui.focusable,t.fn.form=function(){return"string"==typeof this[0].form?this.closest("form"):t(this[0].form);},t.ui.formResetMixin={_formResetHandler:function _formResetHandler(){var e=t(this);setTimeout(function(){var i=e.data("ui-form-reset-instances");t.each(i,function(){this.refresh();});});},_bindFormResetHandler:function _bindFormResetHandler(){if(this.form=this.element.form(),this.form.length){var t=this.form.data("ui-form-reset-instances")||[];t.length||this.form.on("reset.ui-form-reset",this._formResetHandler),t.push(this),this.form.data("ui-form-reset-instances",t);}},_unbindFormResetHandler:function _unbindFormResetHandler(){if(this.form.length){var e=this.form.data("ui-form-reset-instances");e.splice(t.inArray(this,e),1),e.length?this.form.data("ui-form-reset-instances",e):this.form.removeData("ui-form-reset-instances").off("reset.ui-form-reset");}}},"1.7"===t.fn.jquery.substring(0,3)&&(t.each(["Width","Height"],function(e,i){function s(e,i,s,o){return t.each(n,function(){i-=parseFloat(t.css(e,"padding"+this))||0,s&&(i-=parseFloat(t.css(e,"border"+this+"Width"))||0),o&&(i-=parseFloat(t.css(e,"margin"+this))||0);}),i;}var n="Width"===i?["Left","Right"]:["Top","Bottom"],o=i.toLowerCase(),a={innerWidth:t.fn.innerWidth,innerHeight:t.fn.innerHeight,outerWidth:t.fn.outerWidth,outerHeight:t.fn.outerHeight};t.fn["inner"+i]=function(e){return void 0===e?a["inner"+i].call(this):this.each(function(){t(this).css(o,s(this,e)+"px");});},t.fn["outer"+i]=function(e,n){return"number"!=typeof e?a["outer"+i].call(this,e):this.each(function(){t(this).css(o,s(this,e,!0,n)+"px");});};}),t.fn.addBack=function(t){return this.add(null==t?this.prevObject:this.prevObject.filter(t));}),t.ui.keyCode={BACKSPACE:8,COMMA:188,DELETE:46,DOWN:40,END:35,ENTER:13,ESCAPE:27,HOME:36,LEFT:37,PAGE_DOWN:34,PAGE_UP:33,PERIOD:190,RIGHT:39,SPACE:32,TAB:9,UP:38},t.ui.escapeSelector=function(){var t=/([!"#$%&'()*+,.\/:;<=>?@[\]^`{|}~])/g;return function(e){return e.replace(t,"\\$1");};}(),t.fn.labels=function(){var e,i,s,n,o;return this[0].labels&&this[0].labels.length?this.pushStack(this[0].labels):(n=this.eq(0).parents("label"),s=this.attr("id"),s&&(e=this.eq(0).parents().last(),o=e.add(e.length?e.siblings():this.siblings()),i="label[for='"+t.ui.escapeSelector(s)+"']",n=n.add(o.find(i).addBack(i))),this.pushStack(n));},t.fn.scrollParent=function(e){var i=this.css("position"),s="absolute"===i,n=e?/(auto|scroll|hidden)/:/(auto|scroll)/,o=this.parents().filter(function(){var e=t(this);return s&&"static"===e.css("position")?!1:n.test(e.css("overflow")+e.css("overflow-y")+e.css("overflow-x"));}).eq(0);return"fixed"!==i&&o.length?o:t(this[0].ownerDocument||document);},t.extend(t.expr[":"],{tabbable:function tabbable(e){var i=t.attr(e,"tabindex"),s=null!=i;return(!s||i>=0)&&t.ui.focusable(e,s);}}),t.fn.extend({uniqueId:function(){var t=0;return function(){return this.each(function(){this.id||(this.id="ui-id-"+ ++t);});};}(),removeUniqueId:function removeUniqueId(){return this.each(function(){/^ui-id-\d+$/.test(this.id)&&t(this).removeAttr("id");});}}),t.widget("ui.accordion",{version:"1.12.1",options:{active:0,animate:{},classes:{"ui-accordion-header":"ui-corner-top","ui-accordion-header-collapsed":"ui-corner-all","ui-accordion-content":"ui-corner-bottom"},collapsible:!1,event:"click",header:"> li > :first-child, > :not(li):even",heightStyle:"auto",icons:{activeHeader:"ui-icon-triangle-1-s",header:"ui-icon-triangle-1-e"},activate:null,beforeActivate:null},hideProps:{borderTopWidth:"hide",borderBottomWidth:"hide",paddingTop:"hide",paddingBottom:"hide",height:"hide"},showProps:{borderTopWidth:"show",borderBottomWidth:"show",paddingTop:"show",paddingBottom:"show",height:"show"},_create:function _create(){var e=this.options;this.prevShow=this.prevHide=t(),this._addClass("ui-accordion","ui-widget ui-helper-reset"),this.element.attr("role","tablist"),e.collapsible||e.active!==!1&&null!=e.active||(e.active=0),this._processPanels(),0>e.active&&(e.active+=this.headers.length),this._refresh();},_getCreateEventData:function _getCreateEventData(){return{header:this.active,panel:this.active.length?this.active.next():t()};},_createIcons:function _createIcons(){var e,i,s=this.options.icons;s&&(e=t("<span>"),this._addClass(e,"ui-accordion-header-icon","ui-icon "+s.header),e.prependTo(this.headers),i=this.active.children(".ui-accordion-header-icon"),this._removeClass(i,s.header)._addClass(i,null,s.activeHeader)._addClass(this.headers,"ui-accordion-icons"));},_destroyIcons:function _destroyIcons(){this._removeClass(this.headers,"ui-accordion-icons"),this.headers.children(".ui-accordion-header-icon").remove();},_destroy:function _destroy(){var t;this.element.removeAttr("role"),this.headers.removeAttr("role aria-expanded aria-selected aria-controls tabIndex").removeUniqueId(),this._destroyIcons(),t=this.headers.next().css("display","").removeAttr("role aria-hidden aria-labelledby").removeUniqueId(),"content"!==this.options.heightStyle&&t.css("height","");},_setOption:function _setOption(t,e){return"active"===t?(this._activate(e),void 0):("event"===t&&(this.options.event&&this._off(this.headers,this.options.event),this._setupEvents(e)),this._super(t,e),"collapsible"!==t||e||this.options.active!==!1||this._activate(0),"icons"===t&&(this._destroyIcons(),e&&this._createIcons()),void 0);},_setOptionDisabled:function _setOptionDisabled(t){this._super(t),this.element.attr("aria-disabled",t),this._toggleClass(null,"ui-state-disabled",!!t),this._toggleClass(this.headers.add(this.headers.next()),null,"ui-state-disabled",!!t);},_keydown:function _keydown(e){if(!e.altKey&&!e.ctrlKey){var i=t.ui.keyCode,s=this.headers.length,n=this.headers.index(e.target),o=!1;switch(e.keyCode){case i.RIGHT:case i.DOWN:o=this.headers[(n+1)%s];break;case i.LEFT:case i.UP:o=this.headers[(n-1+s)%s];break;case i.SPACE:case i.ENTER:this._eventHandler(e);break;case i.HOME:o=this.headers[0];break;case i.END:o=this.headers[s-1];}o&&(t(e.target).attr("tabIndex",-1),t(o).attr("tabIndex",0),t(o).trigger("focus"),e.preventDefault());}},_panelKeyDown:function _panelKeyDown(e){e.keyCode===t.ui.keyCode.UP&&e.ctrlKey&&t(e.currentTarget).prev().trigger("focus");},refresh:function refresh(){var e=this.options;this._processPanels(),e.active===!1&&e.collapsible===!0||!this.headers.length?(e.active=!1,this.active=t()):e.active===!1?this._activate(0):this.active.length&&!t.contains(this.element[0],this.active[0])?this.headers.length===this.headers.find(".ui-state-disabled").length?(e.active=!1,this.active=t()):this._activate(Math.max(0,e.active-1)):e.active=this.headers.index(this.active),this._destroyIcons(),this._refresh();},_processPanels:function _processPanels(){var t=this.headers,e=this.panels;this.headers=this.element.find(this.options.header),this._addClass(this.headers,"ui-accordion-header ui-accordion-header-collapsed","ui-state-default"),this.panels=this.headers.next().filter(":not(.ui-accordion-content-active)").hide(),this._addClass(this.panels,"ui-accordion-content","ui-helper-reset ui-widget-content"),e&&(this._off(t.not(this.headers)),this._off(e.not(this.panels)));},_refresh:function _refresh(){var e,i=this.options,s=i.heightStyle,n=this.element.parent();this.active=this._findActive(i.active),this._addClass(this.active,"ui-accordion-header-active","ui-state-active")._removeClass(this.active,"ui-accordion-header-collapsed"),this._addClass(this.active.next(),"ui-accordion-content-active"),this.active.next().show(),this.headers.attr("role","tab").each(function(){var e=t(this),i=e.uniqueId().attr("id"),s=e.next(),n=s.uniqueId().attr("id");e.attr("aria-controls",n),s.attr("aria-labelledby",i);}).next().attr("role","tabpanel"),this.headers.not(this.active).attr({"aria-selected":"false","aria-expanded":"false",tabIndex:-1}).next().attr({"aria-hidden":"true"}).hide(),this.active.length?this.active.attr({"aria-selected":"true","aria-expanded":"true",tabIndex:0}).next().attr({"aria-hidden":"false"}):this.headers.eq(0).attr("tabIndex",0),this._createIcons(),this._setupEvents(i.event),"fill"===s?(e=n.height(),this.element.siblings(":visible").each(function(){var i=t(this),s=i.css("position");"absolute"!==s&&"fixed"!==s&&(e-=i.outerHeight(!0));}),this.headers.each(function(){e-=t(this).outerHeight(!0);}),this.headers.next().each(function(){t(this).height(Math.max(0,e-t(this).innerHeight()+t(this).height()));}).css("overflow","auto")):"auto"===s&&(e=0,this.headers.next().each(function(){var i=t(this).is(":visible");i||t(this).show(),e=Math.max(e,t(this).css("height","").height()),i||t(this).hide();}).height(e));},_activate:function _activate(e){var i=this._findActive(e)[0];i!==this.active[0]&&(i=i||this.active[0],this._eventHandler({target:i,currentTarget:i,preventDefault:t.noop}));},_findActive:function _findActive(e){return"number"==typeof e?this.headers.eq(e):t();},_setupEvents:function _setupEvents(e){var i={keydown:"_keydown"};e&&t.each(e.split(" "),function(t,e){i[e]="_eventHandler";}),this._off(this.headers.add(this.headers.next())),this._on(this.headers,i),this._on(this.headers.next(),{keydown:"_panelKeyDown"}),this._hoverable(this.headers),this._focusable(this.headers);},_eventHandler:function _eventHandler(e){var i,s,n=this.options,o=this.active,a=t(e.currentTarget),r=a[0]===o[0],h=r&&n.collapsible,l=h?t():a.next(),c=o.next(),u={oldHeader:o,oldPanel:c,newHeader:h?t():a,newPanel:l};e.preventDefault(),r&&!n.collapsible||this._trigger("beforeActivate",e,u)===!1||(n.active=h?!1:this.headers.index(a),this.active=r?t():a,this._toggle(u),this._removeClass(o,"ui-accordion-header-active","ui-state-active"),n.icons&&(i=o.children(".ui-accordion-header-icon"),this._removeClass(i,null,n.icons.activeHeader)._addClass(i,null,n.icons.header)),r||(this._removeClass(a,"ui-accordion-header-collapsed")._addClass(a,"ui-accordion-header-active","ui-state-active"),n.icons&&(s=a.children(".ui-accordion-header-icon"),this._removeClass(s,null,n.icons.header)._addClass(s,null,n.icons.activeHeader)),this._addClass(a.next(),"ui-accordion-content-active")));},_toggle:function _toggle(e){var i=e.newPanel,s=this.prevShow.length?this.prevShow:e.oldPanel;this.prevShow.add(this.prevHide).stop(!0,!0),this.prevShow=i,this.prevHide=s,this.options.animate?this._animate(i,s,e):(s.hide(),i.show(),this._toggleComplete(e)),s.attr({"aria-hidden":"true"}),s.prev().attr({"aria-selected":"false","aria-expanded":"false"}),i.length&&s.length?s.prev().attr({tabIndex:-1,"aria-expanded":"false"}):i.length&&this.headers.filter(function(){return 0===parseInt(t(this).attr("tabIndex"),10);}).attr("tabIndex",-1),i.attr("aria-hidden","false").prev().attr({"aria-selected":"true","aria-expanded":"true",tabIndex:0});},_animate:function _animate(t,e,i){var s,n,o,a=this,r=0,h=t.css("box-sizing"),l=t.length&&(!e.length||t.index()<e.index()),c=this.options.animate||{},u=l&&c.down||c,d=function d(){a._toggleComplete(i);};return"number"==typeof u&&(o=u),"string"==typeof u&&(n=u),n=n||u.easing||c.easing,o=o||u.duration||c.duration,e.length?t.length?(s=t.show().outerHeight(),e.animate(this.hideProps,{duration:o,easing:n,step:function step(t,e){e.now=Math.round(t);}}),t.hide().animate(this.showProps,{duration:o,easing:n,complete:d,step:function step(t,i){i.now=Math.round(t),"height"!==i.prop?"content-box"===h&&(r+=i.now):"content"!==a.options.heightStyle&&(i.now=Math.round(s-e.outerHeight()-r),r=0);}}),void 0):e.animate(this.hideProps,o,n,d):t.animate(this.showProps,o,n,d);},_toggleComplete:function _toggleComplete(t){var e=t.oldPanel,i=e.prev();this._removeClass(e,"ui-accordion-content-active"),this._removeClass(i,"ui-accordion-header-active")._addClass(i,"ui-accordion-header-collapsed"),e.length&&(e.parent()[0].className=e.parent()[0].className),this._trigger("activate",null,t);}}),t.ui.safeActiveElement=function(t){var e;try{e=t.activeElement;}catch(i){e=t.body;}return e||(e=t.body),e.nodeName||(e=t.body),e;},t.widget("ui.menu",{version:"1.12.1",defaultElement:"<ul>",delay:300,options:{icons:{submenu:"ui-icon-caret-1-e"},items:"> *",menus:"ul",position:{my:"left top",at:"right top"},role:"menu",blur:null,focus:null,select:null},_create:function _create(){this.activeMenu=this.element,this.mouseHandled=!1,this.element.uniqueId().attr({role:this.options.role,tabIndex:0}),this._addClass("ui-menu","ui-widget ui-widget-content"),this._on({"mousedown .ui-menu-item":function mousedownUiMenuItem(t){t.preventDefault();},"click .ui-menu-item":function clickUiMenuItem(e){var i=t(e.target),s=t(t.ui.safeActiveElement(this.document[0]));!this.mouseHandled&&i.not(".ui-state-disabled").length&&(this.select(e),e.isPropagationStopped()||(this.mouseHandled=!0),i.has(".ui-menu").length?this.expand(e):!this.element.is(":focus")&&s.closest(".ui-menu").length&&(this.element.trigger("focus",[!0]),this.active&&1===this.active.parents(".ui-menu").length&&clearTimeout(this.timer)));},"mouseenter .ui-menu-item":function mouseenterUiMenuItem(e){if(!this.previousFilter){var i=t(e.target).closest(".ui-menu-item"),s=t(e.currentTarget);i[0]===s[0]&&(this._removeClass(s.siblings().children(".ui-state-active"),null,"ui-state-active"),this.focus(e,s));}},mouseleave:"collapseAll","mouseleave .ui-menu":"collapseAll",focus:function focus(t,e){var i=this.active||this.element.find(this.options.items).eq(0);e||this.focus(t,i);},blur:function blur(e){this._delay(function(){var i=!t.contains(this.element[0],t.ui.safeActiveElement(this.document[0]));i&&this.collapseAll(e);});},keydown:"_keydown"}),this.refresh(),this._on(this.document,{click:function click(t){this._closeOnDocumentClick(t)&&this.collapseAll(t),this.mouseHandled=!1;}});},_destroy:function _destroy(){var e=this.element.find(".ui-menu-item").removeAttr("role aria-disabled"),i=e.children(".ui-menu-item-wrapper").removeUniqueId().removeAttr("tabIndex role aria-haspopup");this.element.removeAttr("aria-activedescendant").find(".ui-menu").addBack().removeAttr("role aria-labelledby aria-expanded aria-hidden aria-disabled tabIndex").removeUniqueId().show(),i.children().each(function(){var e=t(this);e.data("ui-menu-submenu-caret")&&e.remove();});},_keydown:function _keydown(e){var i,s,n,o,a=!0;switch(e.keyCode){case t.ui.keyCode.PAGE_UP:this.previousPage(e);break;case t.ui.keyCode.PAGE_DOWN:this.nextPage(e);break;case t.ui.keyCode.HOME:this._move("first","first",e);break;case t.ui.keyCode.END:this._move("last","last",e);break;case t.ui.keyCode.UP:this.previous(e);break;case t.ui.keyCode.DOWN:this.next(e);break;case t.ui.keyCode.LEFT:this.collapse(e);break;case t.ui.keyCode.RIGHT:this.active&&!this.active.is(".ui-state-disabled")&&this.expand(e);break;case t.ui.keyCode.ENTER:case t.ui.keyCode.SPACE:this._activate(e);break;case t.ui.keyCode.ESCAPE:this.collapse(e);break;default:a=!1,s=this.previousFilter||"",o=!1,n=e.keyCode>=96&&105>=e.keyCode?""+(e.keyCode-96):String.fromCharCode(e.keyCode),clearTimeout(this.filterTimer),n===s?o=!0:n=s+n,i=this._filterMenuItems(n),i=o&&-1!==i.index(this.active.next())?this.active.nextAll(".ui-menu-item"):i,i.length||(n=String.fromCharCode(e.keyCode),i=this._filterMenuItems(n)),i.length?(this.focus(e,i),this.previousFilter=n,this.filterTimer=this._delay(function(){delete this.previousFilter;},1e3)):delete this.previousFilter;}a&&e.preventDefault();},_activate:function _activate(t){this.active&&!this.active.is(".ui-state-disabled")&&(this.active.children("[aria-haspopup='true']").length?this.expand(t):this.select(t));},refresh:function refresh(){var e,i,s,n,o,a=this,r=this.options.icons.submenu,h=this.element.find(this.options.menus);this._toggleClass("ui-menu-icons",null,!!this.element.find(".ui-icon").length),s=h.filter(":not(.ui-menu)").hide().attr({role:this.options.role,"aria-hidden":"true","aria-expanded":"false"}).each(function(){var e=t(this),i=e.prev(),s=t("<span>").data("ui-menu-submenu-caret",!0);a._addClass(s,"ui-menu-icon","ui-icon "+r),i.attr("aria-haspopup","true").prepend(s),e.attr("aria-labelledby",i.attr("id"));}),this._addClass(s,"ui-menu","ui-widget ui-widget-content ui-front"),e=h.add(this.element),i=e.find(this.options.items),i.not(".ui-menu-item").each(function(){var e=t(this);a._isDivider(e)&&a._addClass(e,"ui-menu-divider","ui-widget-content");}),n=i.not(".ui-menu-item, .ui-menu-divider"),o=n.children().not(".ui-menu").uniqueId().attr({tabIndex:-1,role:this._itemRole()}),this._addClass(n,"ui-menu-item")._addClass(o,"ui-menu-item-wrapper"),i.filter(".ui-state-disabled").attr("aria-disabled","true"),this.active&&!t.contains(this.element[0],this.active[0])&&this.blur();},_itemRole:function _itemRole(){return{menu:"menuitem",listbox:"option"}[this.options.role];},_setOption:function _setOption(t,e){if("icons"===t){var i=this.element.find(".ui-menu-icon");this._removeClass(i,null,this.options.icons.submenu)._addClass(i,null,e.submenu);}this._super(t,e);},_setOptionDisabled:function _setOptionDisabled(t){this._super(t),this.element.attr("aria-disabled",t+""),this._toggleClass(null,"ui-state-disabled",!!t);},focus:function focus(t,e){var i,s,n;this.blur(t,t&&"focus"===t.type),this._scrollIntoView(e),this.active=e.first(),s=this.active.children(".ui-menu-item-wrapper"),this._addClass(s,null,"ui-state-active"),this.options.role&&this.element.attr("aria-activedescendant",s.attr("id")),n=this.active.parent().closest(".ui-menu-item").children(".ui-menu-item-wrapper"),this._addClass(n,null,"ui-state-active"),t&&"keydown"===t.type?this._close():this.timer=this._delay(function(){this._close();},this.delay),i=e.children(".ui-menu"),i.length&&t&&/^mouse/.test(t.type)&&this._startOpening(i),this.activeMenu=e.parent(),this._trigger("focus",t,{item:e});},_scrollIntoView:function _scrollIntoView(e){var i,s,n,o,a,r;this._hasScroll()&&(i=parseFloat(t.css(this.activeMenu[0],"borderTopWidth"))||0,s=parseFloat(t.css(this.activeMenu[0],"paddingTop"))||0,n=e.offset().top-this.activeMenu.offset().top-i-s,o=this.activeMenu.scrollTop(),a=this.activeMenu.height(),r=e.outerHeight(),0>n?this.activeMenu.scrollTop(o+n):n+r>a&&this.activeMenu.scrollTop(o+n-a+r));},blur:function blur(t,e){e||clearTimeout(this.timer),this.active&&(this._removeClass(this.active.children(".ui-menu-item-wrapper"),null,"ui-state-active"),this._trigger("blur",t,{item:this.active}),this.active=null);},_startOpening:function _startOpening(t){clearTimeout(this.timer),"true"===t.attr("aria-hidden")&&(this.timer=this._delay(function(){this._close(),this._open(t);},this.delay));},_open:function _open(e){var i=t.extend({of:this.active},this.options.position);clearTimeout(this.timer),this.element.find(".ui-menu").not(e.parents(".ui-menu")).hide().attr("aria-hidden","true"),e.show().removeAttr("aria-hidden").attr("aria-expanded","true").position(i);},collapseAll:function collapseAll(e,i){clearTimeout(this.timer),this.timer=this._delay(function(){var s=i?this.element:t(e&&e.target).closest(this.element.find(".ui-menu"));s.length||(s=this.element),this._close(s),this.blur(e),this._removeClass(s.find(".ui-state-active"),null,"ui-state-active"),this.activeMenu=s;},this.delay);},_close:function _close(t){t||(t=this.active?this.active.parent():this.element),t.find(".ui-menu").hide().attr("aria-hidden","true").attr("aria-expanded","false");},_closeOnDocumentClick:function _closeOnDocumentClick(e){return!t(e.target).closest(".ui-menu").length;},_isDivider:function _isDivider(t){return!/[^\-\u2014\u2013\s]/.test(t.text());},collapse:function collapse(t){var e=this.active&&this.active.parent().closest(".ui-menu-item",this.element);e&&e.length&&(this._close(),this.focus(t,e));},expand:function expand(t){var e=this.active&&this.active.children(".ui-menu ").find(this.options.items).first();e&&e.length&&(this._open(e.parent()),this._delay(function(){this.focus(t,e);}));},next:function next(t){this._move("next","first",t);},previous:function previous(t){this._move("prev","last",t);},isFirstItem:function isFirstItem(){return this.active&&!this.active.prevAll(".ui-menu-item").length;},isLastItem:function isLastItem(){return this.active&&!this.active.nextAll(".ui-menu-item").length;},_move:function _move(t,e,i){var s;this.active&&(s="first"===t||"last"===t?this.active["first"===t?"prevAll":"nextAll"](".ui-menu-item").eq(-1):this.active[t+"All"](".ui-menu-item").eq(0)),s&&s.length&&this.active||(s=this.activeMenu.find(this.options.items)[e]()),this.focus(i,s);},nextPage:function nextPage(e){var i,s,n;return this.active?(this.isLastItem()||(this._hasScroll()?(s=this.active.offset().top,n=this.element.height(),this.active.nextAll(".ui-menu-item").each(function(){return i=t(this),0>i.offset().top-s-n;}),this.focus(e,i)):this.focus(e,this.activeMenu.find(this.options.items)[this.active?"last":"first"]())),void 0):(this.next(e),void 0);},previousPage:function previousPage(e){var i,s,n;return this.active?(this.isFirstItem()||(this._hasScroll()?(s=this.active.offset().top,n=this.element.height(),this.active.prevAll(".ui-menu-item").each(function(){return i=t(this),i.offset().top-s+n>0;}),this.focus(e,i)):this.focus(e,this.activeMenu.find(this.options.items).first())),void 0):(this.next(e),void 0);},_hasScroll:function _hasScroll(){return this.element.outerHeight()<this.element.prop("scrollHeight");},select:function select(e){this.active=this.active||t(e.target).closest(".ui-menu-item");var i={item:this.active};this.active.has(".ui-menu").length||this.collapseAll(e,!0),this._trigger("select",e,i);},_filterMenuItems:function _filterMenuItems(e){var i=e.replace(/[\-\[\]{}()*+?.,\\\^$|#\s]/g,"\\$&"),s=RegExp("^"+i,"i");return this.activeMenu.find(this.options.items).filter(".ui-menu-item").filter(function(){return s.test(t.trim(t(this).children(".ui-menu-item-wrapper").text()));});}}),t.widget("ui.autocomplete",{version:"1.12.1",defaultElement:"<input>",options:{appendTo:null,autoFocus:!1,delay:300,minLength:1,position:{my:"left top",at:"left bottom",collision:"none"},source:null,change:null,close:null,focus:null,open:null,response:null,search:null,select:null},requestIndex:0,pending:0,_create:function _create(){var e,i,s,n=this.element[0].nodeName.toLowerCase(),o="textarea"===n,a="input"===n;this.isMultiLine=o||!a&&this._isContentEditable(this.element),this.valueMethod=this.element[o||a?"val":"text"],this.isNewMenu=!0,this._addClass("ui-autocomplete-input"),this.element.attr("autocomplete","off"),this._on(this.element,{keydown:function keydown(n){if(this.element.prop("readOnly"))return e=!0,s=!0,i=!0,void 0;e=!1,s=!1,i=!1;var o=t.ui.keyCode;switch(n.keyCode){case o.PAGE_UP:e=!0,this._move("previousPage",n);break;case o.PAGE_DOWN:e=!0,this._move("nextPage",n);break;case o.UP:e=!0,this._keyEvent("previous",n);break;case o.DOWN:e=!0,this._keyEvent("next",n);break;case o.ENTER:this.menu.active&&(e=!0,n.preventDefault(),this.menu.select(n));break;case o.TAB:this.menu.active&&this.menu.select(n);break;case o.ESCAPE:this.menu.element.is(":visible")&&(this.isMultiLine||this._value(this.term),this.close(n),n.preventDefault());break;default:i=!0,this._searchTimeout(n);}},keypress:function keypress(s){if(e)return e=!1,(!this.isMultiLine||this.menu.element.is(":visible"))&&s.preventDefault(),void 0;if(!i){var n=t.ui.keyCode;switch(s.keyCode){case n.PAGE_UP:this._move("previousPage",s);break;case n.PAGE_DOWN:this._move("nextPage",s);break;case n.UP:this._keyEvent("previous",s);break;case n.DOWN:this._keyEvent("next",s);}}},input:function input(t){return s?(s=!1,t.preventDefault(),void 0):(this._searchTimeout(t),void 0);},focus:function focus(){this.selectedItem=null,this.previous=this._value();},blur:function blur(t){return this.cancelBlur?(delete this.cancelBlur,void 0):(clearTimeout(this.searching),this.close(t),this._change(t),void 0);}}),this._initSource(),this.menu=t("<ul>").appendTo(this._appendTo()).menu({role:null}).hide().menu("instance"),this._addClass(this.menu.element,"ui-autocomplete","ui-front"),this._on(this.menu.element,{mousedown:function mousedown(e){e.preventDefault(),this.cancelBlur=!0,this._delay(function(){delete this.cancelBlur,this.element[0]!==t.ui.safeActiveElement(this.document[0])&&this.element.trigger("focus");});},menufocus:function menufocus(e,i){var s,n;return this.isNewMenu&&(this.isNewMenu=!1,e.originalEvent&&/^mouse/.test(e.originalEvent.type))?(this.menu.blur(),this.document.one("mousemove",function(){t(e.target).trigger(e.originalEvent);}),void 0):(n=i.item.data("ui-autocomplete-item"),!1!==this._trigger("focus",e,{item:n})&&e.originalEvent&&/^key/.test(e.originalEvent.type)&&this._value(n.value),s=i.item.attr("aria-label")||n.value,s&&t.trim(s).length&&(this.liveRegion.children().hide(),t("<div>").text(s).appendTo(this.liveRegion)),void 0);},menuselect:function menuselect(e,i){var s=i.item.data("ui-autocomplete-item"),n=this.previous;this.element[0]!==t.ui.safeActiveElement(this.document[0])&&(this.element.trigger("focus"),this.previous=n,this._delay(function(){this.previous=n,this.selectedItem=s;})),!1!==this._trigger("select",e,{item:s})&&this._value(s.value),this.term=this._value(),this.close(e),this.selectedItem=s;}}),this.liveRegion=t("<div>",{role:"status","aria-live":"assertive","aria-relevant":"additions"}).appendTo(this.document[0].body),this._addClass(this.liveRegion,null,"ui-helper-hidden-accessible"),this._on(this.window,{beforeunload:function beforeunload(){this.element.removeAttr("autocomplete");}});},_destroy:function _destroy(){clearTimeout(this.searching),this.element.removeAttr("autocomplete"),this.menu.element.remove(),this.liveRegion.remove();},_setOption:function _setOption(t,e){this._super(t,e),"source"===t&&this._initSource(),"appendTo"===t&&this.menu.element.appendTo(this._appendTo()),"disabled"===t&&e&&this.xhr&&this.xhr.abort();},_isEventTargetInWidget:function _isEventTargetInWidget(e){var i=this.menu.element[0];return e.target===this.element[0]||e.target===i||t.contains(i,e.target);},_closeOnClickOutside:function _closeOnClickOutside(t){this._isEventTargetInWidget(t)||this.close();},_appendTo:function _appendTo(){var e=this.options.appendTo;return e&&(e=e.jquery||e.nodeType?t(e):this.document.find(e).eq(0)),e&&e[0]||(e=this.element.closest(".ui-front, dialog")),e.length||(e=this.document[0].body),e;},_initSource:function _initSource(){var e,i,s=this;t.isArray(this.options.source)?(e=this.options.source,this.source=function(i,s){s(t.ui.autocomplete.filter(e,i.term));}):"string"==typeof this.options.source?(i=this.options.source,this.source=function(e,n){s.xhr&&s.xhr.abort(),s.xhr=t.ajax({url:i,data:e,dataType:"json",success:function success(t){n(t);},error:function error(){n([]);}});}):this.source=this.options.source;},_searchTimeout:function _searchTimeout(t){clearTimeout(this.searching),this.searching=this._delay(function(){var e=this.term===this._value(),i=this.menu.element.is(":visible"),s=t.altKey||t.ctrlKey||t.metaKey||t.shiftKey;(!e||e&&!i&&!s)&&(this.selectedItem=null,this.search(null,t));},this.options.delay);},search:function search(t,e){return t=null!=t?t:this._value(),this.term=this._value(),t.length<this.options.minLength?this.close(e):this._trigger("search",e)!==!1?this._search(t):void 0;},_search:function _search(t){this.pending++,this._addClass("ui-autocomplete-loading"),this.cancelSearch=!1,this.source({term:t},this._response());},_response:function _response(){var e=++this.requestIndex;return t.proxy(function(t){e===this.requestIndex&&this.__response(t),this.pending--,this.pending||this._removeClass("ui-autocomplete-loading");},this);},__response:function __response(t){t&&(t=this._normalize(t)),this._trigger("response",null,{content:t}),!this.options.disabled&&t&&t.length&&!this.cancelSearch?(this._suggest(t),this._trigger("open")):this._close();},close:function close(t){this.cancelSearch=!0,this._close(t);},_close:function _close(t){this._off(this.document,"mousedown"),this.menu.element.is(":visible")&&(this.menu.element.hide(),this.menu.blur(),this.isNewMenu=!0,this._trigger("close",t));},_change:function _change(t){this.previous!==this._value()&&this._trigger("change",t,{item:this.selectedItem});},_normalize:function _normalize(e){return e.length&&e[0].label&&e[0].value?e:t.map(e,function(e){return"string"==typeof e?{label:e,value:e}:t.extend({},e,{label:e.label||e.value,value:e.value||e.label});});},_suggest:function _suggest(e){var i=this.menu.element.empty();this._renderMenu(i,e),this.isNewMenu=!0,this.menu.refresh(),i.show(),this._resizeMenu(),i.position(t.extend({of:this.element},this.options.position)),this.options.autoFocus&&this.menu.next(),this._on(this.document,{mousedown:"_closeOnClickOutside"});},_resizeMenu:function _resizeMenu(){var t=this.menu.element;t.outerWidth(Math.max(t.width("").outerWidth()+1,this.element.outerWidth()));},_renderMenu:function _renderMenu(e,i){var s=this;t.each(i,function(t,i){s._renderItemData(e,i);});},_renderItemData:function _renderItemData(t,e){return this._renderItem(t,e).data("ui-autocomplete-item",e);},_renderItem:function _renderItem(e,i){return t("<li>").append(t("<div>").text(i.label)).appendTo(e);},_move:function _move(t,e){return this.menu.element.is(":visible")?this.menu.isFirstItem()&&/^previous/.test(t)||this.menu.isLastItem()&&/^next/.test(t)?(this.isMultiLine||this._value(this.term),this.menu.blur(),void 0):(this.menu[t](e),void 0):(this.search(null,e),void 0);},widget:function widget(){return this.menu.element;},_value:function _value(){return this.valueMethod.apply(this.element,arguments);},_keyEvent:function _keyEvent(t,e){(!this.isMultiLine||this.menu.element.is(":visible"))&&(this._move(t,e),e.preventDefault());},_isContentEditable:function _isContentEditable(t){if(!t.length)return!1;var e=t.prop("contentEditable");return"inherit"===e?this._isContentEditable(t.parent()):"true"===e;}}),t.extend(t.ui.autocomplete,{escapeRegex:function escapeRegex(t){return t.replace(/[\-\[\]{}()*+?.,\\\^$|#\s]/g,"\\$&");},filter:function filter(e,i){var s=RegExp(t.ui.autocomplete.escapeRegex(i),"i");return t.grep(e,function(t){return s.test(t.label||t.value||t);});}}),t.widget("ui.autocomplete",t.ui.autocomplete,{options:{messages:{noResults:"No search results.",results:function results(t){return t+(t>1?" results are":" result is")+" available, use up and down arrow keys to navigate.";}}},__response:function __response(e){var i;this._superApply(arguments),this.options.disabled||this.cancelSearch||(i=e&&e.length?this.options.messages.results(e.length):this.options.messages.noResults,this.liveRegion.children().hide(),t("<div>").text(i).appendTo(this.liveRegion));}}),t.ui.autocomplete;var g=/ui-corner-([a-z]){2,6}/g;t.widget("ui.controlgroup",{version:"1.12.1",defaultElement:"<div>",options:{direction:"horizontal",disabled:null,onlyVisible:!0,items:{button:"input[type=button], input[type=submit], input[type=reset], button, a",controlgroupLabel:".ui-controlgroup-label",checkboxradio:"input[type='checkbox'], input[type='radio']",selectmenu:"select",spinner:".ui-spinner-input"}},_create:function _create(){this._enhance();},_enhance:function _enhance(){this.element.attr("role","toolbar"),this.refresh();},_destroy:function _destroy(){this._callChildMethod("destroy"),this.childWidgets.removeData("ui-controlgroup-data"),this.element.removeAttr("role"),this.options.items.controlgroupLabel&&this.element.find(this.options.items.controlgroupLabel).find(".ui-controlgroup-label-contents").contents().unwrap();},_initWidgets:function _initWidgets(){var e=this,i=[];t.each(this.options.items,function(s,n){var o,a={};return n?"controlgroupLabel"===s?(o=e.element.find(n),o.each(function(){var e=t(this);e.children(".ui-controlgroup-label-contents").length||e.contents().wrapAll("<span class='ui-controlgroup-label-contents'></span>");}),e._addClass(o,null,"ui-widget ui-widget-content ui-state-default"),i=i.concat(o.get()),void 0):(t.fn[s]&&(a=e["_"+s+"Options"]?e["_"+s+"Options"]("middle"):{classes:{}},e.element.find(n).each(function(){var n=t(this),o=n[s]("instance"),r=t.widget.extend({},a);if("button"!==s||!n.parent(".ui-spinner").length){o||(o=n[s]()[s]("instance")),o&&(r.classes=e._resolveClassesValues(r.classes,o)),n[s](r);var h=n[s]("widget");t.data(h[0],"ui-controlgroup-data",o?o:n[s]("instance")),i.push(h[0]);}})),void 0):void 0;}),this.childWidgets=t(t.unique(i)),this._addClass(this.childWidgets,"ui-controlgroup-item");},_callChildMethod:function _callChildMethod(e){this.childWidgets.each(function(){var i=t(this),s=i.data("ui-controlgroup-data");s&&s[e]&&s[e]();});},_updateCornerClass:function _updateCornerClass(t,e){var i="ui-corner-top ui-corner-bottom ui-corner-left ui-corner-right ui-corner-all",s=this._buildSimpleOptions(e,"label").classes.label;this._removeClass(t,null,i),this._addClass(t,null,s);},_buildSimpleOptions:function _buildSimpleOptions(t,e){var i="vertical"===this.options.direction,s={classes:{}};return s.classes[e]={middle:"",first:"ui-corner-"+(i?"top":"left"),last:"ui-corner-"+(i?"bottom":"right"),only:"ui-corner-all"}[t],s;},_spinnerOptions:function _spinnerOptions(t){var e=this._buildSimpleOptions(t,"ui-spinner");return e.classes["ui-spinner-up"]="",e.classes["ui-spinner-down"]="",e;},_buttonOptions:function _buttonOptions(t){return this._buildSimpleOptions(t,"ui-button");},_checkboxradioOptions:function _checkboxradioOptions(t){return this._buildSimpleOptions(t,"ui-checkboxradio-label");},_selectmenuOptions:function _selectmenuOptions(t){var e="vertical"===this.options.direction;return{width:e?"auto":!1,classes:{middle:{"ui-selectmenu-button-open":"","ui-selectmenu-button-closed":""},first:{"ui-selectmenu-button-open":"ui-corner-"+(e?"top":"tl"),"ui-selectmenu-button-closed":"ui-corner-"+(e?"top":"left")},last:{"ui-selectmenu-button-open":e?"":"ui-corner-tr","ui-selectmenu-button-closed":"ui-corner-"+(e?"bottom":"right")},only:{"ui-selectmenu-button-open":"ui-corner-top","ui-selectmenu-button-closed":"ui-corner-all"}}[t]};},_resolveClassesValues:function _resolveClassesValues(e,i){var s={};return t.each(e,function(n){var o=i.options.classes[n]||"";o=t.trim(o.replace(g,"")),s[n]=(o+" "+e[n]).replace(/\s+/g," ");}),s;},_setOption:function _setOption(t,e){return"direction"===t&&this._removeClass("ui-controlgroup-"+this.options.direction),this._super(t,e),"disabled"===t?(this._callChildMethod(e?"disable":"enable"),void 0):(this.refresh(),void 0);},refresh:function refresh(){var e,i=this;this._addClass("ui-controlgroup ui-controlgroup-"+this.options.direction),"horizontal"===this.options.direction&&this._addClass(null,"ui-helper-clearfix"),this._initWidgets(),e=this.childWidgets,this.options.onlyVisible&&(e=e.filter(":visible")),e.length&&(t.each(["first","last"],function(t,s){var n=e[s]().data("ui-controlgroup-data");if(n&&i["_"+n.widgetName+"Options"]){var o=i["_"+n.widgetName+"Options"](1===e.length?"only":s);o.classes=i._resolveClassesValues(o.classes,n),n.element[n.widgetName](o);}else i._updateCornerClass(e[s](),s);}),this._callChildMethod("refresh"));}}),t.widget("ui.checkboxradio",[t.ui.formResetMixin,{version:"1.12.1",options:{disabled:null,label:null,icon:!0,classes:{"ui-checkboxradio-label":"ui-corner-all","ui-checkboxradio-icon":"ui-corner-all"}},_getCreateOptions:function _getCreateOptions(){var e,i,s=this,n=this._super()||{};return this._readType(),i=this.element.labels(),this.label=t(i[i.length-1]),this.label.length||t.error("No label found for checkboxradio widget"),this.originalLabel="",this.label.contents().not(this.element[0]).each(function(){s.originalLabel+=3===this.nodeType?t(this).text():this.outerHTML;}),this.originalLabel&&(n.label=this.originalLabel),e=this.element[0].disabled,null!=e&&(n.disabled=e),n;},_create:function _create(){var t=this.element[0].checked;this._bindFormResetHandler(),null==this.options.disabled&&(this.options.disabled=this.element[0].disabled),this._setOption("disabled",this.options.disabled),this._addClass("ui-checkboxradio","ui-helper-hidden-accessible"),this._addClass(this.label,"ui-checkboxradio-label","ui-button ui-widget"),"radio"===this.type&&this._addClass(this.label,"ui-checkboxradio-radio-label"),this.options.label&&this.options.label!==this.originalLabel?this._updateLabel():this.originalLabel&&(this.options.label=this.originalLabel),this._enhance(),t&&(this._addClass(this.label,"ui-checkboxradio-checked","ui-state-active"),this.icon&&this._addClass(this.icon,null,"ui-state-hover")),this._on({change:"_toggleClasses",focus:function focus(){this._addClass(this.label,null,"ui-state-focus ui-visual-focus");},blur:function blur(){this._removeClass(this.label,null,"ui-state-focus ui-visual-focus");}});},_readType:function _readType(){var e=this.element[0].nodeName.toLowerCase();this.type=this.element[0].type,"input"===e&&/radio|checkbox/.test(this.type)||t.error("Can't create checkboxradio on element.nodeName="+e+" and element.type="+this.type);},_enhance:function _enhance(){this._updateIcon(this.element[0].checked);},widget:function widget(){return this.label;},_getRadioGroup:function _getRadioGroup(){var e,i=this.element[0].name,s="input[name='"+t.ui.escapeSelector(i)+"']";return i?(e=this.form.length?t(this.form[0].elements).filter(s):t(s).filter(function(){return 0===t(this).form().length;}),e.not(this.element)):t([]);},_toggleClasses:function _toggleClasses(){var e=this.element[0].checked;this._toggleClass(this.label,"ui-checkboxradio-checked","ui-state-active",e),this.options.icon&&"checkbox"===this.type&&this._toggleClass(this.icon,null,"ui-icon-check ui-state-checked",e)._toggleClass(this.icon,null,"ui-icon-blank",!e),"radio"===this.type&&this._getRadioGroup().each(function(){var e=t(this).checkboxradio("instance");e&&e._removeClass(e.label,"ui-checkboxradio-checked","ui-state-active");});},_destroy:function _destroy(){this._unbindFormResetHandler(),this.icon&&(this.icon.remove(),this.iconSpace.remove());},_setOption:function _setOption(t,e){return"label"!==t||e?(this._super(t,e),"disabled"===t?(this._toggleClass(this.label,null,"ui-state-disabled",e),this.element[0].disabled=e,void 0):(this.refresh(),void 0)):void 0;},_updateIcon:function _updateIcon(e){var i="ui-icon ui-icon-background ";this.options.icon?(this.icon||(this.icon=t("<span>"),this.iconSpace=t("<span> </span>"),this._addClass(this.iconSpace,"ui-checkboxradio-icon-space")),"checkbox"===this.type?(i+=e?"ui-icon-check ui-state-checked":"ui-icon-blank",this._removeClass(this.icon,null,e?"ui-icon-blank":"ui-icon-check")):i+="ui-icon-blank",this._addClass(this.icon,"ui-checkboxradio-icon",i),e||this._removeClass(this.icon,null,"ui-icon-check ui-state-checked"),this.icon.prependTo(this.label).after(this.iconSpace)):void 0!==this.icon&&(this.icon.remove(),this.iconSpace.remove(),delete this.icon);},_updateLabel:function _updateLabel(){var t=this.label.contents().not(this.element[0]);this.icon&&(t=t.not(this.icon[0])),this.iconSpace&&(t=t.not(this.iconSpace[0])),t.remove(),this.label.append(this.options.label);},refresh:function refresh(){var t=this.element[0].checked,e=this.element[0].disabled;this._updateIcon(t),this._toggleClass(this.label,"ui-checkboxradio-checked","ui-state-active",t),null!==this.options.label&&this._updateLabel(),e!==this.options.disabled&&this._setOptions({disabled:e});}}]),t.ui.checkboxradio,t.widget("ui.button",{version:"1.12.1",defaultElement:"<button>",options:{classes:{"ui-button":"ui-corner-all"},disabled:null,icon:null,iconPosition:"beginning",label:null,showLabel:!0},_getCreateOptions:function _getCreateOptions(){var t,e=this._super()||{};return this.isInput=this.element.is("input"),t=this.element[0].disabled,null!=t&&(e.disabled=t),this.originalLabel=this.isInput?this.element.val():this.element.html(),this.originalLabel&&(e.label=this.originalLabel),e;},_create:function _create(){!this.option.showLabel&!this.options.icon&&(this.options.showLabel=!0),null==this.options.disabled&&(this.options.disabled=this.element[0].disabled||!1),this.hasTitle=!!this.element.attr("title"),this.options.label&&this.options.label!==this.originalLabel&&(this.isInput?this.element.val(this.options.label):this.element.html(this.options.label)),this._addClass("ui-button","ui-widget"),this._setOption("disabled",this.options.disabled),this._enhance(),this.element.is("a")&&this._on({keyup:function keyup(e){e.keyCode===t.ui.keyCode.SPACE&&(e.preventDefault(),this.element[0].click?this.element[0].click():this.element.trigger("click"));}});},_enhance:function _enhance(){this.element.is("button")||this.element.attr("role","button"),this.options.icon&&(this._updateIcon("icon",this.options.icon),this._updateTooltip());},_updateTooltip:function _updateTooltip(){this.title=this.element.attr("title"),this.options.showLabel||this.title||this.element.attr("title",this.options.label);},_updateIcon:function _updateIcon(e,i){var s="iconPosition"!==e,n=s?this.options.iconPosition:i,o="top"===n||"bottom"===n;this.icon?s&&this._removeClass(this.icon,null,this.options.icon):(this.icon=t("<span>"),this._addClass(this.icon,"ui-button-icon","ui-icon"),this.options.showLabel||this._addClass("ui-button-icon-only")),s&&this._addClass(this.icon,null,i),this._attachIcon(n),o?(this._addClass(this.icon,null,"ui-widget-icon-block"),this.iconSpace&&this.iconSpace.remove()):(this.iconSpace||(this.iconSpace=t("<span> </span>"),this._addClass(this.iconSpace,"ui-button-icon-space")),this._removeClass(this.icon,null,"ui-wiget-icon-block"),this._attachIconSpace(n));},_destroy:function _destroy(){this.element.removeAttr("role"),this.icon&&this.icon.remove(),this.iconSpace&&this.iconSpace.remove(),this.hasTitle||this.element.removeAttr("title");},_attachIconSpace:function _attachIconSpace(t){this.icon[/^(?:end|bottom)/.test(t)?"before":"after"](this.iconSpace);},_attachIcon:function _attachIcon(t){this.element[/^(?:end|bottom)/.test(t)?"append":"prepend"](this.icon);},_setOptions:function _setOptions(t){var e=void 0===t.showLabel?this.options.showLabel:t.showLabel,i=void 0===t.icon?this.options.icon:t.icon;e||i||(t.showLabel=!0),this._super(t);},_setOption:function _setOption(t,e){"icon"===t&&(e?this._updateIcon(t,e):this.icon&&(this.icon.remove(),this.iconSpace&&this.iconSpace.remove())),"iconPosition"===t&&this._updateIcon(t,e),"showLabel"===t&&(this._toggleClass("ui-button-icon-only",null,!e),this._updateTooltip()),"label"===t&&(this.isInput?this.element.val(e):(this.element.html(e),this.icon&&(this._attachIcon(this.options.iconPosition),this._attachIconSpace(this.options.iconPosition)))),this._super(t,e),"disabled"===t&&(this._toggleClass(null,"ui-state-disabled",e),this.element[0].disabled=e,e&&this.element.blur());},refresh:function refresh(){var t=this.element.is("input, button")?this.element[0].disabled:this.element.hasClass("ui-button-disabled");t!==this.options.disabled&&this._setOptions({disabled:t}),this._updateTooltip();}}),t.uiBackCompat!==!1&&(t.widget("ui.button",t.ui.button,{options:{text:!0,icons:{primary:null,secondary:null}},_create:function _create(){this.options.showLabel&&!this.options.text&&(this.options.showLabel=this.options.text),!this.options.showLabel&&this.options.text&&(this.options.text=this.options.showLabel),this.options.icon||!this.options.icons.primary&&!this.options.icons.secondary?this.options.icon&&(this.options.icons.primary=this.options.icon):this.options.icons.primary?this.options.icon=this.options.icons.primary:(this.options.icon=this.options.icons.secondary,this.options.iconPosition="end"),this._super();},_setOption:function _setOption(t,e){return"text"===t?(this._super("showLabel",e),void 0):("showLabel"===t&&(this.options.text=e),"icon"===t&&(this.options.icons.primary=e),"icons"===t&&(e.primary?(this._super("icon",e.primary),this._super("iconPosition","beginning")):e.secondary&&(this._super("icon",e.secondary),this._super("iconPosition","end"))),this._superApply(arguments),void 0);}}),t.fn.button=function(e){return function(){return!this.length||this.length&&"INPUT"!==this[0].tagName||this.length&&"INPUT"===this[0].tagName&&"checkbox"!==this.attr("type")&&"radio"!==this.attr("type")?e.apply(this,arguments):(t.ui.checkboxradio||t.error("Checkboxradio widget missing"),0===arguments.length?this.checkboxradio({icon:!1}):this.checkboxradio.apply(this,arguments));};}(t.fn.button),t.fn.buttonset=function(){return t.ui.controlgroup||t.error("Controlgroup widget missing"),"option"===arguments[0]&&"items"===arguments[1]&&arguments[2]?this.controlgroup.apply(this,[arguments[0],"items.button",arguments[2]]):"option"===arguments[0]&&"items"===arguments[1]?this.controlgroup.apply(this,[arguments[0],"items.button"]):("object"==_typeof(arguments[0])&&arguments[0].items&&(arguments[0].items={button:arguments[0].items}),this.controlgroup.apply(this,arguments));}),t.ui.button,t.extend(t.ui,{datepicker:{version:"1.12.1"}});var m;t.extend(s.prototype,{markerClassName:"hasDatepicker",maxRows:4,_widgetDatepicker:function _widgetDatepicker(){return this.dpDiv;},setDefaults:function setDefaults(t){return a(this._defaults,t||{}),this;},_attachDatepicker:function _attachDatepicker(e,i){var s,n,o;s=e.nodeName.toLowerCase(),n="div"===s||"span"===s,e.id||(this.uuid+=1,e.id="dp"+this.uuid),o=this._newInst(t(e),n),o.settings=t.extend({},i||{}),"input"===s?this._connectDatepicker(e,o):n&&this._inlineDatepicker(e,o);},_newInst:function _newInst(e,i){var s=e[0].id.replace(/([^A-Za-z0-9_\-])/g,"\\\\$1");return{id:s,input:e,selectedDay:0,selectedMonth:0,selectedYear:0,drawMonth:0,drawYear:0,inline:i,dpDiv:i?n(t("<div class='"+this._inlineClass+" ui-datepicker ui-widget ui-widget-content ui-helper-clearfix ui-corner-all'></div>")):this.dpDiv};},_connectDatepicker:function _connectDatepicker(e,i){var s=t(e);i.append=t([]),i.trigger=t([]),s.hasClass(this.markerClassName)||(this._attachments(s,i),s.addClass(this.markerClassName).on("keydown",this._doKeyDown).on("keypress",this._doKeyPress).on("keyup",this._doKeyUp),this._autoSize(i),t.data(e,"datepicker",i),i.settings.disabled&&this._disableDatepicker(e));},_attachments:function _attachments(e,i){var s,n,o,a=this._get(i,"appendText"),r=this._get(i,"isRTL");i.append&&i.append.remove(),a&&(i.append=t("<span class='"+this._appendClass+"'>"+a+"</span>"),e[r?"before":"after"](i.append)),e.off("focus",this._showDatepicker),i.trigger&&i.trigger.remove(),s=this._get(i,"showOn"),("focus"===s||"both"===s)&&e.on("focus",this._showDatepicker),("button"===s||"both"===s)&&(n=this._get(i,"buttonText"),o=this._get(i,"buttonImage"),i.trigger=t(this._get(i,"buttonImageOnly")?t("<img/>").addClass(this._triggerClass).attr({src:o,alt:n,title:n}):t("<button type='button'></button>").addClass(this._triggerClass).html(o?t("<img/>").attr({src:o,alt:n,title:n}):n)),e[r?"before":"after"](i.trigger),i.trigger.on("click",function(){return t.datepicker._datepickerShowing&&t.datepicker._lastInput===e[0]?t.datepicker._hideDatepicker():t.datepicker._datepickerShowing&&t.datepicker._lastInput!==e[0]?(t.datepicker._hideDatepicker(),t.datepicker._showDatepicker(e[0])):t.datepicker._showDatepicker(e[0]),!1;}));},_autoSize:function _autoSize(t){if(this._get(t,"autoSize")&&!t.inline){var e,i,s,n,o=new Date(2009,11,20),a=this._get(t,"dateFormat");a.match(/[DM]/)&&(e=function e(t){for(i=0,s=0,n=0;t.length>n;n++){t[n].length>i&&(i=t[n].length,s=n);}return s;},o.setMonth(e(this._get(t,a.match(/MM/)?"monthNames":"monthNamesShort"))),o.setDate(e(this._get(t,a.match(/DD/)?"dayNames":"dayNamesShort"))+20-o.getDay())),t.input.attr("size",this._formatDate(t,o).length);}},_inlineDatepicker:function _inlineDatepicker(e,i){var s=t(e);s.hasClass(this.markerClassName)||(s.addClass(this.markerClassName).append(i.dpDiv),t.data(e,"datepicker",i),this._setDate(i,this._getDefaultDate(i),!0),this._updateDatepicker(i),this._updateAlternate(i),i.settings.disabled&&this._disableDatepicker(e),i.dpDiv.css("display","block"));},_dialogDatepicker:function _dialogDatepicker(e,i,s,n,o){var r,h,l,c,u,d=this._dialogInst;return d||(this.uuid+=1,r="dp"+this.uuid,this._dialogInput=t("<input type='text' id='"+r+"' style='position: absolute; top: -100px; width: 0px;'/>"),this._dialogInput.on("keydown",this._doKeyDown),t("body").append(this._dialogInput),d=this._dialogInst=this._newInst(this._dialogInput,!1),d.settings={},t.data(this._dialogInput[0],"datepicker",d)),a(d.settings,n||{}),i=i&&i.constructor===Date?this._formatDate(d,i):i,this._dialogInput.val(i),this._pos=o?o.length?o:[o.pageX,o.pageY]:null,this._pos||(h=document.documentElement.clientWidth,l=document.documentElement.clientHeight,c=document.documentElement.scrollLeft||document.body.scrollLeft,u=document.documentElement.scrollTop||document.body.scrollTop,this._pos=[h/2-100+c,l/2-150+u]),this._dialogInput.css("left",this._pos[0]+20+"px").css("top",this._pos[1]+"px"),d.settings.onSelect=s,this._inDialog=!0,this.dpDiv.addClass(this._dialogClass),this._showDatepicker(this._dialogInput[0]),t.blockUI&&t.blockUI(this.dpDiv),t.data(this._dialogInput[0],"datepicker",d),this;},_destroyDatepicker:function _destroyDatepicker(e){var i,s=t(e),n=t.data(e,"datepicker");s.hasClass(this.markerClassName)&&(i=e.nodeName.toLowerCase(),t.removeData(e,"datepicker"),"input"===i?(n.append.remove(),n.trigger.remove(),s.removeClass(this.markerClassName).off("focus",this._showDatepicker).off("keydown",this._doKeyDown).off("keypress",this._doKeyPress).off("keyup",this._doKeyUp)):("div"===i||"span"===i)&&s.removeClass(this.markerClassName).empty(),m===n&&(m=null));},_enableDatepicker:function _enableDatepicker(e){var i,s,n=t(e),o=t.data(e,"datepicker");n.hasClass(this.markerClassName)&&(i=e.nodeName.toLowerCase(),"input"===i?(e.disabled=!1,o.trigger.filter("button").each(function(){this.disabled=!1;}).end().filter("img").css({opacity:"1.0",cursor:""})):("div"===i||"span"===i)&&(s=n.children("."+this._inlineClass),s.children().removeClass("ui-state-disabled"),s.find("select.ui-datepicker-month, select.ui-datepicker-year").prop("disabled",!1)),this._disabledInputs=t.map(this._disabledInputs,function(t){return t===e?null:t;}));},_disableDatepicker:function _disableDatepicker(e){var i,s,n=t(e),o=t.data(e,"datepicker");n.hasClass(this.markerClassName)&&(i=e.nodeName.toLowerCase(),"input"===i?(e.disabled=!0,o.trigger.filter("button").each(function(){this.disabled=!0;}).end().filter("img").css({opacity:"0.5",cursor:"default"})):("div"===i||"span"===i)&&(s=n.children("."+this._inlineClass),s.children().addClass("ui-state-disabled"),s.find("select.ui-datepicker-month, select.ui-datepicker-year").prop("disabled",!0)),this._disabledInputs=t.map(this._disabledInputs,function(t){return t===e?null:t;}),this._disabledInputs[this._disabledInputs.length]=e);},_isDisabledDatepicker:function _isDisabledDatepicker(t){if(!t)return!1;for(var e=0;this._disabledInputs.length>e;e++){if(this._disabledInputs[e]===t)return!0;}return!1;},_getInst:function _getInst(e){try{return t.data(e,"datepicker");}catch(i){throw"Missing instance data for this datepicker";}},_optionDatepicker:function _optionDatepicker(e,i,s){var n,o,r,h,l=this._getInst(e);return 2===arguments.length&&"string"==typeof i?"defaults"===i?t.extend({},t.datepicker._defaults):l?"all"===i?t.extend({},l.settings):this._get(l,i):null:(n=i||{},"string"==typeof i&&(n={},n[i]=s),l&&(this._curInst===l&&this._hideDatepicker(),o=this._getDateDatepicker(e,!0),r=this._getMinMaxDate(l,"min"),h=this._getMinMaxDate(l,"max"),a(l.settings,n),null!==r&&void 0!==n.dateFormat&&void 0===n.minDate&&(l.settings.minDate=this._formatDate(l,r)),null!==h&&void 0!==n.dateFormat&&void 0===n.maxDate&&(l.settings.maxDate=this._formatDate(l,h)),"disabled"in n&&(n.disabled?this._disableDatepicker(e):this._enableDatepicker(e)),this._attachments(t(e),l),this._autoSize(l),this._setDate(l,o),this._updateAlternate(l),this._updateDatepicker(l)),void 0);},_changeDatepicker:function _changeDatepicker(t,e,i){this._optionDatepicker(t,e,i);},_refreshDatepicker:function _refreshDatepicker(t){var e=this._getInst(t);e&&this._updateDatepicker(e);},_setDateDatepicker:function _setDateDatepicker(t,e){var i=this._getInst(t);i&&(this._setDate(i,e),this._updateDatepicker(i),this._updateAlternate(i));},_getDateDatepicker:function _getDateDatepicker(t,e){var i=this._getInst(t);return i&&!i.inline&&this._setDateFromField(i,e),i?this._getDate(i):null;},_doKeyDown:function _doKeyDown(e){var i,s,n,o=t.datepicker._getInst(e.target),a=!0,r=o.dpDiv.is(".ui-datepicker-rtl");if(o._keyEvent=!0,t.datepicker._datepickerShowing)switch(e.keyCode){case 9:t.datepicker._hideDatepicker(),a=!1;break;case 13:return n=t("td."+t.datepicker._dayOverClass+":not(."+t.datepicker._currentClass+")",o.dpDiv),n[0]&&t.datepicker._selectDay(e.target,o.selectedMonth,o.selectedYear,n[0]),i=t.datepicker._get(o,"onSelect"),i?(s=t.datepicker._formatDate(o),i.apply(o.input?o.input[0]:null,[s,o])):t.datepicker._hideDatepicker(),!1;case 27:t.datepicker._hideDatepicker();break;case 33:t.datepicker._adjustDate(e.target,e.ctrlKey?-t.datepicker._get(o,"stepBigMonths"):-t.datepicker._get(o,"stepMonths"),"M");break;case 34:t.datepicker._adjustDate(e.target,e.ctrlKey?+t.datepicker._get(o,"stepBigMonths"):+t.datepicker._get(o,"stepMonths"),"M");break;case 35:(e.ctrlKey||e.metaKey)&&t.datepicker._clearDate(e.target),a=e.ctrlKey||e.metaKey;break;case 36:(e.ctrlKey||e.metaKey)&&t.datepicker._gotoToday(e.target),a=e.ctrlKey||e.metaKey;break;case 37:(e.ctrlKey||e.metaKey)&&t.datepicker._adjustDate(e.target,r?1:-1,"D"),a=e.ctrlKey||e.metaKey,e.originalEvent.altKey&&t.datepicker._adjustDate(e.target,e.ctrlKey?-t.datepicker._get(o,"stepBigMonths"):-t.datepicker._get(o,"stepMonths"),"M");break;case 38:(e.ctrlKey||e.metaKey)&&t.datepicker._adjustDate(e.target,-7,"D"),a=e.ctrlKey||e.metaKey;break;case 39:(e.ctrlKey||e.metaKey)&&t.datepicker._adjustDate(e.target,r?-1:1,"D"),a=e.ctrlKey||e.metaKey,e.originalEvent.altKey&&t.datepicker._adjustDate(e.target,e.ctrlKey?+t.datepicker._get(o,"stepBigMonths"):+t.datepicker._get(o,"stepMonths"),"M");break;case 40:(e.ctrlKey||e.metaKey)&&t.datepicker._adjustDate(e.target,7,"D"),a=e.ctrlKey||e.metaKey;break;default:a=!1;}else 36===e.keyCode&&e.ctrlKey?t.datepicker._showDatepicker(this):a=!1;a&&(e.preventDefault(),e.stopPropagation());},_doKeyPress:function _doKeyPress(e){var i,s,n=t.datepicker._getInst(e.target);return t.datepicker._get(n,"constrainInput")?(i=t.datepicker._possibleChars(t.datepicker._get(n,"dateFormat")),s=String.fromCharCode(null==e.charCode?e.keyCode:e.charCode),e.ctrlKey||e.metaKey||" ">s||!i||i.indexOf(s)>-1):void 0;},_doKeyUp:function _doKeyUp(e){var i,s=t.datepicker._getInst(e.target);if(s.input.val()!==s.lastVal)try{i=t.datepicker.parseDate(t.datepicker._get(s,"dateFormat"),s.input?s.input.val():null,t.datepicker._getFormatConfig(s)),i&&(t.datepicker._setDateFromField(s),t.datepicker._updateAlternate(s),t.datepicker._updateDatepicker(s));}catch(n){}return!0;},_showDatepicker:function _showDatepicker(e){if(e=e.target||e,"input"!==e.nodeName.toLowerCase()&&(e=t("input",e.parentNode)[0]),!t.datepicker._isDisabledDatepicker(e)&&t.datepicker._lastInput!==e){var s,n,o,r,h,l,c;s=t.datepicker._getInst(e),t.datepicker._curInst&&t.datepicker._curInst!==s&&(t.datepicker._curInst.dpDiv.stop(!0,!0),s&&t.datepicker._datepickerShowing&&t.datepicker._hideDatepicker(t.datepicker._curInst.input[0])),n=t.datepicker._get(s,"beforeShow"),o=n?n.apply(e,[e,s]):{},o!==!1&&(a(s.settings,o),s.lastVal=null,t.datepicker._lastInput=e,t.datepicker._setDateFromField(s),t.datepicker._inDialog&&(e.value=""),t.datepicker._pos||(t.datepicker._pos=t.datepicker._findPos(e),t.datepicker._pos[1]+=e.offsetHeight),r=!1,t(e).parents().each(function(){return r|="fixed"===t(this).css("position"),!r;}),h={left:t.datepicker._pos[0],top:t.datepicker._pos[1]},t.datepicker._pos=null,s.dpDiv.empty(),s.dpDiv.css({position:"absolute",display:"block",top:"-1000px"}),t.datepicker._updateDatepicker(s),h=t.datepicker._checkOffset(s,h,r),s.dpDiv.css({position:t.datepicker._inDialog&&t.blockUI?"static":r?"fixed":"absolute",display:"none",left:h.left+"px",top:h.top+"px"}),s.inline||(l=t.datepicker._get(s,"showAnim"),c=t.datepicker._get(s,"duration"),s.dpDiv.css("z-index",i(t(e))+1),t.datepicker._datepickerShowing=!0,t.effects&&t.effects.effect[l]?s.dpDiv.show(l,t.datepicker._get(s,"showOptions"),c):s.dpDiv[l||"show"](l?c:null),t.datepicker._shouldFocusInput(s)&&s.input.trigger("focus"),t.datepicker._curInst=s));}},_updateDatepicker:function _updateDatepicker(e){this.maxRows=4,m=e,e.dpDiv.empty().append(this._generateHTML(e)),this._attachHandlers(e);var i,s=this._getNumberOfMonths(e),n=s[1],a=17,r=e.dpDiv.find("."+this._dayOverClass+" a");r.length>0&&o.apply(r.get(0)),e.dpDiv.removeClass("ui-datepicker-multi-2 ui-datepicker-multi-3 ui-datepicker-multi-4").width(""),n>1&&e.dpDiv.addClass("ui-datepicker-multi-"+n).css("width",a*n+"em"),e.dpDiv[(1!==s[0]||1!==s[1]?"add":"remove")+"Class"]("ui-datepicker-multi"),e.dpDiv[(this._get(e,"isRTL")?"add":"remove")+"Class"]("ui-datepicker-rtl"),e===t.datepicker._curInst&&t.datepicker._datepickerShowing&&t.datepicker._shouldFocusInput(e)&&e.input.trigger("focus"),e.yearshtml&&(i=e.yearshtml,setTimeout(function(){i===e.yearshtml&&e.yearshtml&&e.dpDiv.find("select.ui-datepicker-year:first").replaceWith(e.yearshtml),i=e.yearshtml=null;},0));},_shouldFocusInput:function _shouldFocusInput(t){return t.input&&t.input.is(":visible")&&!t.input.is(":disabled")&&!t.input.is(":focus");},_checkOffset:function _checkOffset(e,i,s){var n=e.dpDiv.outerWidth(),o=e.dpDiv.outerHeight(),a=e.input?e.input.outerWidth():0,r=e.input?e.input.outerHeight():0,h=document.documentElement.clientWidth+(s?0:t(document).scrollLeft()),l=document.documentElement.clientHeight+(s?0:t(document).scrollTop());return i.left-=this._get(e,"isRTL")?n-a:0,i.left-=s&&i.left===e.input.offset().left?t(document).scrollLeft():0,i.top-=s&&i.top===e.input.offset().top+r?t(document).scrollTop():0,i.left-=Math.min(i.left,i.left+n>h&&h>n?Math.abs(i.left+n-h):0),i.top-=Math.min(i.top,i.top+o>l&&l>o?Math.abs(o+r):0),i;},_findPos:function _findPos(e){for(var i,s=this._getInst(e),n=this._get(s,"isRTL");e&&("hidden"===e.type||1!==e.nodeType||t.expr.filters.hidden(e));){e=e[n?"previousSibling":"nextSibling"];}return i=t(e).offset(),[i.left,i.top];},_hideDatepicker:function _hideDatepicker(e){var i,s,n,o,a=this._curInst;!a||e&&a!==t.data(e,"datepicker")||this._datepickerShowing&&(i=this._get(a,"showAnim"),s=this._get(a,"duration"),n=function n(){t.datepicker._tidyDialog(a);},t.effects&&(t.effects.effect[i]||t.effects[i])?a.dpDiv.hide(i,t.datepicker._get(a,"showOptions"),s,n):a.dpDiv["slideDown"===i?"slideUp":"fadeIn"===i?"fadeOut":"hide"](i?s:null,n),i||n(),this._datepickerShowing=!1,o=this._get(a,"onClose"),o&&o.apply(a.input?a.input[0]:null,[a.input?a.input.val():"",a]),this._lastInput=null,this._inDialog&&(this._dialogInput.css({position:"absolute",left:"0",top:"-100px"}),t.blockUI&&(t.unblockUI(),t("body").append(this.dpDiv))),this._inDialog=!1);},_tidyDialog:function _tidyDialog(t){t.dpDiv.removeClass(this._dialogClass).off(".ui-datepicker-calendar");},_checkExternalClick:function _checkExternalClick(e){if(t.datepicker._curInst){var i=t(e.target),s=t.datepicker._getInst(i[0]);(i[0].id!==t.datepicker._mainDivId&&0===i.parents("#"+t.datepicker._mainDivId).length&&!i.hasClass(t.datepicker.markerClassName)&&!i.closest("."+t.datepicker._triggerClass).length&&t.datepicker._datepickerShowing&&(!t.datepicker._inDialog||!t.blockUI)||i.hasClass(t.datepicker.markerClassName)&&t.datepicker._curInst!==s)&&t.datepicker._hideDatepicker();}},_adjustDate:function _adjustDate(e,i,s){var n=t(e),o=this._getInst(n[0]);this._isDisabledDatepicker(n[0])||(this._adjustInstDate(o,i+("M"===s?this._get(o,"showCurrentAtPos"):0),s),this._updateDatepicker(o));},_gotoToday:function _gotoToday(e){var i,s=t(e),n=this._getInst(s[0]);this._get(n,"gotoCurrent")&&n.currentDay?(n.selectedDay=n.currentDay,n.drawMonth=n.selectedMonth=n.currentMonth,n.drawYear=n.selectedYear=n.currentYear):(i=new Date(),n.selectedDay=i.getDate(),n.drawMonth=n.selectedMonth=i.getMonth(),n.drawYear=n.selectedYear=i.getFullYear()),this._notifyChange(n),this._adjustDate(s);},_selectMonthYear:function _selectMonthYear(e,i,s){var n=t(e),o=this._getInst(n[0]);o["selected"+("M"===s?"Month":"Year")]=o["draw"+("M"===s?"Month":"Year")]=parseInt(i.options[i.selectedIndex].value,10),this._notifyChange(o),this._adjustDate(n);},_selectDay:function _selectDay(e,i,s,n){var o,a=t(e);t(n).hasClass(this._unselectableClass)||this._isDisabledDatepicker(a[0])||(o=this._getInst(a[0]),o.selectedDay=o.currentDay=t("a",n).html(),o.selectedMonth=o.currentMonth=i,o.selectedYear=o.currentYear=s,this._selectDate(e,this._formatDate(o,o.currentDay,o.currentMonth,o.currentYear)));},_clearDate:function _clearDate(e){var i=t(e);this._selectDate(i,"");},_selectDate:function _selectDate(e,i){var s,n=t(e),o=this._getInst(n[0]);i=null!=i?i:this._formatDate(o),o.input&&o.input.val(i),this._updateAlternate(o),s=this._get(o,"onSelect"),s?s.apply(o.input?o.input[0]:null,[i,o]):o.input&&o.input.trigger("change"),o.inline?this._updateDatepicker(o):(this._hideDatepicker(),this._lastInput=o.input[0],"object"!=_typeof(o.input[0])&&o.input.trigger("focus"),this._lastInput=null);},_updateAlternate:function _updateAlternate(e){var i,s,n,o=this._get(e,"altField");o&&(i=this._get(e,"altFormat")||this._get(e,"dateFormat"),s=this._getDate(e),n=this.formatDate(i,s,this._getFormatConfig(e)),t(o).val(n));},noWeekends:function noWeekends(t){var e=t.getDay();return[e>0&&6>e,""];},iso8601Week:function iso8601Week(t){var e,i=new Date(t.getTime());return i.setDate(i.getDate()+4-(i.getDay()||7)),e=i.getTime(),i.setMonth(0),i.setDate(1),Math.floor(Math.round((e-i)/864e5)/7)+1;},parseDate:function parseDate(e,i,s){if(null==e||null==i)throw"Invalid arguments";if(i="object"==_typeof(i)?""+i:i+"",""===i)return null;var n,o,a,r,h=0,l=(s?s.shortYearCutoff:null)||this._defaults.shortYearCutoff,c="string"!=typeof l?l:new Date().getFullYear()%100+parseInt(l,10),u=(s?s.dayNamesShort:null)||this._defaults.dayNamesShort,d=(s?s.dayNames:null)||this._defaults.dayNames,p=(s?s.monthNamesShort:null)||this._defaults.monthNamesShort,f=(s?s.monthNames:null)||this._defaults.monthNames,g=-1,m=-1,_=-1,v=-1,b=!1,y=function y(t){var i=e.length>n+1&&e.charAt(n+1)===t;return i&&n++,i;},w=function w(t){var e=y(t),s="@"===t?14:"!"===t?20:"y"===t&&e?4:"o"===t?3:2,n="y"===t?s:1,o=RegExp("^\\d{"+n+","+s+"}"),a=i.substring(h).match(o);if(!a)throw"Missing number at position "+h;return h+=a[0].length,parseInt(a[0],10);},k=function k(e,s,n){var o=-1,a=t.map(y(e)?n:s,function(t,e){return[[e,t]];}).sort(function(t,e){return-(t[1].length-e[1].length);});if(t.each(a,function(t,e){var s=e[1];return i.substr(h,s.length).toLowerCase()===s.toLowerCase()?(o=e[0],h+=s.length,!1):void 0;}),-1!==o)return o+1;throw"Unknown name at position "+h;},x=function x(){if(i.charAt(h)!==e.charAt(n))throw"Unexpected literal at position "+h;h++;};for(n=0;e.length>n;n++){if(b)"'"!==e.charAt(n)||y("'")?x():b=!1;else switch(e.charAt(n)){case"d":_=w("d");break;case"D":k("D",u,d);break;case"o":v=w("o");break;case"m":m=w("m");break;case"M":m=k("M",p,f);break;case"y":g=w("y");break;case"@":r=new Date(w("@")),g=r.getFullYear(),m=r.getMonth()+1,_=r.getDate();break;case"!":r=new Date((w("!")-this._ticksTo1970)/1e4),g=r.getFullYear(),m=r.getMonth()+1,_=r.getDate();break;case"'":y("'")?x():b=!0;break;default:x();}}if(i.length>h&&(a=i.substr(h),!/^\s+/.test(a)))throw"Extra/unparsed characters found in date: "+a;if(-1===g?g=new Date().getFullYear():100>g&&(g+=new Date().getFullYear()-new Date().getFullYear()%100+(c>=g?0:-100)),v>-1)for(m=1,_=v;;){if(o=this._getDaysInMonth(g,m-1),o>=_)break;m++,_-=o;}if(r=this._daylightSavingAdjust(new Date(g,m-1,_)),r.getFullYear()!==g||r.getMonth()+1!==m||r.getDate()!==_)throw"Invalid date";return r;},ATOM:"yy-mm-dd",COOKIE:"D, dd M yy",ISO_8601:"yy-mm-dd",RFC_822:"D, d M y",RFC_850:"DD, dd-M-y",RFC_1036:"D, d M y",RFC_1123:"D, d M yy",RFC_2822:"D, d M yy",RSS:"D, d M y",TICKS:"!",TIMESTAMP:"@",W3C:"yy-mm-dd",_ticksTo1970:1e7*60*60*24*(718685+Math.floor(492.5)-Math.floor(19.7)+Math.floor(4.925)),formatDate:function formatDate(t,e,i){if(!e)return"";var s,n=(i?i.dayNamesShort:null)||this._defaults.dayNamesShort,o=(i?i.dayNames:null)||this._defaults.dayNames,a=(i?i.monthNamesShort:null)||this._defaults.monthNamesShort,r=(i?i.monthNames:null)||this._defaults.monthNames,h=function h(e){var i=t.length>s+1&&t.charAt(s+1)===e;return i&&s++,i;},l=function l(t,e,i){var s=""+e;if(h(t))for(;i>s.length;){s="0"+s;}return s;},c=function c(t,e,i,s){return h(t)?s[e]:i[e];},u="",d=!1;if(e)for(s=0;t.length>s;s++){if(d)"'"!==t.charAt(s)||h("'")?u+=t.charAt(s):d=!1;else switch(t.charAt(s)){case"d":u+=l("d",e.getDate(),2);break;case"D":u+=c("D",e.getDay(),n,o);break;case"o":u+=l("o",Math.round((new Date(e.getFullYear(),e.getMonth(),e.getDate()).getTime()-new Date(e.getFullYear(),0,0).getTime())/864e5),3);break;case"m":u+=l("m",e.getMonth()+1,2);break;case"M":u+=c("M",e.getMonth(),a,r);break;case"y":u+=h("y")?e.getFullYear():(10>e.getFullYear()%100?"0":"")+e.getFullYear()%100;break;case"@":u+=e.getTime();break;case"!":u+=1e4*e.getTime()+this._ticksTo1970;break;case"'":h("'")?u+="'":d=!0;break;default:u+=t.charAt(s);}}return u;},_possibleChars:function _possibleChars(t){var e,i="",s=!1,n=function n(i){var s=t.length>e+1&&t.charAt(e+1)===i;return s&&e++,s;};for(e=0;t.length>e;e++){if(s)"'"!==t.charAt(e)||n("'")?i+=t.charAt(e):s=!1;else switch(t.charAt(e)){case"d":case"m":case"y":case"@":i+="0123456789";break;case"D":case"M":return null;case"'":n("'")?i+="'":s=!0;break;default:i+=t.charAt(e);}}return i;},_get:function _get(t,e){return void 0!==t.settings[e]?t.settings[e]:this._defaults[e];},_setDateFromField:function _setDateFromField(t,e){if(t.input.val()!==t.lastVal){var i=this._get(t,"dateFormat"),s=t.lastVal=t.input?t.input.val():null,n=this._getDefaultDate(t),o=n,a=this._getFormatConfig(t);try{o=this.parseDate(i,s,a)||n;}catch(r){s=e?"":s;}t.selectedDay=o.getDate(),t.drawMonth=t.selectedMonth=o.getMonth(),t.drawYear=t.selectedYear=o.getFullYear(),t.currentDay=s?o.getDate():0,t.currentMonth=s?o.getMonth():0,t.currentYear=s?o.getFullYear():0,this._adjustInstDate(t);}},_getDefaultDate:function _getDefaultDate(t){return this._restrictMinMax(t,this._determineDate(t,this._get(t,"defaultDate"),new Date()));},_determineDate:function _determineDate(e,i,s){var n=function n(t){var e=new Date();return e.setDate(e.getDate()+t),e;},o=function o(i){try{return t.datepicker.parseDate(t.datepicker._get(e,"dateFormat"),i,t.datepicker._getFormatConfig(e));}catch(s){}for(var n=(i.toLowerCase().match(/^c/)?t.datepicker._getDate(e):null)||new Date(),o=n.getFullYear(),a=n.getMonth(),r=n.getDate(),h=/([+\-]?[0-9]+)\s*(d|D|w|W|m|M|y|Y)?/g,l=h.exec(i);l;){switch(l[2]||"d"){case"d":case"D":r+=parseInt(l[1],10);break;case"w":case"W":r+=7*parseInt(l[1],10);break;case"m":case"M":a+=parseInt(l[1],10),r=Math.min(r,t.datepicker._getDaysInMonth(o,a));break;case"y":case"Y":o+=parseInt(l[1],10),r=Math.min(r,t.datepicker._getDaysInMonth(o,a));}l=h.exec(i);}return new Date(o,a,r);},a=null==i||""===i?s:"string"==typeof i?o(i):"number"==typeof i?isNaN(i)?s:n(i):new Date(i.getTime());return a=a&&"Invalid Date"==""+a?s:a,a&&(a.setHours(0),a.setMinutes(0),a.setSeconds(0),a.setMilliseconds(0)),this._daylightSavingAdjust(a);},_daylightSavingAdjust:function _daylightSavingAdjust(t){return t?(t.setHours(t.getHours()>12?t.getHours()+2:0),t):null;},_setDate:function _setDate(t,e,i){var s=!e,n=t.selectedMonth,o=t.selectedYear,a=this._restrictMinMax(t,this._determineDate(t,e,new Date()));t.selectedDay=t.currentDay=a.getDate(),t.drawMonth=t.selectedMonth=t.currentMonth=a.getMonth(),t.drawYear=t.selectedYear=t.currentYear=a.getFullYear(),n===t.selectedMonth&&o===t.selectedYear||i||this._notifyChange(t),this._adjustInstDate(t),t.input&&t.input.val(s?"":this._formatDate(t));},_getDate:function _getDate(t){var e=!t.currentYear||t.input&&""===t.input.val()?null:this._daylightSavingAdjust(new Date(t.currentYear,t.currentMonth,t.currentDay));return e;},_attachHandlers:function _attachHandlers(e){var i=this._get(e,"stepMonths"),s="#"+e.id.replace(/\\\\/g,"\\");e.dpDiv.find("[data-handler]").map(function(){var e={prev:function prev(){t.datepicker._adjustDate(s,-i,"M");},next:function next(){t.datepicker._adjustDate(s,+i,"M");},hide:function hide(){t.datepicker._hideDatepicker();},today:function today(){t.datepicker._gotoToday(s);},selectDay:function selectDay(){return t.datepicker._selectDay(s,+this.getAttribute("data-month"),+this.getAttribute("data-year"),this),!1;},selectMonth:function selectMonth(){return t.datepicker._selectMonthYear(s,this,"M"),!1;},selectYear:function selectYear(){return t.datepicker._selectMonthYear(s,this,"Y"),!1;}};t(this).on(this.getAttribute("data-event"),e[this.getAttribute("data-handler")]);});},_generateHTML:function _generateHTML(t){var e,i,s,n,o,a,r,h,l,c,u,d,p,f,g,m,_,v,b,y,w,k,x,C,D,I,T,P,M,S,H,z,O,A,N,W,E,F,L,R=new Date(),B=this._daylightSavingAdjust(new Date(R.getFullYear(),R.getMonth(),R.getDate())),Y=this._get(t,"isRTL"),j=this._get(t,"showButtonPanel"),q=this._get(t,"hideIfNoPrevNext"),K=this._get(t,"navigationAsDateFormat"),U=this._getNumberOfMonths(t),V=this._get(t,"showCurrentAtPos"),$=this._get(t,"stepMonths"),X=1!==U[0]||1!==U[1],G=this._daylightSavingAdjust(t.currentDay?new Date(t.currentYear,t.currentMonth,t.currentDay):new Date(9999,9,9)),Q=this._getMinMaxDate(t,"min"),J=this._getMinMaxDate(t,"max"),Z=t.drawMonth-V,te=t.drawYear;if(0>Z&&(Z+=12,te--),J)for(e=this._daylightSavingAdjust(new Date(J.getFullYear(),J.getMonth()-U[0]*U[1]+1,J.getDate())),e=Q&&Q>e?Q:e;this._daylightSavingAdjust(new Date(te,Z,1))>e;){Z--,0>Z&&(Z=11,te--);}for(t.drawMonth=Z,t.drawYear=te,i=this._get(t,"prevText"),i=K?this.formatDate(i,this._daylightSavingAdjust(new Date(te,Z-$,1)),this._getFormatConfig(t)):i,s=this._canAdjustMonth(t,-1,te,Z)?"<a class='ui-datepicker-prev ui-corner-all' data-handler='prev' data-event='click' title='"+i+"'><span class='ui-icon ui-icon-circle-triangle-"+(Y?"e":"w")+"'>"+i+"</span></a>":q?"":"<a class='ui-datepicker-prev ui-corner-all ui-state-disabled' title='"+i+"'><span class='ui-icon ui-icon-circle-triangle-"+(Y?"e":"w")+"'>"+i+"</span></a>",n=this._get(t,"nextText"),n=K?this.formatDate(n,this._daylightSavingAdjust(new Date(te,Z+$,1)),this._getFormatConfig(t)):n,o=this._canAdjustMonth(t,1,te,Z)?"<a class='ui-datepicker-next ui-corner-all' data-handler='next' data-event='click' title='"+n+"'><span class='ui-icon ui-icon-circle-triangle-"+(Y?"w":"e")+"'>"+n+"</span></a>":q?"":"<a class='ui-datepicker-next ui-corner-all ui-state-disabled' title='"+n+"'><span class='ui-icon ui-icon-circle-triangle-"+(Y?"w":"e")+"'>"+n+"</span></a>",a=this._get(t,"currentText"),r=this._get(t,"gotoCurrent")&&t.currentDay?G:B,a=K?this.formatDate(a,r,this._getFormatConfig(t)):a,h=t.inline?"":"<button type='button' class='ui-datepicker-close ui-state-default ui-priority-primary ui-corner-all' data-handler='hide' data-event='click'>"+this._get(t,"closeText")+"</button>",l=j?"<div class='ui-datepicker-buttonpane ui-widget-content'>"+(Y?h:"")+(this._isInRange(t,r)?"<button type='button' class='ui-datepicker-current ui-state-default ui-priority-secondary ui-corner-all' data-handler='today' data-event='click'>"+a+"</button>":"")+(Y?"":h)+"</div>":"",c=parseInt(this._get(t,"firstDay"),10),c=isNaN(c)?0:c,u=this._get(t,"showWeek"),d=this._get(t,"dayNames"),p=this._get(t,"dayNamesMin"),f=this._get(t,"monthNames"),g=this._get(t,"monthNamesShort"),m=this._get(t,"beforeShowDay"),_=this._get(t,"showOtherMonths"),v=this._get(t,"selectOtherMonths"),b=this._getDefaultDate(t),y="",k=0;U[0]>k;k++){for(x="",this.maxRows=4,C=0;U[1]>C;C++){if(D=this._daylightSavingAdjust(new Date(te,Z,t.selectedDay)),I=" ui-corner-all",T="",X){if(T+="<div class='ui-datepicker-group",U[1]>1)switch(C){case 0:T+=" ui-datepicker-group-first",I=" ui-corner-"+(Y?"right":"left");break;case U[1]-1:T+=" ui-datepicker-group-last",I=" ui-corner-"+(Y?"left":"right");break;default:T+=" ui-datepicker-group-middle",I="";}T+="'>";}for(T+="<div class='ui-datepicker-header ui-widget-header ui-helper-clearfix"+I+"'>"+(/all|left/.test(I)&&0===k?Y?o:s:"")+(/all|right/.test(I)&&0===k?Y?s:o:"")+this._generateMonthYearHeader(t,Z,te,Q,J,k>0||C>0,f,g)+"</div><table class='ui-datepicker-calendar'><thead>"+"<tr>",P=u?"<th class='ui-datepicker-week-col'>"+this._get(t,"weekHeader")+"</th>":"",w=0;7>w;w++){M=(w+c)%7,P+="<th scope='col'"+((w+c+6)%7>=5?" class='ui-datepicker-week-end'":"")+">"+"<span title='"+d[M]+"'>"+p[M]+"</span></th>";}for(T+=P+"</tr></thead><tbody>",S=this._getDaysInMonth(te,Z),te===t.selectedYear&&Z===t.selectedMonth&&(t.selectedDay=Math.min(t.selectedDay,S)),H=(this._getFirstDayOfMonth(te,Z)-c+7)%7,z=Math.ceil((H+S)/7),O=X?this.maxRows>z?this.maxRows:z:z,this.maxRows=O,A=this._daylightSavingAdjust(new Date(te,Z,1-H)),N=0;O>N;N++){for(T+="<tr>",W=u?"<td class='ui-datepicker-week-col'>"+this._get(t,"calculateWeek")(A)+"</td>":"",w=0;7>w;w++){E=m?m.apply(t.input?t.input[0]:null,[A]):[!0,""],F=A.getMonth()!==Z,L=F&&!v||!E[0]||Q&&Q>A||J&&A>J,W+="<td class='"+((w+c+6)%7>=5?" ui-datepicker-week-end":"")+(F?" ui-datepicker-other-month":"")+(A.getTime()===D.getTime()&&Z===t.selectedMonth&&t._keyEvent||b.getTime()===A.getTime()&&b.getTime()===D.getTime()?" "+this._dayOverClass:"")+(L?" "+this._unselectableClass+" ui-state-disabled":"")+(F&&!_?"":" "+E[1]+(A.getTime()===G.getTime()?" "+this._currentClass:"")+(A.getTime()===B.getTime()?" ui-datepicker-today":""))+"'"+(F&&!_||!E[2]?"":" title='"+E[2].replace(/'/g,"&#39;")+"'")+(L?"":" data-handler='selectDay' data-event='click' data-month='"+A.getMonth()+"' data-year='"+A.getFullYear()+"'")+">"+(F&&!_?"&#xa0;":L?"<span class='ui-state-default'>"+A.getDate()+"</span>":"<a class='ui-state-default"+(A.getTime()===B.getTime()?" ui-state-highlight":"")+(A.getTime()===G.getTime()?" ui-state-active":"")+(F?" ui-priority-secondary":"")+"' href='#'>"+A.getDate()+"</a>")+"</td>",A.setDate(A.getDate()+1),A=this._daylightSavingAdjust(A);}T+=W+"</tr>";}Z++,Z>11&&(Z=0,te++),T+="</tbody></table>"+(X?"</div>"+(U[0]>0&&C===U[1]-1?"<div class='ui-datepicker-row-break'></div>":""):""),x+=T;}y+=x;}return y+=l,t._keyEvent=!1,y;},_generateMonthYearHeader:function _generateMonthYearHeader(t,e,i,s,n,o,a,r){var h,l,c,u,d,p,f,g,m=this._get(t,"changeMonth"),_=this._get(t,"changeYear"),v=this._get(t,"showMonthAfterYear"),b="<div class='ui-datepicker-title'>",y="";if(o||!m)y+="<span class='ui-datepicker-month'>"+a[e]+"</span>";else{for(h=s&&s.getFullYear()===i,l=n&&n.getFullYear()===i,y+="<select class='ui-datepicker-month' data-handler='selectMonth' data-event='change'>",c=0;12>c;c++){(!h||c>=s.getMonth())&&(!l||n.getMonth()>=c)&&(y+="<option value='"+c+"'"+(c===e?" selected='selected'":"")+">"+r[c]+"</option>");}y+="</select>";}if(v||(b+=y+(!o&&m&&_?"":"&#xa0;")),!t.yearshtml)if(t.yearshtml="",o||!_)b+="<span class='ui-datepicker-year'>"+i+"</span>";else{for(u=this._get(t,"yearRange").split(":"),d=new Date().getFullYear(),p=function p(t){var e=t.match(/c[+\-].*/)?i+parseInt(t.substring(1),10):t.match(/[+\-].*/)?d+parseInt(t,10):parseInt(t,10);return isNaN(e)?d:e;},f=p(u[0]),g=Math.max(f,p(u[1]||"")),f=s?Math.max(f,s.getFullYear()):f,g=n?Math.min(g,n.getFullYear()):g,t.yearshtml+="<select class='ui-datepicker-year' data-handler='selectYear' data-event='change'>";g>=f;f++){t.yearshtml+="<option value='"+f+"'"+(f===i?" selected='selected'":"")+">"+f+"</option>";}t.yearshtml+="</select>",b+=t.yearshtml,t.yearshtml=null;}return b+=this._get(t,"yearSuffix"),v&&(b+=(!o&&m&&_?"":"&#xa0;")+y),b+="</div>";},_adjustInstDate:function _adjustInstDate(t,e,i){var s=t.selectedYear+("Y"===i?e:0),n=t.selectedMonth+("M"===i?e:0),o=Math.min(t.selectedDay,this._getDaysInMonth(s,n))+("D"===i?e:0),a=this._restrictMinMax(t,this._daylightSavingAdjust(new Date(s,n,o)));t.selectedDay=a.getDate(),t.drawMonth=t.selectedMonth=a.getMonth(),t.drawYear=t.selectedYear=a.getFullYear(),("M"===i||"Y"===i)&&this._notifyChange(t);},_restrictMinMax:function _restrictMinMax(t,e){var i=this._getMinMaxDate(t,"min"),s=this._getMinMaxDate(t,"max"),n=i&&i>e?i:e;return s&&n>s?s:n;},_notifyChange:function _notifyChange(t){var e=this._get(t,"onChangeMonthYear");e&&e.apply(t.input?t.input[0]:null,[t.selectedYear,t.selectedMonth+1,t]);},_getNumberOfMonths:function _getNumberOfMonths(t){var e=this._get(t,"numberOfMonths");return null==e?[1,1]:"number"==typeof e?[1,e]:e;},_getMinMaxDate:function _getMinMaxDate(t,e){return this._determineDate(t,this._get(t,e+"Date"),null);},_getDaysInMonth:function _getDaysInMonth(t,e){return 32-this._daylightSavingAdjust(new Date(t,e,32)).getDate();},_getFirstDayOfMonth:function _getFirstDayOfMonth(t,e){return new Date(t,e,1).getDay();},_canAdjustMonth:function _canAdjustMonth(t,e,i,s){var n=this._getNumberOfMonths(t),o=this._daylightSavingAdjust(new Date(i,s+(0>e?e:n[0]*n[1]),1));return 0>e&&o.setDate(this._getDaysInMonth(o.getFullYear(),o.getMonth())),this._isInRange(t,o);},_isInRange:function _isInRange(t,e){var i,s,n=this._getMinMaxDate(t,"min"),o=this._getMinMaxDate(t,"max"),a=null,r=null,h=this._get(t,"yearRange");return h&&(i=h.split(":"),s=new Date().getFullYear(),a=parseInt(i[0],10),r=parseInt(i[1],10),i[0].match(/[+\-].*/)&&(a+=s),i[1].match(/[+\-].*/)&&(r+=s)),(!n||e.getTime()>=n.getTime())&&(!o||e.getTime()<=o.getTime())&&(!a||e.getFullYear()>=a)&&(!r||r>=e.getFullYear());},_getFormatConfig:function _getFormatConfig(t){var e=this._get(t,"shortYearCutoff");return e="string"!=typeof e?e:new Date().getFullYear()%100+parseInt(e,10),{shortYearCutoff:e,dayNamesShort:this._get(t,"dayNamesShort"),dayNames:this._get(t,"dayNames"),monthNamesShort:this._get(t,"monthNamesShort"),monthNames:this._get(t,"monthNames")};},_formatDate:function _formatDate(t,e,i,s){e||(t.currentDay=t.selectedDay,t.currentMonth=t.selectedMonth,t.currentYear=t.selectedYear);var n=e?"object"==_typeof(e)?e:this._daylightSavingAdjust(new Date(s,i,e)):this._daylightSavingAdjust(new Date(t.currentYear,t.currentMonth,t.currentDay));return this.formatDate(this._get(t,"dateFormat"),n,this._getFormatConfig(t));}}),t.fn.datepicker=function(e){if(!this.length)return this;t.datepicker.initialized||(t(document).on("mousedown",t.datepicker._checkExternalClick),t.datepicker.initialized=!0),0===t("#"+t.datepicker._mainDivId).length&&t("body").append(t.datepicker.dpDiv);var i=Array.prototype.slice.call(arguments,1);return"string"!=typeof e||"isDisabled"!==e&&"getDate"!==e&&"widget"!==e?"option"===e&&2===arguments.length&&"string"==typeof arguments[1]?t.datepicker["_"+e+"Datepicker"].apply(t.datepicker,[this[0]].concat(i)):this.each(function(){"string"==typeof e?t.datepicker["_"+e+"Datepicker"].apply(t.datepicker,[this].concat(i)):t.datepicker._attachDatepicker(this,e);}):t.datepicker["_"+e+"Datepicker"].apply(t.datepicker,[this[0]].concat(i));},t.datepicker=new s(),t.datepicker.initialized=!1,t.datepicker.uuid=new Date().getTime(),t.datepicker.version="1.12.1",t.datepicker,t.ui.ie=!!/msie [\w.]+/.exec(navigator.userAgent.toLowerCase());var _=!1;t(document).on("mouseup",function(){_=!1;}),t.widget("ui.mouse",{version:"1.12.1",options:{cancel:"input, textarea, button, select, option",distance:1,delay:0},_mouseInit:function _mouseInit(){var e=this;this.element.on("mousedown."+this.widgetName,function(t){return e._mouseDown(t);}).on("click."+this.widgetName,function(i){return!0===t.data(i.target,e.widgetName+".preventClickEvent")?(t.removeData(i.target,e.widgetName+".preventClickEvent"),i.stopImmediatePropagation(),!1):void 0;}),this.started=!1;},_mouseDestroy:function _mouseDestroy(){this.element.off("."+this.widgetName),this._mouseMoveDelegate&&this.document.off("mousemove."+this.widgetName,this._mouseMoveDelegate).off("mouseup."+this.widgetName,this._mouseUpDelegate);},_mouseDown:function _mouseDown(e){if(!_){this._mouseMoved=!1,this._mouseStarted&&this._mouseUp(e),this._mouseDownEvent=e;var i=this,s=1===e.which,n="string"==typeof this.options.cancel&&e.target.nodeName?t(e.target).closest(this.options.cancel).length:!1;return s&&!n&&this._mouseCapture(e)?(this.mouseDelayMet=!this.options.delay,this.mouseDelayMet||(this._mouseDelayTimer=setTimeout(function(){i.mouseDelayMet=!0;},this.options.delay)),this._mouseDistanceMet(e)&&this._mouseDelayMet(e)&&(this._mouseStarted=this._mouseStart(e)!==!1,!this._mouseStarted)?(e.preventDefault(),!0):(!0===t.data(e.target,this.widgetName+".preventClickEvent")&&t.removeData(e.target,this.widgetName+".preventClickEvent"),this._mouseMoveDelegate=function(t){return i._mouseMove(t);},this._mouseUpDelegate=function(t){return i._mouseUp(t);},this.document.on("mousemove."+this.widgetName,this._mouseMoveDelegate).on("mouseup."+this.widgetName,this._mouseUpDelegate),e.preventDefault(),_=!0,!0)):!0;}},_mouseMove:function _mouseMove(e){if(this._mouseMoved){if(t.ui.ie&&(!document.documentMode||9>document.documentMode)&&!e.button)return this._mouseUp(e);if(!e.which)if(e.originalEvent.altKey||e.originalEvent.ctrlKey||e.originalEvent.metaKey||e.originalEvent.shiftKey)this.ignoreMissingWhich=!0;else if(!this.ignoreMissingWhich)return this._mouseUp(e);}return(e.which||e.button)&&(this._mouseMoved=!0),this._mouseStarted?(this._mouseDrag(e),e.preventDefault()):(this._mouseDistanceMet(e)&&this._mouseDelayMet(e)&&(this._mouseStarted=this._mouseStart(this._mouseDownEvent,e)!==!1,this._mouseStarted?this._mouseDrag(e):this._mouseUp(e)),!this._mouseStarted);},_mouseUp:function _mouseUp(e){this.document.off("mousemove."+this.widgetName,this._mouseMoveDelegate).off("mouseup."+this.widgetName,this._mouseUpDelegate),this._mouseStarted&&(this._mouseStarted=!1,e.target===this._mouseDownEvent.target&&t.data(e.target,this.widgetName+".preventClickEvent",!0),this._mouseStop(e)),this._mouseDelayTimer&&(clearTimeout(this._mouseDelayTimer),delete this._mouseDelayTimer),this.ignoreMissingWhich=!1,_=!1,e.preventDefault();},_mouseDistanceMet:function _mouseDistanceMet(t){return Math.max(Math.abs(this._mouseDownEvent.pageX-t.pageX),Math.abs(this._mouseDownEvent.pageY-t.pageY))>=this.options.distance;},_mouseDelayMet:function _mouseDelayMet(){return this.mouseDelayMet;},_mouseStart:function _mouseStart(){},_mouseDrag:function _mouseDrag(){},_mouseStop:function _mouseStop(){},_mouseCapture:function _mouseCapture(){return!0;}}),t.ui.plugin={add:function add(e,i,s){var n,o=t.ui[e].prototype;for(n in s){o.plugins[n]=o.plugins[n]||[],o.plugins[n].push([i,s[n]]);}},call:function call(t,e,i,s){var n,o=t.plugins[e];if(o&&(s||t.element[0].parentNode&&11!==t.element[0].parentNode.nodeType))for(n=0;o.length>n;n++){t.options[o[n][0]]&&o[n][1].apply(t.element,i);}}},t.ui.safeBlur=function(e){e&&"body"!==e.nodeName.toLowerCase()&&t(e).trigger("blur");},t.widget("ui.draggable",t.ui.mouse,{version:"1.12.1",widgetEventPrefix:"drag",options:{addClasses:!0,appendTo:"parent",axis:!1,connectToSortable:!1,containment:!1,cursor:"auto",cursorAt:!1,grid:!1,handle:!1,helper:"original",iframeFix:!1,opacity:!1,refreshPositions:!1,revert:!1,revertDuration:500,scope:"default",scroll:!0,scrollSensitivity:20,scrollSpeed:20,snap:!1,snapMode:"both",snapTolerance:20,stack:!1,zIndex:!1,drag:null,start:null,stop:null},_create:function _create(){"original"===this.options.helper&&this._setPositionRelative(),this.options.addClasses&&this._addClass("ui-draggable"),this._setHandleClassName(),this._mouseInit();},_setOption:function _setOption(t,e){this._super(t,e),"handle"===t&&(this._removeHandleClassName(),this._setHandleClassName());},_destroy:function _destroy(){return(this.helper||this.element).is(".ui-draggable-dragging")?(this.destroyOnClear=!0,void 0):(this._removeHandleClassName(),this._mouseDestroy(),void 0);},_mouseCapture:function _mouseCapture(e){var i=this.options;return this.helper||i.disabled||t(e.target).closest(".ui-resizable-handle").length>0?!1:(this.handle=this._getHandle(e),this.handle?(this._blurActiveElement(e),this._blockFrames(i.iframeFix===!0?"iframe":i.iframeFix),!0):!1);},_blockFrames:function _blockFrames(e){this.iframeBlocks=this.document.find(e).map(function(){var e=t(this);return t("<div>").css("position","absolute").appendTo(e.parent()).outerWidth(e.outerWidth()).outerHeight(e.outerHeight()).offset(e.offset())[0];});},_unblockFrames:function _unblockFrames(){this.iframeBlocks&&(this.iframeBlocks.remove(),delete this.iframeBlocks);},_blurActiveElement:function _blurActiveElement(e){var i=t.ui.safeActiveElement(this.document[0]),s=t(e.target);s.closest(i).length||t.ui.safeBlur(i);},_mouseStart:function _mouseStart(e){var i=this.options;return this.helper=this._createHelper(e),this._addClass(this.helper,"ui-draggable-dragging"),this._cacheHelperProportions(),t.ui.ddmanager&&(t.ui.ddmanager.current=this),this._cacheMargins(),this.cssPosition=this.helper.css("position"),this.scrollParent=this.helper.scrollParent(!0),this.offsetParent=this.helper.offsetParent(),this.hasFixedAncestor=this.helper.parents().filter(function(){return"fixed"===t(this).css("position");}).length>0,this.positionAbs=this.element.offset(),this._refreshOffsets(e),this.originalPosition=this.position=this._generatePosition(e,!1),this.originalPageX=e.pageX,this.originalPageY=e.pageY,i.cursorAt&&this._adjustOffsetFromHelper(i.cursorAt),this._setContainment(),this._trigger("start",e)===!1?(this._clear(),!1):(this._cacheHelperProportions(),t.ui.ddmanager&&!i.dropBehaviour&&t.ui.ddmanager.prepareOffsets(this,e),this._mouseDrag(e,!0),t.ui.ddmanager&&t.ui.ddmanager.dragStart(this,e),!0);},_refreshOffsets:function _refreshOffsets(t){this.offset={top:this.positionAbs.top-this.margins.top,left:this.positionAbs.left-this.margins.left,scroll:!1,parent:this._getParentOffset(),relative:this._getRelativeOffset()},this.offset.click={left:t.pageX-this.offset.left,top:t.pageY-this.offset.top};},_mouseDrag:function _mouseDrag(e,i){if(this.hasFixedAncestor&&(this.offset.parent=this._getParentOffset()),this.position=this._generatePosition(e,!0),this.positionAbs=this._convertPositionTo("absolute"),!i){var s=this._uiHash();if(this._trigger("drag",e,s)===!1)return this._mouseUp(new t.Event("mouseup",e)),!1;this.position=s.position;}return this.helper[0].style.left=this.position.left+"px",this.helper[0].style.top=this.position.top+"px",t.ui.ddmanager&&t.ui.ddmanager.drag(this,e),!1;},_mouseStop:function _mouseStop(e){var i=this,s=!1;return t.ui.ddmanager&&!this.options.dropBehaviour&&(s=t.ui.ddmanager.drop(this,e)),this.dropped&&(s=this.dropped,this.dropped=!1),"invalid"===this.options.revert&&!s||"valid"===this.options.revert&&s||this.options.revert===!0||t.isFunction(this.options.revert)&&this.options.revert.call(this.element,s)?t(this.helper).animate(this.originalPosition,parseInt(this.options.revertDuration,10),function(){i._trigger("stop",e)!==!1&&i._clear();}):this._trigger("stop",e)!==!1&&this._clear(),!1;},_mouseUp:function _mouseUp(e){return this._unblockFrames(),t.ui.ddmanager&&t.ui.ddmanager.dragStop(this,e),this.handleElement.is(e.target)&&this.element.trigger("focus"),t.ui.mouse.prototype._mouseUp.call(this,e);},cancel:function cancel(){return this.helper.is(".ui-draggable-dragging")?this._mouseUp(new t.Event("mouseup",{target:this.element[0]})):this._clear(),this;},_getHandle:function _getHandle(e){return this.options.handle?!!t(e.target).closest(this.element.find(this.options.handle)).length:!0;},_setHandleClassName:function _setHandleClassName(){this.handleElement=this.options.handle?this.element.find(this.options.handle):this.element,this._addClass(this.handleElement,"ui-draggable-handle");},_removeHandleClassName:function _removeHandleClassName(){this._removeClass(this.handleElement,"ui-draggable-handle");},_createHelper:function _createHelper(e){var i=this.options,s=t.isFunction(i.helper),n=s?t(i.helper.apply(this.element[0],[e])):"clone"===i.helper?this.element.clone().removeAttr("id"):this.element;return n.parents("body").length||n.appendTo("parent"===i.appendTo?this.element[0].parentNode:i.appendTo),s&&n[0]===this.element[0]&&this._setPositionRelative(),n[0]===this.element[0]||/(fixed|absolute)/.test(n.css("position"))||n.css("position","absolute"),n;},_setPositionRelative:function _setPositionRelative(){/^(?:r|a|f)/.test(this.element.css("position"))||(this.element[0].style.position="relative");},_adjustOffsetFromHelper:function _adjustOffsetFromHelper(e){"string"==typeof e&&(e=e.split(" ")),t.isArray(e)&&(e={left:+e[0],top:+e[1]||0}),"left"in e&&(this.offset.click.left=e.left+this.margins.left),"right"in e&&(this.offset.click.left=this.helperProportions.width-e.right+this.margins.left),"top"in e&&(this.offset.click.top=e.top+this.margins.top),"bottom"in e&&(this.offset.click.top=this.helperProportions.height-e.bottom+this.margins.top);},_isRootNode:function _isRootNode(t){return /(html|body)/i.test(t.tagName)||t===this.document[0];},_getParentOffset:function _getParentOffset(){var e=this.offsetParent.offset(),i=this.document[0];return"absolute"===this.cssPosition&&this.scrollParent[0]!==i&&t.contains(this.scrollParent[0],this.offsetParent[0])&&(e.left+=this.scrollParent.scrollLeft(),e.top+=this.scrollParent.scrollTop()),this._isRootNode(this.offsetParent[0])&&(e={top:0,left:0}),{top:e.top+(parseInt(this.offsetParent.css("borderTopWidth"),10)||0),left:e.left+(parseInt(this.offsetParent.css("borderLeftWidth"),10)||0)};},_getRelativeOffset:function _getRelativeOffset(){if("relative"!==this.cssPosition)return{top:0,left:0};var t=this.element.position(),e=this._isRootNode(this.scrollParent[0]);return{top:t.top-(parseInt(this.helper.css("top"),10)||0)+(e?0:this.scrollParent.scrollTop()),left:t.left-(parseInt(this.helper.css("left"),10)||0)+(e?0:this.scrollParent.scrollLeft())};},_cacheMargins:function _cacheMargins(){this.margins={left:parseInt(this.element.css("marginLeft"),10)||0,top:parseInt(this.element.css("marginTop"),10)||0,right:parseInt(this.element.css("marginRight"),10)||0,bottom:parseInt(this.element.css("marginBottom"),10)||0};},_cacheHelperProportions:function _cacheHelperProportions(){this.helperProportions={width:this.helper.outerWidth(),height:this.helper.outerHeight()};},_setContainment:function _setContainment(){var e,i,s,n=this.options,o=this.document[0];return this.relativeContainer=null,n.containment?"window"===n.containment?(this.containment=[t(window).scrollLeft()-this.offset.relative.left-this.offset.parent.left,t(window).scrollTop()-this.offset.relative.top-this.offset.parent.top,t(window).scrollLeft()+t(window).width()-this.helperProportions.width-this.margins.left,t(window).scrollTop()+(t(window).height()||o.body.parentNode.scrollHeight)-this.helperProportions.height-this.margins.top],void 0):"document"===n.containment?(this.containment=[0,0,t(o).width()-this.helperProportions.width-this.margins.left,(t(o).height()||o.body.parentNode.scrollHeight)-this.helperProportions.height-this.margins.top],void 0):n.containment.constructor===Array?(this.containment=n.containment,void 0):("parent"===n.containment&&(n.containment=this.helper[0].parentNode),i=t(n.containment),s=i[0],s&&(e=/(scroll|auto)/.test(i.css("overflow")),this.containment=[(parseInt(i.css("borderLeftWidth"),10)||0)+(parseInt(i.css("paddingLeft"),10)||0),(parseInt(i.css("borderTopWidth"),10)||0)+(parseInt(i.css("paddingTop"),10)||0),(e?Math.max(s.scrollWidth,s.offsetWidth):s.offsetWidth)-(parseInt(i.css("borderRightWidth"),10)||0)-(parseInt(i.css("paddingRight"),10)||0)-this.helperProportions.width-this.margins.left-this.margins.right,(e?Math.max(s.scrollHeight,s.offsetHeight):s.offsetHeight)-(parseInt(i.css("borderBottomWidth"),10)||0)-(parseInt(i.css("paddingBottom"),10)||0)-this.helperProportions.height-this.margins.top-this.margins.bottom],this.relativeContainer=i),void 0):(this.containment=null,void 0);},_convertPositionTo:function _convertPositionTo(t,e){e||(e=this.position);var i="absolute"===t?1:-1,s=this._isRootNode(this.scrollParent[0]);return{top:e.top+this.offset.relative.top*i+this.offset.parent.top*i-("fixed"===this.cssPosition?-this.offset.scroll.top:s?0:this.offset.scroll.top)*i,left:e.left+this.offset.relative.left*i+this.offset.parent.left*i-("fixed"===this.cssPosition?-this.offset.scroll.left:s?0:this.offset.scroll.left)*i};},_generatePosition:function _generatePosition(t,e){var i,s,n,o,a=this.options,r=this._isRootNode(this.scrollParent[0]),h=t.pageX,l=t.pageY;return r&&this.offset.scroll||(this.offset.scroll={top:this.scrollParent.scrollTop(),left:this.scrollParent.scrollLeft()}),e&&(this.containment&&(this.relativeContainer?(s=this.relativeContainer.offset(),i=[this.containment[0]+s.left,this.containment[1]+s.top,this.containment[2]+s.left,this.containment[3]+s.top]):i=this.containment,t.pageX-this.offset.click.left<i[0]&&(h=i[0]+this.offset.click.left),t.pageY-this.offset.click.top<i[1]&&(l=i[1]+this.offset.click.top),t.pageX-this.offset.click.left>i[2]&&(h=i[2]+this.offset.click.left),t.pageY-this.offset.click.top>i[3]&&(l=i[3]+this.offset.click.top)),a.grid&&(n=a.grid[1]?this.originalPageY+Math.round((l-this.originalPageY)/a.grid[1])*a.grid[1]:this.originalPageY,l=i?n-this.offset.click.top>=i[1]||n-this.offset.click.top>i[3]?n:n-this.offset.click.top>=i[1]?n-a.grid[1]:n+a.grid[1]:n,o=a.grid[0]?this.originalPageX+Math.round((h-this.originalPageX)/a.grid[0])*a.grid[0]:this.originalPageX,h=i?o-this.offset.click.left>=i[0]||o-this.offset.click.left>i[2]?o:o-this.offset.click.left>=i[0]?o-a.grid[0]:o+a.grid[0]:o),"y"===a.axis&&(h=this.originalPageX),"x"===a.axis&&(l=this.originalPageY)),{top:l-this.offset.click.top-this.offset.relative.top-this.offset.parent.top+("fixed"===this.cssPosition?-this.offset.scroll.top:r?0:this.offset.scroll.top),left:h-this.offset.click.left-this.offset.relative.left-this.offset.parent.left+("fixed"===this.cssPosition?-this.offset.scroll.left:r?0:this.offset.scroll.left)};},_clear:function _clear(){this._removeClass(this.helper,"ui-draggable-dragging"),this.helper[0]===this.element[0]||this.cancelHelperRemoval||this.helper.remove(),this.helper=null,this.cancelHelperRemoval=!1,this.destroyOnClear&&this.destroy();},_trigger:function _trigger(e,i,s){return s=s||this._uiHash(),t.ui.plugin.call(this,e,[i,s,this],!0),/^(drag|start|stop)/.test(e)&&(this.positionAbs=this._convertPositionTo("absolute"),s.offset=this.positionAbs),t.Widget.prototype._trigger.call(this,e,i,s);},plugins:{},_uiHash:function _uiHash(){return{helper:this.helper,position:this.position,originalPosition:this.originalPosition,offset:this.positionAbs};}}),t.ui.plugin.add("draggable","connectToSortable",{start:function start(e,i,s){var n=t.extend({},i,{item:s.element});s.sortables=[],t(s.options.connectToSortable).each(function(){var i=t(this).sortable("instance");i&&!i.options.disabled&&(s.sortables.push(i),i.refreshPositions(),i._trigger("activate",e,n));});},stop:function stop(e,i,s){var n=t.extend({},i,{item:s.element});s.cancelHelperRemoval=!1,t.each(s.sortables,function(){var t=this;t.isOver?(t.isOver=0,s.cancelHelperRemoval=!0,t.cancelHelperRemoval=!1,t._storedCSS={position:t.placeholder.css("position"),top:t.placeholder.css("top"),left:t.placeholder.css("left")},t._mouseStop(e),t.options.helper=t.options._helper):(t.cancelHelperRemoval=!0,t._trigger("deactivate",e,n));});},drag:function drag(e,i,s){t.each(s.sortables,function(){var n=!1,o=this;o.positionAbs=s.positionAbs,o.helperProportions=s.helperProportions,o.offset.click=s.offset.click,o._intersectsWith(o.containerCache)&&(n=!0,t.each(s.sortables,function(){return this.positionAbs=s.positionAbs,this.helperProportions=s.helperProportions,this.offset.click=s.offset.click,this!==o&&this._intersectsWith(this.containerCache)&&t.contains(o.element[0],this.element[0])&&(n=!1),n;})),n?(o.isOver||(o.isOver=1,s._parent=i.helper.parent(),o.currentItem=i.helper.appendTo(o.element).data("ui-sortable-item",!0),o.options._helper=o.options.helper,o.options.helper=function(){return i.helper[0];},e.target=o.currentItem[0],o._mouseCapture(e,!0),o._mouseStart(e,!0,!0),o.offset.click.top=s.offset.click.top,o.offset.click.left=s.offset.click.left,o.offset.parent.left-=s.offset.parent.left-o.offset.parent.left,o.offset.parent.top-=s.offset.parent.top-o.offset.parent.top,s._trigger("toSortable",e),s.dropped=o.element,t.each(s.sortables,function(){this.refreshPositions();}),s.currentItem=s.element,o.fromOutside=s),o.currentItem&&(o._mouseDrag(e),i.position=o.position)):o.isOver&&(o.isOver=0,o.cancelHelperRemoval=!0,o.options._revert=o.options.revert,o.options.revert=!1,o._trigger("out",e,o._uiHash(o)),o._mouseStop(e,!0),o.options.revert=o.options._revert,o.options.helper=o.options._helper,o.placeholder&&o.placeholder.remove(),i.helper.appendTo(s._parent),s._refreshOffsets(e),i.position=s._generatePosition(e,!0),s._trigger("fromSortable",e),s.dropped=!1,t.each(s.sortables,function(){this.refreshPositions();}));});}}),t.ui.plugin.add("draggable","cursor",{start:function start(e,i,s){var n=t("body"),o=s.options;n.css("cursor")&&(o._cursor=n.css("cursor")),n.css("cursor",o.cursor);},stop:function stop(e,i,s){var n=s.options;n._cursor&&t("body").css("cursor",n._cursor);}}),t.ui.plugin.add("draggable","opacity",{start:function start(e,i,s){var n=t(i.helper),o=s.options;n.css("opacity")&&(o._opacity=n.css("opacity")),n.css("opacity",o.opacity);},stop:function stop(e,i,s){var n=s.options;n._opacity&&t(i.helper).css("opacity",n._opacity);}}),t.ui.plugin.add("draggable","scroll",{start:function start(t,e,i){i.scrollParentNotHidden||(i.scrollParentNotHidden=i.helper.scrollParent(!1)),i.scrollParentNotHidden[0]!==i.document[0]&&"HTML"!==i.scrollParentNotHidden[0].tagName&&(i.overflowOffset=i.scrollParentNotHidden.offset());},drag:function drag(e,i,s){var n=s.options,o=!1,a=s.scrollParentNotHidden[0],r=s.document[0];a!==r&&"HTML"!==a.tagName?(n.axis&&"x"===n.axis||(s.overflowOffset.top+a.offsetHeight-e.pageY<n.scrollSensitivity?a.scrollTop=o=a.scrollTop+n.scrollSpeed:e.pageY-s.overflowOffset.top<n.scrollSensitivity&&(a.scrollTop=o=a.scrollTop-n.scrollSpeed)),n.axis&&"y"===n.axis||(s.overflowOffset.left+a.offsetWidth-e.pageX<n.scrollSensitivity?a.scrollLeft=o=a.scrollLeft+n.scrollSpeed:e.pageX-s.overflowOffset.left<n.scrollSensitivity&&(a.scrollLeft=o=a.scrollLeft-n.scrollSpeed))):(n.axis&&"x"===n.axis||(e.pageY-t(r).scrollTop()<n.scrollSensitivity?o=t(r).scrollTop(t(r).scrollTop()-n.scrollSpeed):t(window).height()-(e.pageY-t(r).scrollTop())<n.scrollSensitivity&&(o=t(r).scrollTop(t(r).scrollTop()+n.scrollSpeed))),n.axis&&"y"===n.axis||(e.pageX-t(r).scrollLeft()<n.scrollSensitivity?o=t(r).scrollLeft(t(r).scrollLeft()-n.scrollSpeed):t(window).width()-(e.pageX-t(r).scrollLeft())<n.scrollSensitivity&&(o=t(r).scrollLeft(t(r).scrollLeft()+n.scrollSpeed)))),o!==!1&&t.ui.ddmanager&&!n.dropBehaviour&&t.ui.ddmanager.prepareOffsets(s,e);}}),t.ui.plugin.add("draggable","snap",{start:function start(e,i,s){var n=s.options;s.snapElements=[],t(n.snap.constructor!==String?n.snap.items||":data(ui-draggable)":n.snap).each(function(){var e=t(this),i=e.offset();this!==s.element[0]&&s.snapElements.push({item:this,width:e.outerWidth(),height:e.outerHeight(),top:i.top,left:i.left});});},drag:function drag(e,i,s){var n,o,a,r,h,l,c,u,d,p,f=s.options,g=f.snapTolerance,m=i.offset.left,_=m+s.helperProportions.width,v=i.offset.top,b=v+s.helperProportions.height;for(d=s.snapElements.length-1;d>=0;d--){h=s.snapElements[d].left-s.margins.left,l=h+s.snapElements[d].width,c=s.snapElements[d].top-s.margins.top,u=c+s.snapElements[d].height,h-g>_||m>l+g||c-g>b||v>u+g||!t.contains(s.snapElements[d].item.ownerDocument,s.snapElements[d].item)?(s.snapElements[d].snapping&&s.options.snap.release&&s.options.snap.release.call(s.element,e,t.extend(s._uiHash(),{snapItem:s.snapElements[d].item})),s.snapElements[d].snapping=!1):("inner"!==f.snapMode&&(n=g>=Math.abs(c-b),o=g>=Math.abs(u-v),a=g>=Math.abs(h-_),r=g>=Math.abs(l-m),n&&(i.position.top=s._convertPositionTo("relative",{top:c-s.helperProportions.height,left:0}).top),o&&(i.position.top=s._convertPositionTo("relative",{top:u,left:0}).top),a&&(i.position.left=s._convertPositionTo("relative",{top:0,left:h-s.helperProportions.width}).left),r&&(i.position.left=s._convertPositionTo("relative",{top:0,left:l}).left)),p=n||o||a||r,"outer"!==f.snapMode&&(n=g>=Math.abs(c-v),o=g>=Math.abs(u-b),a=g>=Math.abs(h-m),r=g>=Math.abs(l-_),n&&(i.position.top=s._convertPositionTo("relative",{top:c,left:0}).top),o&&(i.position.top=s._convertPositionTo("relative",{top:u-s.helperProportions.height,left:0}).top),a&&(i.position.left=s._convertPositionTo("relative",{top:0,left:h}).left),r&&(i.position.left=s._convertPositionTo("relative",{top:0,left:l-s.helperProportions.width}).left)),!s.snapElements[d].snapping&&(n||o||a||r||p)&&s.options.snap.snap&&s.options.snap.snap.call(s.element,e,t.extend(s._uiHash(),{snapItem:s.snapElements[d].item})),s.snapElements[d].snapping=n||o||a||r||p);}}}),t.ui.plugin.add("draggable","stack",{start:function start(e,i,s){var n,o=s.options,a=t.makeArray(t(o.stack)).sort(function(e,i){return(parseInt(t(e).css("zIndex"),10)||0)-(parseInt(t(i).css("zIndex"),10)||0);});a.length&&(n=parseInt(t(a[0]).css("zIndex"),10)||0,t(a).each(function(e){t(this).css("zIndex",n+e);}),this.css("zIndex",n+a.length));}}),t.ui.plugin.add("draggable","zIndex",{start:function start(e,i,s){var n=t(i.helper),o=s.options;n.css("zIndex")&&(o._zIndex=n.css("zIndex")),n.css("zIndex",o.zIndex);},stop:function stop(e,i,s){var n=s.options;n._zIndex&&t(i.helper).css("zIndex",n._zIndex);}}),t.ui.draggable,t.widget("ui.resizable",t.ui.mouse,{version:"1.12.1",widgetEventPrefix:"resize",options:{alsoResize:!1,animate:!1,animateDuration:"slow",animateEasing:"swing",aspectRatio:!1,autoHide:!1,classes:{"ui-resizable-se":"ui-icon ui-icon-gripsmall-diagonal-se"},containment:!1,ghost:!1,grid:!1,handles:"e,s,se",helper:!1,maxHeight:null,maxWidth:null,minHeight:10,minWidth:10,zIndex:90,resize:null,start:null,stop:null},_num:function _num(t){return parseFloat(t)||0;},_isNumber:function _isNumber(t){return!isNaN(parseFloat(t));},_hasScroll:function _hasScroll(e,i){if("hidden"===t(e).css("overflow"))return!1;var s=i&&"left"===i?"scrollLeft":"scrollTop",n=!1;return e[s]>0?!0:(e[s]=1,n=e[s]>0,e[s]=0,n);},_create:function _create(){var e,i=this.options,s=this;this._addClass("ui-resizable"),t.extend(this,{_aspectRatio:!!i.aspectRatio,aspectRatio:i.aspectRatio,originalElement:this.element,_proportionallyResizeElements:[],_helper:i.helper||i.ghost||i.animate?i.helper||"ui-resizable-helper":null}),this.element[0].nodeName.match(/^(canvas|textarea|input|select|button|img)$/i)&&(this.element.wrap(t("<div class='ui-wrapper' style='overflow: hidden;'></div>").css({position:this.element.css("position"),width:this.element.outerWidth(),height:this.element.outerHeight(),top:this.element.css("top"),left:this.element.css("left")})),this.element=this.element.parent().data("ui-resizable",this.element.resizable("instance")),this.elementIsWrapper=!0,e={marginTop:this.originalElement.css("marginTop"),marginRight:this.originalElement.css("marginRight"),marginBottom:this.originalElement.css("marginBottom"),marginLeft:this.originalElement.css("marginLeft")},this.element.css(e),this.originalElement.css("margin",0),this.originalResizeStyle=this.originalElement.css("resize"),this.originalElement.css("resize","none"),this._proportionallyResizeElements.push(this.originalElement.css({position:"static",zoom:1,display:"block"})),this.originalElement.css(e),this._proportionallyResize()),this._setupHandles(),i.autoHide&&t(this.element).on("mouseenter",function(){i.disabled||(s._removeClass("ui-resizable-autohide"),s._handles.show());}).on("mouseleave",function(){i.disabled||s.resizing||(s._addClass("ui-resizable-autohide"),s._handles.hide());}),this._mouseInit();},_destroy:function _destroy(){this._mouseDestroy();var e,i=function i(e){t(e).removeData("resizable").removeData("ui-resizable").off(".resizable").find(".ui-resizable-handle").remove();};return this.elementIsWrapper&&(i(this.element),e=this.element,this.originalElement.css({position:e.css("position"),width:e.outerWidth(),height:e.outerHeight(),top:e.css("top"),left:e.css("left")}).insertAfter(e),e.remove()),this.originalElement.css("resize",this.originalResizeStyle),i(this.originalElement),this;},_setOption:function _setOption(t,e){switch(this._super(t,e),t){case"handles":this._removeHandles(),this._setupHandles();break;default:}},_setupHandles:function _setupHandles(){var e,i,s,n,o,a=this.options,r=this;if(this.handles=a.handles||(t(".ui-resizable-handle",this.element).length?{n:".ui-resizable-n",e:".ui-resizable-e",s:".ui-resizable-s",w:".ui-resizable-w",se:".ui-resizable-se",sw:".ui-resizable-sw",ne:".ui-resizable-ne",nw:".ui-resizable-nw"}:"e,s,se"),this._handles=t(),this.handles.constructor===String)for("all"===this.handles&&(this.handles="n,e,s,w,se,sw,ne,nw"),s=this.handles.split(","),this.handles={},i=0;s.length>i;i++){e=t.trim(s[i]),n="ui-resizable-"+e,o=t("<div>"),this._addClass(o,"ui-resizable-handle "+n),o.css({zIndex:a.zIndex}),this.handles[e]=".ui-resizable-"+e,this.element.append(o);}this._renderAxis=function(e){var i,s,n,o;e=e||this.element;for(i in this.handles){this.handles[i].constructor===String?this.handles[i]=this.element.children(this.handles[i]).first().show():(this.handles[i].jquery||this.handles[i].nodeType)&&(this.handles[i]=t(this.handles[i]),this._on(this.handles[i],{mousedown:r._mouseDown})),this.elementIsWrapper&&this.originalElement[0].nodeName.match(/^(textarea|input|select|button)$/i)&&(s=t(this.handles[i],this.element),o=/sw|ne|nw|se|n|s/.test(i)?s.outerHeight():s.outerWidth(),n=["padding",/ne|nw|n/.test(i)?"Top":/se|sw|s/.test(i)?"Bottom":/^e$/.test(i)?"Right":"Left"].join(""),e.css(n,o),this._proportionallyResize()),this._handles=this._handles.add(this.handles[i]);}},this._renderAxis(this.element),this._handles=this._handles.add(this.element.find(".ui-resizable-handle")),this._handles.disableSelection(),this._handles.on("mouseover",function(){r.resizing||(this.className&&(o=this.className.match(/ui-resizable-(se|sw|ne|nw|n|e|s|w)/i)),r.axis=o&&o[1]?o[1]:"se");}),a.autoHide&&(this._handles.hide(),this._addClass("ui-resizable-autohide"));},_removeHandles:function _removeHandles(){this._handles.remove();},_mouseCapture:function _mouseCapture(e){var i,s,n=!1;for(i in this.handles){s=t(this.handles[i])[0],(s===e.target||t.contains(s,e.target))&&(n=!0);}return!this.options.disabled&&n;},_mouseStart:function _mouseStart(e){var i,s,n,o=this.options,a=this.element;return this.resizing=!0,this._renderProxy(),i=this._num(this.helper.css("left")),s=this._num(this.helper.css("top")),o.containment&&(i+=t(o.containment).scrollLeft()||0,s+=t(o.containment).scrollTop()||0),this.offset=this.helper.offset(),this.position={left:i,top:s},this.size=this._helper?{width:this.helper.width(),height:this.helper.height()}:{width:a.width(),height:a.height()},this.originalSize=this._helper?{width:a.outerWidth(),height:a.outerHeight()}:{width:a.width(),height:a.height()},this.sizeDiff={width:a.outerWidth()-a.width(),height:a.outerHeight()-a.height()},this.originalPosition={left:i,top:s},this.originalMousePosition={left:e.pageX,top:e.pageY},this.aspectRatio="number"==typeof o.aspectRatio?o.aspectRatio:this.originalSize.width/this.originalSize.height||1,n=t(".ui-resizable-"+this.axis).css("cursor"),t("body").css("cursor","auto"===n?this.axis+"-resize":n),this._addClass("ui-resizable-resizing"),this._propagate("start",e),!0;},_mouseDrag:function _mouseDrag(e){var i,s,n=this.originalMousePosition,o=this.axis,a=e.pageX-n.left||0,r=e.pageY-n.top||0,h=this._change[o];return this._updatePrevProperties(),h?(i=h.apply(this,[e,a,r]),this._updateVirtualBoundaries(e.shiftKey),(this._aspectRatio||e.shiftKey)&&(i=this._updateRatio(i,e)),i=this._respectSize(i,e),this._updateCache(i),this._propagate("resize",e),s=this._applyChanges(),!this._helper&&this._proportionallyResizeElements.length&&this._proportionallyResize(),t.isEmptyObject(s)||(this._updatePrevProperties(),this._trigger("resize",e,this.ui()),this._applyChanges()),!1):!1;},_mouseStop:function _mouseStop(e){this.resizing=!1;var i,s,n,o,a,r,h,l=this.options,c=this;return this._helper&&(i=this._proportionallyResizeElements,s=i.length&&/textarea/i.test(i[0].nodeName),n=s&&this._hasScroll(i[0],"left")?0:c.sizeDiff.height,o=s?0:c.sizeDiff.width,a={width:c.helper.width()-o,height:c.helper.height()-n},r=parseFloat(c.element.css("left"))+(c.position.left-c.originalPosition.left)||null,h=parseFloat(c.element.css("top"))+(c.position.top-c.originalPosition.top)||null,l.animate||this.element.css(t.extend(a,{top:h,left:r})),c.helper.height(c.size.height),c.helper.width(c.size.width),this._helper&&!l.animate&&this._proportionallyResize()),t("body").css("cursor","auto"),this._removeClass("ui-resizable-resizing"),this._propagate("stop",e),this._helper&&this.helper.remove(),!1;},_updatePrevProperties:function _updatePrevProperties(){this.prevPosition={top:this.position.top,left:this.position.left},this.prevSize={width:this.size.width,height:this.size.height};},_applyChanges:function _applyChanges(){var t={};return this.position.top!==this.prevPosition.top&&(t.top=this.position.top+"px"),this.position.left!==this.prevPosition.left&&(t.left=this.position.left+"px"),this.size.width!==this.prevSize.width&&(t.width=this.size.width+"px"),this.size.height!==this.prevSize.height&&(t.height=this.size.height+"px"),this.helper.css(t),t;},_updateVirtualBoundaries:function _updateVirtualBoundaries(t){var e,i,s,n,o,a=this.options;o={minWidth:this._isNumber(a.minWidth)?a.minWidth:0,maxWidth:this._isNumber(a.maxWidth)?a.maxWidth:1/0,minHeight:this._isNumber(a.minHeight)?a.minHeight:0,maxHeight:this._isNumber(a.maxHeight)?a.maxHeight:1/0},(this._aspectRatio||t)&&(e=o.minHeight*this.aspectRatio,s=o.minWidth/this.aspectRatio,i=o.maxHeight*this.aspectRatio,n=o.maxWidth/this.aspectRatio,e>o.minWidth&&(o.minWidth=e),s>o.minHeight&&(o.minHeight=s),o.maxWidth>i&&(o.maxWidth=i),o.maxHeight>n&&(o.maxHeight=n)),this._vBoundaries=o;},_updateCache:function _updateCache(t){this.offset=this.helper.offset(),this._isNumber(t.left)&&(this.position.left=t.left),this._isNumber(t.top)&&(this.position.top=t.top),this._isNumber(t.height)&&(this.size.height=t.height),this._isNumber(t.width)&&(this.size.width=t.width);},_updateRatio:function _updateRatio(t){var e=this.position,i=this.size,s=this.axis;return this._isNumber(t.height)?t.width=t.height*this.aspectRatio:this._isNumber(t.width)&&(t.height=t.width/this.aspectRatio),"sw"===s&&(t.left=e.left+(i.width-t.width),t.top=null),"nw"===s&&(t.top=e.top+(i.height-t.height),t.left=e.left+(i.width-t.width)),t;},_respectSize:function _respectSize(t){var e=this._vBoundaries,i=this.axis,s=this._isNumber(t.width)&&e.maxWidth&&e.maxWidth<t.width,n=this._isNumber(t.height)&&e.maxHeight&&e.maxHeight<t.height,o=this._isNumber(t.width)&&e.minWidth&&e.minWidth>t.width,a=this._isNumber(t.height)&&e.minHeight&&e.minHeight>t.height,r=this.originalPosition.left+this.originalSize.width,h=this.originalPosition.top+this.originalSize.height,l=/sw|nw|w/.test(i),c=/nw|ne|n/.test(i);return o&&(t.width=e.minWidth),a&&(t.height=e.minHeight),s&&(t.width=e.maxWidth),n&&(t.height=e.maxHeight),o&&l&&(t.left=r-e.minWidth),s&&l&&(t.left=r-e.maxWidth),a&&c&&(t.top=h-e.minHeight),n&&c&&(t.top=h-e.maxHeight),t.width||t.height||t.left||!t.top?t.width||t.height||t.top||!t.left||(t.left=null):t.top=null,t;},_getPaddingPlusBorderDimensions:function _getPaddingPlusBorderDimensions(t){for(var e=0,i=[],s=[t.css("borderTopWidth"),t.css("borderRightWidth"),t.css("borderBottomWidth"),t.css("borderLeftWidth")],n=[t.css("paddingTop"),t.css("paddingRight"),t.css("paddingBottom"),t.css("paddingLeft")];4>e;e++){i[e]=parseFloat(s[e])||0,i[e]+=parseFloat(n[e])||0;}return{height:i[0]+i[2],width:i[1]+i[3]};},_proportionallyResize:function _proportionallyResize(){if(this._proportionallyResizeElements.length)for(var t,e=0,i=this.helper||this.element;this._proportionallyResizeElements.length>e;e++){t=this._proportionallyResizeElements[e],this.outerDimensions||(this.outerDimensions=this._getPaddingPlusBorderDimensions(t)),t.css({height:i.height()-this.outerDimensions.height||0,width:i.width()-this.outerDimensions.width||0});}},_renderProxy:function _renderProxy(){var e=this.element,i=this.options;this.elementOffset=e.offset(),this._helper?(this.helper=this.helper||t("<div style='overflow:hidden;'></div>"),this._addClass(this.helper,this._helper),this.helper.css({width:this.element.outerWidth(),height:this.element.outerHeight(),position:"absolute",left:this.elementOffset.left+"px",top:this.elementOffset.top+"px",zIndex:++i.zIndex}),this.helper.appendTo("body").disableSelection()):this.helper=this.element;},_change:{e:function e(t,_e){return{width:this.originalSize.width+_e};},w:function w(t,e){var i=this.originalSize,s=this.originalPosition;return{left:s.left+e,width:i.width-e};},n:function n(t,e,i){var s=this.originalSize,n=this.originalPosition;return{top:n.top+i,height:s.height-i};},s:function s(t,e,i){return{height:this.originalSize.height+i};},se:function se(e,i,s){return t.extend(this._change.s.apply(this,arguments),this._change.e.apply(this,[e,i,s]));},sw:function sw(e,i,s){return t.extend(this._change.s.apply(this,arguments),this._change.w.apply(this,[e,i,s]));},ne:function ne(e,i,s){return t.extend(this._change.n.apply(this,arguments),this._change.e.apply(this,[e,i,s]));},nw:function nw(e,i,s){return t.extend(this._change.n.apply(this,arguments),this._change.w.apply(this,[e,i,s]));}},_propagate:function _propagate(e,i){t.ui.plugin.call(this,e,[i,this.ui()]),"resize"!==e&&this._trigger(e,i,this.ui());},plugins:{},ui:function ui(){return{originalElement:this.originalElement,element:this.element,helper:this.helper,position:this.position,size:this.size,originalSize:this.originalSize,originalPosition:this.originalPosition};}}),t.ui.plugin.add("resizable","animate",{stop:function stop(e){var i=t(this).resizable("instance"),s=i.options,n=i._proportionallyResizeElements,o=n.length&&/textarea/i.test(n[0].nodeName),a=o&&i._hasScroll(n[0],"left")?0:i.sizeDiff.height,r=o?0:i.sizeDiff.width,h={width:i.size.width-r,height:i.size.height-a},l=parseFloat(i.element.css("left"))+(i.position.left-i.originalPosition.left)||null,c=parseFloat(i.element.css("top"))+(i.position.top-i.originalPosition.top)||null;i.element.animate(t.extend(h,c&&l?{top:c,left:l}:{}),{duration:s.animateDuration,easing:s.animateEasing,step:function step(){var s={width:parseFloat(i.element.css("width")),height:parseFloat(i.element.css("height")),top:parseFloat(i.element.css("top")),left:parseFloat(i.element.css("left"))};n&&n.length&&t(n[0]).css({width:s.width,height:s.height}),i._updateCache(s),i._propagate("resize",e);}});}}),t.ui.plugin.add("resizable","containment",{start:function start(){var e,i,s,n,o,a,r,h=t(this).resizable("instance"),l=h.options,c=h.element,u=l.containment,d=u instanceof t?u.get(0):/parent/.test(u)?c.parent().get(0):u;d&&(h.containerElement=t(d),/document/.test(u)||u===document?(h.containerOffset={left:0,top:0},h.containerPosition={left:0,top:0},h.parentData={element:t(document),left:0,top:0,width:t(document).width(),height:t(document).height()||document.body.parentNode.scrollHeight}):(e=t(d),i=[],t(["Top","Right","Left","Bottom"]).each(function(t,s){i[t]=h._num(e.css("padding"+s));}),h.containerOffset=e.offset(),h.containerPosition=e.position(),h.containerSize={height:e.innerHeight()-i[3],width:e.innerWidth()-i[1]},s=h.containerOffset,n=h.containerSize.height,o=h.containerSize.width,a=h._hasScroll(d,"left")?d.scrollWidth:o,r=h._hasScroll(d)?d.scrollHeight:n,h.parentData={element:d,left:s.left,top:s.top,width:a,height:r}));},resize:function resize(e){var i,s,n,o,a=t(this).resizable("instance"),r=a.options,h=a.containerOffset,l=a.position,c=a._aspectRatio||e.shiftKey,u={top:0,left:0},d=a.containerElement,p=!0;d[0]!==document&&/static/.test(d.css("position"))&&(u=h),l.left<(a._helper?h.left:0)&&(a.size.width=a.size.width+(a._helper?a.position.left-h.left:a.position.left-u.left),c&&(a.size.height=a.size.width/a.aspectRatio,p=!1),a.position.left=r.helper?h.left:0),l.top<(a._helper?h.top:0)&&(a.size.height=a.size.height+(a._helper?a.position.top-h.top:a.position.top),c&&(a.size.width=a.size.height*a.aspectRatio,p=!1),a.position.top=a._helper?h.top:0),n=a.containerElement.get(0)===a.element.parent().get(0),o=/relative|absolute/.test(a.containerElement.css("position")),n&&o?(a.offset.left=a.parentData.left+a.position.left,a.offset.top=a.parentData.top+a.position.top):(a.offset.left=a.element.offset().left,a.offset.top=a.element.offset().top),i=Math.abs(a.sizeDiff.width+(a._helper?a.offset.left-u.left:a.offset.left-h.left)),s=Math.abs(a.sizeDiff.height+(a._helper?a.offset.top-u.top:a.offset.top-h.top)),i+a.size.width>=a.parentData.width&&(a.size.width=a.parentData.width-i,c&&(a.size.height=a.size.width/a.aspectRatio,p=!1)),s+a.size.height>=a.parentData.height&&(a.size.height=a.parentData.height-s,c&&(a.size.width=a.size.height*a.aspectRatio,p=!1)),p||(a.position.left=a.prevPosition.left,a.position.top=a.prevPosition.top,a.size.width=a.prevSize.width,a.size.height=a.prevSize.height);},stop:function stop(){var e=t(this).resizable("instance"),i=e.options,s=e.containerOffset,n=e.containerPosition,o=e.containerElement,a=t(e.helper),r=a.offset(),h=a.outerWidth()-e.sizeDiff.width,l=a.outerHeight()-e.sizeDiff.height;e._helper&&!i.animate&&/relative/.test(o.css("position"))&&t(this).css({left:r.left-n.left-s.left,width:h,height:l}),e._helper&&!i.animate&&/static/.test(o.css("position"))&&t(this).css({left:r.left-n.left-s.left,width:h,height:l});}}),t.ui.plugin.add("resizable","alsoResize",{start:function start(){var e=t(this).resizable("instance"),i=e.options;t(i.alsoResize).each(function(){var e=t(this);e.data("ui-resizable-alsoresize",{width:parseFloat(e.width()),height:parseFloat(e.height()),left:parseFloat(e.css("left")),top:parseFloat(e.css("top"))});});},resize:function resize(e,i){var s=t(this).resizable("instance"),n=s.options,o=s.originalSize,a=s.originalPosition,r={height:s.size.height-o.height||0,width:s.size.width-o.width||0,top:s.position.top-a.top||0,left:s.position.left-a.left||0};t(n.alsoResize).each(function(){var e=t(this),s=t(this).data("ui-resizable-alsoresize"),n={},o=e.parents(i.originalElement[0]).length?["width","height"]:["width","height","top","left"];t.each(o,function(t,e){var i=(s[e]||0)+(r[e]||0);i&&i>=0&&(n[e]=i||null);}),e.css(n);});},stop:function stop(){t(this).removeData("ui-resizable-alsoresize");}}),t.ui.plugin.add("resizable","ghost",{start:function start(){var e=t(this).resizable("instance"),i=e.size;e.ghost=e.originalElement.clone(),e.ghost.css({opacity:.25,display:"block",position:"relative",height:i.height,width:i.width,margin:0,left:0,top:0}),e._addClass(e.ghost,"ui-resizable-ghost"),t.uiBackCompat!==!1&&"string"==typeof e.options.ghost&&e.ghost.addClass(this.options.ghost),e.ghost.appendTo(e.helper);},resize:function resize(){var e=t(this).resizable("instance");e.ghost&&e.ghost.css({position:"relative",height:e.size.height,width:e.size.width});},stop:function stop(){var e=t(this).resizable("instance");e.ghost&&e.helper&&e.helper.get(0).removeChild(e.ghost.get(0));}}),t.ui.plugin.add("resizable","grid",{resize:function resize(){var e,i=t(this).resizable("instance"),s=i.options,n=i.size,o=i.originalSize,a=i.originalPosition,r=i.axis,h="number"==typeof s.grid?[s.grid,s.grid]:s.grid,l=h[0]||1,c=h[1]||1,u=Math.round((n.width-o.width)/l)*l,d=Math.round((n.height-o.height)/c)*c,p=o.width+u,f=o.height+d,g=s.maxWidth&&p>s.maxWidth,m=s.maxHeight&&f>s.maxHeight,_=s.minWidth&&s.minWidth>p,v=s.minHeight&&s.minHeight>f;s.grid=h,_&&(p+=l),v&&(f+=c),g&&(p-=l),m&&(f-=c),/^(se|s|e)$/.test(r)?(i.size.width=p,i.size.height=f):/^(ne)$/.test(r)?(i.size.width=p,i.size.height=f,i.position.top=a.top-d):/^(sw)$/.test(r)?(i.size.width=p,i.size.height=f,i.position.left=a.left-u):((0>=f-c||0>=p-l)&&(e=i._getPaddingPlusBorderDimensions(this)),f-c>0?(i.size.height=f,i.position.top=a.top-d):(f=c-e.height,i.size.height=f,i.position.top=a.top+o.height-f),p-l>0?(i.size.width=p,i.position.left=a.left-u):(p=l-e.width,i.size.width=p,i.position.left=a.left+o.width-p));}}),t.ui.resizable,t.widget("ui.dialog",{version:"1.12.1",options:{appendTo:"body",autoOpen:!0,buttons:[],classes:{"ui-dialog":"ui-corner-all","ui-dialog-titlebar":"ui-corner-all"},closeOnEscape:!0,closeText:"Close",draggable:!0,hide:null,height:"auto",maxHeight:null,maxWidth:null,minHeight:150,minWidth:150,modal:!1,position:{my:"center",at:"center",of:window,collision:"fit",using:function using(e){var i=t(this).css(e).offset().top;0>i&&t(this).css("top",e.top-i);}},resizable:!0,show:null,title:null,width:300,beforeClose:null,close:null,drag:null,dragStart:null,dragStop:null,focus:null,open:null,resize:null,resizeStart:null,resizeStop:null},sizeRelatedOptions:{buttons:!0,height:!0,maxHeight:!0,maxWidth:!0,minHeight:!0,minWidth:!0,width:!0},resizableRelatedOptions:{maxHeight:!0,maxWidth:!0,minHeight:!0,minWidth:!0},_create:function _create(){this.originalCss={display:this.element[0].style.display,width:this.element[0].style.width,minHeight:this.element[0].style.minHeight,maxHeight:this.element[0].style.maxHeight,height:this.element[0].style.height},this.originalPosition={parent:this.element.parent(),index:this.element.parent().children().index(this.element)},this.originalTitle=this.element.attr("title"),null==this.options.title&&null!=this.originalTitle&&(this.options.title=this.originalTitle),this.options.disabled&&(this.options.disabled=!1),this._createWrapper(),this.element.show().removeAttr("title").appendTo(this.uiDialog),this._addClass("ui-dialog-content","ui-widget-content"),this._createTitlebar(),this._createButtonPane(),this.options.draggable&&t.fn.draggable&&this._makeDraggable(),this.options.resizable&&t.fn.resizable&&this._makeResizable(),this._isOpen=!1,this._trackFocus();},_init:function _init(){this.options.autoOpen&&this.open();},_appendTo:function _appendTo(){var e=this.options.appendTo;return e&&(e.jquery||e.nodeType)?t(e):this.document.find(e||"body").eq(0);},_destroy:function _destroy(){var t,e=this.originalPosition;this._untrackInstance(),this._destroyOverlay(),this.element.removeUniqueId().css(this.originalCss).detach(),this.uiDialog.remove(),this.originalTitle&&this.element.attr("title",this.originalTitle),t=e.parent.children().eq(e.index),t.length&&t[0]!==this.element[0]?t.before(this.element):e.parent.append(this.element);},widget:function widget(){return this.uiDialog;},disable:t.noop,enable:t.noop,close:function close(e){var i=this;this._isOpen&&this._trigger("beforeClose",e)!==!1&&(this._isOpen=!1,this._focusedElement=null,this._destroyOverlay(),this._untrackInstance(),this.opener.filter(":focusable").trigger("focus").length||t.ui.safeBlur(t.ui.safeActiveElement(this.document[0])),this._hide(this.uiDialog,this.options.hide,function(){i._trigger("close",e);}));},isOpen:function isOpen(){return this._isOpen;},moveToTop:function moveToTop(){this._moveToTop();},_moveToTop:function _moveToTop(e,i){var s=!1,n=this.uiDialog.siblings(".ui-front:visible").map(function(){return+t(this).css("z-index");}).get(),o=Math.max.apply(null,n);return o>=+this.uiDialog.css("z-index")&&(this.uiDialog.css("z-index",o+1),s=!0),s&&!i&&this._trigger("focus",e),s;},open:function open(){var e=this;return this._isOpen?(this._moveToTop()&&this._focusTabbable(),void 0):(this._isOpen=!0,this.opener=t(t.ui.safeActiveElement(this.document[0])),this._size(),this._position(),this._createOverlay(),this._moveToTop(null,!0),this.overlay&&this.overlay.css("z-index",this.uiDialog.css("z-index")-1),this._show(this.uiDialog,this.options.show,function(){e._focusTabbable(),e._trigger("focus");}),this._makeFocusTarget(),this._trigger("open"),void 0);},_focusTabbable:function _focusTabbable(){var t=this._focusedElement;t||(t=this.element.find("[autofocus]")),t.length||(t=this.element.find(":tabbable")),t.length||(t=this.uiDialogButtonPane.find(":tabbable")),t.length||(t=this.uiDialogTitlebarClose.filter(":tabbable")),t.length||(t=this.uiDialog),t.eq(0).trigger("focus");},_keepFocus:function _keepFocus(e){function i(){var e=t.ui.safeActiveElement(this.document[0]),i=this.uiDialog[0]===e||t.contains(this.uiDialog[0],e);i||this._focusTabbable();}e.preventDefault(),i.call(this),this._delay(i);},_createWrapper:function _createWrapper(){this.uiDialog=t("<div>").hide().attr({tabIndex:-1,role:"dialog"}).appendTo(this._appendTo()),this._addClass(this.uiDialog,"ui-dialog","ui-widget ui-widget-content ui-front"),this._on(this.uiDialog,{keydown:function keydown(e){if(this.options.closeOnEscape&&!e.isDefaultPrevented()&&e.keyCode&&e.keyCode===t.ui.keyCode.ESCAPE)return e.preventDefault(),this.close(e),void 0;if(e.keyCode===t.ui.keyCode.TAB&&!e.isDefaultPrevented()){var i=this.uiDialog.find(":tabbable"),s=i.filter(":first"),n=i.filter(":last");e.target!==n[0]&&e.target!==this.uiDialog[0]||e.shiftKey?e.target!==s[0]&&e.target!==this.uiDialog[0]||!e.shiftKey||(this._delay(function(){n.trigger("focus");}),e.preventDefault()):(this._delay(function(){s.trigger("focus");}),e.preventDefault());}},mousedown:function mousedown(t){this._moveToTop(t)&&this._focusTabbable();}}),this.element.find("[aria-describedby]").length||this.uiDialog.attr({"aria-describedby":this.element.uniqueId().attr("id")});},_createTitlebar:function _createTitlebar(){var e;this.uiDialogTitlebar=t("<div>"),this._addClass(this.uiDialogTitlebar,"ui-dialog-titlebar","ui-widget-header ui-helper-clearfix"),this._on(this.uiDialogTitlebar,{mousedown:function mousedown(e){t(e.target).closest(".ui-dialog-titlebar-close")||this.uiDialog.trigger("focus");}}),this.uiDialogTitlebarClose=t("<button type='button'></button>").button({label:t("<a>").text(this.options.closeText).html(),icon:"ui-icon-closethick",showLabel:!1}).appendTo(this.uiDialogTitlebar),this._addClass(this.uiDialogTitlebarClose,"ui-dialog-titlebar-close"),this._on(this.uiDialogTitlebarClose,{click:function click(t){t.preventDefault(),this.close(t);}}),e=t("<span>").uniqueId().prependTo(this.uiDialogTitlebar),this._addClass(e,"ui-dialog-title"),this._title(e),this.uiDialogTitlebar.prependTo(this.uiDialog),this.uiDialog.attr({"aria-labelledby":e.attr("id")});},_title:function _title(t){this.options.title?t.text(this.options.title):t.html("&#160;");},_createButtonPane:function _createButtonPane(){this.uiDialogButtonPane=t("<div>"),this._addClass(this.uiDialogButtonPane,"ui-dialog-buttonpane","ui-widget-content ui-helper-clearfix"),this.uiButtonSet=t("<div>").appendTo(this.uiDialogButtonPane),this._addClass(this.uiButtonSet,"ui-dialog-buttonset"),this._createButtons();},_createButtons:function _createButtons(){var e=this,i=this.options.buttons;return this.uiDialogButtonPane.remove(),this.uiButtonSet.empty(),t.isEmptyObject(i)||t.isArray(i)&&!i.length?(this._removeClass(this.uiDialog,"ui-dialog-buttons"),void 0):(t.each(i,function(i,s){var n,o;s=t.isFunction(s)?{click:s,text:i}:s,s=t.extend({type:"button"},s),n=s.click,o={icon:s.icon,iconPosition:s.iconPosition,showLabel:s.showLabel,icons:s.icons,text:s.text},delete s.click,delete s.icon,delete s.iconPosition,delete s.showLabel,delete s.icons,"boolean"==typeof s.text&&delete s.text,t("<button></button>",s).button(o).appendTo(e.uiButtonSet).on("click",function(){n.apply(e.element[0],arguments);});}),this._addClass(this.uiDialog,"ui-dialog-buttons"),this.uiDialogButtonPane.appendTo(this.uiDialog),void 0);},_makeDraggable:function _makeDraggable(){function e(t){return{position:t.position,offset:t.offset};}var i=this,s=this.options;this.uiDialog.draggable({cancel:".ui-dialog-content, .ui-dialog-titlebar-close",handle:".ui-dialog-titlebar",containment:"document",start:function start(s,n){i._addClass(t(this),"ui-dialog-dragging"),i._blockFrames(),i._trigger("dragStart",s,e(n));},drag:function drag(t,s){i._trigger("drag",t,e(s));},stop:function stop(n,o){var a=o.offset.left-i.document.scrollLeft(),r=o.offset.top-i.document.scrollTop();s.position={my:"left top",at:"left"+(a>=0?"+":"")+a+" "+"top"+(r>=0?"+":"")+r,of:i.window},i._removeClass(t(this),"ui-dialog-dragging"),i._unblockFrames(),i._trigger("dragStop",n,e(o));}});},_makeResizable:function _makeResizable(){function e(t){return{originalPosition:t.originalPosition,originalSize:t.originalSize,position:t.position,size:t.size};}var i=this,s=this.options,n=s.resizable,o=this.uiDialog.css("position"),a="string"==typeof n?n:"n,e,s,w,se,sw,ne,nw";this.uiDialog.resizable({cancel:".ui-dialog-content",containment:"document",alsoResize:this.element,maxWidth:s.maxWidth,maxHeight:s.maxHeight,minWidth:s.minWidth,minHeight:this._minHeight(),handles:a,start:function start(s,n){i._addClass(t(this),"ui-dialog-resizing"),i._blockFrames(),i._trigger("resizeStart",s,e(n));},resize:function resize(t,s){i._trigger("resize",t,e(s));},stop:function stop(n,o){var a=i.uiDialog.offset(),r=a.left-i.document.scrollLeft(),h=a.top-i.document.scrollTop();s.height=i.uiDialog.height(),s.width=i.uiDialog.width(),s.position={my:"left top",at:"left"+(r>=0?"+":"")+r+" "+"top"+(h>=0?"+":"")+h,of:i.window},i._removeClass(t(this),"ui-dialog-resizing"),i._unblockFrames(),i._trigger("resizeStop",n,e(o));}}).css("position",o);},_trackFocus:function _trackFocus(){this._on(this.widget(),{focusin:function focusin(e){this._makeFocusTarget(),this._focusedElement=t(e.target);}});},_makeFocusTarget:function _makeFocusTarget(){this._untrackInstance(),this._trackingInstances().unshift(this);},_untrackInstance:function _untrackInstance(){var e=this._trackingInstances(),i=t.inArray(this,e);-1!==i&&e.splice(i,1);},_trackingInstances:function _trackingInstances(){var t=this.document.data("ui-dialog-instances");return t||(t=[],this.document.data("ui-dialog-instances",t)),t;},_minHeight:function _minHeight(){var t=this.options;return"auto"===t.height?t.minHeight:Math.min(t.minHeight,t.height);},_position:function _position(){var t=this.uiDialog.is(":visible");t||this.uiDialog.show(),this.uiDialog.position(this.options.position),t||this.uiDialog.hide();},_setOptions:function _setOptions(e){var i=this,s=!1,n={};t.each(e,function(t,e){i._setOption(t,e),t in i.sizeRelatedOptions&&(s=!0),t in i.resizableRelatedOptions&&(n[t]=e);}),s&&(this._size(),this._position()),this.uiDialog.is(":data(ui-resizable)")&&this.uiDialog.resizable("option",n);},_setOption:function _setOption(e,i){var s,n,o=this.uiDialog;"disabled"!==e&&(this._super(e,i),"appendTo"===e&&this.uiDialog.appendTo(this._appendTo()),"buttons"===e&&this._createButtons(),"closeText"===e&&this.uiDialogTitlebarClose.button({label:t("<a>").text(""+this.options.closeText).html()}),"draggable"===e&&(s=o.is(":data(ui-draggable)"),s&&!i&&o.draggable("destroy"),!s&&i&&this._makeDraggable()),"position"===e&&this._position(),"resizable"===e&&(n=o.is(":data(ui-resizable)"),n&&!i&&o.resizable("destroy"),n&&"string"==typeof i&&o.resizable("option","handles",i),n||i===!1||this._makeResizable()),"title"===e&&this._title(this.uiDialogTitlebar.find(".ui-dialog-title")));},_size:function _size(){var t,e,i,s=this.options;this.element.show().css({width:"auto",minHeight:0,maxHeight:"none",height:0}),s.minWidth>s.width&&(s.width=s.minWidth),t=this.uiDialog.css({height:"auto",width:s.width}).outerHeight(),e=Math.max(0,s.minHeight-t),i="number"==typeof s.maxHeight?Math.max(0,s.maxHeight-t):"none","auto"===s.height?this.element.css({minHeight:e,maxHeight:i,height:"auto"}):this.element.height(Math.max(0,s.height-t)),this.uiDialog.is(":data(ui-resizable)")&&this.uiDialog.resizable("option","minHeight",this._minHeight());},_blockFrames:function _blockFrames(){this.iframeBlocks=this.document.find("iframe").map(function(){var e=t(this);return t("<div>").css({position:"absolute",width:e.outerWidth(),height:e.outerHeight()}).appendTo(e.parent()).offset(e.offset())[0];});},_unblockFrames:function _unblockFrames(){this.iframeBlocks&&(this.iframeBlocks.remove(),delete this.iframeBlocks);},_allowInteraction:function _allowInteraction(e){return t(e.target).closest(".ui-dialog").length?!0:!!t(e.target).closest(".ui-datepicker").length;},_createOverlay:function _createOverlay(){if(this.options.modal){var e=!0;this._delay(function(){e=!1;}),this.document.data("ui-dialog-overlays")||this._on(this.document,{focusin:function focusin(t){e||this._allowInteraction(t)||(t.preventDefault(),this._trackingInstances()[0]._focusTabbable());}}),this.overlay=t("<div>").appendTo(this._appendTo()),this._addClass(this.overlay,null,"ui-widget-overlay ui-front"),this._on(this.overlay,{mousedown:"_keepFocus"}),this.document.data("ui-dialog-overlays",(this.document.data("ui-dialog-overlays")||0)+1);}},_destroyOverlay:function _destroyOverlay(){if(this.options.modal&&this.overlay){var t=this.document.data("ui-dialog-overlays")-1;t?this.document.data("ui-dialog-overlays",t):(this._off(this.document,"focusin"),this.document.removeData("ui-dialog-overlays")),this.overlay.remove(),this.overlay=null;}}}),t.uiBackCompat!==!1&&t.widget("ui.dialog",t.ui.dialog,{options:{dialogClass:""},_createWrapper:function _createWrapper(){this._super(),this.uiDialog.addClass(this.options.dialogClass);},_setOption:function _setOption(t,e){"dialogClass"===t&&this.uiDialog.removeClass(this.options.dialogClass).addClass(e),this._superApply(arguments);}}),t.ui.dialog,t.widget("ui.droppable",{version:"1.12.1",widgetEventPrefix:"drop",options:{accept:"*",addClasses:!0,greedy:!1,scope:"default",tolerance:"intersect",activate:null,deactivate:null,drop:null,out:null,over:null},_create:function _create(){var e,i=this.options,s=i.accept;this.isover=!1,this.isout=!0,this.accept=t.isFunction(s)?s:function(t){return t.is(s);},this.proportions=function(){return arguments.length?(e=arguments[0],void 0):e?e:e={width:this.element[0].offsetWidth,height:this.element[0].offsetHeight};},this._addToManager(i.scope),i.addClasses&&this._addClass("ui-droppable");},_addToManager:function _addToManager(e){t.ui.ddmanager.droppables[e]=t.ui.ddmanager.droppables[e]||[],t.ui.ddmanager.droppables[e].push(this);},_splice:function _splice(t){for(var e=0;t.length>e;e++){t[e]===this&&t.splice(e,1);}},_destroy:function _destroy(){var e=t.ui.ddmanager.droppables[this.options.scope];this._splice(e);},_setOption:function _setOption(e,i){if("accept"===e)this.accept=t.isFunction(i)?i:function(t){return t.is(i);};else if("scope"===e){var s=t.ui.ddmanager.droppables[this.options.scope];this._splice(s),this._addToManager(i);}this._super(e,i);},_activate:function _activate(e){var i=t.ui.ddmanager.current;this._addActiveClass(),i&&this._trigger("activate",e,this.ui(i));},_deactivate:function _deactivate(e){var i=t.ui.ddmanager.current;this._removeActiveClass(),i&&this._trigger("deactivate",e,this.ui(i));},_over:function _over(e){var i=t.ui.ddmanager.current;i&&(i.currentItem||i.element)[0]!==this.element[0]&&this.accept.call(this.element[0],i.currentItem||i.element)&&(this._addHoverClass(),this._trigger("over",e,this.ui(i)));},_out:function _out(e){var i=t.ui.ddmanager.current;i&&(i.currentItem||i.element)[0]!==this.element[0]&&this.accept.call(this.element[0],i.currentItem||i.element)&&(this._removeHoverClass(),this._trigger("out",e,this.ui(i)));},_drop:function _drop(e,i){var s=i||t.ui.ddmanager.current,n=!1;return s&&(s.currentItem||s.element)[0]!==this.element[0]?(this.element.find(":data(ui-droppable)").not(".ui-draggable-dragging").each(function(){var i=t(this).droppable("instance");return i.options.greedy&&!i.options.disabled&&i.options.scope===s.options.scope&&i.accept.call(i.element[0],s.currentItem||s.element)&&v(s,t.extend(i,{offset:i.element.offset()}),i.options.tolerance,e)?(n=!0,!1):void 0;}),n?!1:this.accept.call(this.element[0],s.currentItem||s.element)?(this._removeActiveClass(),this._removeHoverClass(),this._trigger("drop",e,this.ui(s)),this.element):!1):!1;},ui:function ui(t){return{draggable:t.currentItem||t.element,helper:t.helper,position:t.position,offset:t.positionAbs};},_addHoverClass:function _addHoverClass(){this._addClass("ui-droppable-hover");},_removeHoverClass:function _removeHoverClass(){this._removeClass("ui-droppable-hover");},_addActiveClass:function _addActiveClass(){this._addClass("ui-droppable-active");},_removeActiveClass:function _removeActiveClass(){this._removeClass("ui-droppable-active");}});var v=t.ui.intersect=function(){function t(t,e,i){return t>=e&&e+i>t;}return function(e,i,s,n){if(!i.offset)return!1;var o=(e.positionAbs||e.position.absolute).left+e.margins.left,a=(e.positionAbs||e.position.absolute).top+e.margins.top,r=o+e.helperProportions.width,h=a+e.helperProportions.height,l=i.offset.left,c=i.offset.top,u=l+i.proportions().width,d=c+i.proportions().height;switch(s){case"fit":return o>=l&&u>=r&&a>=c&&d>=h;case"intersect":return o+e.helperProportions.width/2>l&&u>r-e.helperProportions.width/2&&a+e.helperProportions.height/2>c&&d>h-e.helperProportions.height/2;case"pointer":return t(n.pageY,c,i.proportions().height)&&t(n.pageX,l,i.proportions().width);case"touch":return(a>=c&&d>=a||h>=c&&d>=h||c>a&&h>d)&&(o>=l&&u>=o||r>=l&&u>=r||l>o&&r>u);default:return!1;}};}();t.ui.ddmanager={current:null,droppables:{"default":[]},prepareOffsets:function prepareOffsets(e,i){var s,n,o=t.ui.ddmanager.droppables[e.options.scope]||[],a=i?i.type:null,r=(e.currentItem||e.element).find(":data(ui-droppable)").addBack();t:for(s=0;o.length>s;s++){if(!(o[s].options.disabled||e&&!o[s].accept.call(o[s].element[0],e.currentItem||e.element))){for(n=0;r.length>n;n++){if(r[n]===o[s].element[0]){o[s].proportions().height=0;continue t;}}o[s].visible="none"!==o[s].element.css("display"),o[s].visible&&("mousedown"===a&&o[s]._activate.call(o[s],i),o[s].offset=o[s].element.offset(),o[s].proportions({width:o[s].element[0].offsetWidth,height:o[s].element[0].offsetHeight}));}}},drop:function drop(e,i){var s=!1;return t.each((t.ui.ddmanager.droppables[e.options.scope]||[]).slice(),function(){this.options&&(!this.options.disabled&&this.visible&&v(e,this,this.options.tolerance,i)&&(s=this._drop.call(this,i)||s),!this.options.disabled&&this.visible&&this.accept.call(this.element[0],e.currentItem||e.element)&&(this.isout=!0,this.isover=!1,this._deactivate.call(this,i)));}),s;},dragStart:function dragStart(e,i){e.element.parentsUntil("body").on("scroll.droppable",function(){e.options.refreshPositions||t.ui.ddmanager.prepareOffsets(e,i);});},drag:function drag(e,i){e.options.refreshPositions&&t.ui.ddmanager.prepareOffsets(e,i),t.each(t.ui.ddmanager.droppables[e.options.scope]||[],function(){if(!this.options.disabled&&!this.greedyChild&&this.visible){var s,n,o,a=v(e,this,this.options.tolerance,i),r=!a&&this.isover?"isout":a&&!this.isover?"isover":null;r&&(this.options.greedy&&(n=this.options.scope,o=this.element.parents(":data(ui-droppable)").filter(function(){return t(this).droppable("instance").options.scope===n;}),o.length&&(s=t(o[0]).droppable("instance"),s.greedyChild="isover"===r)),s&&"isover"===r&&(s.isover=!1,s.isout=!0,s._out.call(s,i)),this[r]=!0,this["isout"===r?"isover":"isout"]=!1,this["isover"===r?"_over":"_out"].call(this,i),s&&"isout"===r&&(s.isout=!1,s.isover=!0,s._over.call(s,i)));}});},dragStop:function dragStop(e,i){e.element.parentsUntil("body").off("scroll.droppable"),e.options.refreshPositions||t.ui.ddmanager.prepareOffsets(e,i);}},t.uiBackCompat!==!1&&t.widget("ui.droppable",t.ui.droppable,{options:{hoverClass:!1,activeClass:!1},_addActiveClass:function _addActiveClass(){this._super(),this.options.activeClass&&this.element.addClass(this.options.activeClass);},_removeActiveClass:function _removeActiveClass(){this._super(),this.options.activeClass&&this.element.removeClass(this.options.activeClass);},_addHoverClass:function _addHoverClass(){this._super(),this.options.hoverClass&&this.element.addClass(this.options.hoverClass);},_removeHoverClass:function _removeHoverClass(){this._super(),this.options.hoverClass&&this.element.removeClass(this.options.hoverClass);}}),t.ui.droppable,t.widget("ui.progressbar",{version:"1.12.1",options:{classes:{"ui-progressbar":"ui-corner-all","ui-progressbar-value":"ui-corner-left","ui-progressbar-complete":"ui-corner-right"},max:100,value:0,change:null,complete:null},min:0,_create:function _create(){this.oldValue=this.options.value=this._constrainedValue(),this.element.attr({role:"progressbar","aria-valuemin":this.min}),this._addClass("ui-progressbar","ui-widget ui-widget-content"),this.valueDiv=t("<div>").appendTo(this.element),this._addClass(this.valueDiv,"ui-progressbar-value","ui-widget-header"),this._refreshValue();},_destroy:function _destroy(){this.element.removeAttr("role aria-valuemin aria-valuemax aria-valuenow"),this.valueDiv.remove();},value:function value(t){return void 0===t?this.options.value:(this.options.value=this._constrainedValue(t),this._refreshValue(),void 0);},_constrainedValue:function _constrainedValue(t){return void 0===t&&(t=this.options.value),this.indeterminate=t===!1,"number"!=typeof t&&(t=0),this.indeterminate?!1:Math.min(this.options.max,Math.max(this.min,t));},_setOptions:function _setOptions(t){var e=t.value;delete t.value,this._super(t),this.options.value=this._constrainedValue(e),this._refreshValue();},_setOption:function _setOption(t,e){"max"===t&&(e=Math.max(this.min,e)),this._super(t,e);},_setOptionDisabled:function _setOptionDisabled(t){this._super(t),this.element.attr("aria-disabled",t),this._toggleClass(null,"ui-state-disabled",!!t);},_percentage:function _percentage(){return this.indeterminate?100:100*(this.options.value-this.min)/(this.options.max-this.min);},_refreshValue:function _refreshValue(){var e=this.options.value,i=this._percentage();this.valueDiv.toggle(this.indeterminate||e>this.min).width(i.toFixed(0)+"%"),this._toggleClass(this.valueDiv,"ui-progressbar-complete",null,e===this.options.max)._toggleClass("ui-progressbar-indeterminate",null,this.indeterminate),this.indeterminate?(this.element.removeAttr("aria-valuenow"),this.overlayDiv||(this.overlayDiv=t("<div>").appendTo(this.valueDiv),this._addClass(this.overlayDiv,"ui-progressbar-overlay"))):(this.element.attr({"aria-valuemax":this.options.max,"aria-valuenow":e}),this.overlayDiv&&(this.overlayDiv.remove(),this.overlayDiv=null)),this.oldValue!==e&&(this.oldValue=e,this._trigger("change")),e===this.options.max&&this._trigger("complete");}}),t.widget("ui.selectable",t.ui.mouse,{version:"1.12.1",options:{appendTo:"body",autoRefresh:!0,distance:0,filter:"*",tolerance:"touch",selected:null,selecting:null,start:null,stop:null,unselected:null,unselecting:null},_create:function _create(){var e=this;this._addClass("ui-selectable"),this.dragged=!1,this.refresh=function(){e.elementPos=t(e.element[0]).offset(),e.selectees=t(e.options.filter,e.element[0]),e._addClass(e.selectees,"ui-selectee"),e.selectees.each(function(){var i=t(this),s=i.offset(),n={left:s.left-e.elementPos.left,top:s.top-e.elementPos.top};t.data(this,"selectable-item",{element:this,$element:i,left:n.left,top:n.top,right:n.left+i.outerWidth(),bottom:n.top+i.outerHeight(),startselected:!1,selected:i.hasClass("ui-selected"),selecting:i.hasClass("ui-selecting"),unselecting:i.hasClass("ui-unselecting")});});},this.refresh(),this._mouseInit(),this.helper=t("<div>"),this._addClass(this.helper,"ui-selectable-helper");},_destroy:function _destroy(){this.selectees.removeData("selectable-item"),this._mouseDestroy();},_mouseStart:function _mouseStart(e){var i=this,s=this.options;this.opos=[e.pageX,e.pageY],this.elementPos=t(this.element[0]).offset(),this.options.disabled||(this.selectees=t(s.filter,this.element[0]),this._trigger("start",e),t(s.appendTo).append(this.helper),this.helper.css({left:e.pageX,top:e.pageY,width:0,height:0}),s.autoRefresh&&this.refresh(),this.selectees.filter(".ui-selected").each(function(){var s=t.data(this,"selectable-item");s.startselected=!0,e.metaKey||e.ctrlKey||(i._removeClass(s.$element,"ui-selected"),s.selected=!1,i._addClass(s.$element,"ui-unselecting"),s.unselecting=!0,i._trigger("unselecting",e,{unselecting:s.element}));}),t(e.target).parents().addBack().each(function(){var s,n=t.data(this,"selectable-item");return n?(s=!e.metaKey&&!e.ctrlKey||!n.$element.hasClass("ui-selected"),i._removeClass(n.$element,s?"ui-unselecting":"ui-selected")._addClass(n.$element,s?"ui-selecting":"ui-unselecting"),n.unselecting=!s,n.selecting=s,n.selected=s,s?i._trigger("selecting",e,{selecting:n.element}):i._trigger("unselecting",e,{unselecting:n.element}),!1):void 0;}));},_mouseDrag:function _mouseDrag(e){if(this.dragged=!0,!this.options.disabled){var i,s=this,n=this.options,o=this.opos[0],a=this.opos[1],r=e.pageX,h=e.pageY;return o>r&&(i=r,r=o,o=i),a>h&&(i=h,h=a,a=i),this.helper.css({left:o,top:a,width:r-o,height:h-a}),this.selectees.each(function(){var i=t.data(this,"selectable-item"),l=!1,c={};i&&i.element!==s.element[0]&&(c.left=i.left+s.elementPos.left,c.right=i.right+s.elementPos.left,c.top=i.top+s.elementPos.top,c.bottom=i.bottom+s.elementPos.top,"touch"===n.tolerance?l=!(c.left>r||o>c.right||c.top>h||a>c.bottom):"fit"===n.tolerance&&(l=c.left>o&&r>c.right&&c.top>a&&h>c.bottom),l?(i.selected&&(s._removeClass(i.$element,"ui-selected"),i.selected=!1),i.unselecting&&(s._removeClass(i.$element,"ui-unselecting"),i.unselecting=!1),i.selecting||(s._addClass(i.$element,"ui-selecting"),i.selecting=!0,s._trigger("selecting",e,{selecting:i.element}))):(i.selecting&&((e.metaKey||e.ctrlKey)&&i.startselected?(s._removeClass(i.$element,"ui-selecting"),i.selecting=!1,s._addClass(i.$element,"ui-selected"),i.selected=!0):(s._removeClass(i.$element,"ui-selecting"),i.selecting=!1,i.startselected&&(s._addClass(i.$element,"ui-unselecting"),i.unselecting=!0),s._trigger("unselecting",e,{unselecting:i.element}))),i.selected&&(e.metaKey||e.ctrlKey||i.startselected||(s._removeClass(i.$element,"ui-selected"),i.selected=!1,s._addClass(i.$element,"ui-unselecting"),i.unselecting=!0,s._trigger("unselecting",e,{unselecting:i.element})))));}),!1;}},_mouseStop:function _mouseStop(e){var i=this;return this.dragged=!1,t(".ui-unselecting",this.element[0]).each(function(){var s=t.data(this,"selectable-item");i._removeClass(s.$element,"ui-unselecting"),s.unselecting=!1,s.startselected=!1,i._trigger("unselected",e,{unselected:s.element});}),t(".ui-selecting",this.element[0]).each(function(){var s=t.data(this,"selectable-item");i._removeClass(s.$element,"ui-selecting")._addClass(s.$element,"ui-selected"),s.selecting=!1,s.selected=!0,s.startselected=!0,i._trigger("selected",e,{selected:s.element});}),this._trigger("stop",e),this.helper.remove(),!1;}}),t.widget("ui.selectmenu",[t.ui.formResetMixin,{version:"1.12.1",defaultElement:"<select>",options:{appendTo:null,classes:{"ui-selectmenu-button-open":"ui-corner-top","ui-selectmenu-button-closed":"ui-corner-all"},disabled:null,icons:{button:"ui-icon-triangle-1-s"},position:{my:"left top",at:"left bottom",collision:"none"},width:!1,change:null,close:null,focus:null,open:null,select:null},_create:function _create(){var e=this.element.uniqueId().attr("id");this.ids={element:e,button:e+"-button",menu:e+"-menu"},this._drawButton(),this._drawMenu(),this._bindFormResetHandler(),this._rendered=!1,this.menuItems=t();},_drawButton:function _drawButton(){var e,i=this,s=this._parseOption(this.element.find("option:selected"),this.element[0].selectedIndex);this.labels=this.element.labels().attr("for",this.ids.button),this._on(this.labels,{click:function click(t){this.button.focus(),t.preventDefault();}}),this.element.hide(),this.button=t("<span>",{tabindex:this.options.disabled?-1:0,id:this.ids.button,role:"combobox","aria-expanded":"false","aria-autocomplete":"list","aria-owns":this.ids.menu,"aria-haspopup":"true",title:this.element.attr("title")}).insertAfter(this.element),this._addClass(this.button,"ui-selectmenu-button ui-selectmenu-button-closed","ui-button ui-widget"),e=t("<span>").appendTo(this.button),this._addClass(e,"ui-selectmenu-icon","ui-icon "+this.options.icons.button),this.buttonItem=this._renderButtonItem(s).appendTo(this.button),this.options.width!==!1&&this._resizeButton(),this._on(this.button,this._buttonEvents),this.button.one("focusin",function(){i._rendered||i._refreshMenu();});},_drawMenu:function _drawMenu(){var e=this;this.menu=t("<ul>",{"aria-hidden":"true","aria-labelledby":this.ids.button,id:this.ids.menu}),this.menuWrap=t("<div>").append(this.menu),this._addClass(this.menuWrap,"ui-selectmenu-menu","ui-front"),this.menuWrap.appendTo(this._appendTo()),this.menuInstance=this.menu.menu({classes:{"ui-menu":"ui-corner-bottom"},role:"listbox",select:function select(t,i){t.preventDefault(),e._setSelection(),e._select(i.item.data("ui-selectmenu-item"),t);},focus:function focus(t,i){var s=i.item.data("ui-selectmenu-item");null!=e.focusIndex&&s.index!==e.focusIndex&&(e._trigger("focus",t,{item:s}),e.isOpen||e._select(s,t)),e.focusIndex=s.index,e.button.attr("aria-activedescendant",e.menuItems.eq(s.index).attr("id"));}}).menu("instance"),this.menuInstance._off(this.menu,"mouseleave"),this.menuInstance._closeOnDocumentClick=function(){return!1;},this.menuInstance._isDivider=function(){return!1;};},refresh:function refresh(){this._refreshMenu(),this.buttonItem.replaceWith(this.buttonItem=this._renderButtonItem(this._getSelectedItem().data("ui-selectmenu-item")||{})),null===this.options.width&&this._resizeButton();},_refreshMenu:function _refreshMenu(){var t,e=this.element.find("option");this.menu.empty(),this._parseOptions(e),this._renderMenu(this.menu,this.items),this.menuInstance.refresh(),this.menuItems=this.menu.find("li").not(".ui-selectmenu-optgroup").find(".ui-menu-item-wrapper"),this._rendered=!0,e.length&&(t=this._getSelectedItem(),this.menuInstance.focus(null,t),this._setAria(t.data("ui-selectmenu-item")),this._setOption("disabled",this.element.prop("disabled")));},open:function open(t){this.options.disabled||(this._rendered?(this._removeClass(this.menu.find(".ui-state-active"),null,"ui-state-active"),this.menuInstance.focus(null,this._getSelectedItem())):this._refreshMenu(),this.menuItems.length&&(this.isOpen=!0,this._toggleAttr(),this._resizeMenu(),this._position(),this._on(this.document,this._documentClick),this._trigger("open",t)));},_position:function _position(){this.menuWrap.position(t.extend({of:this.button},this.options.position));},close:function close(t){this.isOpen&&(this.isOpen=!1,this._toggleAttr(),this.range=null,this._off(this.document),this._trigger("close",t));},widget:function widget(){return this.button;},menuWidget:function menuWidget(){return this.menu;},_renderButtonItem:function _renderButtonItem(e){var i=t("<span>");return this._setText(i,e.label),this._addClass(i,"ui-selectmenu-text"),i;},_renderMenu:function _renderMenu(e,i){var s=this,n="";t.each(i,function(i,o){var a;o.optgroup!==n&&(a=t("<li>",{text:o.optgroup}),s._addClass(a,"ui-selectmenu-optgroup","ui-menu-divider"+(o.element.parent("optgroup").prop("disabled")?" ui-state-disabled":"")),a.appendTo(e),n=o.optgroup),s._renderItemData(e,o);});},_renderItemData:function _renderItemData(t,e){return this._renderItem(t,e).data("ui-selectmenu-item",e);},_renderItem:function _renderItem(e,i){var s=t("<li>"),n=t("<div>",{title:i.element.attr("title")});return i.disabled&&this._addClass(s,null,"ui-state-disabled"),this._setText(n,i.label),s.append(n).appendTo(e);},_setText:function _setText(t,e){e?t.text(e):t.html("&#160;");},_move:function _move(t,e){var i,s,n=".ui-menu-item";this.isOpen?i=this.menuItems.eq(this.focusIndex).parent("li"):(i=this.menuItems.eq(this.element[0].selectedIndex).parent("li"),n+=":not(.ui-state-disabled)"),s="first"===t||"last"===t?i["first"===t?"prevAll":"nextAll"](n).eq(-1):i[t+"All"](n).eq(0),s.length&&this.menuInstance.focus(e,s);},_getSelectedItem:function _getSelectedItem(){return this.menuItems.eq(this.element[0].selectedIndex).parent("li");},_toggle:function _toggle(t){this[this.isOpen?"close":"open"](t);},_setSelection:function _setSelection(){var t;this.range&&(window.getSelection?(t=window.getSelection(),t.removeAllRanges(),t.addRange(this.range)):this.range.select(),this.button.focus());},_documentClick:{mousedown:function mousedown(e){this.isOpen&&(t(e.target).closest(".ui-selectmenu-menu, #"+t.ui.escapeSelector(this.ids.button)).length||this.close(e));}},_buttonEvents:{mousedown:function mousedown(){var t;window.getSelection?(t=window.getSelection(),t.rangeCount&&(this.range=t.getRangeAt(0))):this.range=document.selection.createRange();},click:function click(t){this._setSelection(),this._toggle(t);},keydown:function keydown(e){var i=!0;switch(e.keyCode){case t.ui.keyCode.TAB:case t.ui.keyCode.ESCAPE:this.close(e),i=!1;break;case t.ui.keyCode.ENTER:this.isOpen&&this._selectFocusedItem(e);break;case t.ui.keyCode.UP:e.altKey?this._toggle(e):this._move("prev",e);break;case t.ui.keyCode.DOWN:e.altKey?this._toggle(e):this._move("next",e);break;case t.ui.keyCode.SPACE:this.isOpen?this._selectFocusedItem(e):this._toggle(e);break;case t.ui.keyCode.LEFT:this._move("prev",e);break;case t.ui.keyCode.RIGHT:this._move("next",e);break;case t.ui.keyCode.HOME:case t.ui.keyCode.PAGE_UP:this._move("first",e);break;case t.ui.keyCode.END:case t.ui.keyCode.PAGE_DOWN:this._move("last",e);break;default:this.menu.trigger(e),i=!1;}i&&e.preventDefault();}},_selectFocusedItem:function _selectFocusedItem(t){var e=this.menuItems.eq(this.focusIndex).parent("li");e.hasClass("ui-state-disabled")||this._select(e.data("ui-selectmenu-item"),t);},_select:function _select(t,e){var i=this.element[0].selectedIndex;this.element[0].selectedIndex=t.index,this.buttonItem.replaceWith(this.buttonItem=this._renderButtonItem(t)),this._setAria(t),this._trigger("select",e,{item:t}),t.index!==i&&this._trigger("change",e,{item:t}),this.close(e);},_setAria:function _setAria(t){var e=this.menuItems.eq(t.index).attr("id");this.button.attr({"aria-labelledby":e,"aria-activedescendant":e}),this.menu.attr("aria-activedescendant",e);},_setOption:function _setOption(t,e){if("icons"===t){var i=this.button.find("span.ui-icon");this._removeClass(i,null,this.options.icons.button)._addClass(i,null,e.button);}this._super(t,e),"appendTo"===t&&this.menuWrap.appendTo(this._appendTo()),"width"===t&&this._resizeButton();},_setOptionDisabled:function _setOptionDisabled(t){this._super(t),this.menuInstance.option("disabled",t),this.button.attr("aria-disabled",t),this._toggleClass(this.button,null,"ui-state-disabled",t),this.element.prop("disabled",t),t?(this.button.attr("tabindex",-1),this.close()):this.button.attr("tabindex",0);},_appendTo:function _appendTo(){var e=this.options.appendTo;return e&&(e=e.jquery||e.nodeType?t(e):this.document.find(e).eq(0)),e&&e[0]||(e=this.element.closest(".ui-front, dialog")),e.length||(e=this.document[0].body),e;},_toggleAttr:function _toggleAttr(){this.button.attr("aria-expanded",this.isOpen),this._removeClass(this.button,"ui-selectmenu-button-"+(this.isOpen?"closed":"open"))._addClass(this.button,"ui-selectmenu-button-"+(this.isOpen?"open":"closed"))._toggleClass(this.menuWrap,"ui-selectmenu-open",null,this.isOpen),this.menu.attr("aria-hidden",!this.isOpen);},_resizeButton:function _resizeButton(){var t=this.options.width;return t===!1?(this.button.css("width",""),void 0):(null===t&&(t=this.element.show().outerWidth(),this.element.hide()),this.button.outerWidth(t),void 0);},_resizeMenu:function _resizeMenu(){this.menu.outerWidth(Math.max(this.button.outerWidth(),this.menu.width("").outerWidth()+1));},_getCreateOptions:function _getCreateOptions(){var t=this._super();return t.disabled=this.element.prop("disabled"),t;},_parseOptions:function _parseOptions(e){var i=this,s=[];e.each(function(e,n){s.push(i._parseOption(t(n),e));}),this.items=s;},_parseOption:function _parseOption(t,e){var i=t.parent("optgroup");return{element:t,index:e,value:t.val(),label:t.text(),optgroup:i.attr("label")||"",disabled:i.prop("disabled")||t.prop("disabled")};},_destroy:function _destroy(){this._unbindFormResetHandler(),this.menuWrap.remove(),this.button.remove(),this.element.show(),this.element.removeUniqueId(),this.labels.attr("for",this.ids.element);}}]),t.widget("ui.slider",t.ui.mouse,{version:"1.12.1",widgetEventPrefix:"slide",options:{animate:!1,classes:{"ui-slider":"ui-corner-all","ui-slider-handle":"ui-corner-all","ui-slider-range":"ui-corner-all ui-widget-header"},distance:0,max:100,min:0,orientation:"horizontal",range:!1,step:1,value:0,values:null,change:null,slide:null,start:null,stop:null},numPages:5,_create:function _create(){this._keySliding=!1,this._mouseSliding=!1,this._animateOff=!0,this._handleIndex=null,this._detectOrientation(),this._mouseInit(),this._calculateNewMax(),this._addClass("ui-slider ui-slider-"+this.orientation,"ui-widget ui-widget-content"),this._refresh(),this._animateOff=!1;},_refresh:function _refresh(){this._createRange(),this._createHandles(),this._setupEvents(),this._refreshValue();},_createHandles:function _createHandles(){var e,i,s=this.options,n=this.element.find(".ui-slider-handle"),o="<span tabindex='0'></span>",a=[];for(i=s.values&&s.values.length||1,n.length>i&&(n.slice(i).remove(),n=n.slice(0,i)),e=n.length;i>e;e++){a.push(o);}this.handles=n.add(t(a.join("")).appendTo(this.element)),this._addClass(this.handles,"ui-slider-handle","ui-state-default"),this.handle=this.handles.eq(0),this.handles.each(function(e){t(this).data("ui-slider-handle-index",e).attr("tabIndex",0);});},_createRange:function _createRange(){var e=this.options;e.range?(e.range===!0&&(e.values?e.values.length&&2!==e.values.length?e.values=[e.values[0],e.values[0]]:t.isArray(e.values)&&(e.values=e.values.slice(0)):e.values=[this._valueMin(),this._valueMin()]),this.range&&this.range.length?(this._removeClass(this.range,"ui-slider-range-min ui-slider-range-max"),this.range.css({left:"",bottom:""})):(this.range=t("<div>").appendTo(this.element),this._addClass(this.range,"ui-slider-range")),("min"===e.range||"max"===e.range)&&this._addClass(this.range,"ui-slider-range-"+e.range)):(this.range&&this.range.remove(),this.range=null);},_setupEvents:function _setupEvents(){this._off(this.handles),this._on(this.handles,this._handleEvents),this._hoverable(this.handles),this._focusable(this.handles);},_destroy:function _destroy(){this.handles.remove(),this.range&&this.range.remove(),this._mouseDestroy();},_mouseCapture:function _mouseCapture(e){var i,s,n,o,a,r,h,l,c=this,u=this.options;return u.disabled?!1:(this.elementSize={width:this.element.outerWidth(),height:this.element.outerHeight()},this.elementOffset=this.element.offset(),i={x:e.pageX,y:e.pageY},s=this._normValueFromMouse(i),n=this._valueMax()-this._valueMin()+1,this.handles.each(function(e){var i=Math.abs(s-c.values(e));(n>i||n===i&&(e===c._lastChangedValue||c.values(e)===u.min))&&(n=i,o=t(this),a=e);}),r=this._start(e,a),r===!1?!1:(this._mouseSliding=!0,this._handleIndex=a,this._addClass(o,null,"ui-state-active"),o.trigger("focus"),h=o.offset(),l=!t(e.target).parents().addBack().is(".ui-slider-handle"),this._clickOffset=l?{left:0,top:0}:{left:e.pageX-h.left-o.width()/2,top:e.pageY-h.top-o.height()/2-(parseInt(o.css("borderTopWidth"),10)||0)-(parseInt(o.css("borderBottomWidth"),10)||0)+(parseInt(o.css("marginTop"),10)||0)},this.handles.hasClass("ui-state-hover")||this._slide(e,a,s),this._animateOff=!0,!0));},_mouseStart:function _mouseStart(){return!0;},_mouseDrag:function _mouseDrag(t){var e={x:t.pageX,y:t.pageY},i=this._normValueFromMouse(e);return this._slide(t,this._handleIndex,i),!1;},_mouseStop:function _mouseStop(t){return this._removeClass(this.handles,null,"ui-state-active"),this._mouseSliding=!1,this._stop(t,this._handleIndex),this._change(t,this._handleIndex),this._handleIndex=null,this._clickOffset=null,this._animateOff=!1,!1;},_detectOrientation:function _detectOrientation(){this.orientation="vertical"===this.options.orientation?"vertical":"horizontal";},_normValueFromMouse:function _normValueFromMouse(t){var e,i,s,n,o;return"horizontal"===this.orientation?(e=this.elementSize.width,i=t.x-this.elementOffset.left-(this._clickOffset?this._clickOffset.left:0)):(e=this.elementSize.height,i=t.y-this.elementOffset.top-(this._clickOffset?this._clickOffset.top:0)),s=i/e,s>1&&(s=1),0>s&&(s=0),"vertical"===this.orientation&&(s=1-s),n=this._valueMax()-this._valueMin(),o=this._valueMin()+s*n,this._trimAlignValue(o);},_uiHash:function _uiHash(t,e,i){var s={handle:this.handles[t],handleIndex:t,value:void 0!==e?e:this.value()};return this._hasMultipleValues()&&(s.value=void 0!==e?e:this.values(t),s.values=i||this.values()),s;},_hasMultipleValues:function _hasMultipleValues(){return this.options.values&&this.options.values.length;},_start:function _start(t,e){return this._trigger("start",t,this._uiHash(e));},_slide:function _slide(t,e,i){var s,n,o=this.value(),a=this.values();this._hasMultipleValues()&&(n=this.values(e?0:1),o=this.values(e),2===this.options.values.length&&this.options.range===!0&&(i=0===e?Math.min(n,i):Math.max(n,i)),a[e]=i),i!==o&&(s=this._trigger("slide",t,this._uiHash(e,i,a)),s!==!1&&(this._hasMultipleValues()?this.values(e,i):this.value(i)));},_stop:function _stop(t,e){this._trigger("stop",t,this._uiHash(e));},_change:function _change(t,e){this._keySliding||this._mouseSliding||(this._lastChangedValue=e,this._trigger("change",t,this._uiHash(e)));},value:function value(t){return arguments.length?(this.options.value=this._trimAlignValue(t),this._refreshValue(),this._change(null,0),void 0):this._value();},values:function values(e,i){var s,n,o;if(arguments.length>1)return this.options.values[e]=this._trimAlignValue(i),this._refreshValue(),this._change(null,e),void 0;if(!arguments.length)return this._values();if(!t.isArray(arguments[0]))return this._hasMultipleValues()?this._values(e):this.value();for(s=this.options.values,n=arguments[0],o=0;s.length>o;o+=1){s[o]=this._trimAlignValue(n[o]),this._change(null,o);}this._refreshValue();},_setOption:function _setOption(e,i){var s,n=0;switch("range"===e&&this.options.range===!0&&("min"===i?(this.options.value=this._values(0),this.options.values=null):"max"===i&&(this.options.value=this._values(this.options.values.length-1),this.options.values=null)),t.isArray(this.options.values)&&(n=this.options.values.length),this._super(e,i),e){case"orientation":this._detectOrientation(),this._removeClass("ui-slider-horizontal ui-slider-vertical")._addClass("ui-slider-"+this.orientation),this._refreshValue(),this.options.range&&this._refreshRange(i),this.handles.css("horizontal"===i?"bottom":"left","");break;case"value":this._animateOff=!0,this._refreshValue(),this._change(null,0),this._animateOff=!1;break;case"values":for(this._animateOff=!0,this._refreshValue(),s=n-1;s>=0;s--){this._change(null,s);}this._animateOff=!1;break;case"step":case"min":case"max":this._animateOff=!0,this._calculateNewMax(),this._refreshValue(),this._animateOff=!1;break;case"range":this._animateOff=!0,this._refresh(),this._animateOff=!1;}},_setOptionDisabled:function _setOptionDisabled(t){this._super(t),this._toggleClass(null,"ui-state-disabled",!!t);},_value:function _value(){var t=this.options.value;return t=this._trimAlignValue(t);},_values:function _values(t){var e,i,s;if(arguments.length)return e=this.options.values[t],e=this._trimAlignValue(e);if(this._hasMultipleValues()){for(i=this.options.values.slice(),s=0;i.length>s;s+=1){i[s]=this._trimAlignValue(i[s]);}return i;}return[];},_trimAlignValue:function _trimAlignValue(t){if(this._valueMin()>=t)return this._valueMin();if(t>=this._valueMax())return this._valueMax();var e=this.options.step>0?this.options.step:1,i=(t-this._valueMin())%e,s=t-i;return 2*Math.abs(i)>=e&&(s+=i>0?e:-e),parseFloat(s.toFixed(5));},_calculateNewMax:function _calculateNewMax(){var t=this.options.max,e=this._valueMin(),i=this.options.step,s=Math.round((t-e)/i)*i;t=s+e,t>this.options.max&&(t-=i),this.max=parseFloat(t.toFixed(this._precision()));},_precision:function _precision(){var t=this._precisionOf(this.options.step);return null!==this.options.min&&(t=Math.max(t,this._precisionOf(this.options.min))),t;},_precisionOf:function _precisionOf(t){var e=""+t,i=e.indexOf(".");return-1===i?0:e.length-i-1;},_valueMin:function _valueMin(){return this.options.min;},_valueMax:function _valueMax(){return this.max;},_refreshRange:function _refreshRange(t){"vertical"===t&&this.range.css({width:"",left:""}),"horizontal"===t&&this.range.css({height:"",bottom:""});},_refreshValue:function _refreshValue(){var e,i,s,n,o,a=this.options.range,r=this.options,h=this,l=this._animateOff?!1:r.animate,c={};this._hasMultipleValues()?this.handles.each(function(s){i=100*((h.values(s)-h._valueMin())/(h._valueMax()-h._valueMin())),c["horizontal"===h.orientation?"left":"bottom"]=i+"%",t(this).stop(1,1)[l?"animate":"css"](c,r.animate),h.options.range===!0&&("horizontal"===h.orientation?(0===s&&h.range.stop(1,1)[l?"animate":"css"]({left:i+"%"},r.animate),1===s&&h.range[l?"animate":"css"]({width:i-e+"%"},{queue:!1,duration:r.animate})):(0===s&&h.range.stop(1,1)[l?"animate":"css"]({bottom:i+"%"},r.animate),1===s&&h.range[l?"animate":"css"]({height:i-e+"%"},{queue:!1,duration:r.animate}))),e=i;}):(s=this.value(),n=this._valueMin(),o=this._valueMax(),i=o!==n?100*((s-n)/(o-n)):0,c["horizontal"===this.orientation?"left":"bottom"]=i+"%",this.handle.stop(1,1)[l?"animate":"css"](c,r.animate),"min"===a&&"horizontal"===this.orientation&&this.range.stop(1,1)[l?"animate":"css"]({width:i+"%"},r.animate),"max"===a&&"horizontal"===this.orientation&&this.range.stop(1,1)[l?"animate":"css"]({width:100-i+"%"},r.animate),"min"===a&&"vertical"===this.orientation&&this.range.stop(1,1)[l?"animate":"css"]({height:i+"%"},r.animate),"max"===a&&"vertical"===this.orientation&&this.range.stop(1,1)[l?"animate":"css"]({height:100-i+"%"},r.animate));},_handleEvents:{keydown:function keydown(e){var i,s,n,o,a=t(e.target).data("ui-slider-handle-index");switch(e.keyCode){case t.ui.keyCode.HOME:case t.ui.keyCode.END:case t.ui.keyCode.PAGE_UP:case t.ui.keyCode.PAGE_DOWN:case t.ui.keyCode.UP:case t.ui.keyCode.RIGHT:case t.ui.keyCode.DOWN:case t.ui.keyCode.LEFT:if(e.preventDefault(),!this._keySliding&&(this._keySliding=!0,this._addClass(t(e.target),null,"ui-state-active"),i=this._start(e,a),i===!1))return;}switch(o=this.options.step,s=n=this._hasMultipleValues()?this.values(a):this.value(),e.keyCode){case t.ui.keyCode.HOME:n=this._valueMin();break;case t.ui.keyCode.END:n=this._valueMax();break;case t.ui.keyCode.PAGE_UP:n=this._trimAlignValue(s+(this._valueMax()-this._valueMin())/this.numPages);break;case t.ui.keyCode.PAGE_DOWN:n=this._trimAlignValue(s-(this._valueMax()-this._valueMin())/this.numPages);break;case t.ui.keyCode.UP:case t.ui.keyCode.RIGHT:if(s===this._valueMax())return;n=this._trimAlignValue(s+o);break;case t.ui.keyCode.DOWN:case t.ui.keyCode.LEFT:if(s===this._valueMin())return;n=this._trimAlignValue(s-o);}this._slide(e,a,n);},keyup:function keyup(e){var i=t(e.target).data("ui-slider-handle-index");this._keySliding&&(this._keySliding=!1,this._stop(e,i),this._change(e,i),this._removeClass(t(e.target),null,"ui-state-active"));}}}),t.widget("ui.sortable",t.ui.mouse,{version:"1.12.1",widgetEventPrefix:"sort",ready:!1,options:{appendTo:"parent",axis:!1,connectWith:!1,containment:!1,cursor:"auto",cursorAt:!1,dropOnEmpty:!0,forcePlaceholderSize:!1,forceHelperSize:!1,grid:!1,handle:!1,helper:"original",items:"> *",opacity:!1,placeholder:!1,revert:!1,scroll:!0,scrollSensitivity:20,scrollSpeed:20,scope:"default",tolerance:"intersect",zIndex:1e3,activate:null,beforeStop:null,change:null,deactivate:null,out:null,over:null,receive:null,remove:null,sort:null,start:null,stop:null,update:null},_isOverAxis:function _isOverAxis(t,e,i){return t>=e&&e+i>t;},_isFloating:function _isFloating(t){return /left|right/.test(t.css("float"))||/inline|table-cell/.test(t.css("display"));},_create:function _create(){this.containerCache={},this._addClass("ui-sortable"),this.refresh(),this.offset=this.element.offset(),this._mouseInit(),this._setHandleClassName(),this.ready=!0;},_setOption:function _setOption(t,e){this._super(t,e),"handle"===t&&this._setHandleClassName();},_setHandleClassName:function _setHandleClassName(){var e=this;this._removeClass(this.element.find(".ui-sortable-handle"),"ui-sortable-handle"),t.each(this.items,function(){e._addClass(this.instance.options.handle?this.item.find(this.instance.options.handle):this.item,"ui-sortable-handle");});},_destroy:function _destroy(){this._mouseDestroy();for(var t=this.items.length-1;t>=0;t--){this.items[t].item.removeData(this.widgetName+"-item");}return this;},_mouseCapture:function _mouseCapture(e,i){var s=null,n=!1,o=this;return this.reverting?!1:this.options.disabled||"static"===this.options.type?!1:(this._refreshItems(e),t(e.target).parents().each(function(){return t.data(this,o.widgetName+"-item")===o?(s=t(this),!1):void 0;}),t.data(e.target,o.widgetName+"-item")===o&&(s=t(e.target)),s?!this.options.handle||i||(t(this.options.handle,s).find("*").addBack().each(function(){this===e.target&&(n=!0);}),n)?(this.currentItem=s,this._removeCurrentsFromItems(),!0):!1:!1);},_mouseStart:function _mouseStart(e,i,s){var n,o,a=this.options;if(this.currentContainer=this,this.refreshPositions(),this.helper=this._createHelper(e),this._cacheHelperProportions(),this._cacheMargins(),this.scrollParent=this.helper.scrollParent(),this.offset=this.currentItem.offset(),this.offset={top:this.offset.top-this.margins.top,left:this.offset.left-this.margins.left},t.extend(this.offset,{click:{left:e.pageX-this.offset.left,top:e.pageY-this.offset.top},parent:this._getParentOffset(),relative:this._getRelativeOffset()}),this.helper.css("position","absolute"),this.cssPosition=this.helper.css("position"),this.originalPosition=this._generatePosition(e),this.originalPageX=e.pageX,this.originalPageY=e.pageY,a.cursorAt&&this._adjustOffsetFromHelper(a.cursorAt),this.domPosition={prev:this.currentItem.prev()[0],parent:this.currentItem.parent()[0]},this.helper[0]!==this.currentItem[0]&&this.currentItem.hide(),this._createPlaceholder(),a.containment&&this._setContainment(),a.cursor&&"auto"!==a.cursor&&(o=this.document.find("body"),this.storedCursor=o.css("cursor"),o.css("cursor",a.cursor),this.storedStylesheet=t("<style>*{ cursor: "+a.cursor+" !important; }</style>").appendTo(o)),a.opacity&&(this.helper.css("opacity")&&(this._storedOpacity=this.helper.css("opacity")),this.helper.css("opacity",a.opacity)),a.zIndex&&(this.helper.css("zIndex")&&(this._storedZIndex=this.helper.css("zIndex")),this.helper.css("zIndex",a.zIndex)),this.scrollParent[0]!==this.document[0]&&"HTML"!==this.scrollParent[0].tagName&&(this.overflowOffset=this.scrollParent.offset()),this._trigger("start",e,this._uiHash()),this._preserveHelperProportions||this._cacheHelperProportions(),!s)for(n=this.containers.length-1;n>=0;n--){this.containers[n]._trigger("activate",e,this._uiHash(this));}return t.ui.ddmanager&&(t.ui.ddmanager.current=this),t.ui.ddmanager&&!a.dropBehaviour&&t.ui.ddmanager.prepareOffsets(this,e),this.dragging=!0,this._addClass(this.helper,"ui-sortable-helper"),this._mouseDrag(e),!0;},_mouseDrag:function _mouseDrag(e){var i,s,n,o,a=this.options,r=!1;for(this.position=this._generatePosition(e),this.positionAbs=this._convertPositionTo("absolute"),this.lastPositionAbs||(this.lastPositionAbs=this.positionAbs),this.options.scroll&&(this.scrollParent[0]!==this.document[0]&&"HTML"!==this.scrollParent[0].tagName?(this.overflowOffset.top+this.scrollParent[0].offsetHeight-e.pageY<a.scrollSensitivity?this.scrollParent[0].scrollTop=r=this.scrollParent[0].scrollTop+a.scrollSpeed:e.pageY-this.overflowOffset.top<a.scrollSensitivity&&(this.scrollParent[0].scrollTop=r=this.scrollParent[0].scrollTop-a.scrollSpeed),this.overflowOffset.left+this.scrollParent[0].offsetWidth-e.pageX<a.scrollSensitivity?this.scrollParent[0].scrollLeft=r=this.scrollParent[0].scrollLeft+a.scrollSpeed:e.pageX-this.overflowOffset.left<a.scrollSensitivity&&(this.scrollParent[0].scrollLeft=r=this.scrollParent[0].scrollLeft-a.scrollSpeed)):(e.pageY-this.document.scrollTop()<a.scrollSensitivity?r=this.document.scrollTop(this.document.scrollTop()-a.scrollSpeed):this.window.height()-(e.pageY-this.document.scrollTop())<a.scrollSensitivity&&(r=this.document.scrollTop(this.document.scrollTop()+a.scrollSpeed)),e.pageX-this.document.scrollLeft()<a.scrollSensitivity?r=this.document.scrollLeft(this.document.scrollLeft()-a.scrollSpeed):this.window.width()-(e.pageX-this.document.scrollLeft())<a.scrollSensitivity&&(r=this.document.scrollLeft(this.document.scrollLeft()+a.scrollSpeed))),r!==!1&&t.ui.ddmanager&&!a.dropBehaviour&&t.ui.ddmanager.prepareOffsets(this,e)),this.positionAbs=this._convertPositionTo("absolute"),this.options.axis&&"y"===this.options.axis||(this.helper[0].style.left=this.position.left+"px"),this.options.axis&&"x"===this.options.axis||(this.helper[0].style.top=this.position.top+"px"),i=this.items.length-1;i>=0;i--){if(s=this.items[i],n=s.item[0],o=this._intersectsWithPointer(s),o&&s.instance===this.currentContainer&&n!==this.currentItem[0]&&this.placeholder[1===o?"next":"prev"]()[0]!==n&&!t.contains(this.placeholder[0],n)&&("semi-dynamic"===this.options.type?!t.contains(this.element[0],n):!0)){if(this.direction=1===o?"down":"up","pointer"!==this.options.tolerance&&!this._intersectsWithSides(s))break;this._rearrange(e,s),this._trigger("change",e,this._uiHash());break;}}return this._contactContainers(e),t.ui.ddmanager&&t.ui.ddmanager.drag(this,e),this._trigger("sort",e,this._uiHash()),this.lastPositionAbs=this.positionAbs,!1;},_mouseStop:function _mouseStop(e,i){if(e){if(t.ui.ddmanager&&!this.options.dropBehaviour&&t.ui.ddmanager.drop(this,e),this.options.revert){var s=this,n=this.placeholder.offset(),o=this.options.axis,a={};o&&"x"!==o||(a.left=n.left-this.offset.parent.left-this.margins.left+(this.offsetParent[0]===this.document[0].body?0:this.offsetParent[0].scrollLeft)),o&&"y"!==o||(a.top=n.top-this.offset.parent.top-this.margins.top+(this.offsetParent[0]===this.document[0].body?0:this.offsetParent[0].scrollTop)),this.reverting=!0,t(this.helper).animate(a,parseInt(this.options.revert,10)||500,function(){s._clear(e);});}else this._clear(e,i);return!1;}},cancel:function cancel(){if(this.dragging){this._mouseUp(new t.Event("mouseup",{target:null})),"original"===this.options.helper?(this.currentItem.css(this._storedCSS),this._removeClass(this.currentItem,"ui-sortable-helper")):this.currentItem.show();for(var e=this.containers.length-1;e>=0;e--){this.containers[e]._trigger("deactivate",null,this._uiHash(this)),this.containers[e].containerCache.over&&(this.containers[e]._trigger("out",null,this._uiHash(this)),this.containers[e].containerCache.over=0);}}return this.placeholder&&(this.placeholder[0].parentNode&&this.placeholder[0].parentNode.removeChild(this.placeholder[0]),"original"!==this.options.helper&&this.helper&&this.helper[0].parentNode&&this.helper.remove(),t.extend(this,{helper:null,dragging:!1,reverting:!1,_noFinalSort:null}),this.domPosition.prev?t(this.domPosition.prev).after(this.currentItem):t(this.domPosition.parent).prepend(this.currentItem)),this;},serialize:function serialize(e){var i=this._getItemsAsjQuery(e&&e.connected),s=[];return e=e||{},t(i).each(function(){var i=(t(e.item||this).attr(e.attribute||"id")||"").match(e.expression||/(.+)[\-=_](.+)/);i&&s.push((e.key||i[1]+"[]")+"="+(e.key&&e.expression?i[1]:i[2]));}),!s.length&&e.key&&s.push(e.key+"="),s.join("&");},toArray:function toArray(e){var i=this._getItemsAsjQuery(e&&e.connected),s=[];return e=e||{},i.each(function(){s.push(t(e.item||this).attr(e.attribute||"id")||"");}),s;},_intersectsWith:function _intersectsWith(t){var e=this.positionAbs.left,i=e+this.helperProportions.width,s=this.positionAbs.top,n=s+this.helperProportions.height,o=t.left,a=o+t.width,r=t.top,h=r+t.height,l=this.offset.click.top,c=this.offset.click.left,u="x"===this.options.axis||s+l>r&&h>s+l,d="y"===this.options.axis||e+c>o&&a>e+c,p=u&&d;return"pointer"===this.options.tolerance||this.options.forcePointerForContainers||"pointer"!==this.options.tolerance&&this.helperProportions[this.floating?"width":"height"]>t[this.floating?"width":"height"]?p:e+this.helperProportions.width/2>o&&a>i-this.helperProportions.width/2&&s+this.helperProportions.height/2>r&&h>n-this.helperProportions.height/2;},_intersectsWithPointer:function _intersectsWithPointer(t){var e,i,s="x"===this.options.axis||this._isOverAxis(this.positionAbs.top+this.offset.click.top,t.top,t.height),n="y"===this.options.axis||this._isOverAxis(this.positionAbs.left+this.offset.click.left,t.left,t.width),o=s&&n;return o?(e=this._getDragVerticalDirection(),i=this._getDragHorizontalDirection(),this.floating?"right"===i||"down"===e?2:1:e&&("down"===e?2:1)):!1;},_intersectsWithSides:function _intersectsWithSides(t){var e=this._isOverAxis(this.positionAbs.top+this.offset.click.top,t.top+t.height/2,t.height),i=this._isOverAxis(this.positionAbs.left+this.offset.click.left,t.left+t.width/2,t.width),s=this._getDragVerticalDirection(),n=this._getDragHorizontalDirection();return this.floating&&n?"right"===n&&i||"left"===n&&!i:s&&("down"===s&&e||"up"===s&&!e);},_getDragVerticalDirection:function _getDragVerticalDirection(){var t=this.positionAbs.top-this.lastPositionAbs.top;return 0!==t&&(t>0?"down":"up");},_getDragHorizontalDirection:function _getDragHorizontalDirection(){var t=this.positionAbs.left-this.lastPositionAbs.left;return 0!==t&&(t>0?"right":"left");},refresh:function refresh(t){return this._refreshItems(t),this._setHandleClassName(),this.refreshPositions(),this;},_connectWith:function _connectWith(){var t=this.options;return t.connectWith.constructor===String?[t.connectWith]:t.connectWith;},_getItemsAsjQuery:function _getItemsAsjQuery(e){function i(){r.push(this);}var s,n,o,a,r=[],h=[],l=this._connectWith();if(l&&e)for(s=l.length-1;s>=0;s--){for(o=t(l[s],this.document[0]),n=o.length-1;n>=0;n--){a=t.data(o[n],this.widgetFullName),a&&a!==this&&!a.options.disabled&&h.push([t.isFunction(a.options.items)?a.options.items.call(a.element):t(a.options.items,a.element).not(".ui-sortable-helper").not(".ui-sortable-placeholder"),a]);}}for(h.push([t.isFunction(this.options.items)?this.options.items.call(this.element,null,{options:this.options,item:this.currentItem}):t(this.options.items,this.element).not(".ui-sortable-helper").not(".ui-sortable-placeholder"),this]),s=h.length-1;s>=0;s--){h[s][0].each(i);}return t(r);},_removeCurrentsFromItems:function _removeCurrentsFromItems(){var e=this.currentItem.find(":data("+this.widgetName+"-item)");this.items=t.grep(this.items,function(t){for(var i=0;e.length>i;i++){if(e[i]===t.item[0])return!1;}return!0;});},_refreshItems:function _refreshItems(e){this.items=[],this.containers=[this];var i,s,n,o,a,r,h,l,c=this.items,u=[[t.isFunction(this.options.items)?this.options.items.call(this.element[0],e,{item:this.currentItem}):t(this.options.items,this.element),this]],d=this._connectWith();if(d&&this.ready)for(i=d.length-1;i>=0;i--){for(n=t(d[i],this.document[0]),s=n.length-1;s>=0;s--){o=t.data(n[s],this.widgetFullName),o&&o!==this&&!o.options.disabled&&(u.push([t.isFunction(o.options.items)?o.options.items.call(o.element[0],e,{item:this.currentItem}):t(o.options.items,o.element),o]),this.containers.push(o));}}for(i=u.length-1;i>=0;i--){for(a=u[i][1],r=u[i][0],s=0,l=r.length;l>s;s++){h=t(r[s]),h.data(this.widgetName+"-item",a),c.push({item:h,instance:a,width:0,height:0,left:0,top:0});}}},refreshPositions:function refreshPositions(e){this.floating=this.items.length?"x"===this.options.axis||this._isFloating(this.items[0].item):!1,this.offsetParent&&this.helper&&(this.offset.parent=this._getParentOffset());var i,s,n,o;for(i=this.items.length-1;i>=0;i--){s=this.items[i],s.instance!==this.currentContainer&&this.currentContainer&&s.item[0]!==this.currentItem[0]||(n=this.options.toleranceElement?t(this.options.toleranceElement,s.item):s.item,e||(s.width=n.outerWidth(),s.height=n.outerHeight()),o=n.offset(),s.left=o.left,s.top=o.top);}if(this.options.custom&&this.options.custom.refreshContainers)this.options.custom.refreshContainers.call(this);else for(i=this.containers.length-1;i>=0;i--){o=this.containers[i].element.offset(),this.containers[i].containerCache.left=o.left,this.containers[i].containerCache.top=o.top,this.containers[i].containerCache.width=this.containers[i].element.outerWidth(),this.containers[i].containerCache.height=this.containers[i].element.outerHeight();}return this;},_createPlaceholder:function _createPlaceholder(e){e=e||this;var i,s=e.options;s.placeholder&&s.placeholder.constructor!==String||(i=s.placeholder,s.placeholder={element:function element(){var s=e.currentItem[0].nodeName.toLowerCase(),n=t("<"+s+">",e.document[0]);return e._addClass(n,"ui-sortable-placeholder",i||e.currentItem[0].className)._removeClass(n,"ui-sortable-helper"),"tbody"===s?e._createTrPlaceholder(e.currentItem.find("tr").eq(0),t("<tr>",e.document[0]).appendTo(n)):"tr"===s?e._createTrPlaceholder(e.currentItem,n):"img"===s&&n.attr("src",e.currentItem.attr("src")),i||n.css("visibility","hidden"),n;},update:function update(t,n){(!i||s.forcePlaceholderSize)&&(n.height()||n.height(e.currentItem.innerHeight()-parseInt(e.currentItem.css("paddingTop")||0,10)-parseInt(e.currentItem.css("paddingBottom")||0,10)),n.width()||n.width(e.currentItem.innerWidth()-parseInt(e.currentItem.css("paddingLeft")||0,10)-parseInt(e.currentItem.css("paddingRight")||0,10)));}}),e.placeholder=t(s.placeholder.element.call(e.element,e.currentItem)),e.currentItem.after(e.placeholder),s.placeholder.update(e,e.placeholder);},_createTrPlaceholder:function _createTrPlaceholder(e,i){var s=this;e.children().each(function(){t("<td>&#160;</td>",s.document[0]).attr("colspan",t(this).attr("colspan")||1).appendTo(i);});},_contactContainers:function _contactContainers(e){var i,s,n,o,a,r,h,l,c,u,d=null,p=null;for(i=this.containers.length-1;i>=0;i--){if(!t.contains(this.currentItem[0],this.containers[i].element[0]))if(this._intersectsWith(this.containers[i].containerCache)){if(d&&t.contains(this.containers[i].element[0],d.element[0]))continue;d=this.containers[i],p=i;}else this.containers[i].containerCache.over&&(this.containers[i]._trigger("out",e,this._uiHash(this)),this.containers[i].containerCache.over=0);}if(d)if(1===this.containers.length)this.containers[p].containerCache.over||(this.containers[p]._trigger("over",e,this._uiHash(this)),this.containers[p].containerCache.over=1);else{for(n=1e4,o=null,c=d.floating||this._isFloating(this.currentItem),a=c?"left":"top",r=c?"width":"height",u=c?"pageX":"pageY",s=this.items.length-1;s>=0;s--){t.contains(this.containers[p].element[0],this.items[s].item[0])&&this.items[s].item[0]!==this.currentItem[0]&&(h=this.items[s].item.offset()[a],l=!1,e[u]-h>this.items[s][r]/2&&(l=!0),n>Math.abs(e[u]-h)&&(n=Math.abs(e[u]-h),o=this.items[s],this.direction=l?"up":"down"));}if(!o&&!this.options.dropOnEmpty)return;if(this.currentContainer===this.containers[p])return this.currentContainer.containerCache.over||(this.containers[p]._trigger("over",e,this._uiHash()),this.currentContainer.containerCache.over=1),void 0;o?this._rearrange(e,o,null,!0):this._rearrange(e,null,this.containers[p].element,!0),this._trigger("change",e,this._uiHash()),this.containers[p]._trigger("change",e,this._uiHash(this)),this.currentContainer=this.containers[p],this.options.placeholder.update(this.currentContainer,this.placeholder),this.containers[p]._trigger("over",e,this._uiHash(this)),this.containers[p].containerCache.over=1;}},_createHelper:function _createHelper(e){var i=this.options,s=t.isFunction(i.helper)?t(i.helper.apply(this.element[0],[e,this.currentItem])):"clone"===i.helper?this.currentItem.clone():this.currentItem;return s.parents("body").length||t("parent"!==i.appendTo?i.appendTo:this.currentItem[0].parentNode)[0].appendChild(s[0]),s[0]===this.currentItem[0]&&(this._storedCSS={width:this.currentItem[0].style.width,height:this.currentItem[0].style.height,position:this.currentItem.css("position"),top:this.currentItem.css("top"),left:this.currentItem.css("left")}),(!s[0].style.width||i.forceHelperSize)&&s.width(this.currentItem.width()),(!s[0].style.height||i.forceHelperSize)&&s.height(this.currentItem.height()),s;},_adjustOffsetFromHelper:function _adjustOffsetFromHelper(e){"string"==typeof e&&(e=e.split(" ")),t.isArray(e)&&(e={left:+e[0],top:+e[1]||0}),"left"in e&&(this.offset.click.left=e.left+this.margins.left),"right"in e&&(this.offset.click.left=this.helperProportions.width-e.right+this.margins.left),"top"in e&&(this.offset.click.top=e.top+this.margins.top),"bottom"in e&&(this.offset.click.top=this.helperProportions.height-e.bottom+this.margins.top);},_getParentOffset:function _getParentOffset(){this.offsetParent=this.helper.offsetParent();var e=this.offsetParent.offset();return"absolute"===this.cssPosition&&this.scrollParent[0]!==this.document[0]&&t.contains(this.scrollParent[0],this.offsetParent[0])&&(e.left+=this.scrollParent.scrollLeft(),e.top+=this.scrollParent.scrollTop()),(this.offsetParent[0]===this.document[0].body||this.offsetParent[0].tagName&&"html"===this.offsetParent[0].tagName.toLowerCase()&&t.ui.ie)&&(e={top:0,left:0}),{top:e.top+(parseInt(this.offsetParent.css("borderTopWidth"),10)||0),left:e.left+(parseInt(this.offsetParent.css("borderLeftWidth"),10)||0)};},_getRelativeOffset:function _getRelativeOffset(){if("relative"===this.cssPosition){var t=this.currentItem.position();return{top:t.top-(parseInt(this.helper.css("top"),10)||0)+this.scrollParent.scrollTop(),left:t.left-(parseInt(this.helper.css("left"),10)||0)+this.scrollParent.scrollLeft()};}return{top:0,left:0};},_cacheMargins:function _cacheMargins(){this.margins={left:parseInt(this.currentItem.css("marginLeft"),10)||0,top:parseInt(this.currentItem.css("marginTop"),10)||0};},_cacheHelperProportions:function _cacheHelperProportions(){this.helperProportions={width:this.helper.outerWidth(),height:this.helper.outerHeight()};},_setContainment:function _setContainment(){var e,i,s,n=this.options;"parent"===n.containment&&(n.containment=this.helper[0].parentNode),("document"===n.containment||"window"===n.containment)&&(this.containment=[0-this.offset.relative.left-this.offset.parent.left,0-this.offset.relative.top-this.offset.parent.top,"document"===n.containment?this.document.width():this.window.width()-this.helperProportions.width-this.margins.left,("document"===n.containment?this.document.height()||document.body.parentNode.scrollHeight:this.window.height()||this.document[0].body.parentNode.scrollHeight)-this.helperProportions.height-this.margins.top]),/^(document|window|parent)$/.test(n.containment)||(e=t(n.containment)[0],i=t(n.containment).offset(),s="hidden"!==t(e).css("overflow"),this.containment=[i.left+(parseInt(t(e).css("borderLeftWidth"),10)||0)+(parseInt(t(e).css("paddingLeft"),10)||0)-this.margins.left,i.top+(parseInt(t(e).css("borderTopWidth"),10)||0)+(parseInt(t(e).css("paddingTop"),10)||0)-this.margins.top,i.left+(s?Math.max(e.scrollWidth,e.offsetWidth):e.offsetWidth)-(parseInt(t(e).css("borderLeftWidth"),10)||0)-(parseInt(t(e).css("paddingRight"),10)||0)-this.helperProportions.width-this.margins.left,i.top+(s?Math.max(e.scrollHeight,e.offsetHeight):e.offsetHeight)-(parseInt(t(e).css("borderTopWidth"),10)||0)-(parseInt(t(e).css("paddingBottom"),10)||0)-this.helperProportions.height-this.margins.top]);},_convertPositionTo:function _convertPositionTo(e,i){i||(i=this.position);var s="absolute"===e?1:-1,n="absolute"!==this.cssPosition||this.scrollParent[0]!==this.document[0]&&t.contains(this.scrollParent[0],this.offsetParent[0])?this.scrollParent:this.offsetParent,o=/(html|body)/i.test(n[0].tagName);return{top:i.top+this.offset.relative.top*s+this.offset.parent.top*s-("fixed"===this.cssPosition?-this.scrollParent.scrollTop():o?0:n.scrollTop())*s,left:i.left+this.offset.relative.left*s+this.offset.parent.left*s-("fixed"===this.cssPosition?-this.scrollParent.scrollLeft():o?0:n.scrollLeft())*s};},_generatePosition:function _generatePosition(e){var i,s,n=this.options,o=e.pageX,a=e.pageY,r="absolute"!==this.cssPosition||this.scrollParent[0]!==this.document[0]&&t.contains(this.scrollParent[0],this.offsetParent[0])?this.scrollParent:this.offsetParent,h=/(html|body)/i.test(r[0].tagName);return"relative"!==this.cssPosition||this.scrollParent[0]!==this.document[0]&&this.scrollParent[0]!==this.offsetParent[0]||(this.offset.relative=this._getRelativeOffset()),this.originalPosition&&(this.containment&&(e.pageX-this.offset.click.left<this.containment[0]&&(o=this.containment[0]+this.offset.click.left),e.pageY-this.offset.click.top<this.containment[1]&&(a=this.containment[1]+this.offset.click.top),e.pageX-this.offset.click.left>this.containment[2]&&(o=this.containment[2]+this.offset.click.left),e.pageY-this.offset.click.top>this.containment[3]&&(a=this.containment[3]+this.offset.click.top)),n.grid&&(i=this.originalPageY+Math.round((a-this.originalPageY)/n.grid[1])*n.grid[1],a=this.containment?i-this.offset.click.top>=this.containment[1]&&i-this.offset.click.top<=this.containment[3]?i:i-this.offset.click.top>=this.containment[1]?i-n.grid[1]:i+n.grid[1]:i,s=this.originalPageX+Math.round((o-this.originalPageX)/n.grid[0])*n.grid[0],o=this.containment?s-this.offset.click.left>=this.containment[0]&&s-this.offset.click.left<=this.containment[2]?s:s-this.offset.click.left>=this.containment[0]?s-n.grid[0]:s+n.grid[0]:s)),{top:a-this.offset.click.top-this.offset.relative.top-this.offset.parent.top+("fixed"===this.cssPosition?-this.scrollParent.scrollTop():h?0:r.scrollTop()),left:o-this.offset.click.left-this.offset.relative.left-this.offset.parent.left+("fixed"===this.cssPosition?-this.scrollParent.scrollLeft():h?0:r.scrollLeft())};},_rearrange:function _rearrange(t,e,i,s){i?i[0].appendChild(this.placeholder[0]):e.item[0].parentNode.insertBefore(this.placeholder[0],"down"===this.direction?e.item[0]:e.item[0].nextSibling),this.counter=this.counter?++this.counter:1;var n=this.counter;this._delay(function(){n===this.counter&&this.refreshPositions(!s);});},_clear:function _clear(t,e){function i(t,e,i){return function(s){i._trigger(t,s,e._uiHash(e));};}this.reverting=!1;var s,n=[];if(!this._noFinalSort&&this.currentItem.parent().length&&this.placeholder.before(this.currentItem),this._noFinalSort=null,this.helper[0]===this.currentItem[0]){for(s in this._storedCSS){("auto"===this._storedCSS[s]||"static"===this._storedCSS[s])&&(this._storedCSS[s]="");}this.currentItem.css(this._storedCSS),this._removeClass(this.currentItem,"ui-sortable-helper");}else this.currentItem.show();for(this.fromOutside&&!e&&n.push(function(t){this._trigger("receive",t,this._uiHash(this.fromOutside));}),!this.fromOutside&&this.domPosition.prev===this.currentItem.prev().not(".ui-sortable-helper")[0]&&this.domPosition.parent===this.currentItem.parent()[0]||e||n.push(function(t){this._trigger("update",t,this._uiHash());}),this!==this.currentContainer&&(e||(n.push(function(t){this._trigger("remove",t,this._uiHash());}),n.push(function(t){return function(e){t._trigger("receive",e,this._uiHash(this));};}.call(this,this.currentContainer)),n.push(function(t){return function(e){t._trigger("update",e,this._uiHash(this));};}.call(this,this.currentContainer)))),s=this.containers.length-1;s>=0;s--){e||n.push(i("deactivate",this,this.containers[s])),this.containers[s].containerCache.over&&(n.push(i("out",this,this.containers[s])),this.containers[s].containerCache.over=0);}if(this.storedCursor&&(this.document.find("body").css("cursor",this.storedCursor),this.storedStylesheet.remove()),this._storedOpacity&&this.helper.css("opacity",this._storedOpacity),this._storedZIndex&&this.helper.css("zIndex","auto"===this._storedZIndex?"":this._storedZIndex),this.dragging=!1,e||this._trigger("beforeStop",t,this._uiHash()),this.placeholder[0].parentNode.removeChild(this.placeholder[0]),this.cancelHelperRemoval||(this.helper[0]!==this.currentItem[0]&&this.helper.remove(),this.helper=null),!e){for(s=0;n.length>s;s++){n[s].call(this,t);}this._trigger("stop",t,this._uiHash());}return this.fromOutside=!1,!this.cancelHelperRemoval;},_trigger:function _trigger(){t.Widget.prototype._trigger.apply(this,arguments)===!1&&this.cancel();},_uiHash:function _uiHash(e){var i=e||this;return{helper:i.helper,placeholder:i.placeholder||t([]),position:i.position,originalPosition:i.originalPosition,offset:i.positionAbs,item:i.currentItem,sender:e?e.element:null};}}),t.widget("ui.spinner",{version:"1.12.1",defaultElement:"<input>",widgetEventPrefix:"spin",options:{classes:{"ui-spinner":"ui-corner-all","ui-spinner-down":"ui-corner-br","ui-spinner-up":"ui-corner-tr"},culture:null,icons:{down:"ui-icon-triangle-1-s",up:"ui-icon-triangle-1-n"},incremental:!0,max:null,min:null,numberFormat:null,page:10,step:1,change:null,spin:null,start:null,stop:null},_create:function _create(){this._setOption("max",this.options.max),this._setOption("min",this.options.min),this._setOption("step",this.options.step),""!==this.value()&&this._value(this.element.val(),!0),this._draw(),this._on(this._events),this._refresh(),this._on(this.window,{beforeunload:function beforeunload(){this.element.removeAttr("autocomplete");}});},_getCreateOptions:function _getCreateOptions(){var e=this._super(),i=this.element;return t.each(["min","max","step"],function(t,s){var n=i.attr(s);null!=n&&n.length&&(e[s]=n);}),e;},_events:{keydown:function keydown(t){this._start(t)&&this._keydown(t)&&t.preventDefault();},keyup:"_stop",focus:function focus(){this.previous=this.element.val();},blur:function blur(t){return this.cancelBlur?(delete this.cancelBlur,void 0):(this._stop(),this._refresh(),this.previous!==this.element.val()&&this._trigger("change",t),void 0);},mousewheel:function mousewheel(t,e){if(e){if(!this.spinning&&!this._start(t))return!1;this._spin((e>0?1:-1)*this.options.step,t),clearTimeout(this.mousewheelTimer),this.mousewheelTimer=this._delay(function(){this.spinning&&this._stop(t);},100),t.preventDefault();}},"mousedown .ui-spinner-button":function mousedownUiSpinnerButton(e){function i(){var e=this.element[0]===t.ui.safeActiveElement(this.document[0]);e||(this.element.trigger("focus"),this.previous=s,this._delay(function(){this.previous=s;}));}var s;s=this.element[0]===t.ui.safeActiveElement(this.document[0])?this.previous:this.element.val(),e.preventDefault(),i.call(this),this.cancelBlur=!0,this._delay(function(){delete this.cancelBlur,i.call(this);}),this._start(e)!==!1&&this._repeat(null,t(e.currentTarget).hasClass("ui-spinner-up")?1:-1,e);},"mouseup .ui-spinner-button":"_stop","mouseenter .ui-spinner-button":function mouseenterUiSpinnerButton(e){return t(e.currentTarget).hasClass("ui-state-active")?this._start(e)===!1?!1:(this._repeat(null,t(e.currentTarget).hasClass("ui-spinner-up")?1:-1,e),void 0):void 0;},"mouseleave .ui-spinner-button":"_stop"},_enhance:function _enhance(){this.uiSpinner=this.element.attr("autocomplete","off").wrap("<span>").parent().append("<a></a><a></a>");},_draw:function _draw(){this._enhance(),this._addClass(this.uiSpinner,"ui-spinner","ui-widget ui-widget-content"),this._addClass("ui-spinner-input"),this.element.attr("role","spinbutton"),this.buttons=this.uiSpinner.children("a").attr("tabIndex",-1).attr("aria-hidden",!0).button({classes:{"ui-button":""}}),this._removeClass(this.buttons,"ui-corner-all"),this._addClass(this.buttons.first(),"ui-spinner-button ui-spinner-up"),this._addClass(this.buttons.last(),"ui-spinner-button ui-spinner-down"),this.buttons.first().button({icon:this.options.icons.up,showLabel:!1}),this.buttons.last().button({icon:this.options.icons.down,showLabel:!1}),this.buttons.height()>Math.ceil(.5*this.uiSpinner.height())&&this.uiSpinner.height()>0&&this.uiSpinner.height(this.uiSpinner.height());},_keydown:function _keydown(e){var i=this.options,s=t.ui.keyCode;switch(e.keyCode){case s.UP:return this._repeat(null,1,e),!0;case s.DOWN:return this._repeat(null,-1,e),!0;case s.PAGE_UP:return this._repeat(null,i.page,e),!0;case s.PAGE_DOWN:return this._repeat(null,-i.page,e),!0;}return!1;},_start:function _start(t){return this.spinning||this._trigger("start",t)!==!1?(this.counter||(this.counter=1),this.spinning=!0,!0):!1;},_repeat:function _repeat(t,e,i){t=t||500,clearTimeout(this.timer),this.timer=this._delay(function(){this._repeat(40,e,i);},t),this._spin(e*this.options.step,i);},_spin:function _spin(t,e){var i=this.value()||0;this.counter||(this.counter=1),i=this._adjustValue(i+t*this._increment(this.counter)),this.spinning&&this._trigger("spin",e,{value:i})===!1||(this._value(i),this.counter++);},_increment:function _increment(e){var i=this.options.incremental;return i?t.isFunction(i)?i(e):Math.floor(e*e*e/5e4-e*e/500+17*e/200+1):1;},_precision:function _precision(){var t=this._precisionOf(this.options.step);return null!==this.options.min&&(t=Math.max(t,this._precisionOf(this.options.min))),t;},_precisionOf:function _precisionOf(t){var e=""+t,i=e.indexOf(".");return-1===i?0:e.length-i-1;},_adjustValue:function _adjustValue(t){var e,i,s=this.options;return e=null!==s.min?s.min:0,i=t-e,i=Math.round(i/s.step)*s.step,t=e+i,t=parseFloat(t.toFixed(this._precision())),null!==s.max&&t>s.max?s.max:null!==s.min&&s.min>t?s.min:t;},_stop:function _stop(t){this.spinning&&(clearTimeout(this.timer),clearTimeout(this.mousewheelTimer),this.counter=0,this.spinning=!1,this._trigger("stop",t));},_setOption:function _setOption(t,e){var i,s,n;return"culture"===t||"numberFormat"===t?(i=this._parse(this.element.val()),this.options[t]=e,this.element.val(this._format(i)),void 0):(("max"===t||"min"===t||"step"===t)&&"string"==typeof e&&(e=this._parse(e)),"icons"===t&&(s=this.buttons.first().find(".ui-icon"),this._removeClass(s,null,this.options.icons.up),this._addClass(s,null,e.up),n=this.buttons.last().find(".ui-icon"),this._removeClass(n,null,this.options.icons.down),this._addClass(n,null,e.down)),this._super(t,e),void 0);},_setOptionDisabled:function _setOptionDisabled(t){this._super(t),this._toggleClass(this.uiSpinner,null,"ui-state-disabled",!!t),this.element.prop("disabled",!!t),this.buttons.button(t?"disable":"enable");},_setOptions:r(function(t){this._super(t);}),_parse:function _parse(t){return"string"==typeof t&&""!==t&&(t=window.Globalize&&this.options.numberFormat?Globalize.parseFloat(t,10,this.options.culture):+t),""===t||isNaN(t)?null:t;},_format:function _format(t){return""===t?"":window.Globalize&&this.options.numberFormat?Globalize.format(t,this.options.numberFormat,this.options.culture):t;},_refresh:function _refresh(){this.element.attr({"aria-valuemin":this.options.min,"aria-valuemax":this.options.max,"aria-valuenow":this._parse(this.element.val())});},isValid:function isValid(){var t=this.value();return null===t?!1:t===this._adjustValue(t);},_value:function _value(t,e){var i;""!==t&&(i=this._parse(t),null!==i&&(e||(i=this._adjustValue(i)),t=this._format(i))),this.element.val(t),this._refresh();},_destroy:function _destroy(){this.element.prop("disabled",!1).removeAttr("autocomplete role aria-valuemin aria-valuemax aria-valuenow"),this.uiSpinner.replaceWith(this.element);},stepUp:r(function(t){this._stepUp(t);}),_stepUp:function _stepUp(t){this._start()&&(this._spin((t||1)*this.options.step),this._stop());},stepDown:r(function(t){this._stepDown(t);}),_stepDown:function _stepDown(t){this._start()&&(this._spin((t||1)*-this.options.step),this._stop());},pageUp:r(function(t){this._stepUp((t||1)*this.options.page);}),pageDown:r(function(t){this._stepDown((t||1)*this.options.page);}),value:function value(t){return arguments.length?(r(this._value).call(this,t),void 0):this._parse(this.element.val());},widget:function widget(){return this.uiSpinner;}}),t.uiBackCompat!==!1&&t.widget("ui.spinner",t.ui.spinner,{_enhance:function _enhance(){this.uiSpinner=this.element.attr("autocomplete","off").wrap(this._uiSpinnerHtml()).parent().append(this._buttonHtml());},_uiSpinnerHtml:function _uiSpinnerHtml(){return"<span>";},_buttonHtml:function _buttonHtml(){return"<a></a><a></a>";}}),t.ui.spinner,t.widget("ui.tabs",{version:"1.12.1",delay:300,options:{active:null,classes:{"ui-tabs":"ui-corner-all","ui-tabs-nav":"ui-corner-all","ui-tabs-panel":"ui-corner-bottom","ui-tabs-tab":"ui-corner-top"},collapsible:!1,event:"click",heightStyle:"content",hide:null,show:null,activate:null,beforeActivate:null,beforeLoad:null,load:null},_isLocal:function(){var t=/#.*$/;return function(e){var i,s;i=e.href.replace(t,""),s=location.href.replace(t,"");try{i=decodeURIComponent(i);}catch(n){}try{s=decodeURIComponent(s);}catch(n){}return e.hash.length>1&&i===s;};}(),_create:function _create(){var e=this,i=this.options;this.running=!1,this._addClass("ui-tabs","ui-widget ui-widget-content"),this._toggleClass("ui-tabs-collapsible",null,i.collapsible),this._processTabs(),i.active=this._initialActive(),t.isArray(i.disabled)&&(i.disabled=t.unique(i.disabled.concat(t.map(this.tabs.filter(".ui-state-disabled"),function(t){return e.tabs.index(t);}))).sort()),this.active=this.options.active!==!1&&this.anchors.length?this._findActive(i.active):t(),this._refresh(),this.active.length&&this.load(i.active);},_initialActive:function _initialActive(){var e=this.options.active,i=this.options.collapsible,s=location.hash.substring(1);return null===e&&(s&&this.tabs.each(function(i,n){return t(n).attr("aria-controls")===s?(e=i,!1):void 0;}),null===e&&(e=this.tabs.index(this.tabs.filter(".ui-tabs-active"))),(null===e||-1===e)&&(e=this.tabs.length?0:!1)),e!==!1&&(e=this.tabs.index(this.tabs.eq(e)),-1===e&&(e=i?!1:0)),!i&&e===!1&&this.anchors.length&&(e=0),e;},_getCreateEventData:function _getCreateEventData(){return{tab:this.active,panel:this.active.length?this._getPanelForTab(this.active):t()};},_tabKeydown:function _tabKeydown(e){var i=t(t.ui.safeActiveElement(this.document[0])).closest("li"),s=this.tabs.index(i),n=!0;if(!this._handlePageNav(e)){switch(e.keyCode){case t.ui.keyCode.RIGHT:case t.ui.keyCode.DOWN:s++;break;case t.ui.keyCode.UP:case t.ui.keyCode.LEFT:n=!1,s--;break;case t.ui.keyCode.END:s=this.anchors.length-1;break;case t.ui.keyCode.HOME:s=0;break;case t.ui.keyCode.SPACE:return e.preventDefault(),clearTimeout(this.activating),this._activate(s),void 0;case t.ui.keyCode.ENTER:return e.preventDefault(),clearTimeout(this.activating),this._activate(s===this.options.active?!1:s),void 0;default:return;}e.preventDefault(),clearTimeout(this.activating),s=this._focusNextTab(s,n),e.ctrlKey||e.metaKey||(i.attr("aria-selected","false"),this.tabs.eq(s).attr("aria-selected","true"),this.activating=this._delay(function(){this.option("active",s);},this.delay));}},_panelKeydown:function _panelKeydown(e){this._handlePageNav(e)||e.ctrlKey&&e.keyCode===t.ui.keyCode.UP&&(e.preventDefault(),this.active.trigger("focus"));},_handlePageNav:function _handlePageNav(e){return e.altKey&&e.keyCode===t.ui.keyCode.PAGE_UP?(this._activate(this._focusNextTab(this.options.active-1,!1)),!0):e.altKey&&e.keyCode===t.ui.keyCode.PAGE_DOWN?(this._activate(this._focusNextTab(this.options.active+1,!0)),!0):void 0;},_findNextTab:function _findNextTab(e,i){function s(){return e>n&&(e=0),0>e&&(e=n),e;}for(var n=this.tabs.length-1;-1!==t.inArray(s(),this.options.disabled);){e=i?e+1:e-1;}return e;},_focusNextTab:function _focusNextTab(t,e){return t=this._findNextTab(t,e),this.tabs.eq(t).trigger("focus"),t;},_setOption:function _setOption(t,e){return"active"===t?(this._activate(e),void 0):(this._super(t,e),"collapsible"===t&&(this._toggleClass("ui-tabs-collapsible",null,e),e||this.options.active!==!1||this._activate(0)),"event"===t&&this._setupEvents(e),"heightStyle"===t&&this._setupHeightStyle(e),void 0);},_sanitizeSelector:function _sanitizeSelector(t){return t?t.replace(/[!"$%&'()*+,.\/:;<=>?@\[\]\^`{|}~]/g,"\\$&"):"";},refresh:function refresh(){var e=this.options,i=this.tablist.children(":has(a[href])");e.disabled=t.map(i.filter(".ui-state-disabled"),function(t){return i.index(t);}),this._processTabs(),e.active!==!1&&this.anchors.length?this.active.length&&!t.contains(this.tablist[0],this.active[0])?this.tabs.length===e.disabled.length?(e.active=!1,this.active=t()):this._activate(this._findNextTab(Math.max(0,e.active-1),!1)):e.active=this.tabs.index(this.active):(e.active=!1,this.active=t()),this._refresh();},_refresh:function _refresh(){this._setOptionDisabled(this.options.disabled),this._setupEvents(this.options.event),this._setupHeightStyle(this.options.heightStyle),this.tabs.not(this.active).attr({"aria-selected":"false","aria-expanded":"false",tabIndex:-1}),this.panels.not(this._getPanelForTab(this.active)).hide().attr({"aria-hidden":"true"}),this.active.length?(this.active.attr({"aria-selected":"true","aria-expanded":"true",tabIndex:0}),this._addClass(this.active,"ui-tabs-active","ui-state-active"),this._getPanelForTab(this.active).show().attr({"aria-hidden":"false"})):this.tabs.eq(0).attr("tabIndex",0);},_processTabs:function _processTabs(){var e=this,i=this.tabs,s=this.anchors,n=this.panels;this.tablist=this._getList().attr("role","tablist"),this._addClass(this.tablist,"ui-tabs-nav","ui-helper-reset ui-helper-clearfix ui-widget-header"),this.tablist.on("mousedown"+this.eventNamespace,"> li",function(e){t(this).is(".ui-state-disabled")&&e.preventDefault();}).on("focus"+this.eventNamespace,".ui-tabs-anchor",function(){t(this).closest("li").is(".ui-state-disabled")&&this.blur();}),this.tabs=this.tablist.find("> li:has(a[href])").attr({role:"tab",tabIndex:-1}),this._addClass(this.tabs,"ui-tabs-tab","ui-state-default"),this.anchors=this.tabs.map(function(){return t("a",this)[0];}).attr({role:"presentation",tabIndex:-1}),this._addClass(this.anchors,"ui-tabs-anchor"),this.panels=t(),this.anchors.each(function(i,s){var n,o,a,r=t(s).uniqueId().attr("id"),h=t(s).closest("li"),l=h.attr("aria-controls");e._isLocal(s)?(n=s.hash,a=n.substring(1),o=e.element.find(e._sanitizeSelector(n))):(a=h.attr("aria-controls")||t({}).uniqueId()[0].id,n="#"+a,o=e.element.find(n),o.length||(o=e._createPanel(a),o.insertAfter(e.panels[i-1]||e.tablist)),o.attr("aria-live","polite")),o.length&&(e.panels=e.panels.add(o)),l&&h.data("ui-tabs-aria-controls",l),h.attr({"aria-controls":a,"aria-labelledby":r}),o.attr("aria-labelledby",r);}),this.panels.attr("role","tabpanel"),this._addClass(this.panels,"ui-tabs-panel","ui-widget-content"),i&&(this._off(i.not(this.tabs)),this._off(s.not(this.anchors)),this._off(n.not(this.panels)));},_getList:function _getList(){return this.tablist||this.element.find("ol, ul").eq(0);},_createPanel:function _createPanel(e){return t("<div>").attr("id",e).data("ui-tabs-destroy",!0);},_setOptionDisabled:function _setOptionDisabled(e){var i,s,n;for(t.isArray(e)&&(e.length?e.length===this.anchors.length&&(e=!0):e=!1),n=0;s=this.tabs[n];n++){i=t(s),e===!0||-1!==t.inArray(n,e)?(i.attr("aria-disabled","true"),this._addClass(i,null,"ui-state-disabled")):(i.removeAttr("aria-disabled"),this._removeClass(i,null,"ui-state-disabled"));}this.options.disabled=e,this._toggleClass(this.widget(),this.widgetFullName+"-disabled",null,e===!0);},_setupEvents:function _setupEvents(e){var i={};e&&t.each(e.split(" "),function(t,e){i[e]="_eventHandler";}),this._off(this.anchors.add(this.tabs).add(this.panels)),this._on(!0,this.anchors,{click:function click(t){t.preventDefault();}}),this._on(this.anchors,i),this._on(this.tabs,{keydown:"_tabKeydown"}),this._on(this.panels,{keydown:"_panelKeydown"}),this._focusable(this.tabs),this._hoverable(this.tabs);},_setupHeightStyle:function _setupHeightStyle(e){var i,s=this.element.parent();"fill"===e?(i=s.height(),i-=this.element.outerHeight()-this.element.height(),this.element.siblings(":visible").each(function(){var e=t(this),s=e.css("position");"absolute"!==s&&"fixed"!==s&&(i-=e.outerHeight(!0));}),this.element.children().not(this.panels).each(function(){i-=t(this).outerHeight(!0);}),this.panels.each(function(){t(this).height(Math.max(0,i-t(this).innerHeight()+t(this).height()));}).css("overflow","auto")):"auto"===e&&(i=0,this.panels.each(function(){i=Math.max(i,t(this).height("").height());}).height(i));},_eventHandler:function _eventHandler(e){var i=this.options,s=this.active,n=t(e.currentTarget),o=n.closest("li"),a=o[0]===s[0],r=a&&i.collapsible,h=r?t():this._getPanelForTab(o),l=s.length?this._getPanelForTab(s):t(),c={oldTab:s,oldPanel:l,newTab:r?t():o,newPanel:h};e.preventDefault(),o.hasClass("ui-state-disabled")||o.hasClass("ui-tabs-loading")||this.running||a&&!i.collapsible||this._trigger("beforeActivate",e,c)===!1||(i.active=r?!1:this.tabs.index(o),this.active=a?t():o,this.xhr&&this.xhr.abort(),l.length||h.length||t.error("jQuery UI Tabs: Mismatching fragment identifier."),h.length&&this.load(this.tabs.index(o),e),this._toggle(e,c));},_toggle:function _toggle(e,i){function s(){o.running=!1,o._trigger("activate",e,i);}function n(){o._addClass(i.newTab.closest("li"),"ui-tabs-active","ui-state-active"),a.length&&o.options.show?o._show(a,o.options.show,s):(a.show(),s());}var o=this,a=i.newPanel,r=i.oldPanel;this.running=!0,r.length&&this.options.hide?this._hide(r,this.options.hide,function(){o._removeClass(i.oldTab.closest("li"),"ui-tabs-active","ui-state-active"),n();}):(this._removeClass(i.oldTab.closest("li"),"ui-tabs-active","ui-state-active"),r.hide(),n()),r.attr("aria-hidden","true"),i.oldTab.attr({"aria-selected":"false","aria-expanded":"false"}),a.length&&r.length?i.oldTab.attr("tabIndex",-1):a.length&&this.tabs.filter(function(){return 0===t(this).attr("tabIndex");}).attr("tabIndex",-1),a.attr("aria-hidden","false"),i.newTab.attr({"aria-selected":"true","aria-expanded":"true",tabIndex:0});},_activate:function _activate(e){var i,s=this._findActive(e);s[0]!==this.active[0]&&(s.length||(s=this.active),i=s.find(".ui-tabs-anchor")[0],this._eventHandler({target:i,currentTarget:i,preventDefault:t.noop}));},_findActive:function _findActive(e){return e===!1?t():this.tabs.eq(e);},_getIndex:function _getIndex(e){return"string"==typeof e&&(e=this.anchors.index(this.anchors.filter("[href$='"+t.ui.escapeSelector(e)+"']"))),e;},_destroy:function _destroy(){this.xhr&&this.xhr.abort(),this.tablist.removeAttr("role").off(this.eventNamespace),this.anchors.removeAttr("role tabIndex").removeUniqueId(),this.tabs.add(this.panels).each(function(){t.data(this,"ui-tabs-destroy")?t(this).remove():t(this).removeAttr("role tabIndex aria-live aria-busy aria-selected aria-labelledby aria-hidden aria-expanded");}),this.tabs.each(function(){var e=t(this),i=e.data("ui-tabs-aria-controls");i?e.attr("aria-controls",i).removeData("ui-tabs-aria-controls"):e.removeAttr("aria-controls");}),this.panels.show(),"content"!==this.options.heightStyle&&this.panels.css("height","");},enable:function enable(e){var i=this.options.disabled;i!==!1&&(void 0===e?i=!1:(e=this._getIndex(e),i=t.isArray(i)?t.map(i,function(t){return t!==e?t:null;}):t.map(this.tabs,function(t,i){return i!==e?i:null;})),this._setOptionDisabled(i));},disable:function disable(e){var i=this.options.disabled;if(i!==!0){if(void 0===e)i=!0;else{if(e=this._getIndex(e),-1!==t.inArray(e,i))return;i=t.isArray(i)?t.merge([e],i).sort():[e];}this._setOptionDisabled(i);}},load:function load(e,i){e=this._getIndex(e);var s=this,n=this.tabs.eq(e),o=n.find(".ui-tabs-anchor"),a=this._getPanelForTab(n),r={tab:n,panel:a},h=function h(t,e){"abort"===e&&s.panels.stop(!1,!0),s._removeClass(n,"ui-tabs-loading"),a.removeAttr("aria-busy"),t===s.xhr&&delete s.xhr;};this._isLocal(o[0])||(this.xhr=t.ajax(this._ajaxSettings(o,i,r)),this.xhr&&"canceled"!==this.xhr.statusText&&(this._addClass(n,"ui-tabs-loading"),a.attr("aria-busy","true"),this.xhr.done(function(t,e,n){setTimeout(function(){a.html(t),s._trigger("load",i,r),h(n,e);},1);}).fail(function(t,e){setTimeout(function(){h(t,e);},1);})));},_ajaxSettings:function _ajaxSettings(e,i,s){var n=this;return{url:e.attr("href").replace(/#.*$/,""),beforeSend:function beforeSend(e,o){return n._trigger("beforeLoad",i,t.extend({jqXHR:e,ajaxSettings:o},s));}};},_getPanelForTab:function _getPanelForTab(e){var i=t(e).attr("aria-controls");return this.element.find(this._sanitizeSelector("#"+i));}}),t.uiBackCompat!==!1&&t.widget("ui.tabs",t.ui.tabs,{_processTabs:function _processTabs(){this._superApply(arguments),this._addClass(this.tabs,"ui-tab");}}),t.ui.tabs,t.widget("ui.tooltip",{version:"1.12.1",options:{classes:{"ui-tooltip":"ui-corner-all ui-widget-shadow"},content:function content(){var e=t(this).attr("title")||"";return t("<a>").text(e).html();},hide:!0,items:"[title]:not([disabled])",position:{my:"left top+15",at:"left bottom",collision:"flipfit flip"},show:!0,track:!1,close:null,open:null},_addDescribedBy:function _addDescribedBy(e,i){var s=(e.attr("aria-describedby")||"").split(/\s+/);s.push(i),e.data("ui-tooltip-id",i).attr("aria-describedby",t.trim(s.join(" ")));},_removeDescribedBy:function _removeDescribedBy(e){var i=e.data("ui-tooltip-id"),s=(e.attr("aria-describedby")||"").split(/\s+/),n=t.inArray(i,s);-1!==n&&s.splice(n,1),e.removeData("ui-tooltip-id"),s=t.trim(s.join(" ")),s?e.attr("aria-describedby",s):e.removeAttr("aria-describedby");},_create:function _create(){this._on({mouseover:"open",focusin:"open"}),this.tooltips={},this.parents={},this.liveRegion=t("<div>").attr({role:"log","aria-live":"assertive","aria-relevant":"additions"}).appendTo(this.document[0].body),this._addClass(this.liveRegion,null,"ui-helper-hidden-accessible"),this.disabledTitles=t([]);},_setOption:function _setOption(e,i){var s=this;this._super(e,i),"content"===e&&t.each(this.tooltips,function(t,e){s._updateContent(e.element);});},_setOptionDisabled:function _setOptionDisabled(t){this[t?"_disable":"_enable"]();},_disable:function _disable(){var e=this;t.each(this.tooltips,function(i,s){var n=t.Event("blur");n.target=n.currentTarget=s.element[0],e.close(n,!0);}),this.disabledTitles=this.disabledTitles.add(this.element.find(this.options.items).addBack().filter(function(){var e=t(this);return e.is("[title]")?e.data("ui-tooltip-title",e.attr("title")).removeAttr("title"):void 0;}));},_enable:function _enable(){this.disabledTitles.each(function(){var e=t(this);e.data("ui-tooltip-title")&&e.attr("title",e.data("ui-tooltip-title"));}),this.disabledTitles=t([]);},open:function open(e){var i=this,s=t(e?e.target:this.element).closest(this.options.items);s.length&&!s.data("ui-tooltip-id")&&(s.attr("title")&&s.data("ui-tooltip-title",s.attr("title")),s.data("ui-tooltip-open",!0),e&&"mouseover"===e.type&&s.parents().each(function(){var e,s=t(this);s.data("ui-tooltip-open")&&(e=t.Event("blur"),e.target=e.currentTarget=this,i.close(e,!0)),s.attr("title")&&(s.uniqueId(),i.parents[this.id]={element:this,title:s.attr("title")},s.attr("title",""));}),this._registerCloseHandlers(e,s),this._updateContent(s,e));},_updateContent:function _updateContent(t,e){var i,s=this.options.content,n=this,o=e?e.type:null;return"string"==typeof s||s.nodeType||s.jquery?this._open(e,t,s):(i=s.call(t[0],function(i){n._delay(function(){t.data("ui-tooltip-open")&&(e&&(e.type=o),this._open(e,t,i));});}),i&&this._open(e,t,i),void 0);},_open:function _open(e,i,s){function n(t){l.of=t,a.is(":hidden")||a.position(l);}var o,a,r,h,l=t.extend({},this.options.position);if(s){if(o=this._find(i))return o.tooltip.find(".ui-tooltip-content").html(s),void 0;i.is("[title]")&&(e&&"mouseover"===e.type?i.attr("title",""):i.removeAttr("title")),o=this._tooltip(i),a=o.tooltip,this._addDescribedBy(i,a.attr("id")),a.find(".ui-tooltip-content").html(s),this.liveRegion.children().hide(),h=t("<div>").html(a.find(".ui-tooltip-content").html()),h.removeAttr("name").find("[name]").removeAttr("name"),h.removeAttr("id").find("[id]").removeAttr("id"),h.appendTo(this.liveRegion),this.options.track&&e&&/^mouse/.test(e.type)?(this._on(this.document,{mousemove:n}),n(e)):a.position(t.extend({of:i},this.options.position)),a.hide(),this._show(a,this.options.show),this.options.track&&this.options.show&&this.options.show.delay&&(r=this.delayedShow=setInterval(function(){a.is(":visible")&&(n(l.of),clearInterval(r));},t.fx.interval)),this._trigger("open",e,{tooltip:a});}},_registerCloseHandlers:function _registerCloseHandlers(e,i){var s={keyup:function keyup(e){if(e.keyCode===t.ui.keyCode.ESCAPE){var s=t.Event(e);s.currentTarget=i[0],this.close(s,!0);}}};i[0]!==this.element[0]&&(s.remove=function(){this._removeTooltip(this._find(i).tooltip);}),e&&"mouseover"!==e.type||(s.mouseleave="close"),e&&"focusin"!==e.type||(s.focusout="close"),this._on(!0,i,s);},close:function close(e){var i,s=this,n=t(e?e.currentTarget:this.element),o=this._find(n);return o?(i=o.tooltip,o.closing||(clearInterval(this.delayedShow),n.data("ui-tooltip-title")&&!n.attr("title")&&n.attr("title",n.data("ui-tooltip-title")),this._removeDescribedBy(n),o.hiding=!0,i.stop(!0),this._hide(i,this.options.hide,function(){s._removeTooltip(t(this));}),n.removeData("ui-tooltip-open"),this._off(n,"mouseleave focusout keyup"),n[0]!==this.element[0]&&this._off(n,"remove"),this._off(this.document,"mousemove"),e&&"mouseleave"===e.type&&t.each(this.parents,function(e,i){t(i.element).attr("title",i.title),delete s.parents[e];}),o.closing=!0,this._trigger("close",e,{tooltip:i}),o.hiding||(o.closing=!1)),void 0):(n.removeData("ui-tooltip-open"),void 0);},_tooltip:function _tooltip(e){var i=t("<div>").attr("role","tooltip"),s=t("<div>").appendTo(i),n=i.uniqueId().attr("id");return this._addClass(s,"ui-tooltip-content"),this._addClass(i,"ui-tooltip","ui-widget ui-widget-content"),i.appendTo(this._appendTo(e)),this.tooltips[n]={element:e,tooltip:i};},_find:function _find(t){var e=t.data("ui-tooltip-id");return e?this.tooltips[e]:null;},_removeTooltip:function _removeTooltip(t){t.remove(),delete this.tooltips[t.attr("id")];},_appendTo:function _appendTo(t){var e=t.closest(".ui-front, dialog");return e.length||(e=this.document[0].body),e;},_destroy:function _destroy(){var e=this;t.each(this.tooltips,function(i,s){var n=t.Event("blur"),o=s.element;n.target=n.currentTarget=o[0],e.close(n,!0),t("#"+i).remove(),o.data("ui-tooltip-title")&&(o.attr("title")||o.attr("title",o.data("ui-tooltip-title")),o.removeData("ui-tooltip-title"));}),this.liveRegion.remove();}}),t.uiBackCompat!==!1&&t.widget("ui.tooltip",t.ui.tooltip,{options:{tooltipClass:null},_tooltip:function _tooltip(){var t=this._superApply(arguments);return this.options.tooltipClass&&t.tooltip.addClass(this.options.tooltipClass),t;}}),t.ui.tooltip;});/*!
 * @fileOverview TouchSwipe - jQuery Plugin
 * @version 1.6.18
 *
 * @author Matt Bryson http://www.github.com/mattbryson
 * @see https://github.com/mattbryson/TouchSwipe-Jquery-Plugin
 * @see http://labs.rampinteractive.co.uk/touchSwipe/
 * @see http://plugins.jquery.com/project/touchSwipe
 * @license
 * Copyright (c) 2010-2015 Matt Bryson
 * Dual licensed under the MIT or GPL Version 2 licenses.
 *
 */ /*
 *
 * Changelog
 * $Date: 2010-12-12 (Wed, 12 Dec 2010) $
 * $version: 1.0.0
 * $version: 1.0.1 - removed multibyte comments
 *
 * $Date: 2011-21-02 (Mon, 21 Feb 2011) $
 * $version: 1.1.0 	- added allowPageScroll property to allow swiping and scrolling of page
 *					- changed handler signatures so one handler can be used for multiple events
 * $Date: 2011-23-02 (Wed, 23 Feb 2011) $
 * $version: 1.2.0 	- added click handler. This is fired if the user simply clicks and does not swipe. The event object and click target are passed to handler.
 *					- If you use the http://code.google.com/p/jquery-ui-for-ipad-and-iphone/ plugin, you can also assign jQuery mouse events to children of a touchSwipe object.
 * $version: 1.2.1 	- removed console log!
 *
 * $version: 1.2.2 	- Fixed bug where scope was not preserved in callback methods.
 *
 * $Date: 2011-28-04 (Thurs, 28 April 2011) $
 * $version: 1.2.4 	- Changed licence terms to be MIT or GPL inline with jQuery. Added check for support of touch events to stop non compatible browsers erroring.
 *
 * $Date: 2011-27-09 (Tues, 27 September 2011) $
 * $version: 1.2.5 	- Added support for testing swipes with mouse on desktop browser (thanks to https://github.com/joelhy)
 *
 * $Date: 2012-14-05 (Mon, 14 May 2012) $
 * $version: 1.2.6 	- Added timeThreshold between start and end touch, so user can ignore slow swipes (thanks to Mark Chase). Default is null, all swipes are detected
 *
 * $Date: 2012-05-06 (Tues, 05 June 2012) $
 * $version: 1.2.7 	- Changed time threshold to have null default for backwards compatibility. Added duration param passed back in events, and refactored how time is handled.
 *
 * $Date: 2012-05-06 (Tues, 05 June 2012) $
 * $version: 1.2.8 	- Added the possibility to return a value like null or false in the trigger callback. In that way we can control when the touch start/move should take effect or not (simply by returning in some cases return null; or return false;) This effects the ontouchstart/ontouchmove event.
 *
 * $Date: 2012-06-06 (Wed, 06 June 2012) $
 * $version: 1.3.0 	- Refactored whole plugin to allow for methods to be executed, as well as exposed defaults for user override. Added 'enable', 'disable', and 'destroy' methods
 *
 * $Date: 2012-05-06 (Fri, 05 June 2012) $
 * $version: 1.3.1 	- Bug fixes  - bind() with false as last argument is no longer supported in jQuery 1.6, also, if you just click, the duration is now returned correctly.
 *
 * $Date: 2012-29-07 (Sun, 29 July 2012) $
 * $version: 1.3.2	- Added fallbackToMouseEvents option to NOT capture mouse events on non touch devices.
 * 			- Added "all" fingers value to the fingers property, so any combination of fingers triggers the swipe, allowing event handlers to check the finger count
 *
 * $Date: 2012-09-08 (Thurs, 9 Aug 2012) $
 * $version: 1.3.3	- Code tidy prep for min version
 *
 * $Date: 2012-04-10 (wed, 4 Oct 2012) $
 * $version: 1.4.0	- Added pinch support, pinchIn and pinchOut
 *
 * $Date: 2012-11-10 (Thurs, 11 Oct 2012) $
 * $version: 1.5.0	- Added excludedElements, a jquery selector that specifies child elements that do NOT trigger swipes. By default, this is .noSwipe
 *
 * $Date: 2012-22-10 (Mon, 22 Oct 2012) $
 * $version: 1.5.1	- Fixed bug with jQuery 1.8 and trailing comma in excludedElements
 *					- Fixed bug with IE and eventPreventDefault()
 * $Date: 2013-01-12 (Fri, 12 Jan 2013) $
 * $version: 1.6.0	- Fixed bugs with pinching, mainly when both pinch and swipe enabled, as well as adding time threshold for multifinger gestures, so releasing one finger beofre the other doesnt trigger as single finger gesture.
 *					- made the demo site all static local HTML pages so they can be run locally by a developer
 *					- added jsDoc comments and added documentation for the plugin
 *					- code tidy
 *					- added triggerOnTouchLeave property that will end the event when the user swipes off the element.
 * $Date: 2013-03-23 (Sat, 23 Mar 2013) $
 * $version: 1.6.1	- Added support for ie8 touch events
 * $version: 1.6.2	- Added support for events binding with on / off / bind in jQ for all callback names.
 *                   - Deprecated the 'click' handler in favour of tap.
 *                   - added cancelThreshold property
 *                   - added option method to update init options at runtime
 * $version 1.6.3    - added doubletap, longtap events and longTapThreshold, doubleTapThreshold property
 *
 * $Date: 2013-04-04 (Thurs, 04 April 2013) $
 * $version 1.6.4    - Fixed bug with cancelThreshold introduced in 1.6.3, where swipe status no longer fired start event, and stopped once swiping back.
 *
 * $Date: 2013-08-24 (Sat, 24 Aug 2013) $
 * $version 1.6.5    - Merged a few pull requests fixing various bugs, added AMD support.
 *
 * $Date: 2014-06-04 (Wed, 04 June 2014) $
 * $version 1.6.6 	- Merge of pull requests.
 *    				- IE10 touch support
 *    				- Only prevent default event handling on valid swipe
 *    				- Separate license/changelog comment
 *    				- Detect if the swipe is valid at the end of the touch event.
 *    				- Pass fingerdata to event handlers.
 *    				- Add 'hold' gesture
 *    				- Be more tolerant about the tap distance
 *    				- Typos and minor fixes
 *
 * $Date: 2015-22-01 (Thurs, 22 Jan 2015) $
 * $version 1.6.7    - Added patch from https://github.com/mattbryson/TouchSwipe-Jquery-Plugin/issues/206 to fix memory leak
 *
 * $Date: 2015-2-2 (Mon, 2 Feb 2015) $
 * $version 1.6.8    - Added preventDefaultEvents option to proxy events regardless.
 *					- Fixed issue with swipe and pinch not triggering at the same time
 *
 * $Date: 2015-9-6 (Tues, 9 June 2015) $
 * $version 1.6.9    - Added PR from jdalton/hybrid to fix pointer events
 *					- Added scrolling demo
 *					- Added version property to plugin
 *
 * $Date: 2015-1-10 (Wed, 1 October 2015) $
 * $version 1.6.10    - Added PR from beatspace to fix tap events
 * $version 1.6.11    - Added PRs from indri-indri ( Doc tidyup), kkirsche ( Bower tidy up ), UziTech (preventDefaultEvents fixes )
 *					 - Allowed setting multiple options via .swipe("options", options_hash) and more simply .swipe(options_hash) or exisitng instances
 * $version 1.6.12    - Fixed bug with multi finger releases above 2 not triggering events
 *
 * $Date: 2015-12-18 (Fri, 18 December 2015) $
 * $version 1.6.13    - Added PRs
 *                    - Fixed #267 allowPageScroll not working correctly
 * $version 1.6.14    - Fixed #220 / #248 doubletap not firing with swipes, #223 commonJS compatible
 * $version 1.6.15    - More bug fixes
 *
 * $Date: 2016-04-29 (Fri, 29 April 2016) $
 * $version 1.6.16    - Swipes with 0 distance now allow default events to trigger.  So tapping any form elements or A tags will allow default interaction, but swiping will trigger a swipe.
 *                       Removed the a, input, select etc from the excluded Children list as the 0 distance tap solves that issue.
 * $Date: 2016-05-19  (Fri, 29 April 2016) $
 * $version 1.6.17     - Fixed context issue when calling instance methods via $("selector").swipe("method");
 * $version 1.6.18     - now honors fallbackToMouseEvents=false for MS Pointer events when a Mouse is used.
 * 
 * $Date: 2018-09-17  (Mon, 17 September 2018) $
 * $version 1.6.19     - replaced jQuery bind with on, replaced deprecated `navigator.pointerEvents` with `window.PointerEvents`

 */ /**
 * See (http://jquery.com/).
 * @name $
 * @class
 * See the jQuery Library  (http://jquery.com/) for full details.  This just
 * documents the function and classes that are added to jQuery by this plug-in.
 */ /**
 * See (http://jquery.com/)
 * @name fn
 * @class
 * See the jQuery Library  (http://jquery.com/) for full details.  This just
 * documents the function and classes that are added to jQuery by this plug-in.
 * @memberOf $
 */(function(factory){if(typeof define==='function'&&define.amd&&define.amd.jQuery){// AMD. Register as anonymous module.
define(['jquery'],factory);}else if(typeof module!=='undefined'&&module.exports){// CommonJS Module
factory(require("jquery"));}else{// Browser globals.
factory(jQuery);}})(function($){"use strict";//Constants
var VERSION="1.6.18",LEFT="left",RIGHT="right",UP="up",DOWN="down",IN="in",OUT="out",NONE="none",AUTO="auto",SWIPE="swipe",PINCH="pinch",TAP="tap",DOUBLE_TAP="doubletap",LONG_TAP="longtap",HOLD="hold",HORIZONTAL="horizontal",VERTICAL="vertical",ALL_FINGERS="all",DOUBLE_TAP_THRESHOLD=10,PHASE_START="start",PHASE_MOVE="move",PHASE_END="end",PHASE_CANCEL="cancel",SUPPORTS_TOUCH=('ontouchstart'in window),SUPPORTS_POINTER_IE10=window.navigator.msPointerEnabled&&!window.PointerEvent&&!SUPPORTS_TOUCH,SUPPORTS_POINTER=(window.PointerEvent||window.navigator.msPointerEnabled)&&!SUPPORTS_TOUCH,PLUGIN_NS='TouchSwipe';/**
  * The default configuration, and available options to configure touch swipe with.
  * You can set the default values by updating any of the properties prior to instantiation.
  * @name $.fn.swipe.defaults
  * @namespace
  * @property {int} [fingers=1] The number of fingers to detect in a swipe. Any swipes that do not meet this requirement will NOT trigger swipe handlers.
  * @property {int} [threshold=75] The number of pixels that the user must move their finger by before it is considered a swipe.
  * @property {int} [cancelThreshold=null] The number of pixels that the user must move their finger back from the original swipe direction to cancel the gesture.
  * @property {int} [pinchThreshold=20] The number of pixels that the user must pinch their finger by before it is considered a pinch.
  * @property {int} [maxTimeThreshold=null] Time, in milliseconds, between touchStart and touchEnd must NOT exceed in order to be considered a swipe.
  * @property {int} [fingerReleaseThreshold=250] Time in milliseconds between releasing multiple fingers.  If 2 fingers are down, and are released one after the other, if they are within this threshold, it counts as a simultaneous release.
  * @property {int} [longTapThreshold=500] Time in milliseconds between tap and release for a long tap
  * @property {int} [doubleTapThreshold=200] Time in milliseconds between 2 taps to count as a double tap
  * @property {function} [swipe=null] A handler to catch all swipes. See {@link $.fn.swipe#event:swipe}
  * @property {function} [swipeLeft=null] A handler that is triggered for "left" swipes. See {@link $.fn.swipe#event:swipeLeft}
  * @property {function} [swipeRight=null] A handler that is triggered for "right" swipes. See {@link $.fn.swipe#event:swipeRight}
  * @property {function} [swipeUp=null] A handler that is triggered for "up" swipes. See {@link $.fn.swipe#event:swipeUp}
  * @property {function} [swipeDown=null] A handler that is triggered for "down" swipes. See {@link $.fn.swipe#event:swipeDown}
  * @property {function} [swipeStatus=null] A handler triggered for every phase of the swipe. See {@link $.fn.swipe#event:swipeStatus}
  * @property {function} [pinchIn=null] A handler triggered for pinch in events. See {@link $.fn.swipe#event:pinchIn}
  * @property {function} [pinchOut=null] A handler triggered for pinch out events. See {@link $.fn.swipe#event:pinchOut}
  * @property {function} [pinchStatus=null] A handler triggered for every phase of a pinch. See {@link $.fn.swipe#event:pinchStatus}
  * @property {function} [tap=null] A handler triggered when a user just taps on the item, rather than swipes it. If they do not move, tap is triggered, if they do move, it is not.
  * @property {function} [doubleTap=null] A handler triggered when a user double taps on the item. The delay between taps can be set with the doubleTapThreshold property. See {@link $.fn.swipe.defaults#doubleTapThreshold}
  * @property {function} [longTap=null] A handler triggered when a user long taps on the item. The delay between start and end can be set with the longTapThreshold property. See {@link $.fn.swipe.defaults#longTapThreshold}
  * @property (function) [hold=null] A handler triggered when a user reaches longTapThreshold on the item. See {@link $.fn.swipe.defaults#longTapThreshold}
  * @property {boolean} [triggerOnTouchEnd=true] If true, the swipe events are triggered when the touch end event is received (user releases finger).  If false, it will be triggered on reaching the threshold, and then cancel the touch event automatically.
  * @property {boolean} [triggerOnTouchLeave=false] If true, then when the user leaves the swipe object, the swipe will end and trigger appropriate handlers.
  * @property {string|undefined} [allowPageScroll='auto'] How the browser handles page scrolls when the user is swiping on a touchSwipe object. See {@link $.fn.swipe.pageScroll}.  <br/><br/>
                    <code>"auto"</code> : all undefined swipes will cause the page to scroll in that direction. <br/>
                    <code>"none"</code> : the page will not scroll when user swipes. <br/>
                    <code>"horizontal"</code> : will force page to scroll on horizontal swipes. <br/>
                    <code>"vertical"</code> : will force page to scroll on vertical swipes. <br/>
  * @property {boolean} [fallbackToMouseEvents=true] If true mouse events are used when run on a non touch device, false will stop swipes being triggered by mouse events on non touch devices.
  * @property {string} [excludedElements=".noSwipe"] A jquery selector that specifies child elements that do NOT trigger swipes. By default this excludes elements with the class .noSwipe .
  * @property {boolean} [preventDefaultEvents=true] by default default events are cancelled, so the page doesn't move.  You can disable this so both native events fire as well as your handlers.

  */var defaults={fingers:1,threshold:75,cancelThreshold:null,pinchThreshold:20,maxTimeThreshold:null,fingerReleaseThreshold:250,longTapThreshold:500,doubleTapThreshold:200,swipe:null,swipeLeft:null,swipeRight:null,swipeUp:null,swipeDown:null,swipeStatus:null,pinchIn:null,pinchOut:null,pinchStatus:null,click:null,//Deprecated since 1.6.2
tap:null,doubleTap:null,longTap:null,hold:null,triggerOnTouchEnd:true,triggerOnTouchLeave:false,allowPageScroll:"auto",fallbackToMouseEvents:true,excludedElements:".noSwipe",preventDefaultEvents:true};/**
   * Applies TouchSwipe behaviour to one or more jQuery objects.
   * The TouchSwipe plugin can be instantiated via this method, or methods within
   * TouchSwipe can be executed via this method as per jQuery plugin architecture.
   * An existing plugin can have its options changed simply by re calling .swipe(options)
   * @see TouchSwipe
   * @class
   * @param {Mixed} method If the current DOMNode is a TouchSwipe object, and <code>method</code> is a TouchSwipe method, then
   * the <code>method</code> is executed, and any following arguments are passed to the TouchSwipe method.
   * If <code>method</code> is an object, then the TouchSwipe class is instantiated on the current DOMNode, passing the
   * configuration properties defined in the object. See TouchSwipe
   *
   */$.fn.swipe=function(method){var $this=$(this),plugin=$this.data(PLUGIN_NS);//Check if we are already instantiated and trying to execute a method
if(plugin&&typeof method==='string'){if(plugin[method]){return plugin[method].apply(plugin,Array.prototype.slice.call(arguments,1));}else{$.error('Method '+method+' does not exist on jQuery.swipe');}}//Else update existing plugin with new options hash
else if(plugin&&_typeof(method)==='object'){plugin['option'].apply(plugin,arguments);}//Else not instantiated and trying to pass init object (or nothing)
else if(!plugin&&(_typeof(method)==='object'||!method)){return init.apply(this,arguments);}return $this;};/**
   * The version of the plugin
   * @readonly
   */$.fn.swipe.version=VERSION;//Expose our defaults so a user could override the plugin defaults
$.fn.swipe.defaults=defaults;/**
   * The phases that a touch event goes through.  The <code>phase</code> is passed to the event handlers.
   * These properties are read only, attempting to change them will not alter the values passed to the event handlers.
   * @namespace
   * @readonly
   * @property {string} PHASE_START Constant indicating the start phase of the touch event. Value is <code>"start"</code>.
   * @property {string} PHASE_MOVE Constant indicating the move phase of the touch event. Value is <code>"move"</code>.
   * @property {string} PHASE_END Constant indicating the end phase of the touch event. Value is <code>"end"</code>.
   * @property {string} PHASE_CANCEL Constant indicating the cancel phase of the touch event. Value is <code>"cancel"</code>.
   */$.fn.swipe.phases={PHASE_START:PHASE_START,PHASE_MOVE:PHASE_MOVE,PHASE_END:PHASE_END,PHASE_CANCEL:PHASE_CANCEL};/**
   * The direction constants that are passed to the event handlers.
   * These properties are read only, attempting to change them will not alter the values passed to the event handlers.
   * @namespace
   * @readonly
   * @property {string} LEFT Constant indicating the left direction. Value is <code>"left"</code>.
   * @property {string} RIGHT Constant indicating the right direction. Value is <code>"right"</code>.
   * @property {string} UP Constant indicating the up direction. Value is <code>"up"</code>.
   * @property {string} DOWN Constant indicating the down direction. Value is <code>"cancel"</code>.
   * @property {string} IN Constant indicating the in direction. Value is <code>"in"</code>.
   * @property {string} OUT Constant indicating the out direction. Value is <code>"out"</code>.
   */$.fn.swipe.directions={LEFT:LEFT,RIGHT:RIGHT,UP:UP,DOWN:DOWN,IN:IN,OUT:OUT};/**
   * The page scroll constants that can be used to set the value of <code>allowPageScroll</code> option
   * These properties are read only
   * @namespace
   * @readonly
   * @see $.fn.swipe.defaults#allowPageScroll
   * @property {string} NONE Constant indicating no page scrolling is allowed. Value is <code>"none"</code>.
   * @property {string} HORIZONTAL Constant indicating horizontal page scrolling is allowed. Value is <code>"horizontal"</code>.
   * @property {string} VERTICAL Constant indicating vertical page scrolling is allowed. Value is <code>"vertical"</code>.
   * @property {string} AUTO Constant indicating either horizontal or vertical will be allowed, depending on the swipe handlers registered. Value is <code>"auto"</code>.
   */$.fn.swipe.pageScroll={NONE:NONE,HORIZONTAL:HORIZONTAL,VERTICAL:VERTICAL,AUTO:AUTO};/**
   * Constants representing the number of fingers used in a swipe.  These are used to set both the value of <code>fingers</code> in the
   * options object, as well as the value of the <code>fingers</code> event property.
   * These properties are read only, attempting to change them will not alter the values passed to the event handlers.
   * @namespace
   * @readonly
   * @see $.fn.swipe.defaults#fingers
   * @property {string} ONE Constant indicating 1 finger is to be detected / was detected. Value is <code>1</code>.
   * @property {string} TWO Constant indicating 2 fingers are to be detected / were detected. Value is <code>2</code>.
   * @property {string} THREE Constant indicating 3 finger are to be detected / were detected. Value is <code>3</code>.
   * @property {string} FOUR Constant indicating 4 finger are to be detected / were detected. Not all devices support this. Value is <code>4</code>.
   * @property {string} FIVE Constant indicating 5 finger are to be detected / were detected. Not all devices support this. Value is <code>5</code>.
   * @property {string} ALL Constant indicating any combination of finger are to be detected.  Value is <code>"all"</code>.
   */$.fn.swipe.fingers={ONE:1,TWO:2,THREE:3,FOUR:4,FIVE:5,ALL:ALL_FINGERS};/**
   * Initialise the plugin for each DOM element matched
   * This creates a new instance of the main TouchSwipe class for each DOM element, and then
   * saves a reference to that instance in the elements data property.
   * @internal
   */function init(options){//Prep and extend the options
if(options&&options.allowPageScroll===undefined&&(options.swipe!==undefined||options.swipeStatus!==undefined)){options.allowPageScroll=NONE;}//Check for deprecated options
//Ensure that any old click handlers are assigned to the new tap, unless we have a tap
if(options.click!==undefined&&options.tap===undefined){options.tap=options.click;}if(!options){options={};}//pass empty object so we dont modify the defaults
options=$.extend({},$.fn.swipe.defaults,options);//For each element instantiate the plugin
return this.each(function(){var $this=$(this);//Check we havent already initialised the plugin
var plugin=$this.data(PLUGIN_NS);if(!plugin){plugin=new TouchSwipe(this,options);$this.data(PLUGIN_NS,plugin);}});}/**
   * Main TouchSwipe Plugin Class.
   * Do not use this to construct your TouchSwipe object, use the jQuery plugin method $.fn.swipe(); {@link $.fn.swipe}
   * @private
   * @name TouchSwipe
   * @param {DOMNode} element The HTML DOM object to apply to plugin to
   * @param {Object} options The options to configure the plugin with.  @link {$.fn.swipe.defaults}
   * @see $.fh.swipe.defaults
   * @see $.fh.swipe
   * @class
   */function TouchSwipe(element,options){//take a local/instacne level copy of the options - should make it this.options really...
var options=$.extend({},options);var useTouchEvents=SUPPORTS_TOUCH||SUPPORTS_POINTER||!options.fallbackToMouseEvents,START_EV=useTouchEvents?SUPPORTS_POINTER?SUPPORTS_POINTER_IE10?'MSPointerDown':'pointerdown':'touchstart':'mousedown',MOVE_EV=useTouchEvents?SUPPORTS_POINTER?SUPPORTS_POINTER_IE10?'MSPointerMove':'pointermove':'touchmove':'mousemove',END_EV=useTouchEvents?SUPPORTS_POINTER?SUPPORTS_POINTER_IE10?'MSPointerUp':'pointerup':'touchend':'mouseup',LEAVE_EV=useTouchEvents?SUPPORTS_POINTER?'mouseleave':null:'mouseleave',//we manually detect leave on touch devices, so null event here
CANCEL_EV=SUPPORTS_POINTER?SUPPORTS_POINTER_IE10?'MSPointerCancel':'pointercancel':'touchcancel';//touch properties
var distance=0,direction=null,currentDirection=null,duration=0,startTouchesDistance=0,endTouchesDistance=0,pinchZoom=1,pinchDistance=0,pinchDirection=0,maximumsMap=null;//jQuery wrapped element for this instance
var $element=$(element);//Current phase of th touch cycle
var phase="start";// the current number of fingers being used.
var fingerCount=0;//track mouse points / delta
var fingerData={};//track times
var startTime=0,endTime=0,previousTouchEndTime=0,fingerCountAtRelease=0,doubleTapStartTime=0;//Timeouts
var singleTapTimeout=null,holdTimeout=null;// Add gestures to all swipable areas if supported
try{$element.on(START_EV,touchStart);$element.on(CANCEL_EV,touchCancel);}catch(e){$.error('events not supported '+START_EV+','+CANCEL_EV+' on jQuery.swipe');}//
//Public methods
//
/**
     * re-enables the swipe plugin with the previous configuration
     * @function
     * @name $.fn.swipe#enable
     * @return {DOMNode} The Dom element that was registered with TouchSwipe
     * @example $("#element").swipe("enable");
     */this.enable=function(){//Incase we are already enabled, clean up...
this.disable();$element.on(START_EV,touchStart);$element.on(CANCEL_EV,touchCancel);return $element;};/**
     * disables the swipe plugin
     * @function
     * @name $.fn.swipe#disable
     * @return {DOMNode} The Dom element that is now registered with TouchSwipe
     * @example $("#element").swipe("disable");
     */this.disable=function(){removeListeners();return $element;};/**
     * Destroy the swipe plugin completely. To use any swipe methods, you must re initialise the plugin.
     * @function
     * @name $.fn.swipe#destroy
     * @example $("#element").swipe("destroy");
     */this.destroy=function(){removeListeners();$element.data(PLUGIN_NS,null);$element=null;};/**
     * Allows run time updating of the swipe configuration options.
     * @function
     * @name $.fn.swipe#option
     * @param {String} property The option property to get or set, or a has of multiple options to set
     * @param {Object} [value] The value to set the property to
     * @return {Object} If only a property name is passed, then that property value is returned. If nothing is passed the current options hash is returned.
     * @example $("#element").swipe("option", "threshold"); // return the threshold
     * @example $("#element").swipe("option", "threshold", 100); // set the threshold after init
     * @example $("#element").swipe("option", {threshold:100, fingers:3} ); // set multiple properties after init
     * @example $("#element").swipe({threshold:100, fingers:3} ); // set multiple properties after init - the "option" method is optional!
     * @example $("#element").swipe("option"); // Return the current options hash
     * @see $.fn.swipe.defaults
     *
     */this.option=function(property,value){if(_typeof(property)==='object'){options=$.extend(options,property);}else if(options[property]!==undefined){if(value===undefined){return options[property];}else{options[property]=value;}}else if(!property){return options;}else{$.error('Option '+property+' does not exist on jQuery.swipe.options');}return null;};//
// Private methods
//
//
// EVENTS
//
/**
     * Event handler for a touch start event.
     * Stops the default click event from triggering and stores where we touched
     * @inner
     * @param {object} jqEvent The normalised jQuery event object.
     */function touchStart(jqEvent){//If we already in a touch event (a finger already in use) then ignore subsequent ones..
if(getTouchInProgress()){return;}//Check if this element matches any in the excluded elements selectors,  or its parent is excluded, if so, DON'T swipe
if($(jqEvent.target).closest(options.excludedElements,$element).length>0){return;}//As we use Jquery bind for events, we need to target the original event object
//If these events are being programmatically triggered, we don't have an original event object, so use the Jq one.
var event=jqEvent.originalEvent?jqEvent.originalEvent:jqEvent;//If we have a pointer event, whoes type is 'mouse' and we have said NO mouse events, then dont do anything.
if(event.pointerType&&event.pointerType=="mouse"&&options.fallbackToMouseEvents==false){return;};var ret,touches=event.touches,evt=touches?touches[0]:event;phase=PHASE_START;//If we support touches, get the finger count
if(touches){// get the total number of fingers touching the screen
fingerCount=touches.length;}//Else this is the desktop, so stop the browser from dragging content
else if(options.preventDefaultEvents!==false){jqEvent.preventDefault();//call this on jq event so we are cross browser
}//clear vars..
distance=0;direction=null;currentDirection=null;pinchDirection=null;duration=0;startTouchesDistance=0;endTouchesDistance=0;pinchZoom=1;pinchDistance=0;maximumsMap=createMaximumsData();cancelMultiFingerRelease();//Create the default finger data
createFingerData(0,evt);// check the number of fingers is what we are looking for, or we are capturing pinches
if(!touches||fingerCount===options.fingers||options.fingers===ALL_FINGERS||hasPinches()){// get the coordinates of the touch
startTime=getTimeStamp();if(fingerCount==2){//Keep track of the initial pinch distance, so we can calculate the diff later
//Store second finger data as start
createFingerData(1,touches[1]);startTouchesDistance=endTouchesDistance=calculateTouchesDistance(fingerData[0].start,fingerData[1].start);}if(options.swipeStatus||options.pinchStatus){ret=triggerHandler(event,phase);}}else{//A touch with more or less than the fingers we are looking for, so cancel
ret=false;}//If we have a return value from the users handler, then return and cancel
if(ret===false){phase=PHASE_CANCEL;triggerHandler(event,phase);return ret;}else{if(options.hold){holdTimeout=setTimeout($.proxy(function(){//Trigger the event
$element.trigger('hold',[event.target]);//Fire the callback
if(options.hold){ret=options.hold.call($element,event,event.target);}},this),options.longTapThreshold);}setTouchInProgress(true);}return null;};/**
     * Event handler for a touch move event.
     * If we change fingers during move, then cancel the event
     * @inner
     * @param {object} jqEvent The normalised jQuery event object.
     */function touchMove(jqEvent){//As we use Jquery bind for events, we need to target the original event object
//If these events are being programmatically triggered, we don't have an original event object, so use the Jq one.
var event=jqEvent.originalEvent?jqEvent.originalEvent:jqEvent;//If we are ending, cancelling, or within the threshold of 2 fingers being released, don't track anything..
if(phase===PHASE_END||phase===PHASE_CANCEL||inMultiFingerRelease())return;var ret,touches=event.touches,evt=touches?touches[0]:event;//Update the  finger data
var currentFinger=updateFingerData(evt);endTime=getTimeStamp();if(touches){fingerCount=touches.length;}if(options.hold){clearTimeout(holdTimeout);}phase=PHASE_MOVE;//If we have 2 fingers get Touches distance as well
if(fingerCount==2){//Keep track of the initial pinch distance, so we can calculate the diff later
//We do this here as well as the start event, in case they start with 1 finger, and the press 2 fingers
if(startTouchesDistance==0){//Create second finger if this is the first time...
createFingerData(1,touches[1]);startTouchesDistance=endTouchesDistance=calculateTouchesDistance(fingerData[0].start,fingerData[1].start);}else{//Else just update the second finger
updateFingerData(touches[1]);endTouchesDistance=calculateTouchesDistance(fingerData[0].end,fingerData[1].end);pinchDirection=calculatePinchDirection(fingerData[0].end,fingerData[1].end);}pinchZoom=calculatePinchZoom(startTouchesDistance,endTouchesDistance);pinchDistance=Math.abs(startTouchesDistance-endTouchesDistance);}if(fingerCount===options.fingers||options.fingers===ALL_FINGERS||!touches||hasPinches()){//The overall direction of the swipe. From start to now.
direction=calculateDirection(currentFinger.start,currentFinger.end);//The immediate direction of the swipe, direction between the last movement and this one.
currentDirection=calculateDirection(currentFinger.last,currentFinger.end);//Check if we need to prevent default event (page scroll / pinch zoom) or not
validateDefaultEvent(jqEvent,currentDirection);//Distance and duration are all off the main finger
distance=calculateDistance(currentFinger.start,currentFinger.end);duration=calculateDuration();//Cache the maximum distance we made in this direction
setMaxDistance(direction,distance);//Trigger status handler
ret=triggerHandler(event,phase);//If we trigger end events when threshold are met, or trigger events when touch leaves element
if(!options.triggerOnTouchEnd||options.triggerOnTouchLeave){var inBounds=true;//If checking if we leave the element, run the bounds check (we can use touchleave as its not supported on webkit)
if(options.triggerOnTouchLeave){var bounds=getbounds(this);inBounds=isInBounds(currentFinger.end,bounds);}//Trigger end handles as we swipe if thresholds met or if we have left the element if the user has asked to check these..
if(!options.triggerOnTouchEnd&&inBounds){phase=getNextPhase(PHASE_MOVE);}//We end if out of bounds here, so set current phase to END, and check if its modified
else if(options.triggerOnTouchLeave&&!inBounds){phase=getNextPhase(PHASE_END);}if(phase==PHASE_CANCEL||phase==PHASE_END){triggerHandler(event,phase);}}}else{phase=PHASE_CANCEL;triggerHandler(event,phase);}if(ret===false){phase=PHASE_CANCEL;triggerHandler(event,phase);}}/**
     * Event handler for a touch end event.
     * Calculate the direction and trigger events
     * @inner
     * @param {object} jqEvent The normalised jQuery event object.
     */function touchEnd(jqEvent){//As we use Jquery bind for events, we need to target the original event object
//If these events are being programmatically triggered, we don't have an original event object, so use the Jq one.
var event=jqEvent.originalEvent?jqEvent.originalEvent:jqEvent,touches=event.touches;//If we are still in a touch with the device wait a fraction and see if the other finger comes up
//if it does within the threshold, then we treat it as a multi release, not a single release and end the touch / swipe
if(touches){if(touches.length&&!inMultiFingerRelease()){startMultiFingerRelease(event);return true;}else if(touches.length&&inMultiFingerRelease()){return true;}}//If a previous finger has been released, check how long ago, if within the threshold, then assume it was a multifinger release.
//This is used to allow 2 fingers to release fractionally after each other, whilst maintaining the event as containing 2 fingers, not 1
if(inMultiFingerRelease()){fingerCount=fingerCountAtRelease;}//Set end of swipe
endTime=getTimeStamp();//Get duration incase move was never fired
duration=calculateDuration();//If we trigger handlers at end of swipe OR, we trigger during, but they didnt trigger and we are still in the move phase
if(didSwipeBackToCancel()||!validateSwipeDistance()){phase=PHASE_CANCEL;triggerHandler(event,phase);}else if(options.triggerOnTouchEnd||options.triggerOnTouchEnd===false&&phase===PHASE_MOVE){//call this on jq event so we are cross browser
if(options.preventDefaultEvents!==false&&jqEvent.cancelable!==false){jqEvent.preventDefault();}phase=PHASE_END;triggerHandler(event,phase);}//Special cases - A tap should always fire on touch end regardless,
//So here we manually trigger the tap end handler by itself
//We dont run trigger handler as it will re-trigger events that may have fired already
else if(!options.triggerOnTouchEnd&&hasTap()){//Trigger the pinch events...
phase=PHASE_END;triggerHandlerForGesture(event,phase,TAP);}else if(phase===PHASE_MOVE){phase=PHASE_CANCEL;triggerHandler(event,phase);}setTouchInProgress(false);return null;}/**
     * Event handler for a touch cancel event.
     * Clears current vars
     * @inner
     */function touchCancel(){// reset the variables back to default values
fingerCount=0;endTime=0;startTime=0;startTouchesDistance=0;endTouchesDistance=0;pinchZoom=1;//If we were in progress of tracking a possible multi touch end, then re set it.
cancelMultiFingerRelease();setTouchInProgress(false);}/**
     * Event handler for a touch leave event.
     * This is only triggered on desktops, in touch we work this out manually
     * as the touchleave event is not supported in webkit
     * @inner
     */function touchLeave(jqEvent){//If these events are being programmatically triggered, we don't have an original event object, so use the Jq one.
var event=jqEvent.originalEvent?jqEvent.originalEvent:jqEvent;//If we have the trigger on leave property set....
if(options.triggerOnTouchLeave){phase=getNextPhase(PHASE_END);triggerHandler(event,phase);}}/**
     * Removes all listeners that were associated with the plugin
     * @inner
     */function removeListeners(){$element.off(START_EV,touchStart);$element.off(CANCEL_EV,touchCancel);$element.off(MOVE_EV,touchMove);$element.off(END_EV,touchEnd);//we only have leave events on desktop, we manually calculate leave on touch as its not supported in webkit
if(LEAVE_EV){$element.off(LEAVE_EV,touchLeave);}setTouchInProgress(false);}/**
     * Checks if the time and distance thresholds have been met, and if so then the appropriate handlers are fired.
     */function getNextPhase(currentPhase){var nextPhase=currentPhase;// Ensure we have valid swipe (under time and over distance  and check if we are out of bound...)
var validTime=validateSwipeTime();var validDistance=validateSwipeDistance();var didCancel=didSwipeBackToCancel();//If we have exceeded our time, then cancel
if(!validTime||didCancel){nextPhase=PHASE_CANCEL;}//Else if we are moving, and have reached distance then end
else if(validDistance&&currentPhase==PHASE_MOVE&&(!options.triggerOnTouchEnd||options.triggerOnTouchLeave)){nextPhase=PHASE_END;}//Else if we have ended by leaving and didn't reach distance, then cancel
else if(!validDistance&&currentPhase==PHASE_END&&options.triggerOnTouchLeave){nextPhase=PHASE_CANCEL;}return nextPhase;}/**
     * Trigger the relevant event handler
     * The handlers are passed the original event, the element that was swiped, and in the case of the catch all handler, the direction that was swiped, "left", "right", "up", or "down"
     * @param {object} event the original event object
     * @param {string} phase the phase of the swipe (start, end cancel etc) {@link $.fn.swipe.phases}
     * @inner
     */function triggerHandler(event,phase){var ret,touches=event.touches;// SWIPE GESTURES
if(didSwipe()||hasSwipes()){ret=triggerHandlerForGesture(event,phase,SWIPE);}// PINCH GESTURES (if the above didn't cancel)
if((didPinch()||hasPinches())&&ret!==false){ret=triggerHandlerForGesture(event,phase,PINCH);}// CLICK / TAP (if the above didn't cancel)
if(didDoubleTap()&&ret!==false){//Trigger the tap events...
ret=triggerHandlerForGesture(event,phase,DOUBLE_TAP);}// CLICK / TAP (if the above didn't cancel)
else if(didLongTap()&&ret!==false){//Trigger the tap events...
ret=triggerHandlerForGesture(event,phase,LONG_TAP);}// CLICK / TAP (if the above didn't cancel)
else if(didTap()&&ret!==false){//Trigger the tap event..
ret=triggerHandlerForGesture(event,phase,TAP);}// If we are cancelling the gesture, then manually trigger the reset handler
if(phase===PHASE_CANCEL){touchCancel(event);}// If we are ending the gesture, then manually trigger the reset handler IF all fingers are off
if(phase===PHASE_END){//If we support touch, then check that all fingers are off before we cancel
if(touches){if(!touches.length){touchCancel(event);}}else{touchCancel(event);}}return ret;}/**
     * Trigger the relevant event handler
     * The handlers are passed the original event, the element that was swiped, and in the case of the catch all handler, the direction that was swiped, "left", "right", "up", or "down"
     * @param {object} event the original event object
     * @param {string} phase the phase of the swipe (start, end cancel etc) {@link $.fn.swipe.phases}
     * @param {string} gesture the gesture to trigger a handler for : PINCH or SWIPE {@link $.fn.swipe.gestures}
     * @return Boolean False, to indicate that the event should stop propagation, or void.
     * @inner
     */function triggerHandlerForGesture(event,phase,gesture){var ret;//SWIPES....
if(gesture==SWIPE){//Trigger status every time..
$element.trigger('swipeStatus',[phase,direction||null,distance||0,duration||0,fingerCount,fingerData,currentDirection]);if(options.swipeStatus){ret=options.swipeStatus.call($element,event,phase,direction||null,distance||0,duration||0,fingerCount,fingerData,currentDirection);//If the status cancels, then dont run the subsequent event handlers..
if(ret===false)return false;}if(phase==PHASE_END&&validateSwipe()){//Cancel any taps that were in progress...
clearTimeout(singleTapTimeout);clearTimeout(holdTimeout);$element.trigger('swipe',[direction,distance,duration,fingerCount,fingerData,currentDirection]);if(options.swipe){ret=options.swipe.call($element,event,direction,distance,duration,fingerCount,fingerData,currentDirection);//If the status cancels, then dont run the subsequent event handlers..
if(ret===false)return false;}//trigger direction specific event handlers
switch(direction){case LEFT:$element.trigger('swipeLeft',[direction,distance,duration,fingerCount,fingerData,currentDirection]);if(options.swipeLeft){ret=options.swipeLeft.call($element,event,direction,distance,duration,fingerCount,fingerData,currentDirection);}break;case RIGHT:$element.trigger('swipeRight',[direction,distance,duration,fingerCount,fingerData,currentDirection]);if(options.swipeRight){ret=options.swipeRight.call($element,event,direction,distance,duration,fingerCount,fingerData,currentDirection);}break;case UP:$element.trigger('swipeUp',[direction,distance,duration,fingerCount,fingerData,currentDirection]);if(options.swipeUp){ret=options.swipeUp.call($element,event,direction,distance,duration,fingerCount,fingerData,currentDirection);}break;case DOWN:$element.trigger('swipeDown',[direction,distance,duration,fingerCount,fingerData,currentDirection]);if(options.swipeDown){ret=options.swipeDown.call($element,event,direction,distance,duration,fingerCount,fingerData,currentDirection);}break;}}}//PINCHES....
if(gesture==PINCH){$element.trigger('pinchStatus',[phase,pinchDirection||null,pinchDistance||0,duration||0,fingerCount,pinchZoom,fingerData]);if(options.pinchStatus){ret=options.pinchStatus.call($element,event,phase,pinchDirection||null,pinchDistance||0,duration||0,fingerCount,pinchZoom,fingerData);//If the status cancels, then dont run the subsequent event handlers..
if(ret===false)return false;}if(phase==PHASE_END&&validatePinch()){switch(pinchDirection){case IN:$element.trigger('pinchIn',[pinchDirection||null,pinchDistance||0,duration||0,fingerCount,pinchZoom,fingerData]);if(options.pinchIn){ret=options.pinchIn.call($element,event,pinchDirection||null,pinchDistance||0,duration||0,fingerCount,pinchZoom,fingerData);}break;case OUT:$element.trigger('pinchOut',[pinchDirection||null,pinchDistance||0,duration||0,fingerCount,pinchZoom,fingerData]);if(options.pinchOut){ret=options.pinchOut.call($element,event,pinchDirection||null,pinchDistance||0,duration||0,fingerCount,pinchZoom,fingerData);}break;}}}if(gesture==TAP){if(phase===PHASE_CANCEL||phase===PHASE_END){clearTimeout(singleTapTimeout);clearTimeout(holdTimeout);//If we are also looking for doubelTaps, wait incase this is one...
if(hasDoubleTap()&&!inDoubleTap()){doubleTapStartTime=getTimeStamp();//Now wait for the double tap timeout, and trigger this single tap
//if its not cancelled by a double tap
singleTapTimeout=setTimeout($.proxy(function(){doubleTapStartTime=null;$element.trigger('tap',[event.target]);if(options.tap){ret=options.tap.call($element,event,event.target);}},this),options.doubleTapThreshold);}else{doubleTapStartTime=null;$element.trigger('tap',[event.target]);if(options.tap){ret=options.tap.call($element,event,event.target);}}}}else if(gesture==DOUBLE_TAP){if(phase===PHASE_CANCEL||phase===PHASE_END){clearTimeout(singleTapTimeout);clearTimeout(holdTimeout);doubleTapStartTime=null;$element.trigger('doubletap',[event.target]);if(options.doubleTap){ret=options.doubleTap.call($element,event,event.target);}}}else if(gesture==LONG_TAP){if(phase===PHASE_CANCEL||phase===PHASE_END){clearTimeout(singleTapTimeout);doubleTapStartTime=null;$element.trigger('longtap',[event.target]);if(options.longTap){ret=options.longTap.call($element,event,event.target);}}}return ret;}//
// GESTURE VALIDATION
//
/**
     * Checks the user has swipe far enough
     * @return Boolean if <code>threshold</code> has been set, return true if the threshold was met, else false.
     * If no threshold was set, then we return true.
     * @inner
     */function validateSwipeDistance(){var valid=true;//If we made it past the min swipe distance..
if(options.threshold!==null){valid=distance>=options.threshold;}return valid;}/**
     * Checks the user has swiped back to cancel.
     * @return Boolean if <code>cancelThreshold</code> has been set, return true if the cancelThreshold was met, else false.
     * If no cancelThreshold was set, then we return true.
     * @inner
     */function didSwipeBackToCancel(){var cancelled=false;if(options.cancelThreshold!==null&&direction!==null){cancelled=getMaxDistance(direction)-distance>=options.cancelThreshold;}return cancelled;}/**
     * Checks the user has pinched far enough
     * @return Boolean if <code>pinchThreshold</code> has been set, return true if the threshold was met, else false.
     * If no threshold was set, then we return true.
     * @inner
     */function validatePinchDistance(){if(options.pinchThreshold!==null){return pinchDistance>=options.pinchThreshold;}return true;}/**
     * Checks that the time taken to swipe meets the minimum / maximum requirements
     * @return Boolean
     * @inner
     */function validateSwipeTime(){var result;//If no time set, then return true
if(options.maxTimeThreshold){if(duration>=options.maxTimeThreshold){result=false;}else{result=true;}}else{result=true;}return result;}/**
     * Checks direction of the swipe and the value allowPageScroll to see if we should allow or prevent the default behaviour from occurring.
     * This will essentially allow page scrolling or not when the user is swiping on a touchSwipe object.
     * @param {object} jqEvent The normalised jQuery representation of the event object.
     * @param {string} direction The direction of the event. See {@link $.fn.swipe.directions}
     * @see $.fn.swipe.directions
     * @inner
     */function validateDefaultEvent(jqEvent,direction){//If the option is set, allways allow the event to bubble up (let user handle weirdness)
if(options.preventDefaultEvents===false){return;}if(options.allowPageScroll===NONE){jqEvent.preventDefault();}else{var auto=options.allowPageScroll===AUTO;switch(direction){case LEFT:if(options.swipeLeft&&auto||!auto&&options.allowPageScroll!=HORIZONTAL){jqEvent.preventDefault();}break;case RIGHT:if(options.swipeRight&&auto||!auto&&options.allowPageScroll!=HORIZONTAL){jqEvent.preventDefault();}break;case UP:if(options.swipeUp&&auto||!auto&&options.allowPageScroll!=VERTICAL){jqEvent.preventDefault();}break;case DOWN:if(options.swipeDown&&auto||!auto&&options.allowPageScroll!=VERTICAL){jqEvent.preventDefault();}break;case NONE:break;}}}// PINCHES
/**
     * Returns true of the current pinch meets the thresholds
     * @return Boolean
     * @inner
     */function validatePinch(){var hasCorrectFingerCount=validateFingers();var hasEndPoint=validateEndPoint();var hasCorrectDistance=validatePinchDistance();return hasCorrectFingerCount&&hasEndPoint&&hasCorrectDistance;}/**
     * Returns true if any Pinch events have been registered
     * @return Boolean
     * @inner
     */function hasPinches(){//Enure we dont return 0 or null for false values
return!!(options.pinchStatus||options.pinchIn||options.pinchOut);}/**
     * Returns true if we are detecting pinches, and have one
     * @return Boolean
     * @inner
     */function didPinch(){//Enure we dont return 0 or null for false values
return!!(validatePinch()&&hasPinches());}// SWIPES
/**
     * Returns true if the current swipe meets the thresholds
     * @return Boolean
     * @inner
     */function validateSwipe(){//Check validity of swipe
var hasValidTime=validateSwipeTime();var hasValidDistance=validateSwipeDistance();var hasCorrectFingerCount=validateFingers();var hasEndPoint=validateEndPoint();var didCancel=didSwipeBackToCancel();// if the user swiped more than the minimum length, perform the appropriate action
// hasValidDistance is null when no distance is set
var valid=!didCancel&&hasEndPoint&&hasCorrectFingerCount&&hasValidDistance&&hasValidTime;return valid;}/**
     * Returns true if any Swipe events have been registered
     * @return Boolean
     * @inner
     */function hasSwipes(){//Enure we dont return 0 or null for false values
return!!(options.swipe||options.swipeStatus||options.swipeLeft||options.swipeRight||options.swipeUp||options.swipeDown);}/**
     * Returns true if we are detecting swipes and have one
     * @return Boolean
     * @inner
     */function didSwipe(){//Enure we dont return 0 or null for false values
return!!(validateSwipe()&&hasSwipes());}/**
     * Returns true if we have matched the number of fingers we are looking for
     * @return Boolean
     * @inner
     */function validateFingers(){//The number of fingers we want were matched, or on desktop we ignore
return fingerCount===options.fingers||options.fingers===ALL_FINGERS||!SUPPORTS_TOUCH;}/**
     * Returns true if we have an end point for the swipe
     * @return Boolean
     * @inner
     */function validateEndPoint(){//We have an end value for the finger
return fingerData[0].end.x!==0;}// TAP / CLICK
/**
     * Returns true if a click / tap events have been registered
     * @return Boolean
     * @inner
     */function hasTap(){//Enure we dont return 0 or null for false values
return!!options.tap;}/**
     * Returns true if a double tap events have been registered
     * @return Boolean
     * @inner
     */function hasDoubleTap(){//Enure we dont return 0 or null for false values
return!!options.doubleTap;}/**
     * Returns true if any long tap events have been registered
     * @return Boolean
     * @inner
     */function hasLongTap(){//Enure we dont return 0 or null for false values
return!!options.longTap;}/**
     * Returns true if we could be in the process of a double tap (one tap has occurred, we are listening for double taps, and the threshold hasn't past.
     * @return Boolean
     * @inner
     */function validateDoubleTap(){if(doubleTapStartTime==null){return false;}var now=getTimeStamp();return hasDoubleTap()&&now-doubleTapStartTime<=options.doubleTapThreshold;}/**
     * Returns true if we could be in the process of a double tap (one tap has occurred, we are listening for double taps, and the threshold hasn't past.
     * @return Boolean
     * @inner
     */function inDoubleTap(){return validateDoubleTap();}/**
     * Returns true if we have a valid tap
     * @return Boolean
     * @inner
     */function validateTap(){return(fingerCount===1||!SUPPORTS_TOUCH)&&(isNaN(distance)||distance<options.threshold);}/**
     * Returns true if we have a valid long tap
     * @return Boolean
     * @inner
     */function validateLongTap(){//slight threshold on moving finger
return duration>options.longTapThreshold&&distance<DOUBLE_TAP_THRESHOLD;}/**
     * Returns true if we are detecting taps and have one
     * @return Boolean
     * @inner
     */function didTap(){//Enure we dont return 0 or null for false values
return!!(validateTap()&&hasTap());}/**
     * Returns true if we are detecting double taps and have one
     * @return Boolean
     * @inner
     */function didDoubleTap(){//Enure we dont return 0 or null for false values
return!!(validateDoubleTap()&&hasDoubleTap());}/**
     * Returns true if we are detecting long taps and have one
     * @return Boolean
     * @inner
     */function didLongTap(){//Enure we dont return 0 or null for false values
return!!(validateLongTap()&&hasLongTap());}// MULTI FINGER TOUCH
/**
     * Starts tracking the time between 2 finger releases, and keeps track of how many fingers we initially had up
     * @inner
     */function startMultiFingerRelease(event){previousTouchEndTime=getTimeStamp();fingerCountAtRelease=event.touches.length+1;}/**
     * Cancels the tracking of time between 2 finger releases, and resets counters
     * @inner
     */function cancelMultiFingerRelease(){previousTouchEndTime=0;fingerCountAtRelease=0;}/**
     * Checks if we are in the threshold between 2 fingers being released
     * @return Boolean
     * @inner
     */function inMultiFingerRelease(){var withinThreshold=false;if(previousTouchEndTime){var diff=getTimeStamp()-previousTouchEndTime;if(diff<=options.fingerReleaseThreshold){withinThreshold=true;}}return withinThreshold;}/**
     * gets a data flag to indicate that a touch is in progress
     * @return Boolean
     * @inner
     */function getTouchInProgress(){//strict equality to ensure only true and false are returned
return!!($element.data(PLUGIN_NS+'_intouch')===true);}/**
     * Sets a data flag to indicate that a touch is in progress
     * @param {boolean} val The value to set the property to
     * @inner
     */function setTouchInProgress(val){//If destroy is called in an event handler, we have no el, and we have already cleaned up, so return.
if(!$element){return;}//Add or remove event listeners depending on touch status
if(val===true){$element.on(MOVE_EV,touchMove);$element.on(END_EV,touchEnd);//we only have leave events on desktop, we manually calcuate leave on touch as its not supported in webkit
if(LEAVE_EV){$element.on(LEAVE_EV,touchLeave);}}else{$element.off(MOVE_EV,touchMove,false);$element.off(END_EV,touchEnd,false);//we only have leave events on desktop, we manually calcuate leave on touch as its not supported in webkit
if(LEAVE_EV){$element.off(LEAVE_EV,touchLeave,false);}}//strict equality to ensure only true and false can update the value
$element.data(PLUGIN_NS+'_intouch',val===true);}/**
     * Creates the finger data for the touch/finger in the event object.
     * @param {int} id The id to store the finger data under (usually the order the fingers were pressed)
     * @param {object} evt The event object containing finger data
     * @return finger data object
     * @inner
     */function createFingerData(id,evt){var f={start:{x:0,y:0},last:{x:0,y:0},end:{x:0,y:0}};f.start.x=f.last.x=f.end.x=evt.pageX||evt.clientX;f.start.y=f.last.y=f.end.y=evt.pageY||evt.clientY;fingerData[id]=f;return f;}/**
     * Updates the finger data for a particular event object
     * @param {object} evt The event object containing the touch/finger data to upadte
     * @return a finger data object.
     * @inner
     */function updateFingerData(evt){var id=evt.identifier!==undefined?evt.identifier:0;var f=getFingerData(id);if(f===null){f=createFingerData(id,evt);}f.last.x=f.end.x;f.last.y=f.end.y;f.end.x=evt.pageX||evt.clientX;f.end.y=evt.pageY||evt.clientY;return f;}/**
     * Returns a finger data object by its event ID.
     * Each touch event has an identifier property, which is used
     * to track repeat touches
     * @param {int} id The unique id of the finger in the sequence of touch events.
     * @return a finger data object.
     * @inner
     */function getFingerData(id){return fingerData[id]||null;}/**
     * Sets the maximum distance swiped in the given direction.
     * If the new value is lower than the current value, the max value is not changed.
     * @param {string}  direction The direction of the swipe
     * @param {int}  distance The distance of the swipe
     * @inner
     */function setMaxDistance(direction,distance){if(direction==NONE)return;distance=Math.max(distance,getMaxDistance(direction));maximumsMap[direction].distance=distance;}/**
     * gets the maximum distance swiped in the given direction.
     * @param {string}  direction The direction of the swipe
     * @return int  The distance of the swipe
     * @inner
     */function getMaxDistance(direction){if(maximumsMap[direction])return maximumsMap[direction].distance;return undefined;}/**
     * Creats a map of directions to maximum swiped values.
     * @return Object A dictionary of maximum values, indexed by direction.
     * @inner
     */function createMaximumsData(){var maxData={};maxData[LEFT]=createMaximumVO(LEFT);maxData[RIGHT]=createMaximumVO(RIGHT);maxData[UP]=createMaximumVO(UP);maxData[DOWN]=createMaximumVO(DOWN);return maxData;}/**
     * Creates a map maximum swiped values for a given swipe direction
     * @param {string} The direction that these values will be associated with
     * @return Object Maximum values
     * @inner
     */function createMaximumVO(dir){return{direction:dir,distance:0};}//
// MATHS / UTILS
//
/**
     * Calculate the duration of the swipe
     * @return int
     * @inner
     */function calculateDuration(){return endTime-startTime;}/**
     * Calculate the distance between 2 touches (pinch)
     * @param {point} startPoint A point object containing x and y co-ordinates
     * @param {point} endPoint A point object containing x and y co-ordinates
     * @return int;
     * @inner
     */function calculateTouchesDistance(startPoint,endPoint){var diffX=Math.abs(startPoint.x-endPoint.x);var diffY=Math.abs(startPoint.y-endPoint.y);return Math.round(Math.sqrt(diffX*diffX+diffY*diffY));}/**
     * Calculate the zoom factor between the start and end distances
     * @param {int} startDistance Distance (between 2 fingers) the user started pinching at
     * @param {int} endDistance Distance (between 2 fingers) the user ended pinching at
     * @return float The zoom value from 0 to 1.
     * @inner
     */function calculatePinchZoom(startDistance,endDistance){var percent=endDistance/startDistance*1;return percent.toFixed(2);}/**
     * Returns the pinch direction, either IN or OUT for the given points
     * @return string Either {@link $.fn.swipe.directions.IN} or {@link $.fn.swipe.directions.OUT}
     * @see $.fn.swipe.directions
     * @inner
     */function calculatePinchDirection(){if(pinchZoom<1){return OUT;}else{return IN;}}/**
     * Calculate the length / distance of the swipe
     * @param {point} startPoint A point object containing x and y co-ordinates
     * @param {point} endPoint A point object containing x and y co-ordinates
     * @return int
     * @inner
     */function calculateDistance(startPoint,endPoint){return Math.round(Math.sqrt(Math.pow(endPoint.x-startPoint.x,2)+Math.pow(endPoint.y-startPoint.y,2)));}/**
     * Calculate the angle of the swipe
     * @param {point} startPoint A point object containing x and y co-ordinates
     * @param {point} endPoint A point object containing x and y co-ordinates
     * @return int
     * @inner
     */function calculateAngle(startPoint,endPoint){var x=startPoint.x-endPoint.x;var y=endPoint.y-startPoint.y;var r=Math.atan2(y,x);//radians
var angle=Math.round(r*180/Math.PI);//degrees
//ensure value is positive
if(angle<0){angle=360-Math.abs(angle);}return angle;}/**
     * Calculate the direction of the swipe
     * This will also call calculateAngle to get the latest angle of swipe
     * @param {point} startPoint A point object containing x and y co-ordinates
     * @param {point} endPoint A point object containing x and y co-ordinates
     * @return string Either {@link $.fn.swipe.directions.LEFT} / {@link $.fn.swipe.directions.RIGHT} / {@link $.fn.swipe.directions.DOWN} / {@link $.fn.swipe.directions.UP}
     * @see $.fn.swipe.directions
     * @inner
     */function calculateDirection(startPoint,endPoint){if(comparePoints(startPoint,endPoint)){return NONE;}var angle=calculateAngle(startPoint,endPoint);if(angle<=45&&angle>=0){return LEFT;}else if(angle<=360&&angle>=315){return LEFT;}else if(angle>=135&&angle<=225){return RIGHT;}else if(angle>45&&angle<135){return DOWN;}else{return UP;}}/**
     * Returns a MS time stamp of the current time
     * @return int
     * @inner
     */function getTimeStamp(){var now=new Date();return now.getTime();}/**
     * Returns a bounds object with left, right, top and bottom properties for the element specified.
     * @param {DomNode} The DOM node to get the bounds for.
     */function getbounds(el){el=$(el);var offset=el.offset();var bounds={left:offset.left,right:offset.left+el.outerWidth(),top:offset.top,bottom:offset.top+el.outerHeight()};return bounds;}/**
     * Checks if the point object is in the bounds object.
     * @param {object} point A point object.
     * @param {int} point.x The x value of the point.
     * @param {int} point.y The x value of the point.
     * @param {object} bounds The bounds object to test
     * @param {int} bounds.left The leftmost value
     * @param {int} bounds.right The righttmost value
     * @param {int} bounds.top The topmost value
     * @param {int} bounds.bottom The bottommost value
     */function isInBounds(point,bounds){return point.x>bounds.left&&point.x<bounds.right&&point.y>bounds.top&&point.y<bounds.bottom;};/**
     * Checks if the two points are equal
     * @param {object} point A point object.
     * @param {object} point B point object.
     * @return true of the points match
     */function comparePoints(pointA,pointB){return pointA.x==pointB.x&&pointA.y==pointB.y;}}/**
   * A catch all handler that is triggered for all swipe directions.
   * @name $.fn.swipe#swipe
   * @event
   * @default null
   * @param {EventObject} event The original event object
   * @param {int} direction The direction the user swiped in. See {@link $.fn.swipe.directions}
   * @param {int} distance The distance the user swiped
   * @param {int} duration The duration of the swipe in milliseconds
   * @param {int} fingerCount The number of fingers used. See {@link $.fn.swipe.fingers}
   * @param {object} fingerData The coordinates of fingers in event
   * @param {string} currentDirection The current direction the user is swiping.
   */ /**
   * A handler that is triggered for "left" swipes.
   * @name $.fn.swipe#swipeLeft
   * @event
   * @default null
   * @param {EventObject} event The original event object
   * @param {int} direction The direction the user swiped in. See {@link $.fn.swipe.directions}
   * @param {int} distance The distance the user swiped
   * @param {int} duration The duration of the swipe in milliseconds
   * @param {int} fingerCount The number of fingers used. See {@link $.fn.swipe.fingers}
   * @param {object} fingerData The coordinates of fingers in event
   * @param {string} currentDirection The current direction the user is swiping.
   */ /**
   * A handler that is triggered for "right" swipes.
   * @name $.fn.swipe#swipeRight
   * @event
   * @default null
   * @param {EventObject} event The original event object
   * @param {int} direction The direction the user swiped in. See {@link $.fn.swipe.directions}
   * @param {int} distance The distance the user swiped
   * @param {int} duration The duration of the swipe in milliseconds
   * @param {int} fingerCount The number of fingers used. See {@link $.fn.swipe.fingers}
   * @param {object} fingerData The coordinates of fingers in event
   * @param {string} currentDirection The current direction the user is swiping.
   */ /**
   * A handler that is triggered for "up" swipes.
   * @name $.fn.swipe#swipeUp
   * @event
   * @default null
   * @param {EventObject} event The original event object
   * @param {int} direction The direction the user swiped in. See {@link $.fn.swipe.directions}
   * @param {int} distance The distance the user swiped
   * @param {int} duration The duration of the swipe in milliseconds
   * @param {int} fingerCount The number of fingers used. See {@link $.fn.swipe.fingers}
   * @param {object} fingerData The coordinates of fingers in event
   * @param {string} currentDirection The current direction the user is swiping.
   */ /**
   * A handler that is triggered for "down" swipes.
   * @name $.fn.swipe#swipeDown
   * @event
   * @default null
   * @param {EventObject} event The original event object
   * @param {int} direction The direction the user swiped in. See {@link $.fn.swipe.directions}
   * @param {int} distance The distance the user swiped
   * @param {int} duration The duration of the swipe in milliseconds
   * @param {int} fingerCount The number of fingers used. See {@link $.fn.swipe.fingers}
   * @param {object} fingerData The coordinates of fingers in event
   * @param {string} currentDirection The current direction the user is swiping.
   */ /**
   * A handler triggered for every phase of the swipe. This handler is constantly fired for the duration of the pinch.
   * This is triggered regardless of swipe thresholds.
   * @name $.fn.swipe#swipeStatus
   * @event
   * @default null
   * @param {EventObject} event The original event object
   * @param {string} phase The phase of the swipe event. See {@link $.fn.swipe.phases}
   * @param {string} direction The direction the user swiped in. This is null if the user has yet to move. See {@link $.fn.swipe.directions}
   * @param {int} distance The distance the user swiped. This is 0 if the user has yet to move.
   * @param {int} duration The duration of the swipe in milliseconds
   * @param {int} fingerCount The number of fingers used. See {@link $.fn.swipe.fingers}
   * @param {object} fingerData The coordinates of fingers in event
   * @param {string} currentDirection The current direction the user is swiping.
   */ /**
   * A handler triggered for pinch in events.
   * @name $.fn.swipe#pinchIn
   * @event
   * @default null
   * @param {EventObject} event The original event object
   * @param {int} direction The direction the user pinched in. See {@link $.fn.swipe.directions}
   * @param {int} distance The distance the user pinched
   * @param {int} duration The duration of the swipe in milliseconds
   * @param {int} fingerCount The number of fingers used. See {@link $.fn.swipe.fingers}
   * @param {int} zoom The zoom/scale level the user pinched too, 0-1.
   * @param {object} fingerData The coordinates of fingers in event
   */ /**
   * A handler triggered for pinch out events.
   * @name $.fn.swipe#pinchOut
   * @event
   * @default null
   * @param {EventObject} event The original event object
   * @param {int} direction The direction the user pinched in. See {@link $.fn.swipe.directions}
   * @param {int} distance The distance the user pinched
   * @param {int} duration The duration of the swipe in milliseconds
   * @param {int} fingerCount The number of fingers used. See {@link $.fn.swipe.fingers}
   * @param {int} zoom The zoom/scale level the user pinched too, 0-1.
   * @param {object} fingerData The coordinates of fingers in event
   */ /**
   * A handler triggered for all pinch events. This handler is constantly fired for the duration of the pinch. This is triggered regardless of thresholds.
   * @name $.fn.swipe#pinchStatus
   * @event
   * @default null
   * @param {EventObject} event The original event object
   * @param {int} direction The direction the user pinched in. See {@link $.fn.swipe.directions}
   * @param {int} distance The distance the user pinched
   * @param {int} duration The duration of the swipe in milliseconds
   * @param {int} fingerCount The number of fingers used. See {@link $.fn.swipe.fingers}
   * @param {int} zoom The zoom/scale level the user pinched too, 0-1.
   * @param {object} fingerData The coordinates of fingers in event
   */ /**
   * A click handler triggered when a user simply clicks, rather than swipes on an element.
   * This is deprecated since version 1.6.2, any assignment to click will be assigned to the tap handler.
   * You cannot use <code>on</code> to bind to this event as the default jQ <code>click</code> event will be triggered.
   * Use the <code>tap</code> event instead.
   * @name $.fn.swipe#click
   * @event
   * @deprecated since version 1.6.2, please use {@link $.fn.swipe#tap} instead
   * @default null
   * @param {EventObject} event The original event object
   * @param {DomObject} target The element clicked on.
   */ /**
   * A click / tap handler triggered when a user simply clicks or taps, rather than swipes on an element.
   * @name $.fn.swipe#tap
   * @event
   * @default null
   * @param {EventObject} event The original event object
   * @param {DomObject} target The element clicked on.
   */ /**
   * A double tap handler triggered when a user double clicks or taps on an element.
   * You can set the time delay for a double tap with the {@link $.fn.swipe.defaults#doubleTapThreshold} property.
   * Note: If you set both <code>doubleTap</code> and <code>tap</code> handlers, the <code>tap</code> event will be delayed by the <code>doubleTapThreshold</code>
   * as the script needs to check if its a double tap.
   * @name $.fn.swipe#doubleTap
   * @see  $.fn.swipe.defaults#doubleTapThreshold
   * @event
   * @default null
   * @param {EventObject} event The original event object
   * @param {DomObject} target The element clicked on.
   */ /**
   * A long tap handler triggered once a tap has been release if the tap was longer than the longTapThreshold.
   * You can set the time delay for a long tap with the {@link $.fn.swipe.defaults#longTapThreshold} property.
   * @name $.fn.swipe#longTap
   * @see  $.fn.swipe.defaults#longTapThreshold
   * @event
   * @default null
   * @param {EventObject} event The original event object
   * @param {DomObject} target The element clicked on.
   */ /**
   * A hold tap handler triggered as soon as the longTapThreshold is reached
   * You can set the time delay for a long tap with the {@link $.fn.swipe.defaults#longTapThreshold} property.
   * @name $.fn.swipe#hold
   * @see  $.fn.swipe.defaults#longTapThreshold
   * @event
   * @default null
   * @param {EventObject} event The original event object
   * @param {DomObject} target The element clicked on.
   */});// THIS FILE IS GENERATED - DO NOT EDIT!
/*!mobile-detect v1.4.4 2019-09-21*/ /*global module:false, define:false*/ /*jshint latedef:false*/ /*!@license Copyright 2013, Heinrich Goebl, License: MIT, see https://github.com/hgoebl/mobile-detect.js*/(function(define,undefined){define(function(){'use strict';var impl={};impl.mobileDetectRules={"phones":{"iPhone":"\\biPhone\\b|\\biPod\\b","BlackBerry":"BlackBerry|\\bBB10\\b|rim[0-9]+|\\b(BBA100|BBB100|BBD100|BBE100|BBF100|STH100)\\b-[0-9]+","HTC":"HTC|HTC.*(Sensation|Evo|Vision|Explorer|6800|8100|8900|A7272|S510e|C110e|Legend|Desire|T8282)|APX515CKT|Qtek9090|APA9292KT|HD_mini|Sensation.*Z710e|PG86100|Z715e|Desire.*(A8181|HD)|ADR6200|ADR6400L|ADR6425|001HT|Inspire 4G|Android.*\\bEVO\\b|T-Mobile G1|Z520m|Android [0-9.]+; Pixel","Nexus":"Nexus One|Nexus S|Galaxy.*Nexus|Android.*Nexus.*Mobile|Nexus 4|Nexus 5|Nexus 6","Dell":"Dell[;]? (Streak|Aero|Venue|Venue Pro|Flash|Smoke|Mini 3iX)|XCD28|XCD35|\\b001DL\\b|\\b101DL\\b|\\bGS01\\b","Motorola":"Motorola|DROIDX|DROID BIONIC|\\bDroid\\b.*Build|Android.*Xoom|HRI39|MOT-|A1260|A1680|A555|A853|A855|A953|A955|A956|Motorola.*ELECTRIFY|Motorola.*i1|i867|i940|MB200|MB300|MB501|MB502|MB508|MB511|MB520|MB525|MB526|MB611|MB612|MB632|MB810|MB855|MB860|MB861|MB865|MB870|ME501|ME502|ME511|ME525|ME600|ME632|ME722|ME811|ME860|ME863|ME865|MT620|MT710|MT716|MT720|MT810|MT870|MT917|Motorola.*TITANIUM|WX435|WX445|XT300|XT301|XT311|XT316|XT317|XT319|XT320|XT390|XT502|XT530|XT531|XT532|XT535|XT603|XT610|XT611|XT615|XT681|XT701|XT702|XT711|XT720|XT800|XT806|XT860|XT862|XT875|XT882|XT883|XT894|XT901|XT907|XT909|XT910|XT912|XT928|XT926|XT915|XT919|XT925|XT1021|\\bMoto E\\b|XT1068|XT1092|XT1052","Samsung":"\\bSamsung\\b|SM-G950F|SM-G955F|SM-G9250|GT-19300|SGH-I337|BGT-S5230|GT-B2100|GT-B2700|GT-B2710|GT-B3210|GT-B3310|GT-B3410|GT-B3730|GT-B3740|GT-B5510|GT-B5512|GT-B5722|GT-B6520|GT-B7300|GT-B7320|GT-B7330|GT-B7350|GT-B7510|GT-B7722|GT-B7800|GT-C3010|GT-C3011|GT-C3060|GT-C3200|GT-C3212|GT-C3212I|GT-C3262|GT-C3222|GT-C3300|GT-C3300K|GT-C3303|GT-C3303K|GT-C3310|GT-C3322|GT-C3330|GT-C3350|GT-C3500|GT-C3510|GT-C3530|GT-C3630|GT-C3780|GT-C5010|GT-C5212|GT-C6620|GT-C6625|GT-C6712|GT-E1050|GT-E1070|GT-E1075|GT-E1080|GT-E1081|GT-E1085|GT-E1087|GT-E1100|GT-E1107|GT-E1110|GT-E1120|GT-E1125|GT-E1130|GT-E1160|GT-E1170|GT-E1175|GT-E1180|GT-E1182|GT-E1200|GT-E1210|GT-E1225|GT-E1230|GT-E1390|GT-E2100|GT-E2120|GT-E2121|GT-E2152|GT-E2220|GT-E2222|GT-E2230|GT-E2232|GT-E2250|GT-E2370|GT-E2550|GT-E2652|GT-E3210|GT-E3213|GT-I5500|GT-I5503|GT-I5700|GT-I5800|GT-I5801|GT-I6410|GT-I6420|GT-I7110|GT-I7410|GT-I7500|GT-I8000|GT-I8150|GT-I8160|GT-I8190|GT-I8320|GT-I8330|GT-I8350|GT-I8530|GT-I8700|GT-I8703|GT-I8910|GT-I9000|GT-I9001|GT-I9003|GT-I9010|GT-I9020|GT-I9023|GT-I9070|GT-I9082|GT-I9100|GT-I9103|GT-I9220|GT-I9250|GT-I9300|GT-I9305|GT-I9500|GT-I9505|GT-M3510|GT-M5650|GT-M7500|GT-M7600|GT-M7603|GT-M8800|GT-M8910|GT-N7000|GT-S3110|GT-S3310|GT-S3350|GT-S3353|GT-S3370|GT-S3650|GT-S3653|GT-S3770|GT-S3850|GT-S5210|GT-S5220|GT-S5229|GT-S5230|GT-S5233|GT-S5250|GT-S5253|GT-S5260|GT-S5263|GT-S5270|GT-S5300|GT-S5330|GT-S5350|GT-S5360|GT-S5363|GT-S5369|GT-S5380|GT-S5380D|GT-S5560|GT-S5570|GT-S5600|GT-S5603|GT-S5610|GT-S5620|GT-S5660|GT-S5670|GT-S5690|GT-S5750|GT-S5780|GT-S5830|GT-S5839|GT-S6102|GT-S6500|GT-S7070|GT-S7200|GT-S7220|GT-S7230|GT-S7233|GT-S7250|GT-S7500|GT-S7530|GT-S7550|GT-S7562|GT-S7710|GT-S8000|GT-S8003|GT-S8500|GT-S8530|GT-S8600|SCH-A310|SCH-A530|SCH-A570|SCH-A610|SCH-A630|SCH-A650|SCH-A790|SCH-A795|SCH-A850|SCH-A870|SCH-A890|SCH-A930|SCH-A950|SCH-A970|SCH-A990|SCH-I100|SCH-I110|SCH-I400|SCH-I405|SCH-I500|SCH-I510|SCH-I515|SCH-I600|SCH-I730|SCH-I760|SCH-I770|SCH-I830|SCH-I910|SCH-I920|SCH-I959|SCH-LC11|SCH-N150|SCH-N300|SCH-R100|SCH-R300|SCH-R351|SCH-R400|SCH-R410|SCH-T300|SCH-U310|SCH-U320|SCH-U350|SCH-U360|SCH-U365|SCH-U370|SCH-U380|SCH-U410|SCH-U430|SCH-U450|SCH-U460|SCH-U470|SCH-U490|SCH-U540|SCH-U550|SCH-U620|SCH-U640|SCH-U650|SCH-U660|SCH-U700|SCH-U740|SCH-U750|SCH-U810|SCH-U820|SCH-U900|SCH-U940|SCH-U960|SCS-26UC|SGH-A107|SGH-A117|SGH-A127|SGH-A137|SGH-A157|SGH-A167|SGH-A177|SGH-A187|SGH-A197|SGH-A227|SGH-A237|SGH-A257|SGH-A437|SGH-A517|SGH-A597|SGH-A637|SGH-A657|SGH-A667|SGH-A687|SGH-A697|SGH-A707|SGH-A717|SGH-A727|SGH-A737|SGH-A747|SGH-A767|SGH-A777|SGH-A797|SGH-A817|SGH-A827|SGH-A837|SGH-A847|SGH-A867|SGH-A877|SGH-A887|SGH-A897|SGH-A927|SGH-B100|SGH-B130|SGH-B200|SGH-B220|SGH-C100|SGH-C110|SGH-C120|SGH-C130|SGH-C140|SGH-C160|SGH-C170|SGH-C180|SGH-C200|SGH-C207|SGH-C210|SGH-C225|SGH-C230|SGH-C417|SGH-C450|SGH-D307|SGH-D347|SGH-D357|SGH-D407|SGH-D415|SGH-D780|SGH-D807|SGH-D980|SGH-E105|SGH-E200|SGH-E315|SGH-E316|SGH-E317|SGH-E335|SGH-E590|SGH-E635|SGH-E715|SGH-E890|SGH-F300|SGH-F480|SGH-I200|SGH-I300|SGH-I320|SGH-I550|SGH-I577|SGH-I600|SGH-I607|SGH-I617|SGH-I627|SGH-I637|SGH-I677|SGH-I700|SGH-I717|SGH-I727|SGH-i747M|SGH-I777|SGH-I780|SGH-I827|SGH-I847|SGH-I857|SGH-I896|SGH-I897|SGH-I900|SGH-I907|SGH-I917|SGH-I927|SGH-I937|SGH-I997|SGH-J150|SGH-J200|SGH-L170|SGH-L700|SGH-M110|SGH-M150|SGH-M200|SGH-N105|SGH-N500|SGH-N600|SGH-N620|SGH-N625|SGH-N700|SGH-N710|SGH-P107|SGH-P207|SGH-P300|SGH-P310|SGH-P520|SGH-P735|SGH-P777|SGH-Q105|SGH-R210|SGH-R220|SGH-R225|SGH-S105|SGH-S307|SGH-T109|SGH-T119|SGH-T139|SGH-T209|SGH-T219|SGH-T229|SGH-T239|SGH-T249|SGH-T259|SGH-T309|SGH-T319|SGH-T329|SGH-T339|SGH-T349|SGH-T359|SGH-T369|SGH-T379|SGH-T409|SGH-T429|SGH-T439|SGH-T459|SGH-T469|SGH-T479|SGH-T499|SGH-T509|SGH-T519|SGH-T539|SGH-T559|SGH-T589|SGH-T609|SGH-T619|SGH-T629|SGH-T639|SGH-T659|SGH-T669|SGH-T679|SGH-T709|SGH-T719|SGH-T729|SGH-T739|SGH-T746|SGH-T749|SGH-T759|SGH-T769|SGH-T809|SGH-T819|SGH-T839|SGH-T919|SGH-T929|SGH-T939|SGH-T959|SGH-T989|SGH-U100|SGH-U200|SGH-U800|SGH-V205|SGH-V206|SGH-X100|SGH-X105|SGH-X120|SGH-X140|SGH-X426|SGH-X427|SGH-X475|SGH-X495|SGH-X497|SGH-X507|SGH-X600|SGH-X610|SGH-X620|SGH-X630|SGH-X700|SGH-X820|SGH-X890|SGH-Z130|SGH-Z150|SGH-Z170|SGH-ZX10|SGH-ZX20|SHW-M110|SPH-A120|SPH-A400|SPH-A420|SPH-A460|SPH-A500|SPH-A560|SPH-A600|SPH-A620|SPH-A660|SPH-A700|SPH-A740|SPH-A760|SPH-A790|SPH-A800|SPH-A820|SPH-A840|SPH-A880|SPH-A900|SPH-A940|SPH-A960|SPH-D600|SPH-D700|SPH-D710|SPH-D720|SPH-I300|SPH-I325|SPH-I330|SPH-I350|SPH-I500|SPH-I600|SPH-I700|SPH-L700|SPH-M100|SPH-M220|SPH-M240|SPH-M300|SPH-M305|SPH-M320|SPH-M330|SPH-M350|SPH-M360|SPH-M370|SPH-M380|SPH-M510|SPH-M540|SPH-M550|SPH-M560|SPH-M570|SPH-M580|SPH-M610|SPH-M620|SPH-M630|SPH-M800|SPH-M810|SPH-M850|SPH-M900|SPH-M910|SPH-M920|SPH-M930|SPH-N100|SPH-N200|SPH-N240|SPH-N300|SPH-N400|SPH-Z400|SWC-E100|SCH-i909|GT-N7100|GT-N7105|SCH-I535|SM-N900A|SGH-I317|SGH-T999L|GT-S5360B|GT-I8262|GT-S6802|GT-S6312|GT-S6310|GT-S5312|GT-S5310|GT-I9105|GT-I8510|GT-S6790N|SM-G7105|SM-N9005|GT-S5301|GT-I9295|GT-I9195|SM-C101|GT-S7392|GT-S7560|GT-B7610|GT-I5510|GT-S7582|GT-S7530E|GT-I8750|SM-G9006V|SM-G9008V|SM-G9009D|SM-G900A|SM-G900D|SM-G900F|SM-G900H|SM-G900I|SM-G900J|SM-G900K|SM-G900L|SM-G900M|SM-G900P|SM-G900R4|SM-G900S|SM-G900T|SM-G900V|SM-G900W8|SHV-E160K|SCH-P709|SCH-P729|SM-T2558|GT-I9205|SM-G9350|SM-J120F|SM-G920F|SM-G920V|SM-G930F|SM-N910C|SM-A310F|GT-I9190|SM-J500FN|SM-G903F|SM-J330F","LG":"\\bLG\\b;|LG[- ]?(C800|C900|E400|E610|E900|E-900|F160|F180K|F180L|F180S|730|855|L160|LS740|LS840|LS970|LU6200|MS690|MS695|MS770|MS840|MS870|MS910|P500|P700|P705|VM696|AS680|AS695|AX840|C729|E970|GS505|272|C395|E739BK|E960|L55C|L75C|LS696|LS860|P769BK|P350|P500|P509|P870|UN272|US730|VS840|VS950|LN272|LN510|LS670|LS855|LW690|MN270|MN510|P509|P769|P930|UN200|UN270|UN510|UN610|US670|US740|US760|UX265|UX840|VN271|VN530|VS660|VS700|VS740|VS750|VS910|VS920|VS930|VX9200|VX11000|AX840A|LW770|P506|P925|P999|E612|D955|D802|MS323|M257)|LM-G710","Sony":"SonyST|SonyLT|SonyEricsson|SonyEricssonLT15iv|LT18i|E10i|LT28h|LT26w|SonyEricssonMT27i|C5303|C6902|C6903|C6906|C6943|D2533","Asus":"Asus.*Galaxy|PadFone.*Mobile","NokiaLumia":"Lumia [0-9]{3,4}","Micromax":"Micromax.*\\b(A210|A92|A88|A72|A111|A110Q|A115|A116|A110|A90S|A26|A51|A35|A54|A25|A27|A89|A68|A65|A57|A90)\\b","Palm":"PalmSource|Palm","Vertu":"Vertu|Vertu.*Ltd|Vertu.*Ascent|Vertu.*Ayxta|Vertu.*Constellation(F|Quest)?|Vertu.*Monika|Vertu.*Signature","Pantech":"PANTECH|IM-A850S|IM-A840S|IM-A830L|IM-A830K|IM-A830S|IM-A820L|IM-A810K|IM-A810S|IM-A800S|IM-T100K|IM-A725L|IM-A780L|IM-A775C|IM-A770K|IM-A760S|IM-A750K|IM-A740S|IM-A730S|IM-A720L|IM-A710K|IM-A690L|IM-A690S|IM-A650S|IM-A630K|IM-A600S|VEGA PTL21|PT003|P8010|ADR910L|P6030|P6020|P9070|P4100|P9060|P5000|CDM8992|TXT8045|ADR8995|IS11PT|P2030|P6010|P8000|PT002|IS06|CDM8999|P9050|PT001|TXT8040|P2020|P9020|P2000|P7040|P7000|C790","Fly":"IQ230|IQ444|IQ450|IQ440|IQ442|IQ441|IQ245|IQ256|IQ236|IQ255|IQ235|IQ245|IQ275|IQ240|IQ285|IQ280|IQ270|IQ260|IQ250","Wiko":"KITE 4G|HIGHWAY|GETAWAY|STAIRWAY|DARKSIDE|DARKFULL|DARKNIGHT|DARKMOON|SLIDE|WAX 4G|RAINBOW|BLOOM|SUNSET|GOA(?!nna)|LENNY|BARRY|IGGY|OZZY|CINK FIVE|CINK PEAX|CINK PEAX 2|CINK SLIM|CINK SLIM 2|CINK +|CINK KING|CINK PEAX|CINK SLIM|SUBLIM","iMobile":"i-mobile (IQ|i-STYLE|idea|ZAA|Hitz)","SimValley":"\\b(SP-80|XT-930|SX-340|XT-930|SX-310|SP-360|SP60|SPT-800|SP-120|SPT-800|SP-140|SPX-5|SPX-8|SP-100|SPX-8|SPX-12)\\b","Wolfgang":"AT-B24D|AT-AS50HD|AT-AS40W|AT-AS55HD|AT-AS45q2|AT-B26D|AT-AS50Q","Alcatel":"Alcatel","Nintendo":"Nintendo (3DS|Switch)","Amoi":"Amoi","INQ":"INQ","OnePlus":"ONEPLUS","GenericPhone":"Tapatalk|PDA;|SAGEM|\\bmmp\\b|pocket|\\bpsp\\b|symbian|Smartphone|smartfon|treo|up.browser|up.link|vodafone|\\bwap\\b|nokia|Series40|Series60|S60|SonyEricsson|N900|MAUI.*WAP.*Browser"},"tablets":{"iPad":"iPad|iPad.*Mobile","NexusTablet":"Android.*Nexus[\\s]+(7|9|10)","GoogleTablet":"Android.*Pixel C","SamsungTablet":"SAMSUNG.*Tablet|Galaxy.*Tab|SC-01C|GT-P1000|GT-P1003|GT-P1010|GT-P3105|GT-P6210|GT-P6800|GT-P6810|GT-P7100|GT-P7300|GT-P7310|GT-P7500|GT-P7510|SCH-I800|SCH-I815|SCH-I905|SGH-I957|SGH-I987|SGH-T849|SGH-T859|SGH-T869|SPH-P100|GT-P3100|GT-P3108|GT-P3110|GT-P5100|GT-P5110|GT-P6200|GT-P7320|GT-P7511|GT-N8000|GT-P8510|SGH-I497|SPH-P500|SGH-T779|SCH-I705|SCH-I915|GT-N8013|GT-P3113|GT-P5113|GT-P8110|GT-N8010|GT-N8005|GT-N8020|GT-P1013|GT-P6201|GT-P7501|GT-N5100|GT-N5105|GT-N5110|SHV-E140K|SHV-E140L|SHV-E140S|SHV-E150S|SHV-E230K|SHV-E230L|SHV-E230S|SHW-M180K|SHW-M180L|SHW-M180S|SHW-M180W|SHW-M300W|SHW-M305W|SHW-M380K|SHW-M380S|SHW-M380W|SHW-M430W|SHW-M480K|SHW-M480S|SHW-M480W|SHW-M485W|SHW-M486W|SHW-M500W|GT-I9228|SCH-P739|SCH-I925|GT-I9200|GT-P5200|GT-P5210|GT-P5210X|SM-T311|SM-T310|SM-T310X|SM-T210|SM-T210R|SM-T211|SM-P600|SM-P601|SM-P605|SM-P900|SM-P901|SM-T217|SM-T217A|SM-T217S|SM-P6000|SM-T3100|SGH-I467|XE500|SM-T110|GT-P5220|GT-I9200X|GT-N5110X|GT-N5120|SM-P905|SM-T111|SM-T2105|SM-T315|SM-T320|SM-T320X|SM-T321|SM-T520|SM-T525|SM-T530NU|SM-T230NU|SM-T330NU|SM-T900|XE500T1C|SM-P605V|SM-P905V|SM-T337V|SM-T537V|SM-T707V|SM-T807V|SM-P600X|SM-P900X|SM-T210X|SM-T230|SM-T230X|SM-T325|GT-P7503|SM-T531|SM-T330|SM-T530|SM-T705|SM-T705C|SM-T535|SM-T331|SM-T800|SM-T700|SM-T537|SM-T807|SM-P907A|SM-T337A|SM-T537A|SM-T707A|SM-T807A|SM-T237|SM-T807P|SM-P607T|SM-T217T|SM-T337T|SM-T807T|SM-T116NQ|SM-T116BU|SM-P550|SM-T350|SM-T550|SM-T9000|SM-P9000|SM-T705Y|SM-T805|GT-P3113|SM-T710|SM-T810|SM-T815|SM-T360|SM-T533|SM-T113|SM-T335|SM-T715|SM-T560|SM-T670|SM-T677|SM-T377|SM-T567|SM-T357T|SM-T555|SM-T561|SM-T713|SM-T719|SM-T813|SM-T819|SM-T580|SM-T355Y?|SM-T280|SM-T817A|SM-T820|SM-W700|SM-P580|SM-T587|SM-P350|SM-P555M|SM-P355M|SM-T113NU|SM-T815Y|SM-T585|SM-T285|SM-T825|SM-W708|SM-T835|SM-T830|SM-T837V|SM-T720|SM-T510|SM-T387V","Kindle":"Kindle|Silk.*Accelerated|Android.*\\b(KFOT|KFTT|KFJWI|KFJWA|KFOTE|KFSOWI|KFTHWI|KFTHWA|KFAPWI|KFAPWA|WFJWAE|KFSAWA|KFSAWI|KFASWI|KFARWI|KFFOWI|KFGIWI|KFMEWI)\\b|Android.*Silk\/[0-9.]+ like Chrome\/[0-9.]+ (?!Mobile)","SurfaceTablet":"Windows NT [0-9.]+; ARM;.*(Tablet|ARMBJS)","HPTablet":"HP Slate (7|8|10)|HP ElitePad 900|hp-tablet|EliteBook.*Touch|HP 8|Slate 21|HP SlateBook 10","AsusTablet":"^.*PadFone((?!Mobile).)*$|Transformer|TF101|TF101G|TF300T|TF300TG|TF300TL|TF700T|TF700KL|TF701T|TF810C|ME171|ME301T|ME302C|ME371MG|ME370T|ME372MG|ME172V|ME173X|ME400C|Slider SL101|\\bK00F\\b|\\bK00C\\b|\\bK00E\\b|\\bK00L\\b|TX201LA|ME176C|ME102A|\\bM80TA\\b|ME372CL|ME560CG|ME372CG|ME302KL| K010 | K011 | K017 | K01E |ME572C|ME103K|ME170C|ME171C|\\bME70C\\b|ME581C|ME581CL|ME8510C|ME181C|P01Y|PO1MA|P01Z|\\bP027\\b|\\bP024\\b|\\bP00C\\b","BlackBerryTablet":"PlayBook|RIM Tablet","HTCtablet":"HTC_Flyer_P512|HTC Flyer|HTC Jetstream|HTC-P715a|HTC EVO View 4G|PG41200|PG09410","MotorolaTablet":"xoom|sholest|MZ615|MZ605|MZ505|MZ601|MZ602|MZ603|MZ604|MZ606|MZ607|MZ608|MZ609|MZ615|MZ616|MZ617","NookTablet":"Android.*Nook|NookColor|nook browser|BNRV200|BNRV200A|BNTV250|BNTV250A|BNTV400|BNTV600|LogicPD Zoom2","AcerTablet":"Android.*; \\b(A100|A101|A110|A200|A210|A211|A500|A501|A510|A511|A700|A701|W500|W500P|W501|W501P|W510|W511|W700|G100|G100W|B1-A71|B1-710|B1-711|A1-810|A1-811|A1-830)\\b|W3-810|\\bA3-A10\\b|\\bA3-A11\\b|\\bA3-A20\\b|\\bA3-A30","ToshibaTablet":"Android.*(AT100|AT105|AT200|AT205|AT270|AT275|AT300|AT305|AT1S5|AT500|AT570|AT700|AT830)|TOSHIBA.*FOLIO","LGTablet":"\\bL-06C|LG-V909|LG-V900|LG-V700|LG-V510|LG-V500|LG-V410|LG-V400|LG-VK810\\b","FujitsuTablet":"Android.*\\b(F-01D|F-02F|F-05E|F-10D|M532|Q572)\\b","PrestigioTablet":"PMP3170B|PMP3270B|PMP3470B|PMP7170B|PMP3370B|PMP3570C|PMP5870C|PMP3670B|PMP5570C|PMP5770D|PMP3970B|PMP3870C|PMP5580C|PMP5880D|PMP5780D|PMP5588C|PMP7280C|PMP7280C3G|PMP7280|PMP7880D|PMP5597D|PMP5597|PMP7100D|PER3464|PER3274|PER3574|PER3884|PER5274|PER5474|PMP5097CPRO|PMP5097|PMP7380D|PMP5297C|PMP5297C_QUAD|PMP812E|PMP812E3G|PMP812F|PMP810E|PMP880TD|PMT3017|PMT3037|PMT3047|PMT3057|PMT7008|PMT5887|PMT5001|PMT5002","LenovoTablet":"Lenovo TAB|Idea(Tab|Pad)( A1|A10| K1|)|ThinkPad([ ]+)?Tablet|YT3-850M|YT3-X90L|YT3-X90F|YT3-X90X|Lenovo.*(S2109|S2110|S5000|S6000|K3011|A3000|A3500|A1000|A2107|A2109|A1107|A5500|A7600|B6000|B8000|B8080)(-|)(FL|F|HV|H|)|TB-X103F|TB-X304X|TB-X304F|TB-X304L|TB-X505F|TB-X505L|TB-X505X|TB-X605F|TB-X605L|TB-8703F|TB-8703X|TB-8703N|TB-8704N|TB-8704F|TB-8704X|TB-8704V|TB-7304F|TB-7304I|TB-7304X|Tab2A7-10F|Tab2A7-20F|TB2-X30L|YT3-X50L|YT3-X50F|YT3-X50M|YT-X705F|YT-X703F|YT-X703L|YT-X705L|YT-X705X|TB2-X30F|TB2-X30L|TB2-X30M|A2107A-F|A2107A-H|TB3-730F|TB3-730M|TB3-730X|TB-7504F|TB-7504X","DellTablet":"Venue 11|Venue 8|Venue 7|Dell Streak 10|Dell Streak 7","YarvikTablet":"Android.*\\b(TAB210|TAB211|TAB224|TAB250|TAB260|TAB264|TAB310|TAB360|TAB364|TAB410|TAB411|TAB420|TAB424|TAB450|TAB460|TAB461|TAB464|TAB465|TAB467|TAB468|TAB07-100|TAB07-101|TAB07-150|TAB07-151|TAB07-152|TAB07-200|TAB07-201-3G|TAB07-210|TAB07-211|TAB07-212|TAB07-214|TAB07-220|TAB07-400|TAB07-485|TAB08-150|TAB08-200|TAB08-201-3G|TAB08-201-30|TAB09-100|TAB09-211|TAB09-410|TAB10-150|TAB10-201|TAB10-211|TAB10-400|TAB10-410|TAB13-201|TAB274EUK|TAB275EUK|TAB374EUK|TAB462EUK|TAB474EUK|TAB9-200)\\b","MedionTablet":"Android.*\\bOYO\\b|LIFE.*(P9212|P9514|P9516|S9512)|LIFETAB","ArnovaTablet":"97G4|AN10G2|AN7bG3|AN7fG3|AN8G3|AN8cG3|AN7G3|AN9G3|AN7dG3|AN7dG3ST|AN7dG3ChildPad|AN10bG3|AN10bG3DT|AN9G2","IntensoTablet":"INM8002KP|INM1010FP|INM805ND|Intenso Tab|TAB1004","IRUTablet":"M702pro","MegafonTablet":"MegaFon V9|\\bZTE V9\\b|Android.*\\bMT7A\\b","EbodaTablet":"E-Boda (Supreme|Impresspeed|Izzycomm|Essential)","AllViewTablet":"Allview.*(Viva|Alldro|City|Speed|All TV|Frenzy|Quasar|Shine|TX1|AX1|AX2)","ArchosTablet":"\\b(101G9|80G9|A101IT)\\b|Qilive 97R|Archos5|\\bARCHOS (70|79|80|90|97|101|FAMILYPAD|)(b|c|)(G10| Cobalt| TITANIUM(HD|)| Xenon| Neon|XSK| 2| XS 2| PLATINUM| CARBON|GAMEPAD)\\b","AinolTablet":"NOVO7|NOVO8|NOVO10|Novo7Aurora|Novo7Basic|NOVO7PALADIN|novo9-Spark","NokiaLumiaTablet":"Lumia 2520","SonyTablet":"Sony.*Tablet|Xperia Tablet|Sony Tablet S|SO-03E|SGPT12|SGPT13|SGPT114|SGPT121|SGPT122|SGPT123|SGPT111|SGPT112|SGPT113|SGPT131|SGPT132|SGPT133|SGPT211|SGPT212|SGPT213|SGP311|SGP312|SGP321|EBRD1101|EBRD1102|EBRD1201|SGP351|SGP341|SGP511|SGP512|SGP521|SGP541|SGP551|SGP621|SGP641|SGP612|SOT31|SGP771|SGP611|SGP612|SGP712","PhilipsTablet":"\\b(PI2010|PI3000|PI3100|PI3105|PI3110|PI3205|PI3210|PI3900|PI4010|PI7000|PI7100)\\b","CubeTablet":"Android.*(K8GT|U9GT|U10GT|U16GT|U17GT|U18GT|U19GT|U20GT|U23GT|U30GT)|CUBE U8GT","CobyTablet":"MID1042|MID1045|MID1125|MID1126|MID7012|MID7014|MID7015|MID7034|MID7035|MID7036|MID7042|MID7048|MID7127|MID8042|MID8048|MID8127|MID9042|MID9740|MID9742|MID7022|MID7010","MIDTablet":"M9701|M9000|M9100|M806|M1052|M806|T703|MID701|MID713|MID710|MID727|MID760|MID830|MID728|MID933|MID125|MID810|MID732|MID120|MID930|MID800|MID731|MID900|MID100|MID820|MID735|MID980|MID130|MID833|MID737|MID960|MID135|MID860|MID736|MID140|MID930|MID835|MID733|MID4X10","MSITablet":"MSI \\b(Primo 73K|Primo 73L|Primo 81L|Primo 77|Primo 93|Primo 75|Primo 76|Primo 73|Primo 81|Primo 91|Primo 90|Enjoy 71|Enjoy 7|Enjoy 10)\\b","SMiTTablet":"Android.*(\\bMID\\b|MID-560|MTV-T1200|MTV-PND531|MTV-P1101|MTV-PND530)","RockChipTablet":"Android.*(RK2818|RK2808A|RK2918|RK3066)|RK2738|RK2808A","FlyTablet":"IQ310|Fly Vision","bqTablet":"Android.*(bq)?.*\\b(Elcano|Curie|Edison|Maxwell|Kepler|Pascal|Tesla|Hypatia|Platon|Newton|Livingstone|Cervantes|Avant|Aquaris ([E|M]10|M8))\\b|Maxwell.*Lite|Maxwell.*Plus","HuaweiTablet":"MediaPad|MediaPad 7 Youth|IDEOS S7|S7-201c|S7-202u|S7-101|S7-103|S7-104|S7-105|S7-106|S7-201|S7-Slim|M2-A01L|BAH-L09|BAH-W09|AGS-L09|CMR-AL19","NecTablet":"\\bN-06D|\\bN-08D","PantechTablet":"Pantech.*P4100","BronchoTablet":"Broncho.*(N701|N708|N802|a710)","VersusTablet":"TOUCHPAD.*[78910]|\\bTOUCHTAB\\b","ZyncTablet":"z1000|Z99 2G|z930|z990|z909|Z919|z900","PositivoTablet":"TB07STA|TB10STA|TB07FTA|TB10FTA","NabiTablet":"Android.*\\bNabi","KoboTablet":"Kobo Touch|\\bK080\\b|\\bVox\\b Build|\\bArc\\b Build","DanewTablet":"DSlide.*\\b(700|701R|702|703R|704|802|970|971|972|973|974|1010|1012)\\b","TexetTablet":"NaviPad|TB-772A|TM-7045|TM-7055|TM-9750|TM-7016|TM-7024|TM-7026|TM-7041|TM-7043|TM-7047|TM-8041|TM-9741|TM-9747|TM-9748|TM-9751|TM-7022|TM-7021|TM-7020|TM-7011|TM-7010|TM-7023|TM-7025|TM-7037W|TM-7038W|TM-7027W|TM-9720|TM-9725|TM-9737W|TM-1020|TM-9738W|TM-9740|TM-9743W|TB-807A|TB-771A|TB-727A|TB-725A|TB-719A|TB-823A|TB-805A|TB-723A|TB-715A|TB-707A|TB-705A|TB-709A|TB-711A|TB-890HD|TB-880HD|TB-790HD|TB-780HD|TB-770HD|TB-721HD|TB-710HD|TB-434HD|TB-860HD|TB-840HD|TB-760HD|TB-750HD|TB-740HD|TB-730HD|TB-722HD|TB-720HD|TB-700HD|TB-500HD|TB-470HD|TB-431HD|TB-430HD|TB-506|TB-504|TB-446|TB-436|TB-416|TB-146SE|TB-126SE","PlaystationTablet":"Playstation.*(Portable|Vita)","TrekstorTablet":"ST10416-1|VT10416-1|ST70408-1|ST702xx-1|ST702xx-2|ST80208|ST97216|ST70104-2|VT10416-2|ST10216-2A|SurfTab","PyleAudioTablet":"\\b(PTBL10CEU|PTBL10C|PTBL72BC|PTBL72BCEU|PTBL7CEU|PTBL7C|PTBL92BC|PTBL92BCEU|PTBL9CEU|PTBL9CUK|PTBL9C)\\b","AdvanTablet":"Android.* \\b(E3A|T3X|T5C|T5B|T3E|T3C|T3B|T1J|T1F|T2A|T1H|T1i|E1C|T1-E|T5-A|T4|E1-B|T2Ci|T1-B|T1-D|O1-A|E1-A|T1-A|T3A|T4i)\\b ","DanyTechTablet":"Genius Tab G3|Genius Tab S2|Genius Tab Q3|Genius Tab G4|Genius Tab Q4|Genius Tab G-II|Genius TAB GII|Genius TAB GIII|Genius Tab S1","GalapadTablet":"Android.*\\bG1\\b(?!\\))","MicromaxTablet":"Funbook|Micromax.*\\b(P250|P560|P360|P362|P600|P300|P350|P500|P275)\\b","KarbonnTablet":"Android.*\\b(A39|A37|A34|ST8|ST10|ST7|Smart Tab3|Smart Tab2)\\b","AllFineTablet":"Fine7 Genius|Fine7 Shine|Fine7 Air|Fine8 Style|Fine9 More|Fine10 Joy|Fine11 Wide","PROSCANTablet":"\\b(PEM63|PLT1023G|PLT1041|PLT1044|PLT1044G|PLT1091|PLT4311|PLT4311PL|PLT4315|PLT7030|PLT7033|PLT7033D|PLT7035|PLT7035D|PLT7044K|PLT7045K|PLT7045KB|PLT7071KG|PLT7072|PLT7223G|PLT7225G|PLT7777G|PLT7810K|PLT7849G|PLT7851G|PLT7852G|PLT8015|PLT8031|PLT8034|PLT8036|PLT8080K|PLT8082|PLT8088|PLT8223G|PLT8234G|PLT8235G|PLT8816K|PLT9011|PLT9045K|PLT9233G|PLT9735|PLT9760G|PLT9770G)\\b","YONESTablet":"BQ1078|BC1003|BC1077|RK9702|BC9730|BC9001|IT9001|BC7008|BC7010|BC708|BC728|BC7012|BC7030|BC7027|BC7026","ChangJiaTablet":"TPC7102|TPC7103|TPC7105|TPC7106|TPC7107|TPC7201|TPC7203|TPC7205|TPC7210|TPC7708|TPC7709|TPC7712|TPC7110|TPC8101|TPC8103|TPC8105|TPC8106|TPC8203|TPC8205|TPC8503|TPC9106|TPC9701|TPC97101|TPC97103|TPC97105|TPC97106|TPC97111|TPC97113|TPC97203|TPC97603|TPC97809|TPC97205|TPC10101|TPC10103|TPC10106|TPC10111|TPC10203|TPC10205|TPC10503","GUTablet":"TX-A1301|TX-M9002|Q702|kf026","PointOfViewTablet":"TAB-P506|TAB-navi-7-3G-M|TAB-P517|TAB-P-527|TAB-P701|TAB-P703|TAB-P721|TAB-P731N|TAB-P741|TAB-P825|TAB-P905|TAB-P925|TAB-PR945|TAB-PL1015|TAB-P1025|TAB-PI1045|TAB-P1325|TAB-PROTAB[0-9]+|TAB-PROTAB25|TAB-PROTAB26|TAB-PROTAB27|TAB-PROTAB26XL|TAB-PROTAB2-IPS9|TAB-PROTAB30-IPS9|TAB-PROTAB25XXL|TAB-PROTAB26-IPS10|TAB-PROTAB30-IPS10","OvermaxTablet":"OV-(SteelCore|NewBase|Basecore|Baseone|Exellen|Quattor|EduTab|Solution|ACTION|BasicTab|TeddyTab|MagicTab|Stream|TB-08|TB-09)|Qualcore 1027","HCLTablet":"HCL.*Tablet|Connect-3G-2.0|Connect-2G-2.0|ME Tablet U1|ME Tablet U2|ME Tablet G1|ME Tablet X1|ME Tablet Y2|ME Tablet Sync","DPSTablet":"DPS Dream 9|DPS Dual 7","VistureTablet":"V97 HD|i75 3G|Visture V4( HD)?|Visture V5( HD)?|Visture V10","CrestaTablet":"CTP(-)?810|CTP(-)?818|CTP(-)?828|CTP(-)?838|CTP(-)?888|CTP(-)?978|CTP(-)?980|CTP(-)?987|CTP(-)?988|CTP(-)?989","MediatekTablet":"\\bMT8125|MT8389|MT8135|MT8377\\b","ConcordeTablet":"Concorde([ ]+)?Tab|ConCorde ReadMan","GoCleverTablet":"GOCLEVER TAB|A7GOCLEVER|M1042|M7841|M742|R1042BK|R1041|TAB A975|TAB A7842|TAB A741|TAB A741L|TAB M723G|TAB M721|TAB A1021|TAB I921|TAB R721|TAB I720|TAB T76|TAB R70|TAB R76.2|TAB R106|TAB R83.2|TAB M813G|TAB I721|GCTA722|TAB I70|TAB I71|TAB S73|TAB R73|TAB R74|TAB R93|TAB R75|TAB R76.1|TAB A73|TAB A93|TAB A93.2|TAB T72|TAB R83|TAB R974|TAB R973|TAB A101|TAB A103|TAB A104|TAB A104.2|R105BK|M713G|A972BK|TAB A971|TAB R974.2|TAB R104|TAB R83.3|TAB A1042","ModecomTablet":"FreeTAB 9000|FreeTAB 7.4|FreeTAB 7004|FreeTAB 7800|FreeTAB 2096|FreeTAB 7.5|FreeTAB 1014|FreeTAB 1001 |FreeTAB 8001|FreeTAB 9706|FreeTAB 9702|FreeTAB 7003|FreeTAB 7002|FreeTAB 1002|FreeTAB 7801|FreeTAB 1331|FreeTAB 1004|FreeTAB 8002|FreeTAB 8014|FreeTAB 9704|FreeTAB 1003","VoninoTablet":"\\b(Argus[ _]?S|Diamond[ _]?79HD|Emerald[ _]?78E|Luna[ _]?70C|Onyx[ _]?S|Onyx[ _]?Z|Orin[ _]?HD|Orin[ _]?S|Otis[ _]?S|SpeedStar[ _]?S|Magnet[ _]?M9|Primus[ _]?94[ _]?3G|Primus[ _]?94HD|Primus[ _]?QS|Android.*\\bQ8\\b|Sirius[ _]?EVO[ _]?QS|Sirius[ _]?QS|Spirit[ _]?S)\\b","ECSTablet":"V07OT2|TM105A|S10OT1|TR10CS1","StorexTablet":"eZee[_']?(Tab|Go)[0-9]+|TabLC7|Looney Tunes Tab","VodafoneTablet":"SmartTab([ ]+)?[0-9]+|SmartTabII10|SmartTabII7|VF-1497|VFD 1400","EssentielBTablet":"Smart[ ']?TAB[ ]+?[0-9]+|Family[ ']?TAB2","RossMoorTablet":"RM-790|RM-997|RMD-878G|RMD-974R|RMT-705A|RMT-701|RME-601|RMT-501|RMT-711","iMobileTablet":"i-mobile i-note","TolinoTablet":"tolino tab [0-9.]+|tolino shine","AudioSonicTablet":"\\bC-22Q|T7-QC|T-17B|T-17P\\b","AMPETablet":"Android.* A78 ","SkkTablet":"Android.* (SKYPAD|PHOENIX|CYCLOPS)","TecnoTablet":"TECNO P9|TECNO DP8D","JXDTablet":"Android.* \\b(F3000|A3300|JXD5000|JXD3000|JXD2000|JXD300B|JXD300|S5800|S7800|S602b|S5110b|S7300|S5300|S602|S603|S5100|S5110|S601|S7100a|P3000F|P3000s|P101|P200s|P1000m|P200m|P9100|P1000s|S6600b|S908|P1000|P300|S18|S6600|S9100)\\b","iJoyTablet":"Tablet (Spirit 7|Essentia|Galatea|Fusion|Onix 7|Landa|Titan|Scooby|Deox|Stella|Themis|Argon|Unique 7|Sygnus|Hexen|Finity 7|Cream|Cream X2|Jade|Neon 7|Neron 7|Kandy|Scape|Saphyr 7|Rebel|Biox|Rebel|Rebel 8GB|Myst|Draco 7|Myst|Tab7-004|Myst|Tadeo Jones|Tablet Boing|Arrow|Draco Dual Cam|Aurix|Mint|Amity|Revolution|Finity 9|Neon 9|T9w|Amity 4GB Dual Cam|Stone 4GB|Stone 8GB|Andromeda|Silken|X2|Andromeda II|Halley|Flame|Saphyr 9,7|Touch 8|Planet|Triton|Unique 10|Hexen 10|Memphis 4GB|Memphis 8GB|Onix 10)","FX2Tablet":"FX2 PAD7|FX2 PAD10","XoroTablet":"KidsPAD 701|PAD[ ]?712|PAD[ ]?714|PAD[ ]?716|PAD[ ]?717|PAD[ ]?718|PAD[ ]?720|PAD[ ]?721|PAD[ ]?722|PAD[ ]?790|PAD[ ]?792|PAD[ ]?900|PAD[ ]?9715D|PAD[ ]?9716DR|PAD[ ]?9718DR|PAD[ ]?9719QR|PAD[ ]?9720QR|TelePAD1030|Telepad1032|TelePAD730|TelePAD731|TelePAD732|TelePAD735Q|TelePAD830|TelePAD9730|TelePAD795|MegaPAD 1331|MegaPAD 1851|MegaPAD 2151","ViewsonicTablet":"ViewPad 10pi|ViewPad 10e|ViewPad 10s|ViewPad E72|ViewPad7|ViewPad E100|ViewPad 7e|ViewSonic VB733|VB100a","VerizonTablet":"QTAQZ3|QTAIR7|QTAQTZ3|QTASUN1|QTASUN2|QTAXIA1","OdysTablet":"LOOX|XENO10|ODYS[ -](Space|EVO|Xpress|NOON)|\\bXELIO\\b|Xelio10Pro|XELIO7PHONETAB|XELIO10EXTREME|XELIOPT2|NEO_QUAD10","CaptivaTablet":"CAPTIVA PAD","IconbitTablet":"NetTAB|NT-3702|NT-3702S|NT-3702S|NT-3603P|NT-3603P|NT-0704S|NT-0704S|NT-3805C|NT-3805C|NT-0806C|NT-0806C|NT-0909T|NT-0909T|NT-0907S|NT-0907S|NT-0902S|NT-0902S","TeclastTablet":"T98 4G|\\bP80\\b|\\bX90HD\\b|X98 Air|X98 Air 3G|\\bX89\\b|P80 3G|\\bX80h\\b|P98 Air|\\bX89HD\\b|P98 3G|\\bP90HD\\b|P89 3G|X98 3G|\\bP70h\\b|P79HD 3G|G18d 3G|\\bP79HD\\b|\\bP89s\\b|\\bA88\\b|\\bP10HD\\b|\\bP19HD\\b|G18 3G|\\bP78HD\\b|\\bA78\\b|\\bP75\\b|G17s 3G|G17h 3G|\\bP85t\\b|\\bP90\\b|\\bP11\\b|\\bP98t\\b|\\bP98HD\\b|\\bG18d\\b|\\bP85s\\b|\\bP11HD\\b|\\bP88s\\b|\\bA80HD\\b|\\bA80se\\b|\\bA10h\\b|\\bP89\\b|\\bP78s\\b|\\bG18\\b|\\bP85\\b|\\bA70h\\b|\\bA70\\b|\\bG17\\b|\\bP18\\b|\\bA80s\\b|\\bA11s\\b|\\bP88HD\\b|\\bA80h\\b|\\bP76s\\b|\\bP76h\\b|\\bP98\\b|\\bA10HD\\b|\\bP78\\b|\\bP88\\b|\\bA11\\b|\\bA10t\\b|\\bP76a\\b|\\bP76t\\b|\\bP76e\\b|\\bP85HD\\b|\\bP85a\\b|\\bP86\\b|\\bP75HD\\b|\\bP76v\\b|\\bA12\\b|\\bP75a\\b|\\bA15\\b|\\bP76Ti\\b|\\bP81HD\\b|\\bA10\\b|\\bT760VE\\b|\\bT720HD\\b|\\bP76\\b|\\bP73\\b|\\bP71\\b|\\bP72\\b|\\bT720SE\\b|\\bC520Ti\\b|\\bT760\\b|\\bT720VE\\b|T720-3GE|T720-WiFi","OndaTablet":"\\b(V975i|Vi30|VX530|V701|Vi60|V701s|Vi50|V801s|V719|Vx610w|VX610W|V819i|Vi10|VX580W|Vi10|V711s|V813|V811|V820w|V820|Vi20|V711|VI30W|V712|V891w|V972|V819w|V820w|Vi60|V820w|V711|V813s|V801|V819|V975s|V801|V819|V819|V818|V811|V712|V975m|V101w|V961w|V812|V818|V971|V971s|V919|V989|V116w|V102w|V973|Vi40)\\b[\\s]+|V10 \\b4G\\b","JaytechTablet":"TPC-PA762","BlaupunktTablet":"Endeavour 800NG|Endeavour 1010","DigmaTablet":"\\b(iDx10|iDx9|iDx8|iDx7|iDxD7|iDxD8|iDsQ8|iDsQ7|iDsQ8|iDsD10|iDnD7|3TS804H|iDsQ11|iDj7|iDs10)\\b","EvolioTablet":"ARIA_Mini_wifi|Aria[ _]Mini|Evolio X10|Evolio X7|Evolio X8|\\bEvotab\\b|\\bNeura\\b","LavaTablet":"QPAD E704|\\bIvoryS\\b|E-TAB IVORY|\\bE-TAB\\b","AocTablet":"MW0811|MW0812|MW0922|MTK8382|MW1031|MW0831|MW0821|MW0931|MW0712","MpmanTablet":"MP11 OCTA|MP10 OCTA|MPQC1114|MPQC1004|MPQC994|MPQC974|MPQC973|MPQC804|MPQC784|MPQC780|\\bMPG7\\b|MPDCG75|MPDCG71|MPDC1006|MP101DC|MPDC9000|MPDC905|MPDC706HD|MPDC706|MPDC705|MPDC110|MPDC100|MPDC99|MPDC97|MPDC88|MPDC8|MPDC77|MP709|MID701|MID711|MID170|MPDC703|MPQC1010","CelkonTablet":"CT695|CT888|CT[\\s]?910|CT7 Tab|CT9 Tab|CT3 Tab|CT2 Tab|CT1 Tab|C820|C720|\\bCT-1\\b","WolderTablet":"miTab \\b(DIAMOND|SPACE|BROOKLYN|NEO|FLY|MANHATTAN|FUNK|EVOLUTION|SKY|GOCAR|IRON|GENIUS|POP|MINT|EPSILON|BROADWAY|JUMP|HOP|LEGEND|NEW AGE|LINE|ADVANCE|FEEL|FOLLOW|LIKE|LINK|LIVE|THINK|FREEDOM|CHICAGO|CLEVELAND|BALTIMORE-GH|IOWA|BOSTON|SEATTLE|PHOENIX|DALLAS|IN 101|MasterChef)\\b","MediacomTablet":"M-MPI10C3G|M-SP10EG|M-SP10EGP|M-SP10HXAH|M-SP7HXAH|M-SP10HXBH|M-SP8HXAH|M-SP8MXA","MiTablet":"\\bMI PAD\\b|\\bHM NOTE 1W\\b","NibiruTablet":"Nibiru M1|Nibiru Jupiter One","NexoTablet":"NEXO NOVA|NEXO 10|NEXO AVIO|NEXO FREE|NEXO GO|NEXO EVO|NEXO 3G|NEXO SMART|NEXO KIDDO|NEXO MOBI","LeaderTablet":"TBLT10Q|TBLT10I|TBL-10WDKB|TBL-10WDKBO2013|TBL-W230V2|TBL-W450|TBL-W500|SV572|TBLT7I|TBA-AC7-8G|TBLT79|TBL-8W16|TBL-10W32|TBL-10WKB|TBL-W100","UbislateTablet":"UbiSlate[\\s]?7C","PocketBookTablet":"Pocketbook","KocasoTablet":"\\b(TB-1207)\\b","HisenseTablet":"\\b(F5281|E2371)\\b","Hudl":"Hudl HT7S3|Hudl 2","TelstraTablet":"T-Hub2","GenericTablet":"Android.*\\b97D\\b|Tablet(?!.*PC)|BNTV250A|MID-WCDMA|LogicPD Zoom2|\\bA7EB\\b|CatNova8|A1_07|CT704|CT1002|\\bM721\\b|rk30sdk|\\bEVOTAB\\b|M758A|ET904|ALUMIUM10|Smartfren Tab|Endeavour 1010|Tablet-PC-4|Tagi Tab|\\bM6pro\\b|CT1020W|arc 10HD|\\bTP750\\b|\\bQTAQZ3\\b|WVT101|TM1088|KT107"},"oss":{"AndroidOS":"Android","BlackBerryOS":"blackberry|\\bBB10\\b|rim tablet os","PalmOS":"PalmOS|avantgo|blazer|elaine|hiptop|palm|plucker|xiino","SymbianOS":"Symbian|SymbOS|Series60|Series40|SYB-[0-9]+|\\bS60\\b","WindowsMobileOS":"Windows CE.*(PPC|Smartphone|Mobile|[0-9]{3}x[0-9]{3})|Windows Mobile|Windows Phone [0-9.]+|WCE;","WindowsPhoneOS":"Windows Phone 10.0|Windows Phone 8.1|Windows Phone 8.0|Windows Phone OS|XBLWP7|ZuneWP7|Windows NT 6.[23]; ARM;","iOS":"\\biPhone.*Mobile|\\biPod|\\biPad|AppleCoreMedia","iPadOS":"CPU OS 13","MeeGoOS":"MeeGo","MaemoOS":"Maemo","JavaOS":"J2ME\/|\\bMIDP\\b|\\bCLDC\\b","webOS":"webOS|hpwOS","badaOS":"\\bBada\\b","BREWOS":"BREW"},"uas":{"Chrome":"\\bCrMo\\b|CriOS|Android.*Chrome\/[.0-9]* (Mobile)?","Dolfin":"\\bDolfin\\b","Opera":"Opera.*Mini|Opera.*Mobi|Android.*Opera|Mobile.*OPR\/[0-9.]+$|Coast\/[0-9.]+","Skyfire":"Skyfire","Edge":"Mobile Safari\/[.0-9]* Edge","IE":"IEMobile|MSIEMobile","Firefox":"fennec|firefox.*maemo|(Mobile|Tablet).*Firefox|Firefox.*Mobile|FxiOS","Bolt":"bolt","TeaShark":"teashark","Blazer":"Blazer","Safari":"Version.*Mobile.*Safari|Safari.*Mobile|MobileSafari","WeChat":"\\bMicroMessenger\\b","UCBrowser":"UC.*Browser|UCWEB","baiduboxapp":"baiduboxapp","baidubrowser":"baidubrowser","DiigoBrowser":"DiigoBrowser","Mercury":"\\bMercury\\b","ObigoBrowser":"Obigo","NetFront":"NF-Browser","GenericBrowser":"NokiaBrowser|OviBrowser|OneBrowser|TwonkyBeamBrowser|SEMC.*Browser|FlyFlow|Minimo|NetFront|Novarra-Vision|MQQBrowser|MicroMessenger","PaleMoon":"Android.*PaleMoon|Mobile.*PaleMoon"},"props":{"Mobile":"Mobile\/[VER]","Build":"Build\/[VER]","Version":"Version\/[VER]","VendorID":"VendorID\/[VER]","iPad":"iPad.*CPU[a-z ]+[VER]","iPhone":"iPhone.*CPU[a-z ]+[VER]","iPod":"iPod.*CPU[a-z ]+[VER]","Kindle":"Kindle\/[VER]","Chrome":["Chrome\/[VER]","CriOS\/[VER]","CrMo\/[VER]"],"Coast":["Coast\/[VER]"],"Dolfin":"Dolfin\/[VER]","Firefox":["Firefox\/[VER]","FxiOS\/[VER]"],"Fennec":"Fennec\/[VER]","Edge":"Edge\/[VER]","IE":["IEMobile\/[VER];","IEMobile [VER]","MSIE [VER];","Trident\/[0-9.]+;.*rv:[VER]"],"NetFront":"NetFront\/[VER]","NokiaBrowser":"NokiaBrowser\/[VER]","Opera":[" OPR\/[VER]","Opera Mini\/[VER]","Version\/[VER]"],"Opera Mini":"Opera Mini\/[VER]","Opera Mobi":"Version\/[VER]","UCBrowser":["UCWEB[VER]","UC.*Browser\/[VER]"],"MQQBrowser":"MQQBrowser\/[VER]","MicroMessenger":"MicroMessenger\/[VER]","baiduboxapp":"baiduboxapp\/[VER]","baidubrowser":"baidubrowser\/[VER]","SamsungBrowser":"SamsungBrowser\/[VER]","Iron":"Iron\/[VER]","Safari":["Version\/[VER]","Safari\/[VER]"],"Skyfire":"Skyfire\/[VER]","Tizen":"Tizen\/[VER]","Webkit":"webkit[ \/][VER]","PaleMoon":"PaleMoon\/[VER]","Gecko":"Gecko\/[VER]","Trident":"Trident\/[VER]","Presto":"Presto\/[VER]","Goanna":"Goanna\/[VER]","iOS":" \\bi?OS\\b [VER][ ;]{1}","Android":"Android [VER]","BlackBerry":["BlackBerry[\\w]+\/[VER]","BlackBerry.*Version\/[VER]","Version\/[VER]"],"BREW":"BREW [VER]","Java":"Java\/[VER]","Windows Phone OS":["Windows Phone OS [VER]","Windows Phone [VER]"],"Windows Phone":"Windows Phone [VER]","Windows CE":"Windows CE\/[VER]","Windows NT":"Windows NT [VER]","Symbian":["SymbianOS\/[VER]","Symbian\/[VER]"],"webOS":["webOS\/[VER]","hpwOS\/[VER];"]},"utils":{"Bot":"Googlebot|facebookexternalhit|Google-AMPHTML|s~amp-validator|AdsBot-Google|Google Keyword Suggestion|Facebot|YandexBot|YandexMobileBot|bingbot|ia_archiver|AhrefsBot|Ezooms|GSLFbot|WBSearchBot|Twitterbot|TweetmemeBot|Twikle|PaperLiBot|Wotbox|UnwindFetchor|Exabot|MJ12bot|YandexImages|TurnitinBot|Pingdom|contentkingapp","MobileBot":"Googlebot-Mobile|AdsBot-Google-Mobile|YahooSeeker\/M1A1-R2D2","DesktopMode":"WPDesktop","TV":"SonyDTV|HbbTV","WebKit":"(webkit)[ \/]([\\w.]+)","Console":"\\b(Nintendo|Nintendo WiiU|Nintendo 3DS|Nintendo Switch|PLAYSTATION|Xbox)\\b","Watch":"SM-V700"}};// following patterns come from http://detectmobilebrowsers.com/
impl.detectMobileBrowsers={fullPattern:/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i,shortPattern:/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i,tabletPattern:/android|ipad|playbook|silk/i};var hasOwnProp=Object.prototype.hasOwnProperty,isArray;impl.FALLBACK_PHONE='UnknownPhone';impl.FALLBACK_TABLET='UnknownTablet';impl.FALLBACK_MOBILE='UnknownMobile';isArray='isArray'in Array?Array.isArray:function(value){return Object.prototype.toString.call(value)==='[object Array]';};function equalIC(a,b){return a!=null&&b!=null&&a.toLowerCase()===b.toLowerCase();}function containsIC(array,value){var valueLC,i,len=array.length;if(!len||!value){return false;}valueLC=value.toLowerCase();for(i=0;i<len;++i){if(valueLC===array[i].toLowerCase()){return true;}}return false;}function convertPropsToRegExp(object){for(var key in object){if(hasOwnProp.call(object,key)){object[key]=new RegExp(object[key],'i');}}}function prepareUserAgent(userAgent){return(userAgent||'').substr(0,500);// mitigate vulnerable to ReDoS
}(function init(){var key,values,value,i,len,verPos,mobileDetectRules=impl.mobileDetectRules;for(key in mobileDetectRules.props){if(hasOwnProp.call(mobileDetectRules.props,key)){values=mobileDetectRules.props[key];if(!isArray(values)){values=[values];}len=values.length;for(i=0;i<len;++i){value=values[i];verPos=value.indexOf('[VER]');if(verPos>=0){value=value.substring(0,verPos)+'([\\w._\\+]+)'+value.substring(verPos+5);}values[i]=new RegExp(value,'i');}mobileDetectRules.props[key]=values;}}convertPropsToRegExp(mobileDetectRules.oss);convertPropsToRegExp(mobileDetectRules.phones);convertPropsToRegExp(mobileDetectRules.tablets);convertPropsToRegExp(mobileDetectRules.uas);convertPropsToRegExp(mobileDetectRules.utils);// copy some patterns to oss0 which are tested first (see issue#15)
mobileDetectRules.oss0={WindowsPhoneOS:mobileDetectRules.oss.WindowsPhoneOS,WindowsMobileOS:mobileDetectRules.oss.WindowsMobileOS};})();/**
     * Test userAgent string against a set of rules and find the first matched key.
     * @param {Object} rules (key is String, value is RegExp)
     * @param {String} userAgent the navigator.userAgent (or HTTP-Header 'User-Agent').
     * @returns {String|null} the matched key if found, otherwise <tt>null</tt>
     * @private
     */impl.findMatch=function(rules,userAgent){for(var key in rules){if(hasOwnProp.call(rules,key)){if(rules[key].test(userAgent)){return key;}}}return null;};/**
     * Test userAgent string against a set of rules and return an array of matched keys.
     * @param {Object} rules (key is String, value is RegExp)
     * @param {String} userAgent the navigator.userAgent (or HTTP-Header 'User-Agent').
     * @returns {Array} an array of matched keys, may be empty when there is no match, but not <tt>null</tt>
     * @private
     */impl.findMatches=function(rules,userAgent){var result=[];for(var key in rules){if(hasOwnProp.call(rules,key)){if(rules[key].test(userAgent)){result.push(key);}}}return result;};/**
     * Check the version of the given property in the User-Agent.
     *
     * @param {String} propertyName
     * @param {String} userAgent
     * @return {String} version or <tt>null</tt> if version not found
     * @private
     */impl.getVersionStr=function(propertyName,userAgent){var props=impl.mobileDetectRules.props,patterns,i,len,match;if(hasOwnProp.call(props,propertyName)){patterns=props[propertyName];len=patterns.length;for(i=0;i<len;++i){match=patterns[i].exec(userAgent);if(match!==null){return match[1];}}}return null;};/**
     * Check the version of the given property in the User-Agent.
     * Will return a float number. (eg. 2_0 will return 2.0, 4.3.1 will return 4.31)
     *
     * @param {String} propertyName
     * @param {String} userAgent
     * @return {Number} version or <tt>NaN</tt> if version not found
     * @private
     */impl.getVersion=function(propertyName,userAgent){var version=impl.getVersionStr(propertyName,userAgent);return version?impl.prepareVersionNo(version):NaN;};/**
     * Prepare the version number.
     *
     * @param {String} version
     * @return {Number} the version number as a floating number
     * @private
     */impl.prepareVersionNo=function(version){var numbers;numbers=version.split(/[a-z._ \/\-]/i);if(numbers.length===1){version=numbers[0];}if(numbers.length>1){version=numbers[0]+'.';numbers.shift();version+=numbers.join('');}return Number(version);};impl.isMobileFallback=function(userAgent){return impl.detectMobileBrowsers.fullPattern.test(userAgent)||impl.detectMobileBrowsers.shortPattern.test(userAgent.substr(0,4));};impl.isTabletFallback=function(userAgent){return impl.detectMobileBrowsers.tabletPattern.test(userAgent);};impl.prepareDetectionCache=function(cache,userAgent,maxPhoneWidth){if(cache.mobile!==undefined){return;}var phone,tablet,phoneSized;// first check for stronger tablet rules, then phone (see issue#5)
tablet=impl.findMatch(impl.mobileDetectRules.tablets,userAgent);if(tablet){cache.mobile=cache.tablet=tablet;cache.phone=null;return;// unambiguously identified as tablet
}phone=impl.findMatch(impl.mobileDetectRules.phones,userAgent);if(phone){cache.mobile=cache.phone=phone;cache.tablet=null;return;// unambiguously identified as phone
}// our rules haven't found a match -> try more general fallback rules
if(impl.isMobileFallback(userAgent)){phoneSized=MobileDetect.isPhoneSized(maxPhoneWidth);if(phoneSized===undefined){cache.mobile=impl.FALLBACK_MOBILE;cache.tablet=cache.phone=null;}else if(phoneSized){cache.mobile=cache.phone=impl.FALLBACK_PHONE;cache.tablet=null;}else{cache.mobile=cache.tablet=impl.FALLBACK_TABLET;cache.phone=null;}}else if(impl.isTabletFallback(userAgent)){cache.mobile=cache.tablet=impl.FALLBACK_TABLET;cache.phone=null;}else{// not mobile at all!
cache.mobile=cache.tablet=cache.phone=null;}};// t is a reference to a MobileDetect instance
impl.mobileGrade=function(t){// impl note:
// To keep in sync w/ Mobile_Detect.php easily, the following code is tightly aligned to the PHP version.
// When changes are made in Mobile_Detect.php, copy this method and replace:
//     $this-> / t.
//     self::MOBILE_GRADE_(.) / '$1'
//     , self::VERSION_TYPE_FLOAT / (nothing)
//     isIOS() / os('iOS')
//     [reg] / (nothing)   <-- jsdelivr complaining about unescaped unicode character U+00AE
var $isMobile=t.mobile()!==null;if(// Apple iOS 3.2-5.1 - Tested on the original iPad (4.3 / 5.0), iPad 2 (4.3), iPad 3 (5.1), original iPhone (3.1), iPhone 3 (3.2), 3GS (4.3), 4 (4.3 / 5.0), and 4S (5.1)
t.os('iOS')&&t.version('iPad')>=4.3||t.os('iOS')&&t.version('iPhone')>=3.1||t.os('iOS')&&t.version('iPod')>=3.1||// Android 2.1-2.3 - Tested on the HTC Incredible (2.2), original Droid (2.2), HTC Aria (2.1), Google Nexus S (2.3). Functional on 1.5 & 1.6 but performance may be sluggish, tested on Google G1 (1.5)
// Android 3.1 (Honeycomb)  - Tested on the Samsung Galaxy Tab 10.1 and Motorola XOOM
// Android 4.0 (ICS)  - Tested on a Galaxy Nexus. Note: transition performance can be poor on upgraded devices
// Android 4.1 (Jelly Bean)  - Tested on a Galaxy Nexus and Galaxy 7
t.version('Android')>2.1&&t.is('Webkit')||// Windows Phone 7-7.5 - Tested on the HTC Surround (7.0) HTC Trophy (7.5), LG-E900 (7.5), Nokia Lumia 800
t.version('Windows Phone OS')>=7.0||// Blackberry 7 - Tested on BlackBerry Torch 9810
// Blackberry 6.0 - Tested on the Torch 9800 and Style 9670
t.is('BlackBerry')&&t.version('BlackBerry')>=6.0||// Blackberry Playbook (1.0-2.0) - Tested on PlayBook
t.match('Playbook.*Tablet')||// Palm WebOS (1.4-2.0) - Tested on the Palm Pixi (1.4), Pre (1.4), Pre 2 (2.0)
t.version('webOS')>=1.4&&t.match('Palm|Pre|Pixi')||// Palm WebOS 3.0  - Tested on HP TouchPad
t.match('hp.*TouchPad')||// Firefox Mobile (12 Beta) - Tested on Android 2.3 device
t.is('Firefox')&&t.version('Firefox')>=12||// Chrome for Android - Tested on Android 4.0, 4.1 device
t.is('Chrome')&&t.is('AndroidOS')&&t.version('Android')>=4.0||// Skyfire 4.1 - Tested on Android 2.3 device
t.is('Skyfire')&&t.version('Skyfire')>=4.1&&t.is('AndroidOS')&&t.version('Android')>=2.3||// Opera Mobile 11.5-12: Tested on Android 2.3
t.is('Opera')&&t.version('Opera Mobi')>11&&t.is('AndroidOS')||// Meego 1.2 - Tested on Nokia 950 and N9
t.is('MeeGoOS')||// Tizen (pre-release) - Tested on early hardware
t.is('Tizen')||// Samsung Bada 2.0 - Tested on a Samsung Wave 3, Dolphin browser
// @todo: more tests here!
t.is('Dolfin')&&t.version('Bada')>=2.0||// UC Browser - Tested on Android 2.3 device
(t.is('UC Browser')||t.is('Dolfin'))&&t.version('Android')>=2.3||// Kindle 3 and Fire  - Tested on the built-in WebKit browser for each
t.match('Kindle Fire')||t.is('Kindle')&&t.version('Kindle')>=3.0||// Nook Color 1.4.1 - Tested on original Nook Color, not Nook Tablet
t.is('AndroidOS')&&t.is('NookTablet')||// Chrome Desktop 11-21 - Tested on OS X 10.7 and Windows 7
t.version('Chrome')>=11&&!$isMobile||// Safari Desktop 4-5 - Tested on OS X 10.7 and Windows 7
t.version('Safari')>=5.0&&!$isMobile||// Firefox Desktop 4-13 - Tested on OS X 10.7 and Windows 7
t.version('Firefox')>=4.0&&!$isMobile||// Internet Explorer 7-9 - Tested on Windows XP, Vista and 7
t.version('MSIE')>=7.0&&!$isMobile||// Opera Desktop 10-12 - Tested on OS X 10.7 and Windows 7
// @reference: http://my.opera.com/community/openweb/idopera/
t.version('Opera')>=10&&!$isMobile){return'A';}if(t.os('iOS')&&t.version('iPad')<4.3||t.os('iOS')&&t.version('iPhone')<3.1||t.os('iOS')&&t.version('iPod')<3.1||// Blackberry 5.0: Tested on the Storm 2 9550, Bold 9770
t.is('Blackberry')&&t.version('BlackBerry')>=5&&t.version('BlackBerry')<6||//Opera Mini (5.0-6.5) - Tested on iOS 3.2/4.3 and Android 2.3
t.version('Opera Mini')>=5.0&&t.version('Opera Mini')<=6.5&&(t.version('Android')>=2.3||t.is('iOS'))||// Nokia Symbian^3 - Tested on Nokia N8 (Symbian^3), C7 (Symbian^3), also works on N97 (Symbian^1)
t.match('NokiaN8|NokiaC7|N97.*Series60|Symbian/3')||// @todo: report this (tested on Nokia N71)
t.version('Opera Mobi')>=11&&t.is('SymbianOS')){return'B';}if(// Blackberry 4.x - Tested on the Curve 8330
t.version('BlackBerry')<5.0||// Windows Mobile - Tested on the HTC Leo (WinMo 5.2)
t.match('MSIEMobile|Windows CE.*Mobile')||t.version('Windows Mobile')<=5.2){return'C';}//All older smartphone platforms and featurephones - Any device that doesn't support media queries
//will receive the basic, C grade experience.
return'C';};impl.detectOS=function(ua){return impl.findMatch(impl.mobileDetectRules.oss0,ua)||impl.findMatch(impl.mobileDetectRules.oss,ua);};impl.getDeviceSmallerSide=function(){return window.screen.width<window.screen.height?window.screen.width:window.screen.height;};/**
     * Constructor for MobileDetect object.
     * <br>
     * Such an object will keep a reference to the given user-agent string and cache most of the detect queries.<br>
     * <div style="background-color: #d9edf7; border: 1px solid #bce8f1; color: #3a87ad; padding: 14px; border-radius: 2px; margin-top: 20px">
     *     <strong>Find information how to download and install:</strong>
     *     <a href="https://github.com/hgoebl/mobile-detect.js/">github.com/hgoebl/mobile-detect.js/</a>
     * </div>
     *
     * @example <pre>
     *     var md = new MobileDetect(window.navigator.userAgent);
     *     if (md.mobile()) {
     *         location.href = (md.mobileGrade() === 'A') ? '/mobile/' : '/lynx/';
     *     }
     * </pre>
     *
     * @param {string} userAgent typically taken from window.navigator.userAgent or http_header['User-Agent']
     * @param {number} [maxPhoneWidth=600] <strong>only for browsers</strong> specify a value for the maximum
     *        width of smallest device side (in logical "CSS" pixels) until a device detected as mobile will be handled
     *        as phone.
     *        This is only used in cases where the device cannot be classified as phone or tablet.<br>
     *        See <a href="http://developer.android.com/guide/practices/screens_support.html">Declaring Tablet Layouts
     *        for Android</a>.<br>
     *        If you provide a value < 0, then this "fuzzy" check is disabled.
     * @constructor
     * @global
     */function MobileDetect(userAgent,maxPhoneWidth){this.ua=prepareUserAgent(userAgent);this._cache={};//600dp is typical 7" tablet minimum width
this.maxPhoneWidth=maxPhoneWidth||600;}MobileDetect.prototype={constructor:MobileDetect,/**
         * Returns the detected phone or tablet type or <tt>null</tt> if it is not a mobile device.
         * <br>
         * For a list of possible return values see {@link MobileDetect#phone} and {@link MobileDetect#tablet}.<br>
         * <br>
         * If the device is not detected by the regular expressions from Mobile-Detect, a test is made against
         * the patterns of <a href="http://detectmobilebrowsers.com/">detectmobilebrowsers.com</a>. If this test
         * is positive, a value of <code>UnknownPhone</code>, <code>UnknownTablet</code> or
         * <code>UnknownMobile</code> is returned.<br>
         * When used in browser, the decision whether phone or tablet is made based on <code>screen.width/height</code>.<br>
         * <br>
         * When used server-side (node.js), there is no way to tell the difference between <code>UnknownTablet</code>
         * and <code>UnknownMobile</code>, so you will get <code>UnknownMobile</code> here.<br>
         * Be aware that since v1.0.0 in this special case you will get <code>UnknownMobile</code> only for:
         * {@link MobileDetect#mobile}, not for {@link MobileDetect#phone} and {@link MobileDetect#tablet}.
         * In versions before v1.0.0 all 3 methods returned <code>UnknownMobile</code> which was tedious to use.
         * <br>
         * In most cases you will use the return value just as a boolean.
         *
         * @returns {String} the key for the phone family or tablet family, e.g. "Nexus".
         * @function MobileDetect#mobile
         */mobile:function mobile(){impl.prepareDetectionCache(this._cache,this.ua,this.maxPhoneWidth);return this._cache.mobile;},/**
         * Returns the detected phone type/family string or <tt>null</tt>.
         * <br>
         * The returned tablet (family or producer) is one of following keys:<br>
         * <br><tt>iPhone, BlackBerry, HTC, Nexus, Dell, Motorola, Samsung, LG, Sony, Asus,
         * NokiaLumia, Micromax, Palm, Vertu, Pantech, Fly, Wiko, iMobile, SimValley,
         * Wolfgang, Alcatel, Nintendo, Amoi, INQ, OnePlus, GenericPhone</tt><br>
         * <br>
         * If the device is not detected by the regular expressions from Mobile-Detect, a test is made against
         * the patterns of <a href="http://detectmobilebrowsers.com/">detectmobilebrowsers.com</a>. If this test
         * is positive, a value of <code>UnknownPhone</code> or <code>UnknownMobile</code> is returned.<br>
         * When used in browser, the decision whether phone or tablet is made based on <code>screen.width/height</code>.<br>
         * <br>
         * When used server-side (node.js), there is no way to tell the difference between <code>UnknownTablet</code>
         * and <code>UnknownMobile</code>, so you will get <code>null</code> here, while {@link MobileDetect#mobile}
         * will return <code>UnknownMobile</code>.<br>
         * Be aware that since v1.0.0 in this special case you will get <code>UnknownMobile</code> only for:
         * {@link MobileDetect#mobile}, not for {@link MobileDetect#phone} and {@link MobileDetect#tablet}.
         * In versions before v1.0.0 all 3 methods returned <code>UnknownMobile</code> which was tedious to use.
         * <br>
         * In most cases you will use the return value just as a boolean.
         *
         * @returns {String} the key of the phone family or producer, e.g. "iPhone"
         * @function MobileDetect#phone
         */phone:function phone(){impl.prepareDetectionCache(this._cache,this.ua,this.maxPhoneWidth);return this._cache.phone;},/**
         * Returns the detected tablet type/family string or <tt>null</tt>.
         * <br>
         * The returned tablet (family or producer) is one of following keys:<br>
         * <br><tt>iPad, NexusTablet, GoogleTablet, SamsungTablet, Kindle, SurfaceTablet,
         * HPTablet, AsusTablet, BlackBerryTablet, HTCtablet, MotorolaTablet, NookTablet,
         * AcerTablet, ToshibaTablet, LGTablet, FujitsuTablet, PrestigioTablet,
         * LenovoTablet, DellTablet, YarvikTablet, MedionTablet, ArnovaTablet,
         * IntensoTablet, IRUTablet, MegafonTablet, EbodaTablet, AllViewTablet,
         * ArchosTablet, AinolTablet, NokiaLumiaTablet, SonyTablet, PhilipsTablet,
         * CubeTablet, CobyTablet, MIDTablet, MSITablet, SMiTTablet, RockChipTablet,
         * FlyTablet, bqTablet, HuaweiTablet, NecTablet, PantechTablet, BronchoTablet,
         * VersusTablet, ZyncTablet, PositivoTablet, NabiTablet, KoboTablet, DanewTablet,
         * TexetTablet, PlaystationTablet, TrekstorTablet, PyleAudioTablet, AdvanTablet,
         * DanyTechTablet, GalapadTablet, MicromaxTablet, KarbonnTablet, AllFineTablet,
         * PROSCANTablet, YONESTablet, ChangJiaTablet, GUTablet, PointOfViewTablet,
         * OvermaxTablet, HCLTablet, DPSTablet, VistureTablet, CrestaTablet,
         * MediatekTablet, ConcordeTablet, GoCleverTablet, ModecomTablet, VoninoTablet,
         * ECSTablet, StorexTablet, VodafoneTablet, EssentielBTablet, RossMoorTablet,
         * iMobileTablet, TolinoTablet, AudioSonicTablet, AMPETablet, SkkTablet,
         * TecnoTablet, JXDTablet, iJoyTablet, FX2Tablet, XoroTablet, ViewsonicTablet,
         * VerizonTablet, OdysTablet, CaptivaTablet, IconbitTablet, TeclastTablet,
         * OndaTablet, JaytechTablet, BlaupunktTablet, DigmaTablet, EvolioTablet,
         * LavaTablet, AocTablet, MpmanTablet, CelkonTablet, WolderTablet, MediacomTablet,
         * MiTablet, NibiruTablet, NexoTablet, LeaderTablet, UbislateTablet,
         * PocketBookTablet, KocasoTablet, HisenseTablet, Hudl, TelstraTablet,
         * GenericTablet</tt><br>
         * <br>
         * If the device is not detected by the regular expressions from Mobile-Detect, a test is made against
         * the patterns of <a href="http://detectmobilebrowsers.com/">detectmobilebrowsers.com</a>. If this test
         * is positive, a value of <code>UnknownTablet</code> or <code>UnknownMobile</code> is returned.<br>
         * When used in browser, the decision whether phone or tablet is made based on <code>screen.width/height</code>.<br>
         * <br>
         * When used server-side (node.js), there is no way to tell the difference between <code>UnknownTablet</code>
         * and <code>UnknownMobile</code>, so you will get <code>null</code> here, while {@link MobileDetect#mobile}
         * will return <code>UnknownMobile</code>.<br>
         * Be aware that since v1.0.0 in this special case you will get <code>UnknownMobile</code> only for:
         * {@link MobileDetect#mobile}, not for {@link MobileDetect#phone} and {@link MobileDetect#tablet}.
         * In versions before v1.0.0 all 3 methods returned <code>UnknownMobile</code> which was tedious to use.
         * <br>
         * In most cases you will use the return value just as a boolean.
         *
         * @returns {String} the key of the tablet family or producer, e.g. "SamsungTablet"
         * @function MobileDetect#tablet
         */tablet:function tablet(){impl.prepareDetectionCache(this._cache,this.ua,this.maxPhoneWidth);return this._cache.tablet;},/**
         * Returns the (first) detected user-agent string or <tt>null</tt>.
         * <br>
         * The returned user-agent is one of following keys:<br>
         * <br><tt>Chrome, Dolfin, Opera, Skyfire, Edge, IE, Firefox, Bolt, TeaShark, Blazer,
         * Safari, WeChat, UCBrowser, baiduboxapp, baidubrowser, DiigoBrowser, Mercury,
         * ObigoBrowser, NetFront, GenericBrowser, PaleMoon</tt><br>
         * <br>
         * In most cases calling {@link MobileDetect#userAgent} will be sufficient. But there are rare
         * cases where a mobile device pretends to be more than one particular browser. You can get the
         * list of all matches with {@link MobileDetect#userAgents} or check for a particular value by
         * providing one of the defined keys as first argument to {@link MobileDetect#is}.
         *
         * @returns {String} the key for the detected user-agent or <tt>null</tt>
         * @function MobileDetect#userAgent
         */userAgent:function userAgent(){if(this._cache.userAgent===undefined){this._cache.userAgent=impl.findMatch(impl.mobileDetectRules.uas,this.ua);}return this._cache.userAgent;},/**
         * Returns all detected user-agent strings.
         * <br>
         * The array is empty or contains one or more of following keys:<br>
         * <br><tt>Chrome, Dolfin, Opera, Skyfire, Edge, IE, Firefox, Bolt, TeaShark, Blazer,
         * Safari, WeChat, UCBrowser, baiduboxapp, baidubrowser, DiigoBrowser, Mercury,
         * ObigoBrowser, NetFront, GenericBrowser, PaleMoon</tt><br>
         * <br>
         * In most cases calling {@link MobileDetect#userAgent} will be sufficient. But there are rare
         * cases where a mobile device pretends to be more than one particular browser. You can get the
         * list of all matches with {@link MobileDetect#userAgents} or check for a particular value by
         * providing one of the defined keys as first argument to {@link MobileDetect#is}.
         *
         * @returns {Array} the array of detected user-agent keys or <tt>[]</tt>
         * @function MobileDetect#userAgents
         */userAgents:function userAgents(){if(this._cache.userAgents===undefined){this._cache.userAgents=impl.findMatches(impl.mobileDetectRules.uas,this.ua);}return this._cache.userAgents;},/**
         * Returns the detected operating system string or <tt>null</tt>.
         * <br>
         * The operating system is one of following keys:<br>
         * <br><tt>AndroidOS, BlackBerryOS, PalmOS, SymbianOS, WindowsMobileOS, WindowsPhoneOS,
         * iOS, iPadOS, MeeGoOS, MaemoOS, JavaOS, webOS, badaOS, BREWOS</tt><br>
         *
         * @returns {String} the key for the detected operating system.
         * @function MobileDetect#os
         */os:function os(){if(this._cache.os===undefined){this._cache.os=impl.detectOS(this.ua);}return this._cache.os;},/**
         * Get the version (as Number) of the given property in the User-Agent.
         * <br>
         * Will return a float number. (eg. 2_0 will return 2.0, 4.3.1 will return 4.31)
         *
         * @param {String} key a key defining a thing which has a version.<br>
         *        You can use one of following keys:<br>
         * <br><tt>Mobile, Build, Version, VendorID, iPad, iPhone, iPod, Kindle, Chrome, Coast,
         * Dolfin, Firefox, Fennec, Edge, IE, NetFront, NokiaBrowser, Opera, Opera Mini,
         * Opera Mobi, UCBrowser, MQQBrowser, MicroMessenger, baiduboxapp, baidubrowser,
         * SamsungBrowser, Iron, Safari, Skyfire, Tizen, Webkit, PaleMoon, Gecko, Trident,
         * Presto, Goanna, iOS, Android, BlackBerry, BREW, Java, Windows Phone OS, Windows
         * Phone, Windows CE, Windows NT, Symbian, webOS</tt><br>
         *
         * @returns {Number} the version as float or <tt>NaN</tt> if User-Agent doesn't contain this version.
         *          Be careful when comparing this value with '==' operator!
         * @function MobileDetect#version
         */version:function version(key){return impl.getVersion(key,this.ua);},/**
         * Get the version (as String) of the given property in the User-Agent.
         * <br>
         *
         * @param {String} key a key defining a thing which has a version.<br>
         *        You can use one of following keys:<br>
         * <br><tt>Mobile, Build, Version, VendorID, iPad, iPhone, iPod, Kindle, Chrome, Coast,
         * Dolfin, Firefox, Fennec, Edge, IE, NetFront, NokiaBrowser, Opera, Opera Mini,
         * Opera Mobi, UCBrowser, MQQBrowser, MicroMessenger, baiduboxapp, baidubrowser,
         * SamsungBrowser, Iron, Safari, Skyfire, Tizen, Webkit, PaleMoon, Gecko, Trident,
         * Presto, Goanna, iOS, Android, BlackBerry, BREW, Java, Windows Phone OS, Windows
         * Phone, Windows CE, Windows NT, Symbian, webOS</tt><br>
         *
         * @returns {String} the "raw" version as String or <tt>null</tt> if User-Agent doesn't contain this version.
         *
         * @function MobileDetect#versionStr
         */versionStr:function versionStr(key){return impl.getVersionStr(key,this.ua);},/**
         * Global test key against userAgent, os, phone, tablet and some other properties of userAgent string.
         *
         * @param {String} key the key (case-insensitive) of a userAgent, an operating system, phone or
         *        tablet family.<br>
         *        For a complete list of possible values, see {@link MobileDetect#userAgent},
         *        {@link MobileDetect#os}, {@link MobileDetect#phone}, {@link MobileDetect#tablet}.<br>
         *        Additionally you have following keys:<br>
         * <br><tt>Bot, MobileBot, DesktopMode, TV, WebKit, Console, Watch</tt><br>
         *
         * @returns {boolean} <tt>true</tt> when the given key is one of the defined keys of userAgent, os, phone,
         *                    tablet or one of the listed additional keys, otherwise <tt>false</tt>
         * @function MobileDetect#is
         */is:function is(key){return containsIC(this.userAgents(),key)||equalIC(key,this.os())||equalIC(key,this.phone())||equalIC(key,this.tablet())||containsIC(impl.findMatches(impl.mobileDetectRules.utils,this.ua),key);},/**
         * Do a quick test against navigator::userAgent.
         *
         * @param {String|RegExp} pattern the pattern, either as String or RegExp
         *                        (a string will be converted to a case-insensitive RegExp).
         * @returns {boolean} <tt>true</tt> when the pattern matches, otherwise <tt>false</tt>
         * @function MobileDetect#match
         */match:function match(pattern){if(!(pattern instanceof RegExp)){pattern=new RegExp(pattern,'i');}return pattern.test(this.ua);},/**
         * Checks whether the mobile device can be considered as phone regarding <code>screen.width</code>.
         * <br>
         * Obviously this method makes sense in browser environments only (not for Node.js)!
         * @param {number} [maxPhoneWidth] the maximum logical pixels (aka. CSS-pixels) to be considered as phone.<br>
         *        The argument is optional and if not present or falsy, the value of the constructor is taken.
         * @returns {boolean|undefined} <code>undefined</code> if screen size wasn't detectable, else <code>true</code>
         *          when screen.width is less or equal to maxPhoneWidth, otherwise <code>false</code>.<br>
         *          Will always return <code>undefined</code> server-side.
         */isPhoneSized:function isPhoneSized(maxPhoneWidth){return MobileDetect.isPhoneSized(maxPhoneWidth||this.maxPhoneWidth);},/**
         * Returns the mobile grade ('A', 'B', 'C').
         *
         * @returns {String} one of the mobile grades ('A', 'B', 'C').
         * @function MobileDetect#mobileGrade
         */mobileGrade:function mobileGrade(){if(this._cache.grade===undefined){this._cache.grade=impl.mobileGrade(this);}return this._cache.grade;}};// environment-dependent
if(typeof window!=='undefined'&&window.screen){MobileDetect.isPhoneSized=function(maxPhoneWidth){return maxPhoneWidth<0?undefined:impl.getDeviceSmallerSide()<=maxPhoneWidth;};}else{MobileDetect.isPhoneSized=function(){};}// should not be replaced by a completely new object - just overwrite existing methods
MobileDetect._impl=impl;MobileDetect.version='1.4.4 2019-09-21';return MobileDetect;});// end of call of define()
})(function(undefined){if(typeof module!=='undefined'&&module.exports){return function(factory){module.exports=factory();};}else if(typeof define==='function'&&define.amd){return define;}else if(typeof window!=='undefined'){return function(factory){window.MobileDetect=factory();};}else{// please file a bug if you get this error!
throw new Error('unknown environment');}}());var certificationForm=$('.certification__form');certificationForm.submit(function(e){e.preventDefault();var personName=e.currentTarget.elements.name.value;var personSurname=e.currentTarget.elements.surname.value;var specialtiesArray=e.currentTarget.elements.formSpecialties;var specialtiesNameArray=[];specialtiesArray.forEach(function(element){if(element.checked){specialtiesNameArray.push($(element).siblings('span')[0].outerText);}});setSertigicate(personName,personSurname,specialtiesNameArray);});function setSertigicate(name,surname,specialties){if(localStorage.getItem('mrcoins')<600){alert('Недостаточно MRCoins. Пройдите 3 любые игры, чтобы получить сертификат');return;}var windowInnerWidth=window.innerWidth;if(windowInnerWidth<=1024){var _modal=$('#certificate__modal');var _modalContent=_modal.find('.overlay__content');var _sertificateName=_modal.find('.certificate__name');var _sertificateSurname=_modal.find('.certificate__surname');var _sertificateSpecialties=_modal.find('.certificate__specialties-list');_sertificateSpecialties.empty();_sertificateName[0].lastElementChild.textContent=name;_sertificateSurname[0].lastElementChild.textContent=surname;specialties.forEach(function(el){var li=document.createElement("li");li.textContent=el;_sertificateSpecialties.append(li);});_modal.css('display','flex');_modalContent.stop(true,false).animate({'top':'-2%'},400).animate({'top':'0'},100);_modal.stop(true,false).animate({'opacity':'1'},300);wasScroll--;return;}var sertificateName=$('.certificate__name');var sertificateSurname=$('.certificate__surname');var sertificateSpecialties=$('.certificate__specialties-list');sertificateSpecialties.empty();sertificateName[0].lastElementChild.textContent=name;sertificateSurname[0].lastElementChild.textContent=surname;specialties.forEach(function(el){var li=document.createElement("li");li.textContent=el;sertificateSpecialties.append(li);});}$('.overlay-certificate__btn').click(function(){var modal=$('#certificate__modal');var modalContent=modal.find('.overlay__content');modalContent.stop(true,false).animate({'top':'-2%'},200).animate({'top':'100%'},300);modal.stop(true,false).animate({'opacity':'0'},500);setTimeout(function(){modal.css('display','none');},500);wasScroll++;});var colors={green:['4CE636','13993C'],darkGreen:['298B41','225E41'],white:['D9E3F1','8FA0C5'],purple:['7941C3','4C2789'],orange:['F08A1E','BB5025'],darkBlue:['2A43D6','212C99'],blue:['4AFDDF','35B3C5'],pink:['EF63C0','B53DB6'],brown:['80592F','6C3724'],black:['262E31','121217'],red:['FA1819','A00937'],yellow:['EEEE53','B78427']};$('.character-color__btn').click(function(e){var newColors=colors[e.target.getAttribute('data-color')];$('body').css('--color-1',"#".concat(newColors[0]));$('body').css('--color-2',"#".concat(newColors[1]));});$(document).ready(function(){startEvsGame();});var evsColors={yellow:'#EEEE53',red:'#FA1819',green:'#298B41',blue:'#2A43D6'};var outputRect={yellow:[48,23],red:[48,123],green:[48,223],blue:[48,323]};var inputRect={yellow:[452,225],red:[452,25],green:[452,325],blue:[452,125]};var evsConnectionHistory=[];function startEvsGame(){var canvas=document.getElementById("evs__canvas");var context=canvas.getContext("2d");context.clearRect(0,0,canvas.width,canvas.height);drawOutput(context);var isAciveClearButton=true;$('.evs__btn-clear').click(function(){if(isAciveClearButton){context.clearRect(0,0,canvas.width,canvas.height);coordOutput=[];drawOutput(context);$('.evs__output-rect').removeClass('clicked');evsConnectionHistory=[];}});var coordOutput=[];var dataColorOutput='';var outputButton;$('.evs__output-rect').click(function(e){outputButton=e.target;if(outputButton.getAttribute('class').indexOf('clicked')<0){dataColorOutput=outputButton.getAttribute("data-color");coordOutput=outputRect[dataColorOutput];evsConnectionHistory.push(dataColorOutput);}else{coordOutput=[];}});$('.evs__input-rect').click(function(e){var data=e.target.getAttribute("data-color");var coord=inputRect[data];if(coordOutput.length>0){outputButton.classList.add('clicked');evsConnectionHistory.push(data);drawLines(context,coordOutput[0],coordOutput[1],coord[0],coord[1],evsColors[dataColorOutput]);drawOutput(context);coordOutput=[];coord="";setTimeout(function(){if(checkCorrectConnection()){var mrcoins=+localStorage.getItem('mrcoins');mrcoins+=200;localStorage.setItem('mrcoins',mrcoins);var mrcoinsView=$('.personal-balance__number');mrcoinsView.text(localStorage.getItem('mrcoins'));var gamesComplited=localStorage.getItem('gamesComplited');var gamesComplitedNew=gamesComplited.split(',');gamesComplitedNew.push('evs');localStorage.setItem('gamesComplited',gamesComplitedNew);alert('+200 MRCoins');isAciveClearButton=false;$('.evs__btn-clear').css('background-color','#757575');}},100);}});}function drawOutput(ctx){// желтый провод
ctx.beginPath();ctx.lineWidth="3";ctx.fillStyle="#EEEE53";ctx.rect(5,5,50,40);ctx.fill();// желтый провод 2
ctx.beginPath();ctx.lineWidth="3";ctx.fillStyle="#EEEE53";ctx.rect(448,205,50,40);ctx.fill();// красный провод
ctx.beginPath();ctx.lineWidth="3";ctx.fillStyle="#FA1819";ctx.rect(5,105,50,40);ctx.fill();// красный провод 2
ctx.beginPath();ctx.lineWidth="3";ctx.fillStyle="#FA1819";ctx.rect(448,5,50,40);ctx.fill();// зеленый провод
ctx.beginPath();ctx.lineWidth="3";ctx.fillStyle="#298B41";ctx.rect(5,205,50,40);ctx.fill();// зеленый провод 2
ctx.beginPath();ctx.lineWidth="3";ctx.fillStyle="#298B41";ctx.rect(448,305,50,40);ctx.fill();// голубой провод
ctx.beginPath();ctx.lineWidth="3";ctx.fillStyle="#2A43D6";ctx.rect(5,305,50,40);ctx.fill();// голубой провод 2
ctx.beginPath();ctx.lineWidth="3";ctx.fillStyle="#2A43D6";ctx.rect(448,105,50,40);ctx.fill();}function drawLines(ctx,outputX,outputY,inputX,inputY,color){ctx.beginPath();ctx.lineWidth="15";ctx.strokeStyle=color;ctx.moveTo(outputX,outputY);ctx.lineTo(inputX,inputY);ctx.stroke();}function checkCorrectConnection(){var isCorrectConnection=false;if(evsConnectionHistory.length==8){for(var i=0;i<evsConnectionHistory.length;i+=2){if(evsConnectionHistory[i]===evsConnectionHistory[i+1]){isCorrectConnection=true;}else{isCorrectConnection=false;}}}return isCorrectConnection;}var isCompliteProc=false;var isCompliteChip=false;$('.micro__processor').draggable({containment:'.specialties__games',cursor:'move',snap:'.micro__processor-snap',snapMode:'inner',snapTolerance:1});$(".micro__processor-snap").droppable({drop:function drop(event,ui){$('.micro__processor').draggable('disable');isCompliteProc=true;checkMicroComplite();},tolerance:"fit",activate:function activate(){$('.micro__processor-snap').css({border:"2px solid #FF5252",backgroundColor:"rgba(178, 235, 242, .5);"});},deactivate:function deactivate(){$('.micro__processor-snap').css("border","").css("background-color","");}});$('.micro__chip').draggable({containment:'.specialties__games',cursor:'move',snap:'.micro__chip-snap',snapMode:'inner',snapTolerance:1});$(".micro__chip-snap").droppable({drop:function drop(event,ui){$('.micro__chip').draggable('disable');isCompliteChip=true;checkMicroComplite();},tolerance:"fit",activate:function activate(){$('.micro__chip-snap').css({border:"2px solid #FF5252",backgroundColor:"rgba(178, 235, 242, .5);"});},deactivate:function deactivate(){$('.micro__chip-snap').css("border","").css("background-color","");}});function checkMicroComplite(){if(isCompliteProc&&isCompliteChip){var mrcoins=+localStorage.getItem('mrcoins');mrcoins+=200;localStorage.setItem('mrcoins',mrcoins);var mrcoinsView=$('.personal-balance__number');mrcoinsView.text(localStorage.getItem('mrcoins'));var gamesComplited=localStorage.getItem('gamesComplited');var gamesComplitedNew=gamesComplited.split(',');gamesComplitedNew.push('micro');localStorage.setItem('gamesComplited',gamesComplitedNew);alert('+200 MRCoins');}}$(document).ready(function(){startPipresGame();});var amplitude=getRandomInt(-225,225);var changesAmplitude=getRandomInt(-225,225);var controller=$('.pipres__controller-input');function startPipresGame(){var canvas=document.getElementById("pipres__canvas");var context=canvas.getContext("2d");context.clearRect(0,0,canvas.width,canvas.height);drawStaticCurves(context,step);drawCurves(context,step);step+=5;window.requestAnimationFrame(startPipresGame);}controller.change(function(){changesAmplitude=this.value;if(amplitude-10<=changesAmplitude&&changesAmplitude<=amplitude+10){changesAmplitude=amplitude;controller.prop('disabled',true);setTimeout(function(){var mrcoins=+localStorage.getItem('mrcoins');mrcoins+=200;localStorage.setItem('mrcoins',mrcoins);var mrcoinsView=$('.personal-balance__number');mrcoinsView.text(localStorage.getItem('mrcoins'));var gamesComplited=localStorage.getItem('gamesComplited');var gamesComplitedNew=gamesComplited.split(',');gamesComplitedNew.push('pipres');localStorage.setItem('gamesComplited',gamesComplitedNew);alert('+200 MRCoins');},100);}});var step=-4;function drawCurves(ctx,step){var width=ctx.canvas.width;var height=ctx.canvas.height;ctx.beginPath();ctx.lineWidth=6;ctx.strokeStyle="rgb(0, 188, 212)";var x=0;var y=0;var frequency=90;while(y<height){x=width/2+changesAmplitude*Math.sin((y+step)/frequency);ctx.lineTo(x,y);y++;}ctx.stroke();}function drawStaticCurves(ctx,step){var width=ctx.canvas.width;var height=ctx.canvas.height;ctx.beginPath();ctx.lineWidth=4;ctx.strokeStyle="rgba(186, 186, 186, .4)";var x=0;var y=0;var frequency=90;while(y<height){x=width/2+amplitude*Math.sin((y+step)/frequency);ctx.lineTo(x,y);y++;}ctx.stroke();}function getRandomInt(min,max){return Math.floor(Math.random()*(max-min))+min;}var pmsButton=$('.pms__game-btn');var pmsStartGameButton=$('.pms__game-start-btn');var pmsCombinationArray=shuffle([3,7,2,1,4,6,8,5]);var pmsClicksArray=[];var pmsNumberOfImpressions=1;var pmsEditMode=false;var pmsWasComplited=false;pmsStartGameButton.click(function(e){if(!pmsWasComplited){setTimeout(function(){pmsStartGame();},500);}});pmsButton.click(function(e){if(pmsEditMode){e.target.classList.toggle('pms__game-btn_active');pmsClicksArray.push(pmsButton.index(e.target)+1);if(pmsClicksArray.length===pmsNumberOfImpressions){pmsCheckComplite();}}});function shuffle(array){var currentIndex=array.length,temporaryValue,randomIndex;// While there remain elements to shuffle...
while(0!==currentIndex){// Pick a remaining element...
randomIndex=Math.floor(Math.random()*currentIndex);currentIndex-=1;// And swap it with the current element.
temporaryValue=array[currentIndex];array[currentIndex]=array[randomIndex];array[randomIndex]=temporaryValue;}return array;}function pmsCheckComplite(){pmsEditMode=false;for(var i=0;i<pmsClicksArray.length;i++){if(pmsClicksArray[i]!==pmsCombinationArray[i]){pmsButton.addClass('pms__game-btn_active');setTimeout(function(){pmsReset();},500);pmsNumberOfImpressions=1;return;}}if(pmsClicksArray.length===8){var mrcoins=+localStorage.getItem('mrcoins');mrcoins+=200;localStorage.setItem('mrcoins',mrcoins);var mrcoinsView=$('.personal-balance__number');mrcoinsView.text(localStorage.getItem('mrcoins'));var gamesComplited=localStorage.getItem('gamesComplited');var gamesComplitedNew=gamesComplited.split(',');gamesComplitedNew.push('pms');localStorage.setItem('gamesComplited',gamesComplitedNew);alert('+200 MRCoins');pmsWasComplited=true;return;}setTimeout(function(){pmsReset();},500);setTimeout(function(){pmsStartGame();},1000);pmsNumberOfImpressions++;return;}function pmsStartGame(){var time=0;var _loop=function _loop(i){setTimeout(function(){pmsButton[pmsCombinationArray[i]-1].classList.add('pms__game-btn_active');},500*time++);};for(var i=0;i<pmsNumberOfImpressions;i++){_loop(i);}setTimeout(function(){pmsReset();pmsEditMode=true;},500*pmsNumberOfImpressions);}function pmsReset(){pmsClicksArray=[];pmsButton.removeClass('pms__game-btn_active');}var puzzle=$('.poit__puzzle');var puzzleBlocks=$('.poit__puzzle-block');var puzzleBlockEmpty=$('.poit__puzzle-block_empty');var puzzleStartButton=$('.poit__puzzle-btn');var puzzleIsAnimate=false;var puzzleIsStart=false;var puzzleIsComplited=false;var puzzleDataPositionArray=[];var mixedPuzzleDataPositionArray=[];// перемещка массива из data
function shuffleArray(array){var sortedArray=array.slice();var _loop2=function _loop2(i){var dataPosition=[];dataPosition.push(sortedArray[15][0]);dataPosition.push(sortedArray[15][1]);var colOrRow=Math.floor(Math.random()*2);// только если элемент соседний с пустым блоком
var similarColsOrRowsArray=sortedArray.filter(function(item){return item[colOrRow]===dataPosition[colOrRow]&&(+item[item.length-1-colOrRow]+1===+dataPosition[dataPosition.length-1-colOrRow]||+item[item.length-1-colOrRow]-1===+dataPosition[dataPosition.length-1-colOrRow]);});dataPosition=[];var direction=Math.floor(Math.random()*similarColsOrRowsArray.length);var whereWeGoIndex=sortedArray.indexOf(similarColsOrRowsArray[direction]);sortedArray[whereWeGoIndex]=sortedArray[15];sortedArray[15]=similarColsOrRowsArray[direction];};for(var i=0;i<100;i++){_loop2(i);}return sortedArray;}// создание массива из data
function getPoitDataPosition(){for(var i=0;i<puzzleBlocks.length;i++){var rowStart=puzzleBlocks[i].getAttribute('data-row');var colStart=puzzleBlocks[i].getAttribute('data-col');puzzleDataPositionArray.push([rowStart,colStart]);}}// установка каждому блоку его позиции после перемешки. Смена data у блока
function settingBlocksPositionsInThePoitGame(){for(var i=0;i<puzzleBlocks.length;i++){$(puzzleBlocks[i]).css('grid-row-start',"".concat(mixedPuzzleDataPositionArray[i][0]));$(puzzleBlocks[i]).css('grid-column-start',"".concat(mixedPuzzleDataPositionArray[i][1]));$(puzzleBlocks[i]).attr('data-row',"".concat(mixedPuzzleDataPositionArray[i][0]));$(puzzleBlocks[i]).attr('data-col',"".concat(mixedPuzzleDataPositionArray[i][1]));}}// кнопка "Начать"
puzzleStartButton.click(function(){if(!puzzleIsStart&&!puzzleIsComplited){puzzleIsStart=true;getPoitDataPosition();mixedPuzzleDataPositionArray=shuffleArray(puzzleDataPositionArray);settingBlocksPositionsInThePoitGame();}});// Нажатие на блок
puzzleBlocks.click(function(e){if(!puzzleIsAnimate&&puzzleIsStart){puzzleIsAnimate=true;var m=e.currentTarget.getAttribute('data-row')-1;var n=e.currentTarget.getAttribute('data-col')-1;movePazzleElement(e.currentTarget,m,n);}});// Перемещение блока после нажатия
function movePazzleElement(block,m,n){var emptyM=puzzleBlockEmpty.attr('data-row');var emptyN=puzzleBlockEmpty.attr('data-col');if(m+1==emptyM-1&&n+1==emptyN){var blockHeight=$(block).height()+2;$(block).stop(true,false).animate({'top':blockHeight},500);setTimeout(function(){$(block).css('top','0');$(block).css('left','0');changeGridParameters(block,m,n,emptyM,emptyN);},530);}else if(m==emptyM&&n+1==emptyN){var _blockHeight=$(block).height()+2;$(block).stop(true,false).animate({'top':-_blockHeight},500);setTimeout(function(){$(block).css('top','0');$(block).css('left','0');changeGridParameters(block,m,n,emptyM,emptyN);},530);}else if(m+1==emptyM&&n+1==emptyN-1){var _blockHeight2=$(block).width()+2;$(block).stop(true,false).animate({'left':_blockHeight2},500);setTimeout(function(){$(block).css('top','0');$(block).css('left','0');changeGridParameters(block,m,n,emptyM,emptyN);},530);}else if(m+1==emptyM&&n==emptyN){var _blockHeight3=$(block).width()+2;$(block).stop(true,false).animate({'left':-_blockHeight3},500);setTimeout(function(){$(block).css('top','0');$(block).css('left','0');changeGridParameters(block,m,n,emptyM,emptyN);},530);}else{setTimeout(function(){puzzleIsAnimate=false;},530);}}// Изменение позиции и data блока после перемещения
function changeGridParameters(block,m,n,emptyM,emptyN){$(block).css('grid-row-start',"".concat(emptyM));$(block).css('grid-column-start',"".concat(emptyN));$(puzzleBlockEmpty).css('grid-row-start',"".concat(m+1));$(puzzleBlockEmpty).css('grid-column-start',"".concat(n+1));$(block).attr('data-row',"".concat(emptyM));$(block).attr('data-col',"".concat(emptyN));puzzleBlockEmpty.attr('data-row',"".concat(m+1));puzzleBlockEmpty.attr('data-col',"".concat(n+1));puzzleIsAnimate=false;puzzleIsCorrectlyAssembled();}// Проверка правильности сборки пятнашек
function puzzleIsCorrectlyAssembled(){mixedPuzzleDataPositionArray=[];for(var i=0;i<puzzleBlocks.length;i++){var rowStart=puzzleBlocks[i].getAttribute('data-row');var colStart=puzzleBlocks[i].getAttribute('data-col');mixedPuzzleDataPositionArray.push([rowStart,colStart]);}if(isArraysTheSame()){var mrcoins=+localStorage.getItem('mrcoins');mrcoins+=200;localStorage.setItem('mrcoins',mrcoins);var mrcoinsView=$('.personal-balance__number');mrcoinsView.text(localStorage.getItem('mrcoins'));var gamesComplited=localStorage.getItem('gamesComplited');var gamesComplitedNew=gamesComplited.split(',');gamesComplitedNew.push('poit');localStorage.setItem('gamesComplited',gamesComplitedNew);alert('+200 MRCoins');puzzleIsStart=false;puzzleIsComplited=true;puzzleStartButton.addClass('poit__puzzle-btn_disabled');}}function isArraysTheSame(){for(var i=0;i<puzzleDataPositionArray.length;i++){if(puzzleDataPositionArray[i][0]!==mixedPuzzleDataPositionArray[i][0]||puzzleDataPositionArray[i][1]!==mixedPuzzleDataPositionArray[i][1]){return false;}}return true;}var teresHandle=$('.teres__handle');var teresHandleImg=teresHandle.find('.teres__handle-img');var teresScreenImg=$('.teres__img');var teresContentImg=$('.teres__img-content');var teresAntennas=$('.teres__antennas');var teresAntennasImg=teresAntennas.find('.teres__antennas-img');var teresIsOn=false;var teresAntennasIsUp=false;var teresIsComplited=false;teresHandle.click(function(e){if(!teresIsComplited){teresHandleImg.toggleClass('teres__handle-img_clicked');setTimeout(function(){teresScreenImg.toggleClass('teres__handle-img_active');},300);if(teresAntennasIsUp){teresChangeComplitedStatus();}teresIsOn=!teresIsOn;}});teresAntennasImg.click(function(e){if(!teresIsComplited){teresAntennasImg.toggleClass('teres__antennas-img_clicked');if(teresIsOn){teresChangeComplitedStatus();}teresAntennasIsUp=!teresAntennasIsUp;}});function teresChangeComplitedStatus(){teresContentImg.addClass('teres__img-content_active');teresIsComplited=true;setTimeout(function(){var mrcoins=+localStorage.getItem('mrcoins');mrcoins+=200;localStorage.setItem('mrcoins',mrcoins);var mrcoinsView=$('.personal-balance__number');mrcoinsView.text(localStorage.getItem('mrcoins'));var gamesComplited=localStorage.getItem('gamesComplited');var gamesComplitedNew=gamesComplited.split(',');gamesComplitedNew.push('teres');localStorage.setItem('gamesComplited',gamesComplitedNew);alert('+200 MRCoins');},500);}var modal=$('#modal');var modalContent=modal.find('.overlay__content');$('.overlay__btn').click(function(){modalContent.stop(true,false).animate({'top':'-2%'},200).animate({'top':'100%'},300);modal.stop(true,false).animate({'opacity':'0'},500);setTimeout(function(){modal.css('display','none');},500);wasScroll++;});$('.hero__open-overlay').click(function(){modal.css('display','flex');modalContent.stop(true,false).animate({'top':'-2%'},400).animate({'top':'0'},100);modal.stop(true,false).animate({'opacity':'1'},300);wasScroll--;});$(document).ready(function(){var localStorageDate=localStorage.getItem('date');var date=new Date();if(date-localStorageDate>3600000){var _gamesComplited=[];localStorage.setItem('gamesComplited',_gamesComplited);localStorage.setItem('mrcoins',0);localStorage.setItem('date',date.getTime());}else if(date-localStorageDate===NaN){localStorage.setItem('date',date.getTime());}var gamesComplited=localStorage.getItem('gamesComplited');var gamesComplitedNew=gamesComplited.split(',');if(gamesComplitedNew.indexOf('micro')!==-1){var game=$('.game__micro');game.addClass('game_complited');}if(gamesComplitedNew.indexOf('pipres')!==-1){var _game=$('.game__pipres');_game.addClass('game_complited');}if(gamesComplitedNew.indexOf('teres')!==-1){var _game2=$('.game__teres');_game2.addClass('game_complited');}if(gamesComplitedNew.indexOf('evs')!==-1){var _game3=$('.game__evs');_game3.addClass('game_complited');}if(gamesComplitedNew.indexOf('pms')!==-1){var _game4=$('.game__pms');_game4.addClass('game_complited');}if(gamesComplitedNew.indexOf('poit')!==-1){var _game5=$('.game__poit');_game5.addClass('game_complited');}var mrcoinsView=$('.personal-balance__number');mrcoinsView.text(localStorage.getItem('mrcoins'));});var sections=$('section');var display=$('.maincontent');var sectionSpecialties=$('.section__specialties');var wasScroll=0;var mobileDetect=new MobileDetect(window.navigator.userAgent);var isMobile=mobileDetect.mobile();sections.first().addClass('active');var inScroll=false;var countSectionPosition=function countSectionPosition(sectionEq){var position=sectionEq*-100;if(isNaN(position)){console.error('Передано не верное значение в countSectionPosition');return 0;}return position;};var resetActiveClassForItem=function resetActiveClassForItem(items,itemEq,activeClass){items.eq(itemEq).addClass(activeClass).siblings().removeClass(activeClass);};function scrollDisplayNone(scroll){setTimeout(function(){scroll.css('display','none');},500);}var perfomTransition=function perfomTransition(sectionEq,direction){if(inScroll)return;var scrollButtons=$('.scroll__buttons');if(sectionEq-1===0&&direction==='next'){scrollButtons.css('display','flex').stop(true,true).animate({'opacity':'1'},300);}else if(sectionEq+1===sections.length&&direction==='next'){scrollButtons.stop(true,true).animate({'opacity':'0'},300,scrollDisplayNone(scrollButtons));}if(sectionEq+2===sections.length&&direction==='prev'){scrollButtons.css('display','flex').stop(true,true).animate({'opacity':'1'},300);}else if(sectionEq===0&&direction==='prev'){scrollButtons.stop(true,true).animate({'opacity':'0'},300,scrollDisplayNone(scrollButtons));}var transitionOver=1000;var mouseInertionOver=300;inScroll=true;var position=countSectionPosition(sectionEq);display.css({transform:"translateY(".concat(position,"%)")});resetActiveClassForItem(sections,sectionEq,'active');setTimeout(function(){inScroll=false;},transitionOver+mouseInertionOver);};var viewportScroller=function viewportScroller(){var activeSection=sections.filter('.active');var nextSection=activeSection.next('section');var prevSection=activeSection.prev('section');return{next:function next(){if(nextSection.length){perfomTransition(nextSection.index(),'next');}},prev:function prev(){if(prevSection.length){perfomTransition(prevSection.index(),'prev');}}};};$(window).on('wheel',function(e){var deltaY=e.originalEvent.deltaY;var scroller=viewportScroller();if(sectionSpecialties.hasClass('active')){if(checkPoint>=0&&checkPoint<33&&deltaY>0||checkPoint<=33&&checkPoint>0&&deltaY<0){sectionSpecialties.addClass('specialites_active');}else if(checkPoint===0&&deltaY<0||checkPoint===33&&deltaY>0){sectionSpecialties.removeClass('specialites_active');}}if(!sectionSpecialties.hasClass('specialites_active')&&wasScroll!==0){if(deltaY>0){scroller.next();}if(deltaY<0){scroller.prev();}}});$('.scroll__btn').click(function(e){var scroller=viewportScroller();sectionSpecialties.removeClass('specialites_active');if(e.currentTarget.getAttribute('data-way')==='next'){scroller.next();}else{scroller.prev();}});$('.wrapper').on('touchmove',function(e){return e.preventDefault();});if(isMobile){// https://github.com/mattbryson/TouchSwipe-Jquery-Plugin
$("body").swipe({swipe:function swipe(event,direction){var scroller=viewportScroller();var scrollDirection;if(sectionSpecialties.hasClass('active')){if(checkPoint>=0&&checkPoint<33&&direction==="up"||checkPoint<=33&&checkPoint>0&&direction==="down"){sectionSpecialties.addClass('specialites_active');}else if(checkPoint===0&&direction==="down"||checkPoint===33&&direction==="up"){sectionSpecialties.removeClass('specialites_active');}}if(!sectionSpecialties.hasClass('specialites_active')&&wasScroll!==0){if(direction==="up")scrollDirection='next';if(direction==="down")scrollDirection='prev';scroller[scrollDirection]();}if(sectionSpecialties.hasClass('specialites_active')){var action=puskAnimation();if(direction==="up"&&checkAnimExist===0)action.next();if(direction==="down"&&checkAnimExist===0)action.prev();}}});}var character=$('.specialties__way-character');var title=$('.specialties__title');var subtitle=$('.specialties__subtitle');var games=$('.game');var points=[[-9,13],[-8.5,27],[-7.5,41],[-6.5,55],[-4,69.5],[-1,82.5],[9,88],[13,74.5],[14,60.5],[15,47],[15.5,32.5],[16.5,18.5],[19,4.5],[28,-5],[35.5,6],[37.5,20],[38.5,34],[39,48.5],[40,62.5],[43,76.5],[46,90],[57,90.5],[62,77.5],[64,63.5],[65,49.5],[66,35.5],[66,21],[69,7],[79,2],[85,15],[87,29],[87,43],[87,57],[87,72]];var specialties=["Микро- и наноэлектронные технологии и системы","Проектирование и производство радиоэлектронных средств","Техническая эксплуатация радиоэлектронных средств","Электронные вычислительные средства","Программируемые мобильные системы","Программное обеспечение информационных технологий"];var instructions=["Перетащите элементы на свое место","Настройте амплитуду синей волны по шаблону серой волны","Включите телевизор и настройте сигнал","Соедините провода одинакого цвета (Сначала клик по левому проводу, потом по правому)","Запустите игру нажав на красную кнопку. Запоминайте порядок включения и повторяйте его","Запустите игру и соберите исходную картинку"];var checkPoint=0;var checkText=0;var checkGame=0;var checkAnimExist=0;function resetCheckAnimExist(){checkAnimExist=0;}function changeGame(type){if(checkGame===6&&type==="next"){games.eq(checkGame-1).css('opacity','0');setTimeout(function(){games.eq(checkGame-1).css('display','none');checkGame++;},300);}else if(type==="next"){games.eq(checkGame-1).css('opacity','0');setTimeout(function(){games.eq(checkGame-1).css('display','none');games.eq(checkGame).css('display','flex');games.eq(checkGame).css('opacity','1');checkGame++;},300);}if(checkGame===1&&type==="prev"){games.eq(checkGame-1).css('opacity','0');setTimeout(function(){games.eq(checkGame-1).css('display','none');checkGame--;},300);}else if(type==="prev"){games.eq(checkGame-1).css('opacity','0');setTimeout(function(){games.eq(checkGame-1).css('display','none');games.eq(checkGame-2).css('display','flex');games.eq(checkGame-2).css('opacity','1');checkGame--;},300);}}function changeText(type){if(checkText>5&&type==="next"){title.css('opacity','0');subtitle.css('opacity','0');setTimeout(function(){title.text("А всее, специальности закончились");title.css('opacity','1');subtitle.text("");subtitle.css('opacity','0');checkText++;},300);}else if(type==="next"){title.css('opacity','0');subtitle.css('opacity','0');setTimeout(function(){title.text(specialties[checkText++]);title.css('opacity','1');subtitle.text(instructions[checkText-1]);subtitle.css('opacity','1');},300);}if(checkText<=1&&type==="prev"){title.css('opacity','0');subtitle.css('opacity','0');setTimeout(function(){title.text("Хотешь еще раз посмотреть? Крути!");title.css('opacity','1');subtitle.text("");subtitle.css('opacity','0');checkText--;},300);}else if(type==="prev"){title.css('opacity','0');subtitle.css('opacity','0');setTimeout(function(){title.text(specialties[--checkText-1]);title.css('opacity','1');subtitle.text(instructions[checkText-1]);subtitle.css('opacity','1');},300);}}var puskAnimation=function puskAnimation(){var windowInnerWidth=window.innerWidth;return{next:function next(){if(checkPoint<33){checkAnimExist=1;if(checkPoint===0){character.stop(true,false).animate({'left':"".concat(points[++checkPoint][1],"%"),'top':"".concat(points[checkPoint][0],"%")},500).animate({'left':"".concat(points[++checkPoint][1],"%"),'top':"".concat(points[checkPoint][0],"%")},500).animate({'left':"".concat(points[++checkPoint][1],"%"),'top':"".concat(points[checkPoint][0],"%")},500).animate({'left':"".concat(points[++checkPoint][1],"%"),'top':"".concat(points[checkPoint][0],"%")},500);if(windowInnerWidth>1024){setTimeout(function(){resetCheckAnimExist();changeText('next');changeGame('next');},2300);}else{setTimeout(function(){resetCheckAnimExist();changeText('next');changeGame('next');},200);}}else if(checkPoint===24){character.stop(true,false).animate({'left':"".concat(points[++checkPoint][1],"%"),'top':"".concat(points[checkPoint][0],"%")},500).animate({'left':"".concat(points[++checkPoint][1],"%"),'top':"".concat(points[checkPoint][0],"%")},500).animate({'left':"".concat(points[++checkPoint][1],"%"),'top':"".concat(points[checkPoint][0],"%")},500).animate({'left':"".concat(points[++checkPoint][1],"%"),'top':"".concat(points[checkPoint][0],"%")},500).animate({'left':"".concat(points[++checkPoint][1],"%"),'top':"".concat(points[checkPoint][0],"%")},500).animate({'left':"".concat(points[++checkPoint][1],"%"),'top':"".concat(points[checkPoint][0],"%")},500);if(windowInnerWidth>1024){setTimeout(function(){resetCheckAnimExist();changeText('next');changeGame('next');},3300);}else{setTimeout(function(){resetCheckAnimExist();changeText('next');changeGame('next');},200);}}else if(checkPoint===30){character.stop(true,false).animate({'left':"".concat(points[++checkPoint][1],"%"),'top':"".concat(points[checkPoint][0],"%")},500).animate({'left':"".concat(points[++checkPoint][1],"%"),'top':"".concat(points[checkPoint][0],"%")},500).animate({'left':"".concat(points[++checkPoint][1],"%"),'top':"".concat(points[checkPoint][0],"%")},500);if(windowInnerWidth>1024){setTimeout(function(){resetCheckAnimExist();changeText('next');changeGame('next');wasScroll++;},1800);}else{setTimeout(function(){resetCheckAnimExist();changeText('next');changeGame('next');},200);}}else{character.stop(true,false).animate({'left':"".concat(points[++checkPoint][1],"%"),'top':"".concat(points[checkPoint][0],"%")},500).animate({'left':"".concat(points[++checkPoint][1],"%"),'top':"".concat(points[checkPoint][0],"%")},500).animate({'left':"".concat(points[++checkPoint][1],"%"),'top':"".concat(points[checkPoint][0],"%")},500).animate({'left':"".concat(points[++checkPoint][1],"%"),'top':"".concat(points[checkPoint][0],"%")},500).animate({'left':"".concat(points[++checkPoint][1],"%"),'top':"".concat(points[checkPoint][0],"%")},500);if(windowInnerWidth>1024){setTimeout(function(){resetCheckAnimExist();changeText('next');changeGame('next');},2800);}else{setTimeout(function(){resetCheckAnimExist();changeText('next');changeGame('next');},200);}}}},prev:function prev(){if(checkPoint>0){checkAnimExist=1;if(checkPoint===4){character.stop(true,false).animate({'left':"".concat(points[--checkPoint][1],"%"),'top':"".concat(points[checkPoint][0],"%")},500).animate({'left':"".concat(points[--checkPoint][1],"%"),'top':"".concat(points[checkPoint][0],"%")},500).animate({'left':"".concat(points[--checkPoint][1],"%"),'top':"".concat(points[checkPoint][0],"%")},500).animate({'left':"".concat(points[--checkPoint][1],"%"),'top':"".concat(points[checkPoint][0],"%")},500);if(windowInnerWidth>1024){setTimeout(function(){resetCheckAnimExist();changeText('prev');changeGame('prev');},2300);}else{setTimeout(function(){resetCheckAnimExist();changeText('prev');changeGame('prev');},200);}}else if(checkPoint===30){character.stop(true,false).animate({'left':"".concat(points[--checkPoint][1],"%"),'top':"".concat(points[checkPoint][0],"%")},500).animate({'left':"".concat(points[--checkPoint][1],"%"),'top':"".concat(points[checkPoint][0],"%")},500).animate({'left':"".concat(points[--checkPoint][1],"%"),'top':"".concat(points[checkPoint][0],"%")},500).animate({'left':"".concat(points[--checkPoint][1],"%"),'top':"".concat(points[checkPoint][0],"%")},500).animate({'left':"".concat(points[--checkPoint][1],"%"),'top':"".concat(points[checkPoint][0],"%")},500).animate({'left':"".concat(points[--checkPoint][1],"%"),'top':"".concat(points[checkPoint][0],"%")},500);if(windowInnerWidth>1024){setTimeout(function(){resetCheckAnimExist();changeText('prev');changeGame('prev');},3300);}else{setTimeout(function(){resetCheckAnimExist();changeText('prev');changeGame('prev');},200);}}else if(checkPoint===33){character.stop(true,false).animate({'left':"".concat(points[--checkPoint][1],"%"),'top':"".concat(points[checkPoint][0],"%")},500).animate({'left':"".concat(points[--checkPoint][1],"%"),'top':"".concat(points[checkPoint][0],"%")},500).animate({'left':"".concat(points[--checkPoint][1],"%"),'top':"".concat(points[checkPoint][0],"%")},500);if(windowInnerWidth>1024){setTimeout(function(){resetCheckAnimExist();changeText('prev');changeGame('prev');},1800);}else{setTimeout(function(){resetCheckAnimExist();changeText('prev');changeGame('prev');},200);}}else{character.stop(true,false).animate({'left':"".concat(points[--checkPoint][1],"%"),'top':"".concat(points[checkPoint][0],"%")},500).animate({'left':"".concat(points[--checkPoint][1],"%"),'top':"".concat(points[checkPoint][0],"%")},500).animate({'left':"".concat(points[--checkPoint][1],"%"),'top':"".concat(points[checkPoint][0],"%")},500).animate({'left':"".concat(points[--checkPoint][1],"%"),'top':"".concat(points[checkPoint][0],"%")},500).animate({'left':"".concat(points[--checkPoint][1],"%"),'top':"".concat(points[checkPoint][0],"%")},500);if(windowInnerWidth>1024){setTimeout(function(){resetCheckAnimExist();changeText('prev');changeGame('prev');},2800);}else{setTimeout(function(){resetCheckAnimExist();changeText('prev');changeGame('prev');},200);}}}}};};$('.wrapper').on('touchmove',function(e){return e.preventDefault();});$(window).on('wheel',function(e){var deltaY=e.originalEvent.deltaY;if(sectionSpecialties.hasClass('specialites_active')){var action=puskAnimation();if(deltaY>0&&checkAnimExist===0){action.next();}if(deltaY<0&&checkAnimExist===0){action.prev();}}});
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImpxdWVyeS5qcyIsImpxdWVyeS11aS5taW4uanMiLCJqcXVlcnkudG91Y2hTd2lwZS5qcyIsIm1vYmlsZS1kZXRlY3QuanMiLCJjZXJ0aWZpY2F0ZS5qcyIsImNoYW5nZUNoYXJhY3Rlci5qcyIsImdhbWVFdnMuanMiLCJnYW1lTWljcm8uanMiLCJnYW1lUGlwcmVzLmpzIiwiZ2FtZVBtcy5qcyIsImdhbWVQb2l0LmpzIiwiZ2FtZVRlcmVzLmpzIiwibW9kYWwuanMiLCJtcmNvaW5zLmpzIiwib25lUGFnZVNjcm9sbC5qcyIsInNwZWNpYWx0aWVzV2F5LmpzIl0sIm5hbWVzIjpbImdsb2JhbCIsImZhY3RvcnkiLCJtb2R1bGUiLCJleHBvcnRzIiwiZG9jdW1lbnQiLCJ3IiwiRXJyb3IiLCJ3aW5kb3ciLCJub0dsb2JhbCIsImFyciIsImdldFByb3RvIiwiT2JqZWN0IiwiZ2V0UHJvdG90eXBlT2YiLCJzbGljZSIsImZsYXQiLCJhcnJheSIsImNhbGwiLCJjb25jYXQiLCJhcHBseSIsInB1c2giLCJpbmRleE9mIiwiY2xhc3MydHlwZSIsInRvU3RyaW5nIiwiaGFzT3duIiwiaGFzT3duUHJvcGVydHkiLCJmblRvU3RyaW5nIiwiT2JqZWN0RnVuY3Rpb25TdHJpbmciLCJzdXBwb3J0IiwiaXNGdW5jdGlvbiIsIm9iaiIsIm5vZGVUeXBlIiwiaXNXaW5kb3ciLCJwcmVzZXJ2ZWRTY3JpcHRBdHRyaWJ1dGVzIiwidHlwZSIsInNyYyIsIm5vbmNlIiwibm9Nb2R1bGUiLCJET01FdmFsIiwiY29kZSIsIm5vZGUiLCJkb2MiLCJpIiwidmFsIiwic2NyaXB0IiwiY3JlYXRlRWxlbWVudCIsInRleHQiLCJnZXRBdHRyaWJ1dGUiLCJzZXRBdHRyaWJ1dGUiLCJoZWFkIiwiYXBwZW5kQ2hpbGQiLCJwYXJlbnROb2RlIiwicmVtb3ZlQ2hpbGQiLCJ0b1R5cGUiLCJ2ZXJzaW9uIiwialF1ZXJ5Iiwic2VsZWN0b3IiLCJjb250ZXh0IiwiZm4iLCJpbml0IiwicHJvdG90eXBlIiwianF1ZXJ5IiwiY29uc3RydWN0b3IiLCJsZW5ndGgiLCJ0b0FycmF5IiwiZ2V0IiwibnVtIiwicHVzaFN0YWNrIiwiZWxlbXMiLCJyZXQiLCJtZXJnZSIsInByZXZPYmplY3QiLCJlYWNoIiwiY2FsbGJhY2siLCJtYXAiLCJlbGVtIiwiYXJndW1lbnRzIiwiZmlyc3QiLCJlcSIsImxhc3QiLCJldmVuIiwiZ3JlcCIsIl9lbGVtIiwib2RkIiwibGVuIiwiaiIsImVuZCIsInNvcnQiLCJzcGxpY2UiLCJleHRlbmQiLCJvcHRpb25zIiwibmFtZSIsImNvcHkiLCJjb3B5SXNBcnJheSIsImNsb25lIiwidGFyZ2V0IiwiZGVlcCIsImlzUGxhaW5PYmplY3QiLCJBcnJheSIsImlzQXJyYXkiLCJ1bmRlZmluZWQiLCJleHBhbmRvIiwiTWF0aCIsInJhbmRvbSIsInJlcGxhY2UiLCJpc1JlYWR5IiwiZXJyb3IiLCJtc2ciLCJub29wIiwicHJvdG8iLCJDdG9yIiwiaXNFbXB0eU9iamVjdCIsImdsb2JhbEV2YWwiLCJpc0FycmF5TGlrZSIsIm1ha2VBcnJheSIsInJlc3VsdHMiLCJpbkFycmF5Iiwic2Vjb25kIiwiaW52ZXJ0IiwiY2FsbGJhY2tJbnZlcnNlIiwibWF0Y2hlcyIsImNhbGxiYWNrRXhwZWN0IiwiYXJnIiwidmFsdWUiLCJndWlkIiwiU3ltYm9sIiwiaXRlcmF0b3IiLCJzcGxpdCIsIl9pIiwidG9Mb3dlckNhc2UiLCJTaXp6bGUiLCJFeHByIiwiZ2V0VGV4dCIsImlzWE1MIiwidG9rZW5pemUiLCJjb21waWxlIiwic2VsZWN0Iiwib3V0ZXJtb3N0Q29udGV4dCIsInNvcnRJbnB1dCIsImhhc0R1cGxpY2F0ZSIsInNldERvY3VtZW50IiwiZG9jRWxlbSIsImRvY3VtZW50SXNIVE1MIiwicmJ1Z2d5UVNBIiwicmJ1Z2d5TWF0Y2hlcyIsImNvbnRhaW5zIiwiRGF0ZSIsInByZWZlcnJlZERvYyIsImRpcnJ1bnMiLCJkb25lIiwiY2xhc3NDYWNoZSIsImNyZWF0ZUNhY2hlIiwidG9rZW5DYWNoZSIsImNvbXBpbGVyQ2FjaGUiLCJub25uYXRpdmVTZWxlY3RvckNhY2hlIiwic29ydE9yZGVyIiwiYSIsImIiLCJwb3AiLCJwdXNoTmF0aXZlIiwibGlzdCIsImJvb2xlYW5zIiwid2hpdGVzcGFjZSIsImlkZW50aWZpZXIiLCJhdHRyaWJ1dGVzIiwicHNldWRvcyIsInJ3aGl0ZXNwYWNlIiwiUmVnRXhwIiwicnRyaW0iLCJyY29tbWEiLCJyY29tYmluYXRvcnMiLCJyZGVzY2VuZCIsInJwc2V1ZG8iLCJyaWRlbnRpZmllciIsIm1hdGNoRXhwciIsInJodG1sIiwicmlucHV0cyIsInJoZWFkZXIiLCJybmF0aXZlIiwicnF1aWNrRXhwciIsInJzaWJsaW5nIiwicnVuZXNjYXBlIiwiZnVuZXNjYXBlIiwiZXNjYXBlIiwibm9uSGV4IiwiaGlnaCIsIlN0cmluZyIsImZyb21DaGFyQ29kZSIsInJjc3Nlc2NhcGUiLCJmY3NzZXNjYXBlIiwiY2giLCJhc0NvZGVQb2ludCIsImNoYXJDb2RlQXQiLCJ1bmxvYWRIYW5kbGVyIiwiaW5EaXNhYmxlZEZpZWxkc2V0IiwiYWRkQ29tYmluYXRvciIsImRpc2FibGVkIiwibm9kZU5hbWUiLCJkaXIiLCJuZXh0IiwiY2hpbGROb2RlcyIsImUiLCJlbHMiLCJzZWVkIiwibSIsIm5pZCIsIm1hdGNoIiwiZ3JvdXBzIiwibmV3U2VsZWN0b3IiLCJuZXdDb250ZXh0Iiwib3duZXJEb2N1bWVudCIsImV4ZWMiLCJnZXRFbGVtZW50QnlJZCIsImlkIiwiZ2V0RWxlbWVudHNCeVRhZ05hbWUiLCJnZXRFbGVtZW50c0J5Q2xhc3NOYW1lIiwicXNhIiwidGVzdCIsInRlc3RDb250ZXh0Iiwic2NvcGUiLCJ0b1NlbGVjdG9yIiwiam9pbiIsInF1ZXJ5U2VsZWN0b3JBbGwiLCJxc2FFcnJvciIsInJlbW92ZUF0dHJpYnV0ZSIsImtleXMiLCJjYWNoZSIsImtleSIsImNhY2hlTGVuZ3RoIiwic2hpZnQiLCJtYXJrRnVuY3Rpb24iLCJhc3NlcnQiLCJlbCIsImFkZEhhbmRsZSIsImF0dHJzIiwiaGFuZGxlciIsImF0dHJIYW5kbGUiLCJzaWJsaW5nQ2hlY2siLCJjdXIiLCJkaWZmIiwic291cmNlSW5kZXgiLCJuZXh0U2libGluZyIsImNyZWF0ZUlucHV0UHNldWRvIiwiY3JlYXRlQnV0dG9uUHNldWRvIiwiY3JlYXRlRGlzYWJsZWRQc2V1ZG8iLCJpc0Rpc2FibGVkIiwiY3JlYXRlUG9zaXRpb25hbFBzZXVkbyIsImFyZ3VtZW50IiwibWF0Y2hJbmRleGVzIiwibmFtZXNwYWNlIiwibmFtZXNwYWNlVVJJIiwiZG9jdW1lbnRFbGVtZW50IiwiaGFzQ29tcGFyZSIsInN1YldpbmRvdyIsImRlZmF1bHRWaWV3IiwidG9wIiwiYWRkRXZlbnRMaXN0ZW5lciIsImF0dGFjaEV2ZW50IiwiY2xhc3NOYW1lIiwiY3JlYXRlQ29tbWVudCIsImdldEJ5SWQiLCJnZXRFbGVtZW50c0J5TmFtZSIsImZpbHRlciIsImF0dHJJZCIsImZpbmQiLCJnZXRBdHRyaWJ1dGVOb2RlIiwidGFnIiwidG1wIiwiaW5wdXQiLCJpbm5lckhUTUwiLCJtYXRjaGVzU2VsZWN0b3IiLCJ3ZWJraXRNYXRjaGVzU2VsZWN0b3IiLCJtb3pNYXRjaGVzU2VsZWN0b3IiLCJvTWF0Y2hlc1NlbGVjdG9yIiwibXNNYXRjaGVzU2VsZWN0b3IiLCJkaXNjb25uZWN0ZWRNYXRjaCIsImNvbXBhcmVEb2N1bWVudFBvc2l0aW9uIiwiYWRvd24iLCJidXAiLCJjb21wYXJlIiwic29ydERldGFjaGVkIiwiYXVwIiwiYXAiLCJicCIsInVuc2hpZnQiLCJleHByIiwiZWxlbWVudHMiLCJhdHRyIiwic3BlY2lmaWVkIiwic2VsIiwidW5pcXVlU29ydCIsImR1cGxpY2F0ZXMiLCJkZXRlY3REdXBsaWNhdGVzIiwic29ydFN0YWJsZSIsInRleHRDb250ZW50IiwiZmlyc3RDaGlsZCIsIm5vZGVWYWx1ZSIsInNlbGVjdG9ycyIsImNyZWF0ZVBzZXVkbyIsInJlbGF0aXZlIiwicHJlRmlsdGVyIiwiZXhjZXNzIiwidW5xdW90ZWQiLCJub2RlTmFtZVNlbGVjdG9yIiwicGF0dGVybiIsIm9wZXJhdG9yIiwiY2hlY2siLCJyZXN1bHQiLCJ3aGF0IiwiX2FyZ3VtZW50Iiwic2ltcGxlIiwiZm9yd2FyZCIsIm9mVHlwZSIsIl9jb250ZXh0IiwieG1sIiwidW5pcXVlQ2FjaGUiLCJvdXRlckNhY2hlIiwibm9kZUluZGV4Iiwic3RhcnQiLCJwYXJlbnQiLCJ1c2VDYWNoZSIsImxhc3RDaGlsZCIsInVuaXF1ZUlEIiwicHNldWRvIiwiYXJncyIsInNldEZpbHRlcnMiLCJpZHgiLCJtYXRjaGVkIiwibWF0Y2hlciIsInVubWF0Y2hlZCIsImxhbmciLCJlbGVtTGFuZyIsImhhc2giLCJsb2NhdGlvbiIsImFjdGl2ZUVsZW1lbnQiLCJoYXNGb2N1cyIsImhyZWYiLCJ0YWJJbmRleCIsImNoZWNrZWQiLCJzZWxlY3RlZCIsInNlbGVjdGVkSW5kZXgiLCJfbWF0Y2hJbmRleGVzIiwicmFkaW8iLCJjaGVja2JveCIsImZpbGUiLCJwYXNzd29yZCIsImltYWdlIiwic3VibWl0IiwicmVzZXQiLCJmaWx0ZXJzIiwicGFyc2VPbmx5IiwidG9rZW5zIiwic29GYXIiLCJwcmVGaWx0ZXJzIiwiY2FjaGVkIiwiY29tYmluYXRvciIsImJhc2UiLCJza2lwIiwiY2hlY2tOb25FbGVtZW50cyIsImRvbmVOYW1lIiwib2xkQ2FjaGUiLCJuZXdDYWNoZSIsImVsZW1lbnRNYXRjaGVyIiwibWF0Y2hlcnMiLCJtdWx0aXBsZUNvbnRleHRzIiwiY29udGV4dHMiLCJjb25kZW5zZSIsIm5ld1VubWF0Y2hlZCIsIm1hcHBlZCIsInNldE1hdGNoZXIiLCJwb3N0RmlsdGVyIiwicG9zdEZpbmRlciIsInBvc3RTZWxlY3RvciIsInRlbXAiLCJwcmVNYXAiLCJwb3N0TWFwIiwicHJlZXhpc3RpbmciLCJtYXRjaGVySW4iLCJtYXRjaGVyT3V0IiwibWF0Y2hlckZyb21Ub2tlbnMiLCJjaGVja0NvbnRleHQiLCJsZWFkaW5nUmVsYXRpdmUiLCJpbXBsaWNpdFJlbGF0aXZlIiwibWF0Y2hDb250ZXh0IiwibWF0Y2hBbnlDb250ZXh0IiwibWF0Y2hlckZyb21Hcm91cE1hdGNoZXJzIiwiZWxlbWVudE1hdGNoZXJzIiwic2V0TWF0Y2hlcnMiLCJieVNldCIsImJ5RWxlbWVudCIsInN1cGVyTWF0Y2hlciIsIm91dGVybW9zdCIsIm1hdGNoZWRDb3VudCIsInNldE1hdGNoZWQiLCJjb250ZXh0QmFja3VwIiwiZGlycnVuc1VuaXF1ZSIsInRva2VuIiwiY29tcGlsZWQiLCJfbmFtZSIsImRlZmF1bHRWYWx1ZSIsInVuaXF1ZSIsImlzWE1MRG9jIiwiZXNjYXBlU2VsZWN0b3IiLCJ1bnRpbCIsInRydW5jYXRlIiwiaXMiLCJzaWJsaW5ncyIsIm4iLCJybmVlZHNDb250ZXh0IiwibmVlZHNDb250ZXh0IiwicnNpbmdsZVRhZyIsIndpbm5vdyIsInF1YWxpZmllciIsIm5vdCIsInNlbGYiLCJyb290alF1ZXJ5Iiwicm9vdCIsInBhcnNlSFRNTCIsInJlYWR5IiwicnBhcmVudHNwcmV2IiwiZ3VhcmFudGVlZFVuaXF1ZSIsImNoaWxkcmVuIiwiY29udGVudHMiLCJwcmV2IiwiaGFzIiwidGFyZ2V0cyIsImwiLCJjbG9zZXN0IiwiaW5kZXgiLCJwcmV2QWxsIiwiYWRkIiwiYWRkQmFjayIsInNpYmxpbmciLCJwYXJlbnRzIiwicGFyZW50c1VudGlsIiwibmV4dEFsbCIsIm5leHRVbnRpbCIsInByZXZVbnRpbCIsImNvbnRlbnREb2N1bWVudCIsImNvbnRlbnQiLCJyZXZlcnNlIiwicm5vdGh0bWx3aGl0ZSIsImNyZWF0ZU9wdGlvbnMiLCJvYmplY3QiLCJfIiwiZmxhZyIsIkNhbGxiYWNrcyIsImZpcmluZyIsIm1lbW9yeSIsImZpcmVkIiwibG9ja2VkIiwicXVldWUiLCJmaXJpbmdJbmRleCIsImZpcmUiLCJvbmNlIiwic3RvcE9uRmFsc2UiLCJyZW1vdmUiLCJlbXB0eSIsImRpc2FibGUiLCJsb2NrIiwiZmlyZVdpdGgiLCJJZGVudGl0eSIsInYiLCJUaHJvd2VyIiwiZXgiLCJhZG9wdFZhbHVlIiwicmVzb2x2ZSIsInJlamVjdCIsIm5vVmFsdWUiLCJtZXRob2QiLCJwcm9taXNlIiwiZmFpbCIsInRoZW4iLCJEZWZlcnJlZCIsImZ1bmMiLCJ0dXBsZXMiLCJzdGF0ZSIsImFsd2F5cyIsImRlZmVycmVkIiwicGlwZSIsImZucyIsIm5ld0RlZmVyIiwidHVwbGUiLCJyZXR1cm5lZCIsInByb2dyZXNzIiwibm90aWZ5Iiwib25GdWxmaWxsZWQiLCJvblJlamVjdGVkIiwib25Qcm9ncmVzcyIsIm1heERlcHRoIiwiZGVwdGgiLCJzcGVjaWFsIiwidGhhdCIsIm1pZ2h0VGhyb3ciLCJUeXBlRXJyb3IiLCJub3RpZnlXaXRoIiwicmVzb2x2ZVdpdGgiLCJwcm9jZXNzIiwiZXhjZXB0aW9uSG9vayIsInN0YWNrVHJhY2UiLCJyZWplY3RXaXRoIiwiZ2V0U3RhY2tIb29rIiwic2V0VGltZW91dCIsInN0YXRlU3RyaW5nIiwid2hlbiIsInNpbmdsZVZhbHVlIiwicmVtYWluaW5nIiwicmVzb2x2ZUNvbnRleHRzIiwicmVzb2x2ZVZhbHVlcyIsIm1hc3RlciIsInVwZGF0ZUZ1bmMiLCJyZXJyb3JOYW1lcyIsInN0YWNrIiwiY29uc29sZSIsIndhcm4iLCJtZXNzYWdlIiwicmVhZHlFeGNlcHRpb24iLCJyZWFkeUxpc3QiLCJjYXRjaCIsInJlYWR5V2FpdCIsIndhaXQiLCJjb21wbGV0ZWQiLCJyZW1vdmVFdmVudExpc3RlbmVyIiwicmVhZHlTdGF0ZSIsImRvU2Nyb2xsIiwiYWNjZXNzIiwiY2hhaW5hYmxlIiwiZW1wdHlHZXQiLCJyYXciLCJidWxrIiwiX2tleSIsInJtc1ByZWZpeCIsInJkYXNoQWxwaGEiLCJmY2FtZWxDYXNlIiwiX2FsbCIsImxldHRlciIsInRvVXBwZXJDYXNlIiwiY2FtZWxDYXNlIiwic3RyaW5nIiwiYWNjZXB0RGF0YSIsIm93bmVyIiwiRGF0YSIsInVpZCIsImRlZmluZVByb3BlcnR5IiwiY29uZmlndXJhYmxlIiwic2V0IiwiZGF0YSIsInByb3AiLCJoYXNEYXRhIiwiZGF0YVByaXYiLCJkYXRhVXNlciIsInJicmFjZSIsInJtdWx0aURhc2giLCJnZXREYXRhIiwiSlNPTiIsInBhcnNlIiwiZGF0YUF0dHIiLCJyZW1vdmVEYXRhIiwiX2RhdGEiLCJfcmVtb3ZlRGF0YSIsImRlcXVldWUiLCJzdGFydExlbmd0aCIsImhvb2tzIiwiX3F1ZXVlSG9va3MiLCJzdG9wIiwic2V0dGVyIiwiY2xlYXJRdWV1ZSIsImNvdW50IiwiZGVmZXIiLCJwbnVtIiwic291cmNlIiwicmNzc051bSIsImNzc0V4cGFuZCIsImlzQXR0YWNoZWQiLCJjb21wb3NlZCIsImdldFJvb3ROb2RlIiwiaXNIaWRkZW5XaXRoaW5UcmVlIiwic3R5bGUiLCJkaXNwbGF5IiwiY3NzIiwiYWRqdXN0Q1NTIiwidmFsdWVQYXJ0cyIsInR3ZWVuIiwiYWRqdXN0ZWQiLCJzY2FsZSIsIm1heEl0ZXJhdGlvbnMiLCJjdXJyZW50VmFsdWUiLCJpbml0aWFsIiwidW5pdCIsImNzc051bWJlciIsImluaXRpYWxJblVuaXQiLCJkZWZhdWx0RGlzcGxheU1hcCIsImdldERlZmF1bHREaXNwbGF5IiwiYm9keSIsInNob3dIaWRlIiwic2hvdyIsInZhbHVlcyIsImhpZGUiLCJ0b2dnbGUiLCJyY2hlY2thYmxlVHlwZSIsInJ0YWdOYW1lIiwicnNjcmlwdFR5cGUiLCJmcmFnbWVudCIsImNyZWF0ZURvY3VtZW50RnJhZ21lbnQiLCJkaXYiLCJjaGVja0Nsb25lIiwiY2xvbmVOb2RlIiwibm9DbG9uZUNoZWNrZWQiLCJvcHRpb24iLCJ3cmFwTWFwIiwidGhlYWQiLCJjb2wiLCJ0ciIsInRkIiwiX2RlZmF1bHQiLCJ0Ym9keSIsInRmb290IiwiY29sZ3JvdXAiLCJjYXB0aW9uIiwidGgiLCJvcHRncm91cCIsImdldEFsbCIsInNldEdsb2JhbEV2YWwiLCJyZWZFbGVtZW50cyIsImJ1aWxkRnJhZ21lbnQiLCJzY3JpcHRzIiwic2VsZWN0aW9uIiwiaWdub3JlZCIsIndyYXAiLCJhdHRhY2hlZCIsIm5vZGVzIiwiY3JlYXRlVGV4dE5vZGUiLCJodG1sUHJlZmlsdGVyIiwicmtleUV2ZW50Iiwicm1vdXNlRXZlbnQiLCJydHlwZW5hbWVzcGFjZSIsInJldHVyblRydWUiLCJyZXR1cm5GYWxzZSIsImV4cGVjdFN5bmMiLCJzYWZlQWN0aXZlRWxlbWVudCIsImVyciIsIm9uIiwidHlwZXMiLCJvbmUiLCJvcmlnRm4iLCJldmVudCIsIm9mZiIsImhhbmRsZU9iakluIiwiZXZlbnRIYW5kbGUiLCJldmVudHMiLCJ0IiwiaGFuZGxlT2JqIiwiaGFuZGxlcnMiLCJuYW1lc3BhY2VzIiwib3JpZ1R5cGUiLCJlbGVtRGF0YSIsImNyZWF0ZSIsImhhbmRsZSIsInRyaWdnZXJlZCIsImRpc3BhdGNoIiwiZGVsZWdhdGVUeXBlIiwiYmluZFR5cGUiLCJkZWxlZ2F0ZUNvdW50Iiwic2V0dXAiLCJtYXBwZWRUeXBlcyIsIm9yaWdDb3VudCIsInRlYXJkb3duIiwicmVtb3ZlRXZlbnQiLCJuYXRpdmVFdmVudCIsImhhbmRsZXJRdWV1ZSIsImZpeCIsImRlbGVnYXRlVGFyZ2V0IiwicHJlRGlzcGF0Y2giLCJpc1Byb3BhZ2F0aW9uU3RvcHBlZCIsImN1cnJlbnRUYXJnZXQiLCJpc0ltbWVkaWF0ZVByb3BhZ2F0aW9uU3RvcHBlZCIsInJuYW1lc3BhY2UiLCJwcmV2ZW50RGVmYXVsdCIsInN0b3BQcm9wYWdhdGlvbiIsInBvc3REaXNwYXRjaCIsIm1hdGNoZWRIYW5kbGVycyIsIm1hdGNoZWRTZWxlY3RvcnMiLCJidXR0b24iLCJhZGRQcm9wIiwiaG9vayIsIkV2ZW50IiwiZW51bWVyYWJsZSIsIm9yaWdpbmFsRXZlbnQiLCJ3cml0YWJsZSIsImxvYWQiLCJub0J1YmJsZSIsImNsaWNrIiwibGV2ZXJhZ2VOYXRpdmUiLCJ0cmlnZ2VyIiwiYmVmb3JldW5sb2FkIiwicmV0dXJuVmFsdWUiLCJub3RBc3luYyIsInNhdmVkIiwiaXNUcmlnZ2VyIiwic3RvcEltbWVkaWF0ZVByb3BhZ2F0aW9uIiwicHJvcHMiLCJpc0RlZmF1bHRQcmV2ZW50ZWQiLCJkZWZhdWx0UHJldmVudGVkIiwicmVsYXRlZFRhcmdldCIsInRpbWVTdGFtcCIsIm5vdyIsImlzU2ltdWxhdGVkIiwiYWx0S2V5IiwiYnViYmxlcyIsImNhbmNlbGFibGUiLCJjaGFuZ2VkVG91Y2hlcyIsImN0cmxLZXkiLCJkZXRhaWwiLCJldmVudFBoYXNlIiwibWV0YUtleSIsInBhZ2VYIiwicGFnZVkiLCJzaGlmdEtleSIsInZpZXciLCJjaGFyQ29kZSIsImtleUNvZGUiLCJidXR0b25zIiwiY2xpZW50WCIsImNsaWVudFkiLCJvZmZzZXRYIiwib2Zmc2V0WSIsInBvaW50ZXJJZCIsInBvaW50ZXJUeXBlIiwic2NyZWVuWCIsInNjcmVlblkiLCJ0YXJnZXRUb3VjaGVzIiwidG9FbGVtZW50IiwidG91Y2hlcyIsIndoaWNoIiwiZm9jdXMiLCJibHVyIiwibW91c2VlbnRlciIsIm1vdXNlbGVhdmUiLCJwb2ludGVyZW50ZXIiLCJwb2ludGVybGVhdmUiLCJvcmlnIiwicmVsYXRlZCIsInJub0lubmVyaHRtbCIsInJjaGVja2VkIiwicmNsZWFuU2NyaXB0IiwibWFuaXB1bGF0aW9uVGFyZ2V0IiwiZGlzYWJsZVNjcmlwdCIsInJlc3RvcmVTY3JpcHQiLCJjbG9uZUNvcHlFdmVudCIsImRlc3QiLCJwZGF0YU9sZCIsInVkYXRhT2xkIiwidWRhdGFDdXIiLCJmaXhJbnB1dCIsImRvbU1hbmlwIiwiY29sbGVjdGlvbiIsImhhc1NjcmlwdHMiLCJpTm9DbG9uZSIsInZhbHVlSXNGdW5jdGlvbiIsImh0bWwiLCJfZXZhbFVybCIsImtlZXBEYXRhIiwiY2xlYW5EYXRhIiwiZGF0YUFuZEV2ZW50cyIsImRlZXBEYXRhQW5kRXZlbnRzIiwic3JjRWxlbWVudHMiLCJkZXN0RWxlbWVudHMiLCJpblBhZ2UiLCJkZXRhY2giLCJhcHBlbmQiLCJwcmVwZW5kIiwiaW5zZXJ0QmVmb3JlIiwiYmVmb3JlIiwiYWZ0ZXIiLCJyZXBsYWNlV2l0aCIsInJlcGxhY2VDaGlsZCIsImFwcGVuZFRvIiwicHJlcGVuZFRvIiwiaW5zZXJ0QWZ0ZXIiLCJyZXBsYWNlQWxsIiwib3JpZ2luYWwiLCJpbnNlcnQiLCJybnVtbm9ucHgiLCJnZXRTdHlsZXMiLCJvcGVuZXIiLCJnZXRDb21wdXRlZFN0eWxlIiwic3dhcCIsIm9sZCIsInJib3hTdHlsZSIsImNvbXB1dGVTdHlsZVRlc3RzIiwiY29udGFpbmVyIiwiY3NzVGV4dCIsImRpdlN0eWxlIiwicGl4ZWxQb3NpdGlvblZhbCIsInJlbGlhYmxlTWFyZ2luTGVmdFZhbCIsInJvdW5kUGl4ZWxNZWFzdXJlcyIsIm1hcmdpbkxlZnQiLCJyaWdodCIsInBpeGVsQm94U3R5bGVzVmFsIiwiYm94U2l6aW5nUmVsaWFibGVWYWwiLCJ3aWR0aCIsInBvc2l0aW9uIiwic2Nyb2xsYm94U2l6ZVZhbCIsIm9mZnNldFdpZHRoIiwibWVhc3VyZSIsInJvdW5kIiwicGFyc2VGbG9hdCIsInJlbGlhYmxlVHJEaW1lbnNpb25zVmFsIiwiYmFja2dyb3VuZENsaXAiLCJjbGVhckNsb25lU3R5bGUiLCJib3hTaXppbmdSZWxpYWJsZSIsInBpeGVsQm94U3R5bGVzIiwicGl4ZWxQb3NpdGlvbiIsInJlbGlhYmxlTWFyZ2luTGVmdCIsInNjcm9sbGJveFNpemUiLCJyZWxpYWJsZVRyRGltZW5zaW9ucyIsInRhYmxlIiwidHJDaGlsZCIsInRyU3R5bGUiLCJoZWlnaHQiLCJwYXJzZUludCIsImN1ckNTUyIsImNvbXB1dGVkIiwibWluV2lkdGgiLCJtYXhXaWR0aCIsImdldFByb3BlcnR5VmFsdWUiLCJhZGRHZXRIb29rSWYiLCJjb25kaXRpb25GbiIsImhvb2tGbiIsImNzc1ByZWZpeGVzIiwiZW1wdHlTdHlsZSIsInZlbmRvclByb3BzIiwidmVuZG9yUHJvcE5hbWUiLCJjYXBOYW1lIiwiZmluYWxQcm9wTmFtZSIsImZpbmFsIiwiY3NzUHJvcHMiLCJyZGlzcGxheXN3YXAiLCJyY3VzdG9tUHJvcCIsImNzc1Nob3ciLCJ2aXNpYmlsaXR5IiwiY3NzTm9ybWFsVHJhbnNmb3JtIiwibGV0dGVyU3BhY2luZyIsImZvbnRXZWlnaHQiLCJzZXRQb3NpdGl2ZU51bWJlciIsInN1YnRyYWN0IiwibWF4IiwiYm94TW9kZWxBZGp1c3RtZW50IiwiZGltZW5zaW9uIiwiYm94IiwiaXNCb3JkZXJCb3giLCJzdHlsZXMiLCJjb21wdXRlZFZhbCIsImV4dHJhIiwiZGVsdGEiLCJjZWlsIiwiZ2V0V2lkdGhPckhlaWdodCIsImJveFNpemluZ05lZWRlZCIsInZhbHVlSXNCb3JkZXJCb3giLCJvZmZzZXRQcm9wIiwiZ2V0Q2xpZW50UmVjdHMiLCJjc3NIb29rcyIsIm9wYWNpdHkiLCJvcmlnTmFtZSIsImlzQ3VzdG9tUHJvcCIsInNldFByb3BlcnR5IiwiaXNGaW5pdGUiLCJnZXRCb3VuZGluZ0NsaWVudFJlY3QiLCJzY3JvbGxib3hTaXplQnVnZ3kiLCJsZWZ0IiwibWFyZ2luIiwicGFkZGluZyIsImJvcmRlciIsInByZWZpeCIsInN1ZmZpeCIsImV4cGFuZCIsImV4cGFuZGVkIiwicGFydHMiLCJUd2VlbiIsImVhc2luZyIsInByb3BIb29rcyIsInJ1biIsInBlcmNlbnQiLCJlYXNlZCIsImR1cmF0aW9uIiwicG9zIiwic3RlcCIsImZ4Iiwic2Nyb2xsVG9wIiwic2Nyb2xsTGVmdCIsImxpbmVhciIsInAiLCJzd2luZyIsImNvcyIsIlBJIiwiZnhOb3ciLCJpblByb2dyZXNzIiwicmZ4dHlwZXMiLCJycnVuIiwic2NoZWR1bGUiLCJoaWRkZW4iLCJyZXF1ZXN0QW5pbWF0aW9uRnJhbWUiLCJpbnRlcnZhbCIsInRpY2siLCJjcmVhdGVGeE5vdyIsImdlbkZ4IiwiaW5jbHVkZVdpZHRoIiwiY3JlYXRlVHdlZW4iLCJhbmltYXRpb24iLCJBbmltYXRpb24iLCJ0d2VlbmVycyIsImRlZmF1bHRQcmVmaWx0ZXIiLCJvcHRzIiwib2xkZmlyZSIsInByb3BUd2VlbiIsInJlc3RvcmVEaXNwbGF5IiwiaXNCb3giLCJhbmltIiwiZGF0YVNob3ciLCJ1bnF1ZXVlZCIsIm92ZXJmbG93Iiwib3ZlcmZsb3dYIiwib3ZlcmZsb3dZIiwicHJvcEZpbHRlciIsInNwZWNpYWxFYXNpbmciLCJwcm9wZXJ0aWVzIiwic3RvcHBlZCIsInByZWZpbHRlcnMiLCJjdXJyZW50VGltZSIsInN0YXJ0VGltZSIsInR3ZWVucyIsIm9yaWdpbmFsUHJvcGVydGllcyIsIm9yaWdpbmFsT3B0aW9ucyIsImdvdG9FbmQiLCJiaW5kIiwiY29tcGxldGUiLCJ0aW1lciIsInR3ZWVuZXIiLCJwcmVmaWx0ZXIiLCJzcGVlZCIsIm9wdCIsInNwZWVkcyIsImZhZGVUbyIsInRvIiwiYW5pbWF0ZSIsIm9wdGFsbCIsImRvQW5pbWF0aW9uIiwiZmluaXNoIiwic3RvcFF1ZXVlIiwidGltZXJzIiwiY3NzRm4iLCJzbGlkZURvd24iLCJzbGlkZVVwIiwic2xpZGVUb2dnbGUiLCJmYWRlSW4iLCJmYWRlT3V0IiwiZmFkZVRvZ2dsZSIsInNsb3ciLCJmYXN0IiwiZGVsYXkiLCJ0aW1lIiwidGltZW91dCIsImNsZWFyVGltZW91dCIsImNoZWNrT24iLCJvcHRTZWxlY3RlZCIsInJhZGlvVmFsdWUiLCJib29sSG9vayIsInJlbW92ZUF0dHIiLCJuVHlwZSIsImF0dHJIb29rcyIsImJvb2wiLCJhdHRyTmFtZXMiLCJnZXR0ZXIiLCJsb3dlcmNhc2VOYW1lIiwicmZvY3VzYWJsZSIsInJjbGlja2FibGUiLCJyZW1vdmVQcm9wIiwicHJvcEZpeCIsInRhYmluZGV4Iiwic3RyaXBBbmRDb2xsYXBzZSIsImdldENsYXNzIiwiY2xhc3Nlc1RvQXJyYXkiLCJhZGRDbGFzcyIsImNsYXNzZXMiLCJjdXJWYWx1ZSIsImNsYXp6IiwiZmluYWxWYWx1ZSIsInJlbW92ZUNsYXNzIiwidG9nZ2xlQ2xhc3MiLCJzdGF0ZVZhbCIsImlzVmFsaWRWYWx1ZSIsImNsYXNzTmFtZXMiLCJoYXNDbGFzcyIsInJyZXR1cm4iLCJ2YWxIb29rcyIsIm9wdGlvblNldCIsImZvY3VzaW4iLCJyZm9jdXNNb3JwaCIsInN0b3BQcm9wYWdhdGlvbkNhbGxiYWNrIiwib25seUhhbmRsZXJzIiwiYnViYmxlVHlwZSIsIm9udHlwZSIsImxhc3RFbGVtZW50IiwiZXZlbnRQYXRoIiwicGFyZW50V2luZG93Iiwic2ltdWxhdGUiLCJ0cmlnZ2VySGFuZGxlciIsImF0dGFjaGVzIiwicnF1ZXJ5IiwicGFyc2VYTUwiLCJET01QYXJzZXIiLCJwYXJzZUZyb21TdHJpbmciLCJyYnJhY2tldCIsInJDUkxGIiwicnN1Ym1pdHRlclR5cGVzIiwicnN1Ym1pdHRhYmxlIiwiYnVpbGRQYXJhbXMiLCJ0cmFkaXRpb25hbCIsInBhcmFtIiwicyIsInZhbHVlT3JGdW5jdGlvbiIsImVuY29kZVVSSUNvbXBvbmVudCIsInNlcmlhbGl6ZSIsInNlcmlhbGl6ZUFycmF5IiwicjIwIiwicmhhc2giLCJyYW50aUNhY2hlIiwicmhlYWRlcnMiLCJybG9jYWxQcm90b2NvbCIsInJub0NvbnRlbnQiLCJycHJvdG9jb2wiLCJ0cmFuc3BvcnRzIiwiYWxsVHlwZXMiLCJvcmlnaW5BbmNob3IiLCJhZGRUb1ByZWZpbHRlcnNPclRyYW5zcG9ydHMiLCJzdHJ1Y3R1cmUiLCJkYXRhVHlwZUV4cHJlc3Npb24iLCJkYXRhVHlwZSIsImRhdGFUeXBlcyIsImluc3BlY3RQcmVmaWx0ZXJzT3JUcmFuc3BvcnRzIiwianFYSFIiLCJpbnNwZWN0ZWQiLCJzZWVraW5nVHJhbnNwb3J0IiwiaW5zcGVjdCIsInByZWZpbHRlck9yRmFjdG9yeSIsImRhdGFUeXBlT3JUcmFuc3BvcnQiLCJhamF4RXh0ZW5kIiwiZmxhdE9wdGlvbnMiLCJhamF4U2V0dGluZ3MiLCJhamF4SGFuZGxlUmVzcG9uc2VzIiwicmVzcG9uc2VzIiwiY3QiLCJmaW5hbERhdGFUeXBlIiwiZmlyc3REYXRhVHlwZSIsIm1pbWVUeXBlIiwiZ2V0UmVzcG9uc2VIZWFkZXIiLCJjb252ZXJ0ZXJzIiwiYWpheENvbnZlcnQiLCJyZXNwb25zZSIsImlzU3VjY2VzcyIsImNvbnYyIiwiY3VycmVudCIsImNvbnYiLCJyZXNwb25zZUZpZWxkcyIsImRhdGFGaWx0ZXIiLCJ0aHJvd3MiLCJhY3RpdmUiLCJsYXN0TW9kaWZpZWQiLCJldGFnIiwidXJsIiwiaXNMb2NhbCIsInByb3RvY29sIiwicHJvY2Vzc0RhdGEiLCJhc3luYyIsImNvbnRlbnRUeXBlIiwiYWNjZXB0cyIsImpzb24iLCJhamF4U2V0dXAiLCJzZXR0aW5ncyIsImFqYXhQcmVmaWx0ZXIiLCJhamF4VHJhbnNwb3J0IiwiYWpheCIsInRyYW5zcG9ydCIsImNhY2hlVVJMIiwicmVzcG9uc2VIZWFkZXJzU3RyaW5nIiwicmVzcG9uc2VIZWFkZXJzIiwidGltZW91dFRpbWVyIiwidXJsQW5jaG9yIiwiZmlyZUdsb2JhbHMiLCJ1bmNhY2hlZCIsImNhbGxiYWNrQ29udGV4dCIsImdsb2JhbEV2ZW50Q29udGV4dCIsImNvbXBsZXRlRGVmZXJyZWQiLCJzdGF0dXNDb2RlIiwicmVxdWVzdEhlYWRlcnMiLCJyZXF1ZXN0SGVhZGVyc05hbWVzIiwic3RyQWJvcnQiLCJnZXRBbGxSZXNwb25zZUhlYWRlcnMiLCJzZXRSZXF1ZXN0SGVhZGVyIiwib3ZlcnJpZGVNaW1lVHlwZSIsInN0YXR1cyIsImFib3J0Iiwic3RhdHVzVGV4dCIsImZpbmFsVGV4dCIsImNyb3NzRG9tYWluIiwiaG9zdCIsImhhc0NvbnRlbnQiLCJpZk1vZGlmaWVkIiwiaGVhZGVycyIsImJlZm9yZVNlbmQiLCJzdWNjZXNzIiwic2VuZCIsIm5hdGl2ZVN0YXR1c1RleHQiLCJtb2RpZmllZCIsImdldEpTT04iLCJnZXRTY3JpcHQiLCJ3cmFwQWxsIiwiZmlyc3RFbGVtZW50Q2hpbGQiLCJ3cmFwSW5uZXIiLCJodG1sSXNGdW5jdGlvbiIsInVud3JhcCIsInZpc2libGUiLCJvZmZzZXRIZWlnaHQiLCJ4aHIiLCJYTUxIdHRwUmVxdWVzdCIsInhoclN1Y2Nlc3NTdGF0dXMiLCJ4aHJTdXBwb3J0ZWQiLCJjb3JzIiwiZXJyb3JDYWxsYmFjayIsIm9wZW4iLCJ1c2VybmFtZSIsInhockZpZWxkcyIsIm9ubG9hZCIsIm9uZXJyb3IiLCJvbmFib3J0Iiwib250aW1lb3V0Iiwib25yZWFkeXN0YXRlY2hhbmdlIiwicmVzcG9uc2VUeXBlIiwicmVzcG9uc2VUZXh0IiwiYmluYXJ5Iiwic2NyaXB0QXR0cnMiLCJjaGFyc2V0Iiwic2NyaXB0Q2hhcnNldCIsImV2dCIsIm9sZENhbGxiYWNrcyIsInJqc29ucCIsImpzb25wIiwianNvbnBDYWxsYmFjayIsIm9yaWdpbmFsU2V0dGluZ3MiLCJjYWxsYmFja05hbWUiLCJvdmVyd3JpdHRlbiIsInJlc3BvbnNlQ29udGFpbmVyIiwianNvblByb3AiLCJjcmVhdGVIVE1MRG9jdW1lbnQiLCJpbXBsZW1lbnRhdGlvbiIsImtlZXBTY3JpcHRzIiwicGFyc2VkIiwicGFyYW1zIiwiYW5pbWF0ZWQiLCJvZmZzZXQiLCJzZXRPZmZzZXQiLCJjdXJQb3NpdGlvbiIsImN1ckxlZnQiLCJjdXJDU1NUb3AiLCJjdXJUb3AiLCJjdXJPZmZzZXQiLCJjdXJDU1NMZWZ0IiwiY2FsY3VsYXRlUG9zaXRpb24iLCJjdXJFbGVtIiwidXNpbmciLCJyZWN0Iiwid2luIiwicGFnZVlPZmZzZXQiLCJwYWdlWE9mZnNldCIsIm9mZnNldFBhcmVudCIsInBhcmVudE9mZnNldCIsInNjcm9sbFRvIiwiSGVpZ2h0IiwiV2lkdGgiLCJkZWZhdWx0RXh0cmEiLCJmdW5jTmFtZSIsInVuYmluZCIsImRlbGVnYXRlIiwidW5kZWxlZ2F0ZSIsImhvdmVyIiwiZm5PdmVyIiwiZm5PdXQiLCJwcm94eSIsImhvbGRSZWFkeSIsImhvbGQiLCJwYXJzZUpTT04iLCJpc051bWVyaWMiLCJpc05hTiIsInRyaW0iLCJkZWZpbmUiLCJhbWQiLCJfalF1ZXJ5IiwiXyQiLCIkIiwibm9Db25mbGljdCIsIl9jdXJJbnN0IiwiX2tleUV2ZW50IiwiX2Rpc2FibGVkSW5wdXRzIiwiX2RhdGVwaWNrZXJTaG93aW5nIiwiX2luRGlhbG9nIiwiX21haW5EaXZJZCIsIl9pbmxpbmVDbGFzcyIsIl9hcHBlbmRDbGFzcyIsIl90cmlnZ2VyQ2xhc3MiLCJfZGlhbG9nQ2xhc3MiLCJfZGlzYWJsZUNsYXNzIiwiX3Vuc2VsZWN0YWJsZUNsYXNzIiwiX2N1cnJlbnRDbGFzcyIsIl9kYXlPdmVyQ2xhc3MiLCJyZWdpb25hbCIsImNsb3NlVGV4dCIsInByZXZUZXh0IiwibmV4dFRleHQiLCJjdXJyZW50VGV4dCIsIm1vbnRoTmFtZXMiLCJtb250aE5hbWVzU2hvcnQiLCJkYXlOYW1lcyIsImRheU5hbWVzU2hvcnQiLCJkYXlOYW1lc01pbiIsIndlZWtIZWFkZXIiLCJkYXRlRm9ybWF0IiwiZmlyc3REYXkiLCJpc1JUTCIsInNob3dNb250aEFmdGVyWWVhciIsInllYXJTdWZmaXgiLCJfZGVmYXVsdHMiLCJzaG93T24iLCJzaG93QW5pbSIsInNob3dPcHRpb25zIiwiZGVmYXVsdERhdGUiLCJhcHBlbmRUZXh0IiwiYnV0dG9uVGV4dCIsImJ1dHRvbkltYWdlIiwiYnV0dG9uSW1hZ2VPbmx5IiwiaGlkZUlmTm9QcmV2TmV4dCIsIm5hdmlnYXRpb25Bc0RhdGVGb3JtYXQiLCJnb3RvQ3VycmVudCIsImNoYW5nZU1vbnRoIiwiY2hhbmdlWWVhciIsInllYXJSYW5nZSIsInNob3dPdGhlck1vbnRocyIsInNlbGVjdE90aGVyTW9udGhzIiwic2hvd1dlZWsiLCJjYWxjdWxhdGVXZWVrIiwiaXNvODYwMVdlZWsiLCJzaG9ydFllYXJDdXRvZmYiLCJtaW5EYXRlIiwibWF4RGF0ZSIsImJlZm9yZVNob3dEYXkiLCJiZWZvcmVTaG93Iiwib25TZWxlY3QiLCJvbkNoYW5nZU1vbnRoWWVhciIsIm9uQ2xvc2UiLCJudW1iZXJPZk1vbnRocyIsInNob3dDdXJyZW50QXRQb3MiLCJzdGVwTW9udGhzIiwic3RlcEJpZ01vbnRocyIsImFsdEZpZWxkIiwiYWx0Rm9ybWF0IiwiY29uc3RyYWluSW5wdXQiLCJzaG93QnV0dG9uUGFuZWwiLCJhdXRvU2l6ZSIsImVuIiwiZHBEaXYiLCJvIiwiZGF0ZXBpY2tlciIsIl9pc0Rpc2FibGVkRGF0ZXBpY2tlciIsImlubGluZSIsInIiLCJlbGVtZW50IiwiX3JlZnJlc2giLCJfdHJpZ2dlciIsInVpIiwiaCIsIndpZGdldCIsIldpZGdldCIsIl9jcmVhdGVXaWRnZXQiLCJfcHJvdG8iLCJfY2hpbGRDb25zdHJ1Y3RvcnMiLCJfc3VwZXIiLCJfc3VwZXJBcHBseSIsIndpZGdldEV2ZW50UHJlZml4Iiwid2lkZ2V0TmFtZSIsIndpZGdldEZ1bGxOYW1lIiwiYnJpZGdlIiwiY2hhckF0IiwiX2luaXQiLCJkZWZhdWx0RWxlbWVudCIsInV1aWQiLCJldmVudE5hbWVzcGFjZSIsImJpbmRpbmdzIiwiaG92ZXJhYmxlIiwiZm9jdXNhYmxlIiwiY2xhc3Nlc0VsZW1lbnRMb29rdXAiLCJfb24iLCJkZXN0cm95IiwiX2dldENyZWF0ZU9wdGlvbnMiLCJfY3JlYXRlIiwiX3NldE9wdGlvbkRpc2FibGVkIiwiX2dldENyZWF0ZUV2ZW50RGF0YSIsIl9kZXN0cm95IiwiX3JlbW92ZUNsYXNzIiwiX3NldE9wdGlvbnMiLCJfc2V0T3B0aW9uIiwiX3NldE9wdGlvbkNsYXNzZXMiLCJfY2xhc3NlcyIsIl90b2dnbGVDbGFzcyIsImVuYWJsZSIsIl91bnRyYWNrQ2xhc3Nlc0VsZW1lbnQiLCJfYWRkQ2xhc3MiLCJjIiwiX29mZiIsIl9kZWxheSIsIl9ob3ZlcmFibGUiLCJfZm9jdXNhYmxlIiwiZm9jdXNvdXQiLCJlZmZlY3QiLCJlZmZlY3RzIiwidSIsIm91dGVyV2lkdGgiLCJvdXRlckhlaWdodCIsImFicyIsImQiLCJzY3JvbGxiYXJXaWR0aCIsImNsaWVudFdpZHRoIiwiZ2V0U2Nyb2xsSW5mbyIsImlzRG9jdW1lbnQiLCJzY3JvbGxXaWR0aCIsInNjcm9sbEhlaWdodCIsImdldFdpdGhpbkluZm8iLCJvZiIsImYiLCJnIiwid2l0aGluIiwieSIsImNvbGxpc2lvbiIsImsiLCJhdCIsIngiLCJDIiwiRCIsIkkiLCJteSIsIm1hcmdpblRvcCIsInRhcmdldFdpZHRoIiwidGFyZ2V0SGVpZ2h0IiwiZWxlbVdpZHRoIiwiZWxlbUhlaWdodCIsImNvbGxpc2lvblBvc2l0aW9uIiwiY29sbGlzaW9uV2lkdGgiLCJjb2xsaXNpb25IZWlnaHQiLCJob3Jpem9udGFsIiwidmVydGljYWwiLCJpbXBvcnRhbnQiLCJmaXQiLCJmbGlwIiwiZmxpcGZpdCIsImRpc2FibGVTZWxlY3Rpb24iLCJlbmFibGVTZWxlY3Rpb24iLCJkZWYiLCJmbG9vciIsIm1vZCIsIl9yZ2JhIiwicmUiLCJzcGFjZSIsInRyYW5zcGFyZW50IiwiQ29sb3IiLCJyZ2JhIiwicmVkIiwiZ3JlZW4iLCJibHVlIiwiaHNsYSIsImh1ZSIsInNhdHVyYXRpb24iLCJsaWdodG5lc3MiLCJkZWdyZWVzIiwiYmFja2dyb3VuZENvbG9yIiwiYWxwaGEiLCJmcm9tIiwiX3NwYWNlIiwidHJhbnNpdGlvbiIsImJsZW5kIiwidG9SZ2JhU3RyaW5nIiwidG9Ic2xhU3RyaW5nIiwidG9IZXhTdHJpbmciLCJtaW4iLCJfaHNsYSIsImNvbG9ySW5pdCIsImJvcmRlckNvbG9yIiwibmFtZXMiLCJhcXVhIiwiYmxhY2siLCJmdWNoc2lhIiwiZ3JheSIsImxpbWUiLCJtYXJvb24iLCJuYXZ5Iiwib2xpdmUiLCJwdXJwbGUiLCJzaWx2ZXIiLCJ0ZWFsIiwid2hpdGUiLCJ5ZWxsb3ciLCJjdXJyZW50U3R5bGUiLCJib3JkZXJCb3R0b20iLCJib3JkZXJMZWZ0IiwiYm9yZGVyUmlnaHQiLCJib3JkZXJUb3AiLCJib3JkZXJXaWR0aCIsInNldEF0dHIiLCJhbmltYXRlQ2xhc3MiLCJzd2l0Y2hDbGFzcyIsImJvdHRvbSIsInVpQmFja0NvbXBhdCIsInNhdmUiLCJyZXN0b3JlIiwic2V0TW9kZSIsImNyZWF0ZVdyYXBwZXIiLCJmb250U2l6ZSIsImJhY2tncm91bmQiLCJ6SW5kZXgiLCJyZW1vdmVXcmFwcGVyIiwibW9kZSIsInNjYWxlZERpbWVuc2lvbnMiLCJjbGlwVG9Cb3giLCJjbGlwIiwic2F2ZVN0eWxlIiwicmVzdG9yZVN0eWxlIiwiZ2V0QmFzZWxpbmUiLCJjcmVhdGVQbGFjZWhvbGRlciIsIm1hcmdpbkJvdHRvbSIsIm1hcmdpblJpZ2h0IiwicmVtb3ZlUGxhY2Vob2xkZXIiLCJjbGVhblVwIiwic2V0VHJhbnNpdGlvbiIsImNzc1VuaXQiLCJjc3NDbGlwIiwidHJhbnNmZXIiLCJpbm5lckhlaWdodCIsImlubmVyV2lkdGgiLCJjbGlwSW5pdCIsInBvdyIsIlNpbmUiLCJDaXJjIiwic3FydCIsIkVsYXN0aWMiLCJzaW4iLCJCYWNrIiwiQm91bmNlIiwidXAiLCJkb3duIiwiZGlyZWN0aW9uIiwiZGlzdGFuY2UiLCJ0aW1lcyIsInBpZWNlcyIsInNpemUiLCJob3JpekZpcnN0IiwiYmFja2dyb3VuZEltYWdlIiwiY29sb3IiLCJvcmlnaW4iLCJmYWRlIiwiZm9ybSIsImZvcm1SZXNldE1peGluIiwiX2Zvcm1SZXNldEhhbmRsZXIiLCJyZWZyZXNoIiwiX2JpbmRGb3JtUmVzZXRIYW5kbGVyIiwiX3VuYmluZEZvcm1SZXNldEhhbmRsZXIiLCJzdWJzdHJpbmciLCJCQUNLU1BBQ0UiLCJDT01NQSIsIkRFTEVURSIsIkRPV04iLCJFTkQiLCJFTlRFUiIsIkVTQ0FQRSIsIkhPTUUiLCJMRUZUIiwiUEFHRV9ET1dOIiwiUEFHRV9VUCIsIlBFUklPRCIsIlJJR0hUIiwiU1BBQ0UiLCJUQUIiLCJVUCIsImxhYmVscyIsInNjcm9sbFBhcmVudCIsInRhYmJhYmxlIiwidW5pcXVlSWQiLCJyZW1vdmVVbmlxdWVJZCIsImNvbGxhcHNpYmxlIiwiaGVhZGVyIiwiaGVpZ2h0U3R5bGUiLCJpY29ucyIsImFjdGl2ZUhlYWRlciIsImFjdGl2YXRlIiwiYmVmb3JlQWN0aXZhdGUiLCJoaWRlUHJvcHMiLCJib3JkZXJUb3BXaWR0aCIsImJvcmRlckJvdHRvbVdpZHRoIiwicGFkZGluZ1RvcCIsInBhZGRpbmdCb3R0b20iLCJzaG93UHJvcHMiLCJwcmV2U2hvdyIsInByZXZIaWRlIiwiX3Byb2Nlc3NQYW5lbHMiLCJwYW5lbCIsIl9jcmVhdGVJY29ucyIsIl9kZXN0cm95SWNvbnMiLCJfYWN0aXZhdGUiLCJfc2V0dXBFdmVudHMiLCJfa2V5ZG93biIsIl9ldmVudEhhbmRsZXIiLCJfcGFuZWxLZXlEb3duIiwicGFuZWxzIiwiX2ZpbmRBY3RpdmUiLCJrZXlkb3duIiwib2xkSGVhZGVyIiwib2xkUGFuZWwiLCJuZXdIZWFkZXIiLCJuZXdQYW5lbCIsIl90b2dnbGUiLCJfYW5pbWF0ZSIsIl90b2dnbGVDb21wbGV0ZSIsInN1Ym1lbnUiLCJpdGVtcyIsIm1lbnVzIiwicm9sZSIsImFjdGl2ZU1lbnUiLCJtb3VzZUhhbmRsZWQiLCJwcmV2aW91c0ZpbHRlciIsImNvbGxhcHNlQWxsIiwiX2Nsb3NlT25Eb2N1bWVudENsaWNrIiwicHJldmlvdXNQYWdlIiwibmV4dFBhZ2UiLCJfbW92ZSIsInByZXZpb3VzIiwiY29sbGFwc2UiLCJmaWx0ZXJUaW1lciIsIl9maWx0ZXJNZW51SXRlbXMiLCJfaXNEaXZpZGVyIiwiX2l0ZW1Sb2xlIiwibWVudSIsImxpc3Rib3giLCJfc2Nyb2xsSW50b1ZpZXciLCJfY2xvc2UiLCJfc3RhcnRPcGVuaW5nIiwiaXRlbSIsIl9oYXNTY3JvbGwiLCJfb3BlbiIsImlzRmlyc3RJdGVtIiwiaXNMYXN0SXRlbSIsImF1dG9Gb2N1cyIsIm1pbkxlbmd0aCIsImNoYW5nZSIsImNsb3NlIiwic2VhcmNoIiwicmVxdWVzdEluZGV4IiwicGVuZGluZyIsImlzTXVsdGlMaW5lIiwiX2lzQ29udGVudEVkaXRhYmxlIiwidmFsdWVNZXRob2QiLCJpc05ld01lbnUiLCJfdmFsdWUiLCJ0ZXJtIiwiX3NlYXJjaFRpbWVvdXQiLCJrZXlwcmVzcyIsInNlbGVjdGVkSXRlbSIsImNhbmNlbEJsdXIiLCJzZWFyY2hpbmciLCJfY2hhbmdlIiwiX2luaXRTb3VyY2UiLCJfYXBwZW5kVG8iLCJtb3VzZWRvd24iLCJtZW51Zm9jdXMiLCJsaXZlUmVnaW9uIiwibWVudXNlbGVjdCIsIl9pc0V2ZW50VGFyZ2V0SW5XaWRnZXQiLCJfY2xvc2VPbkNsaWNrT3V0c2lkZSIsImF1dG9jb21wbGV0ZSIsIl9zZWFyY2giLCJjYW5jZWxTZWFyY2giLCJfcmVzcG9uc2UiLCJfX3Jlc3BvbnNlIiwiX25vcm1hbGl6ZSIsIl9zdWdnZXN0IiwibGFiZWwiLCJfcmVuZGVyTWVudSIsIl9yZXNpemVNZW51IiwiX3JlbmRlckl0ZW1EYXRhIiwiX3JlbmRlckl0ZW0iLCJlc2NhcGVSZWdleCIsIm1lc3NhZ2VzIiwibm9SZXN1bHRzIiwib25seVZpc2libGUiLCJjb250cm9sZ3JvdXBMYWJlbCIsImNoZWNrYm94cmFkaW8iLCJzZWxlY3RtZW51Iiwic3Bpbm5lciIsIl9lbmhhbmNlIiwiX2NhbGxDaGlsZE1ldGhvZCIsImNoaWxkV2lkZ2V0cyIsIl9pbml0V2lkZ2V0cyIsIl9yZXNvbHZlQ2xhc3Nlc1ZhbHVlcyIsIl91cGRhdGVDb3JuZXJDbGFzcyIsIl9idWlsZFNpbXBsZU9wdGlvbnMiLCJtaWRkbGUiLCJvbmx5IiwiX3NwaW5uZXJPcHRpb25zIiwiX2J1dHRvbk9wdGlvbnMiLCJfY2hlY2tib3hyYWRpb09wdGlvbnMiLCJfc2VsZWN0bWVudU9wdGlvbnMiLCJpY29uIiwiX3JlYWRUeXBlIiwib3JpZ2luYWxMYWJlbCIsIm91dGVySFRNTCIsIl91cGRhdGVMYWJlbCIsIl91cGRhdGVJY29uIiwiX2dldFJhZGlvR3JvdXAiLCJfdG9nZ2xlQ2xhc3NlcyIsImljb25TcGFjZSIsImljb25Qb3NpdGlvbiIsInNob3dMYWJlbCIsImlzSW5wdXQiLCJoYXNUaXRsZSIsImtleXVwIiwiX3VwZGF0ZVRvb2x0aXAiLCJ0aXRsZSIsIl9hdHRhY2hJY29uIiwiX2F0dGFjaEljb25TcGFjZSIsInByaW1hcnkiLCJzZWNvbmRhcnkiLCJ0YWdOYW1lIiwiYnV0dG9uc2V0IiwiY29udHJvbGdyb3VwIiwibWFya2VyQ2xhc3NOYW1lIiwibWF4Um93cyIsIl93aWRnZXREYXRlcGlja2VyIiwic2V0RGVmYXVsdHMiLCJfYXR0YWNoRGF0ZXBpY2tlciIsIl9uZXdJbnN0IiwiX2Nvbm5lY3REYXRlcGlja2VyIiwiX2lubGluZURhdGVwaWNrZXIiLCJzZWxlY3RlZERheSIsInNlbGVjdGVkTW9udGgiLCJzZWxlY3RlZFllYXIiLCJkcmF3TW9udGgiLCJkcmF3WWVhciIsIl9hdHRhY2htZW50cyIsIl9kb0tleURvd24iLCJfZG9LZXlQcmVzcyIsIl9kb0tleVVwIiwiX2F1dG9TaXplIiwiX2Rpc2FibGVEYXRlcGlja2VyIiwiX2dldCIsIl9zaG93RGF0ZXBpY2tlciIsImFsdCIsIl9sYXN0SW5wdXQiLCJfaGlkZURhdGVwaWNrZXIiLCJzZXRNb250aCIsInNldERhdGUiLCJnZXREYXkiLCJfZm9ybWF0RGF0ZSIsIl9zZXREYXRlIiwiX2dldERlZmF1bHREYXRlIiwiX3VwZGF0ZURhdGVwaWNrZXIiLCJfdXBkYXRlQWx0ZXJuYXRlIiwiX2RpYWxvZ0RhdGVwaWNrZXIiLCJfZGlhbG9nSW5zdCIsIl9kaWFsb2dJbnB1dCIsIl9wb3MiLCJjbGllbnRIZWlnaHQiLCJibG9ja1VJIiwiX2Rlc3Ryb3lEYXRlcGlja2VyIiwiX2VuYWJsZURhdGVwaWNrZXIiLCJjdXJzb3IiLCJfZ2V0SW5zdCIsIl9vcHRpb25EYXRlcGlja2VyIiwiX2dldERhdGVEYXRlcGlja2VyIiwiX2dldE1pbk1heERhdGUiLCJfY2hhbmdlRGF0ZXBpY2tlciIsIl9yZWZyZXNoRGF0ZXBpY2tlciIsIl9zZXREYXRlRGF0ZXBpY2tlciIsIl9zZXREYXRlRnJvbUZpZWxkIiwiX2dldERhdGUiLCJfc2VsZWN0RGF5IiwiX2FkanVzdERhdGUiLCJfY2xlYXJEYXRlIiwiX2dvdG9Ub2RheSIsIl9wb3NzaWJsZUNoYXJzIiwibGFzdFZhbCIsInBhcnNlRGF0ZSIsIl9nZXRGb3JtYXRDb25maWciLCJfZmluZFBvcyIsIl9jaGVja09mZnNldCIsIl9zaG91bGRGb2N1c0lucHV0IiwiX2dlbmVyYXRlSFRNTCIsIl9hdHRhY2hIYW5kbGVycyIsIl9nZXROdW1iZXJPZk1vbnRocyIsInllYXJzaHRtbCIsIl90aWR5RGlhbG9nIiwidW5ibG9ja1VJIiwiX2NoZWNrRXh0ZXJuYWxDbGljayIsIl9hZGp1c3RJbnN0RGF0ZSIsImN1cnJlbnREYXkiLCJjdXJyZW50TW9udGgiLCJjdXJyZW50WWVhciIsImdldERhdGUiLCJnZXRNb250aCIsImdldEZ1bGxZZWFyIiwiX25vdGlmeUNoYW5nZSIsIl9zZWxlY3RNb250aFllYXIiLCJfc2VsZWN0RGF0ZSIsImZvcm1hdERhdGUiLCJub1dlZWtlbmRzIiwiZ2V0VGltZSIsInN1YnN0ciIsIl90aWNrc1RvMTk3MCIsIl9nZXREYXlzSW5Nb250aCIsIl9kYXlsaWdodFNhdmluZ0FkanVzdCIsIkFUT00iLCJDT09LSUUiLCJJU09fODYwMSIsIlJGQ184MjIiLCJSRkNfODUwIiwiUkZDXzEwMzYiLCJSRkNfMTEyMyIsIlJGQ18yODIyIiwiUlNTIiwiVElDS1MiLCJUSU1FU1RBTVAiLCJXM0MiLCJfcmVzdHJpY3RNaW5NYXgiLCJfZGV0ZXJtaW5lRGF0ZSIsInNldEhvdXJzIiwic2V0TWludXRlcyIsInNldFNlY29uZHMiLCJzZXRNaWxsaXNlY29uZHMiLCJnZXRIb3VycyIsInRvZGF5Iiwic2VsZWN0RGF5Iiwic2VsZWN0TW9udGgiLCJzZWxlY3RZZWFyIiwiVCIsIlAiLCJNIiwiUyIsIkgiLCJ6IiwiTyIsIkEiLCJOIiwiVyIsIkUiLCJGIiwiTCIsIlIiLCJCIiwiWSIsInEiLCJLIiwiVSIsIlYiLCJYIiwiRyIsIlEiLCJKIiwiWiIsInRlIiwiX2NhbkFkanVzdE1vbnRoIiwiX2lzSW5SYW5nZSIsIl9nZW5lcmF0ZU1vbnRoWWVhckhlYWRlciIsIl9nZXRGaXJzdERheU9mTW9udGgiLCJpbml0aWFsaXplZCIsImllIiwibmF2aWdhdG9yIiwidXNlckFnZW50IiwiY2FuY2VsIiwiX21vdXNlSW5pdCIsIl9tb3VzZURvd24iLCJzdGFydGVkIiwiX21vdXNlRGVzdHJveSIsIl9tb3VzZU1vdmVEZWxlZ2F0ZSIsIl9tb3VzZVVwRGVsZWdhdGUiLCJfbW91c2VNb3ZlZCIsIl9tb3VzZVN0YXJ0ZWQiLCJfbW91c2VVcCIsIl9tb3VzZURvd25FdmVudCIsIl9tb3VzZUNhcHR1cmUiLCJtb3VzZURlbGF5TWV0IiwiX21vdXNlRGVsYXlUaW1lciIsIl9tb3VzZURpc3RhbmNlTWV0IiwiX21vdXNlRGVsYXlNZXQiLCJfbW91c2VTdGFydCIsIl9tb3VzZU1vdmUiLCJkb2N1bWVudE1vZGUiLCJpZ25vcmVNaXNzaW5nV2hpY2giLCJfbW91c2VEcmFnIiwiX21vdXNlU3RvcCIsInBsdWdpbiIsInBsdWdpbnMiLCJzYWZlQmx1ciIsIm1vdXNlIiwiYWRkQ2xhc3NlcyIsImF4aXMiLCJjb25uZWN0VG9Tb3J0YWJsZSIsImNvbnRhaW5tZW50IiwiY3Vyc29yQXQiLCJncmlkIiwiaGVscGVyIiwiaWZyYW1lRml4IiwicmVmcmVzaFBvc2l0aW9ucyIsInJldmVydCIsInJldmVydER1cmF0aW9uIiwic2Nyb2xsIiwic2Nyb2xsU2Vuc2l0aXZpdHkiLCJzY3JvbGxTcGVlZCIsInNuYXAiLCJzbmFwTW9kZSIsInNuYXBUb2xlcmFuY2UiLCJkcmFnIiwiX3NldFBvc2l0aW9uUmVsYXRpdmUiLCJfc2V0SGFuZGxlQ2xhc3NOYW1lIiwiX3JlbW92ZUhhbmRsZUNsYXNzTmFtZSIsImRlc3Ryb3lPbkNsZWFyIiwiX2dldEhhbmRsZSIsIl9ibHVyQWN0aXZlRWxlbWVudCIsIl9ibG9ja0ZyYW1lcyIsImlmcmFtZUJsb2NrcyIsIl91bmJsb2NrRnJhbWVzIiwiX2NyZWF0ZUhlbHBlciIsIl9jYWNoZUhlbHBlclByb3BvcnRpb25zIiwiZGRtYW5hZ2VyIiwiX2NhY2hlTWFyZ2lucyIsImNzc1Bvc2l0aW9uIiwiaGFzRml4ZWRBbmNlc3RvciIsInBvc2l0aW9uQWJzIiwiX3JlZnJlc2hPZmZzZXRzIiwib3JpZ2luYWxQb3NpdGlvbiIsIl9nZW5lcmF0ZVBvc2l0aW9uIiwib3JpZ2luYWxQYWdlWCIsIm9yaWdpbmFsUGFnZVkiLCJfYWRqdXN0T2Zmc2V0RnJvbUhlbHBlciIsIl9zZXRDb250YWlubWVudCIsIl9jbGVhciIsImRyb3BCZWhhdmlvdXIiLCJwcmVwYXJlT2Zmc2V0cyIsImRyYWdTdGFydCIsIm1hcmdpbnMiLCJfZ2V0UGFyZW50T2Zmc2V0IiwiX2dldFJlbGF0aXZlT2Zmc2V0IiwiX2NvbnZlcnRQb3NpdGlvblRvIiwiX3VpSGFzaCIsImRyb3AiLCJkcm9wcGVkIiwiZHJhZ1N0b3AiLCJoYW5kbGVFbGVtZW50IiwiaGVscGVyUHJvcG9ydGlvbnMiLCJfaXNSb290Tm9kZSIsInJlbGF0aXZlQ29udGFpbmVyIiwiY2FuY2VsSGVscGVyUmVtb3ZhbCIsInNvcnRhYmxlcyIsInNvcnRhYmxlIiwiaXNPdmVyIiwiX3N0b3JlZENTUyIsInBsYWNlaG9sZGVyIiwiX2hlbHBlciIsIl9pbnRlcnNlY3RzV2l0aCIsImNvbnRhaW5lckNhY2hlIiwiX3BhcmVudCIsImN1cnJlbnRJdGVtIiwiZnJvbU91dHNpZGUiLCJfcmV2ZXJ0IiwiX2N1cnNvciIsIl9vcGFjaXR5Iiwic2Nyb2xsUGFyZW50Tm90SGlkZGVuIiwib3ZlcmZsb3dPZmZzZXQiLCJzbmFwRWxlbWVudHMiLCJzbmFwcGluZyIsInJlbGVhc2UiLCJzbmFwSXRlbSIsIl96SW5kZXgiLCJkcmFnZ2FibGUiLCJhbHNvUmVzaXplIiwiYW5pbWF0ZUR1cmF0aW9uIiwiYW5pbWF0ZUVhc2luZyIsImFzcGVjdFJhdGlvIiwiYXV0b0hpZGUiLCJnaG9zdCIsImhhbmRsZXMiLCJtYXhIZWlnaHQiLCJtaW5IZWlnaHQiLCJyZXNpemUiLCJfbnVtIiwiX2lzTnVtYmVyIiwiX2FzcGVjdFJhdGlvIiwib3JpZ2luYWxFbGVtZW50IiwiX3Byb3BvcnRpb25hbGx5UmVzaXplRWxlbWVudHMiLCJyZXNpemFibGUiLCJlbGVtZW50SXNXcmFwcGVyIiwib3JpZ2luYWxSZXNpemVTdHlsZSIsInpvb20iLCJfcHJvcG9ydGlvbmFsbHlSZXNpemUiLCJfc2V0dXBIYW5kbGVzIiwiX2hhbmRsZXMiLCJyZXNpemluZyIsIl9yZW1vdmVIYW5kbGVzIiwic2UiLCJzdyIsIm5lIiwibnciLCJfcmVuZGVyQXhpcyIsIl9yZW5kZXJQcm94eSIsIm9yaWdpbmFsU2l6ZSIsInNpemVEaWZmIiwib3JpZ2luYWxNb3VzZVBvc2l0aW9uIiwiX3Byb3BhZ2F0ZSIsIl91cGRhdGVQcmV2UHJvcGVydGllcyIsIl91cGRhdGVWaXJ0dWFsQm91bmRhcmllcyIsIl91cGRhdGVSYXRpbyIsIl9yZXNwZWN0U2l6ZSIsIl91cGRhdGVDYWNoZSIsIl9hcHBseUNoYW5nZXMiLCJwcmV2UG9zaXRpb24iLCJwcmV2U2l6ZSIsIl92Qm91bmRhcmllcyIsIl9nZXRQYWRkaW5nUGx1c0JvcmRlckRpbWVuc2lvbnMiLCJvdXRlckRpbWVuc2lvbnMiLCJlbGVtZW50T2Zmc2V0IiwiY29udGFpbmVyRWxlbWVudCIsImNvbnRhaW5lck9mZnNldCIsImNvbnRhaW5lclBvc2l0aW9uIiwicGFyZW50RGF0YSIsImNvbnRhaW5lclNpemUiLCJhdXRvT3BlbiIsImNsb3NlT25Fc2NhcGUiLCJtb2RhbCIsImJlZm9yZUNsb3NlIiwicmVzaXplU3RhcnQiLCJyZXNpemVTdG9wIiwic2l6ZVJlbGF0ZWRPcHRpb25zIiwicmVzaXphYmxlUmVsYXRlZE9wdGlvbnMiLCJvcmlnaW5hbENzcyIsIm9yaWdpbmFsVGl0bGUiLCJfY3JlYXRlV3JhcHBlciIsInVpRGlhbG9nIiwiX2NyZWF0ZVRpdGxlYmFyIiwiX2NyZWF0ZUJ1dHRvblBhbmUiLCJfbWFrZURyYWdnYWJsZSIsIl9tYWtlUmVzaXphYmxlIiwiX2lzT3BlbiIsIl90cmFja0ZvY3VzIiwiX3VudHJhY2tJbnN0YW5jZSIsIl9kZXN0cm95T3ZlcmxheSIsIl9mb2N1c2VkRWxlbWVudCIsIl9oaWRlIiwiaXNPcGVuIiwibW92ZVRvVG9wIiwiX21vdmVUb1RvcCIsIl9mb2N1c1RhYmJhYmxlIiwiX3NpemUiLCJfcG9zaXRpb24iLCJfY3JlYXRlT3ZlcmxheSIsIm92ZXJsYXkiLCJfc2hvdyIsIl9tYWtlRm9jdXNUYXJnZXQiLCJ1aURpYWxvZ0J1dHRvblBhbmUiLCJ1aURpYWxvZ1RpdGxlYmFyQ2xvc2UiLCJfa2VlcEZvY3VzIiwidWlEaWFsb2dUaXRsZWJhciIsIl90aXRsZSIsInVpQnV0dG9uU2V0IiwiX2NyZWF0ZUJ1dHRvbnMiLCJfbWluSGVpZ2h0IiwiX3RyYWNraW5nSW5zdGFuY2VzIiwiX2FsbG93SW50ZXJhY3Rpb24iLCJkaWFsb2ciLCJkaWFsb2dDbGFzcyIsImFjY2VwdCIsImdyZWVkeSIsInRvbGVyYW5jZSIsImRlYWN0aXZhdGUiLCJvdXQiLCJvdmVyIiwiaXNvdmVyIiwiaXNvdXQiLCJwcm9wb3J0aW9ucyIsIl9hZGRUb01hbmFnZXIiLCJkcm9wcGFibGVzIiwiX3NwbGljZSIsIl9hZGRBY3RpdmVDbGFzcyIsIl9kZWFjdGl2YXRlIiwiX3JlbW92ZUFjdGl2ZUNsYXNzIiwiX292ZXIiLCJfYWRkSG92ZXJDbGFzcyIsIl9vdXQiLCJfcmVtb3ZlSG92ZXJDbGFzcyIsIl9kcm9wIiwiZHJvcHBhYmxlIiwiaW50ZXJzZWN0IiwiYWJzb2x1dGUiLCJncmVlZHlDaGlsZCIsImhvdmVyQ2xhc3MiLCJhY3RpdmVDbGFzcyIsIm9sZFZhbHVlIiwiX2NvbnN0cmFpbmVkVmFsdWUiLCJ2YWx1ZURpdiIsIl9yZWZyZXNoVmFsdWUiLCJpbmRldGVybWluYXRlIiwiX3BlcmNlbnRhZ2UiLCJ0b0ZpeGVkIiwib3ZlcmxheURpdiIsImF1dG9SZWZyZXNoIiwic2VsZWN0aW5nIiwidW5zZWxlY3RlZCIsInVuc2VsZWN0aW5nIiwiZHJhZ2dlZCIsImVsZW1lbnRQb3MiLCJzZWxlY3RlZXMiLCIkZWxlbWVudCIsInN0YXJ0c2VsZWN0ZWQiLCJvcG9zIiwiaWRzIiwiX2RyYXdCdXR0b24iLCJfZHJhd01lbnUiLCJfcmVuZGVyZWQiLCJtZW51SXRlbXMiLCJfcGFyc2VPcHRpb24iLCJidXR0b25JdGVtIiwiX3JlbmRlckJ1dHRvbkl0ZW0iLCJfcmVzaXplQnV0dG9uIiwiX2J1dHRvbkV2ZW50cyIsIl9yZWZyZXNoTWVudSIsIm1lbnVXcmFwIiwibWVudUluc3RhbmNlIiwiX3NldFNlbGVjdGlvbiIsIl9zZWxlY3QiLCJmb2N1c0luZGV4IiwiX2dldFNlbGVjdGVkSXRlbSIsIl9wYXJzZU9wdGlvbnMiLCJfc2V0QXJpYSIsIl90b2dnbGVBdHRyIiwiX2RvY3VtZW50Q2xpY2siLCJyYW5nZSIsIm1lbnVXaWRnZXQiLCJfc2V0VGV4dCIsImdldFNlbGVjdGlvbiIsInJlbW92ZUFsbFJhbmdlcyIsImFkZFJhbmdlIiwicmFuZ2VDb3VudCIsImdldFJhbmdlQXQiLCJjcmVhdGVSYW5nZSIsIl9zZWxlY3RGb2N1c2VkSXRlbSIsIm9yaWVudGF0aW9uIiwic2xpZGUiLCJudW1QYWdlcyIsIl9rZXlTbGlkaW5nIiwiX21vdXNlU2xpZGluZyIsIl9hbmltYXRlT2ZmIiwiX2hhbmRsZUluZGV4IiwiX2RldGVjdE9yaWVudGF0aW9uIiwiX2NhbGN1bGF0ZU5ld01heCIsIl9jcmVhdGVSYW5nZSIsIl9jcmVhdGVIYW5kbGVzIiwiX3ZhbHVlTWluIiwiX2hhbmRsZUV2ZW50cyIsImVsZW1lbnRTaXplIiwiX25vcm1WYWx1ZUZyb21Nb3VzZSIsIl92YWx1ZU1heCIsIl9sYXN0Q2hhbmdlZFZhbHVlIiwiX3N0YXJ0IiwiX2NsaWNrT2Zmc2V0IiwiX3NsaWRlIiwiX3N0b3AiLCJfdHJpbUFsaWduVmFsdWUiLCJoYW5kbGVJbmRleCIsIl9oYXNNdWx0aXBsZVZhbHVlcyIsIl92YWx1ZXMiLCJfcmVmcmVzaFJhbmdlIiwiX3ByZWNpc2lvbiIsIl9wcmVjaXNpb25PZiIsImNvbm5lY3RXaXRoIiwiZHJvcE9uRW1wdHkiLCJmb3JjZVBsYWNlaG9sZGVyU2l6ZSIsImZvcmNlSGVscGVyU2l6ZSIsImJlZm9yZVN0b3AiLCJyZWNlaXZlIiwidXBkYXRlIiwiX2lzT3ZlckF4aXMiLCJfaXNGbG9hdGluZyIsImluc3RhbmNlIiwicmV2ZXJ0aW5nIiwiX3JlZnJlc2hJdGVtcyIsIl9yZW1vdmVDdXJyZW50c0Zyb21JdGVtcyIsImN1cnJlbnRDb250YWluZXIiLCJkb21Qb3NpdGlvbiIsIl9jcmVhdGVQbGFjZWhvbGRlciIsInN0b3JlZEN1cnNvciIsInN0b3JlZFN0eWxlc2hlZXQiLCJfc3RvcmVkT3BhY2l0eSIsIl9zdG9yZWRaSW5kZXgiLCJfcHJlc2VydmVIZWxwZXJQcm9wb3J0aW9ucyIsImNvbnRhaW5lcnMiLCJkcmFnZ2luZyIsImxhc3RQb3NpdGlvbkFicyIsIl9pbnRlcnNlY3RzV2l0aFBvaW50ZXIiLCJfaW50ZXJzZWN0c1dpdGhTaWRlcyIsIl9yZWFycmFuZ2UiLCJfY29udGFjdENvbnRhaW5lcnMiLCJfbm9GaW5hbFNvcnQiLCJfZ2V0SXRlbXNBc2pRdWVyeSIsImNvbm5lY3RlZCIsImF0dHJpYnV0ZSIsImV4cHJlc3Npb24iLCJmb3JjZVBvaW50ZXJGb3JDb250YWluZXJzIiwiZmxvYXRpbmciLCJfZ2V0RHJhZ1ZlcnRpY2FsRGlyZWN0aW9uIiwiX2dldERyYWdIb3Jpem9udGFsRGlyZWN0aW9uIiwiX2Nvbm5lY3RXaXRoIiwidG9sZXJhbmNlRWxlbWVudCIsImN1c3RvbSIsInJlZnJlc2hDb250YWluZXJzIiwiX2NyZWF0ZVRyUGxhY2Vob2xkZXIiLCJjb3VudGVyIiwic2VuZGVyIiwiY3VsdHVyZSIsImluY3JlbWVudGFsIiwibnVtYmVyRm9ybWF0IiwicGFnZSIsInNwaW4iLCJfZHJhdyIsIl9ldmVudHMiLCJtb3VzZXdoZWVsIiwic3Bpbm5pbmciLCJfc3BpbiIsIm1vdXNld2hlZWxUaW1lciIsIl9yZXBlYXQiLCJ1aVNwaW5uZXIiLCJfYWRqdXN0VmFsdWUiLCJfaW5jcmVtZW50IiwiX3BhcnNlIiwiX2Zvcm1hdCIsIkdsb2JhbGl6ZSIsImZvcm1hdCIsImlzVmFsaWQiLCJzdGVwVXAiLCJfc3RlcFVwIiwic3RlcERvd24iLCJfc3RlcERvd24iLCJwYWdlVXAiLCJwYWdlRG93biIsIl91aVNwaW5uZXJIdG1sIiwiX2J1dHRvbkh0bWwiLCJiZWZvcmVMb2FkIiwiX2lzTG9jYWwiLCJkZWNvZGVVUklDb21wb25lbnQiLCJydW5uaW5nIiwiX3Byb2Nlc3NUYWJzIiwiX2luaXRpYWxBY3RpdmUiLCJ0YWJzIiwiYW5jaG9ycyIsInRhYiIsIl9nZXRQYW5lbEZvclRhYiIsIl90YWJLZXlkb3duIiwiX2hhbmRsZVBhZ2VOYXYiLCJhY3RpdmF0aW5nIiwiX2ZvY3VzTmV4dFRhYiIsIl9wYW5lbEtleWRvd24iLCJfZmluZE5leHRUYWIiLCJfc2V0dXBIZWlnaHRTdHlsZSIsIl9zYW5pdGl6ZVNlbGVjdG9yIiwidGFibGlzdCIsIl9nZXRMaXN0IiwiX2NyZWF0ZVBhbmVsIiwib2xkVGFiIiwibmV3VGFiIiwiX2dldEluZGV4IiwiX2FqYXhTZXR0aW5ncyIsInRyYWNrIiwiX2FkZERlc2NyaWJlZEJ5IiwiX3JlbW92ZURlc2NyaWJlZEJ5IiwibW91c2VvdmVyIiwidG9vbHRpcHMiLCJkaXNhYmxlZFRpdGxlcyIsIl91cGRhdGVDb250ZW50IiwiX2Rpc2FibGUiLCJfZW5hYmxlIiwiX3JlZ2lzdGVyQ2xvc2VIYW5kbGVycyIsIl9maW5kIiwidG9vbHRpcCIsIl90b29sdGlwIiwibW91c2Vtb3ZlIiwiZGVsYXllZFNob3ciLCJzZXRJbnRlcnZhbCIsImNsZWFySW50ZXJ2YWwiLCJfcmVtb3ZlVG9vbHRpcCIsImNsb3NpbmciLCJoaWRpbmciLCJ0b29sdGlwQ2xhc3MiLCJyZXF1aXJlIiwiVkVSU0lPTiIsIklOIiwiT1VUIiwiTk9ORSIsIkFVVE8iLCJTV0lQRSIsIlBJTkNIIiwiVEFQIiwiRE9VQkxFX1RBUCIsIkxPTkdfVEFQIiwiSE9MRCIsIkhPUklaT05UQUwiLCJWRVJUSUNBTCIsIkFMTF9GSU5HRVJTIiwiRE9VQkxFX1RBUF9USFJFU0hPTEQiLCJQSEFTRV9TVEFSVCIsIlBIQVNFX01PVkUiLCJQSEFTRV9FTkQiLCJQSEFTRV9DQU5DRUwiLCJTVVBQT1JUU19UT1VDSCIsIlNVUFBPUlRTX1BPSU5URVJfSUUxMCIsIm1zUG9pbnRlckVuYWJsZWQiLCJQb2ludGVyRXZlbnQiLCJTVVBQT1JUU19QT0lOVEVSIiwiUExVR0lOX05TIiwiZGVmYXVsdHMiLCJmaW5nZXJzIiwidGhyZXNob2xkIiwiY2FuY2VsVGhyZXNob2xkIiwicGluY2hUaHJlc2hvbGQiLCJtYXhUaW1lVGhyZXNob2xkIiwiZmluZ2VyUmVsZWFzZVRocmVzaG9sZCIsImxvbmdUYXBUaHJlc2hvbGQiLCJkb3VibGVUYXBUaHJlc2hvbGQiLCJzd2lwZSIsInN3aXBlTGVmdCIsInN3aXBlUmlnaHQiLCJzd2lwZVVwIiwic3dpcGVEb3duIiwic3dpcGVTdGF0dXMiLCJwaW5jaEluIiwicGluY2hPdXQiLCJwaW5jaFN0YXR1cyIsInRhcCIsImRvdWJsZVRhcCIsImxvbmdUYXAiLCJ0cmlnZ2VyT25Ub3VjaEVuZCIsInRyaWdnZXJPblRvdWNoTGVhdmUiLCJhbGxvd1BhZ2VTY3JvbGwiLCJmYWxsYmFja1RvTW91c2VFdmVudHMiLCJleGNsdWRlZEVsZW1lbnRzIiwicHJldmVudERlZmF1bHRFdmVudHMiLCIkdGhpcyIsInBoYXNlcyIsImRpcmVjdGlvbnMiLCJwYWdlU2Nyb2xsIiwiT05FIiwiVFdPIiwiVEhSRUUiLCJGT1VSIiwiRklWRSIsIkFMTCIsIlRvdWNoU3dpcGUiLCJ1c2VUb3VjaEV2ZW50cyIsIlNUQVJUX0VWIiwiTU9WRV9FViIsIkVORF9FViIsIkxFQVZFX0VWIiwiQ0FOQ0VMX0VWIiwiY3VycmVudERpcmVjdGlvbiIsInN0YXJ0VG91Y2hlc0Rpc3RhbmNlIiwiZW5kVG91Y2hlc0Rpc3RhbmNlIiwicGluY2hab29tIiwicGluY2hEaXN0YW5jZSIsInBpbmNoRGlyZWN0aW9uIiwibWF4aW11bXNNYXAiLCJwaGFzZSIsImZpbmdlckNvdW50IiwiZmluZ2VyRGF0YSIsImVuZFRpbWUiLCJwcmV2aW91c1RvdWNoRW5kVGltZSIsImZpbmdlckNvdW50QXRSZWxlYXNlIiwiZG91YmxlVGFwU3RhcnRUaW1lIiwic2luZ2xlVGFwVGltZW91dCIsImhvbGRUaW1lb3V0IiwidG91Y2hTdGFydCIsInRvdWNoQ2FuY2VsIiwicmVtb3ZlTGlzdGVuZXJzIiwicHJvcGVydHkiLCJqcUV2ZW50IiwiZ2V0VG91Y2hJblByb2dyZXNzIiwiY3JlYXRlTWF4aW11bXNEYXRhIiwiY2FuY2VsTXVsdGlGaW5nZXJSZWxlYXNlIiwiY3JlYXRlRmluZ2VyRGF0YSIsImhhc1BpbmNoZXMiLCJnZXRUaW1lU3RhbXAiLCJjYWxjdWxhdGVUb3VjaGVzRGlzdGFuY2UiLCJzZXRUb3VjaEluUHJvZ3Jlc3MiLCJ0b3VjaE1vdmUiLCJpbk11bHRpRmluZ2VyUmVsZWFzZSIsImN1cnJlbnRGaW5nZXIiLCJ1cGRhdGVGaW5nZXJEYXRhIiwiY2FsY3VsYXRlUGluY2hEaXJlY3Rpb24iLCJjYWxjdWxhdGVQaW5jaFpvb20iLCJjYWxjdWxhdGVEaXJlY3Rpb24iLCJ2YWxpZGF0ZURlZmF1bHRFdmVudCIsImNhbGN1bGF0ZURpc3RhbmNlIiwiY2FsY3VsYXRlRHVyYXRpb24iLCJzZXRNYXhEaXN0YW5jZSIsImluQm91bmRzIiwiYm91bmRzIiwiZ2V0Ym91bmRzIiwiaXNJbkJvdW5kcyIsImdldE5leHRQaGFzZSIsInRvdWNoRW5kIiwic3RhcnRNdWx0aUZpbmdlclJlbGVhc2UiLCJkaWRTd2lwZUJhY2tUb0NhbmNlbCIsInZhbGlkYXRlU3dpcGVEaXN0YW5jZSIsImhhc1RhcCIsInRyaWdnZXJIYW5kbGVyRm9yR2VzdHVyZSIsInRvdWNoTGVhdmUiLCJjdXJyZW50UGhhc2UiLCJuZXh0UGhhc2UiLCJ2YWxpZFRpbWUiLCJ2YWxpZGF0ZVN3aXBlVGltZSIsInZhbGlkRGlzdGFuY2UiLCJkaWRDYW5jZWwiLCJkaWRTd2lwZSIsImhhc1N3aXBlcyIsImRpZFBpbmNoIiwiZGlkRG91YmxlVGFwIiwiZGlkTG9uZ1RhcCIsImRpZFRhcCIsImdlc3R1cmUiLCJ2YWxpZGF0ZVN3aXBlIiwidmFsaWRhdGVQaW5jaCIsImhhc0RvdWJsZVRhcCIsImluRG91YmxlVGFwIiwidmFsaWQiLCJjYW5jZWxsZWQiLCJnZXRNYXhEaXN0YW5jZSIsInZhbGlkYXRlUGluY2hEaXN0YW5jZSIsImF1dG8iLCJoYXNDb3JyZWN0RmluZ2VyQ291bnQiLCJ2YWxpZGF0ZUZpbmdlcnMiLCJoYXNFbmRQb2ludCIsInZhbGlkYXRlRW5kUG9pbnQiLCJoYXNDb3JyZWN0RGlzdGFuY2UiLCJoYXNWYWxpZFRpbWUiLCJoYXNWYWxpZERpc3RhbmNlIiwiaGFzTG9uZ1RhcCIsInZhbGlkYXRlRG91YmxlVGFwIiwidmFsaWRhdGVUYXAiLCJ2YWxpZGF0ZUxvbmdUYXAiLCJ3aXRoaW5UaHJlc2hvbGQiLCJnZXRGaW5nZXJEYXRhIiwibWF4RGF0YSIsImNyZWF0ZU1heGltdW1WTyIsInN0YXJ0UG9pbnQiLCJlbmRQb2ludCIsImRpZmZYIiwiZGlmZlkiLCJzdGFydERpc3RhbmNlIiwiZW5kRGlzdGFuY2UiLCJjYWxjdWxhdGVBbmdsZSIsImF0YW4yIiwiYW5nbGUiLCJjb21wYXJlUG9pbnRzIiwicG9pbnQiLCJwb2ludEEiLCJwb2ludEIiLCJpbXBsIiwibW9iaWxlRGV0ZWN0UnVsZXMiLCJkZXRlY3RNb2JpbGVCcm93c2VycyIsImZ1bGxQYXR0ZXJuIiwic2hvcnRQYXR0ZXJuIiwidGFibGV0UGF0dGVybiIsImhhc093blByb3AiLCJGQUxMQkFDS19QSE9ORSIsIkZBTExCQUNLX1RBQkxFVCIsIkZBTExCQUNLX01PQklMRSIsImVxdWFsSUMiLCJjb250YWluc0lDIiwidmFsdWVMQyIsImNvbnZlcnRQcm9wc1RvUmVnRXhwIiwicHJlcGFyZVVzZXJBZ2VudCIsInZlclBvcyIsIm9zcyIsInBob25lcyIsInRhYmxldHMiLCJ1YXMiLCJ1dGlscyIsIm9zczAiLCJXaW5kb3dzUGhvbmVPUyIsIldpbmRvd3NNb2JpbGVPUyIsImZpbmRNYXRjaCIsInJ1bGVzIiwiZmluZE1hdGNoZXMiLCJnZXRWZXJzaW9uU3RyIiwicHJvcGVydHlOYW1lIiwicGF0dGVybnMiLCJnZXRWZXJzaW9uIiwicHJlcGFyZVZlcnNpb25ObyIsIk5hTiIsIm51bWJlcnMiLCJOdW1iZXIiLCJpc01vYmlsZUZhbGxiYWNrIiwiaXNUYWJsZXRGYWxsYmFjayIsInByZXBhcmVEZXRlY3Rpb25DYWNoZSIsIm1heFBob25lV2lkdGgiLCJtb2JpbGUiLCJwaG9uZSIsInRhYmxldCIsInBob25lU2l6ZWQiLCJNb2JpbGVEZXRlY3QiLCJpc1Bob25lU2l6ZWQiLCJtb2JpbGVHcmFkZSIsIiRpc01vYmlsZSIsIm9zIiwiZGV0ZWN0T1MiLCJ1YSIsImdldERldmljZVNtYWxsZXJTaWRlIiwic2NyZWVuIiwiX2NhY2hlIiwidXNlckFnZW50cyIsInZlcnNpb25TdHIiLCJncmFkZSIsIl9pbXBsIiwiY2VydGlmaWNhdGlvbkZvcm0iLCJwZXJzb25OYW1lIiwicGVyc29uU3VybmFtZSIsInN1cm5hbWUiLCJzcGVjaWFsdGllc0FycmF5IiwiZm9ybVNwZWNpYWx0aWVzIiwic3BlY2lhbHRpZXNOYW1lQXJyYXkiLCJmb3JFYWNoIiwib3V0ZXJUZXh0Iiwic2V0U2VydGlnaWNhdGUiLCJzcGVjaWFsdGllcyIsImxvY2FsU3RvcmFnZSIsImdldEl0ZW0iLCJhbGVydCIsIndpbmRvd0lubmVyV2lkdGgiLCJtb2RhbENvbnRlbnQiLCJzZXJ0aWZpY2F0ZU5hbWUiLCJzZXJ0aWZpY2F0ZVN1cm5hbWUiLCJzZXJ0aWZpY2F0ZVNwZWNpYWx0aWVzIiwibGFzdEVsZW1lbnRDaGlsZCIsImxpIiwid2FzU2Nyb2xsIiwiY29sb3JzIiwiZGFya0dyZWVuIiwib3JhbmdlIiwiZGFya0JsdWUiLCJwaW5rIiwiYnJvd24iLCJuZXdDb2xvcnMiLCJzdGFydEV2c0dhbWUiLCJldnNDb2xvcnMiLCJvdXRwdXRSZWN0IiwiaW5wdXRSZWN0IiwiZXZzQ29ubmVjdGlvbkhpc3RvcnkiLCJjYW52YXMiLCJnZXRDb250ZXh0IiwiY2xlYXJSZWN0IiwiZHJhd091dHB1dCIsImlzQWNpdmVDbGVhckJ1dHRvbiIsImNvb3JkT3V0cHV0IiwiZGF0YUNvbG9yT3V0cHV0Iiwib3V0cHV0QnV0dG9uIiwiY29vcmQiLCJjbGFzc0xpc3QiLCJkcmF3TGluZXMiLCJjaGVja0NvcnJlY3RDb25uZWN0aW9uIiwibXJjb2lucyIsInNldEl0ZW0iLCJtcmNvaW5zVmlldyIsImdhbWVzQ29tcGxpdGVkIiwiZ2FtZXNDb21wbGl0ZWROZXciLCJjdHgiLCJiZWdpblBhdGgiLCJsaW5lV2lkdGgiLCJmaWxsU3R5bGUiLCJmaWxsIiwib3V0cHV0WCIsIm91dHB1dFkiLCJpbnB1dFgiLCJpbnB1dFkiLCJzdHJva2VTdHlsZSIsIm1vdmVUbyIsImxpbmVUbyIsInN0cm9rZSIsImlzQ29ycmVjdENvbm5lY3Rpb24iLCJpc0NvbXBsaXRlUHJvYyIsImlzQ29tcGxpdGVDaGlwIiwiY2hlY2tNaWNyb0NvbXBsaXRlIiwic3RhcnRQaXByZXNHYW1lIiwiYW1wbGl0dWRlIiwiZ2V0UmFuZG9tSW50IiwiY2hhbmdlc0FtcGxpdHVkZSIsImNvbnRyb2xsZXIiLCJkcmF3U3RhdGljQ3VydmVzIiwiZHJhd0N1cnZlcyIsImZyZXF1ZW5jeSIsInBtc0J1dHRvbiIsInBtc1N0YXJ0R2FtZUJ1dHRvbiIsInBtc0NvbWJpbmF0aW9uQXJyYXkiLCJzaHVmZmxlIiwicG1zQ2xpY2tzQXJyYXkiLCJwbXNOdW1iZXJPZkltcHJlc3Npb25zIiwicG1zRWRpdE1vZGUiLCJwbXNXYXNDb21wbGl0ZWQiLCJwbXNTdGFydEdhbWUiLCJwbXNDaGVja0NvbXBsaXRlIiwiY3VycmVudEluZGV4IiwidGVtcG9yYXJ5VmFsdWUiLCJyYW5kb21JbmRleCIsInBtc1Jlc2V0IiwicHV6emxlIiwicHV6emxlQmxvY2tzIiwicHV6emxlQmxvY2tFbXB0eSIsInB1enpsZVN0YXJ0QnV0dG9uIiwicHV6emxlSXNBbmltYXRlIiwicHV6emxlSXNTdGFydCIsInB1enpsZUlzQ29tcGxpdGVkIiwicHV6emxlRGF0YVBvc2l0aW9uQXJyYXkiLCJtaXhlZFB1enpsZURhdGFQb3NpdGlvbkFycmF5Iiwic2h1ZmZsZUFycmF5Iiwic29ydGVkQXJyYXkiLCJkYXRhUG9zaXRpb24iLCJjb2xPclJvdyIsInNpbWlsYXJDb2xzT3JSb3dzQXJyYXkiLCJ3aGVyZVdlR29JbmRleCIsImdldFBvaXREYXRhUG9zaXRpb24iLCJyb3dTdGFydCIsImNvbFN0YXJ0Iiwic2V0dGluZ0Jsb2Nrc1Bvc2l0aW9uc0luVGhlUG9pdEdhbWUiLCJtb3ZlUGF6emxlRWxlbWVudCIsImJsb2NrIiwiZW1wdHlNIiwiZW1wdHlOIiwiYmxvY2tIZWlnaHQiLCJjaGFuZ2VHcmlkUGFyYW1ldGVycyIsInB1enpsZUlzQ29ycmVjdGx5QXNzZW1ibGVkIiwiaXNBcnJheXNUaGVTYW1lIiwidGVyZXNIYW5kbGUiLCJ0ZXJlc0hhbmRsZUltZyIsInRlcmVzU2NyZWVuSW1nIiwidGVyZXNDb250ZW50SW1nIiwidGVyZXNBbnRlbm5hcyIsInRlcmVzQW50ZW5uYXNJbWciLCJ0ZXJlc0lzT24iLCJ0ZXJlc0FudGVubmFzSXNVcCIsInRlcmVzSXNDb21wbGl0ZWQiLCJ0ZXJlc0NoYW5nZUNvbXBsaXRlZFN0YXR1cyIsImxvY2FsU3RvcmFnZURhdGUiLCJkYXRlIiwiZ2FtZSIsInNlY3Rpb25zIiwic2VjdGlvblNwZWNpYWx0aWVzIiwibW9iaWxlRGV0ZWN0IiwiaXNNb2JpbGUiLCJpblNjcm9sbCIsImNvdW50U2VjdGlvblBvc2l0aW9uIiwic2VjdGlvbkVxIiwicmVzZXRBY3RpdmVDbGFzc0Zvckl0ZW0iLCJpdGVtRXEiLCJzY3JvbGxEaXNwbGF5Tm9uZSIsInBlcmZvbVRyYW5zaXRpb24iLCJzY3JvbGxCdXR0b25zIiwidHJhbnNpdGlvbk92ZXIiLCJtb3VzZUluZXJ0aW9uT3ZlciIsInRyYW5zZm9ybSIsInZpZXdwb3J0U2Nyb2xsZXIiLCJhY3RpdmVTZWN0aW9uIiwibmV4dFNlY3Rpb24iLCJwcmV2U2VjdGlvbiIsImRlbHRhWSIsInNjcm9sbGVyIiwiY2hlY2tQb2ludCIsInNjcm9sbERpcmVjdGlvbiIsImFjdGlvbiIsInB1c2tBbmltYXRpb24iLCJjaGVja0FuaW1FeGlzdCIsImNoYXJhY3RlciIsInN1YnRpdGxlIiwiZ2FtZXMiLCJwb2ludHMiLCJpbnN0cnVjdGlvbnMiLCJjaGVja1RleHQiLCJjaGVja0dhbWUiLCJyZXNldENoZWNrQW5pbUV4aXN0IiwiY2hhbmdlR2FtZSIsImNoYW5nZVRleHQiXSwibWFwcGluZ3MiOiIwVkFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUNBLENBQUEsU0FBQUEsTUFBQSxDQUFBQyxPQUFBLENBQUEsQ0FFQSxhQUVBLEdBQUEsT0FBQUMsQ0FBQUEsTUFBQSxtQ0FBQUEsTUFBQSxLQUFBLFFBQUEsRUFBQSxRQUFBQSxNQUFBLENBQUFDLE9BQUEsSUFBQSxRQUFBLENBQUEsQ0FFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBRCxNQUFBLENBQUFDLE9BQUEsQ0FBQUgsTUFBQSxDQUFBSSxRQUFBLENBQ0FILE9BQUEsQ0FBQUQsTUFBQSxDQUFBLElBQUEsQ0FEQSxDQUVBLFNBQUFLLENBQUEsQ0FBQSxDQUNBLEdBQUEsQ0FBQUEsQ0FBQSxDQUFBRCxRQUFBLENBQUEsQ0FDQSxLQUFBLElBQUFFLENBQUFBLEtBQUEsQ0FBQSwwQ0FBQSxDQUFBLENBQ0EsQ0FDQSxNQUFBTCxDQUFBQSxPQUFBLENBQUFJLENBQUEsQ0FBQSxDQUNBLENBUEEsQ0FRQSxDQWpCQSxJQWlCQSxDQUNBSixPQUFBLENBQUFELE1BQUEsQ0FBQSxDQUNBLENBRUE7QUFDQSxDQTFCQSxFQTBCQSxNQUFBTyxDQUFBQSxNQUFBLEdBQUEsV0FBQSxDQUFBQSxNQUFBLE9BMUJBLENBMEJBLFNBQUFBLE1BQUEsQ0FBQUMsUUFBQSxDQUFBLENBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUVBLEdBQUFDLENBQUFBLEdBQUEsQ0FBQSxFQUFBLENBRUEsR0FBQUMsQ0FBQUEsUUFBQSxDQUFBQyxNQUFBLENBQUFDLGNBQUEsQ0FFQSxHQUFBQyxDQUFBQSxNQUFBLENBQUFKLEdBQUEsQ0FBQUksS0FBQSxDQUVBLEdBQUFDLENBQUFBLElBQUEsQ0FBQUwsR0FBQSxDQUFBSyxJQUFBLENBQUEsU0FBQUMsS0FBQSxDQUFBLENBQ0EsTUFBQU4sQ0FBQUEsR0FBQSxDQUFBSyxJQUFBLENBQUFFLElBQUEsQ0FBQUQsS0FBQSxDQUFBLENBQ0EsQ0FGQSxDQUVBLFNBQUFBLEtBQUEsQ0FBQSxDQUNBLE1BQUFOLENBQUFBLEdBQUEsQ0FBQVEsTUFBQSxDQUFBQyxLQUFBLENBQUEsRUFBQSxDQUFBSCxLQUFBLENBQUEsQ0FDQSxDQUpBLENBT0EsR0FBQUksQ0FBQUEsSUFBQSxDQUFBVixHQUFBLENBQUFVLElBQUEsQ0FFQSxHQUFBQyxDQUFBQSxPQUFBLENBQUFYLEdBQUEsQ0FBQVcsT0FBQSxDQUVBLEdBQUFDLENBQUFBLFVBQUEsQ0FBQSxFQUFBLENBRUEsR0FBQUMsQ0FBQUEsUUFBQSxDQUFBRCxVQUFBLENBQUFDLFFBQUEsQ0FFQSxHQUFBQyxDQUFBQSxNQUFBLENBQUFGLFVBQUEsQ0FBQUcsY0FBQSxDQUVBLEdBQUFDLENBQUFBLFVBQUEsQ0FBQUYsTUFBQSxDQUFBRCxRQUFBLENBRUEsR0FBQUksQ0FBQUEsb0JBQUEsQ0FBQUQsVUFBQSxDQUFBVCxJQUFBLENBQUFMLE1BQUEsQ0FBQSxDQUVBLEdBQUFnQixDQUFBQSxPQUFBLENBQUEsRUFBQSxDQUVBLEdBQUFDLENBQUFBLFVBQUEsQ0FBQSxRQUFBQSxDQUFBQSxVQUFBLENBQUFDLEdBQUEsQ0FBQSxDQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBQSxPQUFBQSxDQUFBQSxHQUFBLEdBQUEsVUFBQSxFQUFBLE1BQUFBLENBQUFBLEdBQUEsQ0FBQUMsUUFBQSxHQUFBLFFBQUEsQ0FDQSxDQVBBLENBVUEsR0FBQUMsQ0FBQUEsUUFBQSxDQUFBLFFBQUFBLENBQUFBLFFBQUEsQ0FBQUYsR0FBQSxDQUFBLENBQ0EsTUFBQUEsQ0FBQUEsR0FBQSxFQUFBLElBQUEsRUFBQUEsR0FBQSxHQUFBQSxHQUFBLENBQUF0QixNQUFBLENBQ0EsQ0FGQSxDQUtBLEdBQUFILENBQUFBLFFBQUEsQ0FBQUcsTUFBQSxDQUFBSCxRQUFBLENBSUEsR0FBQTRCLENBQUFBLHlCQUFBLENBQUEsQ0FDQUMsSUFBQSxDQUFBLElBREEsQ0FFQUMsR0FBQSxDQUFBLElBRkEsQ0FHQUMsS0FBQSxDQUFBLElBSEEsQ0FJQUMsUUFBQSxDQUFBLElBSkEsQ0FBQSxDQU9BLFFBQUFDLENBQUFBLE9BQUEsQ0FBQUMsSUFBQSxDQUFBQyxJQUFBLENBQUFDLEdBQUEsQ0FBQSxDQUNBQSxHQUFBLENBQUFBLEdBQUEsRUFBQXBDLFFBQUEsQ0FFQSxHQUFBcUMsQ0FBQUEsQ0FBQSxDQUFBQyxHQUFBLENBQ0FDLE1BQUEsQ0FBQUgsR0FBQSxDQUFB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QUMsV0FBQSxDQUFBLE9BQUEsQ0FBQUMsVUFBQSxDQUFBLENBQUEsU0FBQSxDQUFBLFVBQUEsQ0FBQSxPQUFBLENBQUEsT0FBQSxDQUFBLEtBQUEsQ0FBQSxNQUFBLENBQUEsTUFBQSxDQUFBLFFBQUEsQ0FBQSxXQUFBLENBQUEsU0FBQSxDQUFBLFVBQUEsQ0FBQSxVQUFBLENBQUEsQ0FBQUMsZUFBQSxDQUFBLENBQUEsS0FBQSxDQUFBLEtBQUEsQ0FBQSxLQUFBLENBQUEsS0FBQSxDQUFBLEtBQUEsQ0FBQSxLQUFBLENBQUEsS0FBQSxDQUFBLEtBQUEsQ0FBQSxLQUFBLENBQUEsS0FBQSxDQUFBLEtBQUEsQ0FBQSxLQUFBLENBQUEsQ0FBQUMsUUFBQSxDQUFBLENBQUEsUUFBQSxDQUFBLFFBQUEsQ0FBQSxTQUFBLENBQUEsV0FBQSxDQUFBLFVBQUEsQ0FBQSxRQUFBLENBQUEsVUFBQSxDQUFBLENBQUFDLGFBQUEsQ0FBQSxDQUFBLEtBQUEsQ0FBQSxLQUFBLENBQUEsS0FBQSxDQUFBLEtBQUEsQ0FBQSxLQUFBLENBQUEsS0FBQSxDQUFBLEtBQUEsQ0FBQSxDQUFBQyxXQUFBLENBQUEsQ0FBQSxJQUFBLENBQUEsSUFBQSxDQUFBLElBQUEsQ0FBQSxJQUFBLENBQUEsSUFBQSxDQUFBLElBQUEsQ0FBQSxJQUFBLENBQUEsQ0FBQUMsVUFBQSxDQUFBLElBQUEsQ0FBQUMsVUFBQSxDQUFBLFVBQUEsQ0FBQUMsUUFBQSxDQUFBLENBQUEsQ0FBQUMsS0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBQyxrQkFBQSxDQUFBLENBQUEsQ0FBQSxDQUFBQyxVQUFBLENBQUEsRUFBQSxDQUFBLENBQUEsS0FBQUMsU0FBQSxDQUFBLENBQUFDLE1BQUEsQ0FBQSxPQUFBLENBQUFDLFFBQUEsQ0FBQSxRQUFBLENBQUFDLFdBQUEsQ0FBQSxFQUFBLENBQUFDLFdBQUEsQ0FBQSxJQUFBLENBQUFDLFVBQUEsQ0FBQSxFQUFBLENBQUFDLFVBQUEsQ0FBQSxLQUFBLENBQUFDLFdBQUEsQ0FBQSxFQUFBLENBQUFDLGVBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQUMsZ0JBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQUMsc0JBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQUMsV0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBQyxXQUFBLENBQUEsQ0FBQSxDQUFBLENBQUFDLFVBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQUMsU0FBQSxDQUFBLFdBQUEsQ0FBQUMsZUFBQSxDQUFBLENBQUEsQ0FBQSxDQUFBQyxpQkFBQSxDQUFBLENBQUEsQ0FBQSxDQUFBQyxRQUFBLENBQUEsQ0FBQSxDQUFBLENBQUFDLGFBQUEsQ0FBQSxLQUFBQyxXQUFBLENBQUFDLGVBQUEsQ0FBQSxLQUFBLENBQUFDLE9BQUEsQ0FBQSxJQUFBLENBQUFDLE9BQUEsQ0FBQSxJQUFBLENBQUFoWCxRQUFBLENBQUEsTUFBQSxDQUFBaVgsYUFBQSxDQUFBLElBQUEsQ0FBQUMsVUFBQSxDQUFBLElBQUEsQ0FBQUMsUUFBQSxDQUFBLElBQUEsQ0FBQUMsaUJBQUEsQ0FBQSxJQUFBLENBQUFDLE9BQUEsQ0FBQSxJQUFBLENBQUFDLGNBQUEsQ0FBQSxDQUFBLENBQUFDLGdCQUFBLENBQUEsQ0FBQSxDQUFBQyxVQUFBLENBQUEsQ0FBQSxDQUFBQyxhQUFBLENBQUEsRUFBQSxDQUFBQyxRQUFBLENBQUEsRUFBQSxDQUFBQyxTQUFBLENBQUEsRUFBQSxDQUFBQyxjQUFBLENBQUEsQ0FBQSxDQUFBLENBQUFDLGVBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQUMsUUFBQSxDQUFBLENBQUEsQ0FBQSxDQUFBOWlDLFFBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBc2MsQ0FBQSxDQUFBampCLE1BQUEsQ0FBQSxLQUFBcW5DLFNBQUEsQ0FBQSxLQUFBaEIsUUFBQSxDQUFBLEVBQUEsQ0FBQSxDQUFBLENBQUEsS0FBQUEsUUFBQSxDQUFBcUQsRUFBQSxDQUFBem1CLENBQUEsQ0FBQWpqQixNQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsRUFBQSxDQUFBLEtBQUFxbUMsUUFBQSxDQUFBLEVBQUEsQ0FBQSxDQUFBLENBQUEsS0FBQUEsUUFBQSxDQUFBLE9BQUEsRUFBQXBqQixDQUFBLENBQUFqakIsTUFBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLEVBQUEsQ0FBQSxLQUFBcW1DLFFBQUEsQ0FBQXFELEVBQUEsQ0FBQSxDQUFBLEtBQUFDLEtBQUEsQ0FBQTcxQixDQUFBLENBQUFtUCxDQUFBLENBQUEsWUFBQSxLQUFBMmlCLFVBQUEsQ0FBQSw2RkFBQSxDQUFBLENBQUEsQ0FBQSxTQUFBOXhCLENBQUFBLENBQUEsQ0FBQTlNLENBQUEsQ0FBQSxDQUFBLEdBQUEvSixDQUFBQSxDQUFBLENBQUEsZ0ZBQUEsQ0FBQSxNQUFBK0osQ0FBQUEsQ0FBQSxDQUFBd2IsRUFBQSxDQUFBLFVBQUEsQ0FBQXZsQixDQUFBLENBQUEsVUFBQSxDQUFBZ21CLENBQUEsQ0FBQSxJQUFBLENBQUEsQ0FBQWlWLFdBQUEsQ0FBQSxnQkFBQSxFQUFBLENBQUEsQ0FBQSxHQUFBLEtBQUF6dEIsU0FBQSxDQUFBN08sT0FBQSxDQUFBLG9CQUFBLENBQUEsRUFBQXFuQixDQUFBLENBQUEsSUFBQSxDQUFBLENBQUFpVixXQUFBLENBQUEsMEJBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxHQUFBLEtBQUF6dEIsU0FBQSxDQUFBN08sT0FBQSxDQUFBLG9CQUFBLENBQUEsRUFBQXFuQixDQUFBLENBQUEsSUFBQSxDQUFBLENBQUFpVixXQUFBLENBQUEsMEJBQUEsQ0FBQSxDQUFBLENBQUEsRUFBQTFWLEVBQUEsQ0FBQSxXQUFBLENBQUF2bEIsQ0FBQSxDQUFBMnNDLENBQUEsQ0FBQSxDQUFBLFNBQUFBLENBQUFBLENBQUEsRUFBQSxDQUFBM21CLENBQUEsQ0FBQTRtQixVQUFBLENBQUFDLHFCQUFBLENBQUEzaUMsQ0FBQSxDQUFBNGlDLE1BQUEsQ0FBQTVpQyxDQUFBLENBQUF3aUMsS0FBQSxDQUFBcjdCLE1BQUEsR0FBQSxDQUFBLENBQUEsQ0FBQW5ILENBQUEsQ0FBQWdFLEtBQUEsQ0FBQSxDQUFBLENBQUEsSUFBQThYLENBQUEsQ0FBQSxJQUFBLENBQUEsQ0FBQXpOLE9BQUEsQ0FBQSx5QkFBQSxFQUFBekssSUFBQSxDQUFBLEdBQUEsRUFBQW10QixXQUFBLENBQUEsZ0JBQUEsRUFBQWpWLENBQUEsQ0FBQSxJQUFBLENBQUEsQ0FBQTRVLFFBQUEsQ0FBQSxnQkFBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLEdBQUEsS0FBQXB0QixTQUFBLENBQUE3TyxPQUFBLENBQUEsb0JBQUEsQ0FBQSxFQUFBcW5CLENBQUEsQ0FBQSxJQUFBLENBQUEsQ0FBQTRVLFFBQUEsQ0FBQSwwQkFBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLEdBQUEsS0FBQXB0QixTQUFBLENBQUE3TyxPQUFBLENBQUEsb0JBQUEsQ0FBQSxFQUFBcW5CLENBQUEsQ0FBQSxJQUFBLENBQUEsQ0FBQTRVLFFBQUEsQ0FBQSwwQkFBQSxDQUFBLEVBQUEsU0FBQTF6QixDQUFBQSxDQUFBLENBQUE2QyxDQUFBLENBQUEvSixDQUFBLENBQUEsQ0FBQWdtQixDQUFBLENBQUFqakIsTUFBQSxDQUFBZ0gsQ0FBQSxDQUFBL0osQ0FBQSxFQUFBLElBQUEsR0FBQWk5QixDQUFBQSxDQUFBLEdBQUFqOUIsQ0FBQUEsQ0FBQSxFQUFBLE1BQUFBLENBQUEsQ0FBQWk5QixDQUFBLENBQUEsR0FBQWx6QixDQUFBLENBQUFrekIsQ0FBQSxDQUFBLENBQUFqOUIsQ0FBQSxDQUFBaTlCLENBQUEsQ0FBQSxFQUFBLENBQUEsTUFBQWx6QixDQUFBQSxDQUFBLENBQUEsU0FBQWdqQyxDQUFBQSxDQUFBLENBQUEvbUIsQ0FBQSxDQUFBLENBQUEsTUFBQSxXQUFBLENBQUEsR0FBQWpjLENBQUFBLENBQUEsQ0FBQSxLQUFBaWpDLE9BQUEsQ0FBQS9zQyxHQUFBLEVBQUEsQ0FBQStsQixDQUFBLENBQUF2bkIsS0FBQSxDQUFBLElBQUEsQ0FBQXlELFNBQUEsRUFBQSxLQUFBK3FDLFFBQUEsRUFBQSxDQUFBbGpDLENBQUEsR0FBQSxLQUFBaWpDLE9BQUEsQ0FBQS9zQyxHQUFBLEVBQUEsRUFBQSxLQUFBaXRDLFFBQUEsQ0FBQSxRQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQWxuQixDQUFBLENBQUFtbkIsRUFBQSxDQUFBbm5CLENBQUEsQ0FBQW1uQixFQUFBLEVBQUEsRUFBQSxDQUFBbm5CLENBQUEsQ0FBQW1uQixFQUFBLENBQUF2c0MsT0FBQSxDQUFBLFFBQUEsQ0FBQSxHQUFBd3NDLENBQUFBLENBQUEsQ0FBQSxDQUFBLENBQUFwMUIsQ0FBQSxDQUFBeFUsS0FBQSxDQUFBdEMsU0FBQSxDQUFBOUMsS0FBQSxDQUFBNG5CLENBQUEsQ0FBQWdILFNBQUEsQ0FBQSxTQUFBampCLENBQUEsQ0FBQSxDQUFBLE1BQUEsVUFBQS9KLENBQUEsQ0FBQSxDQUFBLEdBQUFpOUIsQ0FBQUEsQ0FBQSxDQUFBcG1CLENBQUEsQ0FBQTgxQixDQUFBLENBQUEsSUFBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxPQUFBOTFCLENBQUEsQ0FBQTdXLENBQUEsQ0FBQTJzQyxDQUFBLENBQUEsQ0FBQSxDQUFBQSxDQUFBLEVBQUEsRUFBQSxHQUFBLENBQUExUCxDQUFBLENBQUFqWCxDQUFBLENBQUE1RixLQUFBLENBQUF2SixDQUFBLENBQUEsUUFBQSxDQUFBLENBQUFvbUIsQ0FBQSxFQUFBQSxDQUFBLENBQUFuakIsTUFBQSxFQUFBa00sQ0FBQSxDQUFBblAsQ0FBQSxDQUFBLENBQUF1bEIsY0FBQSxDQUFBLFFBQUEsQ0FBQSxDQUFBLE9BQUFsMUIsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBNkMsQ0FBQSxDQUFBL0osQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQWdtQixDQUFBLENBQUFnSCxTQUFBLENBQUEsQ0FBQWhILENBQUEsQ0FBQXFuQixNQUFBLENBQUEsU0FBQXRqQyxDQUFBLENBQUEvSixDQUFBLENBQUFpOUIsQ0FBQSxDQUFBLENBQUEsR0FBQXBtQixDQUFBQSxDQUFBLENBQUE4MUIsQ0FBQSxDQUFBemxDLENBQUEsQ0FBQTZsQyxDQUFBLENBQUEsRUFBQSxDQUFBSyxDQUFBLENBQUFyakMsQ0FBQSxDQUFBMUUsS0FBQSxDQUFBLEdBQUEsRUFBQSxDQUFBLENBQUEsQ0FBQTBFLENBQUEsQ0FBQUEsQ0FBQSxDQUFBMUUsS0FBQSxDQUFBLEdBQUEsRUFBQSxDQUFBLENBQUEsQ0FBQSxHQUFBMlMsQ0FBQUEsQ0FBQSxDQUFBbzFCLENBQUEsQ0FBQSxHQUFBLENBQUFyakMsQ0FBQSxDQUFBLE1BQUFrekIsQ0FBQUEsQ0FBQSxHQUFBQSxDQUFBLENBQUFqOUIsQ0FBQSxDQUFBQSxDQUFBLENBQUFnbUIsQ0FBQSxDQUFBc25CLE1BQUEsQ0FBQSxDQUFBdG5CLENBQUEsQ0FBQXZpQixPQUFBLENBQUF3NUIsQ0FBQSxJQUFBQSxDQUFBLENBQUFqWCxDQUFBLENBQUFqakIsTUFBQSxDQUFBdEUsS0FBQSxDQUFBLElBQUEsQ0FBQSxDQUFBLEVBQUEsRUFBQUQsTUFBQSxDQUFBeStCLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQWpYLENBQUEsQ0FBQTdXLElBQUEsQ0FBQSxHQUFBLEVBQUE2SSxDQUFBLENBQUF6UyxXQUFBLEVBQUEsRUFBQSxTQUFBd0UsQ0FBQSxDQUFBLENBQUEsTUFBQSxDQUFBLENBQUFpYyxDQUFBLENBQUF4RyxJQUFBLENBQUF6VixDQUFBLENBQUFpTyxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUFnTyxDQUFBLENBQUFvbkIsQ0FBQSxDQUFBLENBQUFwbkIsQ0FBQSxDQUFBb25CLENBQUEsQ0FBQSxFQUFBLEVBQUEsQ0FBQXYyQixDQUFBLENBQUFtUCxDQUFBLENBQUFvbkIsQ0FBQSxDQUFBLENBQUFyakMsQ0FBQSxDQUFBLENBQUE0aUMsQ0FBQSxDQUFBM21CLENBQUEsQ0FBQW9uQixDQUFBLENBQUEsQ0FBQXJqQyxDQUFBLEVBQUEsU0FBQWljLENBQUEsQ0FBQWpjLENBQUEsQ0FBQSxDQUFBLE1BQUEsTUFBQXdqQyxhQUFBLEVBQUFyckMsU0FBQSxDQUFBYixNQUFBLEVBQUEsS0FBQWtzQyxhQUFBLENBQUF2bkIsQ0FBQSxDQUFBamMsQ0FBQSxDQUFBLENBQUEsSUFBQSxFQUFBLEVBQUEsR0FBQTRpQyxDQUFBQSxDQUFBLENBQUEzbUIsQ0FBQSxDQUFBamMsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBaWMsQ0FBQSxDQUFBampCLE1BQUEsQ0FBQTRwQyxDQUFBLENBQUE5MUIsQ0FBQSxDQUFBLENBQUFqVyxPQUFBLENBQUFxOEIsQ0FBQSxDQUFBcjhCLE9BQUEsQ0FBQTRzQyxNQUFBLENBQUF4bkIsQ0FBQSxDQUFBampCLE1BQUEsQ0FBQSxFQUFBLENBQUFrNkIsQ0FBQSxDQUFBLENBQUF3USxrQkFBQSxDQUFBLEVBQUEsQ0FBQSxDQUFBLENBQUF2bUMsQ0FBQSxDQUFBLEdBQUFsSCxDQUFBQSxDQUFBLEVBQUEsQ0FBQWtILENBQUEsQ0FBQWxFLE9BQUEsQ0FBQWdqQixDQUFBLENBQUFxbkIsTUFBQSxDQUFBdHFDLE1BQUEsQ0FBQSxFQUFBLENBQUFtRSxDQUFBLENBQUFsRSxPQUFBLENBQUEsQ0FBQWdqQixDQUFBLENBQUFsa0IsSUFBQSxDQUFBbTdCLENBQUEsQ0FBQSxTQUFBbHpCLENBQUEsQ0FBQWt6QixDQUFBLENBQUEsQ0FBQSxNQUFBalgsQ0FBQUEsQ0FBQSxDQUFBN21CLFVBQUEsQ0FBQTg5QixDQUFBLEdBQUE4UCxDQUFBLENBQUFoakMsQ0FBQSxDQUFBLENBQUEsVUFBQSxDQUFBLFFBQUFpYyxDQUFBQSxDQUFBLEVBQUEsQ0FBQSxNQUFBaG1CLENBQUFBLENBQUEsQ0FBQWtCLFNBQUEsQ0FBQTZJLENBQUEsRUFBQXRMLEtBQUEsQ0FBQSxJQUFBLENBQUF5RCxTQUFBLENBQUEsQ0FBQSxTQUFBMlUsQ0FBQUEsQ0FBQSxDQUFBbVAsQ0FBQSxDQUFBLENBQUEsTUFBQWhtQixDQUFBQSxDQUFBLENBQUFrQixTQUFBLENBQUE2SSxDQUFBLEVBQUF0TCxLQUFBLENBQUEsSUFBQSxDQUFBdW5CLENBQUEsQ0FBQSxDQUFBLE9BQUEsV0FBQSxDQUFBLEdBQUFqYyxDQUFBQSxDQUFBLENBQUEvSixDQUFBLENBQUEsS0FBQTB0QyxNQUFBLENBQUFmLENBQUEsQ0FBQSxLQUFBZ0IsV0FBQSxDQUFBLE1BQUEsTUFBQUQsTUFBQSxDQUFBMW5CLENBQUEsQ0FBQSxLQUFBMm5CLFdBQUEsQ0FBQTkyQixDQUFBLENBQUE5TSxDQUFBLENBQUFrekIsQ0FBQSxDQUFBeCtCLEtBQUEsQ0FBQSxJQUFBLENBQUF5RCxTQUFBLENBQUEsQ0FBQSxLQUFBd3JDLE1BQUEsQ0FBQTF0QyxDQUFBLENBQUEsS0FBQTJ0QyxXQUFBLENBQUFoQixDQUFBLENBQUE1aUMsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLEVBQUEsQ0FBQSxJQUFBLEVBQUEsR0FBQWdqQyxDQUFBLENBQUFoakMsQ0FBQSxDQUFBLENBQUFrekIsQ0FBQSxDQUFBLElBQUEsRUFBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEwUCxDQUFBLENBQUF6ckMsU0FBQSxDQUFBOGtCLENBQUEsQ0FBQXFuQixNQUFBLENBQUF0cUMsTUFBQSxDQUFBbUUsQ0FBQSxDQUFBLENBQUEwbUMsaUJBQUEsQ0FBQS8yQixDQUFBLENBQUEzUCxDQUFBLENBQUEwbUMsaUJBQUEsRUFBQTdqQyxDQUFBLENBQUFBLENBQUEsQ0FBQSxDQUFBZ2pDLENBQUEsQ0FBQSxDQUFBM3JDLFdBQUEsQ0FBQXVyQyxDQUFBLENBQUE1L0IsU0FBQSxDQUFBcWdDLENBQUEsQ0FBQVMsVUFBQSxDQUFBOWpDLENBQUEsQ0FBQStqQyxjQUFBLENBQUE5MUIsQ0FBQSxDQUFBLENBQUEsQ0FBQW5CLENBQUEsRUFBQW1QLENBQUEsQ0FBQWxrQixJQUFBLENBQUErVSxDQUFBLENBQUE0MkIsa0JBQUEsQ0FBQSxTQUFBMWpDLENBQUEsQ0FBQS9KLENBQUEsQ0FBQSxDQUFBLEdBQUFpOUIsQ0FBQUEsQ0FBQSxDQUFBajlCLENBQUEsQ0FBQWtCLFNBQUEsQ0FBQThrQixDQUFBLENBQUFxbkIsTUFBQSxDQUFBcFEsQ0FBQSxDQUFBbHdCLFNBQUEsQ0FBQSxHQUFBLENBQUFrd0IsQ0FBQSxDQUFBNFEsVUFBQSxDQUFBbEIsQ0FBQSxDQUFBM3NDLENBQUEsQ0FBQXd0QyxNQUFBLEVBQUEsQ0FBQSxFQUFBLE1BQUEzMkIsQ0FBQUEsQ0FBQSxDQUFBNDJCLGtCQUFBLEVBQUF6dEMsQ0FBQSxDQUFBeXRDLGtCQUFBLENBQUEvdUMsSUFBQSxDQUFBaXVDLENBQUEsQ0FBQSxDQUFBM21CLENBQUEsQ0FBQXFuQixNQUFBLENBQUFVLE1BQUEsQ0FBQWhrQyxDQUFBLENBQUE0aUMsQ0FBQSxDQUFBLENBQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEzbUIsQ0FBQSxDQUFBcW5CLE1BQUEsQ0FBQXRxQyxNQUFBLENBQUEsU0FBQWdILENBQUEsQ0FBQSxDQUFBLElBQUEsR0FBQS9KLENBQUFBLENBQUEsQ0FBQWk5QixDQUFBLENBQUFwbUIsQ0FBQSxDQUFBbUIsQ0FBQSxDQUFBelosSUFBQSxDQUFBMkQsU0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBeXFDLENBQUEsQ0FBQSxDQUFBLENBQUF6bEMsQ0FBQSxDQUFBMlAsQ0FBQSxDQUFBeFYsTUFBQSxDQUFBNkYsQ0FBQSxDQUFBeWxDLENBQUEsQ0FBQUEsQ0FBQSxFQUFBLEVBQUEsSUFBQTNzQyxDQUFBLEdBQUE2VyxDQUFBQSxDQUFBLENBQUE4MUIsQ0FBQSxDQUFBLEVBQUExUCxDQUFBLENBQUFwbUIsQ0FBQSxDQUFBODFCLENBQUEsQ0FBQSxDQUFBM3NDLENBQUEsQ0FBQSxDQUFBNlcsQ0FBQSxDQUFBODFCLENBQUEsQ0FBQSxDQUFBNXRDLGNBQUEsQ0FBQWlCLENBQUEsR0FBQSxJQUFBLEVBQUEsR0FBQWk5QixDQUFBLEdBQUFsekIsQ0FBQSxDQUFBL0osQ0FBQSxDQUFBLENBQUFnbUIsQ0FBQSxDQUFBemlCLGFBQUEsQ0FBQTA1QixDQUFBLEVBQUFqWCxDQUFBLENBQUF6aUIsYUFBQSxDQUFBd0csQ0FBQSxDQUFBL0osQ0FBQSxDQUFBLEVBQUFnbUIsQ0FBQSxDQUFBcW5CLE1BQUEsQ0FBQXRxQyxNQUFBLENBQUEsRUFBQSxDQUFBZ0gsQ0FBQSxDQUFBL0osQ0FBQSxDQUFBLENBQUFpOUIsQ0FBQSxDQUFBLENBQUFqWCxDQUFBLENBQUFxbkIsTUFBQSxDQUFBdHFDLE1BQUEsQ0FBQSxFQUFBLENBQUFrNkIsQ0FBQSxDQUFBLENBQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxNQUFBbHpCLENBQUFBLENBQUEsQ0FBQSxDQUFBLENBQUFpYyxDQUFBLENBQUFxbkIsTUFBQSxDQUFBVSxNQUFBLENBQUEsU0FBQWhrQyxDQUFBLENBQUEvSixDQUFBLENBQUEsQ0FBQSxHQUFBaTlCLENBQUFBLENBQUEsQ0FBQWo5QixDQUFBLENBQUFrQixTQUFBLENBQUE0c0MsY0FBQSxFQUFBL2pDLENBQUEsQ0FBQWljLENBQUEsQ0FBQWhsQixFQUFBLENBQUErSSxDQUFBLEVBQUEsU0FBQThNLENBQUEsQ0FBQSxDQUFBLEdBQUE4MUIsQ0FBQUEsQ0FBQSxDQUFBLFVBQUEsTUFBQTkxQixDQUFBQSxDQUFBLENBQUEzUCxDQUFBLENBQUE4USxDQUFBLENBQUF6WixJQUFBLENBQUEyRCxTQUFBLENBQUEsQ0FBQSxDQUFBLENBQUE2cUMsQ0FBQSxDQUFBLElBQUEsQ0FBQSxNQUFBSixDQUFBQSxDQUFBLENBQUEsS0FBQXRyQyxNQUFBLEVBQUEsYUFBQXdWLENBQUEsQ0FBQSxLQUFBL1UsSUFBQSxDQUFBLFVBQUEsQ0FBQSxHQUFBOUIsQ0FBQUEsQ0FBQSxDQUFBMnNDLENBQUEsQ0FBQTNtQixDQUFBLENBQUF4RyxJQUFBLENBQUEsSUFBQSxDQUFBeWQsQ0FBQSxDQUFBLENBQUEsTUFBQSxhQUFBcG1CLENBQUEsRUFBQWsyQixDQUFBLENBQUFKLENBQUEsQ0FBQSxDQUFBLENBQUEsRUFBQUEsQ0FBQSxDQUFBM21CLENBQUEsQ0FBQTdtQixVQUFBLENBQUF3dEMsQ0FBQSxDQUFBOTFCLENBQUEsQ0FBQSxHQUFBLE1BQUFBLENBQUEsQ0FBQW0zQixNQUFBLENBQUEsQ0FBQSxDQUFBLEVBQUFodUMsQ0FBQSxDQUFBMnNDLENBQUEsQ0FBQTkxQixDQUFBLENBQUEsQ0FBQXBZLEtBQUEsQ0FBQWt1QyxDQUFBLENBQUF6bEMsQ0FBQSxDQUFBLENBQUFsSCxDQUFBLEdBQUEyc0MsQ0FBQSxFQUFBLElBQUEsRUFBQSxHQUFBM3NDLENBQUEsRUFBQStzQyxDQUFBLENBQUEvc0MsQ0FBQSxFQUFBQSxDQUFBLENBQUFtQixNQUFBLENBQUE0ckMsQ0FBQSxDQUFBdHJDLFNBQUEsQ0FBQXpCLENBQUEsQ0FBQXVCLEdBQUEsRUFBQSxDQUFBLENBQUF2QixDQUFBLENBQUEsQ0FBQSxDQUFBLEVBQUEsSUFBQSxFQUFBLEVBQUFnbUIsQ0FBQSxDQUFBaGlCLEtBQUEsQ0FBQSxtQkFBQTZTLENBQUEsQ0FBQSxRQUFBLENBQUE5TSxDQUFBLENBQUEsa0JBQUEsQ0FBQSxDQUFBaWMsQ0FBQSxDQUFBaGlCLEtBQUEsQ0FBQSwwQkFBQStGLENBQUEsQ0FBQSw0QkFBQSxDQUFBLDRCQUFBLENBQUE4TSxDQUFBLENBQUEsR0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUFrMkIsQ0FBQSxDQUFBLElBQUEsRUFBQSxFQUFBN2xDLENBQUEsQ0FBQTdGLE1BQUEsR0FBQXdWLENBQUEsQ0FBQW1QLENBQUEsQ0FBQXFuQixNQUFBLENBQUF0cUMsTUFBQSxDQUFBdEUsS0FBQSxDQUFBLElBQUEsQ0FBQSxDQUFBb1ksQ0FBQSxFQUFBclksTUFBQSxDQUFBMEksQ0FBQSxDQUFBLENBQUEsRUFBQSxLQUFBcEYsSUFBQSxDQUFBLFVBQUEsQ0FBQSxHQUFBaUksQ0FBQUEsQ0FBQSxDQUFBaWMsQ0FBQSxDQUFBeEcsSUFBQSxDQUFBLElBQUEsQ0FBQXlkLENBQUEsQ0FBQSxDQUFBbHpCLENBQUEsRUFBQUEsQ0FBQSxDQUFBdVosTUFBQSxDQUFBek0sQ0FBQSxFQUFBLEVBQUEsRUFBQTlNLENBQUEsQ0FBQWtrQyxLQUFBLEVBQUFsa0MsQ0FBQSxDQUFBa2tDLEtBQUEsRUFBQSxFQUFBam9CLENBQUEsQ0FBQXhHLElBQUEsQ0FBQSxJQUFBLENBQUF5ZCxDQUFBLENBQUEsR0FBQWo5QixDQUFBQSxDQUFBLENBQUE2VyxDQUFBLENBQUEsSUFBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBazJCLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBL21CLENBQUEsQ0FBQXNuQixNQUFBLENBQUEsVUFBQSxDQUFBLENBQUEsQ0FBQXRuQixDQUFBLENBQUFzbkIsTUFBQSxDQUFBRyxrQkFBQSxDQUFBLEVBQUEsQ0FBQXpuQixDQUFBLENBQUFzbkIsTUFBQSxDQUFBcHNDLFNBQUEsQ0FBQSxDQUFBMnNDLFVBQUEsQ0FBQSxRQUFBLENBQUFELGlCQUFBLENBQUEsRUFBQSxDQUFBTSxjQUFBLENBQUEsT0FBQSxDQUFBbHJDLE9BQUEsQ0FBQSxDQUFBNjNCLE9BQUEsQ0FBQSxFQUFBLENBQUFueEIsUUFBQSxDQUFBLENBQUEsQ0FBQSxDQUFBNGMsTUFBQSxDQUFBLElBQUEsQ0FBQSxDQUFBaW5CLGFBQUEsQ0FBQSx1QkFBQXhqQyxDQUFBLENBQUEvSixDQUFBLENBQUEsQ0FBQUEsQ0FBQSxDQUFBZ21CLENBQUEsQ0FBQWhtQixDQUFBLEVBQUEsS0FBQWt1QyxjQUFBLEVBQUEsSUFBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsS0FBQWxCLE9BQUEsQ0FBQWhuQixDQUFBLENBQUFobUIsQ0FBQSxDQUFBLENBQUEsS0FBQW11QyxJQUFBLENBQUFmLENBQUEsRUFBQSxDQUFBLEtBQUFnQixjQUFBLENBQUEsSUFBQSxLQUFBUCxVQUFBLENBQUEsS0FBQU0sSUFBQSxDQUFBLEtBQUFFLFFBQUEsQ0FBQXJvQixDQUFBLEVBQUEsQ0FBQSxLQUFBc29CLFNBQUEsQ0FBQXRvQixDQUFBLEVBQUEsQ0FBQSxLQUFBdW9CLFNBQUEsQ0FBQXZvQixDQUFBLEVBQUEsQ0FBQSxLQUFBd29CLG9CQUFBLENBQUEsRUFBQSxDQUFBeHVDLENBQUEsR0FBQSxJQUFBLEdBQUFnbUIsQ0FBQSxDQUFBeEcsSUFBQSxDQUFBeGYsQ0FBQSxDQUFBLEtBQUE4dEMsY0FBQSxDQUFBLElBQUEsRUFBQSxLQUFBVyxHQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsS0FBQXpCLE9BQUEsQ0FBQSxDQUFBbHpCLE1BQUEsQ0FBQSxnQkFBQWtNLENBQUEsQ0FBQSxDQUFBQSxDQUFBLENBQUEzaUIsTUFBQSxHQUFBckQsQ0FBQSxFQUFBLEtBQUEwdUMsT0FBQSxFQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxLQUFBL3dDLFFBQUEsQ0FBQXFvQixDQUFBLENBQUFobUIsQ0FBQSxDQUFBdWhCLEtBQUEsQ0FBQXZoQixDQUFBLENBQUF3SyxhQUFBLENBQUF4SyxDQUFBLENBQUFyQyxRQUFBLEVBQUFxQyxDQUFBLENBQUEsQ0FBQSxLQUFBbEMsTUFBQSxDQUFBa29CLENBQUEsQ0FBQSxLQUFBcm9CLFFBQUEsQ0FBQSxDQUFBLEVBQUF5UCxXQUFBLEVBQUEsS0FBQXpQLFFBQUEsQ0FBQSxDQUFBLEVBQUF1K0IsWUFBQSxDQUFBLENBQUEsQ0FBQSxLQUFBbDVCLE9BQUEsQ0FBQWdqQixDQUFBLENBQUFxbkIsTUFBQSxDQUFBdHFDLE1BQUEsQ0FBQSxFQUFBLENBQUEsS0FBQUMsT0FBQSxDQUFBLEtBQUEyckMsaUJBQUEsRUFBQSxDQUFBNWtDLENBQUEsQ0FBQSxDQUFBLEtBQUE2a0MsT0FBQSxFQUFBLENBQUEsS0FBQTVyQyxPQUFBLENBQUEwRyxRQUFBLEVBQUEsS0FBQW1sQyxrQkFBQSxDQUFBLEtBQUE3ckMsT0FBQSxDQUFBMEcsUUFBQSxDQUFBLENBQUEsS0FBQXdqQyxRQUFBLENBQUEsUUFBQSxDQUFBLElBQUEsQ0FBQSxLQUFBNEIsbUJBQUEsRUFBQSxDQUFBLENBQUEsS0FBQWIsS0FBQSxFQUFBLENBQUEsQ0FBQSxDQUFBVSxpQkFBQSxDQUFBLDRCQUFBLENBQUEsTUFBQSxFQUFBLENBQUEsQ0FBQSxDQUFBRyxtQkFBQSxDQUFBOW9CLENBQUEsQ0FBQTloQixJQUFBLENBQUEwcUMsT0FBQSxDQUFBNW9CLENBQUEsQ0FBQTloQixJQUFBLENBQUErcEMsS0FBQSxDQUFBam9CLENBQUEsQ0FBQTloQixJQUFBLENBQUF3cUMsT0FBQSxDQUFBLGtCQUFBLENBQUEsR0FBQTNrQyxDQUFBQSxDQUFBLENBQUEsSUFBQSxDQUFBLEtBQUFnbEMsUUFBQSxHQUFBL29CLENBQUEsQ0FBQWxrQixJQUFBLENBQUEsS0FBQTBzQyxvQkFBQSxDQUFBLFNBQUF4b0IsQ0FBQSxDQUFBaG1CLENBQUEsQ0FBQSxDQUFBK0osQ0FBQSxDQUFBaWxDLFlBQUEsQ0FBQWh2QyxDQUFBLENBQUFnbUIsQ0FBQSxFQUFBLENBQUEsQ0FBQSxDQUFBLEtBQUFnbkIsT0FBQSxDQUFBcG5CLEdBQUEsQ0FBQSxLQUFBd29CLGNBQUEsRUFBQWp1QixVQUFBLENBQUEsS0FBQTJ0QixjQUFBLENBQUEsQ0FBQSxLQUFBVCxNQUFBLEdBQUF6bkIsR0FBQSxDQUFBLEtBQUF3b0IsY0FBQSxFQUFBdlUsVUFBQSxDQUFBLGVBQUEsQ0FBQSxDQUFBLEtBQUF3VSxRQUFBLENBQUF6b0IsR0FBQSxDQUFBLEtBQUF3b0IsY0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBVyxRQUFBLENBQUEvb0IsQ0FBQSxDQUFBOWhCLElBQUEsQ0FBQW1wQyxNQUFBLENBQUEsaUJBQUEsQ0FBQSxNQUFBLE1BQUFMLE9BQUEsQ0FBQSxDQUFBLENBQUExcEIsTUFBQSxDQUFBLGdCQUFBdlosQ0FBQSxDQUFBL0osQ0FBQSxDQUFBLENBQUEsR0FBQWk5QixDQUFBQSxDQUFBLENBQUFwbUIsQ0FBQSxDQUFBODFCLENBQUEsQ0FBQXpsQyxDQUFBLENBQUE2QyxDQUFBLENBQUEsR0FBQSxJQUFBN0gsU0FBQSxDQUFBYixNQUFBLENBQUEsTUFBQTJrQixDQUFBQSxDQUFBLENBQUFxbkIsTUFBQSxDQUFBdHFDLE1BQUEsQ0FBQSxFQUFBLENBQUEsS0FBQUMsT0FBQSxDQUFBLENBQUEsR0FBQSxVQUFBLE1BQUErRyxDQUFBQSxDQUFBLENBQUEsR0FBQTdDLENBQUEsQ0FBQSxFQUFBLENBQUErMUIsQ0FBQSxDQUFBbHpCLENBQUEsQ0FBQTFFLEtBQUEsQ0FBQSxHQUFBLENBQUEsQ0FBQTBFLENBQUEsQ0FBQWt6QixDQUFBLENBQUF0eEIsS0FBQSxFQUFBLENBQUFzeEIsQ0FBQSxDQUFBNTdCLE1BQUEsQ0FBQSxDQUFBLElBQUF3VixDQUFBLENBQUEzUCxDQUFBLENBQUE2QyxDQUFBLENBQUEsQ0FBQWljLENBQUEsQ0FBQXFuQixNQUFBLENBQUF0cUMsTUFBQSxDQUFBLEVBQUEsQ0FBQSxLQUFBQyxPQUFBLENBQUErRyxDQUFBLENBQUEsQ0FBQSxDQUFBNGlDLENBQUEsQ0FBQSxDQUFBLENBQUExUCxDQUFBLENBQUE1N0IsTUFBQSxDQUFBLENBQUEsQ0FBQXNyQyxDQUFBLENBQUFBLENBQUEsRUFBQSxFQUFBOTFCLENBQUEsQ0FBQW9tQixDQUFBLENBQUEwUCxDQUFBLENBQUEsQ0FBQSxDQUFBOTFCLENBQUEsQ0FBQW9tQixDQUFBLENBQUEwUCxDQUFBLENBQUEsQ0FBQSxFQUFBLEVBQUEsQ0FBQTkxQixDQUFBLENBQUFBLENBQUEsQ0FBQW9tQixDQUFBLENBQUEwUCxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsR0FBQTVpQyxDQUFBLENBQUFrekIsQ0FBQSxDQUFBNzFCLEdBQUEsRUFBQSxDQUFBLElBQUFsRixTQUFBLENBQUFiLE1BQUEsQ0FBQSxNQUFBLEtBQUEsRUFBQSxHQUFBd1YsQ0FBQSxDQUFBOU0sQ0FBQSxDQUFBLENBQUEsSUFBQSxDQUFBOE0sQ0FBQSxDQUFBOU0sQ0FBQSxDQUFBLENBQUE4TSxDQUFBLENBQUE5TSxDQUFBLENBQUEsQ0FBQS9KLENBQUEsQ0FBQSxDQUFBLElBQUEsQ0FBQSxHQUFBLElBQUFrQyxTQUFBLENBQUFiLE1BQUEsQ0FBQSxNQUFBLEtBQUEsRUFBQSxHQUFBLEtBQUEyQixPQUFBLENBQUErRyxDQUFBLENBQUEsQ0FBQSxJQUFBLENBQUEsS0FBQS9HLE9BQUEsQ0FBQStHLENBQUEsQ0FBQSxDQUFBN0MsQ0FBQSxDQUFBNkMsQ0FBQSxDQUFBLENBQUEvSixDQUFBLENBQUEsT0FBQSxNQUFBaXZDLFdBQUEsQ0FBQS9uQyxDQUFBLEVBQUEsSUFBQSxDQUFBLENBQUEsQ0FBQStuQyxXQUFBLENBQUEscUJBQUFqcEIsQ0FBQSxDQUFBLENBQUEsR0FBQWpjLENBQUFBLENBQUEsQ0FBQSxJQUFBQSxDQUFBLEdBQUFpYyxDQUFBQSxDQUFBLEVBQUEsS0FBQWtwQixVQUFBLENBQUFubEMsQ0FBQSxDQUFBaWMsQ0FBQSxDQUFBamMsQ0FBQSxDQUFBLEVBQUEsQ0FBQSxNQUFBLEtBQUEsQ0FBQSxDQUFBLENBQUFtbEMsVUFBQSxDQUFBLG9CQUFBbHBCLENBQUEsQ0FBQWpjLENBQUEsQ0FBQSxDQUFBLE1BQUEsWUFBQWljLENBQUEsRUFBQSxLQUFBbXBCLGlCQUFBLENBQUFwbEMsQ0FBQSxDQUFBLENBQUEsS0FBQS9HLE9BQUEsQ0FBQWdqQixDQUFBLEVBQUFqYyxDQUFBLENBQUEsYUFBQWljLENBQUEsRUFBQSxLQUFBNm9CLGtCQUFBLENBQUE5a0MsQ0FBQSxDQUFBLENBQUEsSUFBQSxDQUFBLENBQUEsQ0FBQW9sQyxpQkFBQSxDQUFBLDJCQUFBcGxDLENBQUEsQ0FBQSxDQUFBLEdBQUEvSixDQUFBQSxDQUFBLENBQUFpOUIsQ0FBQSxDQUFBcG1CLENBQUEsQ0FBQSxJQUFBN1csQ0FBQSxHQUFBK0osQ0FBQUEsQ0FBQSxFQUFBOE0sQ0FBQSxDQUFBLEtBQUEyM0Isb0JBQUEsQ0FBQXh1QyxDQUFBLENBQUEsQ0FBQStKLENBQUEsQ0FBQS9KLENBQUEsQ0FBQSxHQUFBLEtBQUFnRCxPQUFBLENBQUE2M0IsT0FBQSxDQUFBNzZCLENBQUEsQ0FBQSxFQUFBNlcsQ0FBQSxFQUFBQSxDQUFBLENBQUF4VixNQUFBLEdBQUE0N0IsQ0FBQSxDQUFBalgsQ0FBQSxDQUFBblAsQ0FBQSxDQUFBdFYsR0FBQSxFQUFBLENBQUEsQ0FBQSxLQUFBeXRDLFlBQUEsQ0FBQW40QixDQUFBLENBQUE3VyxDQUFBLENBQUEsQ0FBQWk5QixDQUFBLENBQUFyQyxRQUFBLENBQUEsS0FBQXdVLFFBQUEsQ0FBQSxDQUFBcEMsT0FBQSxDQUFBL1AsQ0FBQSxDQUFBMXhCLElBQUEsQ0FBQXZMLENBQUEsQ0FBQTY2QixPQUFBLENBQUE5d0IsQ0FBQSxDQUFBcU8sR0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUF5MkIsa0JBQUEsQ0FBQSw0QkFBQTdvQixDQUFBLENBQUEsQ0FBQSxLQUFBcXBCLFlBQUEsQ0FBQSxLQUFBaEMsTUFBQSxFQUFBLENBQUEsS0FBQVMsY0FBQSxDQUFBLFdBQUEsQ0FBQSxJQUFBLENBQUEsQ0FBQSxDQUFBOW5CLENBQUEsRUFBQUEsQ0FBQSxHQUFBLEtBQUFncEIsWUFBQSxDQUFBLEtBQUFWLFNBQUEsQ0FBQSxJQUFBLENBQUEsZ0JBQUEsRUFBQSxLQUFBVSxZQUFBLENBQUEsS0FBQVQsU0FBQSxDQUFBLElBQUEsQ0FBQSxnQkFBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUFlLE1BQUEsQ0FBQSxpQkFBQSxDQUFBLE1BQUEsTUFBQUwsV0FBQSxDQUFBLENBQUF2bEMsUUFBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUFzUSxPQUFBLENBQUEsa0JBQUEsQ0FBQSxNQUFBLE1BQUFpMUIsV0FBQSxDQUFBLENBQUF2bEMsUUFBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEwbEMsUUFBQSxDQUFBLGtCQUFBcmxDLENBQUEsQ0FBQSxDQUFBLFFBQUEvSixDQUFBQSxDQUFBLENBQUFBLENBQUEsQ0FBQTJzQyxDQUFBLENBQUEsQ0FBQSxHQUFBemxDLENBQUFBLENBQUEsQ0FBQTZsQyxDQUFBLENBQUEsSUFBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQS9zQyxDQUFBLENBQUFxQixNQUFBLENBQUEwckMsQ0FBQSxDQUFBQSxDQUFBLEVBQUEsRUFBQTdsQyxDQUFBLENBQUEyUCxDQUFBLENBQUEyM0Isb0JBQUEsQ0FBQXh1QyxDQUFBLENBQUErc0MsQ0FBQSxDQUFBLEdBQUEvbUIsQ0FBQSxFQUFBLENBQUE5ZSxDQUFBLENBQUE2QyxDQUFBLENBQUFxTyxHQUFBLENBQUE0TixDQUFBLENBQUFBLENBQUEsQ0FBQTFQLE1BQUEsQ0FBQXBQLENBQUEsQ0FBQTNGLEdBQUEsR0FBQS9DLE1BQUEsQ0FBQXVMLENBQUEsQ0FBQWlqQyxPQUFBLENBQUF6ckMsR0FBQSxFQUFBLENBQUEsQ0FBQSxDQUFBLENBQUF5a0IsQ0FBQSxDQUFBOWUsQ0FBQSxDQUFBaVEsR0FBQSxDQUFBcE4sQ0FBQSxDQUFBaWpDLE9BQUEsRUFBQXpyQyxHQUFBLEVBQUEsQ0FBQSxDQUFBc1YsQ0FBQSxDQUFBMjNCLG9CQUFBLENBQUF4dUMsQ0FBQSxDQUFBK3NDLENBQUEsQ0FBQSxFQUFBN2xDLENBQUEsQ0FBQSsxQixDQUFBLENBQUF2K0IsSUFBQSxDQUFBc0IsQ0FBQSxDQUFBK3NDLENBQUEsQ0FBQSxDQUFBLENBQUFKLENBQUEsRUFBQTVpQyxDQUFBLENBQUE4d0IsT0FBQSxDQUFBNzZCLENBQUEsQ0FBQStzQyxDQUFBLENBQUEsQ0FBQSxFQUFBOVAsQ0FBQSxDQUFBditCLElBQUEsQ0FBQXFMLENBQUEsQ0FBQTh3QixPQUFBLENBQUE3NkIsQ0FBQSxDQUFBK3NDLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLElBQUE5UCxDQUFBQSxDQUFBLENBQUEsRUFBQSxDQUFBcG1CLENBQUEsQ0FBQSxJQUFBLENBQUEsTUFBQTlNLENBQUFBLENBQUEsQ0FBQWljLENBQUEsQ0FBQWpqQixNQUFBLENBQUEsQ0FBQWlxQyxPQUFBLENBQUEsS0FBQUEsT0FBQSxDQUFBblMsT0FBQSxDQUFBLEtBQUE3M0IsT0FBQSxDQUFBNjNCLE9BQUEsRUFBQSxFQUFBLENBQUEsQ0FBQTl3QixDQUFBLENBQUEsQ0FBQSxLQUFBMGtDLEdBQUEsQ0FBQTFrQyxDQUFBLENBQUFpakMsT0FBQSxDQUFBLENBQUFsekIsTUFBQSxDQUFBLHdCQUFBLENBQUEsQ0FBQSxDQUFBL1AsQ0FBQSxDQUFBd0IsSUFBQSxFQUFBdkwsQ0FBQSxDQUFBK0osQ0FBQSxDQUFBd0IsSUFBQSxDQUFBbkIsS0FBQSxDQUFBLE1BQUEsR0FBQSxFQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQUwsQ0FBQSxDQUFBNG9CLEtBQUEsRUFBQTN5QixDQUFBLENBQUErSixDQUFBLENBQUE0b0IsS0FBQSxDQUFBdm9CLEtBQUEsQ0FBQSxNQUFBLEdBQUEsRUFBQSxDQUFBLENBQUE2eUIsQ0FBQSxDQUFBOXhCLElBQUEsQ0FBQSxHQUFBLENBQUEsQ0FBQSxDQUFBLENBQUFva0Msc0JBQUEsQ0FBQSxnQ0FBQXhsQyxDQUFBLENBQUEsQ0FBQSxHQUFBL0osQ0FBQUEsQ0FBQSxDQUFBLElBQUEsQ0FBQWdtQixDQUFBLENBQUFsa0IsSUFBQSxDQUFBOUIsQ0FBQSxDQUFBd3VDLG9CQUFBLENBQUEsU0FBQXZSLENBQUEsQ0FBQXBtQixDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsR0FBQW1QLENBQUEsQ0FBQXRoQixPQUFBLENBQUFxRixDQUFBLENBQUExRyxNQUFBLENBQUF3VCxDQUFBLENBQUEsR0FBQTdXLENBQUEsQ0FBQXd1QyxvQkFBQSxDQUFBdlIsQ0FBQSxFQUFBalgsQ0FBQSxDQUFBblAsQ0FBQSxDQUFBTSxHQUFBLENBQUFwTixDQUFBLENBQUExRyxNQUFBLEVBQUE5QixHQUFBLEVBQUEsQ0FBQSxFQUFBLENBQUEsRUFBQSxDQUFBLENBQUF5dEMsWUFBQSxDQUFBLHNCQUFBaHBCLENBQUEsQ0FBQWpjLENBQUEsQ0FBQS9KLENBQUEsQ0FBQSxDQUFBLE1BQUEsTUFBQXF2QyxZQUFBLENBQUFycEIsQ0FBQSxDQUFBamMsQ0FBQSxDQUFBL0osQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBd3ZDLFNBQUEsQ0FBQSxtQkFBQXhwQixDQUFBLENBQUFqYyxDQUFBLENBQUEvSixDQUFBLENBQUEsQ0FBQSxNQUFBLE1BQUFxdkMsWUFBQSxDQUFBcnBCLENBQUEsQ0FBQWpjLENBQUEsQ0FBQS9KLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQXF2QyxZQUFBLENBQUEsc0JBQUFycEIsQ0FBQSxDQUFBamMsQ0FBQSxDQUFBL0osQ0FBQSxDQUFBaTlCLENBQUEsQ0FBQSxDQUFBQSxDQUFBLENBQUEsV0FBQSxNQUFBQSxDQUFBQSxDQUFBLENBQUFBLENBQUEsQ0FBQWo5QixDQUFBLENBQUEsR0FBQTZXLENBQUFBLENBQUEsQ0FBQSxVQUFBLE1BQUFtUCxDQUFBQSxDQUFBLEVBQUEsT0FBQUEsQ0FBQSxDQUFBMm1CLENBQUEsQ0FBQSxDQUFBaGEsS0FBQSxDQUFBOWIsQ0FBQSxDQUFBOU0sQ0FBQSxDQUFBL0osQ0FBQSxDQUFBdUwsSUFBQSxDQUFBc0wsQ0FBQSxDQUFBbVAsQ0FBQSxDQUFBamMsQ0FBQSxDQUFBaWpDLE9BQUEsQ0FBQW4yQixDQUFBLENBQUEsS0FBQW0yQixPQUFBLENBQUFobkIsQ0FBQSxDQUFBNU4sR0FBQSxDQUFBNmtCLENBQUEsQ0FBQSxDQUFBLE1BQUEwUCxDQUFBQSxDQUFBLENBQUFLLE9BQUEsQ0FBQTlSLFdBQUEsQ0FBQSxLQUFBa1UsUUFBQSxDQUFBekMsQ0FBQSxDQUFBLENBQUExUCxDQUFBLEVBQUEsSUFBQSxDQUFBLENBQUEsQ0FBQXdSLEdBQUEsQ0FBQSxhQUFBMWtDLENBQUEsQ0FBQS9KLENBQUEsQ0FBQWk5QixDQUFBLENBQUEsQ0FBQSxHQUFBcG1CLENBQUFBLENBQUEsQ0FBQTgxQixDQUFBLENBQUEsSUFBQSxDQUFBLFdBQUEsTUFBQTVpQyxDQUFBQSxDQUFBLEdBQUFrekIsQ0FBQSxDQUFBajlCLENBQUEsQ0FBQUEsQ0FBQSxDQUFBK0osQ0FBQSxDQUFBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLEVBQUFrekIsQ0FBQSxFQUFBajlCLENBQUEsQ0FBQTZXLENBQUEsQ0FBQW1QLENBQUEsQ0FBQWhtQixDQUFBLENBQUEsQ0FBQSxLQUFBcXVDLFFBQUEsQ0FBQSxLQUFBQSxRQUFBLENBQUFqMkIsR0FBQSxDQUFBcFksQ0FBQSxDQUFBLEdBQUFpOUIsQ0FBQSxDQUFBajlCLENBQUEsQ0FBQUEsQ0FBQSxDQUFBLEtBQUFndEMsT0FBQSxDQUFBbjJCLENBQUEsQ0FBQSxLQUFBdzJCLE1BQUEsRUFBQSxDQUFBLENBQUFybkIsQ0FBQSxDQUFBbGtCLElBQUEsQ0FBQW03QixDQUFBLENBQUEsU0FBQUEsQ0FBQSxDQUFBLzFCLENBQUEsQ0FBQSxDQUFBLFFBQUE2bEMsQ0FBQUEsQ0FBQSxFQUFBLENBQUEsTUFBQWhqQyxDQUFBQSxDQUFBLEVBQUE0aUMsQ0FBQSxDQUFBM3BDLE9BQUEsQ0FBQTBHLFFBQUEsR0FBQSxDQUFBLENBQUEsRUFBQSxDQUFBc2MsQ0FBQSxDQUFBLElBQUEsQ0FBQSxDQUFBc1YsUUFBQSxDQUFBLG1CQUFBLENBQUEsQ0FBQSxDQUFBLFVBQUEsTUFBQXAwQixDQUFBQSxDQUFBLENBQUF5bEMsQ0FBQSxDQUFBemxDLENBQUEsQ0FBQSxDQUFBQSxDQUFBLEVBQUF6SSxLQUFBLENBQUFrdUMsQ0FBQSxDQUFBenFDLFNBQUEsQ0FBQSxDQUFBLElBQUEsRUFBQSxDQUFBLFdBQUEsTUFBQWdGLENBQUFBLENBQUEsR0FBQTZsQyxDQUFBLENBQUE3bkMsSUFBQSxDQUFBZ0MsQ0FBQSxDQUFBaEMsSUFBQSxDQUFBZ0MsQ0FBQSxDQUFBaEMsSUFBQSxFQUFBNm5DLENBQUEsQ0FBQTduQyxJQUFBLEVBQUE4Z0IsQ0FBQSxDQUFBOWdCLElBQUEsRUFBQSxFQUFBLEdBQUFrb0MsQ0FBQUEsQ0FBQSxDQUFBblEsQ0FBQSxDQUFBN3lCLEtBQUEsQ0FBQSxvQkFBQSxDQUFBLENBQUE0TixDQUFBLENBQUFvMUIsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBVCxDQUFBLENBQUF5QixjQUFBLENBQUFxQixDQUFBLENBQUFyQyxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUFxQyxDQUFBLENBQUE1NEIsQ0FBQSxDQUFBME8sRUFBQSxDQUFBdk4sQ0FBQSxDQUFBeTNCLENBQUEsQ0FBQTFDLENBQUEsQ0FBQSxDQUFBL3NDLENBQUEsQ0FBQXVsQixFQUFBLENBQUF2TixDQUFBLENBQUErMEIsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBMkMsSUFBQSxDQUFBLGNBQUEzbEMsQ0FBQSxDQUFBL0osQ0FBQSxDQUFBLENBQUFBLENBQUEsQ0FBQSxDQUFBQSxDQUFBLEVBQUEsRUFBQSxFQUFBcUYsS0FBQSxDQUFBLEdBQUEsRUFBQThGLElBQUEsQ0FBQSxLQUFBaWpDLGNBQUEsQ0FBQSxHQUFBLEVBQUEsS0FBQUEsY0FBQSxDQUFBcmtDLENBQUEsQ0FBQTZiLEdBQUEsQ0FBQTVsQixDQUFBLEVBQUE0bEIsR0FBQSxDQUFBNWxCLENBQUEsQ0FBQSxDQUFBLEtBQUFxdUMsUUFBQSxDQUFBcm9CLENBQUEsQ0FBQSxLQUFBcW9CLFFBQUEsQ0FBQWwzQixHQUFBLENBQUFwTixDQUFBLEVBQUF4SSxHQUFBLEVBQUEsQ0FBQSxDQUFBLEtBQUFndEMsU0FBQSxDQUFBdm9CLENBQUEsQ0FBQSxLQUFBdW9CLFNBQUEsQ0FBQXAzQixHQUFBLENBQUFwTixDQUFBLEVBQUF4SSxHQUFBLEVBQUEsQ0FBQSxDQUFBLEtBQUErc0MsU0FBQSxDQUFBdG9CLENBQUEsQ0FBQSxLQUFBc29CLFNBQUEsQ0FBQW4zQixHQUFBLENBQUFwTixDQUFBLEVBQUF4SSxHQUFBLEVBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQW91QyxNQUFBLENBQUEsZ0JBQUEzcEIsQ0FBQSxDQUFBamMsQ0FBQSxDQUFBLENBQUEsUUFBQS9KLENBQUFBLENBQUEsRUFBQSxDQUFBLE1BQUEsQ0FBQSxVQUFBLE1BQUFnbUIsQ0FBQUEsQ0FBQSxDQUFBaVgsQ0FBQSxDQUFBalgsQ0FBQSxDQUFBLENBQUFBLENBQUEsRUFBQXZuQixLQUFBLENBQUF3K0IsQ0FBQSxDQUFBLzZCLFNBQUEsQ0FBQSxDQUFBLElBQUErNkIsQ0FBQUEsQ0FBQSxDQUFBLElBQUEsQ0FBQSxNQUFBcmdCLENBQUFBLFVBQUEsQ0FBQTVjLENBQUEsQ0FBQStKLENBQUEsRUFBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUE2bEMsVUFBQSxDQUFBLG9CQUFBN2xDLENBQUEsQ0FBQSxDQUFBLEtBQUF1a0MsU0FBQSxDQUFBLEtBQUFBLFNBQUEsQ0FBQWwyQixHQUFBLENBQUFyTyxDQUFBLENBQUEsQ0FBQSxLQUFBMGtDLEdBQUEsQ0FBQTFrQyxDQUFBLENBQUEsQ0FBQXVoQixVQUFBLENBQUEsb0JBQUF2aEIsQ0FBQSxDQUFBLENBQUEsS0FBQXlsQyxTQUFBLENBQUF4cEIsQ0FBQSxDQUFBamMsQ0FBQSxDQUFBeWQsYUFBQSxDQUFBLENBQUEsSUFBQSxDQUFBLGdCQUFBLEVBQUEsQ0FBQSxDQUFBK0QsVUFBQSxDQUFBLG9CQUFBeGhCLENBQUEsQ0FBQSxDQUFBLEtBQUFpbEMsWUFBQSxDQUFBaHBCLENBQUEsQ0FBQWpjLENBQUEsQ0FBQXlkLGFBQUEsQ0FBQSxDQUFBLElBQUEsQ0FBQSxnQkFBQSxFQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBcW9CLFVBQUEsQ0FBQSxvQkFBQTlsQyxDQUFBLENBQUEsQ0FBQSxLQUFBd2tDLFNBQUEsQ0FBQSxLQUFBQSxTQUFBLENBQUFuMkIsR0FBQSxDQUFBck8sQ0FBQSxDQUFBLENBQUEsS0FBQTBrQyxHQUFBLENBQUExa0MsQ0FBQSxDQUFBLENBQUEyeEIsT0FBQSxDQUFBLGlCQUFBM3hCLENBQUEsQ0FBQSxDQUFBLEtBQUF5bEMsU0FBQSxDQUFBeHBCLENBQUEsQ0FBQWpjLENBQUEsQ0FBQXlkLGFBQUEsQ0FBQSxDQUFBLElBQUEsQ0FBQSxnQkFBQSxFQUFBLENBQUEsQ0FBQXNvQixRQUFBLENBQUEsa0JBQUEvbEMsQ0FBQSxDQUFBLENBQUEsS0FBQWlsQyxZQUFBLENBQUFocEIsQ0FBQSxDQUFBamMsQ0FBQSxDQUFBeWQsYUFBQSxDQUFBLENBQUEsSUFBQSxDQUFBLGdCQUFBLEVBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEwbEIsUUFBQSxDQUFBLGtCQUFBbmpDLENBQUEsQ0FBQS9KLENBQUEsQ0FBQWk5QixDQUFBLENBQUEsQ0FBQSxHQUFBcG1CLENBQUFBLENBQUEsQ0FBQTgxQixDQUFBLENBQUF6bEMsQ0FBQSxDQUFBLEtBQUFsRSxPQUFBLENBQUErRyxDQUFBLENBQUEsQ0FBQSxHQUFBa3pCLENBQUEsQ0FBQUEsQ0FBQSxFQUFBLEVBQUEsQ0FBQWo5QixDQUFBLENBQUFnbUIsQ0FBQSxDQUFBbUMsS0FBQSxDQUFBbm9CLENBQUEsQ0FBQSxDQUFBQSxDQUFBLENBQUFSLElBQUEsQ0FBQSxDQUFBdUssQ0FBQSxHQUFBLEtBQUE2akMsaUJBQUEsQ0FBQTdqQyxDQUFBLENBQUEsS0FBQTZqQyxpQkFBQSxDQUFBN2pDLENBQUEsRUFBQXhFLFdBQUEsRUFBQSxDQUFBdkYsQ0FBQSxDQUFBcUQsTUFBQSxDQUFBLEtBQUEycEMsT0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBTCxDQUFBLENBQUEzc0MsQ0FBQSxDQUFBcW9CLGFBQUEsQ0FBQSxJQUFBeFIsQ0FBQSxHQUFBODFCLENBQUFBLENBQUEsRUFBQTkxQixDQUFBLEdBQUE3VyxDQUFBQSxDQUFBLEdBQUFBLENBQUEsQ0FBQTZXLENBQUEsQ0FBQSxDQUFBODFCLENBQUEsQ0FBQTkxQixDQUFBLENBQUEsRUFBQSxDQUFBLE1BQUEsTUFBQW0yQixPQUFBLENBQUFya0IsT0FBQSxDQUFBM29CLENBQUEsQ0FBQWk5QixDQUFBLEVBQUEsRUFBQWpYLENBQUEsQ0FBQTdtQixVQUFBLENBQUErSCxDQUFBLEdBQUFBLENBQUEsQ0FBQXpJLEtBQUEsQ0FBQSxLQUFBdXVDLE9BQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBaHRDLENBQUEsRUFBQXhCLE1BQUEsQ0FBQXkrQixDQUFBLENBQUEsSUFBQSxDQUFBLENBQUEsRUFBQWo5QixDQUFBLENBQUFtcEIsa0JBQUEsRUFBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUFuRCxDQUFBLENBQUFsa0IsSUFBQSxDQUFBLENBQUEyZ0IsSUFBQSxDQUFBLFFBQUEsQ0FBQUUsSUFBQSxDQUFBLFNBQUEsQ0FBQSxDQUFBLFNBQUE1WSxDQUFBLENBQUEvSixDQUFBLENBQUEsQ0FBQWdtQixDQUFBLENBQUFzbkIsTUFBQSxDQUFBcHNDLFNBQUEsQ0FBQSxJQUFBNkksQ0FBQSxFQUFBLFNBQUFrekIsQ0FBQSxDQUFBcG1CLENBQUEsQ0FBQTgxQixDQUFBLENBQUEsQ0FBQSxVQUFBLE1BQUE5MUIsQ0FBQUEsQ0FBQSxHQUFBQSxDQUFBLENBQUEsQ0FBQWs1QixNQUFBLENBQUFsNUIsQ0FBQSxDQUFBLEVBQUEsR0FBQTNQLENBQUFBLENBQUEsQ0FBQTZsQyxDQUFBLENBQUFsMkIsQ0FBQSxDQUFBQSxDQUFBLEdBQUEsQ0FBQSxDQUFBLEVBQUEsVUFBQSxNQUFBQSxDQUFBQSxDQUFBLENBQUE3VyxDQUFBLENBQUE2VyxDQUFBLENBQUFrNUIsTUFBQSxFQUFBL3ZDLENBQUEsQ0FBQStKLENBQUEsQ0FBQThNLENBQUEsQ0FBQUEsQ0FBQSxFQUFBLEVBQUEsQ0FBQSxVQUFBLE1BQUFBLENBQUFBLENBQUEsR0FBQUEsQ0FBQSxDQUFBLENBQUE2ZCxRQUFBLENBQUE3ZCxDQUFBLENBQUEsQ0FBQSxDQUFBM1AsQ0FBQSxDQUFBLENBQUE4ZSxDQUFBLENBQUEzaEIsYUFBQSxDQUFBd1MsQ0FBQSxDQUFBLENBQUFBLENBQUEsQ0FBQWdoQixRQUFBLENBQUE4VSxDQUFBLENBQUE5MUIsQ0FBQSxDQUFBd2lCLEtBQUEsRUFBQTRELENBQUEsQ0FBQTVELEtBQUEsQ0FBQXhpQixDQUFBLENBQUF3aUIsS0FBQSxDQUFBLENBQUFueUIsQ0FBQSxFQUFBOGUsQ0FBQSxDQUFBZ3FCLE9BQUEsRUFBQWhxQixDQUFBLENBQUFncUIsT0FBQSxDQUFBRCxNQUFBLENBQUFoRCxDQUFBLENBQUEsQ0FBQTlQLENBQUEsQ0FBQWx6QixDQUFBLENBQUEsQ0FBQThNLENBQUEsQ0FBQSxDQUFBazJCLENBQUEsR0FBQWhqQyxDQUFBLEVBQUFrekIsQ0FBQSxDQUFBOFAsQ0FBQSxDQUFBLENBQUE5UCxDQUFBLENBQUE4UCxDQUFBLENBQUEsQ0FBQWwyQixDQUFBLENBQUE2ZCxRQUFBLENBQUE3ZCxDQUFBLENBQUF3ZCxNQUFBLENBQUFzWSxDQUFBLENBQUEsQ0FBQTFQLENBQUEsQ0FBQXhqQixLQUFBLENBQUEsU0FBQXpaLENBQUEsQ0FBQSxDQUFBZ21CLENBQUEsQ0FBQSxJQUFBLENBQUEsQ0FBQWpjLENBQUEsSUFBQTRpQyxDQUFBLEVBQUFBLENBQUEsQ0FBQXB1QyxJQUFBLENBQUEwK0IsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUFqOUIsQ0FBQSxFQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBZ21CLENBQUEsQ0FBQXFuQixNQUFBLENBQUEsVUFBQSxDQUFBLFFBQUF0akMsQ0FBQUEsQ0FBQSxDQUFBaWMsQ0FBQSxDQUFBamMsQ0FBQSxDQUFBL0osQ0FBQSxDQUFBLENBQUEsTUFBQSxDQUFBNHZCLFVBQUEsQ0FBQTVKLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxFQUFBaXFCLENBQUEsQ0FBQWxsQyxJQUFBLENBQUFpYixDQUFBLENBQUEsQ0FBQSxDQUFBLEVBQUFqYyxDQUFBLENBQUEsR0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBNmxCLFVBQUEsQ0FBQTVKLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxFQUFBaXFCLENBQUEsQ0FBQWxsQyxJQUFBLENBQUFpYixDQUFBLENBQUEsQ0FBQSxDQUFBLEVBQUFobUIsQ0FBQSxDQUFBLEdBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLFNBQUFBLENBQUFBLENBQUEsQ0FBQStKLENBQUEsQ0FBQS9KLENBQUEsQ0FBQSxDQUFBLE1BQUEwd0IsQ0FBQUEsUUFBQSxDQUFBMUssQ0FBQSxDQUFBdkUsR0FBQSxDQUFBMVgsQ0FBQSxDQUFBL0osQ0FBQSxDQUFBLENBQUEsRUFBQSxDQUFBLEVBQUEsQ0FBQSxDQUFBLFNBQUFpOUIsQ0FBQUEsQ0FBQSxDQUFBbHpCLENBQUEsQ0FBQSxDQUFBLEdBQUEvSixDQUFBQSxDQUFBLENBQUErSixDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsTUFBQSxLQUFBL0osQ0FBQSxDQUFBWCxRQUFBLENBQUEsQ0FBQWl3QixLQUFBLENBQUF2bEIsQ0FBQSxDQUFBdWxCLEtBQUEsRUFBQSxDQUFBbUIsTUFBQSxDQUFBMW1CLENBQUEsQ0FBQTBtQixNQUFBLEVBQUEsQ0FBQW9WLE1BQUEsQ0FBQSxDQUFBeDRCLEdBQUEsQ0FBQSxDQUFBLENBQUFzbUIsSUFBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEzTixDQUFBLENBQUExbUIsUUFBQSxDQUFBVSxDQUFBLEVBQUEsQ0FBQXN2QixLQUFBLENBQUF2bEIsQ0FBQSxDQUFBdWxCLEtBQUEsRUFBQSxDQUFBbUIsTUFBQSxDQUFBMW1CLENBQUEsQ0FBQTBtQixNQUFBLEVBQUEsQ0FBQW9WLE1BQUEsQ0FBQSxDQUFBeDRCLEdBQUEsQ0FBQXRELENBQUEsQ0FBQStxQixTQUFBLEVBQUEsQ0FBQW5CLElBQUEsQ0FBQTVwQixDQUFBLENBQUFnckIsVUFBQSxFQUFBLENBQUEsQ0FBQSxDQUFBLzBCLENBQUEsQ0FBQTJuQixjQUFBLENBQUEsQ0FBQTJILEtBQUEsQ0FBQSxDQUFBLENBQUFtQixNQUFBLENBQUEsQ0FBQSxDQUFBb1YsTUFBQSxDQUFBLENBQUF4NEIsR0FBQSxDQUFBck4sQ0FBQSxDQUFBa3FCLEtBQUEsQ0FBQXlKLElBQUEsQ0FBQTN6QixDQUFBLENBQUFpcUIsS0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBcUYsS0FBQSxDQUFBdmxCLENBQUEsQ0FBQW1tQyxVQUFBLEVBQUEsQ0FBQXpmLE1BQUEsQ0FBQTFtQixDQUFBLENBQUFvbUMsV0FBQSxFQUFBLENBQUF0SyxNQUFBLENBQUE5N0IsQ0FBQSxDQUFBODdCLE1BQUEsRUFBQSxDQUFBLENBQUEsSUFBQWh2QixDQUFBQSxDQUFBLENBQUE4MUIsQ0FBQSxDQUFBL29DLElBQUEsQ0FBQXd1QixHQUFBLENBQUFsckIsQ0FBQSxDQUFBdEQsSUFBQSxDQUFBd3NDLEdBQUEsQ0FBQXJELENBQUEsQ0FBQSxtQkFBQSxDQUFBSyxDQUFBLENBQUEsbUJBQUEsQ0FBQXAxQixDQUFBLENBQUEsdUJBQUEsQ0FBQXkzQixDQUFBLENBQUEsTUFBQSxDQUFBUSxDQUFBLENBQUEsSUFBQSxDQUFBSSxDQUFBLENBQUFycUIsQ0FBQSxDQUFBaGxCLEVBQUEsQ0FBQXV1QixRQUFBLENBQUF2SixDQUFBLENBQUF1SixRQUFBLENBQUEsQ0FBQStnQixjQUFBLENBQUEseUJBQUEsQ0FBQSxHQUFBLElBQUEsRUFBQSxHQUFBejVCLENBQUEsQ0FBQSxNQUFBQSxDQUFBQSxDQUFBLENBQUEsR0FBQTlNLENBQUFBLENBQUEsQ0FBQS9KLENBQUEsQ0FBQWk5QixDQUFBLENBQUFqWCxDQUFBLENBQUEseUlBQUEsQ0FBQSxDQUFBMm1CLENBQUEsQ0FBQTFQLENBQUEsQ0FBQXRsQixRQUFBLEdBQUEsQ0FBQSxDQUFBLENBQUEsTUFBQXFPLENBQUFBLENBQUEsQ0FBQSxNQUFBLENBQUEsQ0FBQXVILE1BQUEsQ0FBQTBQLENBQUEsRUFBQWx6QixDQUFBLENBQUE0aUMsQ0FBQSxDQUFBbGQsV0FBQSxDQUFBd04sQ0FBQSxDQUFBeGIsR0FBQSxDQUFBLFVBQUEsQ0FBQSxRQUFBLENBQUEsQ0FBQXpoQixDQUFBLENBQUEyc0MsQ0FBQSxDQUFBbGQsV0FBQSxDQUFBMWxCLENBQUEsR0FBQS9KLENBQUEsR0FBQUEsQ0FBQSxDQUFBaTlCLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQXNULFdBQUEsQ0FBQSxDQUFBdFQsQ0FBQSxDQUFBbmpCLE1BQUEsRUFBQSxDQUFBakQsQ0FBQSxDQUFBOU0sQ0FBQSxDQUFBL0osQ0FBQSxDQUFBLENBQUEsQ0FBQXd3QyxhQUFBLENBQUEsdUJBQUF6bUMsQ0FBQSxDQUFBLENBQUEsR0FBQS9KLENBQUFBLENBQUEsQ0FBQStKLENBQUEsQ0FBQXpLLFFBQUEsRUFBQXlLLENBQUEsQ0FBQTBtQyxVQUFBLENBQUEsRUFBQSxDQUFBMW1DLENBQUEsQ0FBQWlqQyxPQUFBLENBQUF2ckIsR0FBQSxDQUFBLFlBQUEsQ0FBQSxDQUFBd2IsQ0FBQSxDQUFBbHpCLENBQUEsQ0FBQXpLLFFBQUEsRUFBQXlLLENBQUEsQ0FBQTBtQyxVQUFBLENBQUEsRUFBQSxDQUFBMW1DLENBQUEsQ0FBQWlqQyxPQUFBLENBQUF2ckIsR0FBQSxDQUFBLFlBQUEsQ0FBQSxDQUFBNUssQ0FBQSxDQUFBLFdBQUE3VyxDQUFBLEVBQUEsU0FBQUEsQ0FBQSxFQUFBK0osQ0FBQSxDQUFBdWxCLEtBQUEsQ0FBQXZsQixDQUFBLENBQUFpakMsT0FBQSxDQUFBLENBQUEsRUFBQTBELFdBQUEsQ0FBQS9ELENBQUEsQ0FBQSxXQUFBMVAsQ0FBQSxFQUFBLFNBQUFBLENBQUEsRUFBQWx6QixDQUFBLENBQUEwbUIsTUFBQSxDQUFBMW1CLENBQUEsQ0FBQWlqQyxPQUFBLENBQUEsQ0FBQSxFQUFBMkQsWUFBQSxDQUFBLE1BQUEsQ0FBQXJoQixLQUFBLENBQUFxZCxDQUFBLENBQUEzbUIsQ0FBQSxDQUFBdUosUUFBQSxDQUFBK2dCLGNBQUEsRUFBQSxDQUFBLENBQUEsQ0FBQTdmLE1BQUEsQ0FBQTVaLENBQUEsQ0FBQW1QLENBQUEsQ0FBQXVKLFFBQUEsQ0FBQStnQixjQUFBLEVBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUFNLGFBQUEsQ0FBQSx1QkFBQTdtQyxDQUFBLENBQUEsQ0FBQSxHQUFBL0osQ0FBQUEsQ0FBQSxDQUFBZ21CLENBQUEsQ0FBQWpjLENBQUEsRUFBQWpNLE1BQUEsQ0FBQSxDQUFBbS9CLENBQUEsQ0FBQWpYLENBQUEsQ0FBQTFtQixRQUFBLENBQUFVLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBNlcsQ0FBQSxDQUFBLENBQUEsQ0FBQTdXLENBQUEsQ0FBQSxDQUFBLENBQUEsRUFBQSxJQUFBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUFYLFFBQUEsQ0FBQXN0QyxDQUFBLENBQUEsQ0FBQTFQLENBQUEsRUFBQSxDQUFBcG1CLENBQUEsQ0FBQSxNQUFBLENBQUFtMkIsT0FBQSxDQUFBaHRDLENBQUEsQ0FBQVYsUUFBQSxDQUFBMjlCLENBQUEsQ0FBQXdULFVBQUEsQ0FBQTU1QixDQUFBLENBQUFndkIsTUFBQSxDQUFBOEcsQ0FBQSxDQUFBM21CLENBQUEsQ0FBQWpjLENBQUEsQ0FBQSxDQUFBODdCLE1BQUEsRUFBQSxDQUFBLENBQUFsUyxJQUFBLENBQUEsQ0FBQSxDQUFBdG1CLEdBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQTBuQixVQUFBLENBQUEvMEIsQ0FBQSxDQUFBKzBCLFVBQUEsRUFBQSxDQUFBRCxTQUFBLENBQUE5MEIsQ0FBQSxDQUFBODBCLFNBQUEsRUFBQSxDQUFBeEYsS0FBQSxDQUFBdHZCLENBQUEsQ0FBQWt3QyxVQUFBLEVBQUEsQ0FBQXpmLE1BQUEsQ0FBQXp3QixDQUFBLENBQUFtd0MsV0FBQSxFQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQW5xQixDQUFBLENBQUFobEIsRUFBQSxDQUFBdXVCLFFBQUEsQ0FBQSxTQUFBMVksQ0FBQSxDQUFBLENBQUEsR0FBQSxDQUFBQSxDQUFBLEVBQUEsQ0FBQUEsQ0FBQSxDQUFBZzZCLEVBQUEsQ0FBQSxNQUFBUixDQUFBQSxDQUFBLENBQUE1eEMsS0FBQSxDQUFBLElBQUEsQ0FBQXlELFNBQUEsQ0FBQSxDQUFBMlUsQ0FBQSxDQUFBbVAsQ0FBQSxDQUFBampCLE1BQUEsQ0FBQSxFQUFBLENBQUE4VCxDQUFBLENBQUEsQ0FBQSxHQUFBbzVCLENBQUFBLENBQUEsQ0FBQWhiLENBQUEsQ0FBQTZiLENBQUEsQ0FBQUMsQ0FBQSxDQUFBN21DLENBQUEsQ0FBQWdQLENBQUEsQ0FBQWtCLENBQUEsQ0FBQTRMLENBQUEsQ0FBQW5QLENBQUEsQ0FBQWc2QixFQUFBLENBQUEsQ0FBQTFwQyxDQUFBLENBQUE2ZSxDQUFBLENBQUF1SixRQUFBLENBQUFxaEIsYUFBQSxDQUFBLzVCLENBQUEsQ0FBQW02QixNQUFBLENBQUEsQ0FBQUMsQ0FBQSxDQUFBanJCLENBQUEsQ0FBQXVKLFFBQUEsQ0FBQWloQixhQUFBLENBQUFycEMsQ0FBQSxDQUFBLENBQUF2SixDQUFBLENBQUEsQ0FBQWlaLENBQUEsQ0FBQXE2QixTQUFBLEVBQUEsTUFBQSxFQUFBN3JDLEtBQUEsQ0FBQSxHQUFBLENBQUEsQ0FBQThyQyxDQUFBLENBQUEsRUFBQSxDQUFBLE1BQUFqNEIsQ0FBQUEsQ0FBQSxDQUFBK2pCLENBQUEsQ0FBQTdpQixDQUFBLENBQUEsQ0FBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBdU4sY0FBQSxHQUFBOVEsQ0FBQSxDQUFBdTZCLEVBQUEsQ0FBQSxVQUFBLENBQUEsQ0FBQW5jLENBQUEsQ0FBQS9iLENBQUEsQ0FBQW9XLEtBQUEsQ0FBQXdoQixDQUFBLENBQUE1M0IsQ0FBQSxDQUFBdVgsTUFBQSxDQUFBc2dCLENBQUEsQ0FBQTczQixDQUFBLENBQUEyc0IsTUFBQSxDQUFBMzdCLENBQUEsQ0FBQThiLENBQUEsQ0FBQWpqQixNQUFBLENBQUEsRUFBQSxDQUFBZ3VDLENBQUEsQ0FBQSxDQUFBL3FCLENBQUEsQ0FBQWxrQixJQUFBLENBQUEsQ0FBQSxJQUFBLENBQUEsSUFBQSxDQUFBLENBQUEsVUFBQSxDQUFBLEdBQUFra0IsQ0FBQUEsQ0FBQSxDQUFBamMsQ0FBQSxDQUFBL0osQ0FBQSxDQUFBLENBQUE2VyxDQUFBLENBQUEsSUFBQSxDQUFBLEVBQUEsRUFBQSxFQUFBeFIsS0FBQSxDQUFBLEdBQUEsQ0FBQSxDQUFBLElBQUFyRixDQUFBLENBQUFxQixNQUFBLEdBQUFyQixDQUFBLENBQUErc0MsQ0FBQSxDQUFBaGlDLElBQUEsQ0FBQS9LLENBQUEsQ0FBQSxDQUFBLENBQUEsRUFBQUEsQ0FBQSxDQUFBeEIsTUFBQSxDQUFBLENBQUEsUUFBQSxDQUFBLENBQUEsQ0FBQTR1QyxDQUFBLENBQUFyaUMsSUFBQSxDQUFBL0ssQ0FBQSxDQUFBLENBQUEsQ0FBQSxFQUFBLENBQUEsUUFBQSxFQUFBeEIsTUFBQSxDQUFBd0IsQ0FBQSxDQUFBLENBQUEsQ0FBQSxRQUFBLENBQUEsUUFBQSxDQUFBLEVBQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQStzQyxDQUFBLENBQUFoaUMsSUFBQSxDQUFBL0ssQ0FBQSxDQUFBLENBQUEsQ0FBQSxFQUFBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsUUFBQSxDQUFBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUFvdEMsQ0FBQSxDQUFBcmlDLElBQUEsQ0FBQS9LLENBQUEsQ0FBQSxDQUFBLENBQUEsRUFBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLFFBQUEsQ0FBQWdtQixDQUFBLENBQUFoTyxDQUFBLENBQUF2TixJQUFBLENBQUF6SyxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQStKLENBQUEsQ0FBQWlPLENBQUEsQ0FBQXZOLElBQUEsQ0FBQXpLLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBbXhDLENBQUEsQ0FBQSxJQUFBLENBQUEsQ0FBQSxDQUFBbnJCLENBQUEsQ0FBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQWpjLENBQUEsQ0FBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBOE0sQ0FBQSxDQUFBLElBQUEsQ0FBQSxDQUFBLENBQUE0NEIsQ0FBQSxDQUFBaGxDLElBQUEsQ0FBQXpLLENBQUEsQ0FBQSxDQUFBLENBQUEsRUFBQSxDQUFBLENBQUEsQ0FBQXl2QyxDQUFBLENBQUFobEMsSUFBQSxDQUFBekssQ0FBQSxDQUFBLENBQUEsQ0FBQSxFQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsSUFBQXBDLENBQUEsQ0FBQXlELE1BQUEsR0FBQXpELENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsVUFBQWlaLENBQUEsQ0FBQXU2QixFQUFBLENBQUEsQ0FBQSxDQUFBLENBQUFsbkMsQ0FBQSxDQUFBeXBCLElBQUEsRUFBQXNCLENBQUEsQ0FBQSxXQUFBcGUsQ0FBQSxDQUFBdTZCLEVBQUEsQ0FBQSxDQUFBLENBQUEsR0FBQWxuQyxDQUFBLENBQUF5cEIsSUFBQSxFQUFBc0IsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLFdBQUFwZSxDQUFBLENBQUF1NkIsRUFBQSxDQUFBLENBQUEsQ0FBQSxDQUFBbG5DLENBQUEsQ0FBQW1ELEdBQUEsRUFBQXlqQyxDQUFBLENBQUEsV0FBQWo2QixDQUFBLENBQUF1NkIsRUFBQSxDQUFBLENBQUEsQ0FBQSxHQUFBbG5DLENBQUEsQ0FBQW1ELEdBQUEsRUFBQXlqQyxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUFiLENBQUEsQ0FBQWxtQyxDQUFBLENBQUFvbkMsQ0FBQSxDQUFBQyxFQUFBLENBQUFuYyxDQUFBLENBQUE2YixDQUFBLENBQUEsQ0FBQTVtQyxDQUFBLENBQUF5cEIsSUFBQSxFQUFBc2MsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBL2xDLENBQUEsQ0FBQW1ELEdBQUEsRUFBQTRpQyxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsS0FBQW51QyxJQUFBLENBQUEsVUFBQSxDQUFBLEdBQUFtN0IsQ0FBQUEsQ0FBQSxDQUFBOFAsQ0FBQSxDQUFBSyxDQUFBLENBQUFwbkIsQ0FBQSxDQUFBLElBQUEsQ0FBQSxDQUFBaE8sQ0FBQSxDQUFBbzFCLENBQUEsQ0FBQThDLFVBQUEsRUFBQSxDQUFBVCxDQUFBLENBQUFyQyxDQUFBLENBQUErQyxXQUFBLEVBQUEsQ0FBQUUsQ0FBQSxDQUFBcndDLENBQUEsQ0FBQSxJQUFBLENBQUEsWUFBQSxDQUFBLENBQUFrWixDQUFBLENBQUFsWixDQUFBLENBQUEsSUFBQSxDQUFBLFdBQUEsQ0FBQSxDQUFBcXhDLENBQUEsQ0FBQXI1QixDQUFBLENBQUFxNEIsQ0FBQSxDQUFBcndDLENBQUEsQ0FBQSxJQUFBLENBQUEsYUFBQSxDQUFBLENBQUFpeEMsQ0FBQSxDQUFBM2hCLEtBQUEsQ0FBQWdpQixDQUFBLENBQUE3QixDQUFBLENBQUF2MkIsQ0FBQSxDQUFBbFosQ0FBQSxDQUFBLElBQUEsQ0FBQSxjQUFBLENBQUEsQ0FBQWl4QyxDQUFBLENBQUF4Z0IsTUFBQSxDQUFBOGdCLENBQUEsQ0FBQXZyQixDQUFBLENBQUFqakIsTUFBQSxDQUFBLEVBQUEsQ0FBQW1ILENBQUEsQ0FBQSxDQUFBc25DLENBQUEsQ0FBQXpuQyxDQUFBLENBQUFvbkMsQ0FBQSxDQUFBTSxFQUFBLENBQUFyRSxDQUFBLENBQUE4QyxVQUFBLEVBQUEsQ0FBQTlDLENBQUEsQ0FBQStDLFdBQUEsRUFBQSxDQUFBLENBQUEsVUFBQXQ1QixDQUFBLENBQUE0NkIsRUFBQSxDQUFBLENBQUEsQ0FBQSxDQUFBRixDQUFBLENBQUE1ZCxJQUFBLEVBQUEzYixDQUFBLENBQUEsV0FBQW5CLENBQUEsQ0FBQTQ2QixFQUFBLENBQUEsQ0FBQSxDQUFBLEdBQUFGLENBQUEsQ0FBQTVkLElBQUEsRUFBQTNiLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxXQUFBbkIsQ0FBQSxDQUFBNDZCLEVBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQUYsQ0FBQSxDQUFBbGtDLEdBQUEsRUFBQW9pQyxDQUFBLENBQUEsV0FBQTU0QixDQUFBLENBQUE0NkIsRUFBQSxDQUFBLENBQUEsQ0FBQSxHQUFBRixDQUFBLENBQUFsa0MsR0FBQSxFQUFBb2lDLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQThCLENBQUEsQ0FBQTVkLElBQUEsRUFBQTZkLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQUQsQ0FBQSxDQUFBbGtDLEdBQUEsRUFBQW1rQyxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUF2VSxDQUFBLENBQUEsQ0FBQS9OLFVBQUEsQ0FBQW1oQixDQUFBLENBQUFxQixTQUFBLENBQUF4NEIsQ0FBQSxDQUFBLENBQUE4TSxDQUFBLENBQUFsa0IsSUFBQSxDQUFBLENBQUEsTUFBQSxDQUFBLEtBQUEsQ0FBQSxDQUFBLFNBQUFpSSxDQUFBLENBQUEvSixDQUFBLENBQUEsQ0FBQWdtQixDQUFBLENBQUFtbkIsRUFBQSxDQUFBNWQsUUFBQSxDQUFBM3hCLENBQUEsQ0FBQW1NLENBQUEsQ0FBQSxHQUFBaWMsQ0FBQSxDQUFBbW5CLEVBQUEsQ0FBQTVkLFFBQUEsQ0FBQTN4QixDQUFBLENBQUFtTSxDQUFBLENBQUEsRUFBQS9KLENBQUEsRUFBQXV4QyxDQUFBLENBQUEsQ0FBQUksV0FBQSxDQUFBMWMsQ0FBQSxDQUFBMmMsWUFBQSxDQUFBZCxDQUFBLENBQUFlLFNBQUEsQ0FBQTc1QixDQUFBLENBQUE4NUIsVUFBQSxDQUFBckMsQ0FBQSxDQUFBc0MsaUJBQUEsQ0FBQTlVLENBQUEsQ0FBQStVLGNBQUEsQ0FBQVgsQ0FBQSxDQUFBWSxlQUFBLENBQUFYLENBQUEsQ0FBQXpMLE1BQUEsQ0FBQSxDQUFBb0ssQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBdUIsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBdkIsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBdUIsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUFDLEVBQUEsQ0FBQTU2QixDQUFBLENBQUE0NkIsRUFBQSxDQUFBTCxFQUFBLENBQUF2NkIsQ0FBQSxDQUFBdTZCLEVBQUEsQ0FBQUosTUFBQSxDQUFBN3BDLENBQUEsQ0FBQWxGLElBQUEsQ0FBQW1yQyxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBdjJCLENBQUEsQ0FBQTB2QixLQUFBLEdBQUF3RyxDQUFBLENBQUEsV0FBQS9tQixDQUFBLENBQUEsQ0FBQSxHQUFBamMsQ0FBQUEsQ0FBQSxDQUFBZ25DLENBQUEsQ0FBQXBkLElBQUEsQ0FBQTRkLENBQUEsQ0FBQTVkLElBQUEsQ0FBQTN6QixDQUFBLENBQUErSixDQUFBLENBQUFrckIsQ0FBQSxDQUFBamQsQ0FBQSxDQUFBaWxCLENBQUEsQ0FBQThULENBQUEsQ0FBQTFqQyxHQUFBLENBQUFra0MsQ0FBQSxDQUFBbGtDLEdBQUEsQ0FBQTAvQixDQUFBLENBQUE5UCxDQUFBLENBQUE2VCxDQUFBLENBQUFyQixDQUFBLENBQUFRLENBQUEsQ0FBQSxDQUFBNXNDLE1BQUEsQ0FBQSxDQUFBMnBDLE9BQUEsQ0FBQTV5QixDQUFBLENBQUF1WixJQUFBLENBQUFvZCxDQUFBLENBQUFwZCxJQUFBLENBQUF0bUIsR0FBQSxDQUFBMGpDLENBQUEsQ0FBQTFqQyxHQUFBLENBQUFpaUIsS0FBQSxDQUFBMkYsQ0FBQSxDQUFBeEUsTUFBQSxDQUFBcWdCLENBQUEsQ0FBQSxDQUFBOUQsT0FBQSxDQUFBLENBQUFBLE9BQUEsQ0FBQUksQ0FBQSxDQUFBelosSUFBQSxDQUFBNGQsQ0FBQSxDQUFBNWQsSUFBQSxDQUFBdG1CLEdBQUEsQ0FBQWtrQyxDQUFBLENBQUFsa0MsR0FBQSxDQUFBaWlCLEtBQUEsQ0FBQXRYLENBQUEsQ0FBQXlZLE1BQUEsQ0FBQWdmLENBQUEsQ0FBQSxDQUFBeUMsVUFBQSxDQUFBLEVBQUFseUMsQ0FBQSxDQUFBLE1BQUEsQ0FBQStKLENBQUEsQ0FBQSxDQUFBLENBQUEsT0FBQSxDQUFBLFFBQUEsQ0FBQW9vQyxRQUFBLENBQUEsRUFBQXBGLENBQUEsQ0FBQSxLQUFBLENBQUE5UCxDQUFBLENBQUEsQ0FBQSxDQUFBLFFBQUEsQ0FBQSxRQUFBLENBQUEsQ0FBQWpsQixDQUFBLENBQUFpZCxDQUFBLEVBQUFBLENBQUEsQ0FBQS90QixDQUFBLENBQUE2QyxDQUFBLENBQUEvSixDQUFBLENBQUEsR0FBQWl3QyxDQUFBLENBQUFpQyxVQUFBLENBQUEsUUFBQSxFQUFBekMsQ0FBQSxDQUFBcUIsQ0FBQSxFQUFBQSxDQUFBLENBQUE1cEMsQ0FBQSxDQUFBKzFCLENBQUEsQ0FBQThQLENBQUEsQ0FBQSxHQUFBa0QsQ0FBQSxDQUFBa0MsUUFBQSxDQUFBLFFBQUEsQ0FBQSxDQUFBbEMsQ0FBQSxDQUFBbUMsU0FBQSxDQUFBekYsQ0FBQSxDQUFBemxDLENBQUEsQ0FBQTZDLENBQUEsQ0FBQSxDQUFBN0MsQ0FBQSxDQUFBbEgsQ0FBQSxDQUFBLENBQUEsQ0FBQTJzQyxDQUFBLENBQUF6bEMsQ0FBQSxDQUFBKzFCLENBQUEsQ0FBQSxDQUFBLzFCLENBQUEsQ0FBQTZsQyxDQUFBLENBQUEsQ0FBQSxDQUFBLFlBQUEsQ0FBQSxVQUFBLENBQUFsMkIsQ0FBQSxDQUFBMHZCLEtBQUEsQ0FBQWhvQyxJQUFBLENBQUEsSUFBQSxDQUFBeW5CLENBQUEsQ0FBQWlxQixDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQTdDLENBQUEsQ0FBQXZILE1BQUEsQ0FBQTdmLENBQUEsQ0FBQWpqQixNQUFBLENBQUF3dUMsQ0FBQSxDQUFBLENBQUFoTCxLQUFBLENBQUF3RyxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBL21CLENBQUEsQ0FBQW1uQixFQUFBLENBQUE1ZCxRQUFBLENBQUEsQ0FBQThpQixHQUFBLENBQUEsQ0FBQTFlLElBQUEsQ0FBQSxjQUFBM04sQ0FBQSxDQUFBamMsQ0FBQSxDQUFBLENBQUEsR0FBQS9KLENBQUFBLENBQUEsQ0FBQWk5QixDQUFBLENBQUFsekIsQ0FBQSxDQUFBaW5DLE1BQUEsQ0FBQW42QixDQUFBLENBQUFvbUIsQ0FBQSxDQUFBMzlCLFFBQUEsQ0FBQTI5QixDQUFBLENBQUFsSSxVQUFBLENBQUFrSSxDQUFBLENBQUE0SSxNQUFBLENBQUFsUyxJQUFBLENBQUF6c0IsQ0FBQSxDQUFBKzFCLENBQUEsQ0FBQTNOLEtBQUEsQ0FBQXlkLENBQUEsQ0FBQS9tQixDQUFBLENBQUEyTixJQUFBLENBQUE1cEIsQ0FBQSxDQUFBZ29DLGlCQUFBLENBQUE3aUIsVUFBQSxDQUFBa2UsQ0FBQSxDQUFBdjJCLENBQUEsQ0FBQWsyQixDQUFBLENBQUEvMEIsQ0FBQSxDQUFBKzBCLENBQUEsQ0FBQWhqQyxDQUFBLENBQUFpb0MsY0FBQSxDQUFBOXFDLENBQUEsQ0FBQTJQLENBQUEsQ0FBQTlNLENBQUEsQ0FBQWlvQyxjQUFBLENBQUE5cUMsQ0FBQSxDQUFBa21DLENBQUEsQ0FBQSxDQUFBLEVBQUEsR0FBQXAxQixDQUFBLEVBQUFoWSxDQUFBLENBQUFnbUIsQ0FBQSxDQUFBMk4sSUFBQSxDQUFBeVosQ0FBQSxDQUFBcmpDLENBQUEsQ0FBQWlvQyxjQUFBLENBQUE5cUMsQ0FBQSxDQUFBMlAsQ0FBQSxDQUFBbVAsQ0FBQSxDQUFBMk4sSUFBQSxFQUFBeVosQ0FBQSxDQUFBcHRDLENBQUEsRUFBQWdtQixDQUFBLENBQUEyTixJQUFBLENBQUEzYixDQUFBLENBQUEsQ0FBQSxFQUFBLEdBQUFvMUIsQ0FBQSxDQUFBdjJCLENBQUEsQ0FBQXUyQixDQUFBLENBQUFwMUIsQ0FBQSxDQUFBbkIsQ0FBQSxDQUFBM1AsQ0FBQSxDQUFBNkMsQ0FBQSxDQUFBaW9DLGNBQUEsQ0FBQW43QixDQUFBLENBQUF1MkIsQ0FBQSxDQUFBLENBQUEsQ0FBQXBuQixDQUFBLENBQUEyTixJQUFBLEVBQUF5WixDQUFBLENBQUFwMUIsQ0FBQSxDQUFBLENBQUEsQ0FBQWdPLENBQUEsQ0FBQTJOLElBQUEsRUFBQTNiLENBQUEsQ0FBQWdPLENBQUEsQ0FBQTJOLElBQUEsQ0FBQWdaLENBQUEsQ0FBQTNtQixDQUFBLENBQUEyTixJQUFBLENBQUFvWixDQUFBLENBQUEvbUIsQ0FBQSxDQUFBMk4sSUFBQSxDQUFBLENBQUEsQ0FBQSxDQUFBdG1CLEdBQUEsQ0FBQSxhQUFBMlksQ0FBQSxDQUFBamMsQ0FBQSxDQUFBLENBQUEsR0FBQS9KLENBQUFBLENBQUEsQ0FBQWk5QixDQUFBLENBQUFsekIsQ0FBQSxDQUFBaW5DLE1BQUEsQ0FBQW42QixDQUFBLENBQUFvbUIsQ0FBQSxDQUFBMzlCLFFBQUEsQ0FBQTI5QixDQUFBLENBQUFuSSxTQUFBLENBQUFtSSxDQUFBLENBQUE0SSxNQUFBLENBQUF4NEIsR0FBQSxDQUFBbkcsQ0FBQSxDQUFBNkMsQ0FBQSxDQUFBaW5DLE1BQUEsQ0FBQXZnQixNQUFBLENBQUFzYyxDQUFBLENBQUEvbUIsQ0FBQSxDQUFBM1ksR0FBQSxDQUFBdEQsQ0FBQSxDQUFBZ29DLGlCQUFBLENBQUFMLFNBQUEsQ0FBQXRFLENBQUEsQ0FBQXYyQixDQUFBLENBQUFrMkIsQ0FBQSxDQUFBLzBCLENBQUEsQ0FBQSswQixDQUFBLENBQUFoakMsQ0FBQSxDQUFBa29DLGVBQUEsQ0FBQS9xQyxDQUFBLENBQUEyUCxDQUFBLENBQUE5TSxDQUFBLENBQUFrb0MsZUFBQSxDQUFBL3FDLENBQUEsQ0FBQWttQyxDQUFBLENBQUEsQ0FBQSxFQUFBLEdBQUFwMUIsQ0FBQSxFQUFBaFksQ0FBQSxDQUFBZ21CLENBQUEsQ0FBQTNZLEdBQUEsQ0FBQSsvQixDQUFBLENBQUFyakMsQ0FBQSxDQUFBa29DLGVBQUEsQ0FBQS9xQyxDQUFBLENBQUEyUCxDQUFBLENBQUFtUCxDQUFBLENBQUEzWSxHQUFBLEVBQUErL0IsQ0FBQSxDQUFBcHRDLENBQUEsRUFBQWdtQixDQUFBLENBQUEzWSxHQUFBLENBQUEySyxDQUFBLENBQUEsQ0FBQSxFQUFBLEdBQUFvMUIsQ0FBQSxDQUFBdjJCLENBQUEsQ0FBQXUyQixDQUFBLENBQUFwMUIsQ0FBQSxDQUFBbkIsQ0FBQSxDQUFBM1AsQ0FBQSxDQUFBNkMsQ0FBQSxDQUFBa29DLGVBQUEsQ0FBQXA3QixDQUFBLENBQUF1MkIsQ0FBQSxDQUFBLENBQUEsQ0FBQXBuQixDQUFBLENBQUEzWSxHQUFBLEVBQUErL0IsQ0FBQSxDQUFBcDFCLENBQUEsQ0FBQSxDQUFBLENBQUFnTyxDQUFBLENBQUEzWSxHQUFBLEVBQUEySyxDQUFBLENBQUFnTyxDQUFBLENBQUEzWSxHQUFBLENBQUFzL0IsQ0FBQSxDQUFBM21CLENBQUEsQ0FBQTNZLEdBQUEsQ0FBQTAvQixDQUFBLENBQUEvbUIsQ0FBQSxDQUFBM1ksR0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUFpbEMsSUFBQSxDQUFBLENBQUEzZSxJQUFBLENBQUEsY0FBQTNOLENBQUEsQ0FBQWpjLENBQUEsQ0FBQSxDQUFBLEdBQUEvSixDQUFBQSxDQUFBLENBQUFpOUIsQ0FBQSxDQUFBcG1CLENBQUEsQ0FBQTlNLENBQUEsQ0FBQWluQyxNQUFBLENBQUFyRSxDQUFBLENBQUE5MUIsQ0FBQSxDQUFBZ3ZCLE1BQUEsQ0FBQWxTLElBQUEsQ0FBQTljLENBQUEsQ0FBQWtlLFVBQUEsQ0FBQWdZLENBQUEsQ0FBQWwyQixDQUFBLENBQUF5WSxLQUFBLENBQUE4ZCxDQUFBLENBQUF2MkIsQ0FBQSxDQUFBdlgsUUFBQSxDQUFBdVgsQ0FBQSxDQUFBa2UsVUFBQSxDQUFBbGUsQ0FBQSxDQUFBZ3ZCLE1BQUEsQ0FBQWxTLElBQUEsQ0FBQTNiLENBQUEsQ0FBQWdPLENBQUEsQ0FBQTJOLElBQUEsQ0FBQTVwQixDQUFBLENBQUFnb0MsaUJBQUEsQ0FBQTdpQixVQUFBLENBQUF1Z0IsQ0FBQSxDQUFBejNCLENBQUEsQ0FBQW8xQixDQUFBLENBQUE2QyxDQUFBLENBQUFqNEIsQ0FBQSxDQUFBak8sQ0FBQSxDQUFBaW9DLGNBQUEsQ0FBQWpGLENBQUEsQ0FBQUssQ0FBQSxDQUFBaUQsQ0FBQSxDQUFBLFNBQUF0bUMsQ0FBQSxDQUFBMG5DLEVBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBMW5DLENBQUEsQ0FBQThuQyxTQUFBLENBQUEsVUFBQTluQyxDQUFBLENBQUEwbkMsRUFBQSxDQUFBLENBQUEsQ0FBQSxDQUFBMW5DLENBQUEsQ0FBQThuQyxTQUFBLENBQUEsQ0FBQSxDQUFBNWMsQ0FBQSxDQUFBLFNBQUFsckIsQ0FBQSxDQUFBcW5DLEVBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQXJuQyxDQUFBLENBQUE0bkMsV0FBQSxDQUFBLFVBQUE1bkMsQ0FBQSxDQUFBcW5DLEVBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBcm5DLENBQUEsQ0FBQTRuQyxXQUFBLENBQUEsQ0FBQSxDQUFBYixDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEvbUMsQ0FBQSxDQUFBODdCLE1BQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxFQUFBNEosQ0FBQSxFQUFBenZDLENBQUEsQ0FBQWdtQixDQUFBLENBQUEyTixJQUFBLENBQUEwYyxDQUFBLENBQUFwYixDQUFBLENBQUE2YixDQUFBLENBQUEvbUMsQ0FBQSxDQUFBaW9DLGNBQUEsQ0FBQWpGLENBQUEsQ0FBQUosQ0FBQSxDQUFBLENBQUEsRUFBQTNzQyxDQUFBLEVBQUFrSCxDQUFBLENBQUF1b0MsQ0FBQSxDQUFBLENBQUF6dkMsQ0FBQSxJQUFBZ21CLENBQUEsQ0FBQTJOLElBQUEsRUFBQTBjLENBQUEsQ0FBQXBiLENBQUEsQ0FBQTZiLENBQUEsQ0FBQSxFQUFBYixDQUFBLENBQUEsQ0FBQSxHQUFBaFQsQ0FBQSxDQUFBalgsQ0FBQSxDQUFBMk4sSUFBQSxDQUFBNXBCLENBQUEsQ0FBQWdvQyxpQkFBQSxDQUFBN2lCLFVBQUEsQ0FBQW1oQixDQUFBLENBQUFwYixDQUFBLENBQUE2YixDQUFBLENBQUExRCxDQUFBLENBQUEsQ0FBQW5RLENBQUEsQ0FBQSxDQUFBLEVBQUFnVCxDQUFBLENBQUEvb0MsQ0FBQSxDQUFBKzFCLENBQUEsQ0FBQSxJQUFBalgsQ0FBQSxDQUFBMk4sSUFBQSxFQUFBMGMsQ0FBQSxDQUFBcGIsQ0FBQSxDQUFBNmIsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUF6akMsR0FBQSxDQUFBLGFBQUEyWSxDQUFBLENBQUFqYyxDQUFBLENBQUEsQ0FBQSxHQUFBL0osQ0FBQUEsQ0FBQSxDQUFBaTlCLENBQUEsQ0FBQXBtQixDQUFBLENBQUE5TSxDQUFBLENBQUFpbkMsTUFBQSxDQUFBckUsQ0FBQSxDQUFBOTFCLENBQUEsQ0FBQWd2QixNQUFBLENBQUF4NEIsR0FBQSxDQUFBd0osQ0FBQSxDQUFBaWUsU0FBQSxDQUFBaVksQ0FBQSxDQUFBbDJCLENBQUEsQ0FBQTRaLE1BQUEsQ0FBQTJjLENBQUEsQ0FBQXYyQixDQUFBLENBQUF2WCxRQUFBLENBQUF1WCxDQUFBLENBQUFpZSxTQUFBLENBQUFqZSxDQUFBLENBQUFndkIsTUFBQSxDQUFBeDRCLEdBQUEsQ0FBQTJLLENBQUEsQ0FBQWdPLENBQUEsQ0FBQTNZLEdBQUEsQ0FBQXRELENBQUEsQ0FBQWdvQyxpQkFBQSxDQUFBTCxTQUFBLENBQUFqQyxDQUFBLENBQUF6M0IsQ0FBQSxDQUFBbzFCLENBQUEsQ0FBQTZDLENBQUEsQ0FBQWo0QixDQUFBLENBQUFqTyxDQUFBLENBQUFrb0MsZUFBQSxDQUFBbEYsQ0FBQSxDQUFBSyxDQUFBLENBQUFpRCxDQUFBLENBQUEsUUFBQXRtQyxDQUFBLENBQUEwbkMsRUFBQSxDQUFBLENBQUEsQ0FBQSxDQUFBeGMsQ0FBQSxDQUFBb2IsQ0FBQSxDQUFBLENBQUF0bUMsQ0FBQSxDQUFBK25DLFVBQUEsQ0FBQSxXQUFBL25DLENBQUEsQ0FBQTBuQyxFQUFBLENBQUEsQ0FBQSxDQUFBLENBQUExbkMsQ0FBQSxDQUFBK25DLFVBQUEsQ0FBQSxDQUFBLENBQUFoQixDQUFBLENBQUEsUUFBQS9tQyxDQUFBLENBQUFxbkMsRUFBQSxDQUFBLENBQUEsQ0FBQSxDQUFBcm5DLENBQUEsQ0FBQTZuQyxZQUFBLENBQUEsV0FBQTduQyxDQUFBLENBQUFxbkMsRUFBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUFybkMsQ0FBQSxDQUFBNm5DLFlBQUEsQ0FBQSxDQUFBLENBQUFiLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQWhuQyxDQUFBLENBQUE4N0IsTUFBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLEVBQUE0SixDQUFBLEVBQUF4UyxDQUFBLENBQUFqWCxDQUFBLENBQUEzWSxHQUFBLENBQUE0bkIsQ0FBQSxDQUFBNmIsQ0FBQSxDQUFBQyxDQUFBLENBQUFobkMsQ0FBQSxDQUFBa29DLGVBQUEsQ0FBQWxGLENBQUEsQ0FBQUosQ0FBQSxDQUFBLENBQUEsRUFBQTFQLENBQUEsRUFBQS8xQixDQUFBLENBQUF1b0MsQ0FBQSxDQUFBLENBQUF4UyxDQUFBLElBQUFqWCxDQUFBLENBQUEzWSxHQUFBLEVBQUE0bkIsQ0FBQSxDQUFBNmIsQ0FBQSxDQUFBQyxDQUFBLENBQUEsRUFBQWQsQ0FBQSxDQUFBLENBQUEsR0FBQWp3QyxDQUFBLENBQUFnbUIsQ0FBQSxDQUFBM1ksR0FBQSxDQUFBdEQsQ0FBQSxDQUFBZ29DLGlCQUFBLENBQUFMLFNBQUEsQ0FBQXpjLENBQUEsQ0FBQTZiLENBQUEsQ0FBQUMsQ0FBQSxDQUFBM0QsQ0FBQSxDQUFBLENBQUFwdEMsQ0FBQSxDQUFBLENBQUEsRUFBQWl3QyxDQUFBLENBQUEvb0MsQ0FBQSxDQUFBbEgsQ0FBQSxDQUFBLElBQUFnbUIsQ0FBQSxDQUFBM1ksR0FBQSxFQUFBNG5CLENBQUEsQ0FBQTZiLENBQUEsQ0FBQUMsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQXdCLE9BQUEsQ0FBQSxDQUFBNWUsSUFBQSxDQUFBLGVBQUEsQ0FBQTNOLENBQUEsQ0FBQW1uQixFQUFBLENBQUE1ZCxRQUFBLENBQUEraUIsSUFBQSxDQUFBM2UsSUFBQSxDQUFBbDFCLEtBQUEsQ0FBQSxJQUFBLENBQUF5RCxTQUFBLEVBQUE4akIsQ0FBQSxDQUFBbW5CLEVBQUEsQ0FBQTVkLFFBQUEsQ0FBQThpQixHQUFBLENBQUExZSxJQUFBLENBQUFsMUIsS0FBQSxDQUFBLElBQUEsQ0FBQXlELFNBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQW1MLEdBQUEsQ0FBQSxjQUFBLENBQUEyWSxDQUFBLENBQUFtbkIsRUFBQSxDQUFBNWQsUUFBQSxDQUFBK2lCLElBQUEsQ0FBQWpsQyxHQUFBLENBQUE1TyxLQUFBLENBQUEsSUFBQSxDQUFBeUQsU0FBQSxFQUFBOGpCLENBQUEsQ0FBQW1uQixFQUFBLENBQUE1ZCxRQUFBLENBQUE4aUIsR0FBQSxDQUFBaGxDLEdBQUEsQ0FBQTVPLEtBQUEsQ0FBQSxJQUFBLENBQUF5RCxTQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsRUFBQSxDQUFBOGpCLENBQUEsQ0FBQW1uQixFQUFBLENBQUE1ZCxRQUFBLENBQUF2SixDQUFBLENBQUFqakIsTUFBQSxDQUFBaWpCLENBQUEsQ0FBQTdXLElBQUEsQ0FBQSxHQUFBLENBQUEsQ0FBQSxDQUFBcVEsSUFBQSxDQUFBd0csQ0FBQSxDQUFBN1csSUFBQSxDQUFBYSxZQUFBLENBQUFnVyxDQUFBLENBQUE3VyxJQUFBLENBQUFhLFlBQUEsQ0FBQSxTQUFBakcsQ0FBQSxDQUFBLENBQUEsTUFBQSxVQUFBL0osQ0FBQSxDQUFBLENBQUEsTUFBQSxDQUFBLENBQUFnbUIsQ0FBQSxDQUFBeEcsSUFBQSxDQUFBeGYsQ0FBQSxDQUFBK0osQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLFNBQUFBLENBQUEsQ0FBQS9KLENBQUEsQ0FBQWk5QixDQUFBLENBQUEsQ0FBQSxNQUFBLENBQUEsQ0FBQWpYLENBQUEsQ0FBQXhHLElBQUEsQ0FBQXpWLENBQUEsQ0FBQWt6QixDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBalgsQ0FBQSxDQUFBaGxCLEVBQUEsQ0FBQStCLE1BQUEsQ0FBQSxDQUFBeXZDLGdCQUFBLENBQUEsVUFBQSxDQUFBLEdBQUF4c0IsQ0FBQUEsQ0FBQSxDQUFBLGlCQUFBcm9CLENBQUFBLFFBQUEsQ0FBQXdDLGFBQUEsQ0FBQSxLQUFBLENBQUEsQ0FBQSxhQUFBLENBQUEsV0FBQSxDQUFBLE1BQUEsV0FBQSxDQUFBLE1BQUEsTUFBQW9sQixFQUFBLENBQUFTLENBQUEsQ0FBQSxzQkFBQSxDQUFBLFNBQUFBLENBQUEsQ0FBQSxDQUFBQSxDQUFBLENBQUEyQixjQUFBLEdBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsRUFBQSxDQUFBOHFCLGVBQUEsQ0FBQSwwQkFBQSxDQUFBLE1BQUEsTUFBQTdzQixHQUFBLENBQUEsc0JBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsR0FBQTZwQixDQUFBQSxDQUFBLENBQUEsYUFBQSxDQUFBUSxDQUFBLENBQUEsa0JBQUEsQ0FBQUksQ0FBQSxDQUFBLHFCQUFBLENBQUFwYixDQUFBLENBQUFqUCxDQUFBLENBQUFBLENBQUEsQ0FBQWdxQixPQUFBLENBQUEsQ0FBQUQsTUFBQSxDQUFBLEVBQUEsQ0FBQSxDQUFBLFNBQUEvcEIsQ0FBQSxDQUFBamMsQ0FBQSxDQUFBLENBQUEsUUFBQS9KLENBQUFBLENBQUEsQ0FBQWdtQixDQUFBLENBQUFqYyxDQUFBLENBQUEvSixDQUFBLENBQUEsQ0FBQSxHQUFBaTlCLENBQUFBLENBQUEsQ0FBQWdULENBQUEsQ0FBQWxtQyxDQUFBLENBQUF2SyxJQUFBLENBQUEsRUFBQSxFQUFBLENBQUEsTUFBQSxPQUFBd21CLENBQUEsQ0FBQWhtQixDQUFBLEVBQUEsQ0FBQStKLENBQUEsQ0FBQTJvQyxHQUFBLENBQUEsSUFBQSxDQUFBM29DLENBQUEsQ0FBQTJvQyxHQUFBLEVBQUExc0IsQ0FBQSxDQUFBaVgsQ0FBQSxDQUFBMFYsS0FBQSxDQUFBLENBQUEsQ0FBQTNzQixDQUFBLENBQUE0SixVQUFBLENBQUE1SixDQUFBLENBQUEsQ0FBQThoQixLQUFBLENBQUE5aEIsQ0FBQSxDQUFBLENBQUFqYyxDQUFBLENBQUEyb0MsR0FBQSxDQUFBelYsQ0FBQSxDQUFBMlYsR0FBQSxDQUFBLENBQUE1c0IsQ0FBQSxDQUFBaVgsQ0FBQSxDQUFBMlYsR0FBQSxFQUFBM1YsQ0FBQSxDQUFBMlYsR0FBQSxDQUFBLEVBQUE1c0IsQ0FBQSxDQUFBLENBQUEsQ0FBQUEsQ0FBQSxDQUFBaVgsQ0FBQSxDQUFBN0ssR0FBQSxDQUFBNkssQ0FBQSxDQUFBN0ssR0FBQSxDQUFBcE0sQ0FBQSxDQUFBLENBQUEsU0FBQWlYLENBQUFBLENBQUEsQ0FBQWo5QixDQUFBLENBQUEsQ0FBQSxHQUFBaTlCLENBQUFBLENBQUEsQ0FBQWpsQixDQUFBLEVBQUEsQ0FBQW5CLENBQUEsQ0FBQW9tQixDQUFBLENBQUE0VixLQUFBLENBQUEsRUFBQSxDQUFBLE1BQUE3eUMsQ0FBQUEsQ0FBQSxDQUFBQSxDQUFBLENBQUF1RixXQUFBLEVBQUEsQ0FBQXVyQyxDQUFBLENBQUExRCxDQUFBLENBQUEsU0FBQXBuQixDQUFBLENBQUEybUIsQ0FBQSxDQUFBLENBQUEsR0FBQXpsQyxDQUFBQSxDQUFBLENBQUE2bEMsQ0FBQSxDQUFBSixDQUFBLENBQUFtRyxFQUFBLENBQUFyb0MsSUFBQSxDQUFBekssQ0FBQSxDQUFBLENBQUFvdEMsQ0FBQSxDQUFBTCxDQUFBLEVBQUFKLENBQUEsQ0FBQTFzQixLQUFBLENBQUE4c0IsQ0FBQSxDQUFBLENBQUEvMEIsQ0FBQSxDQUFBMjBCLENBQUEsQ0FBQW9HLEtBQUEsRUFBQSxNQUFBLENBQUEsTUFBQTNGLENBQUFBLENBQUEsRUFBQWxtQyxDQUFBLENBQUErMUIsQ0FBQSxDQUFBamxCLENBQUEsQ0FBQSxDQUFBbzFCLENBQUEsQ0FBQSxDQUFBblEsQ0FBQSxDQUFBd1MsQ0FBQSxDQUFBejNCLENBQUEsQ0FBQSxDQUFBeE0sS0FBQSxDQUFBLENBQUF0RSxDQUFBLENBQUF1b0MsQ0FBQSxDQUFBejNCLENBQUEsQ0FBQSxDQUFBeE0sS0FBQSxDQUFBLENBQUFxTCxDQUFBLENBQUFvbUIsQ0FBQSxDQUFBNFYsS0FBQSxDQUFBM3JDLENBQUEsQ0FBQTJyQyxLQUFBLENBQUEsQ0FBQSxDQUFBLEVBQUE5b0MsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBOE0sQ0FBQSxDQUFBeFYsTUFBQSxFQUFBLFlBQUF3VixDQUFBLENBQUExTCxJQUFBLEVBQUEsRUFBQTZhLENBQUEsQ0FBQWpqQixNQUFBLENBQUE4VCxDQUFBLENBQUE4MUIsQ0FBQSxDQUFBcUcsV0FBQSxDQUFBLENBQUEvVixDQUFBLEVBQUEwUCxDQUFBLENBQUEzc0MsQ0FBQSxDQUFBLENBQUEsU0FBQTZXLENBQUFBLENBQUEsQ0FBQW1QLENBQUEsQ0FBQWpjLENBQUEsQ0FBQS9KLENBQUEsQ0FBQSxDQUFBLE1BQUFBLENBQUFBLENBQUEsQ0FBQSxDQUFBQSxDQUFBLENBQUEsQ0FBQSxFQUFBLENBQUEsQ0FBQSxFQUFBLEVBQUFBLENBQUEsQ0FBQWdtQixDQUFBLENBQUEsR0FBQWpjLENBQUEsQ0FBQWljLENBQUEsRUFBQWhtQixDQUFBLENBQUEsRUFBQSxFQUFBQSxDQUFBLENBQUErSixDQUFBLENBQUEsRUFBQSxFQUFBL0osQ0FBQSxDQUFBZ21CLENBQUEsQ0FBQSxHQUFBamMsQ0FBQSxDQUFBaWMsQ0FBQSxHQUFBLEVBQUEsQ0FBQSxDQUFBaG1CLENBQUEsQ0FBQSxDQUFBZ21CLENBQUEsQ0FBQSxJQUFBMm1CLENBQUFBLENBQUEsQ0FBQXpsQyxDQUFBLENBQUEsNEpBQUEsQ0FBQTZsQyxDQUFBLENBQUEseUJBQUEsQ0FBQUssQ0FBQSxDQUFBLENBQUEsQ0FBQTBGLEVBQUEsQ0FBQSxxRkFBQSxDQUFBN3lCLEtBQUEsQ0FBQSxlQUFBK0YsQ0FBQSxDQUFBLENBQUEsTUFBQSxDQUFBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBOHNCLEVBQUEsQ0FBQSw2R0FBQSxDQUFBN3lCLEtBQUEsQ0FBQSxlQUFBK0YsQ0FBQSxDQUFBLENBQUEsTUFBQSxDQUFBLEtBQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxLQUFBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsS0FBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBOHNCLEVBQUEsQ0FBQSwwQ0FBQSxDQUFBN3lCLEtBQUEsQ0FBQSxlQUFBK0YsQ0FBQSxDQUFBLENBQUEsTUFBQSxDQUFBMEssUUFBQSxDQUFBMUssQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLEVBQUEsQ0FBQSxDQUFBMEssUUFBQSxDQUFBMUssQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLEVBQUEsQ0FBQSxDQUFBMEssUUFBQSxDQUFBMUssQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLEVBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQThzQixFQUFBLENBQUEsaUNBQUEsQ0FBQTd5QixLQUFBLENBQUEsZUFBQStGLENBQUEsQ0FBQSxDQUFBLE1BQUEsQ0FBQTBLLFFBQUEsQ0FBQTFLLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLEVBQUEsQ0FBQSxDQUFBMEssUUFBQSxDQUFBMUssQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsRUFBQSxDQUFBLENBQUEwSyxRQUFBLENBQUExSyxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxFQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUE4c0IsRUFBQSxDQUFBLDJHQUFBLENBQUFDLEtBQUEsQ0FBQSxNQUFBLENBQUE5eUIsS0FBQSxDQUFBLGVBQUErRixDQUFBLENBQUEsQ0FBQSxNQUFBLENBQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLEdBQUEsQ0FBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLEdBQUEsQ0FBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQWhPLENBQUEsQ0FBQWdPLENBQUEsQ0FBQWl0QixLQUFBLENBQUEsU0FBQWxwQyxDQUFBLENBQUEvSixDQUFBLENBQUFpOUIsQ0FBQSxDQUFBcG1CLENBQUEsQ0FBQSxDQUFBLE1BQUEsSUFBQW1QLENBQUFBLENBQUEsQ0FBQWl0QixLQUFBLENBQUFqeUMsRUFBQSxDQUFBaWYsS0FBQSxDQUFBbFcsQ0FBQSxDQUFBL0osQ0FBQSxDQUFBaTlCLENBQUEsQ0FBQXBtQixDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUE0NEIsQ0FBQSxDQUFBLENBQUF5RCxJQUFBLENBQUEsQ0FBQWhxQixLQUFBLENBQUEsQ0FBQWlxQixHQUFBLENBQUEsQ0FBQXZoQyxHQUFBLENBQUEsQ0FBQSxDQUFBcFMsSUFBQSxDQUFBLE1BQUEsQ0FBQSxDQUFBNHpDLEtBQUEsQ0FBQSxDQUFBeGhDLEdBQUEsQ0FBQSxDQUFBLENBQUFwUyxJQUFBLENBQUEsTUFBQSxDQUFBLENBQUE2ekMsSUFBQSxDQUFBLENBQUF6aEMsR0FBQSxDQUFBLENBQUEsQ0FBQXBTLElBQUEsQ0FBQSxNQUFBLENBQUEsQ0FBQSxDQUFBLENBQUE4ekMsSUFBQSxDQUFBLENBQUFwcUIsS0FBQSxDQUFBLENBQUFxcUIsR0FBQSxDQUFBLENBQUEzaEMsR0FBQSxDQUFBLENBQUEsQ0FBQXBTLElBQUEsQ0FBQSxTQUFBLENBQUEsQ0FBQWcwQyxVQUFBLENBQUEsQ0FBQTVoQyxHQUFBLENBQUEsQ0FBQSxDQUFBcFMsSUFBQSxDQUFBLFNBQUEsQ0FBQSxDQUFBaTBDLFNBQUEsQ0FBQSxDQUFBN2hDLEdBQUEsQ0FBQSxDQUFBLENBQUFwUyxJQUFBLENBQUEsU0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUF5d0MsQ0FBQSxDQUFBLENBQUEsT0FBQSxDQUFBMEMsS0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBdmdCLEdBQUEsQ0FBQSxHQUFBLENBQUEsQ0FBQW9DLE9BQUEsQ0FBQSxDQUFBcEMsR0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBc2hCLE9BQUEsQ0FBQSxDQUFBZCxHQUFBLENBQUEsR0FBQSxDQUFBRCxLQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBdEMsQ0FBQSxDQUFBcjRCLENBQUEsQ0FBQTlZLE9BQUEsQ0FBQSxFQUFBLENBQUErMUIsQ0FBQSxDQUFBalAsQ0FBQSxDQUFBLEtBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBOHFCLENBQUEsQ0FBQTlxQixDQUFBLENBQUFsa0IsSUFBQSxDQUFBbXpCLENBQUEsQ0FBQTFULEtBQUEsQ0FBQXNOLE9BQUEsQ0FBQSxpQ0FBQSxDQUFBd2hCLENBQUEsQ0FBQTZDLElBQUEsQ0FBQWplLENBQUEsQ0FBQTFULEtBQUEsQ0FBQW95QixlQUFBLENBQUFoMUMsT0FBQSxDQUFBLE1BQUEsRUFBQSxDQUFBLENBQUEsQ0FBQW15QyxDQUFBLENBQUFyQixDQUFBLENBQUEsU0FBQXpwQixDQUFBLENBQUFqYyxDQUFBLENBQUEsQ0FBQUEsQ0FBQSxDQUFBeUIsS0FBQSxDQUFBLElBQUF3YSxDQUFBLENBQUFqYyxDQUFBLENBQUFtZixLQUFBLENBQUEwcUIsS0FBQSxDQUFBLENBQUFoaUMsR0FBQSxDQUFBLENBQUEsQ0FBQXBTLElBQUEsQ0FBQSxTQUFBLENBQUFrekMsR0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBMTZCLENBQUEsQ0FBQWhYLEVBQUEsQ0FBQWdsQixDQUFBLENBQUFqakIsTUFBQSxDQUFBaVYsQ0FBQSxDQUFBOVcsU0FBQSxDQUFBLENBQUErZSxLQUFBLENBQUEsZUFBQXBKLENBQUEsQ0FBQTNQLENBQUEsQ0FBQTZsQyxDQUFBLENBQUFLLENBQUEsQ0FBQSxDQUFBLEdBQUF2MkIsQ0FBQSxHQUFBOU0sQ0FBQSxDQUFBLE1BQUEsTUFBQThvQyxLQUFBLENBQUEsQ0FBQSxJQUFBLENBQUEsSUFBQSxDQUFBLElBQUEsQ0FBQSxJQUFBLENBQUEsQ0FBQSxJQUFBLENBQUEsQ0FBQWg4QixDQUFBLENBQUExVixNQUFBLEVBQUEwVixDQUFBLENBQUF4WCxRQUFBLElBQUF3WCxDQUFBLENBQUFtUCxDQUFBLENBQUFuUCxDQUFBLENBQUEsQ0FBQTRLLEdBQUEsQ0FBQXZhLENBQUEsQ0FBQSxDQUFBQSxDQUFBLENBQUE2QyxDQUFBLEVBQUEsR0FBQWttQyxDQUFBQSxDQUFBLENBQUEsSUFBQSxDQUFBSSxDQUFBLENBQUFycUIsQ0FBQSxDQUFBeG1CLElBQUEsQ0FBQXFYLENBQUEsQ0FBQSxDQUFBb2UsQ0FBQSxDQUFBLEtBQUE0ZCxLQUFBLENBQUEsRUFBQSxDQUFBLE1BQUEzckMsQ0FBQUEsQ0FBQSxHQUFBNkMsQ0FBQSxHQUFBOE0sQ0FBQSxDQUFBLENBQUFBLENBQUEsQ0FBQTNQLENBQUEsQ0FBQTZsQyxDQUFBLENBQUFLLENBQUEsQ0FBQSxDQUFBaUQsQ0FBQSxDQUFBLE9BQUEsRUFBQSxXQUFBQSxDQUFBLENBQUEsS0FBQXB3QixLQUFBLENBQUFnZCxDQUFBLENBQUFwbUIsQ0FBQSxDQUFBLEVBQUE4MUIsQ0FBQSxDQUFBL29CLFFBQUEsQ0FBQSxDQUFBLFVBQUF5c0IsQ0FBQSxFQUFBUyxDQUFBLENBQUFyQixDQUFBLENBQUF5RCxJQUFBLENBQUFocUIsS0FBQSxDQUFBLFNBQUFsRCxDQUFBLENBQUFqYyxDQUFBLENBQUEsQ0FBQWtyQixDQUFBLENBQUFsckIsQ0FBQSxDQUFBNkgsR0FBQSxDQUFBLENBQUE1UixDQUFBLENBQUE2VyxDQUFBLENBQUE5TSxDQUFBLENBQUE2SCxHQUFBLENBQUEsQ0FBQTdILENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLElBQUEsRUFBQSxXQUFBc21DLENBQUEsRUFBQXg1QixDQUFBLFdBQUFtQixDQUFBQSxDQUFBLENBQUE4NEIsQ0FBQSxDQUFBckIsQ0FBQSxDQUFBLFNBQUF6cEIsQ0FBQSxDQUFBamMsQ0FBQSxDQUFBLENBQUE4TSxDQUFBLENBQUE5TSxDQUFBLENBQUF5QixLQUFBLENBQUEsR0FBQXlrQyxDQUFBLENBQUFsbUMsQ0FBQSxDQUFBeUIsS0FBQSxDQUFBLENBQUFxTCxDQUFBLENBQUE5TSxDQUFBLENBQUF5QixLQUFBLENBQUEsQ0FBQXBOLEtBQUEsRUFBQSxFQUFBLENBQUEsQ0FBQSxDQUFBMHlDLENBQUEsQ0FBQXJCLENBQUEsQ0FBQSxTQUFBMWxDLENBQUEsQ0FBQWt6QixDQUFBLENBQUEsQ0FBQSxHQUFBMFAsQ0FBQUEsQ0FBQSxDQUFBMVAsQ0FBQSxDQUFBenhCLEtBQUEsQ0FBQXNsQyxDQUFBLENBQUE3VCxDQUFBLENBQUEvVCxLQUFBLENBQUEsU0FBQWxELENBQUEsQ0FBQWpjLENBQUEsQ0FBQSxDQUFBLEdBQUEsQ0FBQWttQyxDQUFBLENBQUF0RCxDQUFBLENBQUEsRUFBQTFQLENBQUEsQ0FBQTVFLEVBQUEsQ0FBQSxDQUFBLEdBQUEsVUFBQXJTLENBQUEsRUFBQSxNQUFBblAsQ0FBQSxDQUFBbVAsQ0FBQSxDQUFBLENBQUEsT0FBQWlxQixDQUFBLENBQUF0RCxDQUFBLENBQUEsQ0FBQTFQLENBQUEsQ0FBQTVFLEVBQUEsQ0FBQTRYLENBQUEsQ0FBQTRDLEtBQUEsQ0FBQSxDQUFBLENBQUE1QyxDQUFBLENBQUF0RCxDQUFBLENBQUEsQ0FBQTVpQyxDQUFBLENBQUE2SCxHQUFBLEVBQUE1UixDQUFBLENBQUE2VyxDQUFBLENBQUFtUCxDQUFBLENBQUEsQ0FBQWpjLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBa21DLENBQUEsQ0FBQXRELENBQUEsQ0FBQSxFQUFBLEVBQUEzbUIsQ0FBQSxDQUFBdGhCLE9BQUEsQ0FBQSxJQUFBLENBQUF1ckMsQ0FBQSxDQUFBdEQsQ0FBQSxDQUFBLENBQUF2dUMsS0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxHQUFBNnhDLENBQUEsQ0FBQXRELENBQUEsQ0FBQSxDQUFBLENBQUEsRUFBQSxDQUFBLENBQUExUCxDQUFBLENBQUE0VyxJQUFBLEdBQUE1RCxDQUFBLENBQUE0QyxLQUFBLENBQUE1VixDQUFBLENBQUE0VyxJQUFBLENBQUE1RCxDQUFBLENBQUF0RCxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxJQUFBLEVBQUE1aUMsQ0FBQSxDQUFBLENBQUEsQ0FBQTRNLEVBQUEsQ0FBQSxZQUFBcVAsQ0FBQSxDQUFBLENBQUEsR0FBQWhtQixDQUFBQSxDQUFBLENBQUFnWSxDQUFBLENBQUFnTyxDQUFBLENBQUEsQ0FBQWlYLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQXBtQixDQUFBLENBQUEsSUFBQSxDQUFBLE1BQUFpNkIsQ0FBQUEsQ0FBQSxDQUFBckIsQ0FBQSxDQUFBLFNBQUF6cEIsQ0FBQSxDQUFBMm1CLENBQUEsQ0FBQSxDQUFBLEdBQUF6bEMsQ0FBQUEsQ0FBQSxDQUFBNmxDLENBQUEsQ0FBQS9zQyxDQUFBLENBQUEyc0MsQ0FBQSxDQUFBbmhDLEtBQUEsQ0FBQSxDQUFBLE1BQUF1aEMsQ0FBQUEsQ0FBQSxHQUFBN2xDLENBQUEsQ0FBQTJQLENBQUEsQ0FBQTgxQixDQUFBLENBQUFuaEMsS0FBQSxDQUFBLEVBQUFtaEMsQ0FBQSxDQUFBdFUsRUFBQSxFQUFBc1UsQ0FBQSxDQUFBdFUsRUFBQSxDQUFBeGhCLENBQUEsQ0FBQWc4QixLQUFBLENBQUEsRUFBQSxFQUFBLENBQUEvQixDQUFBLENBQUFuRSxDQUFBLENBQUF6akIsS0FBQSxDQUFBLFNBQUFsRCxDQUFBLENBQUFobUIsQ0FBQSxDQUFBLENBQUEsTUFBQSxPQUFBK3NDLENBQUEsQ0FBQS9zQyxDQUFBLENBQUE0UixHQUFBLENBQUEsQ0FBQXFyQixDQUFBLENBQUE4UCxDQUFBLENBQUEvc0MsQ0FBQSxDQUFBNFIsR0FBQSxDQUFBLEdBQUExSyxDQUFBLENBQUFsSCxDQUFBLENBQUE0UixHQUFBLENBQUEsQ0FBQTdILENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBa3pCLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQTZXLE1BQUEsQ0FBQSxpQkFBQSxDQUFBLEdBQUE5dEIsQ0FBQUEsQ0FBQSxDQUFBLEVBQUEsQ0FBQWpjLENBQUEsQ0FBQSxJQUFBLENBQUEsTUFBQSttQyxDQUFBQSxDQUFBLENBQUFyQixDQUFBLENBQUEsU0FBQXp2QyxDQUFBLENBQUFpOUIsQ0FBQSxDQUFBLENBQUFsekIsQ0FBQSxDQUFBa3pCLENBQUEsQ0FBQXp4QixLQUFBLENBQUEsRUFBQXdhLENBQUEsQ0FBQXRuQixJQUFBLENBQUFzQixDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQWdtQixDQUFBLENBQUE1ZSxHQUFBLEVBQUEsQ0FBQSxDQUFBLENBQUEyc0MsVUFBQSxDQUFBLG9CQUFBL3RCLENBQUEsQ0FBQWpjLENBQUEsQ0FBQSxDQUFBLEdBQUFrekIsQ0FBQUEsQ0FBQSxDQUFBamxCLENBQUEsQ0FBQWdPLENBQUEsQ0FBQSxDQUFBblAsQ0FBQSxDQUFBb21CLENBQUEsQ0FBQTZXLE1BQUEsRUFBQSxDQUFBbkgsQ0FBQSxDQUFBOEMsQ0FBQSxDQUFBNTRCLENBQUEsQ0FBQSxDQUFBM1AsQ0FBQSxDQUFBLElBQUEsS0FBQTBzQyxLQUFBLEVBQUEsQ0FBQTU3QixDQUFBLENBQUEsYUFBQSxDQUFBLENBQUEsSUFBQSxDQUFBKzBCLENBQUEsQ0FBQTdsQyxDQUFBLENBQUF5bEMsQ0FBQSxDQUFBbmhDLEtBQUEsQ0FBQSxFQUFBbWhDLENBQUEsQ0FBQXRVLEVBQUEsQ0FBQW54QixDQUFBLENBQUEyckMsS0FBQSxDQUFBLENBQUF6RixDQUFBLENBQUFMLENBQUEsQ0FBQTN1QyxLQUFBLEVBQUEsQ0FBQSxNQUFBNitCLENBQUFBLENBQUEsQ0FBQUEsQ0FBQSxDQUFBMFAsQ0FBQSxDQUFBbmhDLEtBQUEsQ0FBQSxDQUFBc2xDLENBQUEsQ0FBQW5FLENBQUEsQ0FBQXpqQixLQUFBLENBQUEsU0FBQWxELENBQUEsQ0FBQW5QLENBQUEsQ0FBQSxDQUFBLEdBQUE4MUIsQ0FBQUEsQ0FBQSxDQUFBOTFCLENBQUEsQ0FBQWpGLEdBQUEsQ0FBQTFLLENBQUEsQ0FBQTZsQyxDQUFBLENBQUFKLENBQUEsQ0FBQSxDQUFBMzBCLENBQUEsQ0FBQWlsQixDQUFBLENBQUEwUCxDQUFBLENBQUEsQ0FBQThDLENBQUEsQ0FBQVEsQ0FBQSxDQUFBcDVCLENBQUEsQ0FBQXJYLElBQUEsQ0FBQSxFQUFBLEVBQUEsQ0FBQSxPQUFBd1ksQ0FBQSxHQUFBLE9BQUE5USxDQUFBLENBQUFrbUMsQ0FBQSxDQUFBVCxDQUFBLENBQUEsQ0FBQTMwQixDQUFBLEVBQUF5M0IsQ0FBQSxDQUFBbUQsR0FBQSxHQUFBNTZCLENBQUEsQ0FBQTlRLENBQUEsQ0FBQXVvQyxDQUFBLENBQUFtRCxHQUFBLENBQUEsQ0FBQSxDQUFBMXJDLENBQUEsRUFBQXVvQyxDQUFBLENBQUFtRCxHQUFBLENBQUExckMsQ0FBQSxDQUFBOFEsQ0FBQSxDQUFBeTNCLENBQUEsQ0FBQW1ELEdBQUEsQ0FBQSxDQUFBLEdBQUExckMsQ0FBQSxFQUFBdW9DLENBQUEsQ0FBQW1ELEdBQUEsQ0FBQSxFQUFBeEYsQ0FBQSxDQUFBVCxDQUFBLENBQUEsQ0FBQTNzQyxDQUFBLENBQUEsQ0FBQWdZLENBQUEsQ0FBQTlRLENBQUEsRUFBQTZDLENBQUEsQ0FBQTdDLENBQUEsQ0FBQTJQLENBQUEsQ0FBQSxDQUFBLEVBQUEsQ0FBQSxDQUFBLENBQUEsS0FBQUEsQ0FBQSxFQUFBdTJCLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQTRHLEtBQUEsQ0FBQSxlQUFBanFDLENBQUEsQ0FBQSxDQUFBLEdBQUEsSUFBQSxLQUFBOG9DLEtBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxNQUFBLEtBQUEsQ0FBQSxHQUFBN3lDLENBQUFBLENBQUEsQ0FBQSxLQUFBNnlDLEtBQUEsQ0FBQXowQyxLQUFBLEVBQUEsQ0FBQTYrQixDQUFBLENBQUFqOUIsQ0FBQSxDQUFBb0gsR0FBQSxFQUFBLENBQUF5UCxDQUFBLENBQUFtQixDQUFBLENBQUFqTyxDQUFBLENBQUEsQ0FBQThvQyxLQUFBLENBQUEsTUFBQTc2QixDQUFBQSxDQUFBLENBQUFnTyxDQUFBLENBQUFoa0IsR0FBQSxDQUFBaEMsQ0FBQSxDQUFBLFNBQUFnbUIsQ0FBQSxDQUFBamMsQ0FBQSxDQUFBLENBQUEsTUFBQSxDQUFBLEVBQUFrekIsQ0FBQSxFQUFBcG1CLENBQUEsQ0FBQTlNLENBQUEsQ0FBQSxDQUFBa3pCLENBQUEsQ0FBQWpYLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQWl1QixZQUFBLENBQUEsdUJBQUEsQ0FBQSxHQUFBbHFDLENBQUFBLENBQUEsQ0FBQSxPQUFBLENBQUEvSixDQUFBLENBQUFnbUIsQ0FBQSxDQUFBaGtCLEdBQUEsQ0FBQSxLQUFBNndDLEtBQUEsQ0FBQSxTQUFBN3NCLENBQUEsQ0FBQWpjLENBQUEsQ0FBQSxDQUFBLE1BQUEsT0FBQWljLENBQUEsQ0FBQWpjLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQWljLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxNQUFBLEtBQUFobUIsQ0FBQSxDQUFBLENBQUEsQ0FBQSxHQUFBQSxDQUFBLENBQUFvSCxHQUFBLEdBQUEyQyxDQUFBLENBQUEsTUFBQSxFQUFBQSxDQUFBLENBQUEvSixDQUFBLENBQUFtTCxJQUFBLEVBQUEsQ0FBQSxHQUFBLENBQUEsQ0FBQSxDQUFBK29DLFlBQUEsQ0FBQSx1QkFBQSxDQUFBLEdBQUFucUMsQ0FBQUEsQ0FBQSxDQUFBLE9BQUEsQ0FBQS9KLENBQUEsQ0FBQWdtQixDQUFBLENBQUFoa0IsR0FBQSxDQUFBLEtBQUFzeEMsSUFBQSxFQUFBLENBQUEsU0FBQXR0QixDQUFBLENBQUFqYyxDQUFBLENBQUEsQ0FBQSxNQUFBLE9BQUFpYyxDQUFBLEdBQUFBLENBQUEsQ0FBQWpjLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsRUFBQUEsQ0FBQSxFQUFBLEVBQUFBLENBQUEsR0FBQWljLENBQUEsQ0FBQXBpQixJQUFBLENBQUErckIsS0FBQSxDQUFBLElBQUEzSixDQUFBLEVBQUEsR0FBQSxDQUFBLENBQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxNQUFBLEtBQUFobUIsQ0FBQSxDQUFBLENBQUEsQ0FBQSxHQUFBQSxDQUFBLENBQUFvSCxHQUFBLEdBQUEyQyxDQUFBLENBQUEsTUFBQSxFQUFBQSxDQUFBLENBQUEvSixDQUFBLENBQUFtTCxJQUFBLEVBQUEsQ0FBQSxHQUFBLENBQUEsQ0FBQSxDQUFBZ3BDLFdBQUEsQ0FBQSxxQkFBQXBxQyxDQUFBLENBQUEsQ0FBQSxHQUFBL0osQ0FBQUEsQ0FBQSxDQUFBLEtBQUE2eUMsS0FBQSxDQUFBejBDLEtBQUEsRUFBQSxDQUFBNitCLENBQUEsQ0FBQWo5QixDQUFBLENBQUFvSCxHQUFBLEVBQUEsQ0FBQSxNQUFBMkMsQ0FBQUEsQ0FBQSxFQUFBL0osQ0FBQSxDQUFBdEIsSUFBQSxDQUFBLENBQUEsRUFBQSxJQUFBdStCLENBQUEsQ0FBQSxDQUFBLENBQUEsSUFBQWpYLENBQUEsQ0FBQWhrQixHQUFBLENBQUFoQyxDQUFBLENBQUEsU0FBQWdtQixDQUFBLENBQUEsQ0FBQSxNQUFBQSxDQUFBQSxDQUFBLENBQUEsQ0FBQUEsQ0FBQSxFQUFBLENBQUEsRUFBQW5uQixRQUFBLENBQUEsRUFBQSxDQUFBLENBQUEsSUFBQW1uQixDQUFBLENBQUEza0IsTUFBQSxDQUFBLElBQUEya0IsQ0FBQSxDQUFBQSxDQUFBLENBQUEsQ0FBQSxFQUFBN2EsSUFBQSxDQUFBLEVBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQXRNLFFBQUEsQ0FBQSxtQkFBQSxDQUFBLE1BQUEsS0FBQSxLQUFBZzBDLEtBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxhQUFBLENBQUEsS0FBQW9CLFlBQUEsRUFBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUFqOEIsQ0FBQSxDQUFBaFgsRUFBQSxDQUFBaWYsS0FBQSxDQUFBL2UsU0FBQSxDQUFBOFcsQ0FBQSxDQUFBaFgsRUFBQSxDQUFBeXVDLENBQUEsQ0FBQTZELElBQUEsQ0FBQWpiLEVBQUEsQ0FBQSxTQUFBclMsQ0FBQSxDQUFBLENBQUEsR0FBQSxNQUFBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLEVBQUEsTUFBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxFQUFBLE1BQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxNQUFBLENBQUEsSUFBQSxDQUFBLElBQUEsQ0FBQSxJQUFBLENBQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLEdBQUFqYyxDQUFBQSxDQUFBLENBQUEvSixDQUFBLENBQUFpOUIsQ0FBQSxDQUFBalgsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLEdBQUEsQ0FBQW5QLENBQUEsQ0FBQW1QLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxHQUFBLENBQUEybUIsQ0FBQSxDQUFBM21CLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxHQUFBLENBQUE5ZSxDQUFBLENBQUE4ZSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUErbUIsQ0FBQSxDQUFBbnBDLElBQUEsQ0FBQXd1QixHQUFBLENBQUE2SyxDQUFBLENBQUFwbUIsQ0FBQSxDQUFBODFCLENBQUEsQ0FBQSxDQUFBUyxDQUFBLENBQUF4cEMsSUFBQSxDQUFBd3dDLEdBQUEsQ0FBQW5YLENBQUEsQ0FBQXBtQixDQUFBLENBQUE4MUIsQ0FBQSxDQUFBLENBQUEzMEIsQ0FBQSxDQUFBKzBCLENBQUEsQ0FBQUssQ0FBQSxDQUFBcUMsQ0FBQSxDQUFBMUMsQ0FBQSxDQUFBSyxDQUFBLENBQUE2QyxDQUFBLENBQUEsR0FBQVIsQ0FBQSxDQUFBLE1BQUExbEMsQ0FBQUEsQ0FBQSxDQUFBcWpDLENBQUEsR0FBQUwsQ0FBQSxDQUFBLENBQUEsQ0FBQTlQLENBQUEsR0FBQThQLENBQUEsQ0FBQSxJQUFBbDJCLENBQUEsQ0FBQTgxQixDQUFBLEVBQUEzMEIsQ0FBQSxDQUFBLEdBQUEsQ0FBQW5CLENBQUEsR0FBQWsyQixDQUFBLENBQUEsSUFBQUosQ0FBQSxDQUFBMVAsQ0FBQSxFQUFBamxCLENBQUEsQ0FBQSxHQUFBLENBQUEsSUFBQWlsQixDQUFBLENBQUFwbUIsQ0FBQSxFQUFBbUIsQ0FBQSxDQUFBLEdBQUEsQ0FBQWhZLENBQUEsQ0FBQSxJQUFBZ1ksQ0FBQSxDQUFBLENBQUEsQ0FBQSxJQUFBaTRCLENBQUEsQ0FBQWo0QixDQUFBLENBQUF5M0IsQ0FBQSxDQUFBejNCLENBQUEsRUFBQSxFQUFBeTNCLENBQUEsQ0FBQSxDQUFBLENBQUE3ckMsSUFBQSxDQUFBK3JCLEtBQUEsQ0FBQTVsQixDQUFBLEVBQUEsR0FBQSxDQUFBL0osQ0FBQSxDQUFBaXdDLENBQUEsQ0FBQSxNQUFBL29DLENBQUEsQ0FBQSxDQUFBLENBQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQXVvQyxDQUFBLENBQUE2RCxJQUFBLENBQUFPLElBQUEsQ0FBQSxTQUFBN3RCLENBQUEsQ0FBQSxDQUFBLEdBQUEsTUFBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxFQUFBLE1BQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsRUFBQSxNQUFBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsTUFBQSxDQUFBLElBQUEsQ0FBQSxJQUFBLENBQUEsSUFBQSxDQUFBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxHQUFBamMsQ0FBQUEsQ0FBQSxDQUFBaWMsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLEdBQUEsQ0FBQWhtQixDQUFBLENBQUFnbUIsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBaVgsQ0FBQSxDQUFBalgsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBMm1CLENBQUEsQ0FBQTNtQixDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUE5ZSxDQUFBLENBQUEsSUFBQSsxQixDQUFBLENBQUFBLENBQUEsRUFBQSxFQUFBajlCLENBQUEsQ0FBQSxDQUFBaTlCLENBQUEsQ0FBQWo5QixDQUFBLENBQUFpOUIsQ0FBQSxDQUFBajlCLENBQUEsQ0FBQStzQyxDQUFBLENBQUEsRUFBQTlQLENBQUEsQ0FBQS8xQixDQUFBLENBQUEsTUFBQSxDQUFBdEQsSUFBQSxDQUFBK3JCLEtBQUEsQ0FBQSxJQUFBOVksQ0FBQSxDQUFBazJCLENBQUEsQ0FBQTdsQyxDQUFBLENBQUE2QyxDQUFBLENBQUEsRUFBQSxDQUFBLENBQUEsQ0FBQSxDQUFBbkcsSUFBQSxDQUFBK3JCLEtBQUEsQ0FBQSxJQUFBOVksQ0FBQSxDQUFBazJCLENBQUEsQ0FBQTdsQyxDQUFBLENBQUE2QyxDQUFBLENBQUEsQ0FBQSxDQUFBbkcsSUFBQSxDQUFBK3JCLEtBQUEsQ0FBQSxJQUFBOVksQ0FBQSxDQUFBazJCLENBQUEsQ0FBQTdsQyxDQUFBLENBQUE2QyxDQUFBLENBQUEsRUFBQSxDQUFBLENBQUEsQ0FBQSxDQUFBNGlDLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQW1FLENBQUEsQ0FBQXJCLENBQUEsQ0FBQSxTQUFBeFMsQ0FBQSxDQUFBcG1CLENBQUEsQ0FBQSxDQUFBLEdBQUE4MUIsQ0FBQUEsQ0FBQSxDQUFBOTFCLENBQUEsQ0FBQXFTLEtBQUEsQ0FBQWhpQixDQUFBLENBQUEyUCxDQUFBLENBQUFyTCxLQUFBLENBQUE0aEMsQ0FBQSxDQUFBdjJCLENBQUEsQ0FBQXdoQixFQUFBLENBQUFvWCxDQUFBLENBQUE1NEIsQ0FBQSxDQUFBZzlCLElBQUEsQ0FBQTc3QixDQUFBLENBQUFoWCxFQUFBLENBQUFpOEIsQ0FBQSxFQUFBLFNBQUFBLENBQUEsQ0FBQSxDQUFBLEdBQUFtUSxDQUFBLEVBQUEsQ0FBQSxLQUFBbG1DLENBQUEsQ0FBQSxHQUFBLEtBQUFBLENBQUEsRUFBQWttQyxDQUFBLENBQUEsS0FBQXlGLEtBQUEsQ0FBQSxFQUFBNVYsQ0FBQSxHQUFBbHpCLENBQUEsQ0FBQSxNQUFBLE1BQUE3QyxDQUFBLEVBQUE5SSxLQUFBLEVBQUEsQ0FBQSxHQUFBeVksQ0FBQUEsQ0FBQSxDQUFBazJCLENBQUEsQ0FBQS9tQixDQUFBLENBQUF4bUIsSUFBQSxDQUFBeTlCLENBQUEsQ0FBQSxDQUFBZ1QsQ0FBQSxDQUFBLFVBQUFsRCxDQUFBLEVBQUEsV0FBQUEsQ0FBQSxDQUFBOVAsQ0FBQSxDQUFBLzZCLFNBQUEsQ0FBQW11QyxDQUFBLENBQUEsS0FBQW5wQyxDQUFBLEVBQUE5SSxLQUFBLEVBQUEsQ0FBQSxNQUFBMHlDLENBQUFBLENBQUEsQ0FBQW5FLENBQUEsQ0FBQSxTQUFBM21CLENBQUEsQ0FBQWpjLENBQUEsQ0FBQSxDQUFBLEdBQUFrekIsQ0FBQUEsQ0FBQSxDQUFBZ1QsQ0FBQSxDQUFBLFdBQUFsRCxDQUFBLENBQUEvbUIsQ0FBQSxDQUFBamMsQ0FBQSxDQUFBNkgsR0FBQSxDQUFBLENBQUEsTUFBQXFyQixDQUFBLEdBQUFBLENBQUEsQ0FBQW9ULENBQUEsQ0FBQXRtQyxDQUFBLENBQUE2SCxHQUFBLENBQUEsRUFBQXkrQixDQUFBLENBQUF0bUMsQ0FBQSxDQUFBNkgsR0FBQSxDQUFBLENBQUE1UixDQUFBLENBQUFpOUIsQ0FBQSxDQUFBbHpCLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBMGxDLENBQUEsRUFBQTU0QixDQUFBLENBQUFtQixDQUFBLENBQUF5M0IsQ0FBQSxDQUFBWSxDQUFBLENBQUEsQ0FBQSxDQUFBeDVCLENBQUEsQ0FBQTNQLENBQUEsQ0FBQSxDQUFBbXBDLENBQUEsQ0FBQXg1QixDQUFBLEVBQUFtQixDQUFBLENBQUFxNEIsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBUyxDQUFBLENBQUFuRSxDQUFBLENBQUEsU0FBQTVpQyxDQUFBLENBQUEvSixDQUFBLENBQUEsQ0FBQWdZLENBQUEsQ0FBQWhYLEVBQUEsQ0FBQStJLENBQUEsSUFBQWlPLENBQUEsQ0FBQWhYLEVBQUEsQ0FBQStJLENBQUEsRUFBQSxTQUFBOE0sQ0FBQSxDQUFBLENBQUEsR0FBQTgxQixDQUFBQSxDQUFBLENBQUF6bEMsQ0FBQSxDQUFBOGUsQ0FBQSxDQUFBeG1CLElBQUEsQ0FBQXFYLENBQUEsQ0FBQSxDQUFBdTJCLENBQUEsQ0FBQSxVQUFBcmpDLENBQUEsQ0FBQSxLQUFBc3FDLEtBQUEsQ0FBQSxNQUFBLENBQUEsTUFBQSxDQUFBcFgsQ0FBQSxDQUFBamxCLENBQUEsQ0FBQSxLQUFBbzFCLENBQUEsR0FBQSxDQUFBcUMsQ0FBQSxDQUFBejNCLENBQUEsQ0FBQWhZLENBQUEsQ0FBQTRSLEdBQUEsQ0FBQSxDQUFBLE1BQUEsY0FBQTFLLENBQUEsQ0FBQXVvQyxDQUFBLEVBQUEsYUFBQXZvQyxDQUFBLEdBQUEyUCxDQUFBLENBQUFBLENBQUEsQ0FBQXRZLElBQUEsQ0FBQSxJQUFBLENBQUFreEMsQ0FBQSxDQUFBLENBQUF2b0MsQ0FBQSxDQUFBOGUsQ0FBQSxDQUFBeG1CLElBQUEsQ0FBQXFYLENBQUEsQ0FBQSxFQUFBLE1BQUFBLENBQUEsRUFBQTdXLENBQUEsQ0FBQStaLEtBQUEsQ0FBQSxJQUFBLEVBQUEsV0FBQTdTLENBQUEsR0FBQXlsQyxDQUFBLENBQUFJLENBQUEsQ0FBQXRpQyxJQUFBLENBQUFvTSxDQUFBLENBQUEsQ0FBQTgxQixDQUFBLEdBQUE5MUIsQ0FBQSxDQUFBNDRCLENBQUEsQ0FBQTdmLFVBQUEsQ0FBQStjLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxFQUFBLE1BQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxFQUFBMzBCLENBQUEsQ0FBQWhZLENBQUEsQ0FBQTRSLEdBQUEsQ0FBQSxDQUFBaUYsQ0FBQSxDQUFBLEtBQUF1MkIsQ0FBQSxFQUFBcDFCLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLEVBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUFBLENBQUEsQ0FBQWtRLElBQUEsQ0FBQSxTQUFBbmUsQ0FBQSxDQUFBLENBQUEsR0FBQS9KLENBQUFBLENBQUEsQ0FBQStKLENBQUEsQ0FBQTFFLEtBQUEsQ0FBQSxHQUFBLENBQUEsQ0FBQXlyQyxDQUFBLENBQUE5d0MsQ0FBQSxDQUFBLFNBQUErSixDQUFBLENBQUEvSixDQUFBLENBQUEsQ0FBQWdtQixDQUFBLENBQUFtTixRQUFBLENBQUFuekIsQ0FBQSxFQUFBLENBQUF1ZixHQUFBLENBQUEsYUFBQXhWLENBQUEsQ0FBQThNLENBQUEsQ0FBQSxDQUFBLEdBQUE4MUIsQ0FBQUEsQ0FBQSxDQUFBemxDLENBQUEsQ0FBQTZsQyxDQUFBLENBQUEsRUFBQSxDQUFBLEdBQUEsZ0JBQUFsMkIsQ0FBQSxHQUFBLFdBQUFtUCxDQUFBLENBQUF4bUIsSUFBQSxDQUFBcVgsQ0FBQSxDQUFBLEdBQUE4MUIsQ0FBQSxDQUFBMVAsQ0FBQSxDQUFBcG1CLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLEdBQUFBLENBQUEsQ0FBQW1CLENBQUEsQ0FBQTIwQixDQUFBLEVBQUE5MUIsQ0FBQSxDQUFBLENBQUEsQ0FBQXc1QixDQUFBLENBQUE2QyxJQUFBLEVBQUEsSUFBQXI4QixDQUFBLENBQUFnOEIsS0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsSUFBQTNyQyxDQUFBLENBQUEsb0JBQUFsSCxDQUFBLENBQUErSixDQUFBLENBQUF0SixVQUFBLENBQUFzSixDQUFBLENBQUEsQ0FBQSxLQUFBZ2pDLENBQUEsRUFBQSxnQkFBQUEsQ0FBQSxHQUFBN2xDLENBQUEsRUFBQUEsQ0FBQSxDQUFBcWEsS0FBQSxHQUFBLEdBQUEsQ0FBQXdyQixDQUFBLENBQUEvbUIsQ0FBQSxDQUFBdkUsR0FBQSxDQUFBdmEsQ0FBQSxDQUFBLGlCQUFBLENBQUEsQ0FBQUEsQ0FBQSxDQUFBQSxDQUFBLENBQUF6RyxVQUFBLENBQUEsT0FBQTJzQyxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUF2MkIsQ0FBQSxDQUFBQSxDQUFBLENBQUFtOUIsS0FBQSxDQUFBakgsQ0FBQSxFQUFBLGdCQUFBQSxDQUFBLENBQUFBLENBQUEsQ0FBQSxVQUFBLENBQUEsQ0FBQSxDQUFBbDJCLENBQUEsQ0FBQUEsQ0FBQSxDQUFBbzlCLFlBQUEsRUFBQSxDQUFBLElBQUEsQ0FBQWxxQyxDQUFBLENBQUF3WCxLQUFBLENBQUF2aEIsQ0FBQSxFQUFBNlcsQ0FBQSxDQUFBLE9BQUF1MkIsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQXBuQixDQUFBLENBQUE2TyxFQUFBLENBQUFELElBQUEsQ0FBQTUwQixDQUFBLEVBQUEsU0FBQStKLENBQUEsQ0FBQSxDQUFBQSxDQUFBLENBQUF1cUMsU0FBQSxHQUFBdnFDLENBQUEsQ0FBQXFILEtBQUEsQ0FBQTRHLENBQUEsQ0FBQWpPLENBQUEsQ0FBQTlILElBQUEsQ0FBQWpDLENBQUEsQ0FBQSxDQUFBK0osQ0FBQSxDQUFBbkgsR0FBQSxDQUFBb1YsQ0FBQSxDQUFBak8sQ0FBQSxDQUFBbkgsR0FBQSxDQUFBLENBQUFtSCxDQUFBLENBQUF1cUMsU0FBQSxDQUFBLENBQUEsQ0FBQSxFQUFBdHVCLENBQUEsQ0FBQW1OLFFBQUEsQ0FBQW56QixDQUFBLEVBQUF1ZixHQUFBLENBQUF4VixDQUFBLENBQUE5SCxJQUFBLENBQUE4SCxDQUFBLENBQUFxSCxLQUFBLENBQUEyaUMsVUFBQSxDQUFBaHFDLENBQUEsQ0FBQW5ILEdBQUEsQ0FBQW1ILENBQUEsQ0FBQTRxQixHQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEzYyxDQUFBLENBQUFrUSxJQUFBLENBQUFoaEIsQ0FBQSxDQUFBLENBQUE4ZSxDQUFBLENBQUFtTixRQUFBLENBQUFvaEIsV0FBQSxDQUFBLENBQUF0Z0IsTUFBQSxDQUFBLGdCQUFBak8sQ0FBQSxDQUFBLENBQUEsR0FBQWpjLENBQUFBLENBQUEsQ0FBQSxFQUFBLENBQUEsTUFBQSttQyxDQUFBQSxDQUFBLENBQUEsQ0FBQSxLQUFBLENBQUEsT0FBQSxDQUFBLFFBQUEsQ0FBQSxNQUFBLENBQUEsQ0FBQSxTQUFBOXdDLENBQUEsQ0FBQWk5QixDQUFBLENBQUEsQ0FBQWx6QixDQUFBLENBQUEsU0FBQWt6QixDQUFBLENBQUEsT0FBQSxDQUFBLENBQUFqWCxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUFqYyxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUE0aUMsQ0FBQSxDQUFBM21CLENBQUEsQ0FBQWl0QixLQUFBLENBQUF1QixLQUFBLENBQUEsQ0FBQUMsSUFBQSxDQUFBLFNBQUEsQ0FBQUMsS0FBQSxDQUFBLFNBQUEsQ0FBQXJCLElBQUEsQ0FBQSxTQUFBLENBQUFzQixPQUFBLENBQUEsU0FBQSxDQUFBQyxJQUFBLENBQUEsU0FBQSxDQUFBeEIsS0FBQSxDQUFBLFNBQUEsQ0FBQXlCLElBQUEsQ0FBQSxTQUFBLENBQUFDLE1BQUEsQ0FBQSxTQUFBLENBQUFDLElBQUEsQ0FBQSxTQUFBLENBQUFDLEtBQUEsQ0FBQSxTQUFBLENBQUFDLE1BQUEsQ0FBQSxTQUFBLENBQUE5QixHQUFBLENBQUEsU0FBQSxDQUFBK0IsTUFBQSxDQUFBLFNBQUEsQ0FBQUMsSUFBQSxDQUFBLFNBQUEsQ0FBQUMsS0FBQSxDQUFBLFNBQUEsQ0FBQUMsTUFBQSxDQUFBLFNBQUEsQ0FBQXJDLFdBQUEsQ0FBQSxDQUFBLElBQUEsQ0FBQSxJQUFBLENBQUEsSUFBQSxDQUFBLENBQUEsQ0FBQSxDQUFBcHZCLFFBQUEsQ0FBQSxTQUFBLENBQUEsQ0FBQSxDQUFBLENBQUFxUixDQUFBLENBQUEsQ0FBQSxVQUFBLENBQUEsUUFBQWxyQixDQUFBQSxDQUFBLENBQUFBLENBQUEsQ0FBQSxDQUFBLEdBQUEvSixDQUFBQSxDQUFBLENBQUFpOUIsQ0FBQSxDQUFBcG1CLENBQUEsQ0FBQTlNLENBQUEsQ0FBQVMsYUFBQSxDQUFBNEMsV0FBQSxDQUFBckQsQ0FBQSxDQUFBUyxhQUFBLENBQUE0QyxXQUFBLENBQUFtaEIsZ0JBQUEsQ0FBQXhrQixDQUFBLENBQUEsSUFBQSxDQUFBLENBQUFBLENBQUEsQ0FBQXVyQyxZQUFBLENBQUEzSSxDQUFBLENBQUEsRUFBQSxDQUFBLEdBQUE5MUIsQ0FBQSxFQUFBQSxDQUFBLENBQUF4VixNQUFBLEVBQUF3VixDQUFBLENBQUEsQ0FBQSxDQUFBLEVBQUFBLENBQUEsQ0FBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsSUFBQW9tQixDQUFBLENBQUFwbUIsQ0FBQSxDQUFBeFYsTUFBQSxDQUFBNDdCLENBQUEsRUFBQSxHQUFBajlCLENBQUEsQ0FBQTZXLENBQUEsQ0FBQW9tQixDQUFBLENBQUEsQ0FBQSxVQUFBLE1BQUFwbUIsQ0FBQUEsQ0FBQSxDQUFBN1csQ0FBQSxDQUFBLEdBQUEyc0MsQ0FBQSxDQUFBM21CLENBQUEsQ0FBQWpILFNBQUEsQ0FBQS9lLENBQUEsQ0FBQSxDQUFBLENBQUE2VyxDQUFBLENBQUE3VyxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsSUFBQSxLQUFBQSxDQUFBLEdBQUE2VyxDQUFBQSxDQUFBLEVBQUEsVUFBQSxNQUFBQSxDQUFBQSxDQUFBLENBQUE3VyxDQUFBLENBQUEsR0FBQTJzQyxDQUFBLENBQUEzc0MsQ0FBQSxDQUFBLENBQUE2VyxDQUFBLENBQUE3VyxDQUFBLENBQUEsRUFBQSxDQUFBLE1BQUEyc0MsQ0FBQUEsQ0FBQSxDQUFBLFNBQUEzc0MsQ0FBQUEsQ0FBQSxDQUFBK0osQ0FBQSxDQUFBL0osQ0FBQSxDQUFBLENBQUEsR0FBQWk5QixDQUFBQSxDQUFBLENBQUEwUCxDQUFBLENBQUF6bEMsQ0FBQSxDQUFBLEVBQUEsQ0FBQSxJQUFBKzFCLENBQUEsR0FBQWo5QixDQUFBQSxDQUFBLEVBQUEyc0MsQ0FBQSxDQUFBM3NDLENBQUEsQ0FBQWk5QixDQUFBLENBQUEsQ0FBQWx6QixDQUFBLENBQUFrekIsQ0FBQSxDQUFBLEdBQUEwUCxDQUFBLEdBQUE5MUIsQ0FBQSxDQUFBb21CLENBQUEsQ0FBQSxFQUFBLENBQUFqWCxDQUFBLENBQUE2TyxFQUFBLENBQUFELElBQUEsQ0FBQXFJLENBQUEsR0FBQSxDQUFBNkssS0FBQSxDQUFBbFksVUFBQSxDQUFBK2MsQ0FBQSxDQUFBLENBQUEsSUFBQXpsQyxDQUFBLENBQUErMUIsQ0FBQSxDQUFBLENBQUEwUCxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsTUFBQXpsQyxDQUFBQSxDQUFBLENBQUEsSUFBQSsxQixDQUFBQSxDQUFBLENBQUEsQ0FBQSxLQUFBLENBQUEsUUFBQSxDQUFBLFFBQUEsQ0FBQSxDQUFBcG1CLENBQUEsQ0FBQSxDQUFBaWQsTUFBQSxDQUFBLENBQUEsQ0FBQXloQixZQUFBLENBQUEsQ0FBQSxDQUFBaEIsV0FBQSxDQUFBLENBQUEsQ0FBQWlCLFVBQUEsQ0FBQSxDQUFBLENBQUFDLFdBQUEsQ0FBQSxDQUFBLENBQUFDLFNBQUEsQ0FBQSxDQUFBLENBQUFDLFdBQUEsQ0FBQSxDQUFBLENBQUEvaEIsTUFBQSxDQUFBLENBQUEsQ0FBQUMsT0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBN04sQ0FBQSxDQUFBbGtCLElBQUEsQ0FBQSxDQUFBLGlCQUFBLENBQUEsa0JBQUEsQ0FBQSxtQkFBQSxDQUFBLGdCQUFBLENBQUEsQ0FBQSxTQUFBaUksQ0FBQSxDQUFBL0osQ0FBQSxDQUFBLENBQUFnbUIsQ0FBQSxDQUFBNk8sRUFBQSxDQUFBRCxJQUFBLENBQUE1MEIsQ0FBQSxFQUFBLFNBQUFnbUIsQ0FBQSxDQUFBLENBQUEsQ0FBQSxTQUFBQSxDQUFBLENBQUFwakIsR0FBQSxFQUFBLENBQUFvakIsQ0FBQSxDQUFBNHZCLE9BQUEsRUFBQSxJQUFBNXZCLENBQUEsQ0FBQTJPLEdBQUEsRUFBQSxDQUFBM08sQ0FBQSxDQUFBNHZCLE9BQUEsSUFBQTNnQixDQUFBLENBQUExVCxLQUFBLENBQUF5RSxDQUFBLENBQUEvakIsSUFBQSxDQUFBakMsQ0FBQSxDQUFBZ21CLENBQUEsQ0FBQXBqQixHQUFBLEVBQUFvakIsQ0FBQSxDQUFBNHZCLE9BQUEsQ0FBQSxDQUFBLENBQUEsRUFBQSxDQUFBLENBQUEsQ0FBQSxFQUFBNXZCLENBQUEsQ0FBQWhsQixFQUFBLENBQUFxWCxPQUFBLEdBQUEyTixDQUFBLENBQUFobEIsRUFBQSxDQUFBcVgsT0FBQSxDQUFBLFNBQUEyTixDQUFBLENBQUEsQ0FBQSxNQUFBLE1BQUE1TixHQUFBLENBQUEsTUFBQTROLENBQUEsQ0FBQSxLQUFBbmtCLFVBQUEsQ0FBQSxLQUFBQSxVQUFBLENBQUErTCxNQUFBLENBQUFvWSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBQSxDQUFBLENBQUFncUIsT0FBQSxDQUFBNkYsWUFBQSxDQUFBLFNBQUFoL0IsQ0FBQSxDQUFBODFCLENBQUEsQ0FBQXpsQyxDQUFBLENBQUE2bEMsQ0FBQSxDQUFBLENBQUEsR0FBQUssQ0FBQUEsQ0FBQSxDQUFBcG5CLENBQUEsQ0FBQWlTLEtBQUEsQ0FBQTBVLENBQUEsQ0FBQXpsQyxDQUFBLENBQUE2bEMsQ0FBQSxDQUFBLENBQUEsTUFBQSxNQUFBdHpCLEtBQUEsQ0FBQSxVQUFBLENBQUEsR0FBQWt6QixDQUFBQSxDQUFBLENBQUF6bEMsQ0FBQSxDQUFBOGUsQ0FBQSxDQUFBLElBQUEsQ0FBQSxDQUFBK21CLENBQUEsQ0FBQTdsQyxDQUFBLENBQUFtSSxJQUFBLENBQUEsT0FBQSxHQUFBLEVBQUEsQ0FBQTJJLENBQUEsQ0FBQW8xQixDQUFBLENBQUF6MUIsUUFBQSxDQUFBelEsQ0FBQSxDQUFBNEcsSUFBQSxDQUFBLEdBQUEsRUFBQXVLLE9BQUEsRUFBQSxDQUFBblIsQ0FBQSxDQUFBOFEsQ0FBQSxDQUFBQSxDQUFBLENBQUFoVyxHQUFBLENBQUEsVUFBQSxDQUFBLEdBQUFoQyxDQUFBQSxDQUFBLENBQUFnbUIsQ0FBQSxDQUFBLElBQUEsQ0FBQSxDQUFBLE1BQUEsQ0FBQWxhLEVBQUEsQ0FBQTlMLENBQUEsQ0FBQW9SLEtBQUEsQ0FBQXJILENBQUEsQ0FBQSxJQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBNGlDLENBQUEsQ0FBQSxZQUFBLENBQUEzbUIsQ0FBQSxDQUFBbGtCLElBQUEsQ0FBQW03QixDQUFBLENBQUEsU0FBQWpYLENBQUEsQ0FBQWpjLENBQUEsQ0FBQSxDQUFBOE0sQ0FBQSxDQUFBOU0sQ0FBQSxDQUFBLEVBQUE3QyxDQUFBLENBQUE2QyxDQUFBLENBQUEsT0FBQSxDQUFBLENBQUE4TSxDQUFBLENBQUE5TSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsRUFBQSxDQUFBLENBQUE0aUMsQ0FBQSxFQUFBLENBQUEzMEIsQ0FBQSxDQUFBQSxDQUFBLENBQUFoVyxHQUFBLENBQUEsVUFBQSxDQUFBLE1BQUEsTUFBQVksR0FBQSxDQUFBbUgsQ0FBQSxDQUFBLEtBQUErQixFQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxLQUFBTyxJQUFBLENBQUFyTSxDQUFBLENBQUEsS0FBQW9SLEtBQUEsQ0FBQSxLQUFBeE8sR0FBQSxDQUFBLENBQUEsSUFBQSxDQUFBLENBQUEsQ0FBQSxDQUFBc0UsQ0FBQSxDQUFBbUksSUFBQSxDQUFBLE9BQUEsQ0FBQTA5QixDQUFBLENBQUEsQ0FBQS8wQixDQUFBLENBQUFBLENBQUEsQ0FBQWhXLEdBQUEsQ0FBQSxVQUFBLENBQUEsR0FBQStILENBQUFBLENBQUEsQ0FBQSxJQUFBLENBQUEvSixDQUFBLENBQUFnbUIsQ0FBQSxDQUFBakwsUUFBQSxFQUFBLENBQUFraUIsQ0FBQSxDQUFBalgsQ0FBQSxDQUFBampCLE1BQUEsQ0FBQSxFQUFBLENBQUFxcUMsQ0FBQSxDQUFBLENBQUEzekIsS0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBb2UsUUFBQSxDQUFBLG1CQUFBLENBQUE3M0IsQ0FBQSxDQUFBd2EsT0FBQSxDQUFBelEsQ0FBQSxFQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsTUFBQSxNQUFBK0IsRUFBQSxDQUFBd3NCLE9BQUEsQ0FBQSxLQUFBanNCLElBQUEsQ0FBQTR3QixDQUFBLEVBQUFqOUIsQ0FBQSxDQUFBNGEsT0FBQSxFQUFBLENBQUEsQ0FBQSxDQUFBLENBQUFvTCxDQUFBLENBQUFsSixJQUFBLENBQUFyZSxLQUFBLENBQUF1bkIsQ0FBQSxDQUFBaE8sQ0FBQSxDQUFBelcsR0FBQSxFQUFBLEVBQUFvRixJQUFBLENBQUEsVUFBQSxDQUFBZ21DLENBQUEsR0FBQTNtQixDQUFBLENBQUFsa0IsSUFBQSxDQUFBSSxTQUFBLENBQUEsVUFBQSxDQUFBLEdBQUE2SCxDQUFBQSxDQUFBLENBQUEsS0FBQStCLEVBQUEsQ0FBQWthLENBQUEsQ0FBQWxrQixJQUFBLENBQUEsS0FBQXVLLElBQUEsQ0FBQSxTQUFBMlosQ0FBQSxDQUFBLENBQUFqYyxDQUFBLENBQUEwWCxHQUFBLENBQUF1RSxDQUFBLENBQUEsRUFBQSxFQUFBLENBQUEsRUFBQSxDQUFBLENBQUEsQ0FBQW9uQixDQUFBLENBQUF2VixRQUFBLENBQUF0NUIsSUFBQSxDQUFBMkksQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBOGUsQ0FBQSxDQUFBaGxCLEVBQUEsQ0FBQStCLE1BQUEsQ0FBQSxDQUFBNjNCLFFBQUEsQ0FBQSxTQUFBN3dCLENBQUEsQ0FBQSxDQUFBLE1BQUEsVUFBQS9KLENBQUEsQ0FBQWk5QixDQUFBLENBQUFwbUIsQ0FBQSxDQUFBODFCLENBQUEsQ0FBQSxDQUFBLE1BQUExUCxDQUFBQSxDQUFBLENBQUFqWCxDQUFBLENBQUFncUIsT0FBQSxDQUFBNkYsWUFBQSxDQUFBdDNDLElBQUEsQ0FBQSxJQUFBLENBQUEsQ0FBQTZaLEdBQUEsQ0FBQXBZLENBQUEsQ0FBQSxDQUFBaTlCLENBQUEsQ0FBQXBtQixDQUFBLENBQUE4MUIsQ0FBQSxDQUFBLENBQUE1aUMsQ0FBQSxDQUFBdEwsS0FBQSxDQUFBLElBQUEsQ0FBQXlELFNBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUE4akIsQ0FBQSxDQUFBaGxCLEVBQUEsQ0FBQTQ1QixRQUFBLENBQUEsQ0FBQUssV0FBQSxDQUFBLFNBQUFseEIsQ0FBQSxDQUFBLENBQUEsTUFBQSxVQUFBL0osQ0FBQSxDQUFBaTlCLENBQUEsQ0FBQXBtQixDQUFBLENBQUE4MUIsQ0FBQSxDQUFBLENBQUEsTUFBQXpxQyxDQUFBQSxTQUFBLENBQUFiLE1BQUEsQ0FBQSxDQUFBLENBQUEya0IsQ0FBQSxDQUFBZ3FCLE9BQUEsQ0FBQTZGLFlBQUEsQ0FBQXQzQyxJQUFBLENBQUEsSUFBQSxDQUFBLENBQUF1YixNQUFBLENBQUE5WixDQUFBLENBQUEsQ0FBQWk5QixDQUFBLENBQUFwbUIsQ0FBQSxDQUFBODFCLENBQUEsQ0FBQSxDQUFBNWlDLENBQUEsQ0FBQXRMLEtBQUEsQ0FBQSxJQUFBLENBQUF5RCxTQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBOGpCLENBQUEsQ0FBQWhsQixFQUFBLENBQUFpNkIsV0FBQSxDQUFBLENBQUFDLFdBQUEsQ0FBQSxTQUFBbnhCLENBQUEsQ0FBQSxDQUFBLE1BQUEsVUFBQS9KLENBQUEsQ0FBQWk5QixDQUFBLENBQUFwbUIsQ0FBQSxDQUFBODFCLENBQUEsQ0FBQXpsQyxDQUFBLENBQUEsQ0FBQSxNQUFBLFdBQUEsTUFBQSsxQixDQUFBQSxDQUFBLEVBQUEsSUFBQSxFQUFBLEdBQUFBLENBQUEsQ0FBQXBtQixDQUFBLENBQUFtUCxDQUFBLENBQUFncUIsT0FBQSxDQUFBNkYsWUFBQSxDQUFBdDNDLElBQUEsQ0FBQSxJQUFBLENBQUEwK0IsQ0FBQSxDQUFBLENBQUE3a0IsR0FBQSxDQUFBcFksQ0FBQSxDQUFBLENBQUEsQ0FBQThaLE1BQUEsQ0FBQTlaLENBQUEsQ0FBQSxDQUFBNlcsQ0FBQSxDQUFBODFCLENBQUEsQ0FBQXpsQyxDQUFBLENBQUEsQ0FBQTZDLENBQUEsQ0FBQXRMLEtBQUEsQ0FBQSxJQUFBLENBQUF5RCxTQUFBLENBQUEsQ0FBQThqQixDQUFBLENBQUFncUIsT0FBQSxDQUFBNkYsWUFBQSxDQUFBdDNDLElBQUEsQ0FBQSxJQUFBLENBQUEsQ0FBQXFrQixNQUFBLENBQUE1aUIsQ0FBQSxDQUFBLENBQUFpOUIsQ0FBQSxDQUFBcG1CLENBQUEsQ0FBQTgxQixDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBM21CLENBQUEsQ0FBQWhsQixFQUFBLENBQUFrNkIsV0FBQSxDQUFBLENBQUE0YSxXQUFBLENBQUEscUJBQUEvckMsQ0FBQSxDQUFBL0osQ0FBQSxDQUFBaTlCLENBQUEsQ0FBQXBtQixDQUFBLENBQUE4MUIsQ0FBQSxDQUFBLENBQUEsTUFBQTNtQixDQUFBQSxDQUFBLENBQUFncUIsT0FBQSxDQUFBNkYsWUFBQSxDQUFBdDNDLElBQUEsQ0FBQSxJQUFBLENBQUEsQ0FBQTZaLEdBQUEsQ0FBQXBZLENBQUEsQ0FBQThaLE1BQUEsQ0FBQS9QLENBQUEsQ0FBQSxDQUFBa3pCLENBQUEsQ0FBQXBtQixDQUFBLENBQUE4MUIsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLEVBQUEsQ0FBQSxVQUFBLENBQUEsUUFBQTVpQyxDQUFBQSxDQUFBLENBQUFBLENBQUEsQ0FBQS9KLENBQUEsQ0FBQWk5QixDQUFBLENBQUFwbUIsQ0FBQSxDQUFBLENBQUEsTUFBQW1QLENBQUFBLENBQUEsQ0FBQXppQixhQUFBLENBQUF3RyxDQUFBLElBQUEvSixDQUFBLENBQUErSixDQUFBLENBQUFBLENBQUEsQ0FBQUEsQ0FBQSxDQUFBZ21DLE1BQUEsRUFBQWhtQyxDQUFBLENBQUEsQ0FBQWdtQyxNQUFBLENBQUFobUMsQ0FBQSxDQUFBLENBQUEsTUFBQS9KLENBQUEsR0FBQUEsQ0FBQSxDQUFBLEVBQUEsQ0FBQSxDQUFBZ21CLENBQUEsQ0FBQTdtQixVQUFBLENBQUFhLENBQUEsSUFBQTZXLENBQUEsQ0FBQTdXLENBQUEsQ0FBQWk5QixDQUFBLENBQUEsSUFBQSxDQUFBajlCLENBQUEsQ0FBQSxFQUFBLENBQUEsQ0FBQSxDQUFBLFVBQUEsTUFBQUEsQ0FBQUEsQ0FBQSxFQUFBZ21CLENBQUEsQ0FBQTZPLEVBQUEsQ0FBQXNELE1BQUEsQ0FBQW40QixDQUFBLENBQUEsSUFBQTZXLENBQUEsQ0FBQW9tQixDQUFBLENBQUFBLENBQUEsQ0FBQWo5QixDQUFBLENBQUFBLENBQUEsQ0FBQSxFQUFBLENBQUEsQ0FBQWdtQixDQUFBLENBQUE3bUIsVUFBQSxDQUFBODlCLENBQUEsSUFBQXBtQixDQUFBLENBQUFvbUIsQ0FBQSxDQUFBQSxDQUFBLENBQUEsSUFBQSxDQUFBLENBQUFqOUIsQ0FBQSxFQUFBZ21CLENBQUEsQ0FBQWpqQixNQUFBLENBQUFnSCxDQUFBLENBQUEvSixDQUFBLENBQUEsQ0FBQWk5QixDQUFBLENBQUFBLENBQUEsRUFBQWo5QixDQUFBLENBQUEwMEIsUUFBQSxDQUFBM3FCLENBQUEsQ0FBQTJxQixRQUFBLENBQUExTyxDQUFBLENBQUE2TyxFQUFBLENBQUFqUCxHQUFBLENBQUEsQ0FBQSxDQUFBLFVBQUEsTUFBQXFYLENBQUFBLENBQUEsQ0FBQUEsQ0FBQSxDQUFBQSxDQUFBLEdBQUFqWCxDQUFBQSxDQUFBLENBQUE2TyxFQUFBLENBQUFzRCxNQUFBLENBQUFuUyxDQUFBLENBQUE2TyxFQUFBLENBQUFzRCxNQUFBLENBQUE4RSxDQUFBLENBQUEsQ0FBQWpYLENBQUEsQ0FBQTZPLEVBQUEsQ0FBQXNELE1BQUEsQ0FBQXZVLFFBQUEsQ0FBQTdaLENBQUEsQ0FBQTh0QixRQUFBLENBQUFoaEIsQ0FBQSxFQUFBN1csQ0FBQSxDQUFBNjNCLFFBQUEsQ0FBQTl0QixDQUFBLENBQUEsU0FBQS9KLENBQUFBLENBQUEsQ0FBQStKLENBQUEsQ0FBQSxDQUFBLE1BQUEsQ0FBQUEsQ0FBQSxFQUFBLFVBQUEsTUFBQUEsQ0FBQUEsQ0FBQSxFQUFBaWMsQ0FBQSxDQUFBNk8sRUFBQSxDQUFBc0QsTUFBQSxDQUFBcHVCLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLFVBQUEsTUFBQUEsQ0FBQUEsQ0FBQSxFQUFBaWMsQ0FBQSxDQUFBZ3FCLE9BQUEsQ0FBQUQsTUFBQSxDQUFBaG1DLENBQUEsQ0FBQSxDQUFBaWMsQ0FBQSxDQUFBN21CLFVBQUEsQ0FBQTRLLENBQUEsRUFBQSxDQUFBLENBQUEsQ0FBQSxrQkFBQUEsQ0FBQSxHQUFBQSxDQUFBLENBQUFnbUMsTUFBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLFNBQUE5UyxDQUFBQSxDQUFBLENBQUFqWCxDQUFBLENBQUFqYyxDQUFBLENBQUEsQ0FBQSxHQUFBL0osQ0FBQUEsQ0FBQSxDQUFBK0osQ0FBQSxDQUFBbW1DLFVBQUEsRUFBQSxDQUFBalQsQ0FBQSxDQUFBbHpCLENBQUEsQ0FBQW9tQyxXQUFBLEVBQUEsQ0FBQXQ1QixDQUFBLENBQUEsdUlBQUEsQ0FBQTgxQixDQUFBLENBQUE5MUIsQ0FBQSxDQUFBcE0sSUFBQSxDQUFBdWIsQ0FBQSxHQUFBLENBQUEsRUFBQSxDQUFBLENBQUEsQ0FBQWhtQixDQUFBLENBQUFpOUIsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLE1BQUEsQ0FBQTV2QixHQUFBLENBQUF1aUIsVUFBQSxDQUFBK2MsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLEVBQUEsQ0FBQSxDQUFBeGQsS0FBQSxDQUFBLFNBQUF3ZCxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEzc0MsQ0FBQSxDQUFBNHZCLFVBQUEsQ0FBQStjLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBb0osTUFBQSxDQUFBLFNBQUFwSixDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUExUCxDQUFBLENBQUFyTixVQUFBLENBQUErYyxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQWhaLElBQUEsQ0FBQS9ELFVBQUEsQ0FBQStjLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxFQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEzbUIsQ0FBQSxDQUFBN1csSUFBQSxFQUFBNlcsQ0FBQSxDQUFBN1csSUFBQSxDQUFBZ0UsT0FBQSxFQUFBNlMsQ0FBQSxDQUFBN1csSUFBQSxDQUFBZ0UsT0FBQSxDQUFBeXlCLFFBQUEsR0FBQTVmLENBQUEsQ0FBQTdXLElBQUEsQ0FBQWdFLE9BQUEsQ0FBQXl5QixRQUFBLENBQUEsU0FBQTc3QixDQUFBLENBQUEsQ0FBQSxNQUFBLFVBQUEvSixDQUFBLENBQUEsQ0FBQSxNQUFBLENBQUEsQ0FBQWdtQixDQUFBLENBQUFobUIsQ0FBQSxDQUFBLENBQUF3ZixJQUFBLENBQUE2d0IsQ0FBQSxDQUFBLEVBQUF0bUMsQ0FBQSxDQUFBL0osQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQWdtQixDQUFBLENBQUE3VyxJQUFBLENBQUFnRSxPQUFBLENBQUF5eUIsUUFBQSxDQUFBLEVBQUE1ZixDQUFBLENBQUFnd0IsWUFBQSxHQUFBLENBQUEsQ0FBQSxFQUFBaHdCLENBQUEsQ0FBQWpqQixNQUFBLENBQUFpakIsQ0FBQSxDQUFBZ3FCLE9BQUEsQ0FBQSxDQUFBaUcsSUFBQSxDQUFBLGNBQUFqd0IsQ0FBQSxDQUFBamMsQ0FBQSxDQUFBLENBQUEsSUFBQSxHQUFBL0osQ0FBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQWk5QixDQUFBLENBQUFsekIsQ0FBQSxDQUFBMUksTUFBQSxDQUFBNDdCLENBQUEsQ0FBQWo5QixDQUFBLENBQUFBLENBQUEsRUFBQSxFQUFBLE9BQUErSixDQUFBLENBQUEvSixDQUFBLENBQUEsRUFBQWdtQixDQUFBLENBQUF4RyxJQUFBLENBQUFpd0IsQ0FBQSxDQUFBMWxDLENBQUEsQ0FBQS9KLENBQUEsQ0FBQSxDQUFBZ21CLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQXpFLEtBQUEsQ0FBQXhYLENBQUEsQ0FBQS9KLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQWsyQyxPQUFBLENBQUEsaUJBQUFsd0IsQ0FBQSxDQUFBamMsQ0FBQSxDQUFBLENBQUEsSUFBQSxHQUFBL0osQ0FBQUEsQ0FBQSxDQUFBaTlCLENBQUEsQ0FBQSxDQUFBLENBQUFwbUIsQ0FBQSxDQUFBOU0sQ0FBQSxDQUFBMUksTUFBQSxDQUFBd1YsQ0FBQSxDQUFBb21CLENBQUEsQ0FBQUEsQ0FBQSxFQUFBLEVBQUEsT0FBQWx6QixDQUFBLENBQUFrekIsQ0FBQSxDQUFBLEdBQUFqOUIsQ0FBQSxDQUFBZ21CLENBQUEsQ0FBQXhHLElBQUEsQ0FBQWl3QixDQUFBLENBQUExbEMsQ0FBQSxDQUFBa3pCLENBQUEsQ0FBQSxDQUFBLENBQUFqWCxDQUFBLENBQUF2RSxHQUFBLENBQUExWCxDQUFBLENBQUFrekIsQ0FBQSxDQUFBLENBQUFqOUIsQ0FBQSxDQUFBLEVBQUEsQ0FBQSxDQUFBLENBQUFtMkMsT0FBQSxDQUFBLGlCQUFBbndCLENBQUEsQ0FBQWpjLENBQUEsQ0FBQSxDQUFBLE1BQUEsV0FBQUEsQ0FBQSxHQUFBQSxDQUFBLENBQUFpYyxDQUFBLENBQUFyUCxFQUFBLENBQUEsU0FBQSxFQUFBLE1BQUEsQ0FBQSxNQUFBLEVBQUE1TSxDQUFBLENBQUEsQ0FBQSxDQUFBcXNDLGFBQUEsQ0FBQSx1QkFBQXJzQyxDQUFBLENBQUEsQ0FBQSxHQUFBQSxDQUFBLENBQUFzSCxNQUFBLEdBQUFzRixFQUFBLENBQUEscUJBQUEsQ0FBQSxDQUFBLE1BQUE1TSxDQUFBQSxDQUFBLENBQUFzSCxNQUFBLEVBQUEsQ0FBQSxHQUFBclIsQ0FBQUEsQ0FBQSxDQUFBLENBQUFzdkIsS0FBQSxDQUFBdmxCLENBQUEsQ0FBQW1tQyxVQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQXpmLE1BQUEsQ0FBQTFtQixDQUFBLENBQUFvbUMsV0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsUUFBQXBtQyxDQUFBLENBQUEwWCxHQUFBLENBQUEsT0FBQSxDQUFBLENBQUEsQ0FBQXdiLENBQUEsQ0FBQWpYLENBQUEsQ0FBQSxhQUFBLENBQUEsQ0FBQTRVLFFBQUEsQ0FBQSxvQkFBQSxFQUFBblosR0FBQSxDQUFBLENBQUE0MEIsUUFBQSxDQUFBLE1BQUEsQ0FBQUMsVUFBQSxDQUFBLGFBQUEsQ0FBQXhpQixNQUFBLENBQUEsTUFBQSxDQUFBRixNQUFBLENBQUEsQ0FBQSxDQUFBQyxPQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQWhkLENBQUEsQ0FBQSxDQUFBeVksS0FBQSxDQUFBdmxCLENBQUEsQ0FBQXVsQixLQUFBLEVBQUEsQ0FBQW1CLE1BQUEsQ0FBQTFtQixDQUFBLENBQUEwbUIsTUFBQSxFQUFBLENBQUEsQ0FBQWtjLENBQUEsQ0FBQWh2QyxRQUFBLENBQUF5VSxhQUFBLENBQUEsR0FBQSxDQUFBdTZCLENBQUEsQ0FBQWhpQyxFQUFBLENBQUEsT0FBQXpELENBQUEsQ0FBQSxDQUFBeWxDLENBQUEsQ0FBQWh2QyxRQUFBLENBQUE0a0IsSUFBQSxDQUFBLE9BQUF4WSxDQUFBQSxDQUFBLENBQUEyYSxJQUFBLENBQUF1WSxDQUFBLEVBQUEsQ0FBQWx6QixDQUFBLENBQUEsQ0FBQSxDQUFBLEdBQUE0aUMsQ0FBQSxFQUFBM21CLENBQUEsQ0FBQXpmLFFBQUEsQ0FBQXdELENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQTRpQyxDQUFBLENBQUEsR0FBQTNtQixDQUFBLENBQUEybUIsQ0FBQSxDQUFBLENBQUFoa0IsT0FBQSxDQUFBLE9BQUEsQ0FBQSxDQUFBc1UsQ0FBQSxDQUFBbHpCLENBQUEsQ0FBQXNILE1BQUEsRUFBQSxDQUFBLFdBQUF0SCxDQUFBLENBQUEwWCxHQUFBLENBQUEsVUFBQSxDQUFBLEVBQUF3YixDQUFBLENBQUF4YixHQUFBLENBQUEsQ0FBQThOLFFBQUEsQ0FBQSxVQUFBLENBQUEsRUFBQXhsQixDQUFBLENBQUEwWCxHQUFBLENBQUEsQ0FBQThOLFFBQUEsQ0FBQSxVQUFBLENBQUEsQ0FBQSxHQUFBdkosQ0FBQSxDQUFBampCLE1BQUEsQ0FBQS9DLENBQUEsQ0FBQSxDQUFBdXZCLFFBQUEsQ0FBQXhsQixDQUFBLENBQUEwWCxHQUFBLENBQUEsVUFBQSxDQUFBLENBQUE4MEIsTUFBQSxDQUFBeHNDLENBQUEsQ0FBQTBYLEdBQUEsQ0FBQSxTQUFBLENBQUEsQ0FBQSxFQUFBdUUsQ0FBQSxDQUFBbGtCLElBQUEsQ0FBQSxDQUFBLEtBQUEsQ0FBQSxNQUFBLENBQUEsUUFBQSxDQUFBLE9BQUEsQ0FBQSxDQUFBLFNBQUFra0IsQ0FBQSxDQUFBaVgsQ0FBQSxDQUFBLENBQUFqOUIsQ0FBQSxDQUFBaTlCLENBQUEsQ0FBQSxDQUFBbHpCLENBQUEsQ0FBQTBYLEdBQUEsQ0FBQXdiLENBQUEsQ0FBQSxDQUFBNkssS0FBQSxDQUFBcFgsUUFBQSxDQUFBMXdCLENBQUEsQ0FBQWk5QixDQUFBLENBQUEsQ0FBQSxFQUFBLENBQUEsQ0FBQSxHQUFBajlCLENBQUEsQ0FBQWk5QixDQUFBLENBQUEsQ0FBQSxNQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQWx6QixDQUFBLENBQUEwWCxHQUFBLENBQUEsQ0FBQThOLFFBQUEsQ0FBQSxVQUFBLENBQUFsaUIsR0FBQSxDQUFBLENBQUEsQ0FBQXNtQixJQUFBLENBQUEsQ0FBQSxDQUFBeEUsS0FBQSxDQUFBLE1BQUEsQ0FBQTRtQixNQUFBLENBQUEsTUFBQSxDQUFBLENBQUEsQ0FBQSxDQUFBaHNDLENBQUEsQ0FBQTBYLEdBQUEsQ0FBQTVLLENBQUEsQ0FBQSxDQUFBb21CLENBQUEsQ0FBQXhiLEdBQUEsQ0FBQXpoQixDQUFBLEVBQUF5aUIsSUFBQSxFQUFBLENBQUEsQ0FBQSxDQUFBK3pCLGFBQUEsQ0FBQSx1QkFBQXpzQyxDQUFBLENBQUEsQ0FBQSxHQUFBL0osQ0FBQUEsQ0FBQSxDQUFBckMsUUFBQSxDQUFBeVUsYUFBQSxDQUFBLE1BQUFySSxDQUFBQSxDQUFBLENBQUFzSCxNQUFBLEdBQUFzRixFQUFBLENBQUEscUJBQUEsSUFBQTVNLENBQUEsQ0FBQXNILE1BQUEsR0FBQXVjLFdBQUEsQ0FBQTdqQixDQUFBLEVBQUEsQ0FBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxHQUFBL0osQ0FBQSxFQUFBZ21CLENBQUEsQ0FBQXpmLFFBQUEsQ0FBQXdELENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQS9KLENBQUEsQ0FBQSxHQUFBZ21CLENBQUEsQ0FBQWhtQixDQUFBLENBQUEsQ0FBQTJvQixPQUFBLENBQUEsT0FBQSxDQUFBLEVBQUE1ZSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQWljLENBQUEsQ0FBQWpqQixNQUFBLENBQUFpakIsQ0FBQSxDQUFBZ3FCLE9BQUEsQ0FBQSxDQUFBcHZDLE9BQUEsQ0FBQSxRQUFBLENBQUFvbkMsTUFBQSxDQUFBLGdCQUFBaitCLENBQUEsQ0FBQS9KLENBQUEsQ0FBQWk5QixDQUFBLENBQUEsQ0FBQSxNQUFBQSxDQUFBQSxDQUFBLEdBQUFBLENBQUEsQ0FBQWo5QixDQUFBLENBQUFBLENBQUEsQ0FBQSxRQUFBLENBQUEsQ0FBQWdtQixDQUFBLENBQUFncUIsT0FBQSxDQUFBRCxNQUFBLENBQUFobUMsQ0FBQSxFQUFBa3pCLENBQUEsQ0FBQWpYLENBQUEsQ0FBQWdxQixPQUFBLENBQUFELE1BQUEsQ0FBQWhtQyxDQUFBLEVBQUEwc0MsSUFBQSxDQUFBejJDLENBQUEsQ0FBQWk5QixDQUFBLENBQUEsQ0FBQSxDQUFBeVosZ0JBQUEsQ0FBQSwwQkFBQTF3QixDQUFBLENBQUFqYyxDQUFBLENBQUEvSixDQUFBLENBQUEsQ0FBQSxHQUFBLElBQUErSixDQUFBLENBQUEsTUFBQSxDQUFBMG1CLE1BQUEsQ0FBQSxDQUFBLENBQUFuQixLQUFBLENBQUEsQ0FBQSxDQUFBNmdCLFdBQUEsQ0FBQSxDQUFBLENBQUFELFVBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxHQUFBalQsQ0FBQUEsQ0FBQSxDQUFBLGVBQUFqOUIsQ0FBQSxDQUFBLENBQUErSixDQUFBLEVBQUEsR0FBQSxFQUFBLEdBQUEsQ0FBQSxDQUFBLENBQUE4TSxDQUFBLENBQUEsYUFBQTdXLENBQUEsQ0FBQSxDQUFBK0osQ0FBQSxFQUFBLEdBQUEsRUFBQSxHQUFBLENBQUEsQ0FBQSxDQUFBLE1BQUEsQ0FBQTBtQixNQUFBLENBQUF6SyxDQUFBLENBQUF5SyxNQUFBLEdBQUE1WixDQUFBLENBQUF5WSxLQUFBLENBQUF0SixDQUFBLENBQUFzSixLQUFBLEdBQUEyTixDQUFBLENBQUFrVCxXQUFBLENBQUFucUIsQ0FBQSxDQUFBbXFCLFdBQUEsR0FBQXQ1QixDQUFBLENBQUFxNUIsVUFBQSxDQUFBbHFCLENBQUEsQ0FBQWtxQixVQUFBLEdBQUFqVCxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEwWixTQUFBLENBQUEsbUJBQUEzd0IsQ0FBQSxDQUFBLENBQUEsTUFBQSxDQUFBc0osS0FBQSxDQUFBdEosQ0FBQSxDQUFBNHdCLElBQUEsQ0FBQXpuQixLQUFBLENBQUFuSixDQUFBLENBQUE0d0IsSUFBQSxDQUFBampCLElBQUEsQ0FBQWxELE1BQUEsQ0FBQXpLLENBQUEsQ0FBQTR3QixJQUFBLENBQUFiLE1BQUEsQ0FBQS92QixDQUFBLENBQUE0d0IsSUFBQSxDQUFBdnBDLEdBQUEsQ0FBQXNtQixJQUFBLENBQUEzTixDQUFBLENBQUE0d0IsSUFBQSxDQUFBampCLElBQUEsQ0FBQXRtQixHQUFBLENBQUEyWSxDQUFBLENBQUE0d0IsSUFBQSxDQUFBdnBDLEdBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQTZCLE9BQUEsQ0FBQSxpQkFBQThXLENBQUEsQ0FBQWpjLENBQUEsQ0FBQS9KLENBQUEsQ0FBQSxDQUFBLEdBQUFpOUIsQ0FBQUEsQ0FBQSxDQUFBalgsQ0FBQSxDQUFBdk0sS0FBQSxFQUFBLENBQUExUCxDQUFBLENBQUEsQ0FBQSxFQUFBa3pCLENBQUEsQ0FBQW42QixNQUFBLENBQUFyRSxLQUFBLENBQUF3K0IsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsRUFBQXorQixNQUFBLENBQUF5K0IsQ0FBQSxDQUFBbjZCLE1BQUEsQ0FBQWlILENBQUEsQ0FBQS9KLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQWdtQixDQUFBLENBQUExRixPQUFBLEVBQUEsQ0FBQSxDQUFBLENBQUF1MkIsU0FBQSxDQUFBLG1CQUFBN3dCLENBQUEsQ0FBQSxDQUFBQSxDQUFBLENBQUF4RyxJQUFBLENBQUF5d0IsQ0FBQSxDQUFBanFCLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQXpFLEtBQUEsQ0FBQXNOLE9BQUEsRUFBQSxDQUFBLENBQUFpb0IsWUFBQSxDQUFBLHNCQUFBOXdCLENBQUEsQ0FBQSxDQUFBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUF6RSxLQUFBLENBQUFzTixPQUFBLENBQUE3SSxDQUFBLENBQUF4RyxJQUFBLENBQUF5d0IsQ0FBQSxHQUFBLEVBQUEsQ0FBQWpxQixDQUFBLENBQUE3RixVQUFBLENBQUE4dkIsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBd0csSUFBQSxDQUFBLGNBQUF6d0IsQ0FBQSxDQUFBamMsQ0FBQSxDQUFBLENBQUEsR0FBQS9KLENBQUFBLENBQUEsQ0FBQWdtQixDQUFBLENBQUFyUCxFQUFBLENBQUEsU0FBQSxDQUFBLENBQUEsTUFBQSxXQUFBNU0sQ0FBQSxHQUFBQSxDQUFBLENBQUEvSixDQUFBLENBQUEsTUFBQSxDQUFBLE1BQUEsRUFBQSxDQUFBQSxDQUFBLENBQUEsU0FBQStKLENBQUEsQ0FBQSxTQUFBQSxDQUFBLElBQUFBLENBQUEsQ0FBQSxNQUFBLENBQUEsQ0FBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQWd0QyxXQUFBLENBQUEscUJBQUEvd0IsQ0FBQSxDQUFBamMsQ0FBQSxDQUFBLENBQUEsR0FBQS9KLENBQUFBLENBQUEsQ0FBQWk5QixDQUFBLENBQUEsT0FBQWpYLENBQUEsQ0FBQSxDQUFBLENBQUEsRUFBQSxJQUFBLEtBQUEsQ0FBQWhtQixDQUFBLENBQUEsQ0FBQSxDQUFBLE1BQUEsSUFBQSxRQUFBLENBQUFBLENBQUEsQ0FBQSxFQUFBLENBQUEsTUFBQSxJQUFBLFFBQUEsQ0FBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxNQUFBLFFBQUFBLENBQUEsQ0FBQWdtQixDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUFqYyxDQUFBLENBQUEwbUIsTUFBQSxDQUFBLENBQUEsT0FBQXpLLENBQUEsQ0FBQSxDQUFBLENBQUEsRUFBQSxJQUFBLE1BQUEsQ0FBQWlYLENBQUEsQ0FBQSxDQUFBLENBQUEsTUFBQSxJQUFBLFFBQUEsQ0FBQUEsQ0FBQSxDQUFBLEVBQUEsQ0FBQSxNQUFBLElBQUEsT0FBQSxDQUFBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLE1BQUEsUUFBQUEsQ0FBQSxDQUFBalgsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBamMsQ0FBQSxDQUFBdWxCLEtBQUEsQ0FBQSxDQUFBLE1BQUEsQ0FBQStoQixDQUFBLENBQUFwVSxDQUFBLENBQUFnVSxDQUFBLENBQUFqeEMsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBZzNDLGlCQUFBLENBQUEsMkJBQUFqdEMsQ0FBQSxDQUFBLENBQUEsR0FBQS9KLENBQUFBLENBQUEsQ0FBQWk5QixDQUFBLENBQUFsekIsQ0FBQSxDQUFBMFgsR0FBQSxDQUFBLFVBQUEsQ0FBQSxDQUFBNUssQ0FBQSxDQUFBOU0sQ0FBQSxDQUFBd2xCLFFBQUEsRUFBQSxDQUFBLE1BQUF4bEIsQ0FBQUEsQ0FBQSxDQUFBMFgsR0FBQSxDQUFBLENBQUFpd0IsU0FBQSxDQUFBM25DLENBQUEsQ0FBQTBYLEdBQUEsQ0FBQSxXQUFBLENBQUEsQ0FBQXcxQixZQUFBLENBQUFsdEMsQ0FBQSxDQUFBMFgsR0FBQSxDQUFBLGNBQUEsQ0FBQSxDQUFBeU4sVUFBQSxDQUFBbmxCLENBQUEsQ0FBQTBYLEdBQUEsQ0FBQSxZQUFBLENBQUEsQ0FBQXkxQixXQUFBLENBQUFudEMsQ0FBQSxDQUFBMFgsR0FBQSxDQUFBLGFBQUEsQ0FBQSxDQUFBLEVBQUF5dUIsVUFBQSxDQUFBbm1DLENBQUEsQ0FBQW1tQyxVQUFBLEVBQUEsRUFBQUMsV0FBQSxDQUFBcG1DLENBQUEsQ0FBQW9tQyxXQUFBLEVBQUEsRUFBQSxxQkFBQXBsQyxJQUFBLENBQUFreUIsQ0FBQSxJQUFBQSxDQUFBLENBQUEsVUFBQSxDQUFBajlCLENBQUEsQ0FBQWdtQixDQUFBLENBQUEsSUFBQWpjLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQUosUUFBQSxDQUFBLEdBQUEsQ0FBQSxDQUFBcWtCLFdBQUEsQ0FBQWprQixDQUFBLEVBQUEwWCxHQUFBLENBQUEsQ0FBQUQsT0FBQSxDQUFBLGlCQUFBelcsSUFBQSxDQUFBaEIsQ0FBQSxDQUFBMFgsR0FBQSxDQUFBLFNBQUEsQ0FBQSxFQUFBLGNBQUEsQ0FBQSxPQUFBLENBQUFxUSxVQUFBLENBQUEsUUFBQSxDQUFBNGYsU0FBQSxDQUFBM25DLENBQUEsQ0FBQTBYLEdBQUEsQ0FBQSxXQUFBLENBQUEsQ0FBQXcxQixZQUFBLENBQUFsdEMsQ0FBQSxDQUFBMFgsR0FBQSxDQUFBLGNBQUEsQ0FBQSxDQUFBeU4sVUFBQSxDQUFBbmxCLENBQUEsQ0FBQTBYLEdBQUEsQ0FBQSxZQUFBLENBQUEsQ0FBQXkxQixXQUFBLENBQUFudEMsQ0FBQSxDQUFBMFgsR0FBQSxDQUFBLGFBQUEsQ0FBQSxDQUFBLFFBQUExWCxDQUFBLENBQUEwWCxHQUFBLENBQUEsT0FBQSxDQUFBLENBQUEsRUFBQXl1QixVQUFBLENBQUFubUMsQ0FBQSxDQUFBbW1DLFVBQUEsRUFBQSxFQUFBQyxXQUFBLENBQUFwbUMsQ0FBQSxDQUFBb21DLFdBQUEsRUFBQSxFQUFBdlYsUUFBQSxDQUFBLHdCQUFBLENBQUEsQ0FBQTd3QixDQUFBLENBQUF5VixJQUFBLENBQUFpd0IsQ0FBQSxDQUFBLGFBQUEsQ0FBQXp2QyxDQUFBLENBQUEsQ0FBQSxDQUFBK0osQ0FBQSxDQUFBMFgsR0FBQSxDQUFBLENBQUE4TixRQUFBLENBQUEwTixDQUFBLENBQUF0SixJQUFBLENBQUE5YyxDQUFBLENBQUE4YyxJQUFBLENBQUF0bUIsR0FBQSxDQUFBd0osQ0FBQSxDQUFBeEosR0FBQSxDQUFBLENBQUEsQ0FBQXJOLENBQUEsQ0FBQSxDQUFBLENBQUFtM0MsaUJBQUEsQ0FBQSwyQkFBQW54QixDQUFBLENBQUEsQ0FBQSxHQUFBamMsQ0FBQUEsQ0FBQSxDQUFBMGxDLENBQUEsQ0FBQSxhQUFBLENBQUF6dkMsQ0FBQSxDQUFBZ21CLENBQUEsQ0FBQXhHLElBQUEsQ0FBQXpWLENBQUEsQ0FBQSxDQUFBL0osQ0FBQSxHQUFBQSxDQUFBLENBQUE4WixNQUFBLEdBQUFrTSxDQUFBLENBQUE3RixVQUFBLENBQUFwVyxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQXF0QyxPQUFBLENBQUEsaUJBQUFydEMsQ0FBQSxDQUFBLENBQUFpYyxDQUFBLENBQUFncUIsT0FBQSxDQUFBOEcsWUFBQSxDQUFBL3NDLENBQUEsRUFBQWljLENBQUEsQ0FBQWdxQixPQUFBLENBQUFtSCxpQkFBQSxDQUFBcHRDLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQXN0QyxhQUFBLENBQUEsdUJBQUF0dEMsQ0FBQSxDQUFBL0osQ0FBQSxDQUFBaTlCLENBQUEsQ0FBQXBtQixDQUFBLENBQUEsQ0FBQSxNQUFBQSxDQUFBQSxDQUFBLENBQUFBLENBQUEsRUFBQSxFQUFBLENBQUFtUCxDQUFBLENBQUFsa0IsSUFBQSxDQUFBOUIsQ0FBQSxDQUFBLFNBQUFnbUIsQ0FBQSxDQUFBaG1CLENBQUEsQ0FBQSxDQUFBLEdBQUEyc0MsQ0FBQUEsQ0FBQSxDQUFBNWlDLENBQUEsQ0FBQXV0QyxPQUFBLENBQUF0M0MsQ0FBQSxDQUFBLENBQUEyc0MsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsR0FBQTkxQixDQUFBLENBQUE3VyxDQUFBLENBQUEsQ0FBQTJzQyxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUExUCxDQUFBLENBQUEwUCxDQUFBLENBQUEsQ0FBQSxDQUFBLEVBQUEsQ0FBQSxDQUFBLENBQUE5MUIsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUFtUCxDQUFBLENBQUFobEIsRUFBQSxDQUFBK0IsTUFBQSxDQUFBLENBQUFndEMsTUFBQSxDQUFBLGlCQUFBLENBQUEsUUFBQS92QyxDQUFBQSxDQUFBLENBQUErSixDQUFBLENBQUEsQ0FBQSxRQUFBL0osQ0FBQUEsQ0FBQSxFQUFBLENBQUErc0MsQ0FBQSxDQUFBNXNCLFVBQUEsQ0FBQWt3QixDQUFBLEVBQUFycUIsQ0FBQSxDQUFBZ3FCLE9BQUEsQ0FBQW9ILE9BQUEsQ0FBQXJLLENBQUEsQ0FBQSxDQUFBLFNBQUE5UCxDQUFBLENBQUF3WixJQUFBLEVBQUExSixDQUFBLENBQUFwcUIsSUFBQSxFQUFBLENBQUF6YixDQUFBLEVBQUEsQ0FBQSxTQUFBQSxDQUFBQSxDQUFBLEVBQUEsQ0FBQThlLENBQUEsQ0FBQTdtQixVQUFBLENBQUFpdUMsQ0FBQSxHQUFBQSxDQUFBLENBQUE3dUMsSUFBQSxDQUFBd3VDLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBL21CLENBQUEsQ0FBQTdtQixVQUFBLENBQUE0SyxDQUFBLEdBQUFBLENBQUEsRUFBQSxDQUFBLElBQUFnakMsQ0FBQUEsQ0FBQSxDQUFBL21CLENBQUEsQ0FBQSxJQUFBLENBQUEsQ0FBQWlYLENBQUEsQ0FBQXdaLElBQUEsQ0FBQWhILENBQUEsQ0FBQTlqQyxLQUFBLEVBQUEsQ0FBQXFhLENBQUEsQ0FBQWd3QixZQUFBLEdBQUEsQ0FBQSxDQUFBLEVBQUFySixDQUFBLENBQUEsU0FBQTFQLENBQUEsQ0FBQXdaLElBQUEsRUFBQTFKLENBQUEsQ0FBQS8wQixDQUFBLENBQUEsR0FBQTlRLENBQUEsRUFBQSxFQUFBMlAsQ0FBQSxDQUFBdFksSUFBQSxDQUFBd3VDLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQTlQLENBQUEsQ0FBQWo5QixDQUFBLENBQUEsQ0FBQSxDQUFBK3NDLENBQUEsQ0FBQXAyQixFQUFBLENBQUEsU0FBQSxFQUFBLFNBQUFxQixDQUFBLENBQUEsU0FBQUEsQ0FBQSxHQUFBKzBCLENBQUEsQ0FBQS8wQixDQUFBLENBQUEsR0FBQTlRLENBQUEsRUFBQSxFQUFBMlAsQ0FBQSxDQUFBdFksSUFBQSxDQUFBd3VDLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQTlQLENBQUEsQ0FBQS8xQixDQUFBLENBQUEsQ0FBQSxJQUFBKzFCLENBQUFBLENBQUEsQ0FBQWx6QixDQUFBLENBQUF0TCxLQUFBLENBQUEsSUFBQSxDQUFBeUQsU0FBQSxDQUFBLENBQUEyVSxDQUFBLENBQUFtUCxDQUFBLENBQUFncUIsT0FBQSxDQUFBRCxNQUFBLENBQUE5UyxDQUFBLENBQUE4UyxNQUFBLENBQUEsQ0FBQXBELENBQUEsQ0FBQTkxQixDQUFBLENBQUE0L0IsSUFBQSxDQUFBdnZDLENBQUEsQ0FBQSsxQixDQUFBLENBQUF4akIsS0FBQSxDQUFBc3pCLENBQUEsQ0FBQTdsQyxDQUFBLEVBQUEsSUFBQSxDQUFBa21DLENBQUEsQ0FBQW5RLENBQUEsQ0FBQXBGLFFBQUEsQ0FBQTdmLENBQUEsQ0FBQWlsQixDQUFBLENBQUF3WixJQUFBLENBQUFoSCxDQUFBLENBQUEsRUFBQSxDQUFBUSxDQUFBLENBQUEsUUFBQUEsQ0FBQUEsQ0FBQSxDQUFBbG1DLENBQUEsQ0FBQSxDQUFBLEdBQUEvSixDQUFBQSxDQUFBLENBQUFnbUIsQ0FBQSxDQUFBLElBQUEsQ0FBQSxDQUFBaVgsQ0FBQSxDQUFBalgsQ0FBQSxDQUFBZ3FCLE9BQUEsQ0FBQXlHLElBQUEsQ0FBQXoyQyxDQUFBLENBQUFnWSxDQUFBLEdBQUEyMEIsQ0FBQSxDQUFBM3NDLENBQUEsQ0FBQXdmLElBQUEsQ0FBQTZ3QixDQUFBLENBQUEsQ0FBQSxDQUFBLEVBQUFaLENBQUEsQ0FBQS93QyxJQUFBLENBQUF1K0IsQ0FBQSxDQUFBLENBQUEwUCxDQUFBLEdBQUEsU0FBQTFQLENBQUEsRUFBQUEsQ0FBQSxHQUFBMFAsQ0FBQSxFQUFBLFNBQUExUCxDQUFBLENBQUEsRUFBQWo5QixDQUFBLENBQUF5aUIsSUFBQSxFQUFBLENBQUFrcUIsQ0FBQSxFQUFBLFNBQUExUCxDQUFBLEVBQUFqWCxDQUFBLENBQUFncUIsT0FBQSxDQUFBNkcsU0FBQSxDQUFBNzJDLENBQUEsQ0FBQSxDQUFBZ21CLENBQUEsQ0FBQTdtQixVQUFBLENBQUE0SyxDQUFBLEdBQUFBLENBQUEsRUFBQSxDQUFBLENBQUEsQ0FBQSxNQUFBaWMsQ0FBQUEsQ0FBQSxDQUFBNk8sRUFBQSxDQUFBalAsR0FBQSxFQUFBLENBQUEvTyxDQUFBLENBQUFtQixDQUFBLENBQUEsS0FBQUEsQ0FBQSxFQUFBaWxCLENBQUEsQ0FBQXZJLFFBQUEsQ0FBQTBZLENBQUEsQ0FBQSxDQUFBLEtBQUF0ckMsSUFBQSxDQUFBLFVBQUEsQ0FBQXNyQyxDQUFBLEVBQUFBLENBQUEsQ0FBQTd1QyxJQUFBLENBQUEsSUFBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEySSxDQUFBLEdBQUEsQ0FBQSxDQUFBLENBQUEsS0FBQXBGLElBQUEsQ0FBQW11QyxDQUFBLEVBQUFudUMsSUFBQSxDQUFBOUIsQ0FBQSxDQUFBLENBQUEsS0FBQXlaLEtBQUEsQ0FBQXN6QixDQUFBLENBQUFrRCxDQUFBLEVBQUF4MkIsS0FBQSxDQUFBc3pCLENBQUEsQ0FBQS9zQyxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUF5aUIsSUFBQSxDQUFBLFNBQUF1RCxDQUFBLENBQUEsQ0FBQSxNQUFBLFVBQUFpWCxDQUFBLENBQUEsQ0FBQSxHQUFBajlCLENBQUEsQ0FBQWk5QixDQUFBLENBQUEsQ0FBQSxNQUFBalgsQ0FBQUEsQ0FBQSxDQUFBdm5CLEtBQUEsQ0FBQSxJQUFBLENBQUF5RCxTQUFBLENBQUEsQ0FBQSxHQUFBMlUsQ0FBQUEsQ0FBQSxDQUFBOU0sQ0FBQSxDQUFBdEwsS0FBQSxDQUFBLElBQUEsQ0FBQXlELFNBQUEsQ0FBQSxDQUFBLE1BQUEyVSxDQUFBQSxDQUFBLENBQUE0L0IsSUFBQSxDQUFBLE1BQUEsQ0FBQSxLQUFBMUcsTUFBQSxDQUFBeHhDLElBQUEsQ0FBQSxJQUFBLENBQUFzWSxDQUFBLENBQUEsQ0FDQSxDQURBLENBQ0EsQ0FEQSxDQUNBbVAsQ0FBQSxDQUFBaGxCLEVBQUEsQ0FBQXloQixJQURBLENBQUEsQ0FDQUUsSUFBQSxDQUFBLFNBQUFxRCxDQUFBLENBQUEsQ0FBQSxNQUFBLFVBQUFpWCxDQUFBLENBQUEsQ0FBQSxHQUFBajlCLENBQUEsQ0FBQWk5QixDQUFBLENBQUEsQ0FBQSxNQUFBalgsQ0FBQUEsQ0FBQSxDQUFBdm5CLEtBQUEsQ0FBQSxJQUFBLENBQUF5RCxTQUFBLENBQUEsQ0FBQSxHQUFBMlUsQ0FBQUEsQ0FBQSxDQUFBOU0sQ0FBQSxDQUFBdEwsS0FBQSxDQUFBLElBQUEsQ0FBQXlELFNBQUEsQ0FBQSxDQUFBLE1BQUEyVSxDQUFBQSxDQUFBLENBQUE0L0IsSUFBQSxDQUFBLE1BQUEsQ0FBQSxLQUFBMUcsTUFBQSxDQUFBeHhDLElBQUEsQ0FBQSxJQUFBLENBQUFzWSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBbVAsQ0FBQSxDQUFBaGxCLEVBQUEsQ0FBQTJoQixJQUFBLENBREEsQ0FDQUMsTUFBQSxDQUFBLFNBQUFvRCxDQUFBLENBQUEsQ0FBQSxNQUFBLFVBQUFpWCxDQUFBLENBQUEsQ0FBQSxHQUFBajlCLENBQUEsQ0FBQWk5QixDQUFBLENBQUEsRUFBQSxXQUFBLE1BQUFBLENBQUFBLENBQUEsQ0FBQSxNQUFBalgsQ0FBQUEsQ0FBQSxDQUFBdm5CLEtBQUEsQ0FBQSxJQUFBLENBQUF5RCxTQUFBLENBQUEsQ0FBQSxHQUFBMlUsQ0FBQUEsQ0FBQSxDQUFBOU0sQ0FBQSxDQUFBdEwsS0FBQSxDQUFBLElBQUEsQ0FBQXlELFNBQUEsQ0FBQSxDQUFBLE1BQUEyVSxDQUFBQSxDQUFBLENBQUE0L0IsSUFBQSxDQUFBLFFBQUEsQ0FBQSxLQUFBMUcsTUFBQSxDQUFBeHhDLElBQUEsQ0FBQSxJQUFBLENBQUFzWSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBbVAsQ0FBQSxDQUFBaGxCLEVBQUEsQ0FBQTRoQixNQUFBLENBREEsQ0FDQTAwQixPQUFBLENBQUEsaUJBQUF2dEMsQ0FBQSxDQUFBLENBQUEsR0FBQS9KLENBQUFBLENBQUEsQ0FBQSxLQUFBeWhCLEdBQUEsQ0FBQTFYLENBQUEsQ0FBQSxDQUFBa3pCLENBQUEsQ0FBQSxFQUFBLENBQUEsTUFBQWpYLENBQUFBLENBQUEsQ0FBQWxrQixJQUFBLENBQUEsQ0FBQSxJQUFBLENBQUEsSUFBQSxDQUFBLEdBQUEsQ0FBQSxJQUFBLENBQUEsQ0FBQSxTQUFBa2tCLENBQUEsQ0FBQWpjLENBQUEsQ0FBQSxDQUFBL0osQ0FBQSxDQUFBckIsT0FBQSxDQUFBb0wsQ0FBQSxFQUFBLENBQUEsR0FBQWt6QixDQUFBLENBQUEsQ0FBQXJOLFVBQUEsQ0FBQTV2QixDQUFBLENBQUEsQ0FBQStKLENBQUEsQ0FBQSxFQUFBLENBQUEsRUFBQWt6QixDQUFBLENBQUEsQ0FEQSxDQUNBc2EsT0FBQSxDQUFBLGlCQUFBdnhCLENBQUEsQ0FBQSxDQUFBLE1BQUFBLENBQUFBLENBQUEsQ0FBQSxLQUFBdkUsR0FBQSxDQUFBLE1BQUEsQ0FBQSxRQUFBdUUsQ0FBQSxDQUFBM1ksR0FBQSxDQUFBLEtBQUEsQ0FBQTJZLENBQUEsQ0FBQW1KLEtBQUEsQ0FBQSxLQUFBLENBQUFuSixDQUFBLENBQUErdkIsTUFBQSxDQUFBLEtBQUEsQ0FBQS92QixDQUFBLENBQUEyTixJQUFBLENBQUEsS0FBQSxDQUFBLENBQUFzSixDQUFBLENBQUEsS0FBQXhiLEdBQUEsQ0FBQSxNQUFBLENBQUEsQ0FBQSxJQUFBLENBQUEsQ0FBQSxDQURBLENBQ0ErMUIsUUFBQSxDQUFBLGtCQUFBenRDLENBQUEsQ0FBQS9KLENBQUEsQ0FBQSxDQUFBLEdBQUFpOUIsQ0FBQUEsQ0FBQSxDQUFBalgsQ0FBQSxDQUFBLElBQUEsQ0FBQSxDQUFBblAsQ0FBQSxDQUFBbVAsQ0FBQSxDQUFBamMsQ0FBQSxDQUFBc3VCLEVBQUEsQ0FBQSxDQUFBc1UsQ0FBQSxDQUFBLFVBQUE5MUIsQ0FBQSxDQUFBNEssR0FBQSxDQUFBLFVBQUEsQ0FBQSxDQUFBdmEsQ0FBQSxDQUFBOGUsQ0FBQSxDQUFBLE1BQUEsQ0FBQSxDQUFBK21CLENBQUEsQ0FBQUosQ0FBQSxDQUFBemxDLENBQUEsQ0FBQTR0QixTQUFBLEVBQUEsQ0FBQSxDQUFBLENBQUFzWSxDQUFBLENBQUFULENBQUEsQ0FBQXpsQyxDQUFBLENBQUE2dEIsVUFBQSxFQUFBLENBQUEsQ0FBQSxDQUFBL2MsQ0FBQSxDQUFBbkIsQ0FBQSxDQUFBZ3ZCLE1BQUEsRUFBQSxDQUFBNEosQ0FBQSxDQUFBLENBQUFwaUMsR0FBQSxDQUFBMkssQ0FBQSxDQUFBM0ssR0FBQSxDQUFBMC9CLENBQUEsQ0FBQXBaLElBQUEsQ0FBQTNiLENBQUEsQ0FBQTJiLElBQUEsQ0FBQXlaLENBQUEsQ0FBQTNjLE1BQUEsQ0FBQTVaLENBQUEsQ0FBQTRnQyxXQUFBLEVBQUEsQ0FBQW5vQixLQUFBLENBQUF6WSxDQUFBLENBQUE2Z0MsVUFBQSxFQUFBLENBQUEsQ0FBQXpILENBQUEsQ0FBQWhULENBQUEsQ0FBQTRJLE1BQUEsRUFBQSxDQUFBd0ssQ0FBQSxDQUFBcnFCLENBQUEsQ0FBQSx5Q0FBQSxDQUFBLENBQUE4SCxRQUFBLENBQUEsTUFBQSxFQUFBOE0sUUFBQSxDQUFBN3dCLENBQUEsQ0FBQXlELFNBQUEsRUFBQWlVLEdBQUEsQ0FBQSxDQUFBcFUsR0FBQSxDQUFBNGlDLENBQUEsQ0FBQTVpQyxHQUFBLENBQUEwL0IsQ0FBQSxDQUFBcFosSUFBQSxDQUFBc2MsQ0FBQSxDQUFBdGMsSUFBQSxDQUFBeVosQ0FBQSxDQUFBM2MsTUFBQSxDQUFBd00sQ0FBQSxDQUFBd2EsV0FBQSxFQUFBLENBQUFub0IsS0FBQSxDQUFBMk4sQ0FBQSxDQUFBeWEsVUFBQSxFQUFBLENBQUFub0IsUUFBQSxDQUFBb2QsQ0FBQSxDQUFBLE9BQUEsQ0FBQSxVQUFBLENBQUEsRUFBQXJVLE9BQUEsQ0FBQW1YLENBQUEsQ0FBQTFsQyxDQUFBLENBQUEycUIsUUFBQSxDQUFBM3FCLENBQUEsQ0FBQXNxQixNQUFBLENBQUEsVUFBQSxDQUFBZ2MsQ0FBQSxDQUFBdjJCLE1BQUEsR0FBQWtNLENBQUEsQ0FBQTdtQixVQUFBLENBQUFhLENBQUEsR0FBQUEsQ0FBQSxFQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FEQSxDQUFBLENBQUEsQ0FDQWdtQixDQUFBLENBQUE2TyxFQUFBLENBQUFELElBQUEsQ0FBQWdpQixJQUFBLENBQUEsU0FBQTdzQyxDQUFBLENBQUEsQ0FBQUEsQ0FBQSxDQUFBNHRDLFFBQUEsR0FBQTV0QyxDQUFBLENBQUFxSCxLQUFBLENBQUE0VSxDQUFBLENBQUFqYyxDQUFBLENBQUE5SCxJQUFBLENBQUEsQ0FBQXMxQyxPQUFBLEVBQUEsQ0FBQSxVQUFBLE1BQUF4dEMsQ0FBQUEsQ0FBQSxDQUFBbkgsR0FBQSxHQUFBbUgsQ0FBQSxDQUFBbkgsR0FBQSxDQUFBcTZCLENBQUEsQ0FBQWx6QixDQUFBLENBQUFuSCxHQUFBLENBQUFtSCxDQUFBLENBQUE5SCxJQUFBLENBQUEsQ0FBQSxDQUFBOEgsQ0FBQSxDQUFBNHRDLFFBQUEsQ0FBQSxDQUFBLENBQUEsRUFBQTN4QixDQUFBLENBQUFqYyxDQUFBLENBQUE5SCxJQUFBLENBQUEsQ0FBQXMxQyxPQUFBLENBQUEsQ0FBQWxxQyxHQUFBLENBQUF0RCxDQUFBLENBQUE0cUIsR0FBQSxFQUFBNXFCLENBQUEsQ0FBQW5ILEdBQUEsQ0FBQXlLLEdBQUEsQ0FBQXRELENBQUEsQ0FBQXFILEtBQUEsQ0FBQS9ELEdBQUEsRUFBQXRELENBQUEsQ0FBQXFILEtBQUEsQ0FBQS9ELEdBQUEsQ0FBQThoQixLQUFBLENBQUFwbEIsQ0FBQSxDQUFBNHFCLEdBQUEsRUFBQTVxQixDQUFBLENBQUFuSCxHQUFBLENBQUF1c0IsS0FBQSxDQUFBcGxCLENBQUEsQ0FBQXFILEtBQUEsQ0FBQStkLEtBQUEsRUFBQXBsQixDQUFBLENBQUFxSCxLQUFBLENBQUErZCxLQUFBLENBQUE0bUIsTUFBQSxDQUFBaHNDLENBQUEsQ0FBQTRxQixHQUFBLEVBQUE1cUIsQ0FBQSxDQUFBbkgsR0FBQSxDQUFBbXpDLE1BQUEsQ0FBQWhzQyxDQUFBLENBQUFxSCxLQUFBLENBQUEya0MsTUFBQSxFQUFBaHNDLENBQUEsQ0FBQXFILEtBQUEsQ0FBQTJrQyxNQUFBLENBQUFwaUIsSUFBQSxDQUFBNXBCLENBQUEsQ0FBQTRxQixHQUFBLEVBQUE1cUIsQ0FBQSxDQUFBbkgsR0FBQSxDQUFBK3dCLElBQUEsQ0FBQTVwQixDQUFBLENBQUFxSCxLQUFBLENBQUF1aUIsSUFBQSxFQUFBNXBCLENBQUEsQ0FBQXFILEtBQUEsQ0FBQXVpQixJQUFBLENBQUEsQ0FBQSxDQUFBLENBREEsQ0FDQSxDQURBLEVBQUEsQ0FDQSxVQUFBLENBQUEsR0FBQTVwQixDQUFBQSxDQUFBLENBQUEsRUFBQSxDQUFBaWMsQ0FBQSxDQUFBbGtCLElBQUEsQ0FBQSxDQUFBLE1BQUEsQ0FBQSxPQUFBLENBQUEsT0FBQSxDQUFBLE9BQUEsQ0FBQSxNQUFBLENBQUEsQ0FBQSxTQUFBa2tCLENBQUEsQ0FBQWhtQixDQUFBLENBQUEsQ0FBQStKLENBQUEsQ0FBQS9KLENBQUEsQ0FBQSxDQUFBLFNBQUErSixDQUFBLENBQUEsQ0FBQSxNQUFBbkcsQ0FBQUEsSUFBQSxDQUFBZzBDLEdBQUEsQ0FBQTd0QyxDQUFBLENBQUFpYyxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsRUFBQUEsQ0FBQSxDQUFBampCLE1BQUEsQ0FBQWdILENBQUEsQ0FBQSxDQUFBOHRDLElBQUEsQ0FBQSxjQUFBN3hCLENBQUEsQ0FBQSxDQUFBLE1BQUEsR0FBQXBpQixJQUFBLENBQUF1eEIsR0FBQSxDQUFBblAsQ0FBQSxDQUFBcGlCLElBQUEsQ0FBQXd4QixFQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBMGlCLElBQUEsQ0FBQSxjQUFBOXhCLENBQUEsQ0FBQSxDQUFBLE1BQUEsR0FBQXBpQixJQUFBLENBQUFtMEMsSUFBQSxDQUFBLEVBQUEveEIsQ0FBQSxDQUFBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUFneUIsT0FBQSxDQUFBLGlCQUFBaHlCLENBQUEsQ0FBQSxDQUFBLE1BQUEsS0FBQUEsQ0FBQSxFQUFBLElBQUFBLENBQUEsQ0FBQUEsQ0FBQSxDQUFBLENBQUFwaUIsSUFBQSxDQUFBZzBDLEdBQUEsQ0FBQSxDQUFBLENBQUEsR0FBQTV4QixDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQXBpQixJQUFBLENBQUFxMEMsR0FBQSxDQUFBLENBQUEsSUFBQWp5QixDQUFBLENBQUEsQ0FBQSxFQUFBLEdBQUEsRUFBQXBpQixJQUFBLENBQUF3eEIsRUFBQSxDQUFBLEVBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQThpQixJQUFBLENBQUEsY0FBQWx5QixDQUFBLENBQUEsQ0FBQSxNQUFBQSxDQUFBQSxDQUFBLENBQUFBLENBQUEsRUFBQSxFQUFBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBbXlCLE1BQUEsQ0FBQSxnQkFBQW55QixDQUFBLENBQUEsQ0FBQSxJQUFBLEdBQUFqYyxDQUFBQSxDQUFBLENBQUEvSixDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQStKLENBQUEsQ0FBQW5HLElBQUEsQ0FBQWcwQyxHQUFBLENBQUEsQ0FBQSxDQUFBLEVBQUE1M0MsQ0FBQSxDQUFBLEVBQUEsQ0FBQSxFQUFBLEVBQUEsQ0FBQWdtQixDQUFBLEdBQUEsQ0FBQSxDQUFBLE1BQUEsR0FBQXBpQixJQUFBLENBQUFnMEMsR0FBQSxDQUFBLENBQUEsQ0FBQSxFQUFBNTNDLENBQUEsQ0FBQSxDQUFBLE9BQUE0RCxJQUFBLENBQUFnMEMsR0FBQSxDQUFBLENBQUEsRUFBQTd0QyxDQUFBLENBQUEsQ0FBQSxFQUFBLEVBQUEsQ0FBQWljLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBQSxDQUFBLENBQUFsa0IsSUFBQSxDQUFBaUksQ0FBQSxDQUFBLFNBQUFBLENBQUEsQ0FBQS9KLENBQUEsQ0FBQSxDQUFBZ21CLENBQUEsQ0FBQXFPLE1BQUEsQ0FBQSxTQUFBdHFCLENBQUEsRUFBQS9KLENBQUEsQ0FBQWdtQixDQUFBLENBQUFxTyxNQUFBLENBQUEsVUFBQXRxQixDQUFBLEVBQUEsU0FBQWljLENBQUEsQ0FBQSxDQUFBLE1BQUEsR0FBQWhtQixDQUFBLENBQUEsRUFBQWdtQixDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUFBLENBQUEsQ0FBQXFPLE1BQUEsQ0FBQSxZQUFBdHFCLENBQUEsRUFBQSxTQUFBaWMsQ0FBQSxDQUFBLENBQUEsTUFBQSxJQUFBQSxDQUFBLENBQUFobUIsQ0FBQSxDQUFBLEVBQUFnbUIsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLEVBQUFobUIsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBZ21CLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsRUFEQSxDQUNBLEdBQUE4cUIsQ0FBQUEsQ0FBQSxDQUFBOXFCLENBQUEsQ0FBQWdxQixPQUFBLENBQUFocUIsQ0FBQSxDQUFBZ3FCLE9BQUEsQ0FBQWhJLE1BQUEsQ0FBQSxPQUFBLENBQUEsTUFBQSxDQUFBLFNBQUFqK0IsQ0FBQSxDQUFBL0osQ0FBQSxDQUFBLENBQUEsR0FBQWk5QixDQUFBQSxDQUFBLENBQUEsQ0FBQW1iLEVBQUEsQ0FBQSxDQUFBLFFBQUEsQ0FBQSxLQUFBLENBQUEsQ0FBQWpHLFFBQUEsQ0FBQSxDQUFBLFFBQUEsQ0FBQSxLQUFBLENBQUEsQ0FBQWtHLElBQUEsQ0FBQSxDQUFBLEtBQUEsQ0FBQSxRQUFBLENBQUEsQ0FBQTFrQixJQUFBLENBQUEsQ0FBQSxPQUFBLENBQUEsTUFBQSxDQUFBLENBQUF1ZSxVQUFBLENBQUEsQ0FBQSxPQUFBLENBQUEsTUFBQSxDQUFBLENBQUEvaUIsS0FBQSxDQUFBLENBQUEsTUFBQSxDQUFBLE9BQUEsQ0FBQSxDQUFBLENBQUF0WSxDQUFBLENBQUFtUCxDQUFBLENBQUEsSUFBQSxDQUFBLENBQUEybUIsQ0FBQSxDQUFBNWlDLENBQUEsQ0FBQXV1QyxTQUFBLEVBQUEsSUFBQSxDQUFBcHhDLENBQUEsQ0FBQTJQLENBQUEsQ0FBQTBnQyxPQUFBLEVBQUEsQ0FBQXhLLENBQUEsQ0FBQSxDQUFBNkosSUFBQSxDQUFBNXdCLENBQUEsQ0FBQWpqQixNQUFBLENBQUEsRUFBQSxDQUFBbUUsQ0FBQSxDQUFBLENBQUEsQ0FBQWttQyxDQUFBLENBQUFwbkIsQ0FBQSxDQUFBZ3FCLE9BQUEsQ0FBQWdILGlCQUFBLENBQUFuZ0MsQ0FBQSxDQUFBLENBQUFrMkIsQ0FBQSxDQUFBNkosSUFBQSxDQUFBM1osQ0FBQSxDQUFBMFAsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLEVBQUFJLENBQUEsQ0FBQTZKLElBQUEsQ0FBQTNaLENBQUEsQ0FBQTBQLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsU0FBQTVpQyxDQUFBLENBQUEwc0MsSUFBQSxHQUFBNS9CLENBQUEsQ0FBQTBnQyxPQUFBLENBQUF4SyxDQUFBLENBQUE2SixJQUFBLEVBQUF4SixDQUFBLEVBQUFBLENBQUEsQ0FBQTNyQixHQUFBLENBQUF1RSxDQUFBLENBQUFncUIsT0FBQSxDQUFBMkcsU0FBQSxDQUFBNUosQ0FBQSxDQUFBLENBQUEsQ0FBQUEsQ0FBQSxDQUFBNkosSUFBQSxDQUFBMXZDLENBQUEsQ0FBQSxDQUFBa21DLENBQUEsRUFBQUEsQ0FBQSxDQUFBOVUsT0FBQSxDQUFBdFMsQ0FBQSxDQUFBZ3FCLE9BQUEsQ0FBQTJHLFNBQUEsQ0FBQTVKLENBQUEsQ0FBQSxDQUFBaGpDLENBQUEsQ0FBQTJxQixRQUFBLENBQUEzcUIsQ0FBQSxDQUFBc3FCLE1BQUEsQ0FBQSxDQUFBeGQsQ0FBQSxDQUFBeWhCLE9BQUEsQ0FBQXlVLENBQUEsQ0FBQSxDQUFBdHpCLEtBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQWliLFFBQUEsQ0FBQTNxQixDQUFBLENBQUEycUIsUUFBQSxDQUFBTCxNQUFBLENBQUF0cUIsQ0FBQSxDQUFBc3FCLE1BQUEsQ0FBQXdELFFBQUEsQ0FBQTczQixDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsRUFBQWdtQixDQUFBLENBQUFncUIsT0FBQSxDQUFBaEksTUFBQSxDQUFBLFFBQUEsQ0FBQSxTQUFBaitCLENBQUEsQ0FBQS9KLENBQUEsQ0FBQSxDQUFBLEdBQUFpOUIsQ0FBQUEsQ0FBQSxDQUFBcG1CLENBQUEsQ0FBQTgxQixDQUFBLENBQUF6bEMsQ0FBQSxDQUFBOGUsQ0FBQSxDQUFBLElBQUEsQ0FBQSxDQUFBK21CLENBQUEsQ0FBQWhqQyxDQUFBLENBQUEwc0MsSUFBQSxDQUFBckosQ0FBQSxDQUFBLFNBQUFMLENBQUEsQ0FBQS8wQixDQUFBLENBQUEsU0FBQSswQixDQUFBLENBQUEwQyxDQUFBLENBQUExbEMsQ0FBQSxDQUFBdXVDLFNBQUEsRUFBQSxJQUFBLENBQUFySSxDQUFBLENBQUFsbUMsQ0FBQSxDQUFBd3VDLFFBQUEsQ0FBQWxJLENBQUEsQ0FBQXRtQyxDQUFBLENBQUF5dUMsS0FBQSxFQUFBLENBQUEsQ0FBQXZqQixDQUFBLENBQUEsRUFBQW9iLENBQUEsRUFBQXI0QixDQUFBLEVBQUFvMUIsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQTBELENBQUEsQ0FBQS9tQyxDQUFBLENBQUEycUIsUUFBQSxDQUFBTyxDQUFBLENBQUE4YixDQUFBLENBQUFobkMsQ0FBQSxDQUFBc3FCLE1BQUEsQ0FBQW5xQixDQUFBLENBQUEsT0FBQXVsQyxDQUFBLEVBQUEsU0FBQUEsQ0FBQSxDQUFBLEtBQUEsQ0FBQSxNQUFBLENBQUF2MkIsQ0FBQSxDQUFBLE9BQUF1MkIsQ0FBQSxFQUFBLFNBQUFBLENBQUEsQ0FBQXIxQixDQUFBLENBQUEsQ0FBQSxDQUFBalQsQ0FBQSxDQUFBRCxDQUFBLENBQUF1UyxLQUFBLEdBQUFwWSxNQUFBLENBQUEsSUFBQTJrQixDQUFBLENBQUFncUIsT0FBQSxDQUFBZ0gsaUJBQUEsQ0FBQTl2QyxDQUFBLEVBQUF5bEMsQ0FBQSxDQUFBemxDLENBQUEsQ0FBQXVhLEdBQUEsQ0FBQXZYLENBQUEsQ0FBQSxDQUFBK2xDLENBQUEsR0FBQUEsQ0FBQSxDQUFBL29DLENBQUEsQ0FBQSxRQUFBZ0QsQ0FBQSxDQUFBLGFBQUEsQ0FBQSxZQUFBLENBQUEsR0FBQSxDQUFBLENBQUEsQ0FBQThOLENBQUEsR0FBQW5CLENBQUEsQ0FBQSxDQUFBdWMsT0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBdmMsQ0FBQSxDQUFBM00sQ0FBQSxDQUFBLENBQUF5aUMsQ0FBQSxDQUFBemxDLENBQUEsQ0FBQXVhLEdBQUEsQ0FBQSxTQUFBLENBQUEsQ0FBQSxFQUFBQSxHQUFBLENBQUF2WCxDQUFBLENBQUFnUCxDQUFBLENBQUEsRUFBQSxDQUFBKzJCLENBQUEsQ0FBQSxFQUFBQSxDQUFBLEVBQUEzWCxPQUFBLENBQUF6aEIsQ0FBQSxDQUFBaTZCLENBQUEsQ0FBQUMsQ0FBQSxDQUFBLENBQUEsQ0FBQTNELENBQUEsR0FBQTZDLENBQUEsRUFBQXJzQyxJQUFBLENBQUFnMEMsR0FBQSxDQUFBLENBQUEsQ0FBQXZILENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBeDVCLENBQUEsQ0FBQSxFQUFBLENBQUFBLENBQUEsQ0FBQTNNLENBQUEsQ0FBQSxDQUFBeWlDLENBQUEsQ0FBQTBELENBQUEsQ0FBQWoyQixDQUFBLENBQUFBLENBQUEsRUFBQSxFQUFBNmlCLENBQUEsQ0FBQSxFQUFBLENBQUFBLENBQUEsQ0FBQS95QixDQUFBLENBQUEsQ0FBQSxDQUFBZ1AsQ0FBQSxDQUFBLElBQUEsQ0FBQSxJQUFBLEVBQUErMkIsQ0FBQSxDQUFBL29DLENBQUEsQ0FBQW94QixPQUFBLENBQUEyRSxDQUFBLENBQUE2VCxDQUFBLENBQUFDLENBQUEsRUFBQXpZLE9BQUEsQ0FBQXpoQixDQUFBLENBQUFpNkIsQ0FBQSxDQUFBQyxDQUFBLENBQUEsQ0FBQWQsQ0FBQSxDQUFBN0MsQ0FBQSxDQUFBLEVBQUE2QyxDQUFBLENBQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQTdDLENBQUEsR0FBQW5RLENBQUEsQ0FBQSxDQUFBN0osT0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBNkosQ0FBQSxDQUFBL3lCLENBQUEsQ0FBQSxDQUFBLENBQUFnUCxDQUFBLENBQUEsSUFBQSxDQUFBLElBQUEsRUFBQSsyQixDQUFBLENBQUEvb0MsQ0FBQSxDQUFBb3hCLE9BQUEsQ0FBQTJFLENBQUEsQ0FBQTZULENBQUEsQ0FBQUMsQ0FBQSxDQUFBLENBQUEsQ0FBQTdwQyxDQUFBLENBQUF1UyxLQUFBLENBQUF6WixDQUFBLENBQUEsQ0FBQWdtQixDQUFBLENBQUFncUIsT0FBQSxDQUFBOWdDLE9BQUEsQ0FBQWhJLENBQUEsQ0FBQUMsQ0FBQSxDQUFBOHRCLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQWpQLENBQUEsQ0FBQWdxQixPQUFBLENBQUFoSSxNQUFBLENBQUEsTUFBQSxDQUFBLE1BQUEsQ0FBQSxTQUFBaitCLENBQUEsQ0FBQS9KLENBQUEsQ0FBQSxDQUFBLEdBQUFpOUIsQ0FBQUEsQ0FBQSxDQUFBcG1CLENBQUEsQ0FBQSxFQUFBLENBQUE4MUIsQ0FBQSxDQUFBM21CLENBQUEsQ0FBQSxJQUFBLENBQUEsQ0FBQTllLENBQUEsQ0FBQTZDLENBQUEsQ0FBQXV1QyxTQUFBLEVBQUEsVUFBQSxDQUFBdkwsQ0FBQSxDQUFBLFNBQUE3bEMsQ0FBQSxDQUFBa21DLENBQUEsQ0FBQUwsQ0FBQSxFQUFBLGVBQUE3bEMsQ0FBQSxDQUFBOFEsQ0FBQSxDQUFBKzBCLENBQUEsRUFBQSxhQUFBN2xDLENBQUEsQ0FBQSsxQixDQUFBLENBQUEwUCxDQUFBLENBQUE0SyxPQUFBLEVBQUEsQ0FBQTFnQyxDQUFBLENBQUErL0IsSUFBQSxDQUFBLENBQUF2cEMsR0FBQSxDQUFBMkssQ0FBQSxDQUFBLENBQUFpbEIsQ0FBQSxDQUFBOFksTUFBQSxDQUFBOVksQ0FBQSxDQUFBNXZCLEdBQUEsRUFBQSxDQUFBLENBQUE0dkIsQ0FBQSxDQUFBNXZCLEdBQUEsQ0FBQThoQixLQUFBLENBQUFpZSxDQUFBLENBQUEsQ0FBQW5RLENBQUEsQ0FBQTlOLEtBQUEsQ0FBQThOLENBQUEsQ0FBQXRKLElBQUEsRUFBQSxDQUFBLENBQUFzSixDQUFBLENBQUE5TixLQUFBLENBQUE0bUIsTUFBQSxDQUFBLzlCLENBQUEsQ0FBQSxDQUFBaWxCLENBQUEsQ0FBQThZLE1BQUEsQ0FBQTlZLENBQUEsQ0FBQTV2QixHQUFBLEVBQUEsQ0FBQSxDQUFBNHZCLENBQUEsQ0FBQThZLE1BQUEsQ0FBQXBpQixJQUFBLENBQUF5WixDQUFBLENBQUEsQ0FBQW5RLENBQUEsQ0FBQTlOLEtBQUEsQ0FBQThOLENBQUEsQ0FBQXRKLElBQUEsRUFBQSxDQUFBLENBQUFzSixDQUFBLENBQUF0SixJQUFBLENBQUEsQ0FBQTNOLENBQUEsQ0FBQWdxQixPQUFBLENBQUFnSCxpQkFBQSxDQUFBckssQ0FBQSxDQUFBLENBQUEsU0FBQTVpQyxDQUFBLENBQUEwc0MsSUFBQSxHQUFBOUosQ0FBQSxDQUFBNEssT0FBQSxDQUFBMWdDLENBQUEsQ0FBQSsvQixJQUFBLEVBQUEvL0IsQ0FBQSxDQUFBKy9CLElBQUEsQ0FBQTNaLENBQUEsQ0FBQSxDQUFBMFAsQ0FBQSxDQUFBclUsT0FBQSxDQUFBemhCLENBQUEsQ0FBQSxDQUFBNEMsS0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBaWIsUUFBQSxDQUFBM3FCLENBQUEsQ0FBQTJxQixRQUFBLENBQUFMLE1BQUEsQ0FBQXRxQixDQUFBLENBQUFzcUIsTUFBQSxDQUFBd0QsUUFBQSxDQUFBNzNCLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUFnbUIsQ0FBQSxDQUFBZ3FCLE9BQUEsQ0FBQWhJLE1BQUEsQ0FBQSxNQUFBLENBQUEsTUFBQSxDQUFBLFNBQUFqK0IsQ0FBQSxDQUFBL0osQ0FBQSxDQUFBLENBQUEsR0FBQWk5QixDQUFBQSxDQUFBLENBQUFwbUIsQ0FBQSxDQUFBbVAsQ0FBQSxDQUFBLElBQUEsQ0FBQSxDQUFBMm1CLENBQUEsQ0FBQTVpQyxDQUFBLENBQUEwc0MsSUFBQSxDQUFBdnZDLENBQUEsQ0FBQSxTQUFBeWxDLENBQUEsQ0FBQUksQ0FBQSxDQUFBaGpDLENBQUEsQ0FBQXV1QyxTQUFBLEVBQUEsTUFBQSxDQUFBbEwsQ0FBQSxDQUFBLE9BQUFMLENBQUEsRUFBQSxTQUFBQSxDQUFBLENBQUEsS0FBQSxDQUFBLE1BQUEsQ0FBQS8wQixDQUFBLENBQUEsT0FBQSswQixDQUFBLEVBQUEsU0FBQUEsQ0FBQSxDQUFBLElBQUEsQ0FBQSxJQUFBLENBQUEwQyxDQUFBLENBQUEsT0FBQXozQixDQUFBLENBQUEsSUFBQSxDQUFBLElBQUEsQ0FBQWk0QixDQUFBLENBQUEsQ0FBQTdjLE9BQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQXBOLENBQUEsQ0FBQWdxQixPQUFBLENBQUFnSCxpQkFBQSxDQUFBbmdDLENBQUEsRUFBQW9tQixDQUFBLENBQUFsekIsQ0FBQSxDQUFBd3VDLFFBQUEsRUFBQTFoQyxDQUFBLENBQUEsUUFBQXUyQixDQUFBLENBQUEsYUFBQSxDQUFBLFlBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxFQUFBLENBQUEsQ0FBQTZDLENBQUEsQ0FBQTdDLENBQUEsQ0FBQSxDQUFBcDFCLENBQUEsQ0FBQWlsQixDQUFBLENBQUEvMUIsQ0FBQSxHQUFBMlAsQ0FBQSxDQUFBNEssR0FBQSxDQUFBd3VCLENBQUEsRUFBQUEsQ0FBQSxDQUFBN0MsQ0FBQSxDQUFBLENBQUFxQyxDQUFBLENBQUF4UyxDQUFBLENBQUFnVCxDQUFBLENBQUE3YyxPQUFBLENBQUEsQ0FBQSxDQUFBLENBQUF2YyxDQUFBLENBQUF5aEIsT0FBQSxDQUFBMlgsQ0FBQSxDQUFBLENBQUF4MkIsS0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBaWIsUUFBQSxDQUFBM3FCLENBQUEsQ0FBQTJxQixRQUFBLENBQUFMLE1BQUEsQ0FBQXRxQixDQUFBLENBQUFzcUIsTUFBQSxDQUFBd0QsUUFBQSxDQUFBNzNCLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUFnbUIsQ0FBQSxDQUFBZ3FCLE9BQUEsQ0FBQWhJLE1BQUEsQ0FBQSxTQUFBLENBQUEsTUFBQSxDQUFBLFNBQUFqK0IsQ0FBQSxDQUFBL0osQ0FBQSxDQUFBLENBQUEsUUFBQWk5QixDQUFBQSxDQUFBLEVBQUEsQ0FBQTkxQixDQUFBLENBQUF6SSxJQUFBLENBQUEsSUFBQSxFQUFBeUksQ0FBQSxDQUFBOUYsTUFBQSxHQUFBNHVDLENBQUEsQ0FBQUksQ0FBQSxFQUFBeDVCLENBQUEsRUFBQSxDQUFBLFNBQUFBLENBQUFBLENBQUEsRUFBQSxDQUFBb2UsQ0FBQSxDQUFBeFQsR0FBQSxDQUFBLENBQUFxUSxVQUFBLENBQUEsU0FBQSxDQUFBLEVBQUE5TCxDQUFBLENBQUE3ZSxDQUFBLENBQUEsQ0FBQTJTLE1BQUEsRUFBQSxDQUFBOVosQ0FBQSxFQUFBLENBQUEsSUFBQTJzQyxDQUFBQSxDQUFBLENBQUF6bEMsQ0FBQSxDQUFBNmxDLENBQUEsQ0FBQUssQ0FBQSxDQUFBcDFCLENBQUEsQ0FBQXkzQixDQUFBLENBQUFRLENBQUEsQ0FBQWxtQyxDQUFBLENBQUEwdUMsTUFBQSxDQUFBNzBDLElBQUEsQ0FBQStyQixLQUFBLENBQUEvckIsSUFBQSxDQUFBbTBDLElBQUEsQ0FBQWh1QyxDQUFBLENBQUEwdUMsTUFBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUFwSSxDQUFBLENBQUFKLENBQUEsQ0FBQWhiLENBQUEsQ0FBQWpQLENBQUEsQ0FBQSxJQUFBLENBQUEsQ0FBQThxQixDQUFBLENBQUEvbUMsQ0FBQSxDQUFBMHNDLElBQUEsQ0FBQTFGLENBQUEsQ0FBQSxTQUFBRCxDQUFBLENBQUE1bUMsQ0FBQSxDQUFBK3FCLENBQUEsQ0FBQXhTLElBQUEsR0FBQWhCLEdBQUEsQ0FBQSxZQUFBLENBQUEsUUFBQSxFQUFBb2tCLE1BQUEsRUFBQSxDQUFBM3NCLENBQUEsQ0FBQXRWLElBQUEsQ0FBQWl2QixJQUFBLENBQUFvQyxDQUFBLENBQUFpYixVQUFBLEdBQUFHLENBQUEsQ0FBQSxDQUFBajJCLENBQUEsQ0FBQXhXLElBQUEsQ0FBQWl2QixJQUFBLENBQUFvQyxDQUFBLENBQUFrYixXQUFBLEdBQUFGLENBQUEsQ0FBQSxDQUFBOW9DLENBQUEsQ0FBQSxFQUFBLENBQUEsSUFBQXdsQyxDQUFBLENBQUEsQ0FBQSxDQUFBc0QsQ0FBQSxDQUFBdEQsQ0FBQSxDQUFBQSxDQUFBLEVBQUEsRUFBQSxJQUFBUyxDQUFBLENBQUFsakMsQ0FBQSxDQUFBbUQsR0FBQSxDQUFBcy9CLENBQUEsQ0FBQXZ5QixDQUFBLENBQUFxMUIsQ0FBQSxDQUFBOUMsQ0FBQSxDQUFBLENBQUFzRCxDQUFBLENBQUEsQ0FBQSxFQUFBLENBQUEsQ0FBQS9vQyxDQUFBLENBQUEsQ0FBQSxDQUFBbXBDLENBQUEsQ0FBQW5wQyxDQUFBLENBQUFBLENBQUEsRUFBQSxFQUFBNmxDLENBQUEsQ0FBQTdpQyxDQUFBLENBQUF5cEIsSUFBQSxDQUFBenNCLENBQUEsQ0FBQWdTLENBQUEsQ0FBQWxCLENBQUEsQ0FBQTlRLENBQUEsQ0FBQSxDQUFBbXBDLENBQUEsQ0FBQSxDQUFBLEVBQUEsQ0FBQSxDQUFBcGIsQ0FBQSxDQUFBN3hCLEtBQUEsR0FBQTBxQixRQUFBLENBQUEsTUFBQSxFQUFBcEosSUFBQSxDQUFBLGFBQUEsRUFBQWpELEdBQUEsQ0FBQSxDQUFBOE4sUUFBQSxDQUFBLFVBQUEsQ0FBQXVDLFVBQUEsQ0FBQSxTQUFBLENBQUE2QixJQUFBLENBQUEsQ0FBQXpzQixDQUFBLENBQUFnUyxDQUFBLENBQUE3TCxHQUFBLENBQUEsQ0FBQXMvQixDQUFBLENBQUF2eUIsQ0FBQSxDQUFBLEVBQUEvSSxNQUFBLEdBQUF1cEIsUUFBQSxDQUFBLG9CQUFBLEVBQUFuWixHQUFBLENBQUEsQ0FBQThOLFFBQUEsQ0FBQSxVQUFBLENBQUF1SCxRQUFBLENBQUEsUUFBQSxDQUFBeEgsS0FBQSxDQUFBcFcsQ0FBQSxDQUFBdVgsTUFBQSxDQUFBclcsQ0FBQSxDQUFBdVosSUFBQSxDQUFBb1osQ0FBQSxFQUFBZ0UsQ0FBQSxDQUFBLzRCLENBQUEsQ0FBQWtCLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQTdMLEdBQUEsQ0FBQSsvQixDQUFBLEVBQUEyRCxDQUFBLENBQUF0QixDQUFBLENBQUFyMUIsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBZ1osT0FBQSxDQUFBMmQsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsRUFBQXpZLE9BQUEsQ0FBQSxDQUFBM0UsSUFBQSxDQUFBb1osQ0FBQSxFQUFBZ0UsQ0FBQSxDQUFBLENBQUEsQ0FBQS80QixDQUFBLENBQUFrQixDQUFBLENBQUEsQ0FBQTdMLEdBQUEsQ0FBQSsvQixDQUFBLEVBQUEyRCxDQUFBLENBQUEsQ0FBQSxDQUFBdEIsQ0FBQSxDQUFBcjFCLENBQUEsQ0FBQSxDQUFBZ1osT0FBQSxDQUFBMmQsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQWhuQyxDQUFBLENBQUEycUIsUUFBQSxFQUFBLEdBQUEsQ0FBQTNxQixDQUFBLENBQUFzcUIsTUFBQSxDQUFBNEksQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBalgsQ0FBQSxDQUFBZ3FCLE9BQUEsQ0FBQWhJLE1BQUEsQ0FBQSxNQUFBLENBQUEsUUFBQSxDQUFBLFNBQUFqK0IsQ0FBQSxDQUFBL0osQ0FBQSxDQUFBLENBQUEsR0FBQWk5QixDQUFBQSxDQUFBLENBQUEsU0FBQWx6QixDQUFBLENBQUEwc0MsSUFBQSxDQUFBendCLENBQUEsQ0FBQSxJQUFBLENBQUEsQ0FBQXZFLEdBQUEsQ0FBQSxTQUFBLENBQUF3YixDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsRUFBQTNFLE9BQUEsQ0FBQSxDQUFBbEYsT0FBQSxDQUFBNkosQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBeGpCLEtBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQWliLFFBQUEsQ0FBQTNxQixDQUFBLENBQUEycUIsUUFBQSxDQUFBTCxNQUFBLENBQUF0cUIsQ0FBQSxDQUFBc3FCLE1BQUEsQ0FBQXdELFFBQUEsQ0FBQTczQixDQUFBLENBQUEsRUFBQSxDQUFBLENBQUEsQ0FBQWdtQixDQUFBLENBQUFncUIsT0FBQSxDQUFBaEksTUFBQSxDQUFBLE1BQUEsQ0FBQSxNQUFBLENBQUEsU0FBQWorQixDQUFBLENBQUEvSixDQUFBLENBQUEsQ0FBQSxHQUFBaTlCLENBQUFBLENBQUEsQ0FBQWpYLENBQUEsQ0FBQSxJQUFBLENBQUEsQ0FBQW5QLENBQUEsQ0FBQTlNLENBQUEsQ0FBQTBzQyxJQUFBLENBQUE5SixDQUFBLENBQUEsU0FBQTkxQixDQUFBLENBQUEzUCxDQUFBLENBQUEsU0FBQTJQLENBQUEsQ0FBQWsyQixDQUFBLENBQUFoakMsQ0FBQSxDQUFBMnVDLElBQUEsRUFBQSxFQUFBLENBQUF0TCxDQUFBLENBQUEsWUFBQTNpQyxJQUFBLENBQUFzaUMsQ0FBQSxDQUFBLENBQUEvMEIsQ0FBQSxDQUFBLENBQUEsQ0FBQWpPLENBQUEsQ0FBQTR1QyxVQUFBLENBQUFsSixDQUFBLENBQUF6M0IsQ0FBQSxDQUFBLENBQUEsT0FBQSxDQUFBLFFBQUEsQ0FBQSxDQUFBLENBQUEsUUFBQSxDQUFBLE9BQUEsQ0FBQSxDQUFBaTRCLENBQUEsQ0FBQWxtQyxDQUFBLENBQUEycUIsUUFBQSxDQUFBLENBQUEsQ0FBQTJiLENBQUEsQ0FBQXJxQixDQUFBLENBQUFncUIsT0FBQSxDQUFBZ0gsaUJBQUEsQ0FBQS9aLENBQUEsQ0FBQSxDQUFBaEksQ0FBQSxDQUFBZ0ksQ0FBQSxDQUFBc2EsT0FBQSxFQUFBLENBQUF6RyxDQUFBLENBQUEsQ0FBQThGLElBQUEsQ0FBQTV3QixDQUFBLENBQUFqakIsTUFBQSxDQUFBLEVBQUEsQ0FBQWt5QixDQUFBLENBQUEsQ0FBQSxDQUFBOGIsQ0FBQSxDQUFBLENBQUE2RixJQUFBLENBQUE1d0IsQ0FBQSxDQUFBampCLE1BQUEsQ0FBQSxFQUFBLENBQUFreUIsQ0FBQSxDQUFBLENBQUEsQ0FBQS9xQixDQUFBLENBQUEsQ0FBQStxQixDQUFBLENBQUF3YSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQXhhLENBQUEsQ0FBQXdhLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUF2MkIsQ0FBQSxDQUFBK2pCLENBQUEsQ0FBQXhqQixLQUFBLEdBQUFwWSxNQUFBLENBQUErckMsQ0FBQSxHQUFBTCxDQUFBLENBQUFyYyxRQUFBLENBQUEwYyxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsRUFBQSxDQUFBLENBQUEsR0FBQSxDQUFBbGpDLENBQUEsQ0FBQWhELENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQTRwQyxDQUFBLENBQUE4RixJQUFBLENBQUFuSCxDQUFBLENBQUEsQ0FBQSxDQUFBLEVBQUExQyxDQUFBLENBQUFnRSxDQUFBLENBQUE2RixJQUFBLENBQUFuSCxDQUFBLENBQUEsQ0FBQSxDQUFBLEVBQUExQyxDQUFBLENBQUFnRSxDQUFBLENBQUE2RixJQUFBLENBQUFuSCxDQUFBLENBQUEsQ0FBQSxDQUFBLEVBQUEsQ0FBQSxDQUFBOUMsQ0FBQSxHQUFBMVAsQ0FBQSxDQUFBc2EsT0FBQSxDQUFBeEcsQ0FBQSxDQUFBNkYsSUFBQSxFQUFBdkcsQ0FBQSxFQUFBQSxDQUFBLENBQUE1dUIsR0FBQSxDQUFBdUUsQ0FBQSxDQUFBZ3FCLE9BQUEsQ0FBQTJHLFNBQUEsQ0FBQTVGLENBQUEsQ0FBQSxDQUFBLENBQUFBLENBQUEsQ0FBQTZGLElBQUEsQ0FBQTNoQixDQUFBLENBQUEsQ0FBQWdJLENBQUEsQ0FBQXhqQixLQUFBLENBQUEsU0FBQXpaLENBQUEsQ0FBQSxDQUFBcXdDLENBQUEsRUFBQUEsQ0FBQSxDQUFBL1gsT0FBQSxDQUFBdFMsQ0FBQSxDQUFBZ3FCLE9BQUEsQ0FBQTJHLFNBQUEsQ0FBQTdGLENBQUEsQ0FBQSxDQUFBYixDQUFBLENBQUFsbUMsQ0FBQSxDQUFBc3FCLE1BQUEsRUFBQWlFLE9BQUEsQ0FBQXRTLENBQUEsQ0FBQWdxQixPQUFBLENBQUEyRyxTQUFBLENBQUE1RixDQUFBLENBQUEsQ0FBQWQsQ0FBQSxDQUFBbG1DLENBQUEsQ0FBQXNxQixNQUFBLENBQUEsQ0FBQXIwQixDQUFBLEVBQUEsQ0FBQSxDQUFBLEVBQUFzNEIsT0FBQSxDQUFBd1ksQ0FBQSxDQUFBYixDQUFBLENBQUFsbUMsQ0FBQSxDQUFBc3FCLE1BQUEsRUFBQWlFLE9BQUEsQ0FBQXlZLENBQUEsQ0FBQWQsQ0FBQSxDQUFBbG1DLENBQUEsQ0FBQXNxQixNQUFBLEVBQUE1YSxLQUFBLENBQUF6WixDQUFBLENBQUEsQ0FBQWdtQixDQUFBLENBQUFncUIsT0FBQSxDQUFBOWdDLE9BQUEsQ0FBQSt0QixDQUFBLENBQUEvakIsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBOE0sQ0FBQSxDQUFBZ3FCLE9BQUEsQ0FBQWhJLE1BQUEsQ0FBQSxXQUFBLENBQUEsTUFBQSxDQUFBLFNBQUFqK0IsQ0FBQSxDQUFBL0osQ0FBQSxDQUFBLENBQUEsR0FBQWk5QixDQUFBQSxDQUFBLENBQUFqWCxDQUFBLENBQUEsSUFBQSxDQUFBLENBQUFuUCxDQUFBLENBQUEsQ0FBQTg4QixlQUFBLENBQUExVyxDQUFBLENBQUF4YixHQUFBLENBQUEsaUJBQUEsQ0FBQSxDQUFBLENBQUEsU0FBQTFYLENBQUEsQ0FBQTBzQyxJQUFBLEdBQUE1L0IsQ0FBQSxDQUFBdWMsT0FBQSxDQUFBLENBQUEsRUFBQXBOLENBQUEsQ0FBQWdxQixPQUFBLENBQUE2RyxTQUFBLENBQUE1WixDQUFBLENBQUEsQ0FBQUEsQ0FBQSxDQUFBeGIsR0FBQSxDQUFBLENBQUFtM0IsZUFBQSxDQUFBLE1BQUEsQ0FBQWpGLGVBQUEsQ0FBQTVwQyxDQUFBLENBQUE4dUMsS0FBQSxFQUFBLFNBQUEsQ0FBQSxFQUFBdmdCLE9BQUEsQ0FBQXpoQixDQUFBLENBQUEsQ0FBQTRDLEtBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQWliLFFBQUEsQ0FBQTNxQixDQUFBLENBQUEycUIsUUFBQSxDQUFBTCxNQUFBLENBQUF0cUIsQ0FBQSxDQUFBc3FCLE1BQUEsQ0FBQXdELFFBQUEsQ0FBQTczQixDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBZ21CLENBQUEsQ0FBQWdxQixPQUFBLENBQUFoSSxNQUFBLENBQUEsTUFBQSxDQUFBLFNBQUFqK0IsQ0FBQSxDQUFBL0osQ0FBQSxDQUFBLENBQUEsR0FBQWk5QixDQUFBQSxDQUFBLENBQUFwbUIsQ0FBQSxDQUFBODFCLENBQUEsQ0FBQXpsQyxDQUFBLENBQUE4ZSxDQUFBLENBQUEsSUFBQSxDQUFBLENBQUErbUIsQ0FBQSxDQUFBLENBQUEsVUFBQSxDQUFBLENBQUFLLENBQUEsQ0FBQSxDQUFBLGdCQUFBLENBQUEsbUJBQUEsQ0FBQSxZQUFBLENBQUEsZUFBQSxDQUFBLENBQUFwMUIsQ0FBQSxDQUFBLENBQUEsaUJBQUEsQ0FBQSxrQkFBQSxDQUFBLGFBQUEsQ0FBQSxjQUFBLENBQUEsQ0FBQXkzQixDQUFBLENBQUExbEMsQ0FBQSxDQUFBMHNDLElBQUEsQ0FBQXhHLENBQUEsQ0FBQSxXQUFBUixDQUFBLENBQUFZLENBQUEsQ0FBQXRtQyxDQUFBLENBQUErWCxLQUFBLEVBQUEsTUFBQSxDQUFBbVQsQ0FBQSxDQUFBbHJCLENBQUEsQ0FBQSt1QyxNQUFBLEVBQUEsQ0FBQSxRQUFBLENBQUEsUUFBQSxDQUFBLENBQUFoSSxDQUFBLENBQUE1cEMsQ0FBQSxDQUFBdWEsR0FBQSxDQUFBLFVBQUEsQ0FBQSxDQUFBc3ZCLENBQUEsQ0FBQTdwQyxDQUFBLENBQUFxb0IsUUFBQSxFQUFBLENBQUFybEIsQ0FBQSxDQUFBOGIsQ0FBQSxDQUFBZ3FCLE9BQUEsQ0FBQTBHLGdCQUFBLENBQUF4dkMsQ0FBQSxDQUFBLENBQUFnUyxDQUFBLENBQUFuUCxDQUFBLENBQUE4cEMsSUFBQSxFQUFBM3BDLENBQUEsQ0FBQWtRLENBQUEsQ0FBQXJRLENBQUEsQ0FBQXN1QixFQUFBLEVBQUFyUyxDQUFBLENBQUFncUIsT0FBQSxDQUFBMEcsZ0JBQUEsQ0FBQXh2QyxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUE4ZSxDQUFBLENBQUFncUIsT0FBQSxDQUFBZ0gsaUJBQUEsQ0FBQTl2QyxDQUFBLEVBQUEsU0FBQXVvQyxDQUFBLEdBQUE5QyxDQUFBLENBQUF6ekIsQ0FBQSxDQUFBQSxDQUFBLENBQUFrQixDQUFBLENBQUFBLENBQUEsQ0FBQXV5QixDQUFBLENBQUEsQ0FBQTkxQixDQUFBLENBQUEsQ0FBQWc5QixJQUFBLENBQUEsQ0FBQTVDLENBQUEsQ0FBQS8zQixDQUFBLENBQUF1WCxNQUFBLENBQUF2bUIsQ0FBQSxDQUFBdW1CLE1BQUEsQ0FBQTRnQixDQUFBLENBQUFuNEIsQ0FBQSxDQUFBb1csS0FBQSxDQUFBcGxCLENBQUEsQ0FBQW9sQixLQUFBLENBQUEsQ0FBQStJLEVBQUEsQ0FBQSxDQUFBNFksQ0FBQSxDQUFBNzJCLENBQUEsQ0FBQXFXLE1BQUEsQ0FBQXZtQixDQUFBLENBQUF1bUIsTUFBQSxDQUFBNGdCLENBQUEsQ0FBQWozQixDQUFBLENBQUFrVixLQUFBLENBQUFwbEIsQ0FBQSxDQUFBb2xCLEtBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxRQUFBK2dCLENBQUEsRUFBQSxTQUFBQSxDQUFBLElBQUF4NUIsQ0FBQSxDQUFBZzlCLElBQUEsQ0FBQTVDLENBQUEsR0FBQXA2QixDQUFBLENBQUF3aEIsRUFBQSxDQUFBNFksQ0FBQSxHQUFBLzNCLENBQUEsQ0FBQThNLENBQUEsQ0FBQWdxQixPQUFBLENBQUFxSCxhQUFBLENBQUFud0MsQ0FBQSxDQUFBa21DLENBQUEsQ0FBQXYyQixDQUFBLENBQUFnOUIsSUFBQSxDQUFBNUMsQ0FBQSxDQUFBLzNCLENBQUEsQ0FBQSxDQUFBa0IsQ0FBQSxDQUFBNEwsQ0FBQSxDQUFBZ3FCLE9BQUEsQ0FBQXFILGFBQUEsQ0FBQW53QyxDQUFBLENBQUFrbUMsQ0FBQSxDQUFBdjJCLENBQUEsQ0FBQXdoQixFQUFBLENBQUE0WSxDQUFBLENBQUE3MkIsQ0FBQSxDQUFBLEVBQUF2RCxDQUFBLENBQUFnOUIsSUFBQSxDQUFBeEMsQ0FBQSxHQUFBeDZCLENBQUEsQ0FBQXdoQixFQUFBLENBQUFnWixDQUFBLEdBQUFuNEIsQ0FBQSxDQUFBOE0sQ0FBQSxDQUFBZ3FCLE9BQUEsQ0FBQXFILGFBQUEsQ0FBQW53QyxDQUFBLENBQUE4USxDQUFBLENBQUFuQixDQUFBLENBQUFnOUIsSUFBQSxDQUFBeEMsQ0FBQSxDQUFBbjRCLENBQUEsQ0FBQSxDQUFBa0IsQ0FBQSxDQUFBNEwsQ0FBQSxDQUFBZ3FCLE9BQUEsQ0FBQXFILGFBQUEsQ0FBQW53QyxDQUFBLENBQUE4USxDQUFBLENBQUFuQixDQUFBLENBQUF3aEIsRUFBQSxDQUFBZ1osQ0FBQSxDQUFBajNCLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLFlBQUFpMkIsQ0FBQSxFQUFBLFNBQUFBLENBQUEsR0FBQXg1QixDQUFBLENBQUFnOUIsSUFBQSxDQUFBNUMsQ0FBQSxHQUFBcDZCLENBQUEsQ0FBQXdoQixFQUFBLENBQUE0WSxDQUFBLEdBQUEvM0IsQ0FBQSxDQUFBOE0sQ0FBQSxDQUFBZ3FCLE9BQUEsQ0FBQXFILGFBQUEsQ0FBQW53QyxDQUFBLENBQUE2bEMsQ0FBQSxDQUFBbDJCLENBQUEsQ0FBQWc5QixJQUFBLENBQUE1QyxDQUFBLENBQUEvM0IsQ0FBQSxDQUFBLENBQUFrQixDQUFBLENBQUE0TCxDQUFBLENBQUFncUIsT0FBQSxDQUFBcUgsYUFBQSxDQUFBbndDLENBQUEsQ0FBQTZsQyxDQUFBLENBQUFsMkIsQ0FBQSxDQUFBd2hCLEVBQUEsQ0FBQTRZLENBQUEsQ0FBQTcyQixDQUFBLENBQUEsQ0FBQSxDQUFBNmEsQ0FBQSxHQUFBZ0ksQ0FBQSxDQUFBalgsQ0FBQSxDQUFBZ3FCLE9BQUEsQ0FBQStHLFdBQUEsQ0FBQTloQixDQUFBLENBQUEvcUIsQ0FBQSxDQUFBLENBQUFnUCxDQUFBLENBQUE3TCxHQUFBLENBQUEsQ0FBQW5ELENBQUEsQ0FBQWltQyxXQUFBLENBQUFqM0IsQ0FBQSxDQUFBaTNCLFdBQUEsRUFBQWxULENBQUEsQ0FBQWdVLENBQUEsQ0FBQUYsQ0FBQSxDQUFBMWpDLEdBQUEsQ0FBQTZMLENBQUEsQ0FBQXlhLElBQUEsQ0FBQSxDQUFBenBCLENBQUEsQ0FBQWdtQyxVQUFBLENBQUFoM0IsQ0FBQSxDQUFBZzNCLFVBQUEsRUFBQWpULENBQUEsQ0FBQW9VLENBQUEsQ0FBQU4sQ0FBQSxDQUFBcGQsSUFBQSxDQUFBdlosQ0FBQSxDQUFBL00sR0FBQSxDQUFBLENBQUFuRCxDQUFBLENBQUFpbUMsV0FBQSxDQUFBLzFCLENBQUEsQ0FBQSsxQixXQUFBLEVBQUFsVCxDQUFBLENBQUFnVSxDQUFBLENBQUFGLENBQUEsQ0FBQTFqQyxHQUFBLENBQUErTSxDQUFBLENBQUF1WixJQUFBLENBQUEsQ0FBQXpwQixDQUFBLENBQUFnbUMsVUFBQSxDQUFBOTFCLENBQUEsQ0FBQTgxQixVQUFBLEVBQUFqVCxDQUFBLENBQUFvVSxDQUFBLENBQUFOLENBQUEsQ0FBQXBkLElBQUEsQ0FBQSxDQUFBenNCLENBQUEsQ0FBQXVhLEdBQUEsQ0FBQXZJLENBQUEsQ0FBQSxDQUFBLENBQUEsWUFBQW0zQixDQUFBLEVBQUEsU0FBQUEsQ0FBQSxJQUFBakQsQ0FBQSxDQUFBQSxDQUFBLENBQUE1dUMsTUFBQSxDQUFBLENBQUEsV0FBQSxDQUFBLGNBQUEsQ0FBQSxFQUFBQSxNQUFBLENBQUF1dUMsQ0FBQSxDQUFBLENBQUEvMEIsQ0FBQSxDQUFBQSxDQUFBLENBQUF4WixNQUFBLENBQUEsQ0FBQSxZQUFBLENBQUEsYUFBQSxDQUFBLENBQUEsQ0FBQTBJLENBQUEsQ0FBQTRHLElBQUEsQ0FBQSxVQUFBLEVBQUFoTSxJQUFBLENBQUEsVUFBQSxDQUFBLEdBQUE5QixDQUFBQSxDQUFBLENBQUFnbUIsQ0FBQSxDQUFBLElBQUEsQ0FBQSxDQUFBaVgsQ0FBQSxDQUFBalgsQ0FBQSxDQUFBZ3FCLE9BQUEsQ0FBQTBHLGdCQUFBLENBQUExMkMsQ0FBQSxDQUFBLENBQUEyc0MsQ0FBQSxDQUFBLENBQUFsYyxNQUFBLENBQUF3TSxDQUFBLENBQUF4TSxNQUFBLENBQUE1WixDQUFBLENBQUFnOUIsSUFBQSxDQUFBNUMsQ0FBQSxDQUFBM2hCLEtBQUEsQ0FBQTJOLENBQUEsQ0FBQTNOLEtBQUEsQ0FBQXpZLENBQUEsQ0FBQWc5QixJQUFBLENBQUF4QyxDQUFBLENBQUFsQixXQUFBLENBQUFsVCxDQUFBLENBQUFrVCxXQUFBLENBQUF0NUIsQ0FBQSxDQUFBZzlCLElBQUEsQ0FBQTVDLENBQUEsQ0FBQWYsVUFBQSxDQUFBalQsQ0FBQSxDQUFBaVQsVUFBQSxDQUFBcjVCLENBQUEsQ0FBQWc5QixJQUFBLENBQUF4QyxDQUFBLENBQUEsQ0FBQW5xQyxDQUFBLENBQUEsQ0FBQXVwQixNQUFBLENBQUF3TSxDQUFBLENBQUF4TSxNQUFBLENBQUE1WixDQUFBLENBQUF3aEIsRUFBQSxDQUFBNFksQ0FBQSxDQUFBM2hCLEtBQUEsQ0FBQTJOLENBQUEsQ0FBQTNOLEtBQUEsQ0FBQXpZLENBQUEsQ0FBQXdoQixFQUFBLENBQUFnWixDQUFBLENBQUFsQixXQUFBLENBQUFsVCxDQUFBLENBQUF4TSxNQUFBLENBQUE1WixDQUFBLENBQUF3aEIsRUFBQSxDQUFBNFksQ0FBQSxDQUFBZixVQUFBLENBQUFqVCxDQUFBLENBQUEzTixLQUFBLENBQUF6WSxDQUFBLENBQUF3aEIsRUFBQSxDQUFBZ1osQ0FBQSxDQUFBLENBQUF4NkIsQ0FBQSxDQUFBZzlCLElBQUEsQ0FBQTVDLENBQUEsR0FBQXA2QixDQUFBLENBQUF3aEIsRUFBQSxDQUFBNFksQ0FBQSxHQUFBdEUsQ0FBQSxDQUFBM21CLENBQUEsQ0FBQWdxQixPQUFBLENBQUFxSCxhQUFBLENBQUFyM0MsQ0FBQSxDQUFBb3RDLENBQUEsQ0FBQXYyQixDQUFBLENBQUFnOUIsSUFBQSxDQUFBNUMsQ0FBQSxDQUFBdEUsQ0FBQSxDQUFBLENBQUF6bEMsQ0FBQSxDQUFBOGUsQ0FBQSxDQUFBZ3FCLE9BQUEsQ0FBQXFILGFBQUEsQ0FBQXIzQyxDQUFBLENBQUFvdEMsQ0FBQSxDQUFBdjJCLENBQUEsQ0FBQXdoQixFQUFBLENBQUE0WSxDQUFBLENBQUEvcEMsQ0FBQSxDQUFBLEVBQUEyUCxDQUFBLENBQUFnOUIsSUFBQSxDQUFBeEMsQ0FBQSxHQUFBeDZCLENBQUEsQ0FBQXdoQixFQUFBLENBQUFnWixDQUFBLEdBQUExRSxDQUFBLENBQUEzbUIsQ0FBQSxDQUFBZ3FCLE9BQUEsQ0FBQXFILGFBQUEsQ0FBQXIzQyxDQUFBLENBQUFnWSxDQUFBLENBQUFuQixDQUFBLENBQUFnOUIsSUFBQSxDQUFBeEMsQ0FBQSxDQUFBMUUsQ0FBQSxDQUFBLENBQUF6bEMsQ0FBQSxDQUFBOGUsQ0FBQSxDQUFBZ3FCLE9BQUEsQ0FBQXFILGFBQUEsQ0FBQXIzQyxDQUFBLENBQUFnWSxDQUFBLENBQUFuQixDQUFBLENBQUF3aEIsRUFBQSxDQUFBZ1osQ0FBQSxDQUFBbnFDLENBQUEsQ0FBQSxDQUFBLENBQUErb0MsQ0FBQSxFQUFBanFCLENBQUEsQ0FBQWdxQixPQUFBLENBQUE2RyxTQUFBLENBQUE3MkMsQ0FBQSxDQUFBLENBQUFBLENBQUEsQ0FBQXloQixHQUFBLENBQUFrckIsQ0FBQSxDQUFBLENBQUEzc0MsQ0FBQSxDQUFBczRCLE9BQUEsQ0FBQXB4QixDQUFBLENBQUE2QyxDQUFBLENBQUEycUIsUUFBQSxDQUFBM3FCLENBQUEsQ0FBQXNxQixNQUFBLENBQUEsVUFBQSxDQUFBNGIsQ0FBQSxFQUFBanFCLENBQUEsQ0FBQWdxQixPQUFBLENBQUE4RyxZQUFBLENBQUE5MkMsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQWtILENBQUEsQ0FBQW94QixPQUFBLENBQUFsZSxDQUFBLENBQUEsQ0FBQVgsS0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBaWIsUUFBQSxDQUFBM3FCLENBQUEsQ0FBQTJxQixRQUFBLENBQUFMLE1BQUEsQ0FBQXRxQixDQUFBLENBQUFzcUIsTUFBQSxDQUFBd0QsUUFBQSxDQUFBLG1CQUFBLENBQUEsR0FBQTl0QixDQUFBQSxDQUFBLENBQUE3QyxDQUFBLENBQUEyK0IsTUFBQSxFQUFBLENBQUEsSUFBQXpyQixDQUFBLENBQUFnWixPQUFBLEVBQUFsc0IsQ0FBQSxDQUFBdWEsR0FBQSxDQUFBLFNBQUEsQ0FBQXZJLENBQUEsQ0FBQWthLE9BQUEsQ0FBQSxDQUFBNmMsQ0FBQSxHQUFBL29DLENBQUEsQ0FBQXVhLEdBQUEsQ0FBQSxVQUFBLENBQUEsV0FBQXF2QixDQUFBLENBQUEsVUFBQSxDQUFBQSxDQUFBLEVBQUFqTCxNQUFBLENBQUE5N0IsQ0FBQSxFQUFBaWMsQ0FBQSxDQUFBZ3FCLE9BQUEsQ0FBQTZHLFNBQUEsQ0FBQTN2QyxDQUFBLENBQUEsQ0FBQSxDQUFBbEgsQ0FBQSxFQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQWdtQixDQUFBLENBQUFncUIsT0FBQSxDQUFBaEksTUFBQSxDQUFBLE9BQUEsQ0FBQSxTQUFBaitCLENBQUEsQ0FBQS9KLENBQUEsQ0FBQSxDQUFBLEdBQUFpOUIsQ0FBQUEsQ0FBQSxDQUFBalgsQ0FBQSxDQUFBLElBQUEsQ0FBQSxDQUFBblAsQ0FBQSxDQUFBOU0sQ0FBQSxDQUFBMHNDLElBQUEsQ0FBQTlKLENBQUEsQ0FBQWpjLFFBQUEsQ0FBQTNtQixDQUFBLENBQUF5cUIsT0FBQSxDQUFBLEVBQUEsQ0FBQSxHQUFBLElBQUE5RCxRQUFBLENBQUEzbUIsQ0FBQSxDQUFBeXFCLE9BQUEsQ0FBQSxFQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsV0FBQTNkLENBQUEsQ0FBQSxDQUFBLENBQUEsR0FBQSxDQUFBLENBQUEzUCxDQUFBLENBQUE4ZSxDQUFBLENBQUFqakIsTUFBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUE4d0MsSUFBQSxDQUFBN3RCLENBQUEsQ0FBQWdxQixPQUFBLENBQUEwRyxnQkFBQSxDQUFBelosQ0FBQSxDQUFBLENBQUE1RSxFQUFBLENBQUFyUyxDQUFBLENBQUFncUIsT0FBQSxDQUFBMEcsZ0JBQUEsQ0FBQXpaLENBQUEsQ0FBQTBQLENBQUEsQ0FBQTVpQyxDQUFBLENBQUF1dUMsU0FBQSxFQUFBLE1BQUEsQ0FBQSxDQUFBUSxNQUFBLENBQUEvdUMsQ0FBQSxDQUFBK3VDLE1BQUEsRUFBQSxDQUFBLFFBQUEsQ0FBQSxRQUFBLENBQUEsQ0FBQSxDQUFBL3VDLENBQUEsQ0FBQSxDQUFBQSxDQUFBLENBQUFndkMsSUFBQSxHQUFBN3hDLENBQUEsQ0FBQTJzQyxJQUFBLENBQUF6Z0IsT0FBQSxDQUFBLENBQUEsQ0FBQWxzQixDQUFBLENBQUFteEIsRUFBQSxDQUFBakYsT0FBQSxDQUFBLENBQUEsRUFBQXBOLENBQUEsQ0FBQWdxQixPQUFBLENBQUFELE1BQUEsQ0FBQTJJLElBQUEsQ0FBQW42QyxJQUFBLENBQUEsSUFBQSxDQUFBMkksQ0FBQSxDQUFBbEgsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUFnbUIsQ0FBQSxDQUFBZ3FCLE9BQUEsQ0FBQWhJLE1BQUEsQ0FBQSxNQUFBLENBQUEsTUFBQSxDQUFBLFNBQUFqK0IsQ0FBQSxDQUFBL0osQ0FBQSxDQUFBLENBQUEsR0FBQWk5QixDQUFBQSxDQUFBLENBQUFqWCxDQUFBLENBQUFqakIsTUFBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLEVBQUEsQ0FBQWdILENBQUEsQ0FBQSxDQUFBZ3ZDLElBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQXZrQixPQUFBLENBQUE5RCxRQUFBLENBQUEzbUIsQ0FBQSxDQUFBeXFCLE9BQUEsQ0FBQSxFQUFBLENBQUEsRUFBQSxHQUFBLENBQUEsQ0FBQSxDQUFBeE8sQ0FBQSxDQUFBZ3FCLE9BQUEsQ0FBQUQsTUFBQSxDQUFBanVCLEtBQUEsQ0FBQXZqQixJQUFBLENBQUEsSUFBQSxDQUFBMCtCLENBQUEsQ0FBQWo5QixDQUFBLEVBQUEsQ0FBQSxDQUFBLENBQUFnbUIsQ0FBQSxDQUFBZ3FCLE9BQUEsQ0FBQWhJLE1BQUEsQ0FBQSxTQUFBLENBQUEsTUFBQSxDQUFBLFNBQUFqK0IsQ0FBQSxDQUFBL0osQ0FBQSxDQUFBLENBQUEsR0FBQWk5QixDQUFBQSxDQUFBLENBQUFqWCxDQUFBLENBQUEsSUFBQSxDQUFBLENBQUFuUCxDQUFBLENBQUE5TSxDQUFBLENBQUEwc0MsSUFBQSxDQUFBOUosQ0FBQSxDQUFBLFNBQUE5MUIsQ0FBQSxDQUFBM1AsQ0FBQSxDQUFBLFNBQUEyUCxDQUFBLENBQUFrMkIsQ0FBQSxDQUFBSixDQUFBLEVBQUF6bEMsQ0FBQSxDQUFBa21DLENBQUEsQ0FBQSxHQUFBcmpDLENBQUEsQ0FBQXl1QyxLQUFBLEVBQUEsQ0FBQSxHQUFBekwsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQS8wQixDQUFBLENBQUFqTyxDQUFBLENBQUEycUIsUUFBQSxDQUFBMFksQ0FBQSxDQUFBcUMsQ0FBQSxDQUFBLENBQUEsQ0FBQVEsQ0FBQSxDQUFBLENBQUEsQ0FBQUksQ0FBQSxDQUFBcFQsQ0FBQSxDQUFBeGpCLEtBQUEsR0FBQXBZLE1BQUEsQ0FBQSxJQUFBLENBQUFzckMsQ0FBQSxFQUFBLENBQUExUCxDQUFBLENBQUF0bUIsRUFBQSxDQUFBLFVBQUEsQ0FBQSxJQUFBc21CLENBQUEsQ0FBQXhiLEdBQUEsQ0FBQSxTQUFBLENBQUEsQ0FBQSxFQUFBZ0IsSUFBQSxHQUFBZ3RCLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQXJDLENBQUEsQ0FBQTZDLENBQUEsQ0FBQUEsQ0FBQSxFQUFBLEVBQUFoVCxDQUFBLENBQUEzRSxPQUFBLENBQUEsQ0FBQWxGLE9BQUEsQ0FBQXFjLENBQUEsQ0FBQSxDQUFBejNCLENBQUEsQ0FBQWpPLENBQUEsQ0FBQXNxQixNQUFBLEVBQUFvYixDQUFBLENBQUEsRUFBQUEsQ0FBQSxDQUFBLENBQUF4UyxDQUFBLENBQUEzRSxPQUFBLENBQUEsQ0FBQWxGLE9BQUEsQ0FBQXFjLENBQUEsQ0FBQSxDQUFBejNCLENBQUEsQ0FBQWpPLENBQUEsQ0FBQXNxQixNQUFBLEVBQUE0SSxDQUFBLENBQUF4akIsS0FBQSxDQUFBelosQ0FBQSxDQUFBLENBQUFnbUIsQ0FBQSxDQUFBZ3FCLE9BQUEsQ0FBQTlnQyxPQUFBLENBQUErdEIsQ0FBQSxDQUFBb1QsQ0FBQSxDQUFBakQsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBcG5CLENBQUEsQ0FBQWdxQixPQUFBLENBQUFoSSxNQUFBLENBQUEsT0FBQSxDQUFBLFNBQUFqK0IsQ0FBQSxDQUFBL0osQ0FBQSxDQUFBLENBQUEsR0FBQWk5QixDQUFBQSxDQUFBLENBQUEsQ0FBQSxDQUFBcG1CLENBQUEsQ0FBQW1QLENBQUEsQ0FBQSxJQUFBLENBQUEsQ0FBQTJtQixDQUFBLENBQUE1aUMsQ0FBQSxDQUFBdXVDLFNBQUEsRUFBQSxNQUFBLENBQUFweEMsQ0FBQSxDQUFBNkMsQ0FBQSxDQUFBd3VDLFFBQUEsRUFBQSxFQUFBLENBQUF4TCxDQUFBLENBQUFoakMsQ0FBQSxDQUFBeXVDLEtBQUEsRUFBQSxDQUFBLENBQUFwTCxDQUFBLENBQUEsRUFBQUwsQ0FBQSxDQUFBLENBQUEsQ0FBQS8wQixDQUFBLENBQUFwVSxJQUFBLENBQUErckIsS0FBQSxDQUFBNWxCLENBQUEsQ0FBQTJxQixRQUFBLENBQUEwWSxDQUFBLENBQUEsQ0FBQXFDLENBQUEsQ0FBQSxPQUFBOUMsQ0FBQSxFQUFBLFNBQUFBLENBQUEsQ0FBQSxLQUFBLENBQUEsTUFBQSxDQUFBc0QsQ0FBQSxDQUFBLE9BQUF0RCxDQUFBLEVBQUEsU0FBQUEsQ0FBQSxDQUFBMEQsQ0FBQSxDQUFBLEVBQUEsQ0FBQXBiLENBQUEsQ0FBQSxFQUFBLENBQUE2YixDQUFBLENBQUEsRUFBQSxDQUFBQyxDQUFBLENBQUFsNkIsQ0FBQSxDQUFBNEMsS0FBQSxHQUFBcFksTUFBQSxDQUFBLElBQUEya0IsQ0FBQSxDQUFBZ3FCLE9BQUEsQ0FBQWdILGlCQUFBLENBQUFuZ0MsQ0FBQSxFQUFBdzVCLENBQUEsQ0FBQVosQ0FBQSxDQUFBLENBQUEsQ0FBQVEsQ0FBQSxDQUFBLElBQUEsQ0FBQSxJQUFBLEVBQUEvb0MsQ0FBQSxDQUFBK3RCLENBQUEsQ0FBQXdhLENBQUEsQ0FBQSxDQUFBLENBQUFRLENBQUEsQ0FBQSxJQUFBLENBQUEsSUFBQSxFQUFBLEVBQUEvb0MsQ0FBQSxDQUFBNHBDLENBQUEsQ0FBQXJCLENBQUEsQ0FBQSxDQUFBLENBQUFRLENBQUEsQ0FBQSxJQUFBLENBQUEsSUFBQSxFQUFBLEVBQUEvb0MsQ0FBQSxDQUFBMlAsQ0FBQSxDQUFBeWhCLE9BQUEsQ0FBQStYLENBQUEsQ0FBQXI0QixDQUFBLENBQUFqTyxDQUFBLENBQUFzcUIsTUFBQSxDQUFBLENBQUEwWSxDQUFBLENBQUE5UCxDQUFBLENBQUFBLENBQUEsRUFBQSxFQUFBcG1CLENBQUEsQ0FBQXloQixPQUFBLENBQUFyRCxDQUFBLENBQUFqZCxDQUFBLENBQUFqTyxDQUFBLENBQUFzcUIsTUFBQSxFQUFBaUUsT0FBQSxDQUFBd1ksQ0FBQSxDQUFBOTRCLENBQUEsQ0FBQWpPLENBQUEsQ0FBQXNxQixNQUFBLEVBQUEsQ0FBQXhkLENBQUEsQ0FBQXloQixPQUFBLENBQUFyRCxDQUFBLENBQUFqZCxDQUFBLENBQUFqTyxDQUFBLENBQUFzcUIsTUFBQSxFQUFBaUUsT0FBQSxDQUFBK1gsQ0FBQSxDQUFBcjRCLENBQUEsQ0FBQSxDQUFBLENBQUFqTyxDQUFBLENBQUFzcUIsTUFBQSxFQUFBNWEsS0FBQSxDQUFBelosQ0FBQSxFQUFBZ21CLENBQUEsQ0FBQWdxQixPQUFBLENBQUE5Z0MsT0FBQSxDQUFBMkgsQ0FBQSxDQUFBazZCLENBQUEsQ0FBQTNELENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQXBuQixDQUFBLENBQUFncUIsT0FBQSxDQUFBaEksTUFBQSxDQUFBLE9BQUEsQ0FBQSxNQUFBLENBQUEsU0FBQWorQixDQUFBLENBQUEvSixDQUFBLENBQUEsQ0FBQSxHQUFBaTlCLENBQUFBLENBQUEsQ0FBQXBtQixDQUFBLENBQUE4MUIsQ0FBQSxDQUFBM21CLENBQUEsQ0FBQSxJQUFBLENBQUEsQ0FBQTllLENBQUEsQ0FBQSxDQUFBa3hDLEVBQUEsQ0FBQSxDQUFBLFFBQUEsQ0FBQSxLQUFBLENBQUEsQ0FBQUMsSUFBQSxDQUFBLENBQUEsS0FBQSxDQUFBLFFBQUEsQ0FBQSxDQUFBMWtCLElBQUEsQ0FBQSxDQUFBLE9BQUEsQ0FBQSxNQUFBLENBQUEsQ0FBQXhFLEtBQUEsQ0FBQSxDQUFBLE1BQUEsQ0FBQSxPQUFBLENBQUEsQ0FBQSxDQUFBNGQsQ0FBQSxDQUFBaGpDLENBQUEsQ0FBQTBzQyxJQUFBLENBQUFySixDQUFBLENBQUFyakMsQ0FBQSxDQUFBdXVDLFNBQUEsRUFBQSxNQUFBLENBQUF0Z0MsQ0FBQSxDQUFBLE9BQUFvMUIsQ0FBQSxFQUFBLFNBQUFBLENBQUEsQ0FBQSxLQUFBLENBQUEsTUFBQSxDQUFBcUMsQ0FBQSxDQUFBLE9BQUFyQyxDQUFBLEVBQUEsU0FBQUEsQ0FBQSxDQUFBNkMsQ0FBQSxDQUFBbG1DLENBQUEsQ0FBQXd1QyxRQUFBLEVBQUE1TCxDQUFBLENBQUEsUUFBQTMwQixDQUFBLENBQUEsYUFBQSxDQUFBLFlBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUFxNEIsQ0FBQSxDQUFBLEVBQUEsQ0FBQXJxQixDQUFBLENBQUFncUIsT0FBQSxDQUFBZ0gsaUJBQUEsQ0FBQXJLLENBQUEsRUFBQTFQLENBQUEsQ0FBQTBQLENBQUEsQ0FBQTRLLE9BQUEsRUFBQSxDQUFBMWdDLENBQUEsQ0FBQTgxQixDQUFBLENBQUFwZCxRQUFBLEdBQUF2WCxDQUFBLENBQUEsQ0FBQXE0QixDQUFBLENBQUFyNEIsQ0FBQSxDQUFBLENBQUEsQ0FBQXkzQixDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxFQUFBUSxDQUFBLENBQUFwNUIsQ0FBQSxDQUFBdzVCLENBQUEsQ0FBQXVHLElBQUEsQ0FBQWpLLENBQUEsQ0FBQTRLLE9BQUEsRUFBQSxDQUFBbEgsQ0FBQSxDQUFBdUcsSUFBQSxDQUFBMXZDLENBQUEsQ0FBQWttQyxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsRUFBQWlELENBQUEsQ0FBQXVHLElBQUEsQ0FBQTF2QyxDQUFBLENBQUFrbUMsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxTQUFBTCxDQUFBLEdBQUFKLENBQUEsQ0FBQTRLLE9BQUEsQ0FBQWxILENBQUEsQ0FBQXVHLElBQUEsRUFBQWpLLENBQUEsQ0FBQWxyQixHQUFBLENBQUF6SixDQUFBLENBQUFxNEIsQ0FBQSxDQUFBcjRCLENBQUEsQ0FBQSxDQUFBLENBQUFxNEIsQ0FBQSxDQUFBdUcsSUFBQSxDQUFBM1osQ0FBQSxDQUFBb1QsQ0FBQSxDQUFBcjRCLENBQUEsQ0FBQSxDQUFBbkIsQ0FBQSxDQUFBLENBQUE4MUIsQ0FBQSxDQUFBclUsT0FBQSxDQUFBK1gsQ0FBQSxDQUFBLENBQUE1MkIsS0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBaWIsUUFBQSxDQUFBM3FCLENBQUEsQ0FBQTJxQixRQUFBLENBQUFMLE1BQUEsQ0FBQXRxQixDQUFBLENBQUFzcUIsTUFBQSxDQUFBd0QsUUFBQSxDQUFBNzNCLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsR0FBQTh3QyxDQUFBQSxDQUFBLENBQUE5cUIsQ0FBQSxDQUFBZ3dCLFlBQUEsR0FBQSxDQUFBLENBQUEsR0FBQWxGLENBQUEsQ0FBQTlxQixDQUFBLENBQUFncUIsT0FBQSxDQUFBaEksTUFBQSxDQUFBLFVBQUEsQ0FBQSxTQUFBaitCLENBQUEsQ0FBQS9KLENBQUEsQ0FBQSxDQUFBZ21CLENBQUEsQ0FBQSxJQUFBLENBQUEsQ0FBQXd4QixRQUFBLENBQUF6dEMsQ0FBQSxDQUFBL0osQ0FBQSxFQUFBLENBQUEsQ0FBQSxFQUFBZ21CLENBQUEsQ0FBQW1uQixFQUFBLENBQUFvQixTQUFBLENBQUEsU0FBQXZ1QyxDQUFBLENBQUFpOUIsQ0FBQSxDQUFBLENBQUEsR0FBQXBtQixDQUFBQSxDQUFBLENBQUE4MUIsQ0FBQSxDQUFBemxDLENBQUEsQ0FBQTZsQyxDQUFBLENBQUFLLENBQUEsQ0FBQXAxQixDQUFBLENBQUFoWSxDQUFBLENBQUEySixRQUFBLENBQUFwRSxXQUFBLEVBQUEsQ0FBQSxNQUFBLFNBQUF5UyxDQUFBLEVBQUFuQixDQUFBLENBQUE3VyxDQUFBLENBQUFTLFVBQUEsQ0FBQWtzQyxDQUFBLENBQUE5MUIsQ0FBQSxDQUFBNVQsSUFBQSxDQUFBakQsQ0FBQSxDQUFBc1MsSUFBQSxFQUFBcTZCLENBQUEsRUFBQSxRQUFBOTFCLENBQUEsQ0FBQWxOLFFBQUEsQ0FBQXBFLFdBQUEsRUFBQSxFQUFBMkIsQ0FBQSxDQUFBOGUsQ0FBQSxDQUFBLGdCQUFBMm1CLENBQUEsQ0FBQSxJQUFBLENBQUEsQ0FBQXpsQyxDQUFBLENBQUE3RixNQUFBLENBQUEsQ0FBQSxFQUFBNkYsQ0FBQSxDQUFBeVAsRUFBQSxDQUFBLFVBQUEsQ0FBQSxFQUFBLENBQUEsQ0FBQSxHQUFBLDBDQUFBNUwsSUFBQSxDQUFBaU4sQ0FBQSxHQUFBKzBCLENBQUEsQ0FBQSxDQUFBL3NDLENBQUEsQ0FBQTBKLFFBQUEsQ0FBQXFqQyxDQUFBLEdBQUFLLENBQUEsQ0FBQXBuQixDQUFBLENBQUFobUIsQ0FBQSxDQUFBLENBQUFpWSxPQUFBLENBQUEsVUFBQSxFQUFBLENBQUEsQ0FBQSxDQUFBbTFCLENBQUEsR0FBQUwsQ0FBQSxDQUFBLENBQUFLLENBQUEsQ0FBQTFqQyxRQUFBLENBQUEsQ0FBQSxFQUFBcWpDLENBQUEsQ0FBQSxNQUFBLzBCLENBQUEsQ0FBQWhZLENBQUEsQ0FBQXNTLElBQUEsRUFBQTJxQixDQUFBLENBQUFBLENBQUEsQ0FBQThQLENBQUEsRUFBQS9tQixDQUFBLENBQUFobUIsQ0FBQSxDQUFBLENBQUEyVyxFQUFBLENBQUEsVUFBQSxDQUFBLEVBQUE1TSxDQUFBLENBQUFpYyxDQUFBLENBQUFobUIsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQWdtQixDQUFBLENBQUFqakIsTUFBQSxDQUFBaWpCLENBQUEsQ0FBQTdXLElBQUEsQ0FBQSxHQUFBLENBQUEsQ0FBQSxDQUFBby9CLFNBQUEsQ0FBQSxtQkFBQXhrQyxDQUFBLENBQUEsQ0FBQSxNQUFBaWMsQ0FBQUEsQ0FBQSxDQUFBbW5CLEVBQUEsQ0FBQW9CLFNBQUEsQ0FBQXhrQyxDQUFBLENBQUEsTUFBQWljLENBQUEsQ0FBQTNXLElBQUEsQ0FBQXRGLENBQUEsQ0FBQSxVQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUFpYyxDQUFBLENBQUFtbkIsRUFBQSxDQUFBb0IsU0FBQSxDQUFBdm9CLENBQUEsQ0FBQWhsQixFQUFBLENBQUFnNEMsSUFBQSxDQUFBLFVBQUEsQ0FBQSxNQUFBLFVBQUEsTUFBQSxNQUFBLENBQUEsRUFBQUEsSUFBQSxDQUFBLEtBQUEvZ0MsT0FBQSxDQUFBLE1BQUEsQ0FBQSxDQUFBK04sQ0FBQSxDQUFBLEtBQUEsQ0FBQSxFQUFBZ3pCLElBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQWh6QixDQUFBLENBQUFtbkIsRUFBQSxDQUFBOEwsY0FBQSxDQUFBLENBQUFDLGlCQUFBLENBQUEsNEJBQUEsQ0FBQSxHQUFBbnZDLENBQUFBLENBQUEsQ0FBQWljLENBQUEsQ0FBQSxJQUFBLENBQUEsQ0FBQXBKLFVBQUEsQ0FBQSxVQUFBLENBQUEsR0FBQTVjLENBQUFBLENBQUEsQ0FBQStKLENBQUEsQ0FBQXlWLElBQUEsQ0FBQSx5QkFBQSxDQUFBLENBQUF3RyxDQUFBLENBQUFsa0IsSUFBQSxDQUFBOUIsQ0FBQSxDQUFBLFVBQUEsQ0FBQSxLQUFBbTVDLE9BQUEsR0FBQSxDQUFBLEVBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBQyxxQkFBQSxDQUFBLGdDQUFBLENBQUEsR0FBQSxLQUFBSixJQUFBLENBQUEsS0FBQWhNLE9BQUEsQ0FBQWdNLElBQUEsRUFBQSxDQUFBLEtBQUFBLElBQUEsQ0FBQTMzQyxNQUFBLENBQUEsQ0FBQSxHQUFBMmtCLENBQUFBLENBQUEsQ0FBQSxLQUFBZ3pCLElBQUEsQ0FBQXg1QixJQUFBLENBQUEseUJBQUEsR0FBQSxFQUFBLENBQUF3RyxDQUFBLENBQUEza0IsTUFBQSxFQUFBLEtBQUEyM0MsSUFBQSxDQUFBenpCLEVBQUEsQ0FBQSxxQkFBQSxDQUFBLEtBQUEyekIsaUJBQUEsQ0FBQSxDQUFBbHpCLENBQUEsQ0FBQXRuQixJQUFBLENBQUEsSUFBQSxDQUFBLENBQUEsS0FBQXM2QyxJQUFBLENBQUF4NUIsSUFBQSxDQUFBLHlCQUFBLENBQUF3RyxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQXF6Qix1QkFBQSxDQUFBLGtDQUFBLENBQUEsR0FBQSxLQUFBTCxJQUFBLENBQUEzM0MsTUFBQSxDQUFBLENBQUEsR0FBQTBJLENBQUFBLENBQUEsQ0FBQSxLQUFBaXZDLElBQUEsQ0FBQXg1QixJQUFBLENBQUEseUJBQUEsQ0FBQSxDQUFBelYsQ0FBQSxDQUFBakgsTUFBQSxDQUFBa2pCLENBQUEsQ0FBQXRoQixPQUFBLENBQUEsSUFBQSxDQUFBcUYsQ0FBQSxDQUFBLENBQUEsQ0FBQSxFQUFBQSxDQUFBLENBQUExSSxNQUFBLENBQUEsS0FBQTIzQyxJQUFBLENBQUF4NUIsSUFBQSxDQUFBLHlCQUFBLENBQUF6VixDQUFBLENBQUEsQ0FBQSxLQUFBaXZDLElBQUEsQ0FBQTc0QixVQUFBLENBQUEseUJBQUEsRUFBQXlGLEdBQUEsQ0FBQSxxQkFBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxRQUFBSSxDQUFBLENBQUFobEIsRUFBQSxDQUFBRyxNQUFBLENBQUFtNEMsU0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsR0FBQXR6QixDQUFBLENBQUFsa0IsSUFBQSxDQUFBLENBQUEsT0FBQSxDQUFBLFFBQUEsQ0FBQSxDQUFBLFNBQUFpSSxDQUFBLENBQUEvSixDQUFBLENBQUEsQ0FBQSxRQUFBaTlCLENBQUFBLENBQUEsQ0FBQWx6QixDQUFBLENBQUEvSixDQUFBLENBQUFpOUIsQ0FBQSxDQUFBMFAsQ0FBQSxDQUFBLENBQUEsTUFBQTNtQixDQUFBQSxDQUFBLENBQUFsa0IsSUFBQSxDQUFBK1UsQ0FBQSxDQUFBLFVBQUEsQ0FBQTdXLENBQUEsRUFBQTR2QixVQUFBLENBQUE1SixDQUFBLENBQUF2RSxHQUFBLENBQUExWCxDQUFBLENBQUEsVUFBQSxJQUFBLENBQUEsQ0FBQSxFQUFBLENBQUEsQ0FBQWt6QixDQUFBLEdBQUFqOUIsQ0FBQSxFQUFBNHZCLFVBQUEsQ0FBQTVKLENBQUEsQ0FBQXZFLEdBQUEsQ0FBQTFYLENBQUEsQ0FBQSxTQUFBLElBQUEsQ0FBQSxPQUFBLENBQUEsQ0FBQSxFQUFBLENBQUEsQ0FBQSxDQUFBNGlDLENBQUEsR0FBQTNzQyxDQUFBLEVBQUE0dkIsVUFBQSxDQUFBNUosQ0FBQSxDQUFBdkUsR0FBQSxDQUFBMVgsQ0FBQSxDQUFBLFNBQUEsSUFBQSxDQUFBLENBQUEsRUFBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLEVBQUEvSixDQUFBLENBQUEsSUFBQTZXLENBQUFBLENBQUEsQ0FBQSxVQUFBN1csQ0FBQSxDQUFBLENBQUEsTUFBQSxDQUFBLE9BQUEsQ0FBQSxDQUFBLENBQUEsS0FBQSxDQUFBLFFBQUEsQ0FBQSxDQUFBMnNDLENBQUEsQ0FBQTNzQyxDQUFBLENBQUF1RixXQUFBLEVBQUEsQ0FBQTJCLENBQUEsQ0FBQSxDQUFBd3dDLFVBQUEsQ0FBQTF4QixDQUFBLENBQUFobEIsRUFBQSxDQUFBMDJDLFVBQUEsQ0FBQUQsV0FBQSxDQUFBenhCLENBQUEsQ0FBQWhsQixFQUFBLENBQUF5MkMsV0FBQSxDQUFBdkgsVUFBQSxDQUFBbHFCLENBQUEsQ0FBQWhsQixFQUFBLENBQUFrdkMsVUFBQSxDQUFBQyxXQUFBLENBQUFucUIsQ0FBQSxDQUFBaGxCLEVBQUEsQ0FBQW12QyxXQUFBLENBQUEsQ0FBQW5xQixDQUFBLENBQUFobEIsRUFBQSxDQUFBLFFBQUFoQixDQUFBLEVBQUEsU0FBQStKLENBQUEsQ0FBQSxDQUFBLE1BQUEsS0FBQSxFQUFBLEdBQUFBLENBQUEsQ0FBQTdDLENBQUEsQ0FBQSxRQUFBbEgsQ0FBQSxDQUFBLENBQUF6QixJQUFBLENBQUEsSUFBQSxDQUFBLENBQUEsS0FBQXVELElBQUEsQ0FBQSxVQUFBLENBQUFra0IsQ0FBQSxDQUFBLElBQUEsQ0FBQSxDQUFBdkUsR0FBQSxDQUFBa3JCLENBQUEsQ0FBQTFQLENBQUEsQ0FBQSxJQUFBLENBQUFsekIsQ0FBQSxDQUFBLENBQUEsSUFBQSxFQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQWljLENBQUEsQ0FBQWhsQixFQUFBLENBQUEsUUFBQWhCLENBQUEsRUFBQSxTQUFBK0osQ0FBQSxDQUFBOE0sQ0FBQSxDQUFBLENBQUEsTUFBQSxVQUFBLE1BQUE5TSxDQUFBQSxDQUFBLENBQUE3QyxDQUFBLENBQUEsUUFBQWxILENBQUEsQ0FBQSxDQUFBekIsSUFBQSxDQUFBLElBQUEsQ0FBQXdMLENBQUEsQ0FBQSxDQUFBLEtBQUFqSSxJQUFBLENBQUEsVUFBQSxDQUFBa2tCLENBQUEsQ0FBQSxJQUFBLENBQUEsQ0FBQXZFLEdBQUEsQ0FBQWtyQixDQUFBLENBQUExUCxDQUFBLENBQUEsSUFBQSxDQUFBbHpCLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQThNLENBQUEsQ0FBQSxDQUFBLElBQUEsRUFBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxFQUFBbVAsQ0FBQSxDQUFBaGxCLEVBQUEsQ0FBQXFYLE9BQUEsQ0FBQSxTQUFBMk4sQ0FBQSxDQUFBLENBQUEsTUFBQSxNQUFBNU4sR0FBQSxDQUFBLE1BQUE0TixDQUFBLENBQUEsS0FBQW5rQixVQUFBLENBQUEsS0FBQUEsVUFBQSxDQUFBK0wsTUFBQSxDQUFBb1ksQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQUEsQ0FBQSxDQUFBbW5CLEVBQUEsQ0FBQTdpQixPQUFBLENBQUEsQ0FBQWl2QixTQUFBLENBQUEsQ0FBQSxDQUFBQyxLQUFBLENBQUEsR0FBQSxDQUFBQyxNQUFBLENBQUEsRUFBQSxDQUFBQyxJQUFBLENBQUEsRUFBQSxDQUFBQyxHQUFBLENBQUEsRUFBQSxDQUFBQyxLQUFBLENBQUEsRUFBQSxDQUFBQyxNQUFBLENBQUEsRUFBQSxDQUFBQyxJQUFBLENBQUEsRUFBQSxDQUFBQyxJQUFBLENBQUEsRUFBQSxDQUFBQyxTQUFBLENBQUEsRUFBQSxDQUFBQyxPQUFBLENBQUEsRUFBQSxDQUFBQyxNQUFBLENBQUEsR0FBQSxDQUFBQyxLQUFBLENBQUEsRUFBQSxDQUFBQyxLQUFBLENBQUEsRUFBQSxDQUFBQyxHQUFBLENBQUEsQ0FBQSxDQUFBQyxFQUFBLENBQUEsRUFBQSxDQUFBLENBQUF0MEIsQ0FBQSxDQUFBbW5CLEVBQUEsQ0FBQTMyQixjQUFBLENBQUEsVUFBQSxDQUFBLEdBQUF3UCxDQUFBQSxDQUFBLENBQUEsc0NBQUEsQ0FBQSxNQUFBLFVBQUFqYyxDQUFBLENBQUEsQ0FBQSxNQUFBQSxDQUFBQSxDQUFBLENBQUFqRyxPQUFBLENBQUFraUIsQ0FBQSxDQUFBLE1BQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLEVBQUEsQ0FBQUEsQ0FBQSxDQUFBaGxCLEVBQUEsQ0FBQXU1QyxNQUFBLENBQUEsVUFBQSxDQUFBLEdBQUF4d0MsQ0FBQUEsQ0FBQSxDQUFBL0osQ0FBQSxDQUFBaTlCLENBQUEsQ0FBQXBtQixDQUFBLENBQUE4MUIsQ0FBQSxDQUFBLE1BQUEsTUFBQSxDQUFBLEVBQUE0TixNQUFBLEVBQUEsS0FBQSxDQUFBLEVBQUFBLE1BQUEsQ0FBQWw1QyxNQUFBLENBQUEsS0FBQUksU0FBQSxDQUFBLEtBQUEsQ0FBQSxFQUFBODRDLE1BQUEsQ0FBQSxFQUFBMWpDLENBQUEsQ0FBQSxLQUFBelUsRUFBQSxDQUFBLENBQUEsRUFBQW1XLE9BQUEsQ0FBQSxPQUFBLENBQUEsQ0FBQTBrQixDQUFBLENBQUEsS0FBQTV0QixJQUFBLENBQUEsSUFBQSxDQUFBLENBQUE0dEIsQ0FBQSxHQUFBbHpCLENBQUEsQ0FBQSxLQUFBM0gsRUFBQSxDQUFBLENBQUEsRUFBQW1XLE9BQUEsR0FBQWxXLElBQUEsRUFBQSxDQUFBc3FDLENBQUEsQ0FBQTVpQyxDQUFBLENBQUFxTyxHQUFBLENBQUFyTyxDQUFBLENBQUExSSxNQUFBLENBQUEwSSxDQUFBLENBQUE2TSxRQUFBLEVBQUEsQ0FBQSxLQUFBQSxRQUFBLEVBQUEsQ0FBQSxDQUFBNVcsQ0FBQSxDQUFBLGNBQUFnbUIsQ0FBQSxDQUFBbW5CLEVBQUEsQ0FBQTMyQixjQUFBLENBQUF5bUIsQ0FBQSxDQUFBLENBQUEsSUFBQSxDQUFBcG1CLENBQUEsQ0FBQUEsQ0FBQSxDQUFBdUIsR0FBQSxDQUFBdTBCLENBQUEsQ0FBQTcrQixJQUFBLENBQUE5TixDQUFBLEVBQUFxWSxPQUFBLENBQUFyWSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsS0FBQXlCLFNBQUEsQ0FBQW9WLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBbVAsQ0FBQSxDQUFBaGxCLEVBQUEsQ0FBQXc1QyxZQUFBLENBQUEsU0FBQXp3QyxDQUFBLENBQUEsQ0FBQSxHQUFBL0osQ0FBQUEsQ0FBQSxDQUFBLEtBQUF5aEIsR0FBQSxDQUFBLFVBQUEsQ0FBQSxDQUFBd2IsQ0FBQSxDQUFBLGFBQUFqOUIsQ0FBQSxDQUFBNlcsQ0FBQSxDQUFBOU0sQ0FBQSxDQUFBLHNCQUFBLENBQUEsZUFBQSxDQUFBNGlDLENBQUEsQ0FBQSxLQUFBcDBCLE9BQUEsR0FBQTNLLE1BQUEsQ0FBQSxVQUFBLENBQUEsR0FBQTdELENBQUFBLENBQUEsQ0FBQWljLENBQUEsQ0FBQSxJQUFBLENBQUEsQ0FBQSxNQUFBaVgsQ0FBQUEsQ0FBQSxFQUFBLFdBQUFsekIsQ0FBQSxDQUFBMFgsR0FBQSxDQUFBLFVBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBNUssQ0FBQSxDQUFBOUwsSUFBQSxDQUFBaEIsQ0FBQSxDQUFBMFgsR0FBQSxDQUFBLFVBQUEsRUFBQTFYLENBQUEsQ0FBQTBYLEdBQUEsQ0FBQSxZQUFBLENBQUEsQ0FBQTFYLENBQUEsQ0FBQTBYLEdBQUEsQ0FBQSxZQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsRUFBQXJmLEVBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxNQUFBLFVBQUFwQyxDQUFBLEVBQUEyc0MsQ0FBQSxDQUFBdHJDLE1BQUEsQ0FBQXNyQyxDQUFBLENBQUEzbUIsQ0FBQSxDQUFBLEtBQUEsQ0FBQSxFQUFBeGIsYUFBQSxFQUFBN00sUUFBQSxDQUFBLENBQUEsQ0FBQSxDQUFBcW9CLENBQUEsQ0FBQWpqQixNQUFBLENBQUFpakIsQ0FBQSxDQUFBN1csSUFBQSxDQUFBLEdBQUEsQ0FBQSxDQUFBLENBQUFzckMsUUFBQSxDQUFBLGtCQUFBMXdDLENBQUEsQ0FBQSxDQUFBLEdBQUEvSixDQUFBQSxDQUFBLENBQUFnbUIsQ0FBQSxDQUFBM1csSUFBQSxDQUFBdEYsQ0FBQSxDQUFBLFVBQUEsQ0FBQSxDQUFBa3pCLENBQUEsQ0FBQSxNQUFBajlCLENBQUEsQ0FBQSxNQUFBLENBQUEsQ0FBQWk5QixDQUFBLEVBQUFqOUIsQ0FBQSxFQUFBLENBQUEsR0FBQWdtQixDQUFBLENBQUFtbkIsRUFBQSxDQUFBb0IsU0FBQSxDQUFBeGtDLENBQUEsQ0FBQWt6QixDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBalgsQ0FBQSxDQUFBaGxCLEVBQUEsQ0FBQStCLE1BQUEsQ0FBQSxDQUFBMjNDLFFBQUEsQ0FBQSxVQUFBLENBQUEsR0FBQTEwQixDQUFBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLE1BQUEsV0FBQSxDQUFBLE1BQUEsTUFBQWxrQixJQUFBLENBQUEsVUFBQSxDQUFBLEtBQUE2SSxFQUFBLEdBQUEsS0FBQUEsRUFBQSxDQUFBLFNBQUEsR0FBQXFiLENBQUEsRUFBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxFQUFBLENBQUEyMEIsY0FBQSxDQUFBLHlCQUFBLENBQUEsTUFBQSxNQUFBNzRDLElBQUEsQ0FBQSxVQUFBLENBQUEsY0FBQWlKLElBQUEsQ0FBQSxLQUFBSixFQUFBLEdBQUFxYixDQUFBLENBQUEsSUFBQSxDQUFBLENBQUE2VCxVQUFBLENBQUEsSUFBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQTdULENBQUEsQ0FBQXFuQixNQUFBLENBQUEsY0FBQSxDQUFBLENBQUF6c0MsT0FBQSxDQUFBLFFBQUEsQ0FBQW9DLE9BQUEsQ0FBQSxDQUFBZzlCLE1BQUEsQ0FBQSxDQUFBLENBQUExSCxPQUFBLENBQUEsRUFBQSxDQUFBdUMsT0FBQSxDQUFBLENBQUEsc0JBQUEsZUFBQSxDQUFBLGdDQUFBLGVBQUEsQ0FBQSx1QkFBQSxrQkFBQSxDQUFBLENBQUErZixXQUFBLENBQUEsQ0FBQSxDQUFBLENBQUFqMUIsS0FBQSxDQUFBLE9BQUEsQ0FBQWsxQixNQUFBLENBQUEsc0NBQUEsQ0FBQUMsV0FBQSxDQUFBLE1BQUEsQ0FBQUMsS0FBQSxDQUFBLENBQUFDLFlBQUEsQ0FBQSxzQkFBQSxDQUFBSCxNQUFBLENBQUEsc0JBQUEsQ0FBQSxDQUFBSSxRQUFBLENBQUEsSUFBQSxDQUFBQyxjQUFBLENBQUEsSUFBQSxDQUFBLENBQUFDLFNBQUEsQ0FBQSxDQUFBQyxjQUFBLENBQUEsTUFBQSxDQUFBQyxpQkFBQSxDQUFBLE1BQUEsQ0FBQUMsVUFBQSxDQUFBLE1BQUEsQ0FBQUMsYUFBQSxDQUFBLE1BQUEsQ0FBQTlxQixNQUFBLENBQUEsTUFBQSxDQUFBLENBQUErcUIsU0FBQSxDQUFBLENBQUFKLGNBQUEsQ0FBQSxNQUFBLENBQUFDLGlCQUFBLENBQUEsTUFBQSxDQUFBQyxVQUFBLENBQUEsTUFBQSxDQUFBQyxhQUFBLENBQUEsTUFBQSxDQUFBOXFCLE1BQUEsQ0FBQSxNQUFBLENBQUEsQ0FBQW1lLE9BQUEsQ0FBQSxrQkFBQSxDQUFBLEdBQUE3a0MsQ0FBQUEsQ0FBQSxDQUFBLEtBQUEvRyxPQUFBLENBQUEsS0FBQXk0QyxRQUFBLENBQUEsS0FBQUMsUUFBQSxDQUFBMTFCLENBQUEsRUFBQSxDQUFBLEtBQUF3cEIsU0FBQSxDQUFBLGNBQUEsQ0FBQSwyQkFBQSxDQUFBLENBQUEsS0FBQXhDLE9BQUEsQ0FBQTM5QixJQUFBLENBQUEsTUFBQSxDQUFBLFNBQUEsQ0FBQSxDQUFBdEYsQ0FBQSxDQUFBNndDLFdBQUEsRUFBQTd3QyxDQUFBLENBQUFpMkIsTUFBQSxHQUFBLENBQUEsQ0FBQSxFQUFBLE1BQUFqMkIsQ0FBQSxDQUFBaTJCLE1BQUEsR0FBQWoyQixDQUFBLENBQUFpMkIsTUFBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLEtBQUEyYixjQUFBLEVBQUEsQ0FBQSxFQUFBNXhDLENBQUEsQ0FBQWkyQixNQUFBLEdBQUFqMkIsQ0FBQSxDQUFBaTJCLE1BQUEsRUFBQSxLQUFBMEMsT0FBQSxDQUFBcmhDLE1BQUEsQ0FBQSxDQUFBLEtBQUE0ckMsUUFBQSxFQUFBLENBQUEsQ0FBQSxDQUFBNkIsbUJBQUEsQ0FBQSw4QkFBQSxDQUFBLE1BQUEsQ0FBQStMLE1BQUEsQ0FBQSxLQUFBN2EsTUFBQSxDQUFBNGIsS0FBQSxDQUFBLEtBQUE1YixNQUFBLENBQUEzK0IsTUFBQSxDQUFBLEtBQUEyK0IsTUFBQSxDQUFBbjJCLElBQUEsRUFBQSxDQUFBbWMsQ0FBQSxFQUFBLENBQUEsQ0FBQSxDQUFBLENBQUE2MUIsWUFBQSxDQUFBLHVCQUFBLENBQUEsR0FBQTl4QyxDQUFBQSxDQUFBLENBQUEvSixDQUFBLENBQUFpOUIsQ0FBQSxDQUFBLEtBQUFqNkIsT0FBQSxDQUFBKzNDLEtBQUEsQ0FBQTlkLENBQUEsR0FBQWx6QixDQUFBLENBQUFpYyxDQUFBLENBQUEsUUFBQSxDQUFBLENBQUEsS0FBQXdwQixTQUFBLENBQUF6bEMsQ0FBQSxDQUFBLDBCQUFBLENBQUEsV0FBQWt6QixDQUFBLENBQUE0ZCxNQUFBLENBQUEsQ0FBQTl3QyxDQUFBLENBQUFna0IsU0FBQSxDQUFBLEtBQUEyVSxPQUFBLENBQUEsQ0FBQTFpQyxDQUFBLENBQUEsS0FBQWdnQyxNQUFBLENBQUFyb0IsUUFBQSxDQUFBLDJCQUFBLENBQUEsQ0FBQSxLQUFBcTNCLFlBQUEsQ0FBQWh2QyxDQUFBLENBQUFpOUIsQ0FBQSxDQUFBNGQsTUFBQSxFQUFBckwsU0FBQSxDQUFBeHZDLENBQUEsQ0FBQSxJQUFBLENBQUFpOUIsQ0FBQSxDQUFBK2QsWUFBQSxFQUFBeEwsU0FBQSxDQUFBLEtBQUE5TSxPQUFBLENBQUEsb0JBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBb1osYUFBQSxDQUFBLHdCQUFBLENBQUEsS0FBQTlNLFlBQUEsQ0FBQSxLQUFBdE0sT0FBQSxDQUFBLG9CQUFBLEVBQUEsS0FBQUEsT0FBQSxDQUFBL3FCLFFBQUEsQ0FBQSwyQkFBQSxFQUFBbUMsTUFBQSxFQUFBLENBQUEsQ0FBQSxDQUFBaTFCLFFBQUEsQ0FBQSxtQkFBQSxDQUFBLEdBQUEvb0IsQ0FBQUEsQ0FBQSxDQUFBLEtBQUFnbkIsT0FBQSxDQUFBblQsVUFBQSxDQUFBLE1BQUEsRUFBQSxLQUFBNkksT0FBQSxDQUFBN0ksVUFBQSxDQUFBLHlEQUFBLEVBQUE4Z0IsY0FBQSxFQUFBLENBQUEsS0FBQW1CLGFBQUEsRUFBQSxDQUFBOTFCLENBQUEsQ0FBQSxLQUFBMGMsT0FBQSxDQUFBNzRCLElBQUEsR0FBQTRYLEdBQUEsQ0FBQSxTQUFBLENBQUEsRUFBQSxFQUFBb1ksVUFBQSxDQUFBLGtDQUFBLEVBQUE4Z0IsY0FBQSxFQUFBLENBQUEsWUFBQSxLQUFBMzNDLE9BQUEsQ0FBQTgzQyxXQUFBLEVBQUE5MEIsQ0FBQSxDQUFBdkUsR0FBQSxDQUFBLFFBQUEsQ0FBQSxFQUFBLENBQUEsQ0FBQSxDQUFBLENBQUF5dEIsVUFBQSxDQUFBLG9CQUFBbHBCLENBQUEsQ0FBQWpjLENBQUEsQ0FBQSxDQUFBLE1BQUEsV0FBQWljLENBQUEsRUFBQSxLQUFBKzFCLFNBQUEsQ0FBQWh5QyxDQUFBLEVBQUEsSUFBQSxFQUFBLEdBQUEsVUFBQWljLENBQUEsR0FBQSxLQUFBaGpCLE9BQUEsQ0FBQTJpQixLQUFBLEVBQUEsS0FBQStwQixJQUFBLENBQUEsS0FBQWhOLE9BQUEsQ0FBQSxLQUFBMS9CLE9BQUEsQ0FBQTJpQixLQUFBLENBQUEsQ0FBQSxLQUFBcTJCLFlBQUEsQ0FBQWp5QyxDQUFBLENBQUEsRUFBQSxLQUFBMmpDLE1BQUEsQ0FBQTFuQixDQUFBLENBQUFqYyxDQUFBLENBQUEsQ0FBQSxnQkFBQWljLENBQUEsRUFBQWpjLENBQUEsRUFBQSxLQUFBL0csT0FBQSxDQUFBZzlCLE1BQUEsR0FBQSxDQUFBLENBQUEsRUFBQSxLQUFBK2IsU0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLFVBQUEvMUIsQ0FBQSxHQUFBLEtBQUE4MUIsYUFBQSxHQUFBL3hDLENBQUEsRUFBQSxLQUFBOHhDLFlBQUEsRUFBQSxDQUFBLENBQUEsSUFBQSxFQUFBLENBQUEsQ0FBQSxDQUFBLENBQUFoTixrQkFBQSxDQUFBLDRCQUFBN29CLENBQUEsQ0FBQSxDQUFBLEtBQUEwbkIsTUFBQSxDQUFBMW5CLENBQUEsRUFBQSxLQUFBZ25CLE9BQUEsQ0FBQTM5QixJQUFBLENBQUEsZUFBQSxDQUFBMlcsQ0FBQSxDQUFBLENBQUEsS0FBQXFwQixZQUFBLENBQUEsSUFBQSxDQUFBLG1CQUFBLENBQUEsQ0FBQSxDQUFBcnBCLENBQUEsQ0FBQSxDQUFBLEtBQUFxcEIsWUFBQSxDQUFBLEtBQUEzTSxPQUFBLENBQUF0cUIsR0FBQSxDQUFBLEtBQUFzcUIsT0FBQSxDQUFBNzRCLElBQUEsRUFBQSxDQUFBLENBQUEsSUFBQSxDQUFBLG1CQUFBLENBQUEsQ0FBQSxDQUFBbWMsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBaTJCLFFBQUEsQ0FBQSxrQkFBQWx5QyxDQUFBLENBQUEsQ0FBQSxHQUFBLENBQUFBLENBQUEsQ0FBQTBmLE1BQUEsRUFBQSxDQUFBMWYsQ0FBQSxDQUFBOGYsT0FBQSxDQUFBLENBQUEsR0FBQTdwQixDQUFBQSxDQUFBLENBQUFnbUIsQ0FBQSxDQUFBbW5CLEVBQUEsQ0FBQTdpQixPQUFBLENBQUEyUyxDQUFBLENBQUEsS0FBQXlGLE9BQUEsQ0FBQXJoQyxNQUFBLENBQUF3VixDQUFBLENBQUEsS0FBQTZyQixPQUFBLENBQUF4cUIsS0FBQSxDQUFBbk8sQ0FBQSxDQUFBMUcsTUFBQSxDQUFBLENBQUFzcEMsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLE9BQUE1aUMsQ0FBQSxDQUFBdWdCLE9BQUEsRUFBQSxJQUFBdHFCLENBQUFBLENBQUEsQ0FBQW02QyxLQUFBLENBQUEsSUFBQW42QyxDQUFBQSxDQUFBLENBQUEwNUMsSUFBQSxDQUFBL00sQ0FBQSxDQUFBLEtBQUFqSyxPQUFBLENBQUEsQ0FBQTdyQixDQUFBLENBQUEsQ0FBQSxFQUFBb21CLENBQUEsQ0FBQSxDQUFBLE1BQUEsSUFBQWo5QixDQUFBQSxDQUFBLENBQUErNUMsSUFBQSxDQUFBLElBQUEvNUMsQ0FBQUEsQ0FBQSxDQUFBczZDLEVBQUEsQ0FBQTNOLENBQUEsQ0FBQSxLQUFBakssT0FBQSxDQUFBLENBQUE3ckIsQ0FBQSxDQUFBLENBQUEsQ0FBQW9tQixDQUFBLEVBQUFBLENBQUEsQ0FBQSxDQUFBLE1BQUEsSUFBQWo5QixDQUFBQSxDQUFBLENBQUFvNkMsS0FBQSxDQUFBLElBQUFwNkMsQ0FBQUEsQ0FBQSxDQUFBNDVDLEtBQUEsQ0FBQSxLQUFBc0MsYUFBQSxDQUFBbnlDLENBQUEsRUFBQSxNQUFBLElBQUEvSixDQUFBQSxDQUFBLENBQUE4NUMsSUFBQSxDQUFBbk4sQ0FBQSxDQUFBLEtBQUFqSyxPQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsTUFBQSxJQUFBMWlDLENBQUFBLENBQUEsQ0FBQTI1QyxHQUFBLENBQUFoTixDQUFBLENBQUEsS0FBQWpLLE9BQUEsQ0FBQXpGLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBMFAsQ0FBQSxHQUFBM21CLENBQUEsQ0FBQWpjLENBQUEsQ0FBQTFHLE1BQUEsQ0FBQSxDQUFBZ00sSUFBQSxDQUFBLFVBQUEsQ0FBQSxDQUFBLENBQUEsRUFBQTJXLENBQUEsQ0FBQTJtQixDQUFBLENBQUEsQ0FBQXQ5QixJQUFBLENBQUEsVUFBQSxDQUFBLENBQUEsQ0FBQSxDQUFBMlcsQ0FBQSxDQUFBMm1CLENBQUEsQ0FBQSxDQUFBaGtCLE9BQUEsQ0FBQSxPQUFBLENBQUEsQ0FBQTVlLENBQUEsQ0FBQTRkLGNBQUEsRUFBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUF3MEIsYUFBQSxDQUFBLHVCQUFBcHlDLENBQUEsQ0FBQSxDQUFBQSxDQUFBLENBQUF1Z0IsT0FBQSxHQUFBdEUsQ0FBQSxDQUFBbW5CLEVBQUEsQ0FBQTdpQixPQUFBLENBQUFnd0IsRUFBQSxFQUFBdndDLENBQUEsQ0FBQThmLE9BQUEsRUFBQTdELENBQUEsQ0FBQWpjLENBQUEsQ0FBQXlkLGFBQUEsQ0FBQSxDQUFBM1AsSUFBQSxHQUFBOFEsT0FBQSxDQUFBLE9BQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQXd3QixPQUFBLENBQUEsa0JBQUEsQ0FBQSxHQUFBcHZDLENBQUFBLENBQUEsQ0FBQSxLQUFBL0csT0FBQSxDQUFBLEtBQUEyNEMsY0FBQSxHQUFBNXhDLENBQUEsQ0FBQWkyQixNQUFBLEdBQUEsQ0FBQSxDQUFBLEVBQUFqMkIsQ0FBQSxDQUFBNndDLFdBQUEsR0FBQSxDQUFBLENBQUEsRUFBQSxDQUFBLEtBQUFsWSxPQUFBLENBQUFyaEMsTUFBQSxFQUFBMEksQ0FBQSxDQUFBaTJCLE1BQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxLQUFBQSxNQUFBLENBQUFoYSxDQUFBLEVBQUEsRUFBQWpjLENBQUEsQ0FBQWkyQixNQUFBLEdBQUEsQ0FBQSxDQUFBLENBQUEsS0FBQStiLFNBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxLQUFBL2IsTUFBQSxDQUFBMytCLE1BQUEsRUFBQSxDQUFBMmtCLENBQUEsQ0FBQXpmLFFBQUEsQ0FBQSxLQUFBeW1DLE9BQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxLQUFBaE4sTUFBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsS0FBQTBDLE9BQUEsQ0FBQXJoQyxNQUFBLEdBQUEsS0FBQXFoQyxPQUFBLENBQUE1MEIsSUFBQSxDQUFBLG9CQUFBLEVBQUF6TSxNQUFBLEVBQUEwSSxDQUFBLENBQUFpMkIsTUFBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLEtBQUFBLE1BQUEsQ0FBQWhhLENBQUEsRUFBQSxFQUFBLEtBQUErMUIsU0FBQSxDQUFBbjRDLElBQUEsQ0FBQXd1QixHQUFBLENBQUEsQ0FBQSxDQUFBcm9CLENBQUEsQ0FBQWkyQixNQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQWoyQixDQUFBLENBQUFpMkIsTUFBQSxDQUFBLEtBQUEwQyxPQUFBLENBQUF4cUIsS0FBQSxDQUFBLEtBQUE4bkIsTUFBQSxDQUFBLENBQUEsS0FBQThiLGFBQUEsRUFBQSxDQUFBLEtBQUE3TyxRQUFBLEVBQUEsQ0FBQSxDQUFBLENBQUEwTyxjQUFBLENBQUEseUJBQUEsQ0FBQSxHQUFBMzFCLENBQUFBLENBQUEsQ0FBQSxLQUFBMGMsT0FBQSxDQUFBMzRCLENBQUEsQ0FBQSxLQUFBcXlDLE1BQUEsQ0FBQSxLQUFBMVosT0FBQSxDQUFBLEtBQUFzSyxPQUFBLENBQUFsL0IsSUFBQSxDQUFBLEtBQUE5SyxPQUFBLENBQUE2M0MsTUFBQSxDQUFBLENBQUEsS0FBQXJMLFNBQUEsQ0FBQSxLQUFBOU0sT0FBQSxDQUFBLG1EQUFBLENBQUEsa0JBQUEsQ0FBQSxDQUFBLEtBQUEwWixNQUFBLENBQUEsS0FBQTFaLE9BQUEsQ0FBQTc0QixJQUFBLEdBQUErRCxNQUFBLENBQUEsb0NBQUEsRUFBQStVLElBQUEsRUFBQSxDQUFBLEtBQUE2c0IsU0FBQSxDQUFBLEtBQUE0TSxNQUFBLENBQUEsc0JBQUEsQ0FBQSxtQ0FBQSxDQUFBLENBQUFyeUMsQ0FBQSxHQUFBLEtBQUEybEMsSUFBQSxDQUFBMXBCLENBQUEsQ0FBQTdPLEdBQUEsQ0FBQSxLQUFBdXJCLE9BQUEsQ0FBQSxFQUFBLEtBQUFnTixJQUFBLENBQUEzbEMsQ0FBQSxDQUFBb04sR0FBQSxDQUFBLEtBQUFpbEMsTUFBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQW5QLFFBQUEsQ0FBQSxtQkFBQSxDQUFBLEdBQUFsakMsQ0FBQUEsQ0FBQSxDQUFBL0osQ0FBQSxDQUFBLEtBQUFnRCxPQUFBLENBQUFpNkIsQ0FBQSxDQUFBajlCLENBQUEsQ0FBQTg2QyxXQUFBLENBQUFqa0MsQ0FBQSxDQUFBLEtBQUFtMkIsT0FBQSxDQUFBMzdCLE1BQUEsRUFBQSxDQUFBLEtBQUEydUIsTUFBQSxDQUFBLEtBQUFxYyxXQUFBLENBQUFyOEMsQ0FBQSxDQUFBZ2dDLE1BQUEsQ0FBQSxDQUFBLEtBQUF3UCxTQUFBLENBQUEsS0FBQXhQLE1BQUEsQ0FBQSw0QkFBQSxDQUFBLGlCQUFBLEVBQUFnUCxZQUFBLENBQUEsS0FBQWhQLE1BQUEsQ0FBQSwrQkFBQSxDQUFBLENBQUEsS0FBQXdQLFNBQUEsQ0FBQSxLQUFBeFAsTUFBQSxDQUFBbjJCLElBQUEsRUFBQSxDQUFBLDZCQUFBLENBQUEsQ0FBQSxLQUFBbTJCLE1BQUEsQ0FBQW4yQixJQUFBLEdBQUE0WSxJQUFBLEVBQUEsQ0FBQSxLQUFBaWdCLE9BQUEsQ0FBQXJ6QixJQUFBLENBQUEsTUFBQSxDQUFBLEtBQUEsRUFBQXZOLElBQUEsQ0FBQSxVQUFBLENBQUEsR0FBQWlJLENBQUFBLENBQUEsQ0FBQWljLENBQUEsQ0FBQSxJQUFBLENBQUEsQ0FBQWhtQixDQUFBLENBQUErSixDQUFBLENBQUEyd0MsUUFBQSxHQUFBcnJDLElBQUEsQ0FBQSxJQUFBLENBQUEsQ0FBQTR0QixDQUFBLENBQUFsekIsQ0FBQSxDQUFBRixJQUFBLEVBQUEsQ0FBQWdOLENBQUEsQ0FBQW9tQixDQUFBLENBQUF5ZCxRQUFBLEdBQUFyckMsSUFBQSxDQUFBLElBQUEsQ0FBQSxDQUFBdEYsQ0FBQSxDQUFBc0YsSUFBQSxDQUFBLGVBQUEsQ0FBQXdILENBQUEsRUFBQW9tQixDQUFBLENBQUE1dEIsSUFBQSxDQUFBLGlCQUFBLENBQUFyUCxDQUFBLENBQUEsQ0FBQSxDQUFBLEVBQUE2SixJQUFBLEdBQUF3RixJQUFBLENBQUEsTUFBQSxDQUFBLFVBQUEsQ0FBQSxDQUFBLEtBQUFxekIsT0FBQSxDQUFBdnJCLEdBQUEsQ0FBQSxLQUFBNm9CLE1BQUEsRUFBQTN3QixJQUFBLENBQUEsQ0FBQSxnQkFBQSxPQUFBLENBQUEsZ0JBQUEsT0FBQSxDQUFBa0QsUUFBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLEVBQUExSSxJQUFBLEdBQUF3RixJQUFBLENBQUEsQ0FBQSxjQUFBLE1BQUEsQ0FBQSxFQUFBc1QsSUFBQSxFQUFBLENBQUEsS0FBQXFkLE1BQUEsQ0FBQTMrQixNQUFBLENBQUEsS0FBQTIrQixNQUFBLENBQUEzd0IsSUFBQSxDQUFBLENBQUEsZ0JBQUEsTUFBQSxDQUFBLGdCQUFBLE1BQUEsQ0FBQWtELFFBQUEsQ0FBQSxDQUFBLENBQUEsRUFBQTFJLElBQUEsR0FBQXdGLElBQUEsQ0FBQSxDQUFBLGNBQUEsT0FBQSxDQUFBLENBQUEsQ0FBQSxLQUFBcXpCLE9BQUEsQ0FBQXRnQyxFQUFBLENBQUEsQ0FBQSxFQUFBaU4sSUFBQSxDQUFBLFVBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxLQUFBd3NDLFlBQUEsRUFBQSxDQUFBLEtBQUFHLFlBQUEsQ0FBQWg4QyxDQUFBLENBQUEybEIsS0FBQSxDQUFBLENBQUEsU0FBQXNYLENBQUEsRUFBQWx6QixDQUFBLENBQUE4TSxDQUFBLENBQUE0WixNQUFBLEVBQUEsQ0FBQSxLQUFBdWMsT0FBQSxDQUFBcDJCLFFBQUEsQ0FBQSxVQUFBLEVBQUE5VSxJQUFBLENBQUEsVUFBQSxDQUFBLEdBQUE5QixDQUFBQSxDQUFBLENBQUFnbUIsQ0FBQSxDQUFBLElBQUEsQ0FBQSxDQUFBaVgsQ0FBQSxDQUFBajlCLENBQUEsQ0FBQXloQixHQUFBLENBQUEsVUFBQSxDQUFBLENBQUEsYUFBQXdiLENBQUEsRUFBQSxVQUFBQSxDQUFBLEdBQUFsekIsQ0FBQSxFQUFBL0osQ0FBQSxDQUFBbXdDLFdBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxFQUFBLENBQUEsQ0FBQSxDQUFBLEtBQUF6TixPQUFBLENBQUE1Z0MsSUFBQSxDQUFBLFVBQUEsQ0FBQWlJLENBQUEsRUFBQWljLENBQUEsQ0FBQSxJQUFBLENBQUEsQ0FBQW1xQixXQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxLQUFBek4sT0FBQSxDQUFBNzRCLElBQUEsR0FBQS9ILElBQUEsQ0FBQSxVQUFBLENBQUFra0IsQ0FBQSxDQUFBLElBQUEsQ0FBQSxDQUFBeUssTUFBQSxDQUFBN3NCLElBQUEsQ0FBQXd1QixHQUFBLENBQUEsQ0FBQSxDQUFBcm9CLENBQUEsQ0FBQWljLENBQUEsQ0FBQSxJQUFBLENBQUEsQ0FBQXl4QixXQUFBLEVBQUEsQ0FBQXp4QixDQUFBLENBQUEsSUFBQSxDQUFBLENBQUF5SyxNQUFBLEVBQUEsQ0FBQSxFQUFBLENBQUEsRUFBQWhQLEdBQUEsQ0FBQSxVQUFBLENBQUEsTUFBQSxDQUFBLEVBQUEsU0FBQXdiLENBQUEsR0FBQWx6QixDQUFBLENBQUEsQ0FBQSxDQUFBLEtBQUEyNEIsT0FBQSxDQUFBNzRCLElBQUEsR0FBQS9ILElBQUEsQ0FBQSxVQUFBLENBQUEsR0FBQTlCLENBQUFBLENBQUEsQ0FBQWdtQixDQUFBLENBQUEsSUFBQSxDQUFBLENBQUFyUCxFQUFBLENBQUEsVUFBQSxDQUFBLENBQUEzVyxDQUFBLEVBQUFnbUIsQ0FBQSxDQUFBLElBQUEsQ0FBQSxDQUFBdkQsSUFBQSxFQUFBLENBQUExWSxDQUFBLENBQUFuRyxJQUFBLENBQUF3dUIsR0FBQSxDQUFBcm9CLENBQUEsQ0FBQWljLENBQUEsQ0FBQSxJQUFBLENBQUEsQ0FBQXZFLEdBQUEsQ0FBQSxRQUFBLENBQUEsRUFBQSxFQUFBZ1AsTUFBQSxFQUFBLENBQUEsQ0FBQXp3QixDQUFBLEVBQUFnbUIsQ0FBQSxDQUFBLElBQUEsQ0FBQSxDQUFBckQsSUFBQSxFQUFBLENBQUEsQ0FBQSxFQUFBOE4sTUFBQSxDQUFBMW1CLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBZ3lDLFNBQUEsQ0FBQSxtQkFBQWh5QyxDQUFBLENBQUEsQ0FBQSxHQUFBL0osQ0FBQUEsQ0FBQSxDQUFBLEtBQUFxOEMsV0FBQSxDQUFBdHlDLENBQUEsRUFBQSxDQUFBLENBQUEsQ0FBQS9KLENBQUEsR0FBQSxLQUFBZ2dDLE1BQUEsQ0FBQSxDQUFBLENBQUEsR0FBQWhnQyxDQUFBLENBQUFBLENBQUEsRUFBQSxLQUFBZ2dDLE1BQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxLQUFBa2MsYUFBQSxDQUFBLENBQUE3NEMsTUFBQSxDQUFBckQsQ0FBQSxDQUFBd25CLGFBQUEsQ0FBQXhuQixDQUFBLENBQUEybkIsY0FBQSxDQUFBM0IsQ0FBQSxDQUFBOWhCLElBQUEsQ0FBQSxDQUFBLEVBQUEsQ0FBQSxDQUFBbTRDLFdBQUEsQ0FBQSxxQkFBQXR5QyxDQUFBLENBQUEsQ0FBQSxNQUFBLFVBQUEsTUFBQUEsQ0FBQUEsQ0FBQSxDQUFBLEtBQUEyNEIsT0FBQSxDQUFBdGdDLEVBQUEsQ0FBQTJILENBQUEsQ0FBQSxDQUFBaWMsQ0FBQSxFQUFBLENBQUEsQ0FBQSxDQUFBZzJCLFlBQUEsQ0FBQSxzQkFBQWp5QyxDQUFBLENBQUEsQ0FBQSxHQUFBL0osQ0FBQUEsQ0FBQSxDQUFBLENBQUFzOEMsT0FBQSxDQUFBLFVBQUEsQ0FBQSxDQUFBdnlDLENBQUEsRUFBQWljLENBQUEsQ0FBQWxrQixJQUFBLENBQUFpSSxDQUFBLENBQUExRSxLQUFBLENBQUEsR0FBQSxDQUFBLENBQUEsU0FBQTJnQixDQUFBLENBQUFqYyxDQUFBLENBQUEsQ0FBQS9KLENBQUEsQ0FBQStKLENBQUEsQ0FBQSxDQUFBLGVBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxLQUFBMmxDLElBQUEsQ0FBQSxLQUFBaE4sT0FBQSxDQUFBdHFCLEdBQUEsQ0FBQSxLQUFBc3FCLE9BQUEsQ0FBQTc0QixJQUFBLEVBQUEsQ0FBQSxDQUFBLENBQUEsS0FBQTRrQyxHQUFBLENBQUEsS0FBQS9MLE9BQUEsQ0FBQTFpQyxDQUFBLENBQUEsQ0FBQSxLQUFBeXVDLEdBQUEsQ0FBQSxLQUFBL0wsT0FBQSxDQUFBNzRCLElBQUEsRUFBQSxDQUFBLENBQUF5eUMsT0FBQSxDQUFBLGVBQUEsQ0FBQSxDQUFBLENBQUEsS0FBQTFNLFVBQUEsQ0FBQSxLQUFBbE4sT0FBQSxDQUFBLENBQUEsS0FBQW1OLFVBQUEsQ0FBQSxLQUFBbk4sT0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBd1osYUFBQSxDQUFBLHVCQUFBbnlDLENBQUEsQ0FBQSxDQUFBLEdBQUEvSixDQUFBQSxDQUFBLENBQUFpOUIsQ0FBQSxDQUFBcG1CLENBQUEsQ0FBQSxLQUFBN1QsT0FBQSxDQUFBMnBDLENBQUEsQ0FBQSxLQUFBM00sTUFBQSxDQUFBOTRCLENBQUEsQ0FBQThlLENBQUEsQ0FBQWpjLENBQUEsQ0FBQXlkLGFBQUEsQ0FBQSxDQUFBdWxCLENBQUEsQ0FBQTdsQyxDQUFBLENBQUEsQ0FBQSxDQUFBLEdBQUF5bEMsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBUyxDQUFBLENBQUFMLENBQUEsRUFBQWwyQixDQUFBLENBQUErakMsV0FBQSxDQUFBNWlDLENBQUEsQ0FBQW8xQixDQUFBLENBQUFwbkIsQ0FBQSxFQUFBLENBQUE5ZSxDQUFBLENBQUEyQyxJQUFBLEVBQUEsQ0FBQTRsQyxDQUFBLENBQUE5QyxDQUFBLENBQUE5aUMsSUFBQSxFQUFBLENBQUFvbUMsQ0FBQSxDQUFBLENBQUFzTSxTQUFBLENBQUE1UCxDQUFBLENBQUE2UCxRQUFBLENBQUEvTSxDQUFBLENBQUFnTixTQUFBLENBQUFyUCxDQUFBLENBQUFwbkIsQ0FBQSxFQUFBLENBQUE5ZSxDQUFBLENBQUF3MUMsUUFBQSxDQUFBMWtDLENBQUEsQ0FBQSxDQUFBak8sQ0FBQSxDQUFBNGQsY0FBQSxHQUFBb2xCLENBQUEsRUFBQSxDQUFBbDJCLENBQUEsQ0FBQStqQyxXQUFBLEVBQUEsS0FBQTFOLFFBQUEsQ0FBQSxnQkFBQSxDQUFBbmpDLENBQUEsQ0FBQWttQyxDQUFBLElBQUEsQ0FBQSxDQUFBLEdBQUFwNUIsQ0FBQSxDQUFBbXBCLE1BQUEsQ0FBQW9OLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxLQUFBMUssT0FBQSxDQUFBeHFCLEtBQUEsQ0FBQWhSLENBQUEsQ0FBQSxDQUFBLEtBQUE4NEIsTUFBQSxDQUFBK00sQ0FBQSxDQUFBL21CLENBQUEsRUFBQSxDQUFBOWUsQ0FBQSxDQUFBLEtBQUF5MUMsT0FBQSxDQUFBMU0sQ0FBQSxDQUFBLENBQUEsS0FBQWpCLFlBQUEsQ0FBQXJDLENBQUEsQ0FBQSw0QkFBQSxDQUFBLGlCQUFBLENBQUEsQ0FBQTkxQixDQUFBLENBQUFra0MsS0FBQSxHQUFBLzZDLENBQUEsQ0FBQTJzQyxDQUFBLENBQUFoMUIsUUFBQSxDQUFBLDJCQUFBLENBQUEsQ0FBQSxLQUFBcTNCLFlBQUEsQ0FBQWh2QyxDQUFBLENBQUEsSUFBQSxDQUFBNlcsQ0FBQSxDQUFBa2tDLEtBQUEsQ0FBQUMsWUFBQSxFQUFBeEwsU0FBQSxDQUFBeHZDLENBQUEsQ0FBQSxJQUFBLENBQUE2VyxDQUFBLENBQUFra0MsS0FBQSxDQUFBRixNQUFBLENBQUEsQ0FBQSxDQUFBOU4sQ0FBQSxHQUFBLEtBQUFpQyxZQUFBLENBQUE5bkMsQ0FBQSxDQUFBLCtCQUFBLEVBQUFzb0MsU0FBQSxDQUFBdG9DLENBQUEsQ0FBQSw0QkFBQSxDQUFBLGlCQUFBLEVBQUEyUCxDQUFBLENBQUFra0MsS0FBQSxHQUFBOWQsQ0FBQSxDQUFBLzFCLENBQUEsQ0FBQXlRLFFBQUEsQ0FBQSwyQkFBQSxDQUFBLENBQUEsS0FBQXEzQixZQUFBLENBQUEvUixDQUFBLENBQUEsSUFBQSxDQUFBcG1CLENBQUEsQ0FBQWtrQyxLQUFBLENBQUFGLE1BQUEsRUFBQXJMLFNBQUEsQ0FBQXZTLENBQUEsQ0FBQSxJQUFBLENBQUFwbUIsQ0FBQSxDQUFBa2tDLEtBQUEsQ0FBQUMsWUFBQSxDQUFBLENBQUEsQ0FBQSxLQUFBeEwsU0FBQSxDQUFBdG9DLENBQUEsQ0FBQTJDLElBQUEsRUFBQSxDQUFBLDZCQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBOHlDLE9BQUEsQ0FBQSxpQkFBQTV5QyxDQUFBLENBQUEsQ0FBQSxHQUFBL0osQ0FBQUEsQ0FBQSxDQUFBK0osQ0FBQSxDQUFBMnlDLFFBQUEsQ0FBQXpmLENBQUEsQ0FBQSxLQUFBd2UsUUFBQSxDQUFBcDZDLE1BQUEsQ0FBQSxLQUFBbzZDLFFBQUEsQ0FBQTF4QyxDQUFBLENBQUF5eUMsUUFBQSxDQUFBLEtBQUFmLFFBQUEsQ0FBQXJqQyxHQUFBLENBQUEsS0FBQXNqQyxRQUFBLEVBQUFoN0IsSUFBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxFQUFBLEtBQUErNkIsUUFBQSxDQUFBejdDLENBQUEsQ0FBQSxLQUFBMDdDLFFBQUEsQ0FBQXplLENBQUEsQ0FBQSxLQUFBajZCLE9BQUEsQ0FBQXMxQixPQUFBLENBQUEsS0FBQXNrQixRQUFBLENBQUE1OEMsQ0FBQSxDQUFBaTlCLENBQUEsQ0FBQWx6QixDQUFBLENBQUEsRUFBQWt6QixDQUFBLENBQUF0YSxJQUFBLEdBQUEzaUIsQ0FBQSxDQUFBeWlCLElBQUEsRUFBQSxDQUFBLEtBQUFvNkIsZUFBQSxDQUFBOXlDLENBQUEsQ0FBQSxDQUFBLENBQUFrekIsQ0FBQSxDQUFBNXRCLElBQUEsQ0FBQSxDQUFBLGNBQUEsTUFBQSxDQUFBLENBQUEsQ0FBQTR0QixDQUFBLENBQUFwbEIsSUFBQSxHQUFBeEksSUFBQSxDQUFBLENBQUEsZ0JBQUEsT0FBQSxDQUFBLGdCQUFBLE9BQUEsQ0FBQSxDQUFBLENBQUFyUCxDQUFBLENBQUFxQixNQUFBLEVBQUE0N0IsQ0FBQSxDQUFBNTdCLE1BQUEsQ0FBQTQ3QixDQUFBLENBQUFwbEIsSUFBQSxHQUFBeEksSUFBQSxDQUFBLENBQUFrRCxRQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsZ0JBQUEsT0FBQSxDQUFBLENBQUEsQ0FBQXZTLENBQUEsQ0FBQXFCLE1BQUEsRUFBQSxLQUFBcWhDLE9BQUEsQ0FBQTkwQixNQUFBLENBQUEsVUFBQSxDQUFBLE1BQUEsS0FBQThpQixRQUFBLENBQUExSyxDQUFBLENBQUEsSUFBQSxDQUFBLENBQUEzVyxJQUFBLENBQUEsVUFBQSxDQUFBLENBQUEsRUFBQSxDQUFBLENBQUEsQ0FBQSxFQUFBQSxJQUFBLENBQUEsVUFBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUFyUCxDQUFBLENBQUFxUCxJQUFBLENBQUEsYUFBQSxDQUFBLE9BQUEsRUFBQXdJLElBQUEsR0FBQXhJLElBQUEsQ0FBQSxDQUFBLGdCQUFBLE1BQUEsQ0FBQSxnQkFBQSxNQUFBLENBQUFrRCxRQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUFxcUMsUUFBQSxDQUFBLGtCQUFBNTJCLENBQUEsQ0FBQWpjLENBQUEsQ0FBQS9KLENBQUEsQ0FBQSxDQUFBLEdBQUFpOUIsQ0FBQUEsQ0FBQSxDQUFBcG1CLENBQUEsQ0FBQTgxQixDQUFBLENBQUF6bEMsQ0FBQSxDQUFBLElBQUEsQ0FBQTZsQyxDQUFBLENBQUEsQ0FBQSxDQUFBSyxDQUFBLENBQUFwbkIsQ0FBQSxDQUFBdkUsR0FBQSxDQUFBLFlBQUEsQ0FBQSxDQUFBekosQ0FBQSxDQUFBZ08sQ0FBQSxDQUFBM2tCLE1BQUEsR0FBQSxDQUFBMEksQ0FBQSxDQUFBMUksTUFBQSxFQUFBMmtCLENBQUEsQ0FBQTlOLEtBQUEsR0FBQW5PLENBQUEsQ0FBQW1PLEtBQUEsRUFBQSxDQUFBLENBQUF1M0IsQ0FBQSxDQUFBLEtBQUF6c0MsT0FBQSxDQUFBczFCLE9BQUEsRUFBQSxFQUFBLENBQUEyWCxDQUFBLENBQUFqNEIsQ0FBQSxFQUFBeTNCLENBQUEsQ0FBQTRJLElBQUEsRUFBQTVJLENBQUEsQ0FBQVksQ0FBQSxDQUFBLFFBQUFBLENBQUFBLENBQUEsRUFBQSxDQUFBbnBDLENBQUEsQ0FBQTIxQyxlQUFBLENBQUE3OEMsQ0FBQSxFQUFBLENBQUEsQ0FBQSxNQUFBLFVBQUEsTUFBQWl3QyxDQUFBQSxDQUFBLEdBQUF0RCxDQUFBLENBQUFzRCxDQUFBLEVBQUEsVUFBQSxNQUFBQSxDQUFBQSxDQUFBLEdBQUFwNUIsQ0FBQSxDQUFBbzVCLENBQUEsQ0FBQSxDQUFBcDVCLENBQUEsQ0FBQUEsQ0FBQSxFQUFBbzVCLENBQUEsQ0FBQTViLE1BQUEsRUFBQW9iLENBQUEsQ0FBQXBiLE1BQUEsQ0FBQXNZLENBQUEsQ0FBQUEsQ0FBQSxFQUFBc0QsQ0FBQSxDQUFBdmIsUUFBQSxFQUFBK2EsQ0FBQSxDQUFBL2EsUUFBQSxDQUFBM3FCLENBQUEsQ0FBQTFJLE1BQUEsQ0FBQTJrQixDQUFBLENBQUEza0IsTUFBQSxFQUFBNDdCLENBQUEsQ0FBQWpYLENBQUEsQ0FBQXZELElBQUEsR0FBQTB0QixXQUFBLEVBQUEsQ0FBQXBtQyxDQUFBLENBQUF1dUIsT0FBQSxDQUFBLEtBQUE2aUIsU0FBQSxDQUFBLENBQUF6bUIsUUFBQSxDQUFBaVksQ0FBQSxDQUFBdFksTUFBQSxDQUFBeGQsQ0FBQSxDQUFBK2QsSUFBQSxDQUFBLGNBQUE1TyxDQUFBLENBQUFqYyxDQUFBLENBQUEsQ0FBQUEsQ0FBQSxDQUFBd2YsR0FBQSxDQUFBM2xCLElBQUEsQ0FBQStyQixLQUFBLENBQUEzSixDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBQSxDQUFBLENBQUFyRCxJQUFBLEdBQUEyVixPQUFBLENBQUEsS0FBQWtqQixTQUFBLENBQUEsQ0FBQTltQixRQUFBLENBQUFpWSxDQUFBLENBQUF0WSxNQUFBLENBQUF4ZCxDQUFBLENBQUFnaEIsUUFBQSxDQUFBd1ksQ0FBQSxDQUFBemIsSUFBQSxDQUFBLGNBQUE1TyxDQUFBLENBQUFobUIsQ0FBQSxDQUFBLENBQUFBLENBQUEsQ0FBQXVwQixHQUFBLENBQUEzbEIsSUFBQSxDQUFBK3JCLEtBQUEsQ0FBQTNKLENBQUEsQ0FBQSxDQUFBLFdBQUFobUIsQ0FBQSxDQUFBeWYsSUFBQSxDQUFBLGdCQUFBMnRCLENBQUEsR0FBQUwsQ0FBQSxFQUFBL3NDLENBQUEsQ0FBQXVwQixHQUFBLENBQUEsQ0FBQSxZQUFBcmlCLENBQUEsQ0FBQWxFLE9BQUEsQ0FBQTgzQyxXQUFBLEdBQUE5NkMsQ0FBQSxDQUFBdXBCLEdBQUEsQ0FBQTNsQixJQUFBLENBQUErckIsS0FBQSxDQUFBc04sQ0FBQSxDQUFBbHpCLENBQUEsQ0FBQW9tQyxXQUFBLEVBQUEsQ0FBQXBELENBQUEsQ0FBQSxDQUFBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxJQUFBLEVBQUEsRUFBQWhqQyxDQUFBLENBQUF1dUIsT0FBQSxDQUFBLEtBQUE2aUIsU0FBQSxDQUFBeE8sQ0FBQSxDQUFBOTFCLENBQUEsQ0FBQXc1QixDQUFBLENBQUEsQ0FBQXJxQixDQUFBLENBQUFzUyxPQUFBLENBQUEsS0FBQWtqQixTQUFBLENBQUE3TyxDQUFBLENBQUE5MUIsQ0FBQSxDQUFBdzVCLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQXdNLGVBQUEsQ0FBQSx5QkFBQTcyQixDQUFBLENBQUEsQ0FBQSxHQUFBamMsQ0FBQUEsQ0FBQSxDQUFBaWMsQ0FBQSxDQUFBdzJCLFFBQUEsQ0FBQXg4QyxDQUFBLENBQUErSixDQUFBLENBQUE4TixJQUFBLEVBQUEsQ0FBQSxLQUFBbTNCLFlBQUEsQ0FBQWpsQyxDQUFBLENBQUEsNkJBQUEsRUFBQSxLQUFBaWxDLFlBQUEsQ0FBQWh2QyxDQUFBLENBQUEsNEJBQUEsRUFBQXd2QyxTQUFBLENBQUF4dkMsQ0FBQSxDQUFBLCtCQUFBLENBQUEsQ0FBQStKLENBQUEsQ0FBQTFJLE1BQUEsR0FBQTBJLENBQUEsQ0FBQXNILE1BQUEsR0FBQSxDQUFBLEVBQUE3RCxTQUFBLENBQUF6RCxDQUFBLENBQUFzSCxNQUFBLEdBQUEsQ0FBQSxFQUFBN0QsU0FBQSxDQUFBLENBQUEsS0FBQTAvQixRQUFBLENBQUEsVUFBQSxDQUFBLElBQUEsQ0FBQWxuQixDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBQSxDQUFBLENBQUFtbkIsRUFBQSxDQUFBOW5CLGlCQUFBLENBQUEsU0FBQVcsQ0FBQSxDQUFBLENBQUEsR0FBQWpjLENBQUFBLENBQUEsQ0FBQSxHQUFBLENBQUFBLENBQUEsQ0FBQWljLENBQUEsQ0FBQTVULGFBQUEsQ0FBQSxPQUFBcFMsQ0FBQSxDQUFBLENBQUErSixDQUFBLENBQUFpYyxDQUFBLENBQUF6RCxJQUFBLENBQUEsT0FBQXhZLENBQUFBLENBQUEsR0FBQUEsQ0FBQSxDQUFBaWMsQ0FBQSxDQUFBekQsSUFBQSxDQUFBLENBQUF4WSxDQUFBLENBQUFKLFFBQUEsR0FBQUksQ0FBQSxDQUFBaWMsQ0FBQSxDQUFBekQsSUFBQSxDQUFBLENBQUF4WSxDQUFBLENBQUEsQ0FBQSxDQUFBaWMsQ0FBQSxDQUFBcW5CLE1BQUEsQ0FBQSxTQUFBLENBQUEsQ0FBQXpzQyxPQUFBLENBQUEsUUFBQSxDQUFBc3RDLGNBQUEsQ0FBQSxNQUFBLENBQUE3VSxLQUFBLENBQUEsR0FBQSxDQUFBcjJCLE9BQUEsQ0FBQSxDQUFBKzNDLEtBQUEsQ0FBQSxDQUFBK0IsT0FBQSxDQUFBLG1CQUFBLENBQUEsQ0FBQUMsS0FBQSxDQUFBLEtBQUEsQ0FBQUMsS0FBQSxDQUFBLElBQUEsQ0FBQXp0QixRQUFBLENBQUEsQ0FBQWtpQixFQUFBLENBQUEsVUFBQSxDQUFBTCxFQUFBLENBQUEsV0FBQSxDQUFBLENBQUE2TCxJQUFBLENBQUEsTUFBQSxDQUFBNXhCLElBQUEsQ0FBQSxJQUFBLENBQUFELEtBQUEsQ0FBQSxJQUFBLENBQUF0bEIsTUFBQSxDQUFBLElBQUEsQ0FBQSxDQUFBOG9DLE9BQUEsQ0FBQSxrQkFBQSxDQUFBLEtBQUFzTyxVQUFBLENBQUEsS0FBQWxRLE9BQUEsQ0FBQSxLQUFBbVEsWUFBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLEtBQUFuUSxPQUFBLENBQUEwTixRQUFBLEdBQUFyckMsSUFBQSxDQUFBLENBQUE0dEMsSUFBQSxDQUFBLEtBQUFqNkMsT0FBQSxDQUFBaTZDLElBQUEsQ0FBQTFxQyxRQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxLQUFBaTlCLFNBQUEsQ0FBQSxTQUFBLENBQUEsNkJBQUEsQ0FBQSxDQUFBLEtBQUFmLEdBQUEsQ0FBQSxDQUFBLDBCQUFBLDZCQUFBem9CLENBQUEsQ0FBQSxDQUFBQSxDQUFBLENBQUEyQixjQUFBLEdBQUEsQ0FBQSxDQUFBLHNCQUFBLHlCQUFBNWQsQ0FBQSxDQUFBLENBQUEsR0FBQS9KLENBQUFBLENBQUEsQ0FBQWdtQixDQUFBLENBQUFqYyxDQUFBLENBQUExRyxNQUFBLENBQUEsQ0FBQTQ1QixDQUFBLENBQUFqWCxDQUFBLENBQUFBLENBQUEsQ0FBQW1uQixFQUFBLENBQUE5bkIsaUJBQUEsQ0FBQSxLQUFBMW5CLFFBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxLQUFBdy9DLFlBQUEsRUFBQW45QyxDQUFBLENBQUFtWCxHQUFBLENBQUEsb0JBQUEsRUFBQTlWLE1BQUEsR0FBQSxLQUFBeUUsTUFBQSxDQUFBaUUsQ0FBQSxFQUFBQSxDQUFBLENBQUF3ZCxvQkFBQSxLQUFBLEtBQUE0MUIsWUFBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUFuOUMsQ0FBQSxDQUFBOFgsR0FBQSxDQUFBLFVBQUEsRUFBQXpXLE1BQUEsQ0FBQSxLQUFBNHlCLE1BQUEsQ0FBQWxxQixDQUFBLENBQUEsQ0FBQSxDQUFBLEtBQUFpakMsT0FBQSxDQUFBcjJCLEVBQUEsQ0FBQSxRQUFBLENBQUEsRUFBQXNtQixDQUFBLENBQUFobEIsT0FBQSxDQUFBLFVBQUEsRUFBQTVXLE1BQUEsR0FBQSxLQUFBMnJDLE9BQUEsQ0FBQXJrQixPQUFBLENBQUEsT0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsRUFBQSxLQUFBcVgsTUFBQSxFQUFBLElBQUEsS0FBQUEsTUFBQSxDQUFBem5CLE9BQUEsQ0FBQSxVQUFBLEVBQUFsWCxNQUFBLEVBQUFtNEIsWUFBQSxDQUFBLEtBQUExQixLQUFBLENBQUEsQ0FBQSxFQUFBLENBQUEsQ0FBQSwyQkFBQSw4QkFBQS90QixDQUFBLENBQUEsQ0FBQSxHQUFBLENBQUEsS0FBQXF6QyxjQUFBLENBQUEsQ0FBQSxHQUFBcDlDLENBQUFBLENBQUEsQ0FBQWdtQixDQUFBLENBQUFqYyxDQUFBLENBQUExRyxNQUFBLENBQUEsQ0FBQTRVLE9BQUEsQ0FBQSxlQUFBLENBQUEsQ0FBQWdsQixDQUFBLENBQUFqWCxDQUFBLENBQUFqYyxDQUFBLENBQUF5ZCxhQUFBLENBQUEsQ0FBQXhuQixDQUFBLENBQUEsQ0FBQSxDQUFBLEdBQUFpOUIsQ0FBQSxDQUFBLENBQUEsQ0FBQSxHQUFBLEtBQUErUixZQUFBLENBQUEvUixDQUFBLENBQUFybUIsUUFBQSxHQUFBZSxRQUFBLENBQUEsa0JBQUEsQ0FBQSxDQUFBLElBQUEsQ0FBQSxpQkFBQSxFQUFBLEtBQUF5VCxLQUFBLENBQUFyaEIsQ0FBQSxDQUFBa3pCLENBQUEsQ0FBQSxFQUFBLENBQUEsQ0FBQSxDQUFBMVIsVUFBQSxDQUFBLGFBQUEsQ0FBQSxzQkFBQSxhQUFBLENBQUFILEtBQUEsQ0FBQSxlQUFBcEYsQ0FBQSxDQUFBamMsQ0FBQSxDQUFBLENBQUEsR0FBQS9KLENBQUFBLENBQUEsQ0FBQSxLQUFBZ2dDLE1BQUEsRUFBQSxLQUFBZ04sT0FBQSxDQUFBbC9CLElBQUEsQ0FBQSxLQUFBOUssT0FBQSxDQUFBKzVDLEtBQUEsRUFBQTM2QyxFQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEySCxDQUFBLEVBQUEsS0FBQXFoQixLQUFBLENBQUFwRixDQUFBLENBQUFobUIsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBcXJCLElBQUEsQ0FBQSxjQUFBdGhCLENBQUEsQ0FBQSxDQUFBLEtBQUE0bEMsTUFBQSxDQUFBLFVBQUEsQ0FBQSxHQUFBM3ZDLENBQUFBLENBQUEsQ0FBQSxDQUFBZ21CLENBQUEsQ0FBQXpmLFFBQUEsQ0FBQSxLQUFBeW1DLE9BQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQWhuQixDQUFBLENBQUFtbkIsRUFBQSxDQUFBOW5CLGlCQUFBLENBQUEsS0FBQTFuQixRQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBcUMsQ0FBQSxFQUFBLEtBQUFxOUMsV0FBQSxDQUFBdHpDLENBQUEsQ0FBQSxDQUFBLENBQUEsRUFBQSxDQUFBLENBQUF1eUMsT0FBQSxDQUFBLFVBQUEsQ0FBQSxDQUFBLENBQUEsS0FBQW5ELE9BQUEsRUFBQSxDQUFBLEtBQUExSyxHQUFBLENBQUEsS0FBQTl3QyxRQUFBLENBQUEsQ0FBQThxQixLQUFBLENBQUEsZUFBQXpDLENBQUEsQ0FBQSxDQUFBLEtBQUFzM0IscUJBQUEsQ0FBQXQzQixDQUFBLEdBQUEsS0FBQXEzQixXQUFBLENBQUFyM0IsQ0FBQSxDQUFBLENBQUEsS0FBQW0zQixZQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUFwTyxRQUFBLENBQUEsbUJBQUEsQ0FBQSxHQUFBaGxDLENBQUFBLENBQUEsQ0FBQSxLQUFBaWpDLE9BQUEsQ0FBQWwvQixJQUFBLENBQUEsZUFBQSxFQUFBK3JCLFVBQUEsQ0FBQSxvQkFBQSxDQUFBLENBQUE3NUIsQ0FBQSxDQUFBK0osQ0FBQSxDQUFBNE4sUUFBQSxDQUFBLHVCQUFBLEVBQUFnakMsY0FBQSxHQUFBOWdCLFVBQUEsQ0FBQSw2QkFBQSxDQUFBLENBQUEsS0FBQW1ULE9BQUEsQ0FBQW5ULFVBQUEsQ0FBQSx1QkFBQSxFQUFBL3JCLElBQUEsQ0FBQSxVQUFBLEVBQUF1SyxPQUFBLEdBQUF3aEIsVUFBQSxDQUFBLHVFQUFBLEVBQUE4Z0IsY0FBQSxHQUFBbDRCLElBQUEsR0FBQXppQixDQUFBLENBQUEyWCxRQUFBLEdBQUE3VixJQUFBLENBQUEsVUFBQSxDQUFBLEdBQUFpSSxDQUFBQSxDQUFBLENBQUFpYyxDQUFBLENBQUEsSUFBQSxDQUFBLENBQUFqYyxDQUFBLENBQUF5VixJQUFBLENBQUEsdUJBQUEsR0FBQXpWLENBQUEsQ0FBQStQLE1BQUEsRUFBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQW1pQyxRQUFBLENBQUEsa0JBQUFseUMsQ0FBQSxDQUFBLENBQUEsR0FBQS9KLENBQUFBLENBQUEsQ0FBQWk5QixDQUFBLENBQUFwbUIsQ0FBQSxDQUFBODFCLENBQUEsQ0FBQXpsQyxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsT0FBQTZDLENBQUEsQ0FBQXVnQixPQUFBLEVBQUEsSUFBQXRFLENBQUFBLENBQUEsQ0FBQW1uQixFQUFBLENBQUE3aUIsT0FBQSxDQUFBMnZCLE9BQUEsQ0FBQSxLQUFBc0QsWUFBQSxDQUFBeHpDLENBQUEsRUFBQSxNQUFBLElBQUFpYyxDQUFBQSxDQUFBLENBQUFtbkIsRUFBQSxDQUFBN2lCLE9BQUEsQ0FBQTB2QixTQUFBLENBQUEsS0FBQXdELFFBQUEsQ0FBQXp6QyxDQUFBLEVBQUEsTUFBQSxJQUFBaWMsQ0FBQUEsQ0FBQSxDQUFBbW5CLEVBQUEsQ0FBQTdpQixPQUFBLENBQUF3dkIsSUFBQSxDQUFBLEtBQUEyRCxLQUFBLENBQUEsT0FBQSxDQUFBLE9BQUEsQ0FBQTF6QyxDQUFBLEVBQUEsTUFBQSxJQUFBaWMsQ0FBQUEsQ0FBQSxDQUFBbW5CLEVBQUEsQ0FBQTdpQixPQUFBLENBQUFxdkIsR0FBQSxDQUFBLEtBQUE4RCxLQUFBLENBQUEsTUFBQSxDQUFBLE1BQUEsQ0FBQTF6QyxDQUFBLEVBQUEsTUFBQSxJQUFBaWMsQ0FBQUEsQ0FBQSxDQUFBbW5CLEVBQUEsQ0FBQTdpQixPQUFBLENBQUFnd0IsRUFBQSxDQUFBLEtBQUFvRCxRQUFBLENBQUEzekMsQ0FBQSxFQUFBLE1BQUEsSUFBQWljLENBQUFBLENBQUEsQ0FBQW1uQixFQUFBLENBQUE3aUIsT0FBQSxDQUFBb3ZCLElBQUEsQ0FBQSxLQUFBN3ZDLElBQUEsQ0FBQUUsQ0FBQSxFQUFBLE1BQUEsSUFBQWljLENBQUFBLENBQUEsQ0FBQW1uQixFQUFBLENBQUE3aUIsT0FBQSxDQUFBeXZCLElBQUEsQ0FBQSxLQUFBNEQsUUFBQSxDQUFBNXpDLENBQUEsRUFBQSxNQUFBLElBQUFpYyxDQUFBQSxDQUFBLENBQUFtbkIsRUFBQSxDQUFBN2lCLE9BQUEsQ0FBQTZ2QixLQUFBLENBQUEsS0FBQW5hLE1BQUEsRUFBQSxDQUFBLEtBQUFBLE1BQUEsQ0FBQXJwQixFQUFBLENBQUEsb0JBQUEsQ0FBQSxFQUFBLEtBQUFzZCxNQUFBLENBQUFscUIsQ0FBQSxDQUFBLENBQUEsTUFBQSxJQUFBaWMsQ0FBQUEsQ0FBQSxDQUFBbW5CLEVBQUEsQ0FBQTdpQixPQUFBLENBQUFzdkIsS0FBQSxDQUFBLElBQUE1ekIsQ0FBQUEsQ0FBQSxDQUFBbW5CLEVBQUEsQ0FBQTdpQixPQUFBLENBQUE4dkIsS0FBQSxDQUFBLEtBQUEyQixTQUFBLENBQUFoeUMsQ0FBQSxFQUFBLE1BQUEsSUFBQWljLENBQUFBLENBQUEsQ0FBQW1uQixFQUFBLENBQUE3aUIsT0FBQSxDQUFBdXZCLE1BQUEsQ0FBQSxLQUFBOEQsUUFBQSxDQUFBNXpDLENBQUEsRUFBQSxNQUFBLFFBQUE3QyxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUErMUIsQ0FBQSxDQUFBLEtBQUFtZ0IsY0FBQSxFQUFBLEVBQUEsQ0FBQXpRLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQTkxQixDQUFBLENBQUE5TSxDQUFBLENBQUF1Z0IsT0FBQSxFQUFBLEVBQUEsRUFBQSxLQUFBdmdCLENBQUEsQ0FBQXVnQixPQUFBLENBQUEsSUFBQXZnQixDQUFBLENBQUF1Z0IsT0FBQSxDQUFBLEVBQUEsQ0FBQSxDQUFBdGhCLE1BQUEsQ0FBQUMsWUFBQSxDQUFBYyxDQUFBLENBQUF1Z0IsT0FBQSxDQUFBLENBQUFrUCxZQUFBLENBQUEsS0FBQW9rQixXQUFBLENBQUEsQ0FBQS9tQyxDQUFBLEdBQUFvbUIsQ0FBQSxDQUFBMFAsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBOTFCLENBQUEsQ0FBQW9tQixDQUFBLENBQUFwbUIsQ0FBQSxDQUFBN1csQ0FBQSxDQUFBLEtBQUE2OUMsZ0JBQUEsQ0FBQWhuQyxDQUFBLENBQUEsQ0FBQTdXLENBQUEsQ0FBQTJzQyxDQUFBLEVBQUEsQ0FBQSxDQUFBLEdBQUEzc0MsQ0FBQSxDQUFBa1ksS0FBQSxDQUFBLEtBQUE4bkIsTUFBQSxDQUFBbjJCLElBQUEsRUFBQSxDQUFBLENBQUEsS0FBQW0yQixNQUFBLENBQUF2bkIsT0FBQSxDQUFBLGVBQUEsQ0FBQSxDQUFBelksQ0FBQSxDQUFBQSxDQUFBLENBQUFxQixNQUFBLEdBQUF3VixDQUFBLENBQUE3TixNQUFBLENBQUFDLFlBQUEsQ0FBQWMsQ0FBQSxDQUFBdWdCLE9BQUEsQ0FBQSxDQUFBdHFCLENBQUEsQ0FBQSxLQUFBNjlDLGdCQUFBLENBQUFobkMsQ0FBQSxDQUFBLENBQUEsQ0FBQTdXLENBQUEsQ0FBQXFCLE1BQUEsRUFBQSxLQUFBK3BCLEtBQUEsQ0FBQXJoQixDQUFBLENBQUEvSixDQUFBLEVBQUEsS0FBQW85QyxjQUFBLENBQUF2bUMsQ0FBQSxDQUFBLEtBQUErbUMsV0FBQSxDQUFBLEtBQUFqTyxNQUFBLENBQUEsVUFBQSxDQUFBLE1BQUEsTUFBQXlOLGNBQUEsQ0FBQSxDQUFBLENBQUEsR0FBQSxDQUFBLEVBQUEsTUFBQSxNQUFBQSxjQUFBLENBQUEsQ0FBQWwyQyxDQUFBLEVBQUE2QyxDQUFBLENBQUE0ZCxjQUFBLEVBQUEsQ0FBQSxDQUFBLENBQUFvMEIsU0FBQSxDQUFBLG1CQUFBLzFCLENBQUEsQ0FBQSxDQUFBLEtBQUFnYSxNQUFBLEVBQUEsQ0FBQSxLQUFBQSxNQUFBLENBQUFycEIsRUFBQSxDQUFBLG9CQUFBLENBQUEsR0FBQSxLQUFBcXBCLE1BQUEsQ0FBQXJvQixRQUFBLENBQUEsd0JBQUEsRUFBQXRXLE1BQUEsQ0FBQSxLQUFBNHlCLE1BQUEsQ0FBQWpPLENBQUEsQ0FBQSxDQUFBLEtBQUFsZ0IsTUFBQSxDQUFBa2dCLENBQUEsQ0FBQSxFQUFBLENBQUEsQ0FBQW16QixPQUFBLENBQUEsa0JBQUEsQ0FBQSxHQUFBcHZDLENBQUFBLENBQUEsQ0FBQS9KLENBQUEsQ0FBQWk5QixDQUFBLENBQUFwbUIsQ0FBQSxDQUFBODFCLENBQUEsQ0FBQXpsQyxDQUFBLENBQUEsSUFBQSxDQUFBNmxDLENBQUEsQ0FBQSxLQUFBL3BDLE9BQUEsQ0FBQSszQyxLQUFBLENBQUErQixPQUFBLENBQUExUCxDQUFBLENBQUEsS0FBQUosT0FBQSxDQUFBbC9CLElBQUEsQ0FBQSxLQUFBOUssT0FBQSxDQUFBZzZDLEtBQUEsQ0FBQSxDQUFBLEtBQUEzTixZQUFBLENBQUEsZUFBQSxDQUFBLElBQUEsQ0FBQSxDQUFBLENBQUEsS0FBQXJDLE9BQUEsQ0FBQWwvQixJQUFBLENBQUEsVUFBQSxFQUFBek0sTUFBQSxFQUFBNDdCLENBQUEsQ0FBQW1RLENBQUEsQ0FBQXgvQixNQUFBLENBQUEsZ0JBQUEsRUFBQStVLElBQUEsR0FBQXRULElBQUEsQ0FBQSxDQUFBNHRDLElBQUEsQ0FBQSxLQUFBajZDLE9BQUEsQ0FBQWk2QyxJQUFBLENBQUEsY0FBQSxNQUFBLENBQUEsZ0JBQUEsT0FBQSxDQUFBLEVBQUFuN0MsSUFBQSxDQUFBLFVBQUEsQ0FBQSxHQUFBaUksQ0FBQUEsQ0FBQSxDQUFBaWMsQ0FBQSxDQUFBLElBQUEsQ0FBQSxDQUFBaG1CLENBQUEsQ0FBQStKLENBQUEsQ0FBQThOLElBQUEsRUFBQSxDQUFBb2xCLENBQUEsQ0FBQWpYLENBQUEsQ0FBQSxRQUFBLENBQUEsQ0FBQXhHLElBQUEsQ0FBQSx1QkFBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUF0WSxDQUFBLENBQUFzb0MsU0FBQSxDQUFBdlMsQ0FBQSxDQUFBLGNBQUEsQ0FBQSxXQUFBOFAsQ0FBQSxFQUFBL3NDLENBQUEsQ0FBQXFQLElBQUEsQ0FBQSxlQUFBLENBQUEsTUFBQSxFQUFBbWUsT0FBQSxDQUFBeVAsQ0FBQSxDQUFBLENBQUFsekIsQ0FBQSxDQUFBc0YsSUFBQSxDQUFBLGlCQUFBLENBQUFyUCxDQUFBLENBQUFxUCxJQUFBLENBQUEsSUFBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxLQUFBbWdDLFNBQUEsQ0FBQXZTLENBQUEsQ0FBQSxTQUFBLENBQUEsc0NBQUEsQ0FBQSxDQUFBbHpCLENBQUEsQ0FBQXFqQyxDQUFBLENBQUFoMUIsR0FBQSxDQUFBLEtBQUE0MEIsT0FBQSxDQUFBLENBQUFodEMsQ0FBQSxDQUFBK0osQ0FBQSxDQUFBK0QsSUFBQSxDQUFBLEtBQUE5SyxPQUFBLENBQUErNUMsS0FBQSxDQUFBLENBQUEvOEMsQ0FBQSxDQUFBbVgsR0FBQSxDQUFBLGVBQUEsRUFBQXJWLElBQUEsQ0FBQSxVQUFBLENBQUEsR0FBQWlJLENBQUFBLENBQUEsQ0FBQWljLENBQUEsQ0FBQSxJQUFBLENBQUEsQ0FBQTllLENBQUEsQ0FBQTQyQyxVQUFBLENBQUEvekMsQ0FBQSxHQUFBN0MsQ0FBQSxDQUFBc29DLFNBQUEsQ0FBQXpsQyxDQUFBLENBQUEsaUJBQUEsQ0FBQSxtQkFBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUE4TSxDQUFBLENBQUE3VyxDQUFBLENBQUFtWCxHQUFBLENBQUEsaUNBQUEsQ0FBQSxDQUFBdzFCLENBQUEsQ0FBQTkxQixDQUFBLENBQUFjLFFBQUEsR0FBQVIsR0FBQSxDQUFBLFVBQUEsRUFBQXVqQyxRQUFBLEdBQUFyckMsSUFBQSxDQUFBLENBQUFrRCxRQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEwcUMsSUFBQSxDQUFBLEtBQUFjLFNBQUEsRUFBQSxDQUFBLENBQUEsQ0FBQSxLQUFBdk8sU0FBQSxDQUFBMzRCLENBQUEsQ0FBQSxjQUFBLEVBQUEyNEIsU0FBQSxDQUFBN0MsQ0FBQSxDQUFBLHNCQUFBLENBQUEsQ0FBQTNzQyxDQUFBLENBQUE0TixNQUFBLENBQUEsb0JBQUEsRUFBQXlCLElBQUEsQ0FBQSxlQUFBLENBQUEsTUFBQSxDQUFBLENBQUEsS0FBQTJ3QixNQUFBLEVBQUEsQ0FBQWhhLENBQUEsQ0FBQXpmLFFBQUEsQ0FBQSxLQUFBeW1DLE9BQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxLQUFBaE4sTUFBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLEVBQUEsS0FBQTNVLElBQUEsRUFBQSxDQUFBLENBQUEsQ0FBQTB5QixTQUFBLENBQUEsb0JBQUEsQ0FBQSxNQUFBLENBQUFDLElBQUEsQ0FBQSxVQUFBLENBQUFDLE9BQUEsQ0FBQSxRQUFBLEVBQUEsS0FBQWo3QyxPQUFBLENBQUFpNkMsSUFBQSxDQUFBLENBQUEsQ0FBQSxDQUFBL04sVUFBQSxDQUFBLG9CQUFBbHBCLENBQUEsQ0FBQWpjLENBQUEsQ0FBQSxDQUFBLEdBQUEsVUFBQWljLENBQUEsQ0FBQSxDQUFBLEdBQUFobUIsQ0FBQUEsQ0FBQSxDQUFBLEtBQUFndEMsT0FBQSxDQUFBbC9CLElBQUEsQ0FBQSxlQUFBLENBQUEsQ0FBQSxLQUFBa2hDLFlBQUEsQ0FBQWh2QyxDQUFBLENBQUEsSUFBQSxDQUFBLEtBQUFnRCxPQUFBLENBQUErM0MsS0FBQSxDQUFBK0IsT0FBQSxFQUFBdE4sU0FBQSxDQUFBeHZDLENBQUEsQ0FBQSxJQUFBLENBQUErSixDQUFBLENBQUEreUMsT0FBQSxFQUFBLE1BQUFwUCxNQUFBLENBQUExbkIsQ0FBQSxDQUFBamMsQ0FBQSxFQUFBLENBQUEsQ0FBQThrQyxrQkFBQSxDQUFBLDRCQUFBN29CLENBQUEsQ0FBQSxDQUFBLEtBQUEwbkIsTUFBQSxDQUFBMW5CLENBQUEsRUFBQSxLQUFBZ25CLE9BQUEsQ0FBQTM5QixJQUFBLENBQUEsZUFBQSxDQUFBMlcsQ0FBQSxDQUFBLEVBQUEsQ0FBQSxDQUFBLEtBQUFxcEIsWUFBQSxDQUFBLElBQUEsQ0FBQSxtQkFBQSxDQUFBLENBQUEsQ0FBQXJwQixDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUFvRixLQUFBLENBQUEsZUFBQXBGLENBQUEsQ0FBQWpjLENBQUEsQ0FBQSxDQUFBLEdBQUEvSixDQUFBQSxDQUFBLENBQUFpOUIsQ0FBQSxDQUFBcG1CLENBQUEsQ0FBQSxLQUFBd1UsSUFBQSxDQUFBckYsQ0FBQSxDQUFBQSxDQUFBLEVBQUEsVUFBQUEsQ0FBQSxDQUFBeG1CLElBQUEsRUFBQSxLQUFBMCtDLGVBQUEsQ0FBQW4wQyxDQUFBLENBQUEsQ0FBQSxLQUFBaTJCLE1BQUEsQ0FBQWoyQixDQUFBLENBQUE1SCxLQUFBLEVBQUEsQ0FBQTg2QixDQUFBLENBQUEsS0FBQStDLE1BQUEsQ0FBQXJvQixRQUFBLENBQUEsdUJBQUEsQ0FBQSxDQUFBLEtBQUE2M0IsU0FBQSxDQUFBdlMsQ0FBQSxDQUFBLElBQUEsQ0FBQSxpQkFBQSxDQUFBLENBQUEsS0FBQWo2QixPQUFBLENBQUFpNkMsSUFBQSxFQUFBLEtBQUFqUSxPQUFBLENBQUEzOUIsSUFBQSxDQUFBLHVCQUFBLENBQUE0dEIsQ0FBQSxDQUFBNXRCLElBQUEsQ0FBQSxJQUFBLENBQUEsQ0FBQSxDQUFBd0gsQ0FBQSxDQUFBLEtBQUFtcEIsTUFBQSxDQUFBM3VCLE1BQUEsR0FBQTRHLE9BQUEsQ0FBQSxlQUFBLEVBQUFOLFFBQUEsQ0FBQSx1QkFBQSxDQUFBLENBQUEsS0FBQTYzQixTQUFBLENBQUEzNEIsQ0FBQSxDQUFBLElBQUEsQ0FBQSxpQkFBQSxDQUFBLENBQUFtUCxDQUFBLEVBQUEsWUFBQUEsQ0FBQSxDQUFBeG1CLElBQUEsQ0FBQSxLQUFBMitDLE1BQUEsRUFBQSxDQUFBLEtBQUFybUIsS0FBQSxDQUFBLEtBQUE2WCxNQUFBLENBQUEsVUFBQSxDQUFBLEtBQUF3TyxNQUFBLEdBQUEsQ0FBQSxDQUFBLEtBQUE5a0IsS0FBQSxDQUFBLENBQUFyNUIsQ0FBQSxDQUFBK0osQ0FBQSxDQUFBNE4sUUFBQSxDQUFBLFVBQUEsQ0FBQSxDQUFBM1gsQ0FBQSxDQUFBcUIsTUFBQSxFQUFBMmtCLENBQUEsRUFBQSxTQUFBamIsSUFBQSxDQUFBaWIsQ0FBQSxDQUFBeG1CLElBQUEsQ0FBQSxFQUFBLEtBQUE0K0MsYUFBQSxDQUFBcCtDLENBQUEsQ0FBQSxDQUFBLEtBQUFrOUMsVUFBQSxDQUFBbnpDLENBQUEsQ0FBQXNILE1BQUEsRUFBQSxDQUFBLEtBQUE2N0IsUUFBQSxDQUFBLE9BQUEsQ0FBQWxuQixDQUFBLENBQUEsQ0FBQXE0QixJQUFBLENBQUF0MEMsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUFtMEMsZUFBQSxDQUFBLHlCQUFBbjBDLENBQUEsQ0FBQSxDQUFBLEdBQUEvSixDQUFBQSxDQUFBLENBQUFpOUIsQ0FBQSxDQUFBcG1CLENBQUEsQ0FBQTgxQixDQUFBLENBQUF6bEMsQ0FBQSxDQUFBNmxDLENBQUEsQ0FBQSxLQUFBdVIsVUFBQSxLQUFBdCtDLENBQUEsQ0FBQTR2QixVQUFBLENBQUE1SixDQUFBLENBQUF2RSxHQUFBLENBQUEsS0FBQXk3QixVQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsZ0JBQUEsQ0FBQSxDQUFBLEVBQUEsQ0FBQSxDQUFBamdCLENBQUEsQ0FBQXJOLFVBQUEsQ0FBQTVKLENBQUEsQ0FBQXZFLEdBQUEsQ0FBQSxLQUFBeTdCLFVBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxZQUFBLENBQUEsQ0FBQSxFQUFBLENBQUEsQ0FBQXJtQyxDQUFBLENBQUE5TSxDQUFBLENBQUE4N0IsTUFBQSxHQUFBeDRCLEdBQUEsQ0FBQSxLQUFBNnZDLFVBQUEsQ0FBQXJYLE1BQUEsR0FBQXg0QixHQUFBLENBQUFyTixDQUFBLENBQUFpOUIsQ0FBQSxDQUFBMFAsQ0FBQSxDQUFBLEtBQUF1USxVQUFBLENBQUFwb0IsU0FBQSxFQUFBLENBQUE1dEIsQ0FBQSxDQUFBLEtBQUFnMkMsVUFBQSxDQUFBenNCLE1BQUEsRUFBQSxDQUFBc2MsQ0FBQSxDQUFBaGpDLENBQUEsQ0FBQW9tQyxXQUFBLEVBQUEsQ0FBQSxFQUFBdDVCLENBQUEsQ0FBQSxLQUFBcW1DLFVBQUEsQ0FBQXBvQixTQUFBLENBQUE2WCxDQUFBLENBQUE5MUIsQ0FBQSxDQUFBLENBQUFBLENBQUEsQ0FBQWsyQixDQUFBLENBQUE3bEMsQ0FBQSxFQUFBLEtBQUFnMkMsVUFBQSxDQUFBcG9CLFNBQUEsQ0FBQTZYLENBQUEsQ0FBQTkxQixDQUFBLENBQUEzUCxDQUFBLENBQUE2bEMsQ0FBQSxDQUFBLEVBQUEsQ0FBQSxDQUFBMWhCLElBQUEsQ0FBQSxjQUFBckYsQ0FBQSxDQUFBamMsQ0FBQSxDQUFBLENBQUFBLENBQUEsRUFBQXl2QixZQUFBLENBQUEsS0FBQTFCLEtBQUEsQ0FBQSxDQUFBLEtBQUFrSSxNQUFBLEdBQUEsS0FBQWdQLFlBQUEsQ0FBQSxLQUFBaFAsTUFBQSxDQUFBcm9CLFFBQUEsQ0FBQSx1QkFBQSxDQUFBLENBQUEsSUFBQSxDQUFBLGlCQUFBLEVBQUEsS0FBQXUxQixRQUFBLENBQUEsTUFBQSxDQUFBbG5CLENBQUEsQ0FBQSxDQUFBcTRCLElBQUEsQ0FBQSxLQUFBcmUsTUFBQSxDQUFBLENBQUEsQ0FBQSxLQUFBQSxNQUFBLENBQUEsSUFBQSxDQUFBLENBQUEsQ0FBQSxDQUFBb2UsYUFBQSxDQUFBLHVCQUFBcDRCLENBQUEsQ0FBQSxDQUFBd1QsWUFBQSxDQUFBLEtBQUExQixLQUFBLENBQUEsQ0FBQSxTQUFBOVIsQ0FBQSxDQUFBM1csSUFBQSxDQUFBLGFBQUEsQ0FBQSxHQUFBLEtBQUF5b0IsS0FBQSxDQUFBLEtBQUE2WCxNQUFBLENBQUEsVUFBQSxDQUFBLEtBQUF3TyxNQUFBLEdBQUEsS0FBQUksS0FBQSxDQUFBdjRCLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxLQUFBcVQsS0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUFrbEIsS0FBQSxDQUFBLGVBQUF4MEMsQ0FBQSxDQUFBLENBQUEsR0FBQS9KLENBQUFBLENBQUEsQ0FBQWdtQixDQUFBLENBQUFqakIsTUFBQSxDQUFBLENBQUE4dEMsRUFBQSxDQUFBLEtBQUE3USxNQUFBLENBQUEsQ0FBQSxLQUFBaDlCLE9BQUEsQ0FBQXVzQixRQUFBLENBQUEsQ0FBQWlLLFlBQUEsQ0FBQSxLQUFBMUIsS0FBQSxDQUFBLENBQUEsS0FBQWtWLE9BQUEsQ0FBQWwvQixJQUFBLENBQUEsVUFBQSxFQUFBcUosR0FBQSxDQUFBcE4sQ0FBQSxDQUFBd08sT0FBQSxDQUFBLFVBQUEsQ0FBQSxFQUFBb0ssSUFBQSxHQUFBdFQsSUFBQSxDQUFBLGFBQUEsQ0FBQSxNQUFBLENBQUEsQ0FBQXRGLENBQUEsQ0FBQTBZLElBQUEsR0FBQW9YLFVBQUEsQ0FBQSxhQUFBLEVBQUF4cUIsSUFBQSxDQUFBLGVBQUEsQ0FBQSxNQUFBLEVBQUFrZ0IsUUFBQSxDQUFBdnZCLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQXE5QyxXQUFBLENBQUEscUJBQUF0ekMsQ0FBQSxDQUFBL0osQ0FBQSxDQUFBLENBQUF3NUIsWUFBQSxDQUFBLEtBQUExQixLQUFBLENBQUEsQ0FBQSxLQUFBQSxLQUFBLENBQUEsS0FBQTZYLE1BQUEsQ0FBQSxVQUFBLENBQUEsR0FBQTFTLENBQUFBLENBQUEsQ0FBQWo5QixDQUFBLENBQUEsS0FBQWd0QyxPQUFBLENBQUFobkIsQ0FBQSxDQUFBamMsQ0FBQSxFQUFBQSxDQUFBLENBQUExRyxNQUFBLENBQUEsQ0FBQTRVLE9BQUEsQ0FBQSxLQUFBKzBCLE9BQUEsQ0FBQWwvQixJQUFBLENBQUEsVUFBQSxDQUFBLENBQUEsQ0FBQW12QixDQUFBLENBQUE1N0IsTUFBQSxHQUFBNDdCLENBQUEsQ0FBQSxLQUFBK1AsT0FBQSxFQUFBLEtBQUFtUixNQUFBLENBQUFsaEIsQ0FBQSxDQUFBLENBQUEsS0FBQTVSLElBQUEsQ0FBQXRoQixDQUFBLENBQUEsQ0FBQSxLQUFBaWxDLFlBQUEsQ0FBQS9SLENBQUEsQ0FBQW52QixJQUFBLENBQUEsa0JBQUEsQ0FBQSxDQUFBLElBQUEsQ0FBQSxpQkFBQSxDQUFBLENBQUEsS0FBQW92QyxVQUFBLENBQUFqZ0IsQ0FBQSxDQUFBLENBQUEsQ0FBQSxLQUFBNUQsS0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBOGtCLE1BQUEsQ0FBQSxnQkFBQW40QixDQUFBLENBQUEsQ0FBQUEsQ0FBQSxHQUFBQSxDQUFBLENBQUEsS0FBQWdhLE1BQUEsQ0FBQSxLQUFBQSxNQUFBLENBQUEzdUIsTUFBQSxFQUFBLENBQUEsS0FBQTI3QixPQUFBLENBQUEsQ0FBQWhuQixDQUFBLENBQUFsWSxJQUFBLENBQUEsVUFBQSxFQUFBNlUsSUFBQSxHQUFBdFQsSUFBQSxDQUFBLGFBQUEsQ0FBQSxNQUFBLEVBQUFBLElBQUEsQ0FBQSxlQUFBLENBQUEsT0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBaXVDLHFCQUFBLENBQUEsK0JBQUF2ekMsQ0FBQSxDQUFBLENBQUEsTUFBQSxDQUFBaWMsQ0FBQSxDQUFBamMsQ0FBQSxDQUFBMUcsTUFBQSxDQUFBLENBQUE0VSxPQUFBLENBQUEsVUFBQSxFQUFBNVcsTUFBQSxDQUFBLENBQUEsQ0FBQXk4QyxVQUFBLENBQUEsb0JBQUE5M0IsQ0FBQSxDQUFBLENBQUEsTUFBQSxDQUFBLHNCQUFBamIsSUFBQSxDQUFBaWIsQ0FBQSxDQUFBNWxCLElBQUEsRUFBQSxDQUFBLENBQUEsQ0FBQSxDQUFBdTlDLFFBQUEsQ0FBQSxrQkFBQTMzQixDQUFBLENBQUEsQ0FBQSxHQUFBamMsQ0FBQUEsQ0FBQSxDQUFBLEtBQUFpMkIsTUFBQSxFQUFBLEtBQUFBLE1BQUEsQ0FBQTN1QixNQUFBLEdBQUE0RyxPQUFBLENBQUEsZUFBQSxDQUFBLEtBQUErMEIsT0FBQSxDQUFBLENBQUFqakMsQ0FBQSxFQUFBQSxDQUFBLENBQUExSSxNQUFBLEdBQUEsS0FBQTg4QyxNQUFBLEdBQUEsS0FBQS95QixLQUFBLENBQUFwRixDQUFBLENBQUFqYyxDQUFBLENBQUEsRUFBQSxDQUFBLENBQUFrcUIsTUFBQSxDQUFBLGdCQUFBak8sQ0FBQSxDQUFBLENBQUEsR0FBQWpjLENBQUFBLENBQUEsQ0FBQSxLQUFBaTJCLE1BQUEsRUFBQSxLQUFBQSxNQUFBLENBQUFyb0IsUUFBQSxDQUFBLFdBQUEsRUFBQTdKLElBQUEsQ0FBQSxLQUFBOUssT0FBQSxDQUFBKzVDLEtBQUEsRUFBQTU2QyxLQUFBLEVBQUEsQ0FBQTRILENBQUEsRUFBQUEsQ0FBQSxDQUFBMUksTUFBQSxHQUFBLEtBQUFrOUMsS0FBQSxDQUFBeDBDLENBQUEsQ0FBQXNILE1BQUEsRUFBQSxFQUFBLEtBQUFzK0IsTUFBQSxDQUFBLFVBQUEsQ0FBQSxLQUFBdmtCLEtBQUEsQ0FBQXBGLENBQUEsQ0FBQWpjLENBQUEsRUFBQSxDQUFBLENBQUEsRUFBQSxDQUFBLENBQUFGLElBQUEsQ0FBQSxjQUFBbWMsQ0FBQSxDQUFBLENBQUEsS0FBQXkzQixLQUFBLENBQUEsTUFBQSxDQUFBLE9BQUEsQ0FBQXozQixDQUFBLEVBQUEsQ0FBQSxDQUFBMDNCLFFBQUEsQ0FBQSxrQkFBQTEzQixDQUFBLENBQUEsQ0FBQSxLQUFBeTNCLEtBQUEsQ0FBQSxNQUFBLENBQUEsTUFBQSxDQUFBejNCLENBQUEsRUFBQSxDQUFBLENBQUF3NEIsV0FBQSxDQUFBLHNCQUFBLENBQUEsTUFBQSxNQUFBeGUsTUFBQSxFQUFBLENBQUEsS0FBQUEsTUFBQSxDQUFBN25CLE9BQUEsQ0FBQSxlQUFBLEVBQUE5VyxNQUFBLENBQUEsQ0FBQSxDQUFBbzlDLFVBQUEsQ0FBQSxxQkFBQSxDQUFBLE1BQUEsTUFBQXplLE1BQUEsRUFBQSxDQUFBLEtBQUFBLE1BQUEsQ0FBQXZuQixPQUFBLENBQUEsZUFBQSxFQUFBcFgsTUFBQSxDQUFBLENBQUEsQ0FBQW84QyxLQUFBLENBQUEsZUFBQXozQixDQUFBLENBQUFqYyxDQUFBLENBQUEvSixDQUFBLENBQUEsQ0FBQSxHQUFBaTlCLENBQUFBLENBQUEsQ0FBQSxLQUFBK0MsTUFBQSxHQUFBL0MsQ0FBQSxDQUFBLFVBQUFqWCxDQUFBLEVBQUEsU0FBQUEsQ0FBQSxDQUFBLEtBQUFnYSxNQUFBLENBQUEsVUFBQWhhLENBQUEsQ0FBQSxTQUFBLENBQUEsU0FBQSxFQUFBLGVBQUEsRUFBQTVqQixFQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxLQUFBNDlCLE1BQUEsQ0FBQWhhLENBQUEsQ0FBQSxLQUFBLEVBQUEsZUFBQSxFQUFBNWpCLEVBQUEsQ0FBQSxDQUFBLENBQUEsRUFBQTY2QixDQUFBLEVBQUFBLENBQUEsQ0FBQTU3QixNQUFBLEVBQUEsS0FBQTIrQixNQUFBLEdBQUEvQyxDQUFBLENBQUEsS0FBQWlnQixVQUFBLENBQUFwdkMsSUFBQSxDQUFBLEtBQUE5SyxPQUFBLENBQUErNUMsS0FBQSxFQUFBaHpDLENBQUEsR0FBQSxDQUFBLENBQUEsS0FBQXFoQixLQUFBLENBQUFwckIsQ0FBQSxDQUFBaTlCLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQXVnQixRQUFBLENBQUEsa0JBQUF6ekMsQ0FBQSxDQUFBLENBQUEsR0FBQS9KLENBQUFBLENBQUEsQ0FBQWk5QixDQUFBLENBQUFwbUIsQ0FBQSxDQUFBLE1BQUEsTUFBQW1wQixNQUFBLEVBQUEsS0FBQXllLFVBQUEsS0FBQSxLQUFBSCxVQUFBLElBQUFyaEIsQ0FBQSxDQUFBLEtBQUErQyxNQUFBLENBQUE2RixNQUFBLEdBQUF4NEIsR0FBQSxDQUFBd0osQ0FBQSxDQUFBLEtBQUFtMkIsT0FBQSxDQUFBdmMsTUFBQSxFQUFBLENBQUEsS0FBQXVQLE1BQUEsQ0FBQXZuQixPQUFBLENBQUEsZUFBQSxFQUFBM1csSUFBQSxDQUFBLFVBQUEsQ0FBQSxNQUFBOUIsQ0FBQUEsQ0FBQSxDQUFBZ21CLENBQUEsQ0FBQSxJQUFBLENBQUEsQ0FBQSxFQUFBaG1CLENBQUEsQ0FBQTZsQyxNQUFBLEdBQUF4NEIsR0FBQSxDQUFBNHZCLENBQUEsQ0FBQXBtQixDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsS0FBQXVVLEtBQUEsQ0FBQXJoQixDQUFBLENBQUEvSixDQUFBLENBQUEsRUFBQSxLQUFBb3JCLEtBQUEsQ0FBQXJoQixDQUFBLENBQUEsS0FBQW16QyxVQUFBLENBQUFwdkMsSUFBQSxDQUFBLEtBQUE5SyxPQUFBLENBQUErNUMsS0FBQSxFQUFBLEtBQUEvYyxNQUFBLENBQUEsTUFBQSxDQUFBLE9BQUEsR0FBQSxDQUFBLEVBQUEsSUFBQSxFQUFBLEdBQUEsS0FBQW4yQixJQUFBLENBQUFFLENBQUEsRUFBQSxJQUFBLEVBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQXd6QyxZQUFBLENBQUEsc0JBQUF4ekMsQ0FBQSxDQUFBLENBQUEsR0FBQS9KLENBQUFBLENBQUEsQ0FBQWk5QixDQUFBLENBQUFwbUIsQ0FBQSxDQUFBLE1BQUEsTUFBQW1wQixNQUFBLEVBQUEsS0FBQXdlLFdBQUEsS0FBQSxLQUFBRixVQUFBLElBQUFyaEIsQ0FBQSxDQUFBLEtBQUErQyxNQUFBLENBQUE2RixNQUFBLEdBQUF4NEIsR0FBQSxDQUFBd0osQ0FBQSxDQUFBLEtBQUFtMkIsT0FBQSxDQUFBdmMsTUFBQSxFQUFBLENBQUEsS0FBQXVQLE1BQUEsQ0FBQTduQixPQUFBLENBQUEsZUFBQSxFQUFBclcsSUFBQSxDQUFBLFVBQUEsQ0FBQSxNQUFBOUIsQ0FBQUEsQ0FBQSxDQUFBZ21CLENBQUEsQ0FBQSxJQUFBLENBQUEsQ0FBQWhtQixDQUFBLENBQUE2bEMsTUFBQSxHQUFBeDRCLEdBQUEsQ0FBQTR2QixDQUFBLENBQUFwbUIsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxLQUFBdVUsS0FBQSxDQUFBcmhCLENBQUEsQ0FBQS9KLENBQUEsQ0FBQSxFQUFBLEtBQUFvckIsS0FBQSxDQUFBcmhCLENBQUEsQ0FBQSxLQUFBbXpDLFVBQUEsQ0FBQXB2QyxJQUFBLENBQUEsS0FBQTlLLE9BQUEsQ0FBQSs1QyxLQUFBLEVBQUE1NkMsS0FBQSxFQUFBLENBQUEsRUFBQSxJQUFBLEVBQUEsR0FBQSxLQUFBMEgsSUFBQSxDQUFBRSxDQUFBLEVBQUEsSUFBQSxFQUFBLENBQUEsQ0FBQSxDQUFBLENBQUF1MEMsVUFBQSxDQUFBLHFCQUFBLENBQUEsTUFBQSxNQUFBdFIsT0FBQSxDQUFBbUQsV0FBQSxHQUFBLEtBQUFuRCxPQUFBLENBQUF2dEIsSUFBQSxDQUFBLGNBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQTNaLE1BQUEsQ0FBQSxnQkFBQWlFLENBQUEsQ0FBQSxDQUFBLEtBQUFpMkIsTUFBQSxDQUFBLEtBQUFBLE1BQUEsRUFBQWhhLENBQUEsQ0FBQWpjLENBQUEsQ0FBQTFHLE1BQUEsQ0FBQSxDQUFBNFUsT0FBQSxDQUFBLGVBQUEsQ0FBQSxDQUFBLEdBQUFqWSxDQUFBQSxDQUFBLENBQUEsQ0FBQXErQyxJQUFBLENBQUEsS0FBQXJlLE1BQUEsQ0FBQSxDQUFBLEtBQUFBLE1BQUEsQ0FBQWxvQixHQUFBLENBQUEsVUFBQSxFQUFBelcsTUFBQSxFQUFBLEtBQUFnOEMsV0FBQSxDQUFBdHpDLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLEtBQUFtakMsUUFBQSxDQUFBLFFBQUEsQ0FBQW5qQyxDQUFBLENBQUEvSixDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUE2OUMsZ0JBQUEsQ0FBQSwwQkFBQTl6QyxDQUFBLENBQUEsQ0FBQSxHQUFBL0osQ0FBQUEsQ0FBQSxDQUFBK0osQ0FBQSxDQUFBakcsT0FBQSxDQUFBLDZCQUFBLENBQUEsTUFBQSxDQUFBLENBQUFtNUIsQ0FBQSxDQUFBcDFCLE1BQUEsQ0FBQSxJQUFBN0gsQ0FBQSxDQUFBLEdBQUEsQ0FBQSxDQUFBLE1BQUEsTUFBQWs5QyxVQUFBLENBQUFwdkMsSUFBQSxDQUFBLEtBQUE5SyxPQUFBLENBQUErNUMsS0FBQSxFQUFBbnZDLE1BQUEsQ0FBQSxlQUFBLEVBQUFBLE1BQUEsQ0FBQSxVQUFBLENBQUEsTUFBQXF2QixDQUFBQSxDQUFBLENBQUFseUIsSUFBQSxDQUFBaWIsQ0FBQSxDQUFBK2hCLElBQUEsQ0FBQS9oQixDQUFBLENBQUEsSUFBQSxDQUFBLENBQUFyTyxRQUFBLENBQUEsdUJBQUEsRUFBQXZYLElBQUEsRUFBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBNGxCLENBQUEsQ0FBQXFuQixNQUFBLENBQUEsaUJBQUEsQ0FBQSxDQUFBenNDLE9BQUEsQ0FBQSxRQUFBLENBQUFzdEMsY0FBQSxDQUFBLFNBQUEsQ0FBQWxyQyxPQUFBLENBQUEsQ0FBQThxQixRQUFBLENBQUEsSUFBQSxDQUFBNHdCLFNBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQXJsQixLQUFBLENBQUEsR0FBQSxDQUFBc2xCLFNBQUEsQ0FBQSxDQUFBLENBQUFwdkIsUUFBQSxDQUFBLENBQUFraUIsRUFBQSxDQUFBLFVBQUEsQ0FBQUwsRUFBQSxDQUFBLGFBQUEsQ0FBQUYsU0FBQSxDQUFBLE1BQUEsQ0FBQSxDQUFBbHdCLE1BQUEsQ0FBQSxJQUFBLENBQUE0OUIsTUFBQSxDQUFBLElBQUEsQ0FBQUMsS0FBQSxDQUFBLElBQUEsQ0FBQXp6QixLQUFBLENBQUEsSUFBQSxDQUFBMlksSUFBQSxDQUFBLElBQUEsQ0FBQXZFLFFBQUEsQ0FBQSxJQUFBLENBQUFzZixNQUFBLENBQUEsSUFBQSxDQUFBaDVDLE1BQUEsQ0FBQSxJQUFBLENBQUEsQ0FBQWk1QyxZQUFBLENBQUEsQ0FBQSxDQUFBQyxPQUFBLENBQUEsQ0FBQSxDQUFBcFEsT0FBQSxDQUFBLGtCQUFBLENBQUEsR0FBQTdrQyxDQUFBQSxDQUFBLENBQUEvSixDQUFBLENBQUFpOUIsQ0FBQSxDQUFBcG1CLENBQUEsQ0FBQSxLQUFBbTJCLE9BQUEsQ0FBQSxDQUFBLEVBQUFyakMsUUFBQSxDQUFBcEUsV0FBQSxFQUFBLENBQUFvbkMsQ0FBQSxDQUFBLGFBQUE5MUIsQ0FBQSxDQUFBM1AsQ0FBQSxDQUFBLFVBQUEyUCxDQUFBLENBQ0EsS0FBQW9vQyxXQUFBLENBQUF0UyxDQUFBLEVBQUEsQ0FBQXpsQyxDQUFBLEVBQUEsS0FBQWc0QyxrQkFBQSxDQUFBLEtBQUFsUyxPQUFBLENBQUEsQ0FBQSxLQUFBbVMsV0FBQSxDQUFBLEtBQUFuUyxPQUFBLENBQUFMLENBQUEsRUFBQXpsQyxDQUFBLENBQUEsS0FBQSxDQUFBLE1BQUEsQ0FBQSxDQUFBLEtBQUFrNEMsU0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLEtBQUE1UCxTQUFBLENBQUEsdUJBQUEsQ0FBQSxDQUFBLEtBQUF4QyxPQUFBLENBQUEzOUIsSUFBQSxDQUFBLGNBQUEsQ0FBQSxLQUFBLENBQUEsQ0FBQSxLQUFBby9CLEdBQUEsQ0FBQSxLQUFBekIsT0FBQSxDQUFBLENBQUFzUCxPQUFBLENBQUEsaUJBQUF6bEMsQ0FBQSxDQUFBLENBQUEsR0FBQSxLQUFBbTJCLE9BQUEsQ0FBQXZ0QixJQUFBLENBQUEsVUFBQSxDQUFBLENBQUEsTUFBQTFWLENBQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQWt6QixDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUFqOUIsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLElBQUEsRUFBQSxDQUFBK0osQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBa3pCLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQWo5QixDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsR0FBQTJzQyxDQUFBQSxDQUFBLENBQUEzbUIsQ0FBQSxDQUFBbW5CLEVBQUEsQ0FBQTdpQixPQUFBLENBQUEsT0FBQXpULENBQUEsQ0FBQXlULE9BQUEsRUFBQSxJQUFBcWlCLENBQUFBLENBQUEsQ0FBQXNOLE9BQUEsQ0FBQWx3QyxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsS0FBQTB6QyxLQUFBLENBQUEsY0FBQSxDQUFBNW1DLENBQUEsQ0FBQSxDQUFBLE1BQUEsSUFBQTgxQixDQUFBQSxDQUFBLENBQUFxTixTQUFBLENBQUFqd0MsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLEtBQUEwekMsS0FBQSxDQUFBLFVBQUEsQ0FBQTVtQyxDQUFBLENBQUEsQ0FBQSxNQUFBLElBQUE4MUIsQ0FBQUEsQ0FBQSxDQUFBMk4sRUFBQSxDQUFBdndDLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxLQUFBdytCLFNBQUEsQ0FBQSxVQUFBLENBQUExeEIsQ0FBQSxDQUFBLENBQUEsTUFBQSxJQUFBODFCLENBQUFBLENBQUEsQ0FBQStNLElBQUEsQ0FBQTN2QyxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsS0FBQXcrQixTQUFBLENBQUEsTUFBQSxDQUFBMXhCLENBQUEsQ0FBQSxDQUFBLE1BQUEsSUFBQTgxQixDQUFBQSxDQUFBLENBQUFpTixLQUFBLENBQUEsS0FBQW9FLElBQUEsQ0FBQWhlLE1BQUEsR0FBQWoyQixDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUE4TSxDQUFBLENBQUE4USxjQUFBLEVBQUEsQ0FBQSxLQUFBcTJCLElBQUEsQ0FBQWw0QyxNQUFBLENBQUErUSxDQUFBLENBQUEsRUFBQSxNQUFBLElBQUE4MUIsQ0FBQUEsQ0FBQSxDQUFBME4sR0FBQSxDQUFBLEtBQUEyRCxJQUFBLENBQUFoZSxNQUFBLEVBQUEsS0FBQWdlLElBQUEsQ0FBQWw0QyxNQUFBLENBQUErUSxDQUFBLENBQUEsQ0FBQSxNQUFBLElBQUE4MUIsQ0FBQUEsQ0FBQSxDQUFBa04sTUFBQSxDQUFBLEtBQUFtRSxJQUFBLENBQUFoUixPQUFBLENBQUFyMkIsRUFBQSxDQUFBLFVBQUEsSUFBQSxLQUFBc29DLFdBQUEsRUFBQSxLQUFBSSxNQUFBLENBQUEsS0FBQUMsSUFBQSxDQUFBLENBQUEsS0FBQVQsS0FBQSxDQUFBaG9DLENBQUEsQ0FBQSxDQUFBQSxDQUFBLENBQUE4USxjQUFBLEVBQUEsRUFBQSxNQUFBLFFBQUEzbkIsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLEtBQUF1L0MsY0FBQSxDQUFBMW9DLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBMm9DLFFBQUEsQ0FBQSxrQkFBQXZpQixDQUFBLENBQUEsQ0FBQSxHQUFBbHpCLENBQUEsQ0FBQSxNQUFBQSxDQUFBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLEtBQUFrMUMsV0FBQSxFQUFBLEtBQUFqQixJQUFBLENBQUFoUixPQUFBLENBQUFyMkIsRUFBQSxDQUFBLFVBQUEsQ0FBQSxHQUFBc21CLENBQUEsQ0FBQXRWLGNBQUEsRUFBQSxDQUFBLElBQUEsRUFBQSxDQUFBLEdBQUEsQ0FBQTNuQixDQUFBLENBQUEsQ0FBQSxHQUFBNlcsQ0FBQUEsQ0FBQSxDQUFBbVAsQ0FBQSxDQUFBbW5CLEVBQUEsQ0FBQTdpQixPQUFBLENBQUEsT0FBQTJTLENBQUEsQ0FBQTNTLE9BQUEsRUFBQSxJQUFBelQsQ0FBQUEsQ0FBQSxDQUFBb2pDLE9BQUEsQ0FBQSxLQUFBd0QsS0FBQSxDQUFBLGNBQUEsQ0FBQXhnQixDQUFBLEVBQUEsTUFBQSxJQUFBcG1CLENBQUFBLENBQUEsQ0FBQW1qQyxTQUFBLENBQUEsS0FBQXlELEtBQUEsQ0FBQSxVQUFBLENBQUF4Z0IsQ0FBQSxFQUFBLE1BQUEsSUFBQXBtQixDQUFBQSxDQUFBLENBQUF5akMsRUFBQSxDQUFBLEtBQUEvUixTQUFBLENBQUEsVUFBQSxDQUFBdEwsQ0FBQSxFQUFBLE1BQUEsSUFBQXBtQixDQUFBQSxDQUFBLENBQUE2aUMsSUFBQSxDQUFBLEtBQUFuUixTQUFBLENBQUEsTUFBQSxDQUFBdEwsQ0FBQSxFQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEvdUIsS0FBQSxDQUFBLGVBQUE4WCxDQUFBLENBQUEsQ0FBQSxNQUFBaVgsQ0FBQUEsQ0FBQSxFQUFBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUFqWCxDQUFBLENBQUEyQixjQUFBLEVBQUEsQ0FBQSxJQUFBLEVBQUEsR0FBQSxLQUFBNDNCLGNBQUEsQ0FBQXY1QixDQUFBLEVBQUEsSUFBQSxFQUFBLENBQUEsQ0FBQSxDQUFBLENBQUFvRixLQUFBLENBQUEsZ0JBQUEsQ0FBQSxLQUFBcTBCLFlBQUEsQ0FBQSxJQUFBLENBQUEsS0FBQS9CLFFBQUEsQ0FBQSxLQUFBMkIsTUFBQSxFQUFBLENBQUEsQ0FBQSxDQUFBaDBCLElBQUEsQ0FBQSxjQUFBckYsQ0FBQSxDQUFBLENBQUEsTUFBQSxNQUFBMDVCLFVBQUEsRUFBQSxNQUFBLE1BQUFBLFVBQUEsQ0FBQSxJQUFBLEVBQUEsR0FBQWxtQixZQUFBLENBQUEsS0FBQW1tQixTQUFBLENBQUEsQ0FBQSxLQUFBZCxLQUFBLENBQUE3NEIsQ0FBQSxDQUFBLENBQUEsS0FBQTQ1QixPQUFBLENBQUE1NUIsQ0FBQSxDQUFBLENBQUEsSUFBQSxFQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLEtBQUE2NUIsV0FBQSxFQUFBLENBQUEsS0FBQTdCLElBQUEsQ0FBQWg0QixDQUFBLENBQUEsTUFBQSxDQUFBLENBQUE4SCxRQUFBLENBQUEsS0FBQWd5QixTQUFBLEVBQUEsRUFBQTlCLElBQUEsQ0FBQSxDQUFBZixJQUFBLENBQUEsSUFBQSxDQUFBLEVBQUF0NkIsSUFBQSxHQUFBcTdCLElBQUEsQ0FBQSxVQUFBLENBQUEsQ0FBQSxLQUFBeE8sU0FBQSxDQUFBLEtBQUF3TyxJQUFBLENBQUFoUixPQUFBLENBQUEsaUJBQUEsQ0FBQSxVQUFBLENBQUEsQ0FBQSxLQUFBeUIsR0FBQSxDQUFBLEtBQUF1UCxJQUFBLENBQUFoUixPQUFBLENBQUEsQ0FBQStTLFNBQUEsQ0FBQSxtQkFBQWgyQyxDQUFBLENBQUEsQ0FBQUEsQ0FBQSxDQUFBNGQsY0FBQSxHQUFBLEtBQUErM0IsVUFBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLEtBQUEvUCxNQUFBLENBQUEsVUFBQSxDQUFBLE1BQUEsTUFBQStQLFVBQUEsQ0FBQSxLQUFBMVMsT0FBQSxDQUFBLENBQUEsSUFBQWhuQixDQUFBLENBQUFtbkIsRUFBQSxDQUFBOW5CLGlCQUFBLENBQUEsS0FBQTFuQixRQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsRUFBQSxLQUFBcXZDLE9BQUEsQ0FBQXJrQixPQUFBLENBQUEsT0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBcTNCLFNBQUEsQ0FBQSxtQkFBQWoyQyxDQUFBLENBQUEvSixDQUFBLENBQUEsQ0FBQSxHQUFBaTlCLENBQUFBLENBQUEsQ0FBQXBtQixDQUFBLENBQUEsTUFBQSxNQUFBdW9DLFNBQUEsR0FBQSxLQUFBQSxTQUFBLENBQUEsQ0FBQSxDQUFBLENBQUFyMUMsQ0FBQSxDQUFBc2UsYUFBQSxFQUFBLFNBQUF0ZCxJQUFBLENBQUFoQixDQUFBLENBQUFzZSxhQUFBLENBQUE3b0IsSUFBQSxDQUFBLEdBQUEsS0FBQXcrQyxJQUFBLENBQUEzeUIsSUFBQSxHQUFBLEtBQUExdEIsUUFBQSxDQUFBOG5CLEdBQUEsQ0FBQSxXQUFBLENBQUEsVUFBQSxDQUFBTyxDQUFBLENBQUFqYyxDQUFBLENBQUExRyxNQUFBLENBQUEsQ0FBQXNsQixPQUFBLENBQUE1ZSxDQUFBLENBQUFzZSxhQUFBLEVBQUEsQ0FBQSxDQUFBLENBQUEsSUFBQSxFQUFBLEdBQUF4UixDQUFBLENBQUE3VyxDQUFBLENBQUFxK0MsSUFBQSxDQUFBNytCLElBQUEsQ0FBQSxzQkFBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLEdBQUEsS0FBQTB0QixRQUFBLENBQUEsT0FBQSxDQUFBbmpDLENBQUEsQ0FBQSxDQUFBczBDLElBQUEsQ0FBQXhuQyxDQUFBLENBQUEsQ0FBQSxFQUFBOU0sQ0FBQSxDQUFBc2UsYUFBQSxFQUFBLE9BQUF0ZCxJQUFBLENBQUFoQixDQUFBLENBQUFzZSxhQUFBLENBQUE3b0IsSUFBQSxDQUFBLEVBQUEsS0FBQTYvQyxNQUFBLENBQUF4b0MsQ0FBQSxDQUFBNVIsS0FBQSxDQUFBLENBQUFnNEIsQ0FBQSxDQUFBajlCLENBQUEsQ0FBQXErQyxJQUFBLENBQUFodkMsSUFBQSxDQUFBLFlBQUEsR0FBQXdILENBQUEsQ0FBQTVSLEtBQUEsQ0FBQWc0QixDQUFBLEVBQUFqWCxDQUFBLENBQUEraEIsSUFBQSxDQUFBOUssQ0FBQSxFQUFBNTdCLE1BQUEsR0FBQSxLQUFBNCtDLFVBQUEsQ0FBQXRvQyxRQUFBLEdBQUFnTCxJQUFBLEdBQUFxRCxDQUFBLENBQUEsT0FBQSxDQUFBLENBQUE1bEIsSUFBQSxDQUFBNjhCLENBQUEsRUFBQW5QLFFBQUEsQ0FBQSxLQUFBbXlCLFVBQUEsQ0FBQSxDQUFBLENBQUEsSUFBQSxFQUFBLENBQUEsQ0FBQSxDQUFBLENBQUFDLFVBQUEsQ0FBQSxvQkFBQW4yQyxDQUFBLENBQUEvSixDQUFBLENBQUEsQ0FBQSxHQUFBaTlCLENBQUFBLENBQUEsQ0FBQWo5QixDQUFBLENBQUFxK0MsSUFBQSxDQUFBNytCLElBQUEsQ0FBQSxzQkFBQSxDQUFBLENBQUEzSSxDQUFBLENBQUEsS0FBQTZtQyxRQUFBLENBQUEsS0FBQTFRLE9BQUEsQ0FBQSxDQUFBLElBQUFobkIsQ0FBQSxDQUFBbW5CLEVBQUEsQ0FBQTluQixpQkFBQSxDQUFBLEtBQUExbkIsUUFBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLEdBQUEsS0FBQXF2QyxPQUFBLENBQUFya0IsT0FBQSxDQUFBLE9BQUEsRUFBQSxLQUFBKzBCLFFBQUEsQ0FBQTdtQyxDQUFBLENBQUEsS0FBQTg0QixNQUFBLENBQUEsVUFBQSxDQUFBLEtBQUErTixRQUFBLENBQUE3bUMsQ0FBQSxDQUFBLEtBQUE0b0MsWUFBQSxDQUFBeGlCLENBQUEsQ0FBQSxDQUFBLENBQUEsRUFBQSxDQUFBLENBQUEsR0FBQSxLQUFBaVEsUUFBQSxDQUFBLFFBQUEsQ0FBQW5qQyxDQUFBLENBQUEsQ0FBQXMwQyxJQUFBLENBQUFwaEIsQ0FBQSxDQUFBLENBQUEsRUFBQSxLQUFBb2lCLE1BQUEsQ0FBQXBpQixDQUFBLENBQUFoNEIsS0FBQSxDQUFBLENBQUEsS0FBQXE2QyxJQUFBLENBQUEsS0FBQUQsTUFBQSxFQUFBLENBQUEsS0FBQVIsS0FBQSxDQUFBOTBDLENBQUEsQ0FBQSxDQUFBLEtBQUEwMUMsWUFBQSxDQUFBeGlCLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLEtBQUFnakIsVUFBQSxDQUFBajZCLENBQUEsQ0FBQSxPQUFBLENBQUEsQ0FBQWkzQixJQUFBLENBQUEsUUFBQSxDQUFBLFlBQUEsV0FBQSxDQUFBLGdCQUFBLFdBQUEsQ0FBQSxDQUFBLENBQUFudkIsUUFBQSxDQUFBLEtBQUFud0IsUUFBQSxDQUFBLENBQUEsRUFBQTRrQixJQUFBLENBQUEsQ0FBQSxLQUFBaXRCLFNBQUEsQ0FBQSxLQUFBeVEsVUFBQSxDQUFBLElBQUEsQ0FBQSw2QkFBQSxDQUFBLENBQUEsS0FBQXhSLEdBQUEsQ0FBQSxLQUFBM3dDLE1BQUEsQ0FBQSxDQUFBOHFCLFlBQUEsQ0FBQSx1QkFBQSxDQUFBLEtBQUFva0IsT0FBQSxDQUFBblQsVUFBQSxDQUFBLGNBQUEsRUFBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBREEsQ0FDQWtWLFFBQUEsQ0FBQSxtQkFBQSxDQUFBdlYsWUFBQSxDQUFBLEtBQUFtbUIsU0FBQSxDQUFBLENBQUEsS0FBQTNTLE9BQUEsQ0FBQW5ULFVBQUEsQ0FBQSxjQUFBLENBQUEsQ0FBQSxLQUFBbWtCLElBQUEsQ0FBQWhSLE9BQUEsQ0FBQWx6QixNQUFBLEVBQUEsQ0FBQSxLQUFBbW1DLFVBQUEsQ0FBQW5tQyxNQUFBLEVBQUEsQ0FBQSxDQURBLENBQ0FvMUIsVUFBQSxDQUFBLG9CQUFBbHBCLENBQUEsQ0FBQWpjLENBQUEsQ0FBQSxDQUFBLEtBQUEyakMsTUFBQSxDQUFBMW5CLENBQUEsQ0FBQWpjLENBQUEsRUFBQSxXQUFBaWMsQ0FBQSxFQUFBLEtBQUE2NUIsV0FBQSxFQUFBLENBQUEsYUFBQTc1QixDQUFBLEVBQUEsS0FBQWc0QixJQUFBLENBQUFoUixPQUFBLENBQUFsZixRQUFBLENBQUEsS0FBQWd5QixTQUFBLEVBQUEsQ0FBQSxDQUFBLGFBQUE5NUIsQ0FBQSxFQUFBamMsQ0FBQSxFQUFBLEtBQUEwNUIsR0FBQSxFQUFBLEtBQUFBLEdBQUEsQ0FBQXRCLEtBQUEsRUFBQSxDQUFBLENBREEsQ0FDQWdlLHNCQUFBLENBQUEsZ0NBQUFwMkMsQ0FBQSxDQUFBLENBQUEsR0FBQS9KLENBQUFBLENBQUEsQ0FBQSxLQUFBZytDLElBQUEsQ0FBQWhSLE9BQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxNQUFBampDLENBQUFBLENBQUEsQ0FBQTFHLE1BQUEsR0FBQSxLQUFBMnBDLE9BQUEsQ0FBQSxDQUFBLENBQUEsRUFBQWpqQyxDQUFBLENBQUExRyxNQUFBLEdBQUFyRCxDQUFBLEVBQUFnbUIsQ0FBQSxDQUFBemYsUUFBQSxDQUFBdkcsQ0FBQSxDQUFBK0osQ0FBQSxDQUFBMUcsTUFBQSxDQUFBLENBQUEsQ0FEQSxDQUNBKzhDLG9CQUFBLENBQUEsOEJBQUFwNkIsQ0FBQSxDQUFBLENBQUEsS0FBQW02QixzQkFBQSxDQUFBbjZCLENBQUEsR0FBQSxLQUFBNjRCLEtBQUEsRUFBQSxDQUFBLENBREEsQ0FDQWlCLFNBQUEsQ0FBQSxvQkFBQSxDQUFBLEdBQUEvMUMsQ0FBQUEsQ0FBQSxDQUFBLEtBQUEvRyxPQUFBLENBQUE4cUIsUUFBQSxDQUFBLE1BQUEvakIsQ0FBQUEsQ0FBQSxHQUFBQSxDQUFBLENBQUFBLENBQUEsQ0FBQTVJLE1BQUEsRUFBQTRJLENBQUEsQ0FBQTFLLFFBQUEsQ0FBQTJtQixDQUFBLENBQUFqYyxDQUFBLENBQUEsQ0FBQSxLQUFBcE0sUUFBQSxDQUFBbVEsSUFBQSxDQUFBL0QsQ0FBQSxFQUFBM0gsRUFBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEySCxDQUFBLEVBQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsR0FBQUEsQ0FBQSxDQUFBLEtBQUFpakMsT0FBQSxDQUFBLzBCLE9BQUEsQ0FBQSxtQkFBQSxDQUFBLENBQUEsQ0FBQWxPLENBQUEsQ0FBQTFJLE1BQUEsR0FBQTBJLENBQUEsQ0FBQSxLQUFBcE0sUUFBQSxDQUFBLENBQUEsRUFBQTRrQixJQUFBLENBQUEsQ0FBQXhZLENBQUEsQ0FBQSxDQURBLENBQ0E4MUMsV0FBQSxDQUFBLHNCQUFBLENBQUEsR0FBQTkxQyxDQUFBQSxDQUFBLENBQUEvSixDQUFBLENBQUFpOUIsQ0FBQSxDQUFBLElBQUEsQ0FBQWpYLENBQUEsQ0FBQXZpQixPQUFBLENBQUEsS0FBQVQsT0FBQSxDQUFBZ2UsTUFBQSxHQUFBalgsQ0FBQSxDQUFBLEtBQUEvRyxPQUFBLENBQUFnZSxNQUFBLENBQUEsS0FBQUEsTUFBQSxDQUFBLFNBQUFoaEIsQ0FBQSxDQUFBaTlCLENBQUEsQ0FBQSxDQUFBQSxDQUFBLENBQUFqWCxDQUFBLENBQUFtbkIsRUFBQSxDQUFBa1QsWUFBQSxDQUFBenlDLE1BQUEsQ0FBQTdELENBQUEsQ0FBQS9KLENBQUEsQ0FBQXMvQyxJQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsRUFBQSxVQUFBLE1BQUEsTUFBQXQ4QyxPQUFBLENBQUFnZSxNQUFBLEVBQUFoaEIsQ0FBQSxDQUFBLEtBQUFnRCxPQUFBLENBQUFnZSxNQUFBLENBQUEsS0FBQUEsTUFBQSxDQUFBLFNBQUFqWCxDQUFBLENBQUE4TSxDQUFBLENBQUEsQ0FBQW9tQixDQUFBLENBQUF3RyxHQUFBLEVBQUF4RyxDQUFBLENBQUF3RyxHQUFBLENBQUF0QixLQUFBLEVBQUEsQ0FBQWxGLENBQUEsQ0FBQXdHLEdBQUEsQ0FBQXpkLENBQUEsQ0FBQSthLElBQUEsQ0FBQSxDQUFBWixHQUFBLENBQUFuZ0MsQ0FBQSxDQUFBd2YsSUFBQSxDQUFBelYsQ0FBQSxDQUFBbzBCLFFBQUEsQ0FBQSxNQUFBLENBQUF5RSxPQUFBLENBQUEsaUJBQUE1YyxDQUFBLENBQUEsQ0FBQW5QLENBQUEsQ0FBQW1QLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQWhpQixLQUFBLENBQUEsZ0JBQUEsQ0FBQTZTLENBQUEsQ0FBQSxFQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsRUFBQSxLQUFBbUssTUFBQSxDQUFBLEtBQUFoZSxPQUFBLENBQUFnZSxNQUFBLENBQUEsQ0FEQSxDQUNBdStCLGNBQUEsQ0FBQSx3QkFBQXY1QixDQUFBLENBQUEsQ0FBQXdULFlBQUEsQ0FBQSxLQUFBbW1CLFNBQUEsQ0FBQSxDQUFBLEtBQUFBLFNBQUEsQ0FBQSxLQUFBaFEsTUFBQSxDQUFBLFVBQUEsQ0FBQSxHQUFBNWxDLENBQUFBLENBQUEsQ0FBQSxLQUFBdTFDLElBQUEsR0FBQSxLQUFBRCxNQUFBLEVBQUEsQ0FBQXIvQyxDQUFBLENBQUEsS0FBQWcrQyxJQUFBLENBQUFoUixPQUFBLENBQUFyMkIsRUFBQSxDQUFBLFVBQUEsQ0FBQSxDQUFBc21CLENBQUEsQ0FBQWpYLENBQUEsQ0FBQXlELE1BQUEsRUFBQXpELENBQUEsQ0FBQTZELE9BQUEsRUFBQTdELENBQUEsQ0FBQWdFLE9BQUEsRUFBQWhFLENBQUEsQ0FBQW1FLFFBQUEsQ0FBQSxDQUFBLENBQUFwZ0IsQ0FBQSxFQUFBQSxDQUFBLEVBQUEsQ0FBQS9KLENBQUEsRUFBQSxDQUFBaTlCLENBQUEsSUFBQSxLQUFBd2lCLFlBQUEsQ0FBQSxJQUFBLENBQUEsS0FBQVgsTUFBQSxDQUFBLElBQUEsQ0FBQTk0QixDQUFBLENBQUEsRUFBQSxDQUFBLENBQUEsS0FBQWhqQixPQUFBLENBQUFxMkIsS0FBQSxDQUFBLENBQUEsQ0FEQSxDQUNBeWxCLE1BQUEsQ0FBQSxnQkFBQTk0QixDQUFBLENBQUFqYyxDQUFBLENBQUEsQ0FBQSxNQUFBaWMsQ0FBQUEsQ0FBQSxDQUFBLE1BQUFBLENBQUEsQ0FBQUEsQ0FBQSxDQUFBLEtBQUFxNUIsTUFBQSxFQUFBLENBQUEsS0FBQUMsSUFBQSxDQUFBLEtBQUFELE1BQUEsRUFBQSxDQUFBcjVCLENBQUEsQ0FBQTNrQixNQUFBLENBQUEsS0FBQTJCLE9BQUEsQ0FBQTI3QyxTQUFBLENBQUEsS0FBQUUsS0FBQSxDQUFBOTBDLENBQUEsQ0FBQSxDQUFBLEtBQUFtakMsUUFBQSxDQUFBLFFBQUEsQ0FBQW5qQyxDQUFBLElBQUEsQ0FBQSxDQUFBLENBQUEsS0FBQXUyQyxPQUFBLENBQUF0NkIsQ0FBQSxDQUFBLENBQUEsSUFBQSxFQUFBLENBQUEsQ0FEQSxDQUNBczZCLE9BQUEsQ0FBQSxpQkFBQXQ2QixDQUFBLENBQUEsQ0FBQSxLQUFBZzVCLE9BQUEsR0FBQSxLQUFBeFAsU0FBQSxDQUFBLHlCQUFBLENBQUEsQ0FBQSxLQUFBK1EsWUFBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLEtBQUF2L0IsTUFBQSxDQUFBLENBQUFzK0IsSUFBQSxDQUFBdDVCLENBQUEsQ0FBQSxDQUFBLEtBQUF3NkIsU0FBQSxFQUFBLENBQUEsQ0FBQSxDQURBLENBQ0FBLFNBQUEsQ0FBQSxvQkFBQSxDQUFBLEdBQUF6MkMsQ0FBQUEsQ0FBQSxDQUFBLEVBQUEsS0FBQWcxQyxZQUFBLENBQUEsTUFBQS80QixDQUFBQSxDQUFBLENBQUF5aEIsS0FBQSxDQUFBLFNBQUF6aEIsQ0FBQSxDQUFBLENBQUFqYyxDQUFBLEdBQUEsS0FBQWcxQyxZQUFBLEVBQUEsS0FBQTBCLFVBQUEsQ0FBQXo2QixDQUFBLENBQUEsQ0FBQSxLQUFBZzVCLE9BQUEsRUFBQSxDQUFBLEtBQUFBLE9BQUEsRUFBQSxLQUFBaFEsWUFBQSxDQUFBLHlCQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsSUFBQSxDQUFBLENBQUEsQ0FEQSxDQUNBeVIsVUFBQSxDQUFBLG9CQUFBejZCLENBQUEsQ0FBQSxDQUFBQSxDQUFBLEdBQUFBLENBQUEsQ0FBQSxLQUFBMDZCLFVBQUEsQ0FBQTE2QixDQUFBLENBQUEsQ0FBQSxDQUFBLEtBQUFrbkIsUUFBQSxDQUFBLFVBQUEsQ0FBQSxJQUFBLENBQUEsQ0FBQXIwQixPQUFBLENBQUFtTixDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsS0FBQWhqQixPQUFBLENBQUEwRyxRQUFBLEVBQUFzYyxDQUFBLEVBQUFBLENBQUEsQ0FBQTNrQixNQUFBLEVBQUEsQ0FBQSxLQUFBay9DLFlBQUEsRUFBQSxLQUFBSSxRQUFBLENBQUEzNkIsQ0FBQSxFQUFBLEtBQUFrbkIsUUFBQSxDQUFBLE1BQUEsQ0FBQSxFQUFBLEtBQUFpUixNQUFBLEVBQUEsQ0FBQSxDQURBLENBQ0FVLEtBQUEsQ0FBQSxlQUFBNzRCLENBQUEsQ0FBQSxDQUFBLEtBQUF1NkIsWUFBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLEtBQUFwQyxNQUFBLENBQUFuNEIsQ0FBQSxDQUFBLENBQUEsQ0FEQSxDQUNBbTRCLE1BQUEsQ0FBQSxnQkFBQW40QixDQUFBLENBQUEsQ0FBQSxLQUFBMHBCLElBQUEsQ0FBQSxLQUFBL3hDLFFBQUEsQ0FBQSxXQUFBLEVBQUEsS0FBQXFnRCxJQUFBLENBQUFoUixPQUFBLENBQUFyMkIsRUFBQSxDQUFBLFVBQUEsSUFBQSxLQUFBcW5DLElBQUEsQ0FBQWhSLE9BQUEsQ0FBQXJxQixJQUFBLEdBQUEsS0FBQXE3QixJQUFBLENBQUEzeUIsSUFBQSxFQUFBLENBQUEsS0FBQSt6QixTQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsS0FBQWxTLFFBQUEsQ0FBQSxPQUFBLENBQUFsbkIsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQURBLENBQ0E0NUIsT0FBQSxDQUFBLGlCQUFBNTVCLENBQUEsQ0FBQSxDQUFBLEtBQUEwM0IsUUFBQSxHQUFBLEtBQUEyQixNQUFBLEVBQUEsRUFBQSxLQUFBblMsUUFBQSxDQUFBLFFBQUEsQ0FBQWxuQixDQUFBLENBQUEsQ0FBQXE0QixJQUFBLENBQUEsS0FBQW9CLFlBQUEsQ0FBQSxDQUFBLENBQUEsQ0FEQSxDQUNBaUIsVUFBQSxDQUFBLG9CQUFBMzJDLENBQUEsQ0FBQSxDQUFBLE1BQUFBLENBQUFBLENBQUEsQ0FBQTFJLE1BQUEsRUFBQTBJLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQTYyQyxLQUFBLEVBQUE3MkMsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBOUUsS0FBQSxDQUFBOEUsQ0FBQSxDQUFBaWMsQ0FBQSxDQUFBaGtCLEdBQUEsQ0FBQStILENBQUEsQ0FBQSxTQUFBQSxDQUFBLENBQUEsQ0FBQSxNQUFBLFVBQUEsTUFBQUEsQ0FBQUEsQ0FBQSxDQUFBLENBQUE2MkMsS0FBQSxDQUFBNzJDLENBQUEsQ0FBQTlFLEtBQUEsQ0FBQThFLENBQUEsQ0FBQSxDQUFBaWMsQ0FBQSxDQUFBampCLE1BQUEsQ0FBQSxFQUFBLENBQUFnSCxDQUFBLENBQUEsQ0FBQTYyQyxLQUFBLENBQUE3MkMsQ0FBQSxDQUFBNjJDLEtBQUEsRUFBQTcyQyxDQUFBLENBQUE5RSxLQUFBLENBQUFBLEtBQUEsQ0FBQThFLENBQUEsQ0FBQTlFLEtBQUEsRUFBQThFLENBQUEsQ0FBQTYyQyxLQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBREEsQ0FDQUQsUUFBQSxDQUFBLGtCQUFBNTJDLENBQUEsQ0FBQSxDQUFBLEdBQUEvSixDQUFBQSxDQUFBLENBQUEsS0FBQWcrQyxJQUFBLENBQUFoUixPQUFBLENBQUFqekIsS0FBQSxFQUFBLENBQUEsS0FBQThtQyxXQUFBLENBQUE3Z0QsQ0FBQSxDQUFBK0osQ0FBQSxFQUFBLEtBQUFxMUMsU0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLEtBQUFwQixJQUFBLENBQUE3RSxPQUFBLEVBQUEsQ0FBQW41QyxDQUFBLENBQUF5aUIsSUFBQSxFQUFBLENBQUEsS0FBQXErQixXQUFBLEVBQUEsQ0FBQTlnRCxDQUFBLENBQUF1dkIsUUFBQSxDQUFBdkosQ0FBQSxDQUFBampCLE1BQUEsQ0FBQSxDQUFBOHRDLEVBQUEsQ0FBQSxLQUFBN0QsT0FBQSxDQUFBLENBQUEsS0FBQWhxQyxPQUFBLENBQUF1c0IsUUFBQSxDQUFBLENBQUEsQ0FBQSxLQUFBdnNCLE9BQUEsQ0FBQTA3QyxTQUFBLEVBQUEsS0FBQVYsSUFBQSxDQUFBbjBDLElBQUEsRUFBQSxDQUFBLEtBQUE0a0MsR0FBQSxDQUFBLEtBQUE5d0MsUUFBQSxDQUFBLENBQUFvaUQsU0FBQSxDQUFBLHNCQUFBLENBQUEsQ0FBQSxDQUFBLENBREEsQ0FDQWUsV0FBQSxDQUFBLHNCQUFBLENBQUEsR0FBQTk2QixDQUFBQSxDQUFBLENBQUEsS0FBQWc0QixJQUFBLENBQUFoUixPQUFBLENBQUFobkIsQ0FBQSxDQUFBa3FCLFVBQUEsQ0FBQXRzQyxJQUFBLENBQUF3dUIsR0FBQSxDQUFBcE0sQ0FBQSxDQUFBc0osS0FBQSxDQUFBLEVBQUEsRUFBQTRnQixVQUFBLEdBQUEsQ0FBQSxDQUFBLEtBQUFsRCxPQUFBLENBQUFrRCxVQUFBLEVBQUEsQ0FBQSxFQUFBLENBREEsQ0FDQTJRLFdBQUEsQ0FBQSxxQkFBQTkyQyxDQUFBLENBQUEvSixDQUFBLENBQUEsQ0FBQSxHQUFBaTlCLENBQUFBLENBQUEsQ0FBQSxJQUFBLENBQUFqWCxDQUFBLENBQUFsa0IsSUFBQSxDQUFBOUIsQ0FBQSxDQUFBLFNBQUFnbUIsQ0FBQSxDQUFBaG1CLENBQUEsQ0FBQSxDQUFBaTlCLENBQUEsQ0FBQThqQixlQUFBLENBQUFoM0MsQ0FBQSxDQUFBL0osQ0FBQSxFQUFBLENBQUEsRUFBQSxDQURBLENBQ0ErZ0QsZUFBQSxDQUFBLHlCQUFBLzZCLENBQUEsQ0FBQWpjLENBQUEsQ0FBQSxDQUFBLE1BQUEsTUFBQWkzQyxXQUFBLENBQUFoN0IsQ0FBQSxDQUFBamMsQ0FBQSxFQUFBeVYsSUFBQSxDQUFBLHNCQUFBLENBQUF6VixDQUFBLENBQUEsQ0FBQSxDQURBLENBQ0FpM0MsV0FBQSxDQUFBLHFCQUFBajNDLENBQUEsQ0FBQS9KLENBQUEsQ0FBQSxDQUFBLE1BQUFnbUIsQ0FBQUEsQ0FBQSxDQUFBLE1BQUEsQ0FBQSxDQUFBdUgsTUFBQSxDQUFBdkgsQ0FBQSxDQUFBLE9BQUEsQ0FBQSxDQUFBNWxCLElBQUEsQ0FBQUosQ0FBQSxDQUFBNGdELEtBQUEsQ0FBQSxFQUFBOXlCLFFBQUEsQ0FBQS9qQixDQUFBLENBQUEsQ0FBQSxDQURBLENBQ0EwekMsS0FBQSxDQUFBLGVBQUF6M0IsQ0FBQSxDQUFBamMsQ0FBQSxDQUFBLENBQUEsTUFBQSxNQUFBaTBDLElBQUEsQ0FBQWhSLE9BQUEsQ0FBQXIyQixFQUFBLENBQUEsVUFBQSxFQUFBLEtBQUFxbkMsSUFBQSxDQUFBUSxXQUFBLElBQUEsWUFBQXp6QyxJQUFBLENBQUFpYixDQUFBLENBQUEsRUFBQSxLQUFBZzRCLElBQUEsQ0FBQVMsVUFBQSxJQUFBLFFBQUExekMsSUFBQSxDQUFBaWIsQ0FBQSxDQUFBLEVBQUEsS0FBQWk1QixXQUFBLEVBQUEsS0FBQUksTUFBQSxDQUFBLEtBQUFDLElBQUEsQ0FBQSxDQUFBLEtBQUF0QixJQUFBLENBQUEzeUIsSUFBQSxFQUFBLENBQUEsSUFBQSxFQUFBLEdBQUEsS0FBQTJ5QixJQUFBLENBQUFoNEIsQ0FBQSxFQUFBamMsQ0FBQSxFQUFBLElBQUEsRUFBQSxDQUFBLEVBQUEsS0FBQSswQyxNQUFBLENBQUEsSUFBQSxDQUFBLzBDLENBQUEsRUFBQSxJQUFBLEVBQUEsQ0FBQSxDQUFBLENBREEsQ0FDQXNqQyxNQUFBLENBQUEsaUJBQUEsQ0FBQSxNQUFBLE1BQUEyUSxJQUFBLENBQUFoUixPQUFBLENBQUEsQ0FEQSxDQUNBcVMsTUFBQSxDQUFBLGlCQUFBLENBQUEsTUFBQSxNQUFBRixXQUFBLENBQUExZ0QsS0FBQSxDQUFBLEtBQUF1dUMsT0FBQSxDQUFBOXFDLFNBQUEsQ0FBQSxDQUFBLENBREEsQ0FDQXFtQyxTQUFBLENBQUEsbUJBQUF2aUIsQ0FBQSxDQUFBamMsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLEtBQUFrMUMsV0FBQSxFQUFBLEtBQUFqQixJQUFBLENBQUFoUixPQUFBLENBQUFyMkIsRUFBQSxDQUFBLFVBQUEsQ0FBQSxJQUFBLEtBQUE4bUMsS0FBQSxDQUFBejNCLENBQUEsQ0FBQWpjLENBQUEsRUFBQUEsQ0FBQSxDQUFBNGQsY0FBQSxFQUFBLEVBQUEsQ0FEQSxDQUNBdTNCLGtCQUFBLENBQUEsNEJBQUFsNUIsQ0FBQSxDQUFBLENBQUEsR0FBQSxDQUFBQSxDQUFBLENBQUEza0IsTUFBQSxDQUFBLE1BQUEsQ0FBQSxDQUFBLENBQUEsR0FBQTBJLENBQUFBLENBQUEsQ0FBQWljLENBQUEsQ0FBQXZHLElBQUEsQ0FBQSxpQkFBQSxDQUFBLENBQUEsTUFBQSxZQUFBMVYsQ0FBQSxDQUFBLEtBQUFtMUMsa0JBQUEsQ0FBQWw1QixDQUFBLENBQUEzVSxNQUFBLEVBQUEsQ0FBQSxDQUFBLFNBQUF0SCxDQUFBLENBQUEsQ0FEQSxDQUFBLENBQUEsQ0FDQWljLENBQUEsQ0FBQWpqQixNQUFBLENBQUFpakIsQ0FBQSxDQUFBbW5CLEVBQUEsQ0FBQWtULFlBQUEsQ0FBQSxDQUFBWSxXQUFBLENBQUEscUJBQUFqN0IsQ0FBQSxDQUFBLENBQUEsTUFBQUEsQ0FBQUEsQ0FBQSxDQUFBbGlCLE9BQUEsQ0FBQSw2QkFBQSxDQUFBLE1BQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQThKLE1BQUEsQ0FBQSxnQkFBQTdELENBQUEsQ0FBQS9KLENBQUEsQ0FBQSxDQUFBLEdBQUFpOUIsQ0FBQUEsQ0FBQSxDQUFBcDFCLE1BQUEsQ0FBQW1lLENBQUEsQ0FBQW1uQixFQUFBLENBQUFrVCxZQUFBLENBQUFZLFdBQUEsQ0FBQWpoRCxDQUFBLENBQUEsQ0FBQSxHQUFBLENBQUEsQ0FBQSxNQUFBZ21CLENBQUFBLENBQUEsQ0FBQXpqQixJQUFBLENBQUF3SCxDQUFBLENBQUEsU0FBQWljLENBQUEsQ0FBQSxDQUFBLE1BQUFpWCxDQUFBQSxDQUFBLENBQUFseUIsSUFBQSxDQUFBaWIsQ0FBQSxDQUFBNDZCLEtBQUEsRUFBQTU2QixDQUFBLENBQUEvZ0IsS0FBQSxFQUFBK2dCLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQURBLENBQ0FBLENBQUEsQ0FBQXFuQixNQUFBLENBQUEsaUJBQUEsQ0FBQXJuQixDQUFBLENBQUFtbkIsRUFBQSxDQUFBa1QsWUFBQSxDQUFBLENBQUFyOUMsT0FBQSxDQUFBLENBQUFrK0MsUUFBQSxDQUFBLENBQUFDLFNBQUEsQ0FBQSxvQkFBQSxDQUFBMThDLE9BQUEsQ0FBQSxpQkFBQXVoQixDQUFBLENBQUEsQ0FBQSxNQUFBQSxDQUFBQSxDQUFBLEVBQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsY0FBQSxDQUFBLFlBQUEsQ0FBQSxDQUFBLHFEQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQXk2QixVQUFBLENBQUEsb0JBQUExMkMsQ0FBQSxDQUFBLENBQUEsR0FBQS9KLENBQUFBLENBQUEsQ0FBQSxLQUFBMnRDLFdBQUEsQ0FBQXpyQyxTQUFBLEVBQUEsS0FBQWMsT0FBQSxDQUFBMEcsUUFBQSxFQUFBLEtBQUE2MkMsWUFBQSxHQUFBdmdELENBQUEsQ0FBQStKLENBQUEsRUFBQUEsQ0FBQSxDQUFBMUksTUFBQSxDQUFBLEtBQUEyQixPQUFBLENBQUFrK0MsUUFBQSxDQUFBejhDLE9BQUEsQ0FBQXNGLENBQUEsQ0FBQTFJLE1BQUEsQ0FBQSxDQUFBLEtBQUEyQixPQUFBLENBQUFrK0MsUUFBQSxDQUFBQyxTQUFBLENBQUEsS0FBQWxCLFVBQUEsQ0FBQXRvQyxRQUFBLEdBQUFnTCxJQUFBLEVBQUEsQ0FBQXFELENBQUEsQ0FBQSxPQUFBLENBQUEsQ0FBQTVsQixJQUFBLENBQUFKLENBQUEsRUFBQTh0QixRQUFBLENBQUEsS0FBQW15QixVQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQURBLENBQ0FqNkIsQ0FBQSxDQUFBbW5CLEVBQUEsQ0FBQWtULFlBREEsQ0FDQSxHQUFBdFAsQ0FBQUEsQ0FBQSxDQUFBLHlCQUFBLENBQUEvcUIsQ0FBQSxDQUFBcW5CLE1BQUEsQ0FBQSxpQkFBQSxDQUFBLENBQUF6c0MsT0FBQSxDQUFBLFFBQUEsQ0FBQXN0QyxjQUFBLENBQUEsT0FBQSxDQUFBbHJDLE9BQUEsQ0FBQSxDQUFBczFDLFNBQUEsQ0FBQSxZQUFBLENBQUE1dUMsUUFBQSxDQUFBLElBQUEsQ0FBQTAzQyxXQUFBLENBQUEsQ0FBQSxDQUFBLENBQUFyRSxLQUFBLENBQUEsQ0FBQS8wQixNQUFBLENBQUEsc0VBQUEsQ0FBQXE1QixpQkFBQSxDQUFBLHdCQUFBLENBQUFDLGFBQUEsQ0FBQSw2Q0FBQSxDQUFBQyxVQUFBLENBQUEsUUFBQSxDQUFBQyxPQUFBLENBQUEsbUJBQUEsQ0FBQSxDQUFBLENBQUE1UyxPQUFBLENBQUEsa0JBQUEsQ0FBQSxLQUFBNlMsUUFBQSxHQUFBLENBQUEsQ0FBQUEsUUFBQSxDQUFBLG1CQUFBLENBQUEsS0FBQXpVLE9BQUEsQ0FBQTM5QixJQUFBLENBQUEsTUFBQSxDQUFBLFNBQUEsRUFBQSxLQUFBOHBDLE9BQUEsRUFBQSxDQUFBLENBQUEsQ0FBQXBLLFFBQUEsQ0FBQSxtQkFBQSxDQUFBLEtBQUEyUyxnQkFBQSxDQUFBLFNBQUEsRUFBQSxLQUFBQyxZQUFBLENBQUF4aEMsVUFBQSxDQUFBLHNCQUFBLENBQUEsQ0FBQSxLQUFBNnNCLE9BQUEsQ0FBQW5ULFVBQUEsQ0FBQSxNQUFBLENBQUEsQ0FBQSxLQUFBNzJCLE9BQUEsQ0FBQSs1QyxLQUFBLENBQUFzRSxpQkFBQSxFQUFBLEtBQUFyVSxPQUFBLENBQUFsL0IsSUFBQSxDQUFBLEtBQUE5SyxPQUFBLENBQUErNUMsS0FBQSxDQUFBc0UsaUJBQUEsRUFBQXZ6QyxJQUFBLENBQUEsaUNBQUEsRUFBQThKLFFBQUEsR0FBQTByQixNQUFBLEVBQUEsQ0FBQSxDQUFBLENBQUFzZSxZQUFBLENBQUEsdUJBQUEsQ0FBQSxHQUFBNzNDLENBQUFBLENBQUEsQ0FBQSxJQUFBLENBQUEvSixDQUFBLENBQUEsRUFBQSxDQUFBZ21CLENBQUEsQ0FBQWxrQixJQUFBLENBQUEsS0FBQWtCLE9BQUEsQ0FBQSs1QyxLQUFBLENBQUEsU0FBQTlmLENBQUEsQ0FBQXBtQixDQUFBLENBQUEsQ0FBQSxHQUFBODFCLENBQUFBLENBQUEsQ0FBQXpsQyxDQUFBLENBQUEsRUFBQSxDQUFBLE1BQUEyUCxDQUFBQSxDQUFBLENBQUEsc0JBQUFvbUIsQ0FBQSxFQUFBMFAsQ0FBQSxDQUFBNWlDLENBQUEsQ0FBQWlqQyxPQUFBLENBQUFsL0IsSUFBQSxDQUFBK0ksQ0FBQSxDQUFBLENBQUE4MUIsQ0FBQSxDQUFBN3FDLElBQUEsQ0FBQSxVQUFBLENBQUEsR0FBQWlJLENBQUFBLENBQUEsQ0FBQWljLENBQUEsQ0FBQSxJQUFBLENBQUEsQ0FBQWpjLENBQUEsQ0FBQTROLFFBQUEsQ0FBQSxpQ0FBQSxFQUFBdFcsTUFBQSxFQUFBMEksQ0FBQSxDQUFBNk4sUUFBQSxHQUFBc3JCLE9BQUEsQ0FBQSxzREFBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUFuNUIsQ0FBQSxDQUFBeWxDLFNBQUEsQ0FBQTdDLENBQUEsQ0FBQSxJQUFBLENBQUEsOENBQUEsQ0FBQSxDQUFBM3NDLENBQUEsQ0FBQUEsQ0FBQSxDQUFBeEIsTUFBQSxDQUFBbXVDLENBQUEsQ0FBQXByQyxHQUFBLEVBQUEsQ0FBQSxDQUFBLElBQUEsRUFBQSxHQUFBeWtCLENBQUEsQ0FBQWhsQixFQUFBLENBQUFpOEIsQ0FBQSxJQUFBLzFCLENBQUEsQ0FBQTZDLENBQUEsQ0FBQSxJQUFBa3pCLENBQUEsQ0FBQSxTQUFBLENBQUEsQ0FBQWx6QixDQUFBLENBQUEsSUFBQWt6QixDQUFBLENBQUEsU0FBQSxDQUFBLENBQUEsUUFBQSxDQUFBLENBQUEsQ0FBQXBDLE9BQUEsQ0FBQSxFQUFBLENBQUEsQ0FBQTl3QixDQUFBLENBQUFpakMsT0FBQSxDQUFBbC9CLElBQUEsQ0FBQStJLENBQUEsRUFBQS9VLElBQUEsQ0FBQSxVQUFBLENBQUEsR0FBQStVLENBQUFBLENBQUEsQ0FBQW1QLENBQUEsQ0FBQSxJQUFBLENBQUEsQ0FBQTJtQixDQUFBLENBQUE5MUIsQ0FBQSxDQUFBb21CLENBQUEsQ0FBQSxDQUFBLFVBQUEsQ0FBQSxDQUFBOFAsQ0FBQSxDQUFBL21CLENBQUEsQ0FBQXFuQixNQUFBLENBQUF0cUMsTUFBQSxDQUFBLEVBQUEsQ0FBQW1FLENBQUEsQ0FBQSxDQUFBLEdBQUEsV0FBQSsxQixDQUFBLEVBQUEsQ0FBQXBtQixDQUFBLENBQUF4RixNQUFBLENBQUEsYUFBQSxFQUFBaFEsTUFBQSxDQUFBLENBQUFzckMsQ0FBQSxHQUFBQSxDQUFBLENBQUE5MUIsQ0FBQSxDQUFBb21CLENBQUEsQ0FBQSxHQUFBQSxDQUFBLEVBQUEsVUFBQSxDQUFBLENBQUEsQ0FBQTBQLENBQUEsR0FBQUksQ0FBQSxDQUFBbFMsT0FBQSxDQUFBOXdCLENBQUEsQ0FBQTgzQyxxQkFBQSxDQUFBOVUsQ0FBQSxDQUFBbFMsT0FBQSxDQUFBOFIsQ0FBQSxDQUFBLENBQUEsQ0FBQTkxQixDQUFBLENBQUFvbUIsQ0FBQSxDQUFBLENBQUE4UCxDQUFBLENBQUEsQ0FBQSxHQUFBSyxDQUFBQSxDQUFBLENBQUF2MkIsQ0FBQSxDQUFBb21CLENBQUEsQ0FBQSxDQUFBLFFBQUEsQ0FBQSxDQUFBalgsQ0FBQSxDQUFBeEcsSUFBQSxDQUFBNHRCLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxzQkFBQSxDQUFBVCxDQUFBLENBQUFBLENBQUEsQ0FBQTkxQixDQUFBLENBQUFvbUIsQ0FBQSxDQUFBLENBQUEsVUFBQSxDQUFBLEVBQUFqOUIsQ0FBQSxDQUFBdEIsSUFBQSxDQUFBMHVDLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLEVBQUEsSUFBQSxFQUFBLENBQUEsQ0FBQSxJQUFBLEVBQUEsQ0FBQSxDQUFBLEVBQUEsS0FBQXVVLFlBQUEsQ0FBQTM3QixDQUFBLENBQUFBLENBQUEsQ0FBQTFQLE1BQUEsQ0FBQXRXLENBQUEsQ0FBQSxDQUFBLENBQUEsS0FBQXd2QyxTQUFBLENBQUEsS0FBQW1TLFlBQUEsQ0FBQSxzQkFBQSxDQUFBLENBQUEsQ0FBQSxDQUFBRCxnQkFBQSxDQUFBLDBCQUFBMzNDLENBQUEsQ0FBQSxDQUFBLEtBQUE0M0MsWUFBQSxDQUFBNy9DLElBQUEsQ0FBQSxVQUFBLENBQUEsR0FBQTlCLENBQUFBLENBQUEsQ0FBQWdtQixDQUFBLENBQUEsSUFBQSxDQUFBLENBQUFpWCxDQUFBLENBQUFqOUIsQ0FBQSxDQUFBd2YsSUFBQSxDQUFBLHNCQUFBLENBQUEsQ0FBQXlkLENBQUEsRUFBQUEsQ0FBQSxDQUFBbHpCLENBQUEsQ0FBQSxFQUFBa3pCLENBQUEsQ0FBQWx6QixDQUFBLENBQUEsRUFBQSxDQUFBLENBQUEsRUFBQSxDQUFBLENBQUErM0Msa0JBQUEsQ0FBQSw0QkFBQTk3QixDQUFBLENBQUFqYyxDQUFBLENBQUEsQ0FBQSxHQUFBL0osQ0FBQUEsQ0FBQSxDQUFBLDZFQUFBLENBQUFpOUIsQ0FBQSxDQUFBLEtBQUE4a0IsbUJBQUEsQ0FBQWg0QyxDQUFBLENBQUEsT0FBQSxFQUFBOHdCLE9BQUEsQ0FBQStsQixLQUFBLENBQUEsS0FBQTVSLFlBQUEsQ0FBQWhwQixDQUFBLENBQUEsSUFBQSxDQUFBaG1CLENBQUEsRUFBQSxLQUFBd3ZDLFNBQUEsQ0FBQXhwQixDQUFBLENBQUEsSUFBQSxDQUFBaVgsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBOGtCLG1CQUFBLENBQUEsNkJBQUEvN0IsQ0FBQSxDQUFBamMsQ0FBQSxDQUFBLENBQUEsR0FBQS9KLENBQUFBLENBQUEsQ0FBQSxhQUFBLEtBQUFnRCxPQUFBLENBQUFzMUMsU0FBQSxDQUFBcmIsQ0FBQSxDQUFBLENBQUFwQyxPQUFBLENBQUEsRUFBQSxDQUFBLENBQUEsTUFBQW9DLENBQUFBLENBQUEsQ0FBQXBDLE9BQUEsQ0FBQTl3QixDQUFBLEVBQUEsQ0FBQWk0QyxNQUFBLENBQUEsRUFBQSxDQUFBNy9DLEtBQUEsQ0FBQSxjQUFBbkMsQ0FBQSxDQUFBLEtBQUEsQ0FBQSxNQUFBLENBQUEsQ0FBQXFDLElBQUEsQ0FBQSxjQUFBckMsQ0FBQSxDQUFBLFFBQUEsQ0FBQSxPQUFBLENBQUEsQ0FBQWlpRCxJQUFBLENBQUEsZUFBQSxFQUFBajhCLENBQUEsQ0FBQSxDQUFBaVgsQ0FBQSxDQUFBLENBQUEsQ0FBQWlsQixlQUFBLENBQUEseUJBQUFsOEIsQ0FBQSxDQUFBLENBQUEsR0FBQWpjLENBQUFBLENBQUEsQ0FBQSxLQUFBZzRDLG1CQUFBLENBQUEvN0IsQ0FBQSxDQUFBLFlBQUEsQ0FBQSxDQUFBLE1BQUFqYyxDQUFBQSxDQUFBLENBQUE4d0IsT0FBQSxDQUFBLGVBQUEsRUFBQSxFQUFBLENBQUE5d0IsQ0FBQSxDQUFBOHdCLE9BQUEsQ0FBQSxpQkFBQSxFQUFBLEVBQUEsQ0FBQTl3QixDQUFBLENBQUEsQ0FBQSxDQUFBbzRDLGNBQUEsQ0FBQSx3QkFBQW44QixDQUFBLENBQUEsQ0FBQSxNQUFBLE1BQUErN0IsbUJBQUEsQ0FBQS83QixDQUFBLENBQUEsV0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBbzhCLHFCQUFBLENBQUEsK0JBQUFwOEIsQ0FBQSxDQUFBLENBQUEsTUFBQSxNQUFBKzdCLG1CQUFBLENBQUEvN0IsQ0FBQSxDQUFBLHdCQUFBLENBQUEsQ0FBQSxDQUFBLENBQUFxOEIsa0JBQUEsQ0FBQSw0QkFBQXI4QixDQUFBLENBQUEsQ0FBQSxHQUFBamMsQ0FBQUEsQ0FBQSxDQUFBLGFBQUEsS0FBQS9HLE9BQUEsQ0FBQXMxQyxTQUFBLENBQUEsTUFBQSxDQUFBaHBCLEtBQUEsQ0FBQXZsQixDQUFBLENBQUEsTUFBQSxDQUFBLENBQUEsQ0FBQSxDQUFBOHdCLE9BQUEsQ0FBQSxDQUFBbW5CLE1BQUEsQ0FBQSxDQUFBLDRCQUFBLEVBQUEsQ0FBQSw4QkFBQSxFQUFBLENBQUEsQ0FBQTcvQyxLQUFBLENBQUEsQ0FBQSw0QkFBQSxjQUFBNEgsQ0FBQSxDQUFBLEtBQUEsQ0FBQSxJQUFBLENBQUEsQ0FBQSw4QkFBQSxjQUFBQSxDQUFBLENBQUEsS0FBQSxDQUFBLE1BQUEsQ0FBQSxDQUFBLENBQUExSCxJQUFBLENBQUEsQ0FBQSw0QkFBQTBILENBQUEsQ0FBQSxFQUFBLENBQUEsY0FBQSxDQUFBLDhCQUFBLGNBQUFBLENBQUEsQ0FBQSxRQUFBLENBQUEsT0FBQSxDQUFBLENBQUEsQ0FBQWs0QyxJQUFBLENBQUEsQ0FBQSw0QkFBQSxlQUFBLENBQUEsOEJBQUEsZUFBQSxDQUFBLEVBQUFqOEIsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUE2N0IscUJBQUEsQ0FBQSwrQkFBQTkzQyxDQUFBLENBQUEvSixDQUFBLENBQUEsQ0FBQSxHQUFBaTlCLENBQUFBLENBQUEsQ0FBQSxFQUFBLENBQUEsTUFBQWpYLENBQUFBLENBQUEsQ0FBQWxrQixJQUFBLENBQUFpSSxDQUFBLENBQUEsU0FBQThNLENBQUEsQ0FBQSxDQUFBLEdBQUE4MUIsQ0FBQUEsQ0FBQSxDQUFBM3NDLENBQUEsQ0FBQWdELE9BQUEsQ0FBQTYzQixPQUFBLENBQUFoa0IsQ0FBQSxHQUFBLEVBQUEsQ0FBQTgxQixDQUFBLENBQUEzbUIsQ0FBQSxDQUFBK2hCLElBQUEsQ0FBQTRFLENBQUEsQ0FBQTdvQyxPQUFBLENBQUFpdEMsQ0FBQSxDQUFBLEVBQUEsQ0FBQSxDQUFBLENBQUE5VCxDQUFBLENBQUFwbUIsQ0FBQSxDQUFBLENBQUEsQ0FBQTgxQixDQUFBLENBQUEsR0FBQSxDQUFBNWlDLENBQUEsQ0FBQThNLENBQUEsQ0FBQSxFQUFBL1MsT0FBQSxDQUFBLE1BQUEsQ0FBQSxHQUFBLENBQUEsQ0FBQSxDQUFBLEVBQUFtNUIsQ0FBQSxDQUFBLENBQUEsQ0FBQWlTLFVBQUEsQ0FBQSxvQkFBQWxwQixDQUFBLENBQUFqYyxDQUFBLENBQUEsQ0FBQSxNQUFBLGNBQUFpYyxDQUFBLEVBQUEsS0FBQWdwQixZQUFBLENBQUEsbUJBQUEsS0FBQWhzQyxPQUFBLENBQUFzMUMsU0FBQSxDQUFBLENBQUEsS0FBQTVLLE1BQUEsQ0FBQTFuQixDQUFBLENBQUFqYyxDQUFBLENBQUEsQ0FBQSxhQUFBaWMsQ0FBQSxFQUFBLEtBQUEwN0IsZ0JBQUEsQ0FBQTMzQyxDQUFBLENBQUEsU0FBQSxDQUFBLFFBQUEsRUFBQSxJQUFBLEVBQUEsR0FBQSxLQUFBb3ZDLE9BQUEsR0FBQSxJQUFBLEVBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQUEsT0FBQSxDQUFBLGtCQUFBLENBQUEsR0FBQXB2QyxDQUFBQSxDQUFBLENBQUEvSixDQUFBLENBQUEsSUFBQSxDQUFBLEtBQUF3dkMsU0FBQSxDQUFBLG1DQUFBLEtBQUF4c0MsT0FBQSxDQUFBczFDLFNBQUEsRUFBQSxlQUFBLEtBQUF0MUMsT0FBQSxDQUFBczFDLFNBQUEsRUFBQSxLQUFBOUksU0FBQSxDQUFBLElBQUEsQ0FBQSxvQkFBQSxDQUFBLENBQUEsS0FBQW9TLFlBQUEsRUFBQSxDQUFBNzNDLENBQUEsQ0FBQSxLQUFBNDNDLFlBQUEsQ0FBQSxLQUFBMytDLE9BQUEsQ0FBQW8rQyxXQUFBLEdBQUFyM0MsQ0FBQSxDQUFBQSxDQUFBLENBQUE2RCxNQUFBLENBQUEsVUFBQSxDQUFBLENBQUEsQ0FBQTdELENBQUEsQ0FBQTFJLE1BQUEsR0FBQTJrQixDQUFBLENBQUFsa0IsSUFBQSxDQUFBLENBQUEsT0FBQSxDQUFBLE1BQUEsQ0FBQSxDQUFBLFNBQUFra0IsQ0FBQSxDQUFBaVgsQ0FBQSxDQUFBLENBQUEsR0FBQXBtQixDQUFBQSxDQUFBLENBQUE5TSxDQUFBLENBQUFrekIsQ0FBQSxDQUFBLEdBQUF6ZCxJQUFBLENBQUEsc0JBQUEsQ0FBQSxDQUFBLEdBQUEzSSxDQUFBLEVBQUE3VyxDQUFBLENBQUEsSUFBQTZXLENBQUEsQ0FBQWczQixVQUFBLENBQUEsU0FBQSxDQUFBLENBQUEsQ0FBQSxHQUFBbEIsQ0FBQUEsQ0FBQSxDQUFBM3NDLENBQUEsQ0FBQSxJQUFBNlcsQ0FBQSxDQUFBZzNCLFVBQUEsQ0FBQSxTQUFBLENBQUEsQ0FBQSxJQUFBOWpDLENBQUEsQ0FBQTFJLE1BQUEsQ0FBQSxNQUFBLENBQUE0N0IsQ0FBQSxDQUFBLENBQUEwUCxDQUFBLENBQUE5UixPQUFBLENBQUE3NkIsQ0FBQSxDQUFBNmhELHFCQUFBLENBQUFsVixDQUFBLENBQUE5UixPQUFBLENBQUFoa0IsQ0FBQSxDQUFBLENBQUFBLENBQUEsQ0FBQW0yQixPQUFBLENBQUFuMkIsQ0FBQSxDQUFBZzNCLFVBQUEsRUFBQWxCLENBQUEsQ0FBQSxDQUFBLENBQUEsSUFBQTNzQyxDQUFBQSxDQUFBLENBQUE4aEQsa0JBQUEsQ0FBQS8zQyxDQUFBLENBQUFrekIsQ0FBQSxDQUFBLEVBQUEsQ0FBQUEsQ0FBQSxFQUFBLENBQUEsRUFBQSxLQUFBeWtCLGdCQUFBLENBQUEsU0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsRUFBQTE3QixDQUFBLENBQUFxbkIsTUFBQSxDQUFBLGtCQUFBLENBQUEsQ0FBQXJuQixDQUFBLENBQUFtbkIsRUFBQSxDQUFBOEwsY0FBQSxDQUFBLENBQUFyNEMsT0FBQSxDQUFBLFFBQUEsQ0FBQW9DLE9BQUEsQ0FBQSxDQUFBMEcsUUFBQSxDQUFBLElBQUEsQ0FBQWszQyxLQUFBLENBQUEsSUFBQSxDQUFBMEIsSUFBQSxDQUFBLENBQUEsQ0FBQSxDQUFBem5CLE9BQUEsQ0FBQSxDQUFBLHlCQUFBLGVBQUEsQ0FBQSx3QkFBQSxlQUFBLENBQUEsQ0FBQSxDQUFBOFQsaUJBQUEsQ0FBQSw0QkFBQSxDQUFBLEdBQUE1a0MsQ0FBQUEsQ0FBQSxDQUFBL0osQ0FBQSxDQUFBaTlCLENBQUEsQ0FBQSxJQUFBLENBQUFwbUIsQ0FBQSxDQUFBLEtBQUE2MkIsTUFBQSxJQUFBLEVBQUEsQ0FBQSxNQUFBLE1BQUE2VSxTQUFBLEdBQUF2aUQsQ0FBQSxDQUFBLEtBQUFndEMsT0FBQSxDQUFBdU4sTUFBQSxFQUFBLENBQUEsS0FBQXFHLEtBQUEsQ0FBQTU2QixDQUFBLENBQUFobUIsQ0FBQSxDQUFBQSxDQUFBLENBQUFxQixNQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxLQUFBdS9DLEtBQUEsQ0FBQXYvQyxNQUFBLEVBQUEya0IsQ0FBQSxDQUFBaGlCLEtBQUEsQ0FBQSx5Q0FBQSxDQUFBLENBQUEsS0FBQXcrQyxhQUFBLENBQUEsRUFBQSxDQUFBLEtBQUE1QixLQUFBLENBQUFocEMsUUFBQSxHQUFBVCxHQUFBLENBQUEsS0FBQTYxQixPQUFBLENBQUEsQ0FBQSxDQUFBLEVBQUFsckMsSUFBQSxDQUFBLFVBQUEsQ0FBQW03QixDQUFBLENBQUF1bEIsYUFBQSxFQUFBLElBQUEsS0FBQW5qRCxRQUFBLENBQUEybUIsQ0FBQSxDQUFBLElBQUEsQ0FBQSxDQUFBNWxCLElBQUEsRUFBQSxDQUFBLEtBQUFxaUQsU0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLEtBQUFELGFBQUEsR0FBQTNyQyxDQUFBLENBQUErcEMsS0FBQSxDQUFBLEtBQUE0QixhQUFBLENBQUEsQ0FBQXo0QyxDQUFBLENBQUEsS0FBQWlqQyxPQUFBLENBQUEsQ0FBQSxFQUFBdGpDLFFBQUEsQ0FBQSxNQUFBSyxDQUFBLEdBQUE4TSxDQUFBLENBQUFuTixRQUFBLENBQUFLLENBQUEsQ0FBQSxDQUFBOE0sQ0FBQSxDQUFBLENBQUEsQ0FBQSszQixPQUFBLENBQUEsa0JBQUEsQ0FBQSxHQUFBNW9CLENBQUFBLENBQUEsQ0FBQSxLQUFBZ25CLE9BQUEsQ0FBQSxDQUFBLEVBQUF4NkIsT0FBQSxDQUFBLEtBQUE0bUMscUJBQUEsR0FBQSxNQUFBLEtBQUFwMkMsT0FBQSxDQUFBMEcsUUFBQSxHQUFBLEtBQUExRyxPQUFBLENBQUEwRyxRQUFBLENBQUEsS0FBQXNqQyxPQUFBLENBQUEsQ0FBQSxFQUFBdGpDLFFBQUEsQ0FBQSxDQUFBLEtBQUF3bEMsVUFBQSxDQUFBLFVBQUEsQ0FBQSxLQUFBbHNDLE9BQUEsQ0FBQTBHLFFBQUEsQ0FBQSxDQUFBLEtBQUE4bEMsU0FBQSxDQUFBLGtCQUFBLENBQUEsNkJBQUEsQ0FBQSxDQUFBLEtBQUFBLFNBQUEsQ0FBQSxLQUFBb1IsS0FBQSxDQUFBLHdCQUFBLENBQUEscUJBQUEsQ0FBQSxDQUFBLFVBQUEsS0FBQXBoRCxJQUFBLEVBQUEsS0FBQWd3QyxTQUFBLENBQUEsS0FBQW9SLEtBQUEsQ0FBQSw4QkFBQSxDQUFBLENBQUEsS0FBQTU5QyxPQUFBLENBQUE0OUMsS0FBQSxFQUFBLEtBQUE1OUMsT0FBQSxDQUFBNDlDLEtBQUEsR0FBQSxLQUFBNEIsYUFBQSxDQUFBLEtBQUFFLFlBQUEsRUFBQSxDQUFBLEtBQUFGLGFBQUEsR0FBQSxLQUFBeC9DLE9BQUEsQ0FBQTQ5QyxLQUFBLENBQUEsS0FBQTRCLGFBQUEsQ0FBQSxDQUFBLEtBQUFmLFFBQUEsRUFBQSxDQUFBejdCLENBQUEsR0FBQSxLQUFBd3BCLFNBQUEsQ0FBQSxLQUFBb1IsS0FBQSxDQUFBLDBCQUFBLENBQUEsaUJBQUEsRUFBQSxLQUFBMEIsSUFBQSxFQUFBLEtBQUE5UyxTQUFBLENBQUEsS0FBQThTLElBQUEsQ0FBQSxJQUFBLENBQUEsZ0JBQUEsQ0FBQSxDQUFBLENBQUEsS0FBQTdULEdBQUEsQ0FBQSxDQUFBbVEsTUFBQSxDQUFBLGdCQUFBLENBQUF4ekIsS0FBQSxDQUFBLGdCQUFBLENBQUEsS0FBQW9rQixTQUFBLENBQUEsS0FBQW9SLEtBQUEsQ0FBQSxJQUFBLENBQUEsZ0NBQUEsRUFBQSxDQUFBLENBQUF2MUIsSUFBQSxDQUFBLGVBQUEsQ0FBQSxLQUFBMmpCLFlBQUEsQ0FBQSxLQUFBNFIsS0FBQSxDQUFBLElBQUEsQ0FBQSxnQ0FBQSxFQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBMkIsU0FBQSxDQUFBLG9CQUFBLENBQUEsR0FBQXg0QyxDQUFBQSxDQUFBLENBQUEsS0FBQWlqQyxPQUFBLENBQUEsQ0FBQSxFQUFBcmpDLFFBQUEsQ0FBQXBFLFdBQUEsRUFBQSxDQUFBLEtBQUEvRixJQUFBLENBQUEsS0FBQXd0QyxPQUFBLENBQUEsQ0FBQSxFQUFBeHRDLElBQUEsQ0FBQSxVQUFBdUssQ0FBQSxFQUFBLGlCQUFBZ0IsSUFBQSxDQUFBLEtBQUF2TCxJQUFBLENBQUEsRUFBQXdtQixDQUFBLENBQUFoaUIsS0FBQSxDQUFBLGtEQUFBK0YsQ0FBQSxDQUFBLG9CQUFBLENBQUEsS0FBQXZLLElBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQWlpRCxRQUFBLENBQUEsbUJBQUEsQ0FBQSxLQUFBa0IsV0FBQSxDQUFBLEtBQUEzVixPQUFBLENBQUEsQ0FBQSxFQUFBeDZCLE9BQUEsRUFBQSxDQUFBLENBQUE2NkIsTUFBQSxDQUFBLGlCQUFBLENBQUEsTUFBQSxNQUFBdVQsS0FBQSxDQUFBLENBQUEsQ0FBQWdDLGNBQUEsQ0FBQSx5QkFBQSxDQUFBLEdBQUE3NEMsQ0FBQUEsQ0FBQSxDQUFBL0osQ0FBQSxDQUFBLEtBQUFndEMsT0FBQSxDQUFBLENBQUEsRUFBQS9wQyxJQUFBLENBQUFnNkIsQ0FBQSxDQUFBLGVBQUFqWCxDQUFBLENBQUFtbkIsRUFBQSxDQUFBMzJCLGNBQUEsQ0FBQXhXLENBQUEsQ0FBQSxDQUFBLElBQUEsQ0FBQSxNQUFBQSxDQUFBQSxDQUFBLEVBQUErSixDQUFBLENBQUEsS0FBQWl2QyxJQUFBLENBQUEzM0MsTUFBQSxDQUFBMmtCLENBQUEsQ0FBQSxLQUFBZ3pCLElBQUEsQ0FBQSxDQUFBLEVBQUE1cEMsUUFBQSxDQUFBLENBQUF4QixNQUFBLENBQUFxdkIsQ0FBQSxDQUFBLENBQUFqWCxDQUFBLENBQUFpWCxDQUFBLENBQUEsQ0FBQXJ2QixNQUFBLENBQUEsVUFBQSxDQUFBLE1BQUEsS0FBQW9ZLENBQUEsQ0FBQSxJQUFBLENBQUEsQ0FBQWd6QixJQUFBLEdBQUEzM0MsTUFBQSxDQUFBLENBQUEsQ0FBQSxDQUFBMEksQ0FBQSxDQUFBb04sR0FBQSxDQUFBLEtBQUE2MUIsT0FBQSxDQUFBLEVBQUFobkIsQ0FBQSxDQUFBLEVBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQTY4QixjQUFBLENBQUEseUJBQUEsQ0FBQSxHQUFBOTRDLENBQUFBLENBQUEsQ0FBQSxLQUFBaWpDLE9BQUEsQ0FBQSxDQUFBLEVBQUF4NkIsT0FBQSxDQUFBLEtBQUE2OEIsWUFBQSxDQUFBLEtBQUF1UixLQUFBLENBQUEsMEJBQUEsQ0FBQSxpQkFBQSxDQUFBNzJDLENBQUEsRUFBQSxLQUFBL0csT0FBQSxDQUFBcy9DLElBQUEsRUFBQSxhQUFBLEtBQUE5aUQsSUFBQSxFQUFBLEtBQUE2dkMsWUFBQSxDQUFBLEtBQUFpVCxJQUFBLENBQUEsSUFBQSxDQUFBLGdDQUFBLENBQUF2NEMsQ0FBQSxFQUFBc2xDLFlBQUEsQ0FBQSxLQUFBaVQsSUFBQSxDQUFBLElBQUEsQ0FBQSxlQUFBLENBQUEsQ0FBQXY0QyxDQUFBLENBQUEsQ0FBQSxVQUFBLEtBQUF2SyxJQUFBLEVBQUEsS0FBQW9qRCxjQUFBLEdBQUE5Z0QsSUFBQSxDQUFBLFVBQUEsQ0FBQSxHQUFBaUksQ0FBQUEsQ0FBQSxDQUFBaWMsQ0FBQSxDQUFBLElBQUEsQ0FBQSxDQUFBczdCLGFBQUEsQ0FBQSxVQUFBLENBQUEsQ0FBQXYzQyxDQUFBLEVBQUFBLENBQUEsQ0FBQWlsQyxZQUFBLENBQUFqbEMsQ0FBQSxDQUFBNjJDLEtBQUEsQ0FBQSwwQkFBQSxDQUFBLGlCQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUE3UixRQUFBLENBQUEsbUJBQUEsQ0FBQSxLQUFBc0ssdUJBQUEsR0FBQSxLQUFBaUosSUFBQSxHQUFBLEtBQUFBLElBQUEsQ0FBQXhvQyxNQUFBLEdBQUEsS0FBQWdwQyxTQUFBLENBQUFocEMsTUFBQSxFQUFBLENBQUEsQ0FBQSxDQUFBLENBQUFvMUIsVUFBQSxDQUFBLG9CQUFBbHBCLENBQUEsQ0FBQWpjLENBQUEsQ0FBQSxDQUFBLE1BQUEsVUFBQWljLENBQUEsRUFBQWpjLENBQUEsRUFBQSxLQUFBMmpDLE1BQUEsQ0FBQTFuQixDQUFBLENBQUFqYyxDQUFBLEVBQUEsYUFBQWljLENBQUEsRUFBQSxLQUFBcXBCLFlBQUEsQ0FBQSxLQUFBdVIsS0FBQSxDQUFBLElBQUEsQ0FBQSxtQkFBQSxDQUFBNzJDLENBQUEsRUFBQSxLQUFBaWpDLE9BQUEsQ0FBQSxDQUFBLEVBQUF0akMsUUFBQSxDQUFBSyxDQUFBLENBQUEsSUFBQSxFQUFBLEdBQUEsS0FBQW92QyxPQUFBLEdBQUEsSUFBQSxFQUFBLENBQUEsRUFBQSxJQUFBLEVBQUEsQ0FBQSxDQUFBLENBQUF3SixXQUFBLENBQUEscUJBQUE1NEMsQ0FBQSxDQUFBLENBQUEsR0FBQS9KLENBQUFBLENBQUEsQ0FBQSw2QkFBQSxDQUFBLEtBQUFnRCxPQUFBLENBQUFzL0MsSUFBQSxFQUFBLEtBQUFBLElBQUEsR0FBQSxLQUFBQSxJQUFBLENBQUF0OEIsQ0FBQSxDQUFBLFFBQUEsQ0FBQSxDQUFBLEtBQUE4OEIsU0FBQSxDQUFBOThCLENBQUEsQ0FBQSxnQkFBQSxDQUFBLENBQUEsS0FBQXdwQixTQUFBLENBQUEsS0FBQXNULFNBQUEsQ0FBQSw2QkFBQSxDQUFBLEVBQUEsYUFBQSxLQUFBdGpELElBQUEsRUFBQVEsQ0FBQSxFQUFBK0osQ0FBQSxDQUFBLGdDQUFBLENBQUEsZUFBQSxDQUFBLEtBQUFpbEMsWUFBQSxDQUFBLEtBQUFzVCxJQUFBLENBQUEsSUFBQSxDQUFBdjRDLENBQUEsQ0FBQSxlQUFBLENBQUEsZUFBQSxDQUFBLEVBQUEvSixDQUFBLEVBQUEsZUFBQSxDQUFBLEtBQUF3dkMsU0FBQSxDQUFBLEtBQUE4UyxJQUFBLENBQUEsdUJBQUEsQ0FBQXRpRCxDQUFBLENBQUEsQ0FBQStKLENBQUEsRUFBQSxLQUFBaWxDLFlBQUEsQ0FBQSxLQUFBc1QsSUFBQSxDQUFBLElBQUEsQ0FBQSxnQ0FBQSxDQUFBLENBQUEsS0FBQUEsSUFBQSxDQUFBdjBCLFNBQUEsQ0FBQSxLQUFBNnlCLEtBQUEsRUFBQWp6QixLQUFBLENBQUEsS0FBQW0xQixTQUFBLENBQUEsRUFBQSxJQUFBLEVBQUEsR0FBQSxLQUFBUixJQUFBLEdBQUEsS0FBQUEsSUFBQSxDQUFBeG9DLE1BQUEsR0FBQSxLQUFBZ3BDLFNBQUEsQ0FBQWhwQyxNQUFBLEVBQUEsQ0FBQSxNQUFBLE1BQUF3b0MsSUFBQSxDQUFBLENBQUEsQ0FBQSxDQUFBSSxZQUFBLENBQUEsdUJBQUEsQ0FBQSxHQUFBMThCLENBQUFBLENBQUEsQ0FBQSxLQUFBNDZCLEtBQUEsQ0FBQWhwQyxRQUFBLEdBQUFULEdBQUEsQ0FBQSxLQUFBNjFCLE9BQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLEtBQUFzVixJQUFBLEdBQUF0OEIsQ0FBQSxDQUFBQSxDQUFBLENBQUE3TyxHQUFBLENBQUEsS0FBQW1yQyxJQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsRUFBQSxLQUFBUSxTQUFBLEdBQUE5OEIsQ0FBQSxDQUFBQSxDQUFBLENBQUE3TyxHQUFBLENBQUEsS0FBQTJyQyxTQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBOThCLENBQUEsQ0FBQWxNLE1BQUEsRUFBQSxDQUFBLEtBQUE4bUMsS0FBQSxDQUFBcnpCLE1BQUEsQ0FBQSxLQUFBdnFCLE9BQUEsQ0FBQTQ5QyxLQUFBLENBQUEsQ0FBQSxDQUFBLENBQUF6SCxPQUFBLENBQUEsa0JBQUEsQ0FBQSxHQUFBbnpCLENBQUFBLENBQUEsQ0FBQSxLQUFBZ25CLE9BQUEsQ0FBQSxDQUFBLEVBQUF4NkIsT0FBQSxDQUFBekksQ0FBQSxDQUFBLEtBQUFpakMsT0FBQSxDQUFBLENBQUEsRUFBQXRqQyxRQUFBLENBQUEsS0FBQWk1QyxXQUFBLENBQUEzOEIsQ0FBQSxFQUFBLEtBQUFxcEIsWUFBQSxDQUFBLEtBQUF1UixLQUFBLENBQUEsMEJBQUEsQ0FBQSxpQkFBQSxDQUFBNTZCLENBQUEsQ0FBQSxDQUFBLE9BQUEsS0FBQWhqQixPQUFBLENBQUE0OUMsS0FBQSxFQUFBLEtBQUE4QixZQUFBLEVBQUEsQ0FBQTM0QyxDQUFBLEdBQUEsS0FBQS9HLE9BQUEsQ0FBQTBHLFFBQUEsRUFBQSxLQUFBdWxDLFdBQUEsQ0FBQSxDQUFBdmxDLFFBQUEsQ0FBQUssQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUFpYyxDQUFBLENBQUFtbkIsRUFBQSxDQUFBbVUsYUFBQSxDQUFBdDdCLENBQUEsQ0FBQXFuQixNQUFBLENBQUEsV0FBQSxDQUFBLENBQUF6c0MsT0FBQSxDQUFBLFFBQUEsQ0FBQXN0QyxjQUFBLENBQUEsVUFBQSxDQUFBbHJDLE9BQUEsQ0FBQSxDQUFBNjNCLE9BQUEsQ0FBQSxDQUFBLFlBQUEsZUFBQSxDQUFBLENBQUFueEIsUUFBQSxDQUFBLElBQUEsQ0FBQTQ0QyxJQUFBLENBQUEsSUFBQSxDQUFBUyxZQUFBLENBQUEsV0FBQSxDQUFBbkMsS0FBQSxDQUFBLElBQUEsQ0FBQW9DLFNBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBclUsaUJBQUEsQ0FBQSw0QkFBQSxDQUFBLEdBQUEzb0IsQ0FBQUEsQ0FBQSxDQUFBamMsQ0FBQSxDQUFBLEtBQUEyakMsTUFBQSxJQUFBLEVBQUEsQ0FBQSxNQUFBLE1BQUF1VixPQUFBLENBQUEsS0FBQWpXLE9BQUEsQ0FBQXIyQixFQUFBLENBQUEsT0FBQSxDQUFBLENBQUFxUCxDQUFBLENBQUEsS0FBQWduQixPQUFBLENBQUEsQ0FBQSxFQUFBdGpDLFFBQUEsQ0FBQSxNQUFBc2MsQ0FBQSxHQUFBamMsQ0FBQSxDQUFBTCxRQUFBLENBQUFzYyxDQUFBLENBQUEsQ0FBQSxLQUFBdzhCLGFBQUEsQ0FBQSxLQUFBUyxPQUFBLENBQUEsS0FBQWpXLE9BQUEsQ0FBQS9zQyxHQUFBLEVBQUEsQ0FBQSxLQUFBK3NDLE9BQUEsQ0FBQW5nQixJQUFBLEVBQUEsQ0FBQSxLQUFBMjFCLGFBQUEsR0FBQXo0QyxDQUFBLENBQUE2MkMsS0FBQSxDQUFBLEtBQUE0QixhQUFBLENBQUEsQ0FBQXo0QyxDQUFBLENBQUEsQ0FBQSxDQUFBNmtDLE9BQUEsQ0FBQSxrQkFBQSxDQUFBLENBQUEsS0FBQXRyQixNQUFBLENBQUEwL0IsU0FBQSxDQUFBLENBQUEsS0FBQWhnRCxPQUFBLENBQUFzL0MsSUFBQSxHQUFBLEtBQUF0L0MsT0FBQSxDQUFBZ2dELFNBQUEsQ0FBQSxDQUFBLENBQUEsRUFBQSxNQUFBLEtBQUFoZ0QsT0FBQSxDQUFBMEcsUUFBQSxHQUFBLEtBQUExRyxPQUFBLENBQUEwRyxRQUFBLENBQUEsS0FBQXNqQyxPQUFBLENBQUEsQ0FBQSxFQUFBdGpDLFFBQUEsRUFBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLEtBQUF3NUMsUUFBQSxDQUFBLENBQUEsQ0FBQSxLQUFBbFcsT0FBQSxDQUFBMzlCLElBQUEsQ0FBQSxPQUFBLENBQUEsQ0FBQSxLQUFBck0sT0FBQSxDQUFBNDlDLEtBQUEsRUFBQSxLQUFBNTlDLE9BQUEsQ0FBQTQ5QyxLQUFBLEdBQUEsS0FBQTRCLGFBQUEsR0FBQSxLQUFBUyxPQUFBLENBQUEsS0FBQWpXLE9BQUEsQ0FBQS9zQyxHQUFBLENBQUEsS0FBQStDLE9BQUEsQ0FBQTQ5QyxLQUFBLENBQUEsQ0FBQSxLQUFBNVQsT0FBQSxDQUFBbmdCLElBQUEsQ0FBQSxLQUFBN3BCLE9BQUEsQ0FBQTQ5QyxLQUFBLENBQUEsQ0FBQSxDQUFBLEtBQUFwUixTQUFBLENBQUEsV0FBQSxDQUFBLFdBQUEsQ0FBQSxDQUFBLEtBQUFOLFVBQUEsQ0FBQSxVQUFBLENBQUEsS0FBQWxzQyxPQUFBLENBQUEwRyxRQUFBLENBQUEsQ0FBQSxLQUFBKzNDLFFBQUEsRUFBQSxDQUFBLEtBQUF6VSxPQUFBLENBQUFyMkIsRUFBQSxDQUFBLEdBQUEsR0FBQSxLQUFBODNCLEdBQUEsQ0FBQSxDQUFBMFUsS0FBQSxDQUFBLGVBQUFwNUMsQ0FBQSxDQUFBLENBQUFBLENBQUEsQ0FBQXVnQixPQUFBLEdBQUF0RSxDQUFBLENBQUFtbkIsRUFBQSxDQUFBN2lCLE9BQUEsQ0FBQTh2QixLQUFBLEdBQUFyd0MsQ0FBQSxDQUFBNGQsY0FBQSxHQUFBLEtBQUFxbEIsT0FBQSxDQUFBLENBQUEsRUFBQXZrQixLQUFBLENBQUEsS0FBQXVrQixPQUFBLENBQUEsQ0FBQSxFQUFBdmtCLEtBQUEsRUFBQSxDQUFBLEtBQUF1a0IsT0FBQSxDQUFBcmtCLE9BQUEsQ0FBQSxPQUFBLENBQUEsRUFBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQTg0QixRQUFBLENBQUEsbUJBQUEsQ0FBQSxLQUFBelUsT0FBQSxDQUFBcjJCLEVBQUEsQ0FBQSxRQUFBLEdBQUEsS0FBQXEyQixPQUFBLENBQUEzOUIsSUFBQSxDQUFBLE1BQUEsQ0FBQSxRQUFBLENBQUEsQ0FBQSxLQUFBck0sT0FBQSxDQUFBcy9DLElBQUEsR0FBQSxLQUFBSyxXQUFBLENBQUEsTUFBQSxDQUFBLEtBQUEzL0MsT0FBQSxDQUFBcy9DLElBQUEsRUFBQSxLQUFBYyxjQUFBLEVBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQUEsY0FBQSxDQUFBLHlCQUFBLENBQUEsS0FBQUMsS0FBQSxDQUFBLEtBQUFyVyxPQUFBLENBQUEzOUIsSUFBQSxDQUFBLE9BQUEsQ0FBQSxDQUFBLEtBQUFyTSxPQUFBLENBQUFnZ0QsU0FBQSxFQUFBLEtBQUFLLEtBQUEsRUFBQSxLQUFBclcsT0FBQSxDQUFBMzlCLElBQUEsQ0FBQSxPQUFBLENBQUEsS0FBQXJNLE9BQUEsQ0FBQTQ5QyxLQUFBLENBQUEsQ0FBQSxDQUFBLENBQUErQixXQUFBLENBQUEscUJBQUE1NEMsQ0FBQSxDQUFBL0osQ0FBQSxDQUFBLENBQUEsR0FBQWk5QixDQUFBQSxDQUFBLENBQUEsaUJBQUFsekIsQ0FBQSxDQUFBOE0sQ0FBQSxDQUFBb21CLENBQUEsQ0FBQSxLQUFBajZCLE9BQUEsQ0FBQSsvQyxZQUFBLENBQUEvaUQsQ0FBQSxDQUFBMnNDLENBQUEsQ0FBQSxRQUFBOTFCLENBQUEsRUFBQSxXQUFBQSxDQUFBLENBQUEsS0FBQXlyQyxJQUFBLENBQUFybEIsQ0FBQSxFQUFBLEtBQUErUixZQUFBLENBQUEsS0FBQXNULElBQUEsQ0FBQSxJQUFBLENBQUEsS0FBQXQvQyxPQUFBLENBQUFzL0MsSUFBQSxDQUFBLEVBQUEsS0FBQUEsSUFBQSxDQUFBdDhCLENBQUEsQ0FBQSxRQUFBLENBQUEsQ0FBQSxLQUFBd3BCLFNBQUEsQ0FBQSxLQUFBOFMsSUFBQSxDQUFBLGdCQUFBLENBQUEsU0FBQSxDQUFBLENBQUEsS0FBQXQvQyxPQUFBLENBQUFnZ0QsU0FBQSxFQUFBLEtBQUF4VCxTQUFBLENBQUEscUJBQUEsQ0FBQSxFQUFBdlMsQ0FBQSxFQUFBLEtBQUF1UyxTQUFBLENBQUEsS0FBQThTLElBQUEsQ0FBQSxJQUFBLENBQUF0aUQsQ0FBQSxDQUFBLENBQUEsS0FBQXNqRCxXQUFBLENBQUF6c0MsQ0FBQSxDQUFBLENBQUE4MUIsQ0FBQSxFQUFBLEtBQUE2QyxTQUFBLENBQUEsS0FBQThTLElBQUEsQ0FBQSxJQUFBLENBQUEsc0JBQUEsRUFBQSxLQUFBUSxTQUFBLEVBQUEsS0FBQUEsU0FBQSxDQUFBaHBDLE1BQUEsRUFBQSxHQUFBLEtBQUFncEMsU0FBQSxHQUFBLEtBQUFBLFNBQUEsQ0FBQTk4QixDQUFBLENBQUEsZ0JBQUEsQ0FBQSxDQUFBLEtBQUF3cEIsU0FBQSxDQUFBLEtBQUFzVCxTQUFBLENBQUEsc0JBQUEsQ0FBQSxFQUFBLEtBQUE5VCxZQUFBLENBQUEsS0FBQXNULElBQUEsQ0FBQSxJQUFBLENBQUEscUJBQUEsQ0FBQSxDQUFBLEtBQUFpQixnQkFBQSxDQUFBMXNDLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBazRCLFFBQUEsQ0FBQSxtQkFBQSxDQUFBLEtBQUEvQixPQUFBLENBQUFuVCxVQUFBLENBQUEsTUFBQSxFQUFBLEtBQUF5b0IsSUFBQSxFQUFBLEtBQUFBLElBQUEsQ0FBQXhvQyxNQUFBLEVBQUEsQ0FBQSxLQUFBZ3BDLFNBQUEsRUFBQSxLQUFBQSxTQUFBLENBQUFocEMsTUFBQSxFQUFBLENBQUEsS0FBQW9wQyxRQUFBLEVBQUEsS0FBQWxXLE9BQUEsQ0FBQW5ULFVBQUEsQ0FBQSxPQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEwcEIsZ0JBQUEsQ0FBQSwwQkFBQXY5QixDQUFBLENBQUEsQ0FBQSxLQUFBczhCLElBQUEsQ0FBQSxrQkFBQXYzQyxJQUFBLENBQUFpYixDQUFBLEVBQUEsUUFBQSxDQUFBLE9BQUEsRUFBQSxLQUFBODhCLFNBQUEsRUFBQSxDQUFBLENBQUFRLFdBQUEsQ0FBQSxxQkFBQXQ5QixDQUFBLENBQUEsQ0FBQSxLQUFBZ25CLE9BQUEsQ0FBQSxrQkFBQWppQyxJQUFBLENBQUFpYixDQUFBLEVBQUEsUUFBQSxDQUFBLFNBQUEsRUFBQSxLQUFBczhCLElBQUEsRUFBQSxDQUFBLENBQUFyVCxXQUFBLENBQUEscUJBQUFqcEIsQ0FBQSxDQUFBLENBQUEsR0FBQWpjLENBQUFBLENBQUEsQ0FBQSxJQUFBLEVBQUEsR0FBQWljLENBQUEsQ0FBQWc5QixTQUFBLENBQUEsS0FBQWhnRCxPQUFBLENBQUFnZ0QsU0FBQSxDQUFBaDlCLENBQUEsQ0FBQWc5QixTQUFBLENBQUFoakQsQ0FBQSxDQUFBLElBQUEsRUFBQSxHQUFBZ21CLENBQUEsQ0FBQXM4QixJQUFBLENBQUEsS0FBQXQvQyxPQUFBLENBQUFzL0MsSUFBQSxDQUFBdDhCLENBQUEsQ0FBQXM4QixJQUFBLENBQUF2NEMsQ0FBQSxFQUFBL0osQ0FBQSxHQUFBZ21CLENBQUEsQ0FBQWc5QixTQUFBLENBQUEsQ0FBQSxDQUFBLEVBQUEsS0FBQXRWLE1BQUEsQ0FBQTFuQixDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUFrcEIsVUFBQSxDQUFBLG9CQUFBbHBCLENBQUEsQ0FBQWpjLENBQUEsQ0FBQSxDQUFBLFNBQUFpYyxDQUFBLEdBQUFqYyxDQUFBLENBQUEsS0FBQTQ0QyxXQUFBLENBQUEzOEIsQ0FBQSxDQUFBamMsQ0FBQSxDQUFBLENBQUEsS0FBQXU0QyxJQUFBLEdBQUEsS0FBQUEsSUFBQSxDQUFBeG9DLE1BQUEsR0FBQSxLQUFBZ3BDLFNBQUEsRUFBQSxLQUFBQSxTQUFBLENBQUFocEMsTUFBQSxFQUFBLENBQUEsRUFBQSxpQkFBQWtNLENBQUEsRUFBQSxLQUFBMjhCLFdBQUEsQ0FBQTM4QixDQUFBLENBQUFqYyxDQUFBLENBQUEsQ0FBQSxjQUFBaWMsQ0FBQSxHQUFBLEtBQUFxcEIsWUFBQSxDQUFBLHFCQUFBLENBQUEsSUFBQSxDQUFBLENBQUF0bEMsQ0FBQSxFQUFBLEtBQUFxNUMsY0FBQSxFQUFBLENBQUEsQ0FBQSxVQUFBcDlCLENBQUEsR0FBQSxLQUFBaTlCLE9BQUEsQ0FBQSxLQUFBalcsT0FBQSxDQUFBL3NDLEdBQUEsQ0FBQThKLENBQUEsQ0FBQSxFQUFBLEtBQUFpakMsT0FBQSxDQUFBbmdCLElBQUEsQ0FBQTlpQixDQUFBLEVBQUEsS0FBQXU0QyxJQUFBLEdBQUEsS0FBQWdCLFdBQUEsQ0FBQSxLQUFBdGdELE9BQUEsQ0FBQSsvQyxZQUFBLEVBQUEsS0FBQVEsZ0JBQUEsQ0FBQSxLQUFBdmdELE9BQUEsQ0FBQSsvQyxZQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxLQUFBclYsTUFBQSxDQUFBMW5CLENBQUEsQ0FBQWpjLENBQUEsQ0FBQSxDQUFBLGFBQUFpYyxDQUFBLEdBQUEsS0FBQXFwQixZQUFBLENBQUEsSUFBQSxDQUFBLG1CQUFBLENBQUF0bEMsQ0FBQSxFQUFBLEtBQUFpakMsT0FBQSxDQUFBLENBQUEsRUFBQXRqQyxRQUFBLENBQUFLLENBQUEsQ0FBQUEsQ0FBQSxFQUFBLEtBQUFpakMsT0FBQSxDQUFBM2hCLElBQUEsRUFBQSxDQUFBLENBQUEsQ0FBQSxDQUFBOHRCLE9BQUEsQ0FBQSxrQkFBQSxDQUFBLEdBQUFuekIsQ0FBQUEsQ0FBQSxDQUFBLEtBQUFnbkIsT0FBQSxDQUFBcjJCLEVBQUEsQ0FBQSxlQUFBLEVBQUEsS0FBQXEyQixPQUFBLENBQUEsQ0FBQSxFQUFBdGpDLFFBQUEsQ0FBQSxLQUFBc2pDLE9BQUEsQ0FBQTFSLFFBQUEsQ0FBQSxvQkFBQSxDQUFBLENBQUF0VixDQUFBLEdBQUEsS0FBQWhqQixPQUFBLENBQUEwRyxRQUFBLEVBQUEsS0FBQXVsQyxXQUFBLENBQUEsQ0FBQXZsQyxRQUFBLENBQUFzYyxDQUFBLENBQUEsQ0FBQSxDQUFBLEtBQUFvOUIsY0FBQSxFQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQXA5QixDQUFBLENBQUFnd0IsWUFBQSxHQUFBLENBQUEsQ0FBQSxHQUFBaHdCLENBQUEsQ0FBQXFuQixNQUFBLENBQUEsV0FBQSxDQUFBcm5CLENBQUEsQ0FBQW1uQixFQUFBLENBQUFubEIsTUFBQSxDQUFBLENBQUFobEIsT0FBQSxDQUFBLENBQUE1QyxJQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEyNkMsS0FBQSxDQUFBLENBQUF5SSxPQUFBLENBQUEsSUFBQSxDQUFBQyxTQUFBLENBQUEsSUFBQSxDQUFBLENBQUEsQ0FBQTdVLE9BQUEsQ0FBQSxrQkFBQSxDQUFBLEtBQUE1ckMsT0FBQSxDQUFBZ2dELFNBQUEsRUFBQSxDQUFBLEtBQUFoZ0QsT0FBQSxDQUFBNUMsSUFBQSxHQUFBLEtBQUE0QyxPQUFBLENBQUFnZ0QsU0FBQSxDQUFBLEtBQUFoZ0QsT0FBQSxDQUFBNUMsSUFBQSxFQUFBLENBQUEsS0FBQTRDLE9BQUEsQ0FBQWdnRCxTQUFBLEVBQUEsS0FBQWhnRCxPQUFBLENBQUE1QyxJQUFBLEdBQUEsS0FBQTRDLE9BQUEsQ0FBQTVDLElBQUEsQ0FBQSxLQUFBNEMsT0FBQSxDQUFBZ2dELFNBQUEsQ0FBQSxDQUFBLEtBQUFoZ0QsT0FBQSxDQUFBcy9DLElBQUEsRUFBQSxDQUFBLEtBQUF0L0MsT0FBQSxDQUFBKzNDLEtBQUEsQ0FBQXlJLE9BQUEsRUFBQSxDQUFBLEtBQUF4Z0QsT0FBQSxDQUFBKzNDLEtBQUEsQ0FBQTBJLFNBQUEsQ0FBQSxLQUFBemdELE9BQUEsQ0FBQXMvQyxJQUFBLEdBQUEsS0FBQXQvQyxPQUFBLENBQUErM0MsS0FBQSxDQUFBeUksT0FBQSxDQUFBLEtBQUF4Z0QsT0FBQSxDQUFBcy9DLElBQUEsQ0FBQSxDQUFBLEtBQUF0L0MsT0FBQSxDQUFBKzNDLEtBQUEsQ0FBQXlJLE9BQUEsQ0FBQSxLQUFBeGdELE9BQUEsQ0FBQXMvQyxJQUFBLENBQUEsS0FBQXQvQyxPQUFBLENBQUErM0MsS0FBQSxDQUFBeUksT0FBQSxFQUFBLEtBQUF4Z0QsT0FBQSxDQUFBcy9DLElBQUEsQ0FBQSxLQUFBdC9DLE9BQUEsQ0FBQSszQyxLQUFBLENBQUEwSSxTQUFBLENBQUEsS0FBQXpnRCxPQUFBLENBQUErL0MsWUFBQSxDQUFBLEtBQUEsQ0FBQSxDQUFBLEtBQUFyVixNQUFBLEVBQUEsQ0FBQSxDQUFBLENBQUF3QixVQUFBLENBQUEsb0JBQUFscEIsQ0FBQSxDQUFBamMsQ0FBQSxDQUFBLENBQUEsTUFBQSxTQUFBaWMsQ0FBQSxFQUFBLEtBQUEwbkIsTUFBQSxDQUFBLFdBQUEsQ0FBQTNqQyxDQUFBLEVBQUEsSUFBQSxFQUFBLEdBQUEsY0FBQWljLENBQUEsR0FBQSxLQUFBaGpCLE9BQUEsQ0FBQTVDLElBQUEsQ0FBQTJKLENBQUEsRUFBQSxTQUFBaWMsQ0FBQSxHQUFBLEtBQUFoakIsT0FBQSxDQUFBKzNDLEtBQUEsQ0FBQXlJLE9BQUEsQ0FBQXo1QyxDQUFBLENBQUEsQ0FBQSxVQUFBaWMsQ0FBQSxHQUFBamMsQ0FBQSxDQUFBeTVDLE9BQUEsRUFBQSxLQUFBOVYsTUFBQSxDQUFBLE1BQUEsQ0FBQTNqQyxDQUFBLENBQUF5NUMsT0FBQSxFQUFBLEtBQUE5VixNQUFBLENBQUEsY0FBQSxDQUFBLFdBQUEsQ0FBQSxFQUFBM2pDLENBQUEsQ0FBQTA1QyxTQUFBLEdBQUEsS0FBQS9WLE1BQUEsQ0FBQSxNQUFBLENBQUEzakMsQ0FBQSxDQUFBMDVDLFNBQUEsRUFBQSxLQUFBL1YsTUFBQSxDQUFBLGNBQUEsQ0FBQSxLQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsS0FBQUMsV0FBQSxDQUFBenJDLFNBQUEsQ0FBQSxDQUFBLElBQUEsRUFBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLEVBQUE4akIsQ0FBQSxDQUFBaGxCLEVBQUEsQ0FBQWduQixNQUFBLENBQUEsU0FBQWplLENBQUEsQ0FBQSxDQUFBLE1BQUEsV0FBQSxDQUFBLE1BQUEsQ0FBQSxLQUFBMUksTUFBQSxFQUFBLEtBQUFBLE1BQUEsRUFBQSxVQUFBLEtBQUEsQ0FBQSxFQUFBcWlELE9BQUEsRUFBQSxLQUFBcmlELE1BQUEsRUFBQSxVQUFBLEtBQUEsQ0FBQSxFQUFBcWlELE9BQUEsRUFBQSxhQUFBLEtBQUFyMEMsSUFBQSxDQUFBLE1BQUEsQ0FBQSxFQUFBLFVBQUEsS0FBQUEsSUFBQSxDQUFBLE1BQUEsQ0FBQSxDQUFBdEYsQ0FBQSxDQUFBdEwsS0FBQSxDQUFBLElBQUEsQ0FBQXlELFNBQUEsQ0FBQSxFQUFBOGpCLENBQUEsQ0FBQW1uQixFQUFBLENBQUFtVSxhQUFBLEVBQUF0N0IsQ0FBQSxDQUFBaGlCLEtBQUEsQ0FBQSw4QkFBQSxDQUFBLENBQUEsSUFBQTlCLFNBQUEsQ0FBQWIsTUFBQSxDQUFBLEtBQUFpZ0QsYUFBQSxDQUFBLENBQUFnQixJQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLEtBQUFoQixhQUFBLENBQUE3aUQsS0FBQSxDQUFBLElBQUEsQ0FBQXlELFNBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQThqQixDQUFBLENBQUFobEIsRUFBQSxDQUFBZ25CLE1BQUEsQ0FBQSxDQUFBaEMsQ0FBQSxDQUFBaGxCLEVBQUEsQ0FBQTJpRCxTQUFBLENBQUEsVUFBQSxDQUFBLE1BQUEzOUIsQ0FBQUEsQ0FBQSxDQUFBbW5CLEVBQUEsQ0FBQXlXLFlBQUEsRUFBQTU5QixDQUFBLENBQUFoaUIsS0FBQSxDQUFBLDZCQUFBLENBQUEsQ0FBQSxXQUFBOUIsU0FBQSxDQUFBLENBQUEsQ0FBQSxFQUFBLFVBQUFBLFNBQUEsQ0FBQSxDQUFBLENBQUEsRUFBQUEsU0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLEtBQUEwaEQsWUFBQSxDQUFBbmxELEtBQUEsQ0FBQSxJQUFBLENBQUEsQ0FBQXlELFNBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxjQUFBLENBQUFBLFNBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsV0FBQUEsU0FBQSxDQUFBLENBQUEsQ0FBQSxFQUFBLFVBQUFBLFNBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxLQUFBMGhELFlBQUEsQ0FBQW5sRCxLQUFBLENBQUEsSUFBQSxDQUFBLENBQUF5RCxTQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsY0FBQSxDQUFBLENBQUEsRUFBQSxrQkFBQUEsU0FBQSxDQUFBLENBQUEsQ0FBQSxHQUFBQSxTQUFBLENBQUEsQ0FBQSxDQUFBLENBQUE2NkMsS0FBQSxHQUFBNzZDLFNBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQTY2QyxLQUFBLENBQUEsQ0FBQS8wQixNQUFBLENBQUE5bEIsU0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBNjZDLEtBQUEsQ0FBQSxFQUFBLEtBQUE2RyxZQUFBLENBQUFubEQsS0FBQSxDQUFBLElBQUEsQ0FBQXlELFNBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUE4akIsQ0FBQSxDQUFBbW5CLEVBQUEsQ0FBQW5sQixNQUFBLENBQUFoQyxDQUFBLENBQUFqakIsTUFBQSxDQUFBaWpCLENBQUEsQ0FBQW1uQixFQUFBLENBQUEsQ0FBQVAsVUFBQSxDQUFBLENBQUFoc0MsT0FBQSxDQUFBLFFBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxHQUFBc0osQ0FBQUEsQ0FBQSxDQUFBOGIsQ0FBQSxDQUFBampCLE1BQUEsQ0FBQWs2QixDQUFBLENBQUEvN0IsU0FBQSxDQUFBLENBQUEyaUQsZUFBQSxDQUFBLGVBQUEsQ0FBQUMsT0FBQSxDQUFBLENBQUEsQ0FBQUMsaUJBQUEsQ0FBQSw0QkFBQSxDQUFBLE1BQUEsTUFBQXJYLEtBQUEsQ0FBQSxDQUFBLENBQUFzWCxXQUFBLENBQUEscUJBQUFoK0IsQ0FBQSxDQUFBLENBQUEsTUFBQTllLENBQUFBLENBQUEsQ0FBQSxLQUFBa2pDLFNBQUEsQ0FBQXBrQixDQUFBLEVBQUEsRUFBQSxDQUFBLENBQUEsSUFBQSxDQUFBLENBQUEsQ0FBQWkrQixpQkFBQSxDQUFBLDJCQUFBbDZDLENBQUEsQ0FBQS9KLENBQUEsQ0FBQSxDQUFBLEdBQUFpOUIsQ0FBQUEsQ0FBQSxDQUFBcG1CLENBQUEsQ0FBQTgxQixDQUFBLENBQUExUCxDQUFBLENBQUFsekIsQ0FBQSxDQUFBSixRQUFBLENBQUFwRSxXQUFBLEVBQUEsQ0FBQXNSLENBQUEsQ0FBQSxRQUFBb21CLENBQUEsRUFBQSxTQUFBQSxDQUFBLENBQUFsekIsQ0FBQSxDQUFBWSxFQUFBLEdBQUEsS0FBQXdqQyxJQUFBLEVBQUEsQ0FBQSxDQUFBcGtDLENBQUEsQ0FBQVksRUFBQSxDQUFBLEtBQUEsS0FBQXdqQyxJQUFBLENBQUEsQ0FBQXhCLENBQUEsQ0FBQSxLQUFBdVgsUUFBQSxDQUFBbCtCLENBQUEsQ0FBQWpjLENBQUEsQ0FBQSxDQUFBOE0sQ0FBQSxDQUFBLENBQUE4MUIsQ0FBQSxDQUFBL0wsUUFBQSxDQUFBNWEsQ0FBQSxDQUFBampCLE1BQUEsQ0FBQSxFQUFBLENBQUEvQyxDQUFBLEVBQUEsRUFBQSxDQUFBLENBQUEsVUFBQWk5QixDQUFBLENBQUEsS0FBQWtuQixrQkFBQSxDQUFBcDZDLENBQUEsQ0FBQTRpQyxDQUFBLENBQUEsQ0FBQTkxQixDQUFBLEVBQUEsS0FBQXV0QyxpQkFBQSxDQUFBcjZDLENBQUEsQ0FBQTRpQyxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUF1WCxRQUFBLENBQUEsa0JBQUFuNkMsQ0FBQSxDQUFBL0osQ0FBQSxDQUFBLENBQUEsR0FBQWk5QixDQUFBQSxDQUFBLENBQUFsekIsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBWSxFQUFBLENBQUE3RyxPQUFBLENBQUEsb0JBQUEsQ0FBQSxRQUFBLENBQUEsQ0FBQSxNQUFBLENBQUE2RyxFQUFBLENBQUFzeUIsQ0FBQSxDQUFBL3VCLEtBQUEsQ0FBQW5FLENBQUEsQ0FBQXM2QyxXQUFBLENBQUEsQ0FBQSxDQUFBQyxhQUFBLENBQUEsQ0FBQSxDQUFBQyxZQUFBLENBQUEsQ0FBQSxDQUFBQyxTQUFBLENBQUEsQ0FBQSxDQUFBQyxRQUFBLENBQUEsQ0FBQSxDQUFBM1gsTUFBQSxDQUFBOXNDLENBQUEsQ0FBQTBzQyxLQUFBLENBQUExc0MsQ0FBQSxDQUFBNlcsQ0FBQSxDQUFBbVAsQ0FBQSxDQUFBLGVBQUEsS0FBQTRpQixZQUFBLENBQUEscUZBQUEsQ0FBQSxDQUFBLENBQUEsS0FBQThELEtBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQXlYLGtCQUFBLENBQUEsNEJBQUFwNkMsQ0FBQSxDQUFBL0osQ0FBQSxDQUFBLENBQUEsR0FBQWk5QixDQUFBQSxDQUFBLENBQUFqWCxDQUFBLENBQUFqYyxDQUFBLENBQUEsQ0FBQS9KLENBQUEsQ0FBQXV0QixNQUFBLENBQUF2SCxDQUFBLENBQUEsRUFBQSxDQUFBLENBQUFobUIsQ0FBQSxDQUFBMm9CLE9BQUEsQ0FBQTNDLENBQUEsQ0FBQSxFQUFBLENBQUEsQ0FBQWlYLENBQUEsQ0FBQTNCLFFBQUEsQ0FBQSxLQUFBdW9CLGVBQUEsSUFBQSxLQUFBYSxZQUFBLENBQUF6bkIsQ0FBQSxDQUFBajlCLENBQUEsRUFBQWk5QixDQUFBLENBQUFyQyxRQUFBLENBQUEsS0FBQWlwQixlQUFBLEVBQUF0K0IsRUFBQSxDQUFBLFNBQUEsQ0FBQSxLQUFBby9CLFVBQUEsRUFBQXAvQixFQUFBLENBQUEsVUFBQSxDQUFBLEtBQUFxL0IsV0FBQSxFQUFBci9CLEVBQUEsQ0FBQSxPQUFBLENBQUEsS0FBQXMvQixRQUFBLENBQUEsQ0FBQSxLQUFBQyxTQUFBLENBQUE5a0QsQ0FBQSxDQUFBLENBQUFnbUIsQ0FBQSxDQUFBeEcsSUFBQSxDQUFBelYsQ0FBQSxDQUFBLFlBQUEsQ0FBQS9KLENBQUEsQ0FBQSxDQUFBQSxDQUFBLENBQUE0Z0MsUUFBQSxDQUFBbDNCLFFBQUEsRUFBQSxLQUFBcTdDLGtCQUFBLENBQUFoN0MsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEyNkMsWUFBQSxDQUFBLHNCQUFBMzZDLENBQUEsQ0FBQS9KLENBQUEsQ0FBQSxDQUFBLEdBQUFpOUIsQ0FBQUEsQ0FBQSxDQUFBcG1CLENBQUEsQ0FBQTgxQixDQUFBLENBQUF6bEMsQ0FBQSxDQUFBLEtBQUE4OUMsSUFBQSxDQUFBaGxELENBQUEsQ0FBQSxZQUFBLENBQUEsQ0FBQStzQyxDQUFBLENBQUEsS0FBQWlZLElBQUEsQ0FBQWhsRCxDQUFBLENBQUEsT0FBQSxDQUFBLENBQUFBLENBQUEsQ0FBQXV0QixNQUFBLEVBQUF2dEIsQ0FBQSxDQUFBdXRCLE1BQUEsQ0FBQXpULE1BQUEsRUFBQSxDQUFBNVMsQ0FBQSxHQUFBbEgsQ0FBQSxDQUFBdXRCLE1BQUEsQ0FBQXZILENBQUEsQ0FBQSxnQkFBQSxLQUFBNmlCLFlBQUEsQ0FBQSxJQUFBLENBQUEzaEMsQ0FBQSxDQUFBLFNBQUEsQ0FBQSxDQUFBNkMsQ0FBQSxDQUFBZ2pDLENBQUEsQ0FBQSxRQUFBLENBQUEsT0FBQSxDQUFBLENBQUEvc0MsQ0FBQSxDQUFBdXRCLE1BQUEsQ0FBQSxDQUFBLENBQUF4akIsQ0FBQSxDQUFBNmIsR0FBQSxDQUFBLE9BQUEsQ0FBQSxLQUFBcS9CLGVBQUEsQ0FBQSxDQUFBamxELENBQUEsQ0FBQTJvQixPQUFBLEVBQUEzb0IsQ0FBQSxDQUFBMm9CLE9BQUEsQ0FBQTdPLE1BQUEsRUFBQSxDQUFBbWpCLENBQUEsQ0FBQSxLQUFBK25CLElBQUEsQ0FBQWhsRCxDQUFBLENBQUEsUUFBQSxDQUFBLENBQUEsQ0FBQSxVQUFBaTlCLENBQUEsRUFBQSxTQUFBQSxDQUFBLEdBQUFsekIsQ0FBQSxDQUFBd2IsRUFBQSxDQUFBLE9BQUEsQ0FBQSxLQUFBMC9CLGVBQUEsQ0FBQSxDQUFBLENBQUEsV0FBQWhvQixDQUFBLEVBQUEsU0FBQUEsQ0FBQSxJQUFBcG1CLENBQUEsQ0FBQSxLQUFBbXVDLElBQUEsQ0FBQWhsRCxDQUFBLENBQUEsWUFBQSxDQUFBLENBQUEyc0MsQ0FBQSxDQUFBLEtBQUFxWSxJQUFBLENBQUFobEQsQ0FBQSxDQUFBLGFBQUEsQ0FBQSxDQUFBQSxDQUFBLENBQUEyb0IsT0FBQSxDQUFBM0MsQ0FBQSxDQUFBLEtBQUFnL0IsSUFBQSxDQUFBaGxELENBQUEsQ0FBQSxpQkFBQSxFQUFBZ21CLENBQUEsQ0FBQSxRQUFBLENBQUEsQ0FBQTRVLFFBQUEsQ0FBQSxLQUFBa08sYUFBQSxFQUFBejVCLElBQUEsQ0FBQSxDQUFBNVAsR0FBQSxDQUFBa3RDLENBQUEsQ0FBQXVZLEdBQUEsQ0FBQXJ1QyxDQUFBLENBQUF3c0MsS0FBQSxDQUFBeHNDLENBQUEsQ0FBQSxDQUFBLENBQUFtUCxDQUFBLENBQUEsaUNBQUEsQ0FBQSxDQUFBNFUsUUFBQSxDQUFBLEtBQUFrTyxhQUFBLEVBQUFqYyxJQUFBLENBQUE4ZixDQUFBLENBQUEzbUIsQ0FBQSxDQUFBLFFBQUEsQ0FBQSxDQUFBM1csSUFBQSxDQUFBLENBQUE1UCxHQUFBLENBQUFrdEMsQ0FBQSxDQUFBdVksR0FBQSxDQUFBcnVDLENBQUEsQ0FBQXdzQyxLQUFBLENBQUF4c0MsQ0FBQSxDQUFBLENBQUEsQ0FBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQTlNLENBQUEsQ0FBQWdqQyxDQUFBLENBQUEsUUFBQSxDQUFBLE9BQUEsQ0FBQSxDQUFBL3NDLENBQUEsQ0FBQTJvQixPQUFBLENBQUEsQ0FBQTNvQixDQUFBLENBQUEyb0IsT0FBQSxDQUFBcEQsRUFBQSxDQUFBLE9BQUEsQ0FBQSxVQUFBLENBQUEsTUFBQVMsQ0FBQUEsQ0FBQSxDQUFBNG1CLFVBQUEsQ0FBQW5FLGtCQUFBLEVBQUF6aUIsQ0FBQSxDQUFBNG1CLFVBQUEsQ0FBQXVZLFVBQUEsR0FBQXA3QyxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUFpYyxDQUFBLENBQUE0bUIsVUFBQSxDQUFBd1ksZUFBQSxFQUFBLENBQUFwL0IsQ0FBQSxDQUFBNG1CLFVBQUEsQ0FBQW5FLGtCQUFBLEVBQUF6aUIsQ0FBQSxDQUFBNG1CLFVBQUEsQ0FBQXVZLFVBQUEsR0FBQXA3QyxDQUFBLENBQUEsQ0FBQSxDQUFBLEVBQUFpYyxDQUFBLENBQUE0bUIsVUFBQSxDQUFBd1ksZUFBQSxHQUFBcC9CLENBQUEsQ0FBQTRtQixVQUFBLENBQUFxWSxlQUFBLENBQUFsN0MsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLEVBQUFpYyxDQUFBLENBQUE0bUIsVUFBQSxDQUFBcVksZUFBQSxDQUFBbDdDLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBKzZDLFNBQUEsQ0FBQSxtQkFBQTkrQixDQUFBLENBQUEsQ0FBQSxHQUFBLEtBQUFnL0IsSUFBQSxDQUFBaC9CLENBQUEsQ0FBQSxVQUFBLEdBQUEsQ0FBQUEsQ0FBQSxDQUFBOG1CLE1BQUEsQ0FBQSxDQUFBLEdBQUEvaUMsQ0FBQUEsQ0FBQSxDQUFBL0osQ0FBQSxDQUFBaTlCLENBQUEsQ0FBQXBtQixDQUFBLENBQUE4MUIsQ0FBQSxDQUFBLEdBQUFubUMsQ0FBQUEsSUFBQSxDQUFBLElBQUEsQ0FBQSxFQUFBLENBQUEsRUFBQSxDQUFBLENBQUFVLENBQUEsQ0FBQSxLQUFBODlDLElBQUEsQ0FBQWgvQixDQUFBLENBQUEsWUFBQSxDQUFBLENBQUE5ZSxDQUFBLENBQUFrRCxLQUFBLENBQUEsTUFBQSxJQUFBTCxDQUFBLENBQUEsV0FBQWljLENBQUEsQ0FBQSxDQUFBLElBQUFobUIsQ0FBQSxDQUFBLENBQUEsQ0FBQWk5QixDQUFBLENBQUEsQ0FBQSxDQUFBcG1CLENBQUEsQ0FBQSxDQUFBLENBQUFtUCxDQUFBLENBQUEza0IsTUFBQSxDQUFBd1YsQ0FBQSxDQUFBQSxDQUFBLEVBQUEsRUFBQW1QLENBQUEsQ0FBQW5QLENBQUEsQ0FBQSxDQUFBeFYsTUFBQSxDQUFBckIsQ0FBQSxHQUFBQSxDQUFBLENBQUFnbUIsQ0FBQSxDQUFBblAsQ0FBQSxDQUFBLENBQUF4VixNQUFBLENBQUE0N0IsQ0FBQSxDQUFBcG1CLENBQUEsRUFBQSxDQUFBLE1BQUFvbUIsQ0FBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQTBQLENBQUEsQ0FBQTBZLFFBQUEsQ0FBQXQ3QyxDQUFBLENBQUEsS0FBQWk3QyxJQUFBLENBQUFoL0IsQ0FBQSxDQUFBOWUsQ0FBQSxDQUFBa0QsS0FBQSxDQUFBLElBQUEsRUFBQSxZQUFBLENBQUEsaUJBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQXVpQyxDQUFBLENBQUEyWSxPQUFBLENBQUF2N0MsQ0FBQSxDQUFBLEtBQUFpN0MsSUFBQSxDQUFBaC9CLENBQUEsQ0FBQTllLENBQUEsQ0FBQWtELEtBQUEsQ0FBQSxJQUFBLEVBQUEsVUFBQSxDQUFBLGVBQUEsQ0FBQSxDQUFBLENBQUEsRUFBQSxDQUFBdWlDLENBQUEsQ0FBQTRZLE1BQUEsRUFBQSxDQUFBLEVBQUF2L0IsQ0FBQSxDQUFBOVgsS0FBQSxDQUFBbUIsSUFBQSxDQUFBLE1BQUEsQ0FBQSxLQUFBbTJDLFdBQUEsQ0FBQXgvQixDQUFBLENBQUEybUIsQ0FBQSxFQUFBdHJDLE1BQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBK2lELGlCQUFBLENBQUEsMkJBQUFyNkMsQ0FBQSxDQUFBL0osQ0FBQSxDQUFBLENBQUEsR0FBQWk5QixDQUFBQSxDQUFBLENBQUFqWCxDQUFBLENBQUFqYyxDQUFBLENBQUEsQ0FBQWt6QixDQUFBLENBQUEzQixRQUFBLENBQUEsS0FBQXVvQixlQUFBLElBQUE1bUIsQ0FBQSxDQUFBckMsUUFBQSxDQUFBLEtBQUFpcEIsZUFBQSxFQUFBdDJCLE1BQUEsQ0FBQXZ0QixDQUFBLENBQUEwc0MsS0FBQSxFQUFBMW1CLENBQUEsQ0FBQXhHLElBQUEsQ0FBQXpWLENBQUEsQ0FBQSxZQUFBLENBQUEvSixDQUFBLENBQUEsQ0FBQSxLQUFBeWxELFFBQUEsQ0FBQXpsRCxDQUFBLENBQUEsS0FBQTBsRCxlQUFBLENBQUExbEQsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxLQUFBMmxELGlCQUFBLENBQUEzbEQsQ0FBQSxDQUFBLENBQUEsS0FBQTRsRCxnQkFBQSxDQUFBNWxELENBQUEsQ0FBQSxDQUFBQSxDQUFBLENBQUE0Z0MsUUFBQSxDQUFBbDNCLFFBQUEsRUFBQSxLQUFBcTdDLGtCQUFBLENBQUFoN0MsQ0FBQSxDQUFBLENBQUEvSixDQUFBLENBQUEwc0MsS0FBQSxDQUFBanJCLEdBQUEsQ0FBQSxTQUFBLENBQUEsT0FBQSxDQUFBLEVBQUEsQ0FBQSxDQUFBb2tDLGlCQUFBLENBQUEsMkJBQUE5N0MsQ0FBQSxDQUFBL0osQ0FBQSxDQUFBaTlCLENBQUEsQ0FBQXBtQixDQUFBLENBQUE4MUIsQ0FBQSxDQUFBLENBQUEsR0FBQUksQ0FBQUEsQ0FBQSxDQUFBSyxDQUFBLENBQUFwMUIsQ0FBQSxDQUFBeTNCLENBQUEsQ0FBQVEsQ0FBQSxDQUFBSSxDQUFBLENBQUEsS0FBQXlWLFdBQUEsQ0FBQSxNQUFBelYsQ0FBQUEsQ0FBQSxHQUFBLEtBQUFsQyxJQUFBLEVBQUEsQ0FBQSxDQUFBcEIsQ0FBQSxDQUFBLEtBQUEsS0FBQW9CLElBQUEsQ0FBQSxLQUFBNFgsWUFBQSxDQUFBLy9CLENBQUEsQ0FBQSwwQkFBQSttQixDQUFBLENBQUEsMERBQUEsQ0FBQSxDQUFBLEtBQUFnWixZQUFBLENBQUF4Z0MsRUFBQSxDQUFBLFNBQUEsQ0FBQSxLQUFBby9CLFVBQUEsQ0FBQSxDQUFBMytCLENBQUEsQ0FBQSxNQUFBLENBQUEsQ0FBQXVILE1BQUEsQ0FBQSxLQUFBdzRCLFlBQUEsQ0FBQSxDQUFBMVYsQ0FBQSxDQUFBLEtBQUF5VixXQUFBLENBQUEsS0FBQTVCLFFBQUEsQ0FBQSxLQUFBNkIsWUFBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUExVixDQUFBLENBQUF6UCxRQUFBLENBQUEsRUFBQSxDQUFBNWEsQ0FBQSxDQUFBeEcsSUFBQSxDQUFBLEtBQUF1bUMsWUFBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLFlBQUEsQ0FBQTFWLENBQUEsQ0FBQSxDQUFBLENBQUFucEMsQ0FBQSxDQUFBbXBDLENBQUEsQ0FBQXpQLFFBQUEsQ0FBQS9wQixDQUFBLEVBQUEsRUFBQSxDQUFBLENBQUE3VyxDQUFBLENBQUFBLENBQUEsRUFBQUEsQ0FBQSxDQUFBb0IsV0FBQSxHQUFBb0YsSUFBQSxDQUFBLEtBQUFnL0MsV0FBQSxDQUFBblYsQ0FBQSxDQUFBcndDLENBQUEsQ0FBQSxDQUFBQSxDQUFBLENBQUEsS0FBQStsRCxZQUFBLENBQUE5bEQsR0FBQSxDQUFBRCxDQUFBLENBQUEsQ0FBQSxLQUFBZ21ELElBQUEsQ0FBQXJaLENBQUEsQ0FBQUEsQ0FBQSxDQUFBdHJDLE1BQUEsQ0FBQXNyQyxDQUFBLENBQUEsQ0FBQUEsQ0FBQSxDQUFBMWlCLEtBQUEsQ0FBQTBpQixDQUFBLENBQUF6aUIsS0FBQSxDQUFBLENBQUEsSUFBQSxDQUFBLEtBQUE4N0IsSUFBQSxHQUFBNVksQ0FBQSxDQUFBenZDLFFBQUEsQ0FBQXNQLGVBQUEsQ0FBQXNqQyxXQUFBLENBQUF2NEIsQ0FBQSxDQUFBcmEsUUFBQSxDQUFBc1AsZUFBQSxDQUFBZzVDLFlBQUEsQ0FBQXhXLENBQUEsQ0FBQTl4QyxRQUFBLENBQUFzUCxlQUFBLENBQUE4bkIsVUFBQSxFQUFBcDNCLFFBQUEsQ0FBQTRrQixJQUFBLENBQUF3UyxVQUFBLENBQUFrYixDQUFBLENBQUF0eUMsUUFBQSxDQUFBc1AsZUFBQSxDQUFBNm5CLFNBQUEsRUFBQW4zQixRQUFBLENBQUE0a0IsSUFBQSxDQUFBdVMsU0FBQSxDQUFBLEtBQUFreEIsSUFBQSxDQUFBLENBQUE1WSxDQUFBLENBQUEsQ0FBQSxDQUFBLEdBQUEsQ0FBQXFDLENBQUEsQ0FBQXozQixDQUFBLENBQUEsQ0FBQSxDQUFBLEdBQUEsQ0FBQWk0QixDQUFBLENBQUEsQ0FBQSxDQUFBLEtBQUE4VixZQUFBLENBQUF0a0MsR0FBQSxDQUFBLE1BQUEsQ0FBQSxLQUFBdWtDLElBQUEsQ0FBQSxDQUFBLEVBQUEsRUFBQSxDQUFBLElBQUEsRUFBQXZrQyxHQUFBLENBQUEsS0FBQSxDQUFBLEtBQUF1a0MsSUFBQSxDQUFBLENBQUEsRUFBQSxJQUFBLENBQUEsQ0FBQTNWLENBQUEsQ0FBQXpQLFFBQUEsQ0FBQWlMLFFBQUEsQ0FBQTVPLENBQUEsQ0FBQSxLQUFBeUwsU0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLEtBQUFnRSxLQUFBLENBQUE5UixRQUFBLENBQUEsS0FBQW1PLFlBQUEsQ0FBQSxDQUFBLEtBQUFrYyxlQUFBLENBQUEsS0FBQWMsWUFBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEvL0IsQ0FBQSxDQUFBa2dDLE9BQUEsRUFBQWxnQyxDQUFBLENBQUFrZ0MsT0FBQSxDQUFBLEtBQUF4WixLQUFBLENBQUEsQ0FBQTFtQixDQUFBLENBQUF4RyxJQUFBLENBQUEsS0FBQXVtQyxZQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsWUFBQSxDQUFBMVYsQ0FBQSxDQUFBLENBQUEsSUFBQSxDQUFBLENBQUEsQ0FBQThWLGtCQUFBLENBQUEsNEJBQUFwOEMsQ0FBQSxDQUFBLENBQUEsR0FBQS9KLENBQUFBLENBQUEsQ0FBQWk5QixDQUFBLENBQUFqWCxDQUFBLENBQUFqYyxDQUFBLENBQUEsQ0FBQThNLENBQUEsQ0FBQW1QLENBQUEsQ0FBQXhHLElBQUEsQ0FBQXpWLENBQUEsQ0FBQSxZQUFBLENBQUEsQ0FBQWt6QixDQUFBLENBQUEzQixRQUFBLENBQUEsS0FBQXVvQixlQUFBLElBQUE3akQsQ0FBQSxDQUFBK0osQ0FBQSxDQUFBSixRQUFBLENBQUFwRSxXQUFBLEVBQUEsQ0FBQXlnQixDQUFBLENBQUE3RixVQUFBLENBQUFwVyxDQUFBLENBQUEsWUFBQSxDQUFBLENBQUEsVUFBQS9KLENBQUEsRUFBQTZXLENBQUEsQ0FBQTBXLE1BQUEsQ0FBQXpULE1BQUEsR0FBQWpELENBQUEsQ0FBQThSLE9BQUEsQ0FBQTdPLE1BQUEsRUFBQSxDQUFBbWpCLENBQUEsQ0FBQWhDLFdBQUEsQ0FBQSxLQUFBNG9CLGVBQUEsRUFBQWorQixHQUFBLENBQUEsT0FBQSxDQUFBLEtBQUFxL0IsZUFBQSxFQUFBci9CLEdBQUEsQ0FBQSxTQUFBLENBQUEsS0FBQSsrQixVQUFBLEVBQUEvK0IsR0FBQSxDQUFBLFVBQUEsQ0FBQSxLQUFBZy9CLFdBQUEsRUFBQWgvQixHQUFBLENBQUEsT0FBQSxDQUFBLEtBQUFpL0IsUUFBQSxDQUFBLEVBQUEsQ0FBQSxRQUFBN2tELENBQUEsRUFBQSxTQUFBQSxDQUFBLEdBQUFpOUIsQ0FBQSxDQUFBaEMsV0FBQSxDQUFBLEtBQUE0b0IsZUFBQSxFQUFBOXBDLEtBQUEsRUFBQSxDQUFBN1AsQ0FBQSxHQUFBMk0sQ0FBQSxHQUFBM00sQ0FBQSxDQUFBLElBQUEsQ0FBQSxFQUFBLENBQUEsQ0FBQWs4QyxpQkFBQSxDQUFBLDJCQUFBcjhDLENBQUEsQ0FBQSxDQUFBLEdBQUEvSixDQUFBQSxDQUFBLENBQUFpOUIsQ0FBQSxDQUFBcG1CLENBQUEsQ0FBQW1QLENBQUEsQ0FBQWpjLENBQUEsQ0FBQSxDQUFBNGlDLENBQUEsQ0FBQTNtQixDQUFBLENBQUF4RyxJQUFBLENBQUF6VixDQUFBLENBQUEsWUFBQSxDQUFBLENBQUE4TSxDQUFBLENBQUF5a0IsUUFBQSxDQUFBLEtBQUF1b0IsZUFBQSxJQUFBN2pELENBQUEsQ0FBQStKLENBQUEsQ0FBQUosUUFBQSxDQUFBcEUsV0FBQSxFQUFBLENBQUEsVUFBQXZGLENBQUEsRUFBQStKLENBQUEsQ0FBQUwsUUFBQSxDQUFBLENBQUEsQ0FBQSxDQUFBaWpDLENBQUEsQ0FBQWhrQixPQUFBLENBQUEvYSxNQUFBLENBQUEsUUFBQSxFQUFBOUwsSUFBQSxDQUFBLFVBQUEsQ0FBQSxLQUFBNEgsUUFBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsRUFBQTlHLEdBQUEsR0FBQWdMLE1BQUEsQ0FBQSxLQUFBLEVBQUE2VCxHQUFBLENBQUEsQ0FBQTJSLE9BQUEsQ0FBQSxLQUFBLENBQUFpekIsTUFBQSxDQUFBLEVBQUEsQ0FBQSxDQUFBLEVBQUEsQ0FBQSxRQUFBcm1ELENBQUEsRUFBQSxTQUFBQSxDQUFBLElBQUFpOUIsQ0FBQSxDQUFBcG1CLENBQUEsQ0FBQWMsUUFBQSxDQUFBLElBQUEsS0FBQWl4QixZQUFBLENBQUEsQ0FBQTNMLENBQUEsQ0FBQXRsQixRQUFBLEdBQUFzakIsV0FBQSxDQUFBLG1CQUFBLENBQUEsQ0FBQWdDLENBQUEsQ0FBQW52QixJQUFBLENBQUEsdURBQUEsRUFBQTJSLElBQUEsQ0FBQSxVQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLEtBQUErb0IsZUFBQSxDQUFBeGlCLENBQUEsQ0FBQWhrQixHQUFBLENBQUEsS0FBQXdtQyxlQUFBLENBQUEsU0FBQXhpQixDQUFBLENBQUEsQ0FBQSxNQUFBQSxDQUFBQSxDQUFBLEdBQUFqYyxDQUFBLENBQUEsSUFBQSxDQUFBaWMsQ0FBQSxDQUFBLENBQUEsQ0FBQSxFQUFBLENBQUEsQ0FBQSsrQixrQkFBQSxDQUFBLDRCQUFBaDdDLENBQUEsQ0FBQSxDQUFBLEdBQUEvSixDQUFBQSxDQUFBLENBQUFpOUIsQ0FBQSxDQUFBcG1CLENBQUEsQ0FBQW1QLENBQUEsQ0FBQWpjLENBQUEsQ0FBQSxDQUFBNGlDLENBQUEsQ0FBQTNtQixDQUFBLENBQUF4RyxJQUFBLENBQUF6VixDQUFBLENBQUEsWUFBQSxDQUFBLENBQUE4TSxDQUFBLENBQUF5a0IsUUFBQSxDQUFBLEtBQUF1b0IsZUFBQSxJQUFBN2pELENBQUEsQ0FBQStKLENBQUEsQ0FBQUosUUFBQSxDQUFBcEUsV0FBQSxFQUFBLENBQUEsVUFBQXZGLENBQUEsRUFBQStKLENBQUEsQ0FBQUwsUUFBQSxDQUFBLENBQUEsQ0FBQSxDQUFBaWpDLENBQUEsQ0FBQWhrQixPQUFBLENBQUEvYSxNQUFBLENBQUEsUUFBQSxFQUFBOUwsSUFBQSxDQUFBLFVBQUEsQ0FBQSxLQUFBNEgsUUFBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsRUFBQTlHLEdBQUEsR0FBQWdMLE1BQUEsQ0FBQSxLQUFBLEVBQUE2VCxHQUFBLENBQUEsQ0FBQTJSLE9BQUEsQ0FBQSxLQUFBLENBQUFpekIsTUFBQSxDQUFBLFNBQUEsQ0FBQSxDQUFBLEVBQUEsQ0FBQSxRQUFBcm1ELENBQUEsRUFBQSxTQUFBQSxDQUFBLElBQUFpOUIsQ0FBQSxDQUFBcG1CLENBQUEsQ0FBQWMsUUFBQSxDQUFBLElBQUEsS0FBQWl4QixZQUFBLENBQUEsQ0FBQTNMLENBQUEsQ0FBQXRsQixRQUFBLEdBQUFpakIsUUFBQSxDQUFBLG1CQUFBLENBQUEsQ0FBQXFDLENBQUEsQ0FBQW52QixJQUFBLENBQUEsdURBQUEsRUFBQTJSLElBQUEsQ0FBQSxVQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLEtBQUErb0IsZUFBQSxDQUFBeGlCLENBQUEsQ0FBQWhrQixHQUFBLENBQUEsS0FBQXdtQyxlQUFBLENBQUEsU0FBQXhpQixDQUFBLENBQUEsQ0FBQSxNQUFBQSxDQUFBQSxDQUFBLEdBQUFqYyxDQUFBLENBQUEsSUFBQSxDQUFBaWMsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLEtBQUF3aUIsZUFBQSxDQUFBLEtBQUFBLGVBQUEsQ0FBQW5uQyxNQUFBLEVBQUEwSSxDQUFBLEVBQUEsQ0FBQSxDQUFBOGlDLHFCQUFBLENBQUEsK0JBQUE3bUIsQ0FBQSxDQUFBLENBQUEsR0FBQSxDQUFBQSxDQUFBLENBQUEsTUFBQSxDQUFBLENBQUEsQ0FBQSxJQUFBLEdBQUFqYyxDQUFBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLEtBQUF5K0IsZUFBQSxDQUFBbm5DLE1BQUEsQ0FBQTBJLENBQUEsQ0FBQUEsQ0FBQSxFQUFBLEVBQUEsR0FBQSxLQUFBeStCLGVBQUEsQ0FBQXorQixDQUFBLElBQUFpYyxDQUFBLENBQUEsTUFBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLE1BQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBc2dDLFFBQUEsQ0FBQSxrQkFBQXY4QyxDQUFBLENBQUEsQ0FBQSxHQUFBLENBQUEsTUFBQWljLENBQUFBLENBQUEsQ0FBQXhHLElBQUEsQ0FBQXpWLENBQUEsQ0FBQSxZQUFBLENBQUEsQ0FBQSxPQUFBL0osQ0FBQSxDQUFBLENBQUEsS0FBQSwyQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBdW1ELGlCQUFBLENBQUEsMkJBQUF4OEMsQ0FBQSxDQUFBL0osQ0FBQSxDQUFBaTlCLENBQUEsQ0FBQSxDQUFBLEdBQUFwbUIsQ0FBQUEsQ0FBQSxDQUFBODFCLENBQUEsQ0FBQUksQ0FBQSxDQUFBSyxDQUFBLENBQUFwMUIsQ0FBQSxDQUFBLEtBQUFzdUMsUUFBQSxDQUFBdjhDLENBQUEsQ0FBQSxDQUFBLE1BQUEsS0FBQTdILFNBQUEsQ0FBQWIsTUFBQSxFQUFBLFVBQUEsTUFBQXJCLENBQUFBLENBQUEsQ0FBQSxhQUFBQSxDQUFBLENBQUFnbUIsQ0FBQSxDQUFBampCLE1BQUEsQ0FBQSxFQUFBLENBQUFpakIsQ0FBQSxDQUFBNG1CLFVBQUEsQ0FBQXhDLFNBQUEsQ0FBQSxDQUFBcHlCLENBQUEsQ0FBQSxRQUFBaFksQ0FBQSxDQUFBZ21CLENBQUEsQ0FBQWpqQixNQUFBLENBQUEsRUFBQSxDQUFBaVYsQ0FBQSxDQUFBNG9CLFFBQUEsQ0FBQSxDQUFBLEtBQUFva0IsSUFBQSxDQUFBaHRDLENBQUEsQ0FBQWhZLENBQUEsQ0FBQSxDQUFBLElBQUEsRUFBQTZXLENBQUEsQ0FBQTdXLENBQUEsRUFBQSxFQUFBLENBQUEsVUFBQSxNQUFBQSxDQUFBQSxDQUFBLEdBQUE2VyxDQUFBLENBQUEsRUFBQSxDQUFBQSxDQUFBLENBQUE3VyxDQUFBLENBQUEsQ0FBQWk5QixDQUFBLENBQUEsQ0FBQWpsQixDQUFBLEdBQUEsS0FBQXN3QixRQUFBLEdBQUF0d0IsQ0FBQSxFQUFBLEtBQUFvdEMsZUFBQSxFQUFBLENBQUF6WSxDQUFBLENBQUEsS0FBQTZaLGtCQUFBLENBQUF6OEMsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUFnakMsQ0FBQSxDQUFBLEtBQUEwWixjQUFBLENBQUF6dUMsQ0FBQSxDQUFBLEtBQUEsQ0FBQSxDQUFBbzFCLENBQUEsQ0FBQSxLQUFBcVosY0FBQSxDQUFBenVDLENBQUEsQ0FBQSxLQUFBLENBQUEsQ0FBQTlRLENBQUEsQ0FBQThRLENBQUEsQ0FBQTRvQixRQUFBLENBQUEvcEIsQ0FBQSxDQUFBLENBQUEsT0FBQWsyQixDQUFBLEVBQUEsSUFBQSxFQUFBLEdBQUFsMkIsQ0FBQSxDQUFBa3pCLFVBQUEsRUFBQSxJQUFBLEVBQUEsR0FBQWx6QixDQUFBLENBQUE0MEIsT0FBQSxHQUFBenpCLENBQUEsQ0FBQTRvQixRQUFBLENBQUE2SyxPQUFBLENBQUEsS0FBQStaLFdBQUEsQ0FBQXh0QyxDQUFBLENBQUErMEIsQ0FBQSxDQUFBLENBQUEsQ0FBQSxPQUFBSyxDQUFBLEVBQUEsSUFBQSxFQUFBLEdBQUF2MkIsQ0FBQSxDQUFBa3pCLFVBQUEsRUFBQSxJQUFBLEVBQUEsR0FBQWx6QixDQUFBLENBQUE2MEIsT0FBQSxHQUFBMXpCLENBQUEsQ0FBQTRvQixRQUFBLENBQUE4SyxPQUFBLENBQUEsS0FBQThaLFdBQUEsQ0FBQXh0QyxDQUFBLENBQUFvMUIsQ0FBQSxDQUFBLENBQUEsQ0FBQSxZQUFBdjJCLENBQUFBLENBQUEsR0FBQUEsQ0FBQSxDQUFBbk4sUUFBQSxDQUFBLEtBQUFxN0Msa0JBQUEsQ0FBQWg3QyxDQUFBLENBQUEsQ0FBQSxLQUFBcThDLGlCQUFBLENBQUFyOEMsQ0FBQSxDQUFBLENBQUEsQ0FBQSxLQUFBMjZDLFlBQUEsQ0FBQTErQixDQUFBLENBQUFqYyxDQUFBLENBQUEsQ0FBQWlPLENBQUEsQ0FBQSxDQUFBLEtBQUE4c0MsU0FBQSxDQUFBOXNDLENBQUEsQ0FBQSxDQUFBLEtBQUF5dEMsUUFBQSxDQUFBenRDLENBQUEsQ0FBQTIwQixDQUFBLENBQUEsQ0FBQSxLQUFBaVosZ0JBQUEsQ0FBQTV0QyxDQUFBLENBQUEsQ0FBQSxLQUFBMnRDLGlCQUFBLENBQUEzdEMsQ0FBQSxDQUFBLENBQUEsQ0FBQSxJQUFBLEVBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQTB1QyxpQkFBQSxDQUFBLDJCQUFBMWdDLENBQUEsQ0FBQWpjLENBQUEsQ0FBQS9KLENBQUEsQ0FBQSxDQUFBLEtBQUF1bUQsaUJBQUEsQ0FBQXZnQyxDQUFBLENBQUFqYyxDQUFBLENBQUEvSixDQUFBLEVBQUEsQ0FBQSxDQUFBMm1ELGtCQUFBLENBQUEsNEJBQUEzZ0MsQ0FBQSxDQUFBLENBQUEsR0FBQWpjLENBQUFBLENBQUEsQ0FBQSxLQUFBdThDLFFBQUEsQ0FBQXRnQyxDQUFBLENBQUEsQ0FBQWpjLENBQUEsRUFBQSxLQUFBNDdDLGlCQUFBLENBQUE1N0MsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBNjhDLGtCQUFBLENBQUEsNEJBQUE1Z0MsQ0FBQSxDQUFBamMsQ0FBQSxDQUFBLENBQUEsR0FBQS9KLENBQUFBLENBQUEsQ0FBQSxLQUFBc21ELFFBQUEsQ0FBQXRnQyxDQUFBLENBQUEsQ0FBQWhtQixDQUFBLEdBQUEsS0FBQXlsRCxRQUFBLENBQUF6bEQsQ0FBQSxDQUFBK0osQ0FBQSxFQUFBLEtBQUE0N0MsaUJBQUEsQ0FBQTNsRCxDQUFBLENBQUEsQ0FBQSxLQUFBNGxELGdCQUFBLENBQUE1bEQsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUF3bUQsa0JBQUEsQ0FBQSw0QkFBQXhnQyxDQUFBLENBQUFqYyxDQUFBLENBQUEsQ0FBQSxHQUFBL0osQ0FBQUEsQ0FBQSxDQUFBLEtBQUFzbUQsUUFBQSxDQUFBdGdDLENBQUEsQ0FBQSxDQUFBLE1BQUFobUIsQ0FBQUEsQ0FBQSxFQUFBLENBQUFBLENBQUEsQ0FBQThzQyxNQUFBLEVBQUEsS0FBQStaLGlCQUFBLENBQUE3bUQsQ0FBQSxDQUFBK0osQ0FBQSxDQUFBLENBQUEvSixDQUFBLENBQUEsS0FBQThtRCxRQUFBLENBQUE5bUQsQ0FBQSxDQUFBLENBQUEsSUFBQSxDQUFBLENBQUEsQ0FBQTJrRCxVQUFBLENBQUEsb0JBQUE1NkMsQ0FBQSxDQUFBLENBQUEsR0FBQS9KLENBQUFBLENBQUEsQ0FBQWk5QixDQUFBLENBQUFwbUIsQ0FBQSxDQUFBODFCLENBQUEsQ0FBQTNtQixDQUFBLENBQUE0bUIsVUFBQSxDQUFBMFosUUFBQSxDQUFBdjhDLENBQUEsQ0FBQTFHLE1BQUEsQ0FBQSxDQUFBNkQsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBNmxDLENBQUEsQ0FBQUosQ0FBQSxDQUFBRCxLQUFBLENBQUEvMUIsRUFBQSxDQUFBLG9CQUFBLENBQUEsQ0FBQSxHQUFBZzJCLENBQUEsQ0FBQXBFLFNBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQXZpQixDQUFBLENBQUE0bUIsVUFBQSxDQUFBbkUsa0JBQUEsQ0FBQSxPQUFBMStCLENBQUEsQ0FBQXVnQixPQUFBLEVBQUEsSUFBQSxFQUFBLENBQUF0RSxDQUFBLENBQUE0bUIsVUFBQSxDQUFBd1ksZUFBQSxHQUFBbCtDLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxNQUFBLElBQUEsR0FBQSxDQUFBLE1BQUEyUCxDQUFBQSxDQUFBLENBQUFtUCxDQUFBLENBQUEsTUFBQUEsQ0FBQSxDQUFBNG1CLFVBQUEsQ0FBQXpELGFBQUEsQ0FBQSxRQUFBLENBQUFuakIsQ0FBQSxDQUFBNG1CLFVBQUEsQ0FBQTFELGFBQUEsQ0FBQSxHQUFBLENBQUF5RCxDQUFBLENBQUFELEtBQUEsQ0FBQSxDQUFBNzFCLENBQUEsQ0FBQSxDQUFBLENBQUEsRUFBQW1QLENBQUEsQ0FBQTRtQixVQUFBLENBQUFtYSxVQUFBLENBQUFoOUMsQ0FBQSxDQUFBMUcsTUFBQSxDQUFBc3BDLENBQUEsQ0FBQTJYLGFBQUEsQ0FBQTNYLENBQUEsQ0FBQTRYLFlBQUEsQ0FBQTF0QyxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQTdXLENBQUEsQ0FBQWdtQixDQUFBLENBQUE0bUIsVUFBQSxDQUFBb1ksSUFBQSxDQUFBclksQ0FBQSxDQUFBLFVBQUEsQ0FBQSxDQUFBM3NDLENBQUEsRUFBQWk5QixDQUFBLENBQUFqWCxDQUFBLENBQUE0bUIsVUFBQSxDQUFBNFksV0FBQSxDQUFBN1ksQ0FBQSxDQUFBLENBQUEzc0MsQ0FBQSxDQUFBdkIsS0FBQSxDQUFBa3VDLENBQUEsQ0FBQXorQixLQUFBLENBQUF5K0IsQ0FBQSxDQUFBeitCLEtBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxJQUFBLENBQUEsQ0FBQSt1QixDQUFBLENBQUEwUCxDQUFBLENBQUEsQ0FBQSxFQUFBM21CLENBQUEsQ0FBQTRtQixVQUFBLENBQUF3WSxlQUFBLEVBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxJQUFBLEdBQUEsQ0FBQXAvQixDQUFBLENBQUE0bUIsVUFBQSxDQUFBd1ksZUFBQSxHQUFBLE1BQUEsSUFBQSxHQUFBLENBQUFwL0IsQ0FBQSxDQUFBNG1CLFVBQUEsQ0FBQW9hLFdBQUEsQ0FBQWo5QyxDQUFBLENBQUExRyxNQUFBLENBQUEwRyxDQUFBLENBQUE4ZixPQUFBLENBQUEsQ0FBQTdELENBQUEsQ0FBQTRtQixVQUFBLENBQUFvWSxJQUFBLENBQUFyWSxDQUFBLENBQUEsZUFBQSxDQUFBLENBQUEsQ0FBQTNtQixDQUFBLENBQUE0bUIsVUFBQSxDQUFBb1ksSUFBQSxDQUFBclksQ0FBQSxDQUFBLFlBQUEsQ0FBQSxDQUFBLEdBQUEsRUFBQSxNQUFBLElBQUEsR0FBQSxDQUFBM21CLENBQUEsQ0FBQTRtQixVQUFBLENBQUFvYSxXQUFBLENBQUFqOUMsQ0FBQSxDQUFBMUcsTUFBQSxDQUFBMEcsQ0FBQSxDQUFBOGYsT0FBQSxDQUFBLENBQUE3RCxDQUFBLENBQUE0bUIsVUFBQSxDQUFBb1ksSUFBQSxDQUFBclksQ0FBQSxDQUFBLGVBQUEsQ0FBQSxDQUFBLENBQUEzbUIsQ0FBQSxDQUFBNG1CLFVBQUEsQ0FBQW9ZLElBQUEsQ0FBQXJZLENBQUEsQ0FBQSxZQUFBLENBQUEsQ0FBQSxHQUFBLEVBQUEsTUFBQSxJQUFBLEdBQUEsQ0FBQSxDQUFBNWlDLENBQUEsQ0FBQThmLE9BQUEsRUFBQTlmLENBQUEsQ0FBQWlnQixPQUFBLEdBQUFoRSxDQUFBLENBQUE0bUIsVUFBQSxDQUFBcWEsVUFBQSxDQUFBbDlDLENBQUEsQ0FBQTFHLE1BQUEsQ0FBQSxDQUFBNkQsQ0FBQSxDQUFBNkMsQ0FBQSxDQUFBOGYsT0FBQSxFQUFBOWYsQ0FBQSxDQUFBaWdCLE9BQUEsQ0FBQSxNQUFBLElBQUEsR0FBQSxDQUFBLENBQUFqZ0IsQ0FBQSxDQUFBOGYsT0FBQSxFQUFBOWYsQ0FBQSxDQUFBaWdCLE9BQUEsR0FBQWhFLENBQUEsQ0FBQTRtQixVQUFBLENBQUFzYSxVQUFBLENBQUFuOUMsQ0FBQSxDQUFBMUcsTUFBQSxDQUFBLENBQUE2RCxDQUFBLENBQUE2QyxDQUFBLENBQUE4ZixPQUFBLEVBQUE5ZixDQUFBLENBQUFpZ0IsT0FBQSxDQUFBLE1BQUEsSUFBQSxHQUFBLENBQUEsQ0FBQWpnQixDQUFBLENBQUE4ZixPQUFBLEVBQUE5ZixDQUFBLENBQUFpZ0IsT0FBQSxHQUFBaEUsQ0FBQSxDQUFBNG1CLFVBQUEsQ0FBQW9hLFdBQUEsQ0FBQWo5QyxDQUFBLENBQUExRyxNQUFBLENBQUEwcEMsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxHQUFBLENBQUEsQ0FBQTdsQyxDQUFBLENBQUE2QyxDQUFBLENBQUE4ZixPQUFBLEVBQUE5ZixDQUFBLENBQUFpZ0IsT0FBQSxDQUFBamdCLENBQUEsQ0FBQXNlLGFBQUEsQ0FBQW9CLE1BQUEsRUFBQXpELENBQUEsQ0FBQTRtQixVQUFBLENBQUFvYSxXQUFBLENBQUFqOUMsQ0FBQSxDQUFBMUcsTUFBQSxDQUFBMEcsQ0FBQSxDQUFBOGYsT0FBQSxDQUFBLENBQUE3RCxDQUFBLENBQUE0bUIsVUFBQSxDQUFBb1ksSUFBQSxDQUFBclksQ0FBQSxDQUFBLGVBQUEsQ0FBQSxDQUFBLENBQUEzbUIsQ0FBQSxDQUFBNG1CLFVBQUEsQ0FBQW9ZLElBQUEsQ0FBQXJZLENBQUEsQ0FBQSxZQUFBLENBQUEsQ0FBQSxHQUFBLENBQUEsQ0FBQSxNQUFBLElBQUEsR0FBQSxDQUFBLENBQUE1aUMsQ0FBQSxDQUFBOGYsT0FBQSxFQUFBOWYsQ0FBQSxDQUFBaWdCLE9BQUEsR0FBQWhFLENBQUEsQ0FBQTRtQixVQUFBLENBQUFvYSxXQUFBLENBQUFqOUMsQ0FBQSxDQUFBMUcsTUFBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLEdBQUEsQ0FBQSxDQUFBNkQsQ0FBQSxDQUFBNkMsQ0FBQSxDQUFBOGYsT0FBQSxFQUFBOWYsQ0FBQSxDQUFBaWdCLE9BQUEsQ0FBQSxNQUFBLElBQUEsR0FBQSxDQUFBLENBQUFqZ0IsQ0FBQSxDQUFBOGYsT0FBQSxFQUFBOWYsQ0FBQSxDQUFBaWdCLE9BQUEsR0FBQWhFLENBQUEsQ0FBQTRtQixVQUFBLENBQUFvYSxXQUFBLENBQUFqOUMsQ0FBQSxDQUFBMUcsTUFBQSxDQUFBMHBDLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsR0FBQSxDQUFBLENBQUE3bEMsQ0FBQSxDQUFBNkMsQ0FBQSxDQUFBOGYsT0FBQSxFQUFBOWYsQ0FBQSxDQUFBaWdCLE9BQUEsQ0FBQWpnQixDQUFBLENBQUFzZSxhQUFBLENBQUFvQixNQUFBLEVBQUF6RCxDQUFBLENBQUE0bUIsVUFBQSxDQUFBb2EsV0FBQSxDQUFBajlDLENBQUEsQ0FBQTFHLE1BQUEsQ0FBQTBHLENBQUEsQ0FBQThmLE9BQUEsQ0FBQSxDQUFBN0QsQ0FBQSxDQUFBNG1CLFVBQUEsQ0FBQW9ZLElBQUEsQ0FBQXJZLENBQUEsQ0FBQSxlQUFBLENBQUEsQ0FBQSxDQUFBM21CLENBQUEsQ0FBQTRtQixVQUFBLENBQUFvWSxJQUFBLENBQUFyWSxDQUFBLENBQUEsWUFBQSxDQUFBLENBQUEsR0FBQSxDQUFBLENBQUEsTUFBQSxJQUFBLEdBQUEsQ0FBQSxDQUFBNWlDLENBQUEsQ0FBQThmLE9BQUEsRUFBQTlmLENBQUEsQ0FBQWlnQixPQUFBLEdBQUFoRSxDQUFBLENBQUE0bUIsVUFBQSxDQUFBb2EsV0FBQSxDQUFBajlDLENBQUEsQ0FBQTFHLE1BQUEsQ0FBQSxDQUFBLENBQUEsR0FBQSxDQUFBLENBQUE2RCxDQUFBLENBQUE2QyxDQUFBLENBQUE4ZixPQUFBLEVBQUE5ZixDQUFBLENBQUFpZ0IsT0FBQSxDQUFBLE1BQUEsUUFBQTlpQixDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxJQUFBLE1BQUE2QyxDQUFBLENBQUF1Z0IsT0FBQSxFQUFBdmdCLENBQUEsQ0FBQThmLE9BQUEsQ0FBQTdELENBQUEsQ0FBQTRtQixVQUFBLENBQUFxWSxlQUFBLENBQUEsSUFBQSxDQUFBLENBQUEvOUMsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBQSxDQUFBLEdBQUE2QyxDQUFBLENBQUE0ZCxjQUFBLEdBQUE1ZCxDQUFBLENBQUE2ZCxlQUFBLEVBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQWc5QixXQUFBLENBQUEscUJBQUE3NkMsQ0FBQSxDQUFBLENBQUEsR0FBQS9KLENBQUFBLENBQUEsQ0FBQWk5QixDQUFBLENBQUFwbUIsQ0FBQSxDQUFBbVAsQ0FBQSxDQUFBNG1CLFVBQUEsQ0FBQTBaLFFBQUEsQ0FBQXY4QyxDQUFBLENBQUExRyxNQUFBLENBQUEsQ0FBQSxNQUFBMmlCLENBQUFBLENBQUEsQ0FBQTRtQixVQUFBLENBQUFvWSxJQUFBLENBQUFudUMsQ0FBQSxDQUFBLGdCQUFBLEdBQUE3VyxDQUFBLENBQUFnbUIsQ0FBQSxDQUFBNG1CLFVBQUEsQ0FBQXVhLGNBQUEsQ0FBQW5oQyxDQUFBLENBQUE0bUIsVUFBQSxDQUFBb1ksSUFBQSxDQUFBbnVDLENBQUEsQ0FBQSxZQUFBLENBQUEsQ0FBQSxDQUFBb21CLENBQUEsQ0FBQWowQixNQUFBLENBQUFDLFlBQUEsQ0FBQSxNQUFBYyxDQUFBLENBQUFzZ0IsUUFBQSxDQUFBdGdCLENBQUEsQ0FBQXVnQixPQUFBLENBQUF2Z0IsQ0FBQSxDQUFBc2dCLFFBQUEsQ0FBQSxDQUFBdGdCLENBQUEsQ0FBQThmLE9BQUEsRUFBQTlmLENBQUEsQ0FBQWlnQixPQUFBLEVBQUEsSUFBQWlULENBQUEsRUFBQSxDQUFBajlCLENBQUEsRUFBQUEsQ0FBQSxDQUFBckIsT0FBQSxDQUFBcytCLENBQUEsRUFBQSxDQUFBLENBQUEsRUFBQSxJQUFBLEVBQUEsQ0FBQSxDQUFBLENBQUE0bkIsUUFBQSxDQUFBLGtCQUFBOTZDLENBQUEsQ0FBQSxDQUFBLEdBQUEvSixDQUFBQSxDQUFBLENBQUFpOUIsQ0FBQSxDQUFBalgsQ0FBQSxDQUFBNG1CLFVBQUEsQ0FBQTBaLFFBQUEsQ0FBQXY4QyxDQUFBLENBQUExRyxNQUFBLENBQUEsQ0FBQSxHQUFBNDVCLENBQUEsQ0FBQS91QixLQUFBLENBQUFqTyxHQUFBLEtBQUFnOUIsQ0FBQSxDQUFBbXFCLE9BQUEsQ0FBQSxHQUFBLENBQUFwbkQsQ0FBQSxDQUFBZ21CLENBQUEsQ0FBQTRtQixVQUFBLENBQUF5YSxTQUFBLENBQUFyaEMsQ0FBQSxDQUFBNG1CLFVBQUEsQ0FBQW9ZLElBQUEsQ0FBQS9uQixDQUFBLENBQUEsWUFBQSxDQUFBLENBQUFBLENBQUEsQ0FBQS91QixLQUFBLENBQUErdUIsQ0FBQSxDQUFBL3VCLEtBQUEsQ0FBQWpPLEdBQUEsRUFBQSxDQUFBLElBQUEsQ0FBQStsQixDQUFBLENBQUE0bUIsVUFBQSxDQUFBMGEsZ0JBQUEsQ0FBQXJxQixDQUFBLENBQUEsQ0FBQSxDQUFBajlCLENBQUEsR0FBQWdtQixDQUFBLENBQUE0bUIsVUFBQSxDQUFBaWEsaUJBQUEsQ0FBQTVwQixDQUFBLEVBQUFqWCxDQUFBLENBQUE0bUIsVUFBQSxDQUFBZ1osZ0JBQUEsQ0FBQTNvQixDQUFBLENBQUEsQ0FBQWpYLENBQUEsQ0FBQTRtQixVQUFBLENBQUErWSxpQkFBQSxDQUFBMW9CLENBQUEsQ0FBQSxDQUFBLENBQUEsT0FBQXBtQixDQUFBLENBQUEsQ0FBQSxPQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQW91QyxlQUFBLENBQUEseUJBQUFsN0MsQ0FBQSxDQUFBLENBQUEsR0FBQUEsQ0FBQSxDQUFBQSxDQUFBLENBQUExRyxNQUFBLEVBQUEwRyxDQUFBLENBQUEsVUFBQUEsQ0FBQSxDQUFBSixRQUFBLENBQUFwRSxXQUFBLEVBQUEsR0FBQXdFLENBQUEsQ0FBQWljLENBQUEsQ0FBQSxPQUFBLENBQUFqYyxDQUFBLENBQUF0SixVQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUF1bEIsQ0FBQSxDQUFBNG1CLFVBQUEsQ0FBQUMscUJBQUEsQ0FBQTlpQyxDQUFBLENBQUEsRUFBQWljLENBQUEsQ0FBQTRtQixVQUFBLENBQUF1WSxVQUFBLEdBQUFwN0MsQ0FBQSxDQUFBLENBQUEsR0FBQWt6QixDQUFBQSxDQUFBLENBQUFwbUIsQ0FBQSxDQUFBODFCLENBQUEsQ0FBQUksQ0FBQSxDQUFBSyxDQUFBLENBQUFwMUIsQ0FBQSxDQUFBeTNCLENBQUEsQ0FBQXhTLENBQUEsQ0FBQWpYLENBQUEsQ0FBQTRtQixVQUFBLENBQUEwWixRQUFBLENBQUF2OEMsQ0FBQSxDQUFBLENBQUFpYyxDQUFBLENBQUE0bUIsVUFBQSxDQUFBdEUsUUFBQSxFQUFBdGlCLENBQUEsQ0FBQTRtQixVQUFBLENBQUF0RSxRQUFBLEdBQUFyTCxDQUFBLEdBQUFqWCxDQUFBLENBQUE0bUIsVUFBQSxDQUFBdEUsUUFBQSxDQUFBb0UsS0FBQSxDQUFBaHNCLElBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsRUFBQXVjLENBQUEsRUFBQWpYLENBQUEsQ0FBQTRtQixVQUFBLENBQUFuRSxrQkFBQSxFQUFBemlCLENBQUEsQ0FBQTRtQixVQUFBLENBQUF3WSxlQUFBLENBQUFwL0IsQ0FBQSxDQUFBNG1CLFVBQUEsQ0FBQXRFLFFBQUEsQ0FBQXA2QixLQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBMkksQ0FBQSxDQUFBbVAsQ0FBQSxDQUFBNG1CLFVBQUEsQ0FBQW9ZLElBQUEsQ0FBQS9uQixDQUFBLENBQUEsWUFBQSxDQUFBLENBQUEwUCxDQUFBLENBQUE5MUIsQ0FBQSxDQUFBQSxDQUFBLENBQUFwWSxLQUFBLENBQUFzTCxDQUFBLENBQUEsQ0FBQUEsQ0FBQSxDQUFBa3pCLENBQUEsQ0FBQSxDQUFBLENBQUEsRUFBQSxDQUFBMFAsQ0FBQSxHQUFBLENBQUEsQ0FBQSxHQUFBemxDLENBQUEsQ0FBQSsxQixDQUFBLENBQUEyRCxRQUFBLENBQUErTCxDQUFBLENBQUEsQ0FBQTFQLENBQUEsQ0FBQW1xQixPQUFBLENBQUEsSUFBQSxDQUFBcGhDLENBQUEsQ0FBQTRtQixVQUFBLENBQUF1WSxVQUFBLENBQUFwN0MsQ0FBQSxDQUFBaWMsQ0FBQSxDQUFBNG1CLFVBQUEsQ0FBQWlhLGlCQUFBLENBQUE1cEIsQ0FBQSxDQUFBLENBQUFqWCxDQUFBLENBQUE0bUIsVUFBQSxDQUFBbEUsU0FBQSxHQUFBMytCLENBQUEsQ0FBQTlFLEtBQUEsQ0FBQSxFQUFBLENBQUEsQ0FBQStnQixDQUFBLENBQUE0bUIsVUFBQSxDQUFBb1osSUFBQSxHQUFBaGdDLENBQUEsQ0FBQTRtQixVQUFBLENBQUFvWixJQUFBLENBQUFoZ0MsQ0FBQSxDQUFBNG1CLFVBQUEsQ0FBQTJhLFFBQUEsQ0FBQXg5QyxDQUFBLENBQUEsQ0FBQWljLENBQUEsQ0FBQTRtQixVQUFBLENBQUFvWixJQUFBLENBQUEsQ0FBQSxHQUFBajhDLENBQUEsQ0FBQXk1QixZQUFBLENBQUEsQ0FBQXVKLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQS9tQixDQUFBLENBQUFqYyxDQUFBLENBQUEsQ0FBQXdPLE9BQUEsR0FBQXpXLElBQUEsQ0FBQSxVQUFBLENBQUEsTUFBQWlyQyxDQUFBQSxDQUFBLEVBQUEsVUFBQS9tQixDQUFBLENBQUEsSUFBQSxDQUFBLENBQUF2RSxHQUFBLENBQUEsVUFBQSxDQUFBLENBQUEsQ0FBQXNyQixDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUFLLENBQUEsQ0FBQSxDQUFBelosSUFBQSxDQUFBM04sQ0FBQSxDQUFBNG1CLFVBQUEsQ0FBQW9aLElBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQTM0QyxHQUFBLENBQUEyWSxDQUFBLENBQUE0bUIsVUFBQSxDQUFBb1osSUFBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUFoZ0MsQ0FBQSxDQUFBNG1CLFVBQUEsQ0FBQW9aLElBQUEsQ0FBQSxJQUFBLENBQUEvb0IsQ0FBQSxDQUFBeVAsS0FBQSxDQUFBM3lCLEtBQUEsRUFBQSxDQUFBa2pCLENBQUEsQ0FBQXlQLEtBQUEsQ0FBQWpyQixHQUFBLENBQUEsQ0FBQThOLFFBQUEsQ0FBQSxVQUFBLENBQUEvTixPQUFBLENBQUEsT0FBQSxDQUFBblUsR0FBQSxDQUFBLFNBQUEsQ0FBQSxDQUFBLENBQUEyWSxDQUFBLENBQUE0bUIsVUFBQSxDQUFBK1ksaUJBQUEsQ0FBQTFvQixDQUFBLENBQUEsQ0FBQW1RLENBQUEsQ0FBQXBuQixDQUFBLENBQUE0bUIsVUFBQSxDQUFBNGEsWUFBQSxDQUFBdnFCLENBQUEsQ0FBQW1RLENBQUEsQ0FBQUwsQ0FBQSxDQUFBLENBQUE5UCxDQUFBLENBQUF5UCxLQUFBLENBQUFqckIsR0FBQSxDQUFBLENBQUE4TixRQUFBLENBQUF2SixDQUFBLENBQUE0bUIsVUFBQSxDQUFBbEUsU0FBQSxFQUFBMWlCLENBQUEsQ0FBQWtnQyxPQUFBLENBQUEsUUFBQSxDQUFBblosQ0FBQSxDQUFBLE9BQUEsQ0FBQSxVQUFBLENBQUF2ckIsT0FBQSxDQUFBLE1BQUEsQ0FBQW1TLElBQUEsQ0FBQXlaLENBQUEsQ0FBQXpaLElBQUEsQ0FBQSxJQUFBLENBQUF0bUIsR0FBQSxDQUFBKy9CLENBQUEsQ0FBQS8vQixHQUFBLENBQUEsSUFBQSxDQUFBLENBQUEsQ0FBQTR2QixDQUFBLENBQUE2UCxNQUFBLEdBQUE5MEIsQ0FBQSxDQUFBZ08sQ0FBQSxDQUFBNG1CLFVBQUEsQ0FBQW9ZLElBQUEsQ0FBQS9uQixDQUFBLENBQUEsVUFBQSxDQUFBLENBQUF3UyxDQUFBLENBQUF6cEIsQ0FBQSxDQUFBNG1CLFVBQUEsQ0FBQW9ZLElBQUEsQ0FBQS9uQixDQUFBLENBQUEsVUFBQSxDQUFBLENBQUFBLENBQUEsQ0FBQXlQLEtBQUEsQ0FBQWpyQixHQUFBLENBQUEsU0FBQSxDQUFBemhCLENBQUEsQ0FBQWdtQixDQUFBLENBQUFqYyxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBaWMsQ0FBQSxDQUFBNG1CLFVBQUEsQ0FBQW5FLGtCQUFBLENBQUEsQ0FBQSxDQUFBLENBQUF6aUIsQ0FBQSxDQUFBZ3FCLE9BQUEsRUFBQWhxQixDQUFBLENBQUFncUIsT0FBQSxDQUFBRCxNQUFBLENBQUEvM0IsQ0FBQSxDQUFBLENBQUFpbEIsQ0FBQSxDQUFBeVAsS0FBQSxDQUFBanFCLElBQUEsQ0FBQXpLLENBQUEsQ0FBQWdPLENBQUEsQ0FBQTRtQixVQUFBLENBQUFvWSxJQUFBLENBQUEvbkIsQ0FBQSxDQUFBLGFBQUEsQ0FBQSxDQUFBd1MsQ0FBQSxDQUFBLENBQUF4UyxDQUFBLENBQUF5UCxLQUFBLENBQUExMEIsQ0FBQSxFQUFBLE1BQUEsRUFBQUEsQ0FBQSxDQUFBeTNCLENBQUEsQ0FBQSxJQUFBLENBQUEsQ0FBQXpwQixDQUFBLENBQUE0bUIsVUFBQSxDQUFBNmEsaUJBQUEsQ0FBQXhxQixDQUFBLEdBQUFBLENBQUEsQ0FBQS91QixLQUFBLENBQUF5YSxPQUFBLENBQUEsT0FBQSxDQUFBLENBQUEzQyxDQUFBLENBQUE0bUIsVUFBQSxDQUFBdEUsUUFBQSxDQUFBckwsQ0FBQSxDQUFBLENBQUEsQ0FDQSxDQUFBLENBREEsQ0FDQTBvQixpQkFBQSxDQUFBLDJCQUFBNTdDLENBQUEsQ0FBQSxDQUFBLEtBQUErNUMsT0FBQSxDQUFBLENBQUEsQ0FBQTU1QyxDQUFBLENBQUFILENBQUEsQ0FBQUEsQ0FBQSxDQUFBMmlDLEtBQUEsQ0FBQTN5QixLQUFBLEdBQUF3VCxNQUFBLENBQUEsS0FBQW02QixhQUFBLENBQUEzOUMsQ0FBQSxDQUFBLENBQUEsQ0FBQSxLQUFBNDlDLGVBQUEsQ0FBQTU5QyxDQUFBLENBQUEsQ0FBQSxHQUFBL0osQ0FBQUEsQ0FBQSxDQUFBaTlCLENBQUEsQ0FBQSxLQUFBMnFCLGtCQUFBLENBQUE3OUMsQ0FBQSxDQUFBLENBQUE4TSxDQUFBLENBQUFvbUIsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLzFCLENBQUEsQ0FBQSxFQUFBLENBQUE2bEMsQ0FBQSxDQUFBaGpDLENBQUEsQ0FBQTJpQyxLQUFBLENBQUE1K0IsSUFBQSxDQUFBLElBQUEsS0FBQXE3QixhQUFBLENBQUEsSUFBQSxDQUFBLENBQUE0RCxDQUFBLENBQUExckMsTUFBQSxDQUFBLENBQUEsRUFBQXNyQyxDQUFBLENBQUFsdUMsS0FBQSxDQUFBc3VDLENBQUEsQ0FBQXhyQyxHQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQXdJLENBQUEsQ0FBQTJpQyxLQUFBLENBQUF6UixXQUFBLENBQUEsbUVBQUEsRUFBQTNMLEtBQUEsQ0FBQSxFQUFBLENBQUEsQ0FBQXpZLENBQUEsQ0FBQSxDQUFBLEVBQUE5TSxDQUFBLENBQUEyaUMsS0FBQSxDQUFBOVIsUUFBQSxDQUFBLHVCQUFBL2pCLENBQUEsRUFBQTRLLEdBQUEsQ0FBQSxPQUFBLENBQUF2YSxDQUFBLENBQUEyUCxDQUFBLENBQUEsSUFBQSxDQUFBLENBQUE5TSxDQUFBLENBQUEyaUMsS0FBQSxDQUFBLENBQUEsSUFBQXpQLENBQUEsQ0FBQSxDQUFBLENBQUEsRUFBQSxJQUFBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsS0FBQSxDQUFBLFFBQUEsRUFBQSxPQUFBLEVBQUEscUJBQUEsQ0FBQSxDQUFBbHpCLENBQUEsQ0FBQTJpQyxLQUFBLENBQUEsQ0FBQSxLQUFBc1ksSUFBQSxDQUFBajdDLENBQUEsQ0FBQSxPQUFBLEVBQUEsS0FBQSxDQUFBLFFBQUEsRUFBQSxPQUFBLEVBQUEsbUJBQUEsQ0FBQSxDQUFBQSxDQUFBLEdBQUFpYyxDQUFBLENBQUE0bUIsVUFBQSxDQUFBdEUsUUFBQSxFQUFBdGlCLENBQUEsQ0FBQTRtQixVQUFBLENBQUFuRSxrQkFBQSxFQUFBemlCLENBQUEsQ0FBQTRtQixVQUFBLENBQUE2YSxpQkFBQSxDQUFBMTlDLENBQUEsQ0FBQSxFQUFBQSxDQUFBLENBQUFtRSxLQUFBLENBQUF5YSxPQUFBLENBQUEsT0FBQSxDQUFBLENBQUE1ZSxDQUFBLENBQUE4OUMsU0FBQSxHQUFBN25ELENBQUEsQ0FBQStKLENBQUEsQ0FBQTg5QyxTQUFBLENBQUFqckMsVUFBQSxDQUFBLFVBQUEsQ0FBQTVjLENBQUEsR0FBQStKLENBQUEsQ0FBQTg5QyxTQUFBLEVBQUE5OUMsQ0FBQSxDQUFBODlDLFNBQUEsRUFBQTk5QyxDQUFBLENBQUEyaUMsS0FBQSxDQUFBNStCLElBQUEsQ0FBQSxpQ0FBQSxFQUFBOGYsV0FBQSxDQUFBN2pCLENBQUEsQ0FBQTg5QyxTQUFBLENBQUEsQ0FBQTduRCxDQUFBLENBQUErSixDQUFBLENBQUE4OUMsU0FBQSxDQUFBLElBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQURBLENBQ0FKLGlCQUFBLENBQUEsMkJBQUF6aEMsQ0FBQSxDQUFBLENBQUEsTUFBQUEsQ0FBQUEsQ0FBQSxDQUFBOVgsS0FBQSxFQUFBOFgsQ0FBQSxDQUFBOVgsS0FBQSxDQUFBeUksRUFBQSxDQUFBLFVBQUEsQ0FBQSxFQUFBLENBQUFxUCxDQUFBLENBQUE5WCxLQUFBLENBQUF5SSxFQUFBLENBQUEsV0FBQSxDQUFBLEVBQUEsQ0FBQXFQLENBQUEsQ0FBQTlYLEtBQUEsQ0FBQXlJLEVBQUEsQ0FBQSxRQUFBLENBQUEsQ0FBQSxDQURBLENBQ0E2d0MsWUFBQSxDQUFBLHNCQUFBejlDLENBQUEsQ0FBQS9KLENBQUEsQ0FBQWk5QixDQUFBLENBQUEsQ0FBQSxHQUFBcG1CLENBQUFBLENBQUEsQ0FBQTlNLENBQUEsQ0FBQTJpQyxLQUFBLENBQUF3RCxVQUFBLEVBQUEsQ0FBQXZELENBQUEsQ0FBQTVpQyxDQUFBLENBQUEyaUMsS0FBQSxDQUFBeUQsV0FBQSxFQUFBLENBQUFqcEMsQ0FBQSxDQUFBNkMsQ0FBQSxDQUFBbUUsS0FBQSxDQUFBbkUsQ0FBQSxDQUFBbUUsS0FBQSxDQUFBZ2lDLFVBQUEsRUFBQSxDQUFBLENBQUEsQ0FBQW5ELENBQUEsQ0FBQWhqQyxDQUFBLENBQUFtRSxLQUFBLENBQUFuRSxDQUFBLENBQUFtRSxLQUFBLENBQUFpaUMsV0FBQSxFQUFBLENBQUEsQ0FBQSxDQUFBL0MsQ0FBQSxDQUFBenZDLFFBQUEsQ0FBQXNQLGVBQUEsQ0FBQXNqQyxXQUFBLEVBQUF0VCxDQUFBLENBQUEsQ0FBQSxDQUFBalgsQ0FBQSxDQUFBcm9CLFFBQUEsQ0FBQSxDQUFBbzNCLFVBQUEsRUFBQSxDQUFBLENBQUEvYyxDQUFBLENBQUFyYSxRQUFBLENBQUFzUCxlQUFBLENBQUFnNUMsWUFBQSxFQUFBaHBCLENBQUEsQ0FBQSxDQUFBLENBQUFqWCxDQUFBLENBQUFyb0IsUUFBQSxDQUFBLENBQUFtM0IsU0FBQSxFQUFBLENBQUEsQ0FBQSxNQUFBOTBCLENBQUFBLENBQUEsQ0FBQTJ6QixJQUFBLEVBQUEsS0FBQXF4QixJQUFBLENBQUFqN0MsQ0FBQSxDQUFBLE9BQUEsRUFBQThNLENBQUEsQ0FBQTNQLENBQUEsQ0FBQSxDQUFBLENBQUFsSCxDQUFBLENBQUEyekIsSUFBQSxFQUFBc0osQ0FBQSxFQUFBajlCLENBQUEsQ0FBQTJ6QixJQUFBLEdBQUE1cEIsQ0FBQSxDQUFBbUUsS0FBQSxDQUFBMjNCLE1BQUEsR0FBQWxTLElBQUEsQ0FBQTNOLENBQUEsQ0FBQXJvQixRQUFBLENBQUEsQ0FBQW8zQixVQUFBLEVBQUEsQ0FBQSxDQUFBLENBQUEvMEIsQ0FBQSxDQUFBcU4sR0FBQSxFQUFBNHZCLENBQUEsRUFBQWo5QixDQUFBLENBQUFxTixHQUFBLEdBQUF0RCxDQUFBLENBQUFtRSxLQUFBLENBQUEyM0IsTUFBQSxHQUFBeDRCLEdBQUEsQ0FBQTAvQixDQUFBLENBQUEvbUIsQ0FBQSxDQUFBcm9CLFFBQUEsQ0FBQSxDQUFBbTNCLFNBQUEsRUFBQSxDQUFBLENBQUEsQ0FBQTkwQixDQUFBLENBQUEyekIsSUFBQSxFQUFBL3ZCLElBQUEsQ0FBQXd3QyxHQUFBLENBQUFwMEMsQ0FBQSxDQUFBMnpCLElBQUEsQ0FBQTN6QixDQUFBLENBQUEyekIsSUFBQSxDQUFBOWMsQ0FBQSxDQUFBdTJCLENBQUEsRUFBQUEsQ0FBQSxDQUFBdjJCLENBQUEsQ0FBQWpULElBQUEsQ0FBQXdzQyxHQUFBLENBQUFwd0MsQ0FBQSxDQUFBMnpCLElBQUEsQ0FBQTljLENBQUEsQ0FBQXUyQixDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQXB0QyxDQUFBLENBQUFxTixHQUFBLEVBQUF6SixJQUFBLENBQUF3d0MsR0FBQSxDQUFBcDBDLENBQUEsQ0FBQXFOLEdBQUEsQ0FBQXJOLENBQUEsQ0FBQXFOLEdBQUEsQ0FBQXMvQixDQUFBLENBQUEzMEIsQ0FBQSxFQUFBQSxDQUFBLENBQUEyMEIsQ0FBQSxDQUFBL29DLElBQUEsQ0FBQXdzQyxHQUFBLENBQUF6RCxDQUFBLENBQUFJLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBL3NDLENBQUEsQ0FBQSxDQURBLENBQ0F1bkQsUUFBQSxDQUFBLGtCQUFBeDlDLENBQUEsQ0FBQSxDQUFBLElBQUEsR0FBQS9KLENBQUFBLENBQUEsQ0FBQWk5QixDQUFBLENBQUEsS0FBQXFwQixRQUFBLENBQUF2OEMsQ0FBQSxDQUFBLENBQUE4TSxDQUFBLENBQUEsS0FBQW11QyxJQUFBLENBQUEvbkIsQ0FBQSxDQUFBLE9BQUEsQ0FBQSxDQUFBbHpCLENBQUEsR0FBQSxXQUFBQSxDQUFBLENBQUF2SyxJQUFBLEVBQUEsSUFBQXVLLENBQUEsQ0FBQTFLLFFBQUEsRUFBQTJtQixDQUFBLENBQUE3VyxJQUFBLENBQUFnRSxPQUFBLENBQUF1aUIsTUFBQSxDQUFBM3JCLENBQUEsQ0FBQSxDQUFBLEdBQUFBLENBQUEsQ0FBQUEsQ0FBQSxDQUFBOE0sQ0FBQSxDQUFBLGlCQUFBLENBQUEsYUFBQSxDQUFBLENBQUEsQ0FBQSxNQUFBN1csQ0FBQUEsQ0FBQSxDQUFBZ21CLENBQUEsQ0FBQWpjLENBQUEsQ0FBQSxDQUFBODdCLE1BQUEsRUFBQSxDQUFBLENBQUE3bEMsQ0FBQSxDQUFBMnpCLElBQUEsQ0FBQTN6QixDQUFBLENBQUFxTixHQUFBLENBQUEsQ0FBQSxDQURBLENBQ0ErM0MsZUFBQSxDQUFBLHlCQUFBcjdDLENBQUEsQ0FBQSxDQUFBLEdBQUEvSixDQUFBQSxDQUFBLENBQUFpOUIsQ0FBQSxDQUFBcG1CLENBQUEsQ0FBQTgxQixDQUFBLENBQUF6bEMsQ0FBQSxDQUFBLEtBQUFvaEMsUUFBQSxDQUFBLENBQUFwaEMsQ0FBQSxFQUFBNkMsQ0FBQSxFQUFBN0MsQ0FBQSxHQUFBOGUsQ0FBQSxDQUFBeEcsSUFBQSxDQUFBelYsQ0FBQSxDQUFBLFlBQUEsQ0FBQSxFQUFBLEtBQUEwK0Isa0JBQUEsR0FBQXpvQyxDQUFBLENBQUEsS0FBQWdsRCxJQUFBLENBQUE5OUMsQ0FBQSxDQUFBLFVBQUEsQ0FBQSxDQUFBKzFCLENBQUEsQ0FBQSxLQUFBK25CLElBQUEsQ0FBQTk5QyxDQUFBLENBQUEsVUFBQSxDQUFBLENBQUEyUCxDQUFBLENBQUEsWUFBQSxDQUFBbVAsQ0FBQSxDQUFBNG1CLFVBQUEsQ0FBQWtiLFdBQUEsQ0FBQTVnRCxDQUFBLEVBQUEsQ0FBQSxDQUFBOGUsQ0FBQSxDQUFBZ3FCLE9BQUEsR0FBQWhxQixDQUFBLENBQUFncUIsT0FBQSxDQUFBRCxNQUFBLENBQUEvdkMsQ0FBQSxHQUFBZ21CLENBQUEsQ0FBQWdxQixPQUFBLENBQUFod0MsQ0FBQSxDQUFBLEVBQUFrSCxDQUFBLENBQUF3bEMsS0FBQSxDQUFBL3BCLElBQUEsQ0FBQTNpQixDQUFBLENBQUFnbUIsQ0FBQSxDQUFBNG1CLFVBQUEsQ0FBQW9ZLElBQUEsQ0FBQTk5QyxDQUFBLENBQUEsYUFBQSxDQUFBLENBQUErMUIsQ0FBQSxDQUFBcG1CLENBQUEsQ0FBQSxDQUFBM1AsQ0FBQSxDQUFBd2xDLEtBQUEsQ0FBQSxjQUFBMXNDLENBQUEsQ0FBQSxTQUFBLENBQUEsV0FBQUEsQ0FBQSxDQUFBLFNBQUEsQ0FBQSxNQUFBLEVBQUFBLENBQUEsQ0FBQWk5QixDQUFBLENBQUEsSUFBQSxDQUFBcG1CLENBQUEsQ0FBQSxDQUFBN1csQ0FBQSxFQUFBNlcsQ0FBQSxFQUFBLENBQUEsS0FBQTR4QixrQkFBQSxDQUFBLENBQUEsQ0FBQSxDQUFBa0UsQ0FBQSxDQUFBLEtBQUFxWSxJQUFBLENBQUE5OUMsQ0FBQSxDQUFBLFNBQUEsQ0FBQSxDQUFBeWxDLENBQUEsRUFBQUEsQ0FBQSxDQUFBbHVDLEtBQUEsQ0FBQXlJLENBQUEsQ0FBQWdILEtBQUEsQ0FBQWhILENBQUEsQ0FBQWdILEtBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxJQUFBLENBQUEsQ0FBQWhILENBQUEsQ0FBQWdILEtBQUEsQ0FBQWhILENBQUEsQ0FBQWdILEtBQUEsQ0FBQWpPLEdBQUEsRUFBQSxDQUFBLEVBQUEsQ0FBQWlILENBQUEsQ0FBQSxDQUFBLENBQUEsS0FBQWkrQyxVQUFBLENBQUEsSUFBQSxDQUFBLEtBQUF6YyxTQUFBLEdBQUEsS0FBQXFkLFlBQUEsQ0FBQXRrQyxHQUFBLENBQUEsQ0FBQThOLFFBQUEsQ0FBQSxVQUFBLENBQUFvRSxJQUFBLENBQUEsR0FBQSxDQUFBdG1CLEdBQUEsQ0FBQSxRQUFBLENBQUEsRUFBQTJZLENBQUEsQ0FBQWtnQyxPQUFBLEdBQUFsZ0MsQ0FBQSxDQUFBK2hDLFNBQUEsR0FBQS9oQyxDQUFBLENBQUEsTUFBQSxDQUFBLENBQUF1SCxNQUFBLENBQUEsS0FBQW1mLEtBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxLQUFBaEUsU0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FEQSxDQUNBb2YsV0FBQSxDQUFBLHFCQUFBOWhDLENBQUEsQ0FBQSxDQUFBQSxDQUFBLENBQUEwbUIsS0FBQSxDQUFBelIsV0FBQSxDQUFBLEtBQUE4TixZQUFBLEVBQUFuakIsR0FBQSxDQUFBLHlCQUFBLEVBQUEsQ0FEQSxDQUNBb2lDLG1CQUFBLENBQUEsNkJBQUFqK0MsQ0FBQSxDQUFBLENBQUEsR0FBQWljLENBQUEsQ0FBQTRtQixVQUFBLENBQUF0RSxRQUFBLENBQUEsQ0FBQSxHQUFBdG9DLENBQUFBLENBQUEsQ0FBQWdtQixDQUFBLENBQUFqYyxDQUFBLENBQUExRyxNQUFBLENBQUEsQ0FBQTQ1QixDQUFBLENBQUFqWCxDQUFBLENBQUE0bUIsVUFBQSxDQUFBMFosUUFBQSxDQUFBdG1ELENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQTJLLEVBQUEsR0FBQXFiLENBQUEsQ0FBQTRtQixVQUFBLENBQUFqRSxVQUFBLEVBQUEsSUFBQTNvQyxDQUFBLENBQUF1WSxPQUFBLENBQUEsSUFBQXlOLENBQUEsQ0FBQTRtQixVQUFBLENBQUFqRSxVQUFBLEVBQUF0bkMsTUFBQSxFQUFBLENBQUFyQixDQUFBLENBQUFzN0IsUUFBQSxDQUFBdFYsQ0FBQSxDQUFBNG1CLFVBQUEsQ0FBQWlYLGVBQUEsQ0FBQSxFQUFBLENBQUE3akQsQ0FBQSxDQUFBaVksT0FBQSxDQUFBLElBQUErTixDQUFBLENBQUE0bUIsVUFBQSxDQUFBOUQsYUFBQSxFQUFBem5DLE1BQUEsRUFBQTJrQixDQUFBLENBQUE0bUIsVUFBQSxDQUFBbkUsa0JBQUEsR0FBQSxDQUFBemlCLENBQUEsQ0FBQTRtQixVQUFBLENBQUFsRSxTQUFBLEVBQUEsQ0FBQTFpQixDQUFBLENBQUFrZ0MsT0FBQSxHQUFBbG1ELENBQUEsQ0FBQXM3QixRQUFBLENBQUF0VixDQUFBLENBQUE0bUIsVUFBQSxDQUFBaVgsZUFBQSxHQUFBNzlCLENBQUEsQ0FBQTRtQixVQUFBLENBQUF0RSxRQUFBLEdBQUFyTCxDQUFBLEdBQUFqWCxDQUFBLENBQUE0bUIsVUFBQSxDQUFBd1ksZUFBQSxFQUFBLENBQUEsQ0FBQSxDQURBLENBQ0E0QixXQUFBLENBQUEscUJBQUFqOUMsQ0FBQSxDQUFBL0osQ0FBQSxDQUFBaTlCLENBQUEsQ0FBQSxDQUFBLEdBQUFwbUIsQ0FBQUEsQ0FBQSxDQUFBbVAsQ0FBQSxDQUFBamMsQ0FBQSxDQUFBLENBQUE0aUMsQ0FBQSxDQUFBLEtBQUEyWixRQUFBLENBQUF6dkMsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsS0FBQWcyQixxQkFBQSxDQUFBaDJCLENBQUEsQ0FBQSxDQUFBLENBQUEsSUFBQSxLQUFBb3hDLGVBQUEsQ0FBQXRiLENBQUEsQ0FBQTNzQyxDQUFBLEVBQUEsTUFBQWk5QixDQUFBLENBQUEsS0FBQStuQixJQUFBLENBQUFyWSxDQUFBLENBQUEsa0JBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBMVAsQ0FBQSxFQUFBLEtBQUEwb0IsaUJBQUEsQ0FBQWhaLENBQUEsQ0FBQSxFQUFBLENBREEsQ0FDQXVhLFVBQUEsQ0FBQSxvQkFBQW45QyxDQUFBLENBQUEsQ0FBQSxHQUFBL0osQ0FBQUEsQ0FBQSxDQUFBaTlCLENBQUEsQ0FBQWpYLENBQUEsQ0FBQWpjLENBQUEsQ0FBQSxDQUFBOE0sQ0FBQSxDQUFBLEtBQUF5dkMsUUFBQSxDQUFBcnBCLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLEtBQUErbkIsSUFBQSxDQUFBbnVDLENBQUEsQ0FBQSxhQUFBLEdBQUFBLENBQUEsQ0FBQXF4QyxVQUFBLEVBQUFyeEMsQ0FBQSxDQUFBd3RDLFdBQUEsQ0FBQXh0QyxDQUFBLENBQUFxeEMsVUFBQSxDQUFBcnhDLENBQUEsQ0FBQTJ0QyxTQUFBLENBQUEzdEMsQ0FBQSxDQUFBeXRDLGFBQUEsQ0FBQXp0QyxDQUFBLENBQUFzeEMsWUFBQSxDQUFBdHhDLENBQUEsQ0FBQTR0QyxRQUFBLENBQUE1dEMsQ0FBQSxDQUFBMHRDLFlBQUEsQ0FBQTF0QyxDQUFBLENBQUF1eEMsV0FBQSxHQUFBcG9ELENBQUEsQ0FBQSxHQUFBd0csQ0FBQUEsSUFBQSxFQUFBLENBQUFxUSxDQUFBLENBQUF3dEMsV0FBQSxDQUFBcmtELENBQUEsQ0FBQXFvRCxPQUFBLEVBQUEsQ0FBQXh4QyxDQUFBLENBQUEydEMsU0FBQSxDQUFBM3RDLENBQUEsQ0FBQXl0QyxhQUFBLENBQUF0a0QsQ0FBQSxDQUFBc29ELFFBQUEsRUFBQSxDQUFBenhDLENBQUEsQ0FBQTR0QyxRQUFBLENBQUE1dEMsQ0FBQSxDQUFBMHRDLFlBQUEsQ0FBQXZrRCxDQUFBLENBQUF1b0QsV0FBQSxFQUFBLEVBQUEsS0FBQUMsYUFBQSxDQUFBM3hDLENBQUEsQ0FBQSxDQUFBLEtBQUFtd0MsV0FBQSxDQUFBL3BCLENBQUEsQ0FBQSxDQUFBLENBREEsQ0FDQXdyQixnQkFBQSxDQUFBLDBCQUFBMStDLENBQUEsQ0FBQS9KLENBQUEsQ0FBQWk5QixDQUFBLENBQUEsQ0FBQSxHQUFBcG1CLENBQUFBLENBQUEsQ0FBQW1QLENBQUEsQ0FBQWpjLENBQUEsQ0FBQSxDQUFBNGlDLENBQUEsQ0FBQSxLQUFBMlosUUFBQSxDQUFBenZDLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBODFCLENBQUEsQ0FBQSxZQUFBLE1BQUExUCxDQUFBLENBQUEsT0FBQSxDQUFBLE1BQUEsQ0FBQSxDQUFBLENBQUEwUCxDQUFBLENBQUEsUUFBQSxNQUFBMVAsQ0FBQSxDQUFBLE9BQUEsQ0FBQSxNQUFBLENBQUEsQ0FBQSxDQUFBdk0sUUFBQSxDQUFBMXdCLENBQUEsQ0FBQWdELE9BQUEsQ0FBQWhELENBQUEsQ0FBQTBTLGFBQUEsRUFBQXpOLEtBQUEsQ0FBQSxFQUFBLENBQUEsQ0FBQSxLQUFBdWpELGFBQUEsQ0FBQTdiLENBQUEsQ0FBQSxDQUFBLEtBQUFxYSxXQUFBLENBQUFud0MsQ0FBQSxDQUFBLENBQUEsQ0FEQSxDQUNBa3dDLFVBQUEsQ0FBQSxvQkFBQWg5QyxDQUFBLENBQUEvSixDQUFBLENBQUFpOUIsQ0FBQSxDQUFBcG1CLENBQUEsQ0FBQSxDQUFBLEdBQUE4MUIsQ0FBQUEsQ0FBQSxDQUFBemxDLENBQUEsQ0FBQThlLENBQUEsQ0FBQWpjLENBQUEsQ0FBQSxDQUFBaWMsQ0FBQSxDQUFBblAsQ0FBQSxDQUFBLENBQUF5a0IsUUFBQSxDQUFBLEtBQUEyTixrQkFBQSxHQUFBLEtBQUE0RCxxQkFBQSxDQUFBM2xDLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxHQUFBeWxDLENBQUEsQ0FBQSxLQUFBMlosUUFBQSxDQUFBcC9DLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBeWxDLENBQUEsQ0FBQTBYLFdBQUEsQ0FBQTFYLENBQUEsQ0FBQXViLFVBQUEsQ0FBQWxpQyxDQUFBLENBQUEsR0FBQSxDQUFBblAsQ0FBQSxDQUFBLENBQUFnVyxJQUFBLEVBQUEsQ0FBQThmLENBQUEsQ0FBQTJYLGFBQUEsQ0FBQTNYLENBQUEsQ0FBQXdiLFlBQUEsQ0FBQW5vRCxDQUFBLENBQUEyc0MsQ0FBQSxDQUFBNFgsWUFBQSxDQUFBNVgsQ0FBQSxDQUFBeWIsV0FBQSxDQUFBbnJCLENBQUEsQ0FBQSxLQUFBeXJCLFdBQUEsQ0FBQTMrQyxDQUFBLENBQUEsS0FBQXk3QyxXQUFBLENBQUE3WSxDQUFBLENBQUFBLENBQUEsQ0FBQXViLFVBQUEsQ0FBQXZiLENBQUEsQ0FBQXdiLFlBQUEsQ0FBQXhiLENBQUEsQ0FBQXliLFdBQUEsQ0FBQSxDQUFBLEVBQUEsQ0FEQSxDQUNBbkIsVUFBQSxDQUFBLG9CQUFBbDlDLENBQUEsQ0FBQSxDQUFBLEdBQUEvSixDQUFBQSxDQUFBLENBQUFnbUIsQ0FBQSxDQUFBamMsQ0FBQSxDQUFBLENBQUEsS0FBQTIrQyxXQUFBLENBQUExb0QsQ0FBQSxDQUFBLEVBQUEsRUFBQSxDQURBLENBQ0Ewb0QsV0FBQSxDQUFBLHFCQUFBMytDLENBQUEsQ0FBQS9KLENBQUEsQ0FBQSxDQUFBLEdBQUFpOUIsQ0FBQUEsQ0FBQSxDQUFBcG1CLENBQUEsQ0FBQW1QLENBQUEsQ0FBQWpjLENBQUEsQ0FBQSxDQUFBNGlDLENBQUEsQ0FBQSxLQUFBMlosUUFBQSxDQUFBenZDLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBN1csQ0FBQSxDQUFBLE1BQUFBLENBQUEsQ0FBQUEsQ0FBQSxDQUFBLEtBQUF3bEQsV0FBQSxDQUFBN1ksQ0FBQSxDQUFBLENBQUFBLENBQUEsQ0FBQXorQixLQUFBLEVBQUF5K0IsQ0FBQSxDQUFBeitCLEtBQUEsQ0FBQWpPLEdBQUEsQ0FBQUQsQ0FBQSxDQUFBLENBQUEsS0FBQTRsRCxnQkFBQSxDQUFBalosQ0FBQSxDQUFBLENBQUExUCxDQUFBLENBQUEsS0FBQStuQixJQUFBLENBQUFyWSxDQUFBLENBQUEsVUFBQSxDQUFBLENBQUExUCxDQUFBLENBQUFBLENBQUEsQ0FBQXgrQixLQUFBLENBQUFrdUMsQ0FBQSxDQUFBeitCLEtBQUEsQ0FBQXkrQixDQUFBLENBQUF6K0IsS0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLElBQUEsQ0FBQSxDQUFBbE8sQ0FBQSxDQUFBMnNDLENBQUEsQ0FBQSxDQUFBLENBQUFBLENBQUEsQ0FBQXorQixLQUFBLEVBQUF5K0IsQ0FBQSxDQUFBeitCLEtBQUEsQ0FBQXlhLE9BQUEsQ0FBQSxRQUFBLENBQUEsQ0FBQWdrQixDQUFBLENBQUFHLE1BQUEsQ0FBQSxLQUFBNlksaUJBQUEsQ0FBQWhaLENBQUEsQ0FBQSxFQUFBLEtBQUF5WSxlQUFBLEdBQUEsS0FBQUQsVUFBQSxDQUFBeFksQ0FBQSxDQUFBeitCLEtBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxrQkFBQXkrQixDQUFBLENBQUF6K0IsS0FBQSxDQUFBLENBQUEsQ0FBQSxHQUFBeStCLENBQUEsQ0FBQXorQixLQUFBLENBQUF5YSxPQUFBLENBQUEsT0FBQSxDQUFBLENBQUEsS0FBQXc4QixVQUFBLENBQUEsSUFBQSxDQUFBLENBQUEsQ0FEQSxDQUNBUyxnQkFBQSxDQUFBLDBCQUFBNzdDLENBQUEsQ0FBQSxDQUFBLEdBQUEvSixDQUFBQSxDQUFBLENBQUFpOUIsQ0FBQSxDQUFBcG1CLENBQUEsQ0FBQTgxQixDQUFBLENBQUEsS0FBQXFZLElBQUEsQ0FBQWo3QyxDQUFBLENBQUEsVUFBQSxDQUFBLENBQUE0aUMsQ0FBQSxHQUFBM3NDLENBQUEsQ0FBQSxLQUFBZ2xELElBQUEsQ0FBQWo3QyxDQUFBLENBQUEsV0FBQSxHQUFBLEtBQUFpN0MsSUFBQSxDQUFBajdDLENBQUEsQ0FBQSxZQUFBLENBQUEsQ0FBQWt6QixDQUFBLENBQUEsS0FBQTZwQixRQUFBLENBQUEvOEMsQ0FBQSxDQUFBLENBQUE4TSxDQUFBLENBQUEsS0FBQTh4QyxVQUFBLENBQUEzb0QsQ0FBQSxDQUFBaTlCLENBQUEsQ0FBQSxLQUFBcXFCLGdCQUFBLENBQUF2OUMsQ0FBQSxDQUFBLENBQUEsQ0FBQWljLENBQUEsQ0FBQTJtQixDQUFBLENBQUEsQ0FBQTFzQyxHQUFBLENBQUE0VyxDQUFBLENBQUEsQ0FBQSxDQUFBLENBREEsQ0FDQSt4QyxVQUFBLENBQUEsb0JBQUE1aUMsQ0FBQSxDQUFBLENBQUEsR0FBQWpjLENBQUFBLENBQUEsQ0FBQWljLENBQUEsQ0FBQXUvQixNQUFBLEVBQUEsQ0FBQSxNQUFBLENBQUF4N0MsQ0FBQSxDQUFBLENBQUEsRUFBQSxFQUFBQSxDQUFBLENBQUEsRUFBQSxDQUFBLENBQUEsQ0FEQSxDQUNBd2hDLFdBQUEsQ0FBQSxxQkFBQXZsQixDQUFBLENBQUEsQ0FBQSxHQUFBamMsQ0FBQUEsQ0FBQSxDQUFBL0osQ0FBQSxDQUFBLEdBQUF3RyxDQUFBQSxJQUFBLENBQUF3ZixDQUFBLENBQUE2aUMsT0FBQSxFQUFBLENBQUEsQ0FBQSxNQUFBN29ELENBQUFBLENBQUEsQ0FBQXNsRCxPQUFBLENBQUF0bEQsQ0FBQSxDQUFBcW9ELE9BQUEsR0FBQSxDQUFBLEVBQUFyb0QsQ0FBQSxDQUFBdWxELE1BQUEsSUFBQSxDQUFBLENBQUEsRUFBQXg3QyxDQUFBLENBQUEvSixDQUFBLENBQUE2b0QsT0FBQSxFQUFBLENBQUE3b0QsQ0FBQSxDQUFBcWxELFFBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQXJsRCxDQUFBLENBQUFzbEQsT0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBMWhELElBQUEsQ0FBQSt1QyxLQUFBLENBQUEvdUMsSUFBQSxDQUFBK3JCLEtBQUEsQ0FBQSxDQUFBNWxCLENBQUEsQ0FBQS9KLENBQUEsRUFBQSxLQUFBLEVBQUEsQ0FBQSxFQUFBLENBQUEsQ0FBQSxDQURBLENBQ0FxbkQsU0FBQSxDQUFBLG1CQUFBdDlDLENBQUEsQ0FBQS9KLENBQUEsQ0FBQWk5QixDQUFBLENBQUEsQ0FBQSxHQUFBLE1BQUFsekIsQ0FBQSxFQUFBLE1BQUEvSixDQUFBLENBQUEsS0FBQSxtQkFBQSxDQUFBLEdBQUFBLENBQUEsQ0FBQSxrQkFBQUEsQ0FBQSxFQUFBLEdBQUFBLENBQUEsQ0FBQUEsQ0FBQSxDQUFBLEVBQUEsQ0FBQSxLQUFBQSxDQUFBLENBQUEsTUFBQSxLQUFBLENBQUEsR0FBQTZXLENBQUFBLENBQUEsQ0FBQTgxQixDQUFBLENBQUF6bEMsQ0FBQSxDQUFBNmxDLENBQUEsQ0FBQUssQ0FBQSxDQUFBLENBQUEsQ0FBQXAxQixDQUFBLENBQUEsQ0FBQWlsQixDQUFBLENBQUFBLENBQUEsQ0FBQXVPLGVBQUEsQ0FBQSxJQUFBLEdBQUEsS0FBQXBCLFNBQUEsQ0FBQW9CLGVBQUEsQ0FBQWlFLENBQUEsQ0FBQSxVQUFBLE1BQUF6M0IsQ0FBQUEsQ0FBQSxDQUFBQSxDQUFBLENBQUEsR0FBQXhSLENBQUFBLElBQUEsRUFBQSxDQUFBK2hELFdBQUEsR0FBQSxHQUFBLENBQUE3M0IsUUFBQSxDQUFBMVksQ0FBQSxDQUFBLEVBQUEsQ0FBQSxDQUFBaTRCLENBQUEsQ0FBQSxDQUFBaFQsQ0FBQSxDQUFBQSxDQUFBLENBQUEyTSxhQUFBLENBQUEsSUFBQSxHQUFBLEtBQUFRLFNBQUEsQ0FBQVIsYUFBQSxDQUFBeUcsQ0FBQSxDQUFBLENBQUFwVCxDQUFBLENBQUFBLENBQUEsQ0FBQTBNLFFBQUEsQ0FBQSxJQUFBLEdBQUEsS0FBQVMsU0FBQSxDQUFBVCxRQUFBLENBQUExVSxDQUFBLENBQUEsQ0FBQWdJLENBQUEsQ0FBQUEsQ0FBQSxDQUFBeU0sZUFBQSxDQUFBLElBQUEsR0FBQSxLQUFBVSxTQUFBLENBQUFWLGVBQUEsQ0FBQW9ILENBQUEsQ0FBQSxDQUFBN1QsQ0FBQSxDQUFBQSxDQUFBLENBQUF3TSxVQUFBLENBQUEsSUFBQSxHQUFBLEtBQUFXLFNBQUEsQ0FBQVgsVUFBQSxDQUFBc0gsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBN21DLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQWdQLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQWtCLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQWpULENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQThwQyxDQUFBLENBQUEsUUFBQUEsQ0FBQUEsQ0FBQSxDQUFBanJCLENBQUEsQ0FBQSxDQUFBLEdBQUFobUIsQ0FBQUEsQ0FBQSxDQUFBK0osQ0FBQSxDQUFBMUksTUFBQSxDQUFBd1YsQ0FBQSxDQUFBLENBQUEsRUFBQTlNLENBQUEsQ0FBQWlrQyxNQUFBLENBQUFuM0IsQ0FBQSxDQUFBLENBQUEsSUFBQW1QLENBQUEsQ0FBQSxNQUFBaG1CLENBQUFBLENBQUEsRUFBQTZXLENBQUEsRUFBQSxDQUFBN1csQ0FBQSxDQUFBLENBQUEsQ0FBQXBDLENBQUEsQ0FBQSxRQUFBQSxDQUFBQSxDQUFBLENBQUFvb0IsQ0FBQSxDQUFBLENBQUEsR0FBQWpjLENBQUFBLENBQUEsQ0FBQWtuQyxDQUFBLENBQUFqckIsQ0FBQSxDQUFBLENBQUFpWCxDQUFBLENBQUEsTUFBQWpYLENBQUEsQ0FBQSxFQUFBLENBQUEsTUFBQUEsQ0FBQSxDQUFBLEVBQUEsQ0FBQSxNQUFBQSxDQUFBLEVBQUFqYyxDQUFBLENBQUEsQ0FBQSxDQUFBLE1BQUFpYyxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQW5QLENBQUEsQ0FBQSxNQUFBbVAsQ0FBQSxDQUFBaVgsQ0FBQSxDQUFBLENBQUEsQ0FBQTBQLENBQUEsQ0FBQTlrQyxNQUFBLENBQUEsUUFBQWdQLENBQUEsQ0FBQSxHQUFBLENBQUFvbUIsQ0FBQSxDQUFBLEdBQUEsQ0FBQSxDQUFBLzFCLENBQUEsQ0FBQWxILENBQUEsQ0FBQXM1QyxTQUFBLENBQUFsTSxDQUFBLEVBQUFoakMsS0FBQSxDQUFBdWlDLENBQUEsQ0FBQSxDQUFBLEdBQUEsQ0FBQXpsQyxDQUFBLENBQUEsS0FBQSw4QkFBQWttQyxDQUFBLENBQUEsTUFBQUEsQ0FBQUEsQ0FBQSxFQUFBbG1DLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQTdGLE1BQUEsQ0FBQXF2QixRQUFBLENBQUF4cEIsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLEVBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQWlxQyxDQUFBLENBQUEsUUFBQUEsQ0FBQUEsQ0FBQSxDQUFBcG5DLENBQUEsQ0FBQWt6QixDQUFBLENBQUFwbUIsQ0FBQSxDQUFBLENBQUEsR0FBQTgxQixDQUFBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUF6bEMsQ0FBQSxDQUFBOGUsQ0FBQSxDQUFBaGtCLEdBQUEsQ0FBQWl2QyxDQUFBLENBQUFsbkMsQ0FBQSxDQUFBLENBQUE4TSxDQUFBLENBQUFvbUIsQ0FBQSxDQUFBLFNBQUFqWCxDQUFBLENBQUFqYyxDQUFBLENBQUEsQ0FBQSxNQUFBLENBQUEsQ0FBQUEsQ0FBQSxDQUFBaWMsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLEVBQUFuakIsSUFBQSxDQUFBLFNBQUFtakIsQ0FBQSxDQUFBamMsQ0FBQSxDQUFBLENBQUEsTUFBQSxFQUFBaWMsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBM2tCLE1BQUEsQ0FBQTBJLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQTFJLE1BQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLEdBQUEya0IsQ0FBQSxDQUFBbGtCLElBQUEsQ0FBQW9GLENBQUEsQ0FBQSxTQUFBOGUsQ0FBQSxDQUFBamMsQ0FBQSxDQUFBLENBQUEsR0FBQWt6QixDQUFBQSxDQUFBLENBQUFsekIsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLE1BQUEvSixDQUFBQSxDQUFBLENBQUE4b0QsTUFBQSxDQUFBMWIsQ0FBQSxDQUFBblEsQ0FBQSxDQUFBNTdCLE1BQUEsRUFBQWtFLFdBQUEsS0FBQTAzQixDQUFBLENBQUExM0IsV0FBQSxFQUFBLEVBQUFvbkMsQ0FBQSxDQUFBNWlDLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQXFqQyxDQUFBLEVBQUFuUSxDQUFBLENBQUE1N0IsTUFBQSxDQUFBLENBQUEsQ0FBQSxFQUFBLElBQUEsRUFBQSxDQUFBLENBQUEsRUFBQSxDQUFBLENBQUEsR0FBQXNyQyxDQUFBLENBQUEsTUFBQUEsQ0FBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxLQUFBLDRCQUFBUyxDQUFBLENBQUEsQ0FBQSxDQUFBaUUsQ0FBQSxDQUFBLFFBQUFBLENBQUFBLENBQUEsRUFBQSxDQUFBLEdBQUFyeEMsQ0FBQSxDQUFBZ3VDLE1BQUEsQ0FBQVosQ0FBQSxJQUFBcmpDLENBQUEsQ0FBQWlrQyxNQUFBLENBQUFuM0IsQ0FBQSxDQUFBLENBQUEsS0FBQSxrQ0FBQXUyQixDQUFBLENBQUFBLENBQUEsR0FBQSxDQUFBLENBQUEsSUFBQXYyQixDQUFBLENBQUEsQ0FBQSxDQUFBOU0sQ0FBQSxDQUFBMUksTUFBQSxDQUFBd1YsQ0FBQSxDQUFBQSxDQUFBLEVBQUEsRUFBQSxHQUFBMVAsQ0FBQSxDQUFBLE1BQUE0QyxDQUFBLENBQUFpa0MsTUFBQSxDQUFBbjNCLENBQUEsQ0FBQSxFQUFBbzZCLENBQUEsQ0FBQSxHQUFBLENBQUEsQ0FBQUksQ0FBQSxFQUFBLENBQUFscUMsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLElBQUEsUUFBQTRDLENBQUEsQ0FBQWlrQyxNQUFBLENBQUFuM0IsQ0FBQSxDQUFBLEVBQUEsSUFBQSxHQUFBLENBQUFxQyxDQUFBLENBQUF0YixDQUFBLENBQUEsR0FBQSxDQUFBLENBQUEsTUFBQSxJQUFBLEdBQUEsQ0FBQXV6QyxDQUFBLENBQUEsR0FBQSxDQUFBbEIsQ0FBQSxDQUFBSSxDQUFBLENBQUEsQ0FBQSxNQUFBLElBQUEsR0FBQSxDQUFBajJCLENBQUEsQ0FBQXhjLENBQUEsQ0FBQSxHQUFBLENBQUEsQ0FBQSxNQUFBLElBQUEsR0FBQSxDQUFBc00sQ0FBQSxDQUFBdE0sQ0FBQSxDQUFBLEdBQUEsQ0FBQSxDQUFBLE1BQUEsSUFBQSxHQUFBLENBQUFzTSxDQUFBLENBQUFpbkMsQ0FBQSxDQUFBLEdBQUEsQ0FBQWxjLENBQUEsQ0FBQTZiLENBQUEsQ0FBQSxDQUFBLE1BQUEsSUFBQSxHQUFBLENBQUFDLENBQUEsQ0FBQW56QyxDQUFBLENBQUEsR0FBQSxDQUFBLENBQUEsTUFBQSxJQUFBLEdBQUEsQ0FBQW12QyxDQUFBLENBQUEsR0FBQXZtQyxDQUFBQSxJQUFBLENBQUE1SSxDQUFBLENBQUEsR0FBQSxDQUFBLENBQUEsQ0FBQW16QyxDQUFBLENBQUFoRSxDQUFBLENBQUF3YixXQUFBLEVBQUEsQ0FBQXIrQyxDQUFBLENBQUE2aUMsQ0FBQSxDQUFBdWIsUUFBQSxHQUFBLENBQUEsQ0FBQXB2QyxDQUFBLENBQUE2ekIsQ0FBQSxDQUFBc2IsT0FBQSxFQUFBLENBQUEsTUFBQSxJQUFBLEdBQUEsQ0FBQXRiLENBQUEsQ0FBQSxHQUFBdm1DLENBQUFBLElBQUEsQ0FBQSxDQUFBNUksQ0FBQSxDQUFBLEdBQUEsQ0FBQSxDQUFBLEtBQUFtckQsWUFBQSxFQUFBLEdBQUEsQ0FBQSxDQUFBaFksQ0FBQSxDQUFBaEUsQ0FBQSxDQUFBd2IsV0FBQSxFQUFBLENBQUFyK0MsQ0FBQSxDQUFBNmlDLENBQUEsQ0FBQXViLFFBQUEsR0FBQSxDQUFBLENBQUFwdkMsQ0FBQSxDQUFBNnpCLENBQUEsQ0FBQXNiLE9BQUEsRUFBQSxDQUFBLE1BQUEsSUFBQSxHQUFBLENBQUFwWCxDQUFBLENBQUEsR0FBQSxDQUFBLENBQUFJLENBQUEsRUFBQSxDQUFBbHFDLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxNQUFBLFFBQUFrcUMsQ0FBQSxHQUFBLENBQUEsQ0FBQSxHQUFBcnhDLENBQUEsQ0FBQXFCLE1BQUEsQ0FBQStyQyxDQUFBLEdBQUFsbUMsQ0FBQSxDQUFBbEgsQ0FBQSxDQUFBOG9ELE1BQUEsQ0FBQTFiLENBQUEsQ0FBQSxDQUFBLENBQUEsT0FBQXJpQyxJQUFBLENBQUE3RCxDQUFBLENBQUEsQ0FBQSxDQUFBLEtBQUEsNENBQUFBLENBQUEsQ0FBQSxHQUFBLENBQUEsQ0FBQSxHQUFBNnBDLENBQUEsQ0FBQUEsQ0FBQSxDQUFBLEdBQUF2cUMsQ0FBQUEsSUFBQSxFQUFBLENBQUEraEQsV0FBQSxFQUFBLENBQUEsSUFBQXhYLENBQUEsR0FBQUEsQ0FBQSxFQUFBLEdBQUF2cUMsQ0FBQUEsSUFBQSxFQUFBLENBQUEraEQsV0FBQSxHQUFBLEdBQUEvaEQsQ0FBQUEsSUFBQSxFQUFBLENBQUEraEQsV0FBQSxHQUFBLEdBQUEsRUFBQTlZLENBQUEsRUFBQXNCLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxHQUFBLENBQUEsQ0FBQSxDQUFBMzJCLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxJQUFBbFEsQ0FBQSxDQUFBLENBQUEsQ0FBQWdQLENBQUEsQ0FBQWtCLENBQUEsR0FBQSxDQUFBLEdBQUF1eUIsQ0FBQSxDQUFBLEtBQUFxYyxlQUFBLENBQUFqWSxDQUFBLENBQUE3bUMsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBeWlDLENBQUEsRUFBQXp6QixDQUFBLENBQUEsTUFBQWhQLENBQUEsR0FBQWdQLENBQUEsRUFBQXl6QixDQUFBLENBQUEsSUFBQUksQ0FBQSxDQUFBLEtBQUFrYyxxQkFBQSxDQUFBLEdBQUF6aUQsQ0FBQUEsSUFBQSxDQUFBdXFDLENBQUEsQ0FBQTdtQyxDQUFBLENBQUEsQ0FBQSxDQUFBZ1AsQ0FBQSxDQUFBLENBQUEsQ0FBQTZ6QixDQUFBLENBQUF3YixXQUFBLEtBQUF4WCxDQUFBLEVBQUFoRSxDQUFBLENBQUF1YixRQUFBLEdBQUEsQ0FBQSxHQUFBcCtDLENBQUEsRUFBQTZpQyxDQUFBLENBQUFzYixPQUFBLEtBQUFudkMsQ0FBQSxDQUFBLEtBQUEsY0FBQSxDQUFBLE1BQUE2ekIsQ0FBQUEsQ0FBQSxDQUFBLENBREEsQ0FDQW1jLElBQUEsQ0FBQSxVQURBLENBQ0FDLE1BQUEsQ0FBQSxZQURBLENBQ0FDLFFBQUEsQ0FBQSxVQURBLENBQ0FDLE9BQUEsQ0FBQSxVQURBLENBQ0FDLE9BQUEsQ0FBQSxZQURBLENBQ0FDLFFBQUEsQ0FBQSxVQURBLENBQ0FDLFFBQUEsQ0FBQSxXQURBLENBQ0FDLFFBQUEsQ0FBQSxXQURBLENBQ0FDLEdBQUEsQ0FBQSxVQURBLENBQ0FDLEtBQUEsQ0FBQSxHQURBLENBQ0FDLFNBQUEsQ0FBQSxHQURBLENBQ0FDLEdBQUEsQ0FBQSxVQURBLENBQ0FkLFlBQUEsQ0FBQSxJQUFBLEVBQUEsQ0FBQSxFQUFBLENBQUEsRUFBQSxFQUFBLE9BQUFubEQsSUFBQSxDQUFBK3VDLEtBQUEsQ0FBQSxLQUFBLENBQUEsQ0FBQS91QyxJQUFBLENBQUErdUMsS0FBQSxDQUFBLElBQUEsQ0FBQSxDQUFBL3VDLElBQUEsQ0FBQSt1QyxLQUFBLENBQUEsS0FBQSxDQUFBLENBREEsQ0FDQWdXLFVBQUEsQ0FBQSxvQkFBQTNpQyxDQUFBLENBQUFqYyxDQUFBLENBQUEvSixDQUFBLENBQUEsQ0FBQSxHQUFBLENBQUErSixDQUFBLENBQUEsTUFBQSxFQUFBLENBQUEsR0FBQWt6QixDQUFBQSxDQUFBLENBQUFwbUIsQ0FBQSxDQUFBLENBQUE3VyxDQUFBLENBQUFBLENBQUEsQ0FBQTRwQyxhQUFBLENBQUEsSUFBQSxHQUFBLEtBQUFRLFNBQUEsQ0FBQVIsYUFBQSxDQUFBK0MsQ0FBQSxDQUFBLENBQUEzc0MsQ0FBQSxDQUFBQSxDQUFBLENBQUEycEMsUUFBQSxDQUFBLElBQUEsR0FBQSxLQUFBUyxTQUFBLENBQUFULFFBQUEsQ0FBQXppQyxDQUFBLENBQUEsQ0FBQWxILENBQUEsQ0FBQUEsQ0FBQSxDQUFBMHBDLGVBQUEsQ0FBQSxJQUFBLEdBQUEsS0FBQVUsU0FBQSxDQUFBVixlQUFBLENBQUFxRCxDQUFBLENBQUEsQ0FBQS9zQyxDQUFBLENBQUFBLENBQUEsQ0FBQXlwQyxVQUFBLENBQUEsSUFBQSxHQUFBLEtBQUFXLFNBQUEsQ0FBQVgsVUFBQSxDQUFBMkQsQ0FBQSxDQUFBLFFBQUFBLENBQUFBLENBQUEsQ0FBQXJqQyxDQUFBLENBQUEsQ0FBQSxHQUFBL0osQ0FBQUEsQ0FBQSxDQUFBZ21CLENBQUEsQ0FBQTNrQixNQUFBLENBQUE0N0IsQ0FBQSxDQUFBLENBQUEsRUFBQWpYLENBQUEsQ0FBQWdvQixNQUFBLENBQUEvUSxDQUFBLENBQUEsQ0FBQSxJQUFBbHpCLENBQUEsQ0FBQSxNQUFBL0osQ0FBQUEsQ0FBQSxFQUFBaTlCLENBQUEsRUFBQSxDQUFBajlCLENBQUEsQ0FBQSxDQUFBLENBQUFnWSxDQUFBLENBQUEsUUFBQUEsQ0FBQUEsQ0FBQSxDQUFBZ08sQ0FBQSxDQUFBamMsQ0FBQSxDQUFBL0osQ0FBQSxDQUFBLENBQUEsR0FBQWk5QixDQUFBQSxDQUFBLENBQUEsR0FBQWx6QixDQUFBLENBQUEsR0FBQXFqQyxDQUFBLENBQUFwbkIsQ0FBQSxDQUFBLENBQUEsS0FBQWhtQixDQUFBLENBQUFpOUIsQ0FBQSxDQUFBNTdCLE1BQUEsR0FBQTQ3QixDQUFBLENBQUEsSUFBQUEsQ0FBQSxDQUFBLENBQUEsTUFBQUEsQ0FBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQXdTLENBQUEsQ0FBQSxRQUFBQSxDQUFBQSxDQUFBLENBQUF6cEIsQ0FBQSxDQUFBamMsQ0FBQSxDQUFBL0osQ0FBQSxDQUFBaTlCLENBQUEsQ0FBQSxDQUFBLE1BQUFtUSxDQUFBQSxDQUFBLENBQUFwbkIsQ0FBQSxDQUFBLENBQUFpWCxDQUFBLENBQUFsekIsQ0FBQSxDQUFBLENBQUEvSixDQUFBLENBQUErSixDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUFrbUMsQ0FBQSxDQUFBLEVBQUEsQ0FBQUksQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLEdBQUF0bUMsQ0FBQSxDQUFBLElBQUFrekIsQ0FBQSxDQUFBLENBQUEsQ0FBQWpYLENBQUEsQ0FBQTNrQixNQUFBLENBQUE0N0IsQ0FBQSxDQUFBQSxDQUFBLEVBQUEsRUFBQSxHQUFBb1QsQ0FBQSxDQUFBLE1BQUFycUIsQ0FBQSxDQUFBZ29CLE1BQUEsQ0FBQS9RLENBQUEsQ0FBQSxFQUFBbVEsQ0FBQSxDQUFBLEdBQUEsQ0FBQSxDQUFBNkMsQ0FBQSxFQUFBanFCLENBQUEsQ0FBQWdvQixNQUFBLENBQUEvUSxDQUFBLENBQUEsQ0FBQW9ULENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxJQUFBLFFBQUFycUIsQ0FBQSxDQUFBZ29CLE1BQUEsQ0FBQS9RLENBQUEsQ0FBQSxFQUFBLElBQUEsR0FBQSxDQUFBZ1QsQ0FBQSxFQUFBajRCLENBQUEsQ0FBQSxHQUFBLENBQUFqTyxDQUFBLENBQUFzK0MsT0FBQSxFQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsTUFBQSxJQUFBLEdBQUEsQ0FBQXBZLENBQUEsRUFBQVIsQ0FBQSxDQUFBLEdBQUEsQ0FBQTFsQyxDQUFBLENBQUF3N0MsTUFBQSxFQUFBLENBQUExdUMsQ0FBQSxDQUFBODFCLENBQUEsQ0FBQSxDQUFBLE1BQUEsSUFBQSxHQUFBLENBQUFzRCxDQUFBLEVBQUFqNEIsQ0FBQSxDQUFBLEdBQUEsQ0FBQXBVLElBQUEsQ0FBQStyQixLQUFBLENBQUEsQ0FBQSxHQUFBbnBCLENBQUFBLElBQUEsQ0FBQXVELENBQUEsQ0FBQXcrQyxXQUFBLEVBQUEsQ0FBQXgrQyxDQUFBLENBQUF1K0MsUUFBQSxFQUFBLENBQUF2K0MsQ0FBQSxDQUFBcytDLE9BQUEsRUFBQSxFQUFBUSxPQUFBLEdBQUEsR0FBQXJpRCxDQUFBQSxJQUFBLENBQUF1RCxDQUFBLENBQUF3K0MsV0FBQSxFQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsRUFBQU0sT0FBQSxFQUFBLEVBQUEsS0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsTUFBQSxJQUFBLEdBQUEsQ0FBQTVZLENBQUEsRUFBQWo0QixDQUFBLENBQUEsR0FBQSxDQUFBak8sQ0FBQSxDQUFBdStDLFFBQUEsR0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsTUFBQSxJQUFBLEdBQUEsQ0FBQXJZLENBQUEsRUFBQVIsQ0FBQSxDQUFBLEdBQUEsQ0FBQTFsQyxDQUFBLENBQUF1K0MsUUFBQSxFQUFBLENBQUFwaEQsQ0FBQSxDQUFBNmxDLENBQUEsQ0FBQSxDQUFBLE1BQUEsSUFBQSxHQUFBLENBQUFrRCxDQUFBLEVBQUE3QyxDQUFBLENBQUEsR0FBQSxDQUFBLENBQUFyakMsQ0FBQSxDQUFBdytDLFdBQUEsRUFBQSxDQUFBLENBQUEsR0FBQXgrQyxDQUFBLENBQUF3K0MsV0FBQSxHQUFBLEdBQUEsQ0FBQSxHQUFBLENBQUEsRUFBQSxFQUFBeCtDLENBQUEsQ0FBQXcrQyxXQUFBLEdBQUEsR0FBQSxDQUFBLE1BQUEsSUFBQSxHQUFBLENBQUF0WSxDQUFBLEVBQUFsbUMsQ0FBQSxDQUFBOCtDLE9BQUEsRUFBQSxDQUFBLE1BQUEsSUFBQSxHQUFBLENBQUE1WSxDQUFBLEVBQUEsSUFBQWxtQyxDQUFBLENBQUE4K0MsT0FBQSxFQUFBLENBQUEsS0FBQUUsWUFBQSxDQUFBLE1BQUEsSUFBQSxHQUFBLENBQUEzYixDQUFBLENBQUEsR0FBQSxDQUFBLENBQUE2QyxDQUFBLEVBQUEsR0FBQSxDQUFBSSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsTUFBQSxRQUFBSixDQUFBLEVBQUFqcUIsQ0FBQSxDQUFBZ29CLE1BQUEsQ0FBQS9RLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxNQUFBZ1QsQ0FBQUEsQ0FBQSxDQUFBLENBREEsQ0FDQWtYLGNBQUEsQ0FBQSx3QkFBQW5oQyxDQUFBLENBQUEsQ0FBQSxHQUFBamMsQ0FBQUEsQ0FBQSxDQUFBL0osQ0FBQSxDQUFBLEVBQUEsQ0FBQWk5QixDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUFwbUIsQ0FBQSxDQUFBLFFBQUFBLENBQUFBLENBQUEsQ0FBQTdXLENBQUEsQ0FBQSxDQUFBLEdBQUFpOUIsQ0FBQUEsQ0FBQSxDQUFBalgsQ0FBQSxDQUFBM2tCLE1BQUEsQ0FBQTBJLENBQUEsQ0FBQSxDQUFBLEVBQUFpYyxDQUFBLENBQUFnb0IsTUFBQSxDQUFBamtDLENBQUEsQ0FBQSxDQUFBLElBQUEvSixDQUFBLENBQUEsTUFBQWk5QixDQUFBQSxDQUFBLEVBQUFsekIsQ0FBQSxFQUFBLENBQUFrekIsQ0FBQSxDQUFBLENBQUEsQ0FBQSxJQUFBbHpCLENBQUEsQ0FBQSxDQUFBLENBQUFpYyxDQUFBLENBQUEza0IsTUFBQSxDQUFBMEksQ0FBQSxDQUFBQSxDQUFBLEVBQUEsRUFBQSxHQUFBa3pCLENBQUEsQ0FBQSxNQUFBalgsQ0FBQSxDQUFBZ29CLE1BQUEsQ0FBQWprQyxDQUFBLENBQUEsRUFBQThNLENBQUEsQ0FBQSxHQUFBLENBQUEsQ0FBQTdXLENBQUEsRUFBQWdtQixDQUFBLENBQUFnb0IsTUFBQSxDQUFBamtDLENBQUEsQ0FBQSxDQUFBa3pCLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxJQUFBLFFBQUFqWCxDQUFBLENBQUFnb0IsTUFBQSxDQUFBamtDLENBQUEsQ0FBQSxFQUFBLElBQUEsR0FBQSxDQUFBLElBQUEsR0FBQSxDQUFBLElBQUEsR0FBQSxDQUFBLElBQUEsR0FBQSxDQUFBL0osQ0FBQSxFQUFBLFlBQUEsQ0FBQSxNQUFBLElBQUEsR0FBQSxDQUFBLElBQUEsR0FBQSxDQUFBLE1BQUEsS0FBQSxDQUFBLElBQUEsR0FBQSxDQUFBNlcsQ0FBQSxDQUFBLEdBQUEsQ0FBQSxDQUFBN1csQ0FBQSxFQUFBLEdBQUEsQ0FBQWk5QixDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsTUFBQSxRQUFBajlCLENBQUEsRUFBQWdtQixDQUFBLENBQUFnb0IsTUFBQSxDQUFBamtDLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxNQUFBL0osQ0FBQUEsQ0FBQSxDQUFBLENBREEsQ0FDQWdsRCxJQUFBLENBQUEsY0FBQWgvQixDQUFBLENBQUFqYyxDQUFBLENBQUEsQ0FBQSxNQUFBLEtBQUEsRUFBQSxHQUFBaWMsQ0FBQSxDQUFBNGEsUUFBQSxDQUFBNzJCLENBQUEsQ0FBQSxDQUFBaWMsQ0FBQSxDQUFBNGEsUUFBQSxDQUFBNzJCLENBQUEsQ0FBQSxDQUFBLEtBQUFxZ0MsU0FBQSxDQUFBcmdDLENBQUEsQ0FBQSxDQUFBLENBREEsQ0FDQTg4QyxpQkFBQSxDQUFBLDJCQUFBN2dDLENBQUEsQ0FBQWpjLENBQUEsQ0FBQSxDQUFBLEdBQUFpYyxDQUFBLENBQUE5WCxLQUFBLENBQUFqTyxHQUFBLEtBQUErbEIsQ0FBQSxDQUFBb2hDLE9BQUEsQ0FBQSxDQUFBLEdBQUFwbkQsQ0FBQUEsQ0FBQSxDQUFBLEtBQUFnbEQsSUFBQSxDQUFBaC9CLENBQUEsQ0FBQSxZQUFBLENBQUEsQ0FBQWlYLENBQUEsQ0FBQWpYLENBQUEsQ0FBQW9oQyxPQUFBLENBQUFwaEMsQ0FBQSxDQUFBOVgsS0FBQSxDQUFBOFgsQ0FBQSxDQUFBOVgsS0FBQSxDQUFBak8sR0FBQSxFQUFBLENBQUEsSUFBQSxDQUFBNFcsQ0FBQSxDQUFBLEtBQUE2dUMsZUFBQSxDQUFBMS9CLENBQUEsQ0FBQSxDQUFBMm1CLENBQUEsQ0FBQTkxQixDQUFBLENBQUEzUCxDQUFBLENBQUEsS0FBQW9nRCxnQkFBQSxDQUFBdGhDLENBQUEsQ0FBQSxDQUFBLEdBQUEsQ0FBQTJtQixDQUFBLENBQUEsS0FBQTBhLFNBQUEsQ0FBQXJuRCxDQUFBLENBQUFpOUIsQ0FBQSxDQUFBLzFCLENBQUEsR0FBQTJQLENBQUEsQ0FBQSxPQUFBazJCLENBQUEsQ0FBQSxDQUFBOVAsQ0FBQSxDQUFBbHpCLENBQUEsQ0FBQSxFQUFBLENBQUFrekIsQ0FBQSxDQUFBLENBQUFqWCxDQUFBLENBQUFxK0IsV0FBQSxDQUFBMVgsQ0FBQSxDQUFBMGIsT0FBQSxFQUFBLENBQUFyaUMsQ0FBQSxDQUFBdytCLFNBQUEsQ0FBQXgrQixDQUFBLENBQUFzK0IsYUFBQSxDQUFBM1gsQ0FBQSxDQUFBMmIsUUFBQSxFQUFBLENBQUF0aUMsQ0FBQSxDQUFBeStCLFFBQUEsQ0FBQXorQixDQUFBLENBQUF1K0IsWUFBQSxDQUFBNVgsQ0FBQSxDQUFBNGIsV0FBQSxFQUFBLENBQUF2aUMsQ0FBQSxDQUFBa2lDLFVBQUEsQ0FBQWpyQixDQUFBLENBQUEwUCxDQUFBLENBQUEwYixPQUFBLEVBQUEsQ0FBQSxDQUFBLENBQUFyaUMsQ0FBQSxDQUFBbWlDLFlBQUEsQ0FBQWxyQixDQUFBLENBQUEwUCxDQUFBLENBQUEyYixRQUFBLEVBQUEsQ0FBQSxDQUFBLENBQUF0aUMsQ0FBQSxDQUFBb2lDLFdBQUEsQ0FBQW5yQixDQUFBLENBQUEwUCxDQUFBLENBQUE0YixXQUFBLEVBQUEsQ0FBQSxDQUFBLENBQUEsS0FBQU4sZUFBQSxDQUFBamlDLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FEQSxDQUNBMC9CLGVBQUEsQ0FBQSx5QkFBQTEvQixDQUFBLENBQUEsQ0FBQSxNQUFBLE1BQUE4akMsZUFBQSxDQUFBOWpDLENBQUEsQ0FBQSxLQUFBK2pDLGNBQUEsQ0FBQS9qQyxDQUFBLENBQUEsS0FBQWcvQixJQUFBLENBQUFoL0IsQ0FBQSxDQUFBLGFBQUEsQ0FBQSxDQUFBLEdBQUF4ZixDQUFBQSxJQUFBLEVBQUEsQ0FBQSxDQUFBLENBQUEsQ0FEQSxDQUNBdWpELGNBQUEsQ0FBQSx3QkFBQWhnRCxDQUFBLENBQUEvSixDQUFBLENBQUFpOUIsQ0FBQSxDQUFBLENBQUEsR0FBQXBtQixDQUFBQSxDQUFBLENBQUEsUUFBQUEsQ0FBQUEsQ0FBQSxDQUFBbVAsQ0FBQSxDQUFBLENBQUEsR0FBQWpjLENBQUFBLENBQUEsQ0FBQSxHQUFBdkQsQ0FBQUEsSUFBQSxFQUFBLENBQUEsTUFBQXVELENBQUFBLENBQUEsQ0FBQXU3QyxPQUFBLENBQUF2N0MsQ0FBQSxDQUFBcytDLE9BQUEsR0FBQXJpQyxDQUFBLEVBQUFqYyxDQUFBLENBQUEsQ0FBQSxDQUFBNGlDLENBQUEsQ0FBQSxXQUFBM3NDLENBQUEsQ0FBQSxDQUFBLEdBQUEsQ0FBQSxNQUFBZ21CLENBQUFBLENBQUEsQ0FBQTRtQixVQUFBLENBQUF5YSxTQUFBLENBQUFyaEMsQ0FBQSxDQUFBNG1CLFVBQUEsQ0FBQW9ZLElBQUEsQ0FBQWo3QyxDQUFBLENBQUEsWUFBQSxDQUFBLENBQUEvSixDQUFBLENBQUFnbUIsQ0FBQSxDQUFBNG1CLFVBQUEsQ0FBQTBhLGdCQUFBLENBQUF2OUMsQ0FBQSxDQUFBLENBQUEsQ0FBQSxPQUFBa3pCLENBQUEsQ0FBQSxDQUFBLEtBQUEsR0FBQXBtQixDQUFBQSxDQUFBLENBQUEsQ0FBQTdXLENBQUEsQ0FBQXVGLFdBQUEsR0FBQTZFLEtBQUEsQ0FBQSxJQUFBLEVBQUE0YixDQUFBLENBQUE0bUIsVUFBQSxDQUFBa2EsUUFBQSxDQUFBLzhDLENBQUEsQ0FBQSxDQUFBLElBQUEsR0FBQSxHQUFBdkQsQ0FBQUEsSUFBQSxFQUFBLENBQUFtbUMsQ0FBQSxDQUFBOTFCLENBQUEsQ0FBQTB4QyxXQUFBLEVBQUEsQ0FBQXJoRCxDQUFBLENBQUEyUCxDQUFBLENBQUF5eEMsUUFBQSxFQUFBLENBQUF2YixDQUFBLENBQUFsMkIsQ0FBQSxDQUFBd3hDLE9BQUEsRUFBQSxDQUFBamIsQ0FBQSxDQUFBLHNDQUFBLENBQUFwMUIsQ0FBQSxDQUFBbzFCLENBQUEsQ0FBQTNpQyxJQUFBLENBQUF6SyxDQUFBLENBQUEsQ0FBQWdZLENBQUEsRUFBQSxDQUFBLE9BQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsRUFBQSxHQUFBLEVBQUEsSUFBQSxHQUFBLENBQUEsSUFBQSxHQUFBLENBQUErMEIsQ0FBQSxFQUFBcmMsUUFBQSxDQUFBMVksQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLEVBQUEsQ0FBQSxDQUFBLE1BQUEsSUFBQSxHQUFBLENBQUEsSUFBQSxHQUFBLENBQUErMEIsQ0FBQSxFQUFBLEVBQUFyYyxRQUFBLENBQUExWSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsRUFBQSxDQUFBLENBQUEsTUFBQSxJQUFBLEdBQUEsQ0FBQSxJQUFBLEdBQUEsQ0FBQTlRLENBQUEsRUFBQXdwQixRQUFBLENBQUExWSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsRUFBQSxDQUFBLENBQUErMEIsQ0FBQSxDQUFBbnBDLElBQUEsQ0FBQXd3QyxHQUFBLENBQUFySCxDQUFBLENBQUEvbUIsQ0FBQSxDQUFBNG1CLFVBQUEsQ0FBQW9jLGVBQUEsQ0FBQXJjLENBQUEsQ0FBQXpsQyxDQUFBLENBQUEsQ0FBQSxDQUFBLE1BQUEsSUFBQSxHQUFBLENBQUEsSUFBQSxHQUFBLENBQUF5bEMsQ0FBQSxFQUFBamMsUUFBQSxDQUFBMVksQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLEVBQUEsQ0FBQSxDQUFBKzBCLENBQUEsQ0FBQW5wQyxJQUFBLENBQUF3d0MsR0FBQSxDQUFBckgsQ0FBQSxDQUFBL21CLENBQUEsQ0FBQTRtQixVQUFBLENBQUFvYyxlQUFBLENBQUFyYyxDQUFBLENBQUF6bEMsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBOFEsQ0FBQSxDQUFBbzFCLENBQUEsQ0FBQTNpQyxJQUFBLENBQUF6SyxDQUFBLENBQUEsQ0FBQSxPQUFBLElBQUF3RyxDQUFBQSxJQUFBLENBQUFtbUMsQ0FBQSxDQUFBemxDLENBQUEsQ0FBQTZsQyxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUE3bEMsQ0FBQSxDQUFBLE1BQUFsSCxDQUFBLEVBQUEsS0FBQUEsQ0FBQSxDQUFBaTlCLENBQUEsQ0FBQSxVQUFBLE1BQUFqOUIsQ0FBQUEsQ0FBQSxDQUFBMnNDLENBQUEsQ0FBQTNzQyxDQUFBLENBQUEsQ0FBQSxVQUFBLE1BQUFBLENBQUFBLENBQUEsQ0FBQThuQyxLQUFBLENBQUE5bkMsQ0FBQSxDQUFBLENBQUFpOUIsQ0FBQSxDQUFBcG1CLENBQUEsQ0FBQTdXLENBQUEsQ0FBQSxDQUFBLEdBQUF3RyxDQUFBQSxJQUFBLENBQUF4RyxDQUFBLENBQUE2b0QsT0FBQSxFQUFBLENBQUEsQ0FBQSxNQUFBM2hELENBQUFBLENBQUEsQ0FBQUEsQ0FBQSxFQUFBLGdCQUFBLEdBQUFBLENBQUEsQ0FBQSsxQixDQUFBLENBQUEvMUIsQ0FBQSxDQUFBQSxDQUFBLEdBQUFBLENBQUEsQ0FBQThpRCxRQUFBLENBQUEsQ0FBQSxFQUFBOWlELENBQUEsQ0FBQStpRCxVQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEvaUQsQ0FBQSxDQUFBZ2pELFVBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQWhqRCxDQUFBLENBQUFpakQsZUFBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsS0FBQWxCLHFCQUFBLENBQUEvaEQsQ0FBQSxDQUFBLENBQUEsQ0FEQSxDQUNBK2hELHFCQUFBLENBQUEsK0JBQUFqakMsQ0FBQSxDQUFBLENBQUEsTUFBQUEsQ0FBQUEsQ0FBQSxFQUFBQSxDQUFBLENBQUFna0MsUUFBQSxDQUFBaGtDLENBQUEsQ0FBQW9rQyxRQUFBLEdBQUEsRUFBQSxDQUFBcGtDLENBQUEsQ0FBQW9rQyxRQUFBLEdBQUEsQ0FBQSxDQUFBLENBQUEsRUFBQXBrQyxDQUFBLEVBQUEsSUFBQSxDQUFBLENBREEsQ0FDQXkvQixRQUFBLENBQUEsa0JBQUF6L0IsQ0FBQSxDQUFBamMsQ0FBQSxDQUFBL0osQ0FBQSxDQUFBLENBQUEsR0FBQWk5QixDQUFBQSxDQUFBLENBQUEsQ0FBQWx6QixDQUFBLENBQUE4TSxDQUFBLENBQUFtUCxDQUFBLENBQUFzK0IsYUFBQSxDQUFBM1gsQ0FBQSxDQUFBM21CLENBQUEsQ0FBQXUrQixZQUFBLENBQUFyOUMsQ0FBQSxDQUFBLEtBQUE0aUQsZUFBQSxDQUFBOWpDLENBQUEsQ0FBQSxLQUFBK2pDLGNBQUEsQ0FBQS9qQyxDQUFBLENBQUFqYyxDQUFBLENBQUEsR0FBQXZELENBQUFBLElBQUEsRUFBQSxDQUFBLENBQUEsQ0FBQXdmLENBQUEsQ0FBQXErQixXQUFBLENBQUFyK0IsQ0FBQSxDQUFBa2lDLFVBQUEsQ0FBQWhoRCxDQUFBLENBQUFtaEQsT0FBQSxFQUFBLENBQUFyaUMsQ0FBQSxDQUFBdytCLFNBQUEsQ0FBQXgrQixDQUFBLENBQUFzK0IsYUFBQSxDQUFBdCtCLENBQUEsQ0FBQW1pQyxZQUFBLENBQUFqaEQsQ0FBQSxDQUFBb2hELFFBQUEsRUFBQSxDQUFBdGlDLENBQUEsQ0FBQXkrQixRQUFBLENBQUF6K0IsQ0FBQSxDQUFBdStCLFlBQUEsQ0FBQXYrQixDQUFBLENBQUFvaUMsV0FBQSxDQUFBbGhELENBQUEsQ0FBQXFoRCxXQUFBLEVBQUEsQ0FBQTF4QyxDQUFBLEdBQUFtUCxDQUFBLENBQUFzK0IsYUFBQSxFQUFBM1gsQ0FBQSxHQUFBM21CLENBQUEsQ0FBQXUrQixZQUFBLEVBQUF2a0QsQ0FBQSxFQUFBLEtBQUF3b0QsYUFBQSxDQUFBeGlDLENBQUEsQ0FBQSxDQUFBLEtBQUFpaUMsZUFBQSxDQUFBamlDLENBQUEsQ0FBQSxDQUFBQSxDQUFBLENBQUE5WCxLQUFBLEVBQUE4WCxDQUFBLENBQUE5WCxLQUFBLENBQUFqTyxHQUFBLENBQUFnOUIsQ0FBQSxDQUFBLEVBQUEsQ0FBQSxLQUFBdW9CLFdBQUEsQ0FBQXgvQixDQUFBLENBQUEsQ0FBQSxDQUFBLENBREEsQ0FDQThnQyxRQUFBLENBQUEsa0JBQUE5Z0MsQ0FBQSxDQUFBLENBQUEsR0FBQWpjLENBQUFBLENBQUEsQ0FBQSxDQUFBaWMsQ0FBQSxDQUFBb2lDLFdBQUEsRUFBQXBpQyxDQUFBLENBQUE5WCxLQUFBLEVBQUEsS0FBQThYLENBQUEsQ0FBQTlYLEtBQUEsQ0FBQWpPLEdBQUEsRUFBQSxDQUFBLElBQUEsQ0FBQSxLQUFBZ3BELHFCQUFBLENBQUEsR0FBQXppRCxDQUFBQSxJQUFBLENBQUF3ZixDQUFBLENBQUFvaUMsV0FBQSxDQUFBcGlDLENBQUEsQ0FBQW1pQyxZQUFBLENBQUFuaUMsQ0FBQSxDQUFBa2lDLFVBQUEsQ0FBQSxDQUFBLENBQUEsTUFBQW4rQyxDQUFBQSxDQUFBLENBQUEsQ0FEQSxDQUNBNDlDLGVBQUEsQ0FBQSx5QkFBQTU5QyxDQUFBLENBQUEsQ0FBQSxHQUFBL0osQ0FBQUEsQ0FBQSxDQUFBLEtBQUFnbEQsSUFBQSxDQUFBajdDLENBQUEsQ0FBQSxZQUFBLENBQUEsQ0FBQWt6QixDQUFBLENBQUEsSUFBQWx6QixDQUFBLENBQUFZLEVBQUEsQ0FBQTdHLE9BQUEsQ0FBQSxPQUFBLENBQUEsSUFBQSxDQUFBLENBQUFpRyxDQUFBLENBQUEyaUMsS0FBQSxDQUFBNStCLElBQUEsQ0FBQSxnQkFBQSxFQUFBOUwsR0FBQSxDQUFBLFVBQUEsQ0FBQSxHQUFBK0gsQ0FBQUEsQ0FBQSxDQUFBLENBQUE4TixJQUFBLENBQUEsZUFBQSxDQUFBbU8sQ0FBQSxDQUFBNG1CLFVBQUEsQ0FBQW9hLFdBQUEsQ0FBQS9wQixDQUFBLENBQUEsQ0FBQWo5QixDQUFBLENBQUEsR0FBQSxFQUFBLENBQUEsQ0FBQTZKLElBQUEsQ0FBQSxlQUFBLENBQUFtYyxDQUFBLENBQUE0bUIsVUFBQSxDQUFBb2EsV0FBQSxDQUFBL3BCLENBQUEsQ0FBQSxDQUFBajlCLENBQUEsQ0FBQSxHQUFBLEVBQUEsQ0FBQSxDQUFBMmlCLElBQUEsQ0FBQSxlQUFBLENBQUFxRCxDQUFBLENBQUE0bUIsVUFBQSxDQUFBd1ksZUFBQSxHQUFBLENBQUEsQ0FBQWlGLEtBQUEsQ0FBQSxnQkFBQSxDQUFBcmtDLENBQUEsQ0FBQTRtQixVQUFBLENBQUFzYSxVQUFBLENBQUFqcUIsQ0FBQSxFQUFBLENBQUEsQ0FBQXF0QixTQUFBLENBQUEsb0JBQUEsQ0FBQSxNQUFBdGtDLENBQUFBLENBQUEsQ0FBQTRtQixVQUFBLENBQUFtYSxVQUFBLENBQUE5cEIsQ0FBQSxDQUFBLENBQUEsS0FBQTU4QixZQUFBLENBQUEsWUFBQSxDQUFBLENBQUEsQ0FBQSxLQUFBQSxZQUFBLENBQUEsV0FBQSxDQUFBLENBQUEsSUFBQSxFQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQWtxRCxXQUFBLENBQUEsc0JBQUEsQ0FBQSxNQUFBdmtDLENBQUFBLENBQUEsQ0FBQTRtQixVQUFBLENBQUE2YixnQkFBQSxDQUFBeHJCLENBQUEsQ0FBQSxJQUFBLENBQUEsR0FBQSxFQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQXV0QixVQUFBLENBQUEscUJBQUEsQ0FBQSxNQUFBeGtDLENBQUFBLENBQUEsQ0FBQTRtQixVQUFBLENBQUE2YixnQkFBQSxDQUFBeHJCLENBQUEsQ0FBQSxJQUFBLENBQUEsR0FBQSxFQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBalgsQ0FBQSxDQUFBLElBQUEsQ0FBQSxDQUFBVCxFQUFBLENBQUEsS0FBQWxsQixZQUFBLENBQUEsWUFBQSxDQUFBLENBQUEwSixDQUFBLENBQUEsS0FBQTFKLFlBQUEsQ0FBQSxjQUFBLENBQUEsQ0FBQSxFQUFBLENBQUEsRUFBQSxDQURBLENBQ0FxbkQsYUFBQSxDQUFBLHVCQUFBMWhDLENBQUEsQ0FBQSxDQUFBLEdBQUFqYyxDQUFBQSxDQUFBLENBQUEvSixDQUFBLENBQUFpOUIsQ0FBQSxDQUFBcG1CLENBQUEsQ0FBQTgxQixDQUFBLENBQUF6bEMsQ0FBQSxDQUFBNmxDLENBQUEsQ0FBQUssQ0FBQSxDQUFBcDFCLENBQUEsQ0FBQXkzQixDQUFBLENBQUFRLENBQUEsQ0FBQUksQ0FBQSxDQUFBcGIsQ0FBQSxDQUFBNmIsQ0FBQSxDQUFBQyxDQUFBLENBQUE3bUMsQ0FBQSxDQUFBZ1AsQ0FBQSxDQUFBa0IsQ0FBQSxDQUFBalQsQ0FBQSxDQUFBOHBDLENBQUEsQ0FBQXJ6QyxDQUFBLENBQUF1ekMsQ0FBQSxDQUFBRSxDQUFBLENBQUFDLENBQUEsQ0FBQUMsQ0FBQSxDQUFBQyxDQUFBLENBQUFpWixDQUFBLENBQUFDLENBQUEsQ0FBQUMsQ0FBQSxDQUFBQyxDQUFBLENBQUFDLENBQUEsQ0FBQUMsQ0FBQSxDQUFBQyxDQUFBLENBQUFDLENBQUEsQ0FBQUMsQ0FBQSxDQUFBQyxDQUFBLENBQUFDLENBQUEsQ0FBQUMsQ0FBQSxDQUFBQyxDQUFBLENBQUFDLENBQUEsQ0FBQSxHQUFBOWtELENBQUFBLElBQUEsRUFBQSxDQUFBK2tELENBQUEsQ0FBQSxLQUFBdEMscUJBQUEsQ0FBQSxHQUFBemlELENBQUFBLElBQUEsQ0FBQThrRCxDQUFBLENBQUEvQyxXQUFBLEVBQUEsQ0FBQStDLENBQUEsQ0FBQWhELFFBQUEsRUFBQSxDQUFBZ0QsQ0FBQSxDQUFBakQsT0FBQSxFQUFBLENBQUEsQ0FBQSxDQUFBbUQsQ0FBQSxDQUFBLEtBQUF4RyxJQUFBLENBQUFoL0IsQ0FBQSxDQUFBLE9BQUEsQ0FBQSxDQUFBcmpCLENBQUEsQ0FBQSxLQUFBcWlELElBQUEsQ0FBQWgvQixDQUFBLENBQUEsaUJBQUEsQ0FBQSxDQUFBeWxDLENBQUEsQ0FBQSxLQUFBekcsSUFBQSxDQUFBaC9CLENBQUEsQ0FBQSxrQkFBQSxDQUFBLENBQUEwbEMsQ0FBQSxDQUFBLEtBQUExRyxJQUFBLENBQUFoL0IsQ0FBQSxDQUFBLHdCQUFBLENBQUEsQ0FBQTJsQyxDQUFBLENBQUEsS0FBQS9ELGtCQUFBLENBQUE1aEMsQ0FBQSxDQUFBLENBQUE0bEMsQ0FBQSxDQUFBLEtBQUE1RyxJQUFBLENBQUFoL0IsQ0FBQSxDQUFBLGtCQUFBLENBQUEsQ0FBQW9pQixDQUFBLENBQUEsS0FBQTRjLElBQUEsQ0FBQWgvQixDQUFBLENBQUEsWUFBQSxDQUFBLENBQUE2bEMsQ0FBQSxDQUFBLElBQUFGLENBQUEsQ0FBQSxDQUFBLENBQUEsRUFBQSxJQUFBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUFHLENBQUEsQ0FBQSxLQUFBN0MscUJBQUEsQ0FBQWpqQyxDQUFBLENBQUFraUMsVUFBQSxDQUFBLEdBQUExaEQsQ0FBQUEsSUFBQSxDQUFBd2YsQ0FBQSxDQUFBb2lDLFdBQUEsQ0FBQXBpQyxDQUFBLENBQUFtaUMsWUFBQSxDQUFBbmlDLENBQUEsQ0FBQWtpQyxVQUFBLENBQUEsQ0FBQSxHQUFBMWhELENBQUFBLElBQUEsQ0FBQSxJQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUF1bEQsQ0FBQSxDQUFBLEtBQUF0RixjQUFBLENBQUF6Z0MsQ0FBQSxDQUFBLEtBQUEsQ0FBQSxDQUFBZ21DLENBQUEsQ0FBQSxLQUFBdkYsY0FBQSxDQUFBemdDLENBQUEsQ0FBQSxLQUFBLENBQUEsQ0FBQWltQyxDQUFBLENBQUFqbUMsQ0FBQSxDQUFBdytCLFNBQUEsQ0FBQW9ILENBQUEsQ0FBQU0sRUFBQSxDQUFBbG1DLENBQUEsQ0FBQXkrQixRQUFBLENBQUEsR0FBQSxFQUFBd0gsQ0FBQSxHQUFBQSxDQUFBLEVBQUEsRUFBQSxDQUFBQyxFQUFBLEVBQUEsRUFBQUYsQ0FBQSxDQUFBLElBQUFqaUQsQ0FBQSxDQUFBLEtBQUFrL0MscUJBQUEsQ0FBQSxHQUFBemlELENBQUFBLElBQUEsQ0FBQXdsRCxDQUFBLENBQUF6RCxXQUFBLEVBQUEsQ0FBQXlELENBQUEsQ0FBQTFELFFBQUEsR0FBQXFELENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQUssQ0FBQSxDQUFBM0QsT0FBQSxFQUFBLENBQUEsQ0FBQSxDQUFBdCtDLENBQUEsQ0FBQWdpRCxDQUFBLEVBQUFBLENBQUEsQ0FBQWhpRCxDQUFBLENBQUFnaUQsQ0FBQSxDQUFBaGlELENBQUEsQ0FBQSxLQUFBay9DLHFCQUFBLENBQUEsR0FBQXppRCxDQUFBQSxJQUFBLENBQUEwbEQsRUFBQSxDQUFBRCxDQUFBLENBQUEsQ0FBQSxDQUFBLEVBQUFsaUQsQ0FBQSxHQUFBa2lELENBQUEsR0FBQSxFQUFBQSxDQUFBLEdBQUFBLENBQUEsQ0FBQSxFQUFBLENBQUFDLEVBQUEsRUFBQSxDQUFBLENBQUEsQ0FBQSxJQUFBbG1DLENBQUEsQ0FBQXcrQixTQUFBLENBQUF5SCxDQUFBLENBQUFqbUMsQ0FBQSxDQUFBeStCLFFBQUEsQ0FBQXlILEVBQUEsQ0FBQWxzRCxDQUFBLENBQUEsS0FBQWdsRCxJQUFBLENBQUFoL0IsQ0FBQSxDQUFBLFVBQUEsQ0FBQSxDQUFBaG1CLENBQUEsQ0FBQTByRCxDQUFBLENBQUEsS0FBQS9DLFVBQUEsQ0FBQTNvRCxDQUFBLENBQUEsS0FBQWlwRCxxQkFBQSxDQUFBLEdBQUF6aUQsQ0FBQUEsSUFBQSxDQUFBMGxELEVBQUEsQ0FBQUQsQ0FBQSxDQUFBN2pCLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLEtBQUFrZixnQkFBQSxDQUFBdGhDLENBQUEsQ0FBQSxDQUFBLENBQUFobUIsQ0FBQSxDQUFBaTlCLENBQUEsQ0FBQSxLQUFBa3ZCLGVBQUEsQ0FBQW5tQyxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUFrbUMsRUFBQSxDQUFBRCxDQUFBLEVBQUEsNkZBQUFqc0QsQ0FBQSxDQUFBLGlEQUFBLEVBQUF3ckQsQ0FBQSxDQUFBLEdBQUEsQ0FBQSxHQUFBLEVBQUEsSUFBQSxDQUFBeHJELENBQUEsQ0FBQSxhQUFBLENBQUF5ckQsQ0FBQSxDQUFBLEVBQUEsQ0FBQSx3RUFBQXpyRCxDQUFBLENBQUEsaURBQUEsRUFBQXdyRCxDQUFBLENBQUEsR0FBQSxDQUFBLEdBQUEsRUFBQSxJQUFBLENBQUF4ckQsQ0FBQSxDQUFBLGFBQUEsQ0FBQTZXLENBQUEsQ0FBQSxLQUFBbXVDLElBQUEsQ0FBQWgvQixDQUFBLENBQUEsVUFBQSxDQUFBLENBQUFuUCxDQUFBLENBQUE2MEMsQ0FBQSxDQUFBLEtBQUEvQyxVQUFBLENBQUE5eEMsQ0FBQSxDQUFBLEtBQUFveUMscUJBQUEsQ0FBQSxHQUFBemlELENBQUFBLElBQUEsQ0FBQTBsRCxFQUFBLENBQUFELENBQUEsQ0FBQTdqQixDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxLQUFBa2YsZ0JBQUEsQ0FBQXRoQyxDQUFBLENBQUEsQ0FBQSxDQUFBblAsQ0FBQSxDQUFBODFCLENBQUEsQ0FBQSxLQUFBd2YsZUFBQSxDQUFBbm1DLENBQUEsQ0FBQSxDQUFBLENBQUFrbUMsRUFBQSxDQUFBRCxDQUFBLEVBQUEsNkZBQUFwMUMsQ0FBQSxDQUFBLGlEQUFBLEVBQUEyMEMsQ0FBQSxDQUFBLEdBQUEsQ0FBQSxHQUFBLEVBQUEsSUFBQSxDQUFBMzBDLENBQUEsQ0FBQSxhQUFBLENBQUE0MEMsQ0FBQSxDQUFBLEVBQUEsQ0FBQSx3RUFBQTUwQyxDQUFBLENBQUEsaURBQUEsRUFBQTIwQyxDQUFBLENBQUEsR0FBQSxDQUFBLEdBQUEsRUFBQSxJQUFBLENBQUEzMEMsQ0FBQSxDQUFBLGFBQUEsQ0FBQTNQLENBQUEsQ0FBQSxLQUFBODlDLElBQUEsQ0FBQWgvQixDQUFBLENBQUEsYUFBQSxDQUFBLENBQUErbUIsQ0FBQSxDQUFBLEtBQUFpWSxJQUFBLENBQUFoL0IsQ0FBQSxDQUFBLGFBQUEsR0FBQUEsQ0FBQSxDQUFBa2lDLFVBQUEsQ0FBQTRELENBQUEsQ0FBQVAsQ0FBQSxDQUFBcmtELENBQUEsQ0FBQXdrRCxDQUFBLENBQUEsS0FBQS9DLFVBQUEsQ0FBQXpoRCxDQUFBLENBQUE2bEMsQ0FBQSxDQUFBLEtBQUF1YSxnQkFBQSxDQUFBdGhDLENBQUEsQ0FBQSxDQUFBLENBQUE5ZSxDQUFBLENBQUFrbUMsQ0FBQSxDQUFBcG5CLENBQUEsQ0FBQThtQixNQUFBLENBQUEsRUFBQSxDQUFBLCtJQUFBLEtBQUFrWSxJQUFBLENBQUFoL0IsQ0FBQSxDQUFBLFdBQUEsQ0FBQSxDQUFBLFdBQUEsQ0FBQWhPLENBQUEsQ0FBQXJWLENBQUEsQ0FBQSw0REFBQTZvRCxDQUFBLENBQUFwZSxDQUFBLENBQUEsRUFBQSxHQUFBLEtBQUFnZixVQUFBLENBQUFwbUMsQ0FBQSxDQUFBK21CLENBQUEsRUFBQSxvSkFBQTdsQyxDQUFBLENBQUEsV0FBQSxDQUFBLEVBQUEsR0FBQXNrRCxDQUFBLENBQUEsRUFBQSxDQUFBcGUsQ0FBQSxFQUFBLFFBQUEsQ0FBQSxFQUFBLENBQUFxQyxDQUFBLENBQUEvZSxRQUFBLENBQUEsS0FBQXMwQixJQUFBLENBQUFoL0IsQ0FBQSxDQUFBLFVBQUEsQ0FBQSxDQUFBLEVBQUEsQ0FBQSxDQUFBeXBCLENBQUEsQ0FBQTNILEtBQUEsQ0FBQTJILENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQUEsQ0FBQSxDQUFBUSxDQUFBLENBQUEsS0FBQStVLElBQUEsQ0FBQWgvQixDQUFBLENBQUEsVUFBQSxDQUFBLENBQUFxcUIsQ0FBQSxDQUFBLEtBQUEyVSxJQUFBLENBQUFoL0IsQ0FBQSxDQUFBLFVBQUEsQ0FBQSxDQUFBaVAsQ0FBQSxDQUFBLEtBQUErdkIsSUFBQSxDQUFBaC9CLENBQUEsQ0FBQSxhQUFBLENBQUEsQ0FBQThxQixDQUFBLENBQUEsS0FBQWtVLElBQUEsQ0FBQWgvQixDQUFBLENBQUEsWUFBQSxDQUFBLENBQUErcUIsQ0FBQSxDQUFBLEtBQUFpVSxJQUFBLENBQUFoL0IsQ0FBQSxDQUFBLGlCQUFBLENBQUEsQ0FBQTliLENBQUEsQ0FBQSxLQUFBODZDLElBQUEsQ0FBQWgvQixDQUFBLENBQUEsZUFBQSxDQUFBLENBQUE5TSxDQUFBLENBQUEsS0FBQThyQyxJQUFBLENBQUFoL0IsQ0FBQSxDQUFBLGlCQUFBLENBQUEsQ0FBQTVMLENBQUEsQ0FBQSxLQUFBNHFDLElBQUEsQ0FBQWgvQixDQUFBLENBQUEsbUJBQUEsQ0FBQSxDQUFBN2UsQ0FBQSxDQUFBLEtBQUF1K0MsZUFBQSxDQUFBMS9CLENBQUEsQ0FBQSxDQUFBaXJCLENBQUEsQ0FBQSxFQUFBLENBQUFFLENBQUEsQ0FBQSxDQUFBLENBQUF3YSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUF4YSxDQUFBLENBQUFBLENBQUEsRUFBQSxDQUFBLENBQUEsSUFBQUUsQ0FBQSxDQUFBLEVBQUEsQ0FBQSxLQUFBeVMsT0FBQSxDQUFBLENBQUEsQ0FBQXhTLENBQUEsQ0FBQSxDQUFBLENBQUFxYSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUFyYSxDQUFBLENBQUFBLENBQUEsRUFBQSxDQUFBLENBQUEsR0FBQUMsQ0FBQSxDQUFBLEtBQUEwWCxxQkFBQSxDQUFBLEdBQUF6aUQsQ0FBQUEsSUFBQSxDQUFBMGxELEVBQUEsQ0FBQUQsQ0FBQSxDQUFBam1DLENBQUEsQ0FBQXErQixXQUFBLENBQUEsQ0FBQSxDQUFBN1MsQ0FBQSxDQUFBLGdCQUFBLENBQUFpWixDQUFBLENBQUEsRUFBQSxDQUFBb0IsQ0FBQSxDQUFBLENBQUEsR0FBQXBCLENBQUEsRUFBQSxpQ0FBQSxDQUFBa0IsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxPQUFBcmEsQ0FBQSxFQUFBLElBQUEsRUFBQSxDQUFBbVosQ0FBQSxFQUFBLDRCQUFBLENBQUFqWixDQUFBLENBQUEsZUFBQWdhLENBQUEsQ0FBQSxPQUFBLENBQUEsTUFBQSxDQUFBLENBQUEsTUFBQSxJQUFBRyxDQUFBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBbEIsQ0FBQSxFQUFBLDJCQUFBLENBQUFqWixDQUFBLENBQUEsZUFBQWdhLENBQUEsQ0FBQSxNQUFBLENBQUEsT0FBQSxDQUFBLENBQUEsTUFBQSxRQUFBZixDQUFBLEVBQUEsNkJBQUEsQ0FBQWpaLENBQUEsQ0FBQSxFQUFBLENBQUEsQ0FBQWlaLENBQUEsRUFBQSxJQUFBLENBQUEsS0FBQUEsQ0FBQSxFQUFBLHVFQUFBalosQ0FBQSxDQUFBLElBQUEsRUFBQSxXQUFBem1DLElBQUEsQ0FBQXltQyxDQUFBLEdBQUEsSUFBQUwsQ0FBQSxDQUFBcWEsQ0FBQSxDQUFBN2UsQ0FBQSxDQUFBMVAsQ0FBQSxDQUFBLEVBQUEsR0FBQSxZQUFBbHlCLElBQUEsQ0FBQXltQyxDQUFBLEdBQUEsSUFBQUwsQ0FBQSxDQUFBcWEsQ0FBQSxDQUFBdnVCLENBQUEsQ0FBQTBQLENBQUEsQ0FBQSxFQUFBLEVBQUEsS0FBQTBmLHdCQUFBLENBQUFybUMsQ0FBQSxDQUFBaW1DLENBQUEsQ0FBQUMsRUFBQSxDQUFBSCxDQUFBLENBQUFDLENBQUEsQ0FBQTdhLENBQUEsQ0FBQSxDQUFBLEVBQUFHLENBQUEsQ0FBQSxDQUFBLENBQUFSLENBQUEsQ0FBQUMsQ0FBQSxDQUFBLENBQUEscURBQUEsQ0FBQSxNQUFBLENBQUEyWixDQUFBLENBQUF6YSxDQUFBLENBQUEsc0NBQUEsS0FBQStVLElBQUEsQ0FBQWgvQixDQUFBLENBQUEsWUFBQSxDQUFBLENBQUEsT0FBQSxDQUFBLEVBQUEsQ0FBQXBvQixDQUFBLENBQUEsQ0FBQSxDQUFBLEVBQUFBLENBQUEsQ0FBQUEsQ0FBQSxFQUFBLEVBQUErc0QsQ0FBQSxDQUFBLENBQUEvc0QsQ0FBQSxDQUFBNnhDLENBQUEsRUFBQSxDQUFBLENBQUFpYixDQUFBLEVBQUEsbUJBQUEsQ0FBQTlzRCxDQUFBLENBQUE2eEMsQ0FBQSxDQUFBLENBQUEsRUFBQSxDQUFBLEVBQUEsQ0FBQSxDQUFBLGlDQUFBLENBQUEsRUFBQSxFQUFBLEdBQUEsQ0FBQSxlQUFBLENBQUFZLENBQUEsQ0FBQXNhLENBQUEsQ0FBQSxDQUFBLElBQUEsQ0FBQTExQixDQUFBLENBQUEwMUIsQ0FBQSxDQUFBLENBQUEsY0FBQSxDQUFBLENBQUEsSUFBQUYsQ0FBQSxFQUFBQyxDQUFBLENBQUEsc0JBQUEsQ0FBQUUsQ0FBQSxDQUFBLEtBQUE1QixlQUFBLENBQUFrRCxFQUFBLENBQUFELENBQUEsQ0FBQSxDQUFBQyxFQUFBLEdBQUFsbUMsQ0FBQSxDQUFBdStCLFlBQUEsRUFBQTBILENBQUEsR0FBQWptQyxDQUFBLENBQUFzK0IsYUFBQSxHQUFBdCtCLENBQUEsQ0FBQXErQixXQUFBLENBQUF6Z0QsSUFBQSxDQUFBd3dDLEdBQUEsQ0FBQXB1QixDQUFBLENBQUFxK0IsV0FBQSxDQUFBdUcsQ0FBQSxDQUFBLENBQUEsQ0FBQUMsQ0FBQSxDQUFBLENBQUEsS0FBQXlCLG1CQUFBLENBQUFKLEVBQUEsQ0FBQUQsQ0FBQSxFQUFBeGMsQ0FBQSxDQUFBLENBQUEsRUFBQSxDQUFBLENBQUFxYixDQUFBLENBQUFsbkQsSUFBQSxDQUFBaXZCLElBQUEsQ0FBQSxDQUFBZzRCLENBQUEsQ0FBQUQsQ0FBQSxFQUFBLENBQUEsQ0FBQSxDQUFBRyxDQUFBLENBQUFjLENBQUEsQ0FBQSxLQUFBL0gsT0FBQSxDQUFBZ0gsQ0FBQSxDQUFBLEtBQUFoSCxPQUFBLENBQUFnSCxDQUFBLENBQUFBLENBQUEsQ0FBQSxLQUFBaEgsT0FBQSxDQUFBaUgsQ0FBQSxDQUFBQyxDQUFBLENBQUEsS0FBQS9CLHFCQUFBLENBQUEsR0FBQXppRCxDQUFBQSxJQUFBLENBQUEwbEQsRUFBQSxDQUFBRCxDQUFBLENBQUEsRUFBQXBCLENBQUEsQ0FBQSxDQUFBLENBQUFJLENBQUEsQ0FBQSxDQUFBLENBQUFGLENBQUEsQ0FBQUUsQ0FBQSxDQUFBQSxDQUFBLEVBQUEsQ0FBQSxDQUFBLElBQUFSLENBQUEsRUFBQSxNQUFBLENBQUFTLENBQUEsQ0FBQWpiLENBQUEsQ0FBQSxzQ0FBQSxLQUFBK1UsSUFBQSxDQUFBaC9CLENBQUEsQ0FBQSxlQUFBLEVBQUFnbEMsQ0FBQSxDQUFBLENBQUEsT0FBQSxDQUFBLEVBQUEsQ0FBQXB0RCxDQUFBLENBQUEsQ0FBQSxDQUFBLEVBQUFBLENBQUEsQ0FBQUEsQ0FBQSxFQUFBLEVBQUF1dEQsQ0FBQSxDQUFBamhELENBQUEsQ0FBQUEsQ0FBQSxDQUFBekwsS0FBQSxDQUFBdW5CLENBQUEsQ0FBQTlYLEtBQUEsQ0FBQThYLENBQUEsQ0FBQTlYLEtBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxJQUFBLENBQUEsQ0FBQTg4QyxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsRUFBQSxDQUFBLENBQUFJLENBQUEsQ0FBQUosQ0FBQSxDQUFBMUMsUUFBQSxLQUFBMkQsQ0FBQSxDQUFBWixDQUFBLENBQUFELENBQUEsRUFBQSxDQUFBaHhDLENBQUEsRUFBQSxDQUFBK3dDLENBQUEsQ0FBQSxDQUFBLENBQUEsRUFBQVksQ0FBQSxFQUFBQSxDQUFBLENBQUFmLENBQUEsRUFBQWdCLENBQUEsRUFBQWhCLENBQUEsQ0FBQWdCLENBQUEsQ0FBQWQsQ0FBQSxFQUFBLGVBQUEsQ0FBQXR0RCxDQUFBLENBQUE2eEMsQ0FBQSxDQUFBLENBQUEsRUFBQSxDQUFBLEVBQUEsQ0FBQSxDQUFBLHlCQUFBLENBQUEsRUFBQSxHQUFBMmIsQ0FBQSxDQUFBLDRCQUFBLENBQUEsRUFBQSxHQUFBSixDQUFBLENBQUFuQyxPQUFBLEtBQUF0WCxDQUFBLENBQUFzWCxPQUFBLEVBQUEsRUFBQW9ELENBQUEsR0FBQWptQyxDQUFBLENBQUFzK0IsYUFBQSxFQUFBdCtCLENBQUEsQ0FBQXVpQixTQUFBLEVBQUFwaEMsQ0FBQSxDQUFBMGhELE9BQUEsS0FBQW1DLENBQUEsQ0FBQW5DLE9BQUEsRUFBQSxFQUFBMWhELENBQUEsQ0FBQTBoRCxPQUFBLEtBQUF0WCxDQUFBLENBQUFzWCxPQUFBLEVBQUEsQ0FBQSxJQUFBLEtBQUExZixhQUFBLENBQUEsRUFBQSxHQUFBa2lCLENBQUEsQ0FBQSxJQUFBLEtBQUFwaUIsa0JBQUEsQ0FBQSxvQkFBQSxDQUFBLEVBQUEsR0FBQW1pQixDQUFBLEVBQUEsQ0FBQWx5QyxDQUFBLENBQUEsRUFBQSxDQUFBLElBQUFpeUMsQ0FBQSxDQUFBLENBQUEsQ0FBQSxFQUFBSCxDQUFBLENBQUFuQyxPQUFBLEtBQUFpRCxDQUFBLENBQUFqRCxPQUFBLEVBQUEsQ0FBQSxJQUFBLEtBQUEzZixhQUFBLENBQUEsRUFBQSxHQUFBOGhCLENBQUEsQ0FBQW5DLE9BQUEsS0FBQTBDLENBQUEsQ0FBQTFDLE9BQUEsRUFBQSxDQUFBLHNCQUFBLENBQUEsRUFBQSxDQUFBLEVBQUEsR0FBQSxFQUFBdUMsQ0FBQSxFQUFBLENBQUFseUMsQ0FBQSxFQUFBLENBQUFpeUMsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLEVBQUEsQ0FBQSxXQUFBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUFybkQsT0FBQSxDQUFBLElBQUEsQ0FBQSxPQUFBLENBQUEsQ0FBQSxHQUFBLEdBQUF1bkQsQ0FBQSxDQUFBLEVBQUEsQ0FBQSw0REFBQUwsQ0FBQSxDQUFBMUMsUUFBQSxFQUFBLENBQUEsZUFBQSxDQUFBMEMsQ0FBQSxDQUFBekMsV0FBQSxFQUFBLENBQUEsR0FBQSxFQUFBLEdBQUEsRUFBQTZDLENBQUEsRUFBQSxDQUFBbHlDLENBQUEsQ0FBQSxRQUFBLENBQUFteUMsQ0FBQSxDQUFBLGtDQUFBTCxDQUFBLENBQUEzQyxPQUFBLEVBQUEsQ0FBQSxTQUFBLENBQUEsOEJBQUEyQyxDQUFBLENBQUFuQyxPQUFBLEtBQUEwQyxDQUFBLENBQUExQyxPQUFBLEVBQUEsQ0FBQSxxQkFBQSxDQUFBLEVBQUEsR0FBQW1DLENBQUEsQ0FBQW5DLE9BQUEsS0FBQWlELENBQUEsQ0FBQWpELE9BQUEsRUFBQSxDQUFBLGtCQUFBLENBQUEsRUFBQSxHQUFBdUMsQ0FBQSxDQUFBLHdCQUFBLENBQUEsRUFBQSxFQUFBLGFBQUEsQ0FBQUosQ0FBQSxDQUFBM0MsT0FBQSxFQUFBLENBQUEsTUFBQSxFQUFBLE9BQUEsQ0FBQTJDLENBQUEsQ0FBQTFGLE9BQUEsQ0FBQTBGLENBQUEsQ0FBQTNDLE9BQUEsR0FBQSxDQUFBLENBQUEsQ0FBQTJDLENBQUEsQ0FBQSxLQUFBL0IscUJBQUEsQ0FBQStCLENBQUEsQ0FBQSxDQUFBLENBQUFQLENBQUEsRUFBQVMsQ0FBQSxDQUFBLE9BQUEsQ0FBQSxDQUFBZSxDQUFBLEdBQUFBLENBQUEsQ0FBQSxFQUFBLEdBQUFBLENBQUEsQ0FBQSxDQUFBLENBQUFDLEVBQUEsRUFBQSxDQUFBLENBQUF6QixDQUFBLEVBQUEsb0JBQUFvQixDQUFBLENBQUEsVUFBQUYsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsRUFBQXJhLENBQUEsR0FBQXFhLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsNkNBQUEsQ0FBQSxFQUFBLENBQUEsQ0FBQSxFQUFBLENBQUEsQ0FBQXRhLENBQUEsRUFBQW9aLENBQUEsQ0FBQSxDQUFBeFosQ0FBQSxFQUFBSSxDQUFBLENBQUEsT0FBQUosQ0FBQUEsQ0FBQSxFQUFBajVCLENBQUEsQ0FBQWdPLENBQUEsQ0FBQXVpQixTQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEwSSxDQUFBLENBQUEsQ0FEQSxDQUNBb2Isd0JBQUEsQ0FBQSxrQ0FBQXJtQyxDQUFBLENBQUFqYyxDQUFBLENBQUEvSixDQUFBLENBQUFpOUIsQ0FBQSxDQUFBcG1CLENBQUEsQ0FBQTgxQixDQUFBLENBQUF6bEMsQ0FBQSxDQUFBNmxDLENBQUEsQ0FBQSxDQUFBLEdBQUFLLENBQUFBLENBQUEsQ0FBQXAxQixDQUFBLENBQUF5M0IsQ0FBQSxDQUFBUSxDQUFBLENBQUFJLENBQUEsQ0FBQXBiLENBQUEsQ0FBQTZiLENBQUEsQ0FBQUMsQ0FBQSxDQUFBN21DLENBQUEsQ0FBQSxLQUFBODZDLElBQUEsQ0FBQWgvQixDQUFBLENBQUEsYUFBQSxDQUFBLENBQUE5TSxDQUFBLENBQUEsS0FBQThyQyxJQUFBLENBQUFoL0IsQ0FBQSxDQUFBLFlBQUEsQ0FBQSxDQUFBNUwsQ0FBQSxDQUFBLEtBQUE0cUMsSUFBQSxDQUFBaC9CLENBQUEsQ0FBQSxvQkFBQSxDQUFBLENBQUE3ZSxDQUFBLENBQUEsbUNBQUEsQ0FBQThwQyxDQUFBLENBQUEsRUFBQSxDQUFBLEdBQUF0RSxDQUFBLEVBQUEsQ0FBQXppQyxDQUFBLENBQUErbUMsQ0FBQSxFQUFBLHFDQUFBL3BDLENBQUEsQ0FBQTZDLENBQUEsQ0FBQSxDQUFBLFNBQUEsQ0FBQSxJQUFBLENBQUEsSUFBQXFqQyxDQUFBLENBQUFuUSxDQUFBLEVBQUFBLENBQUEsQ0FBQXNyQixXQUFBLEtBQUF2b0QsQ0FBQSxDQUFBZ1ksQ0FBQSxDQUFBbkIsQ0FBQSxFQUFBQSxDQUFBLENBQUEweEMsV0FBQSxLQUFBdm9ELENBQUEsQ0FBQWl4QyxDQUFBLEVBQUEscUZBQUEsQ0FBQXhCLENBQUEsQ0FBQSxDQUFBLENBQUEsR0FBQUEsQ0FBQSxDQUFBQSxDQUFBLEVBQUEsRUFBQSxDQUFBLENBQUFyQyxDQUFBLEVBQUFxQyxDQUFBLEVBQUF4UyxDQUFBLENBQUFxckIsUUFBQSxFQUFBLElBQUEsQ0FBQXR3QyxDQUFBLEVBQUFuQixDQUFBLENBQUF5eEMsUUFBQSxJQUFBN1ksQ0FBQSxJQUFBd0IsQ0FBQSxFQUFBLGtCQUFBeEIsQ0FBQSxDQUFBLEdBQUEsRUFBQUEsQ0FBQSxHQUFBMWxDLENBQUEsQ0FBQSxzQkFBQSxDQUFBLEVBQUEsRUFBQSxHQUFBLENBQUFnakMsQ0FBQSxDQUFBMEMsQ0FBQSxDQUFBLENBQUEsV0FBQSxFQUFBLENBQUF3QixDQUFBLEVBQUEsV0FBQSxDQUFBLElBQUE3MkIsQ0FBQSxHQUFBalQsQ0FBQSxFQUFBOHBDLENBQUEsRUFBQSxDQUFBdEUsQ0FBQSxFQUFBemlDLENBQUEsRUFBQWdQLENBQUEsQ0FBQSxFQUFBLENBQUEsUUFBQSxDQUFBLENBQUEsQ0FBQSxDQUFBOE0sQ0FBQSxDQUFBNmhDLFNBQUEsQ0FBQSxHQUFBN2hDLENBQUEsQ0FBQTZoQyxTQUFBLENBQUEsRUFBQSxDQUFBbGIsQ0FBQSxFQUFBLENBQUF6ekIsQ0FBQSxDQUFBL1IsQ0FBQSxFQUFBLG9DQUFBbkgsQ0FBQSxDQUFBLFNBQUEsQ0FBQSxJQUFBLENBQUEsSUFBQWl3QyxDQUFBLENBQUEsS0FBQStVLElBQUEsQ0FBQWgvQixDQUFBLENBQUEsV0FBQSxFQUFBM2dCLEtBQUEsQ0FBQSxHQUFBLENBQUEsQ0FBQWdyQyxDQUFBLENBQUEsR0FBQTdwQyxDQUFBQSxJQUFBLEVBQUEsQ0FBQStoRCxXQUFBLEVBQUEsQ0FBQXR6QixDQUFBLENBQUEsV0FBQWpQLENBQUEsQ0FBQSxDQUFBLEdBQUFqYyxDQUFBQSxDQUFBLENBQUFpYyxDQUFBLENBQUE1YixLQUFBLENBQUEsVUFBQSxFQUFBcEssQ0FBQSxDQUFBMHdCLFFBQUEsQ0FBQTFLLENBQUEsQ0FBQXN6QixTQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsRUFBQSxDQUFBLENBQUF0ekIsQ0FBQSxDQUFBNWIsS0FBQSxDQUFBLFNBQUEsRUFBQWltQyxDQUFBLENBQUEzZixRQUFBLENBQUExSyxDQUFBLENBQUEsRUFBQSxDQUFBLENBQUEwSyxRQUFBLENBQUExSyxDQUFBLENBQUEsRUFBQSxDQUFBLENBQUEsTUFBQThoQixDQUFBQSxLQUFBLENBQUEvOUIsQ0FBQSxDQUFBLENBQUFzbUMsQ0FBQSxDQUFBdG1DLENBQUEsQ0FBQSxDQUFBLENBQUErbUMsQ0FBQSxDQUFBN2IsQ0FBQSxDQUFBZ2IsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUFjLENBQUEsQ0FBQW50QyxJQUFBLENBQUF3dUIsR0FBQSxDQUFBMGUsQ0FBQSxDQUFBN2IsQ0FBQSxDQUFBZ2IsQ0FBQSxDQUFBLENBQUEsQ0FBQSxFQUFBLEVBQUEsQ0FBQSxDQUFBLENBQUFhLENBQUEsQ0FBQTdULENBQUEsQ0FBQXI1QixJQUFBLENBQUF3dUIsR0FBQSxDQUFBMGUsQ0FBQSxDQUFBN1QsQ0FBQSxDQUFBc3JCLFdBQUEsRUFBQSxDQUFBLENBQUF6WCxDQUFBLENBQUFDLENBQUEsQ0FBQWw2QixDQUFBLENBQUFqVCxJQUFBLENBQUF3d0MsR0FBQSxDQUFBckQsQ0FBQSxDQUFBbDZCLENBQUEsQ0FBQTB4QyxXQUFBLEVBQUEsQ0FBQSxDQUFBeFgsQ0FBQSxDQUFBL3FCLENBQUEsQ0FBQTZoQyxTQUFBLEVBQUEsbUZBQUEsQ0FBQTlXLENBQUEsRUFBQUQsQ0FBQSxDQUFBQSxDQUFBLEVBQUEsRUFBQTlxQixDQUFBLENBQUE2aEMsU0FBQSxFQUFBLGtCQUFBL1csQ0FBQSxDQUFBLEdBQUEsRUFBQUEsQ0FBQSxHQUFBOXdDLENBQUEsQ0FBQSxzQkFBQSxDQUFBLEVBQUEsRUFBQSxHQUFBLENBQUE4d0MsQ0FBQSxDQUFBLFdBQUEsQ0FBQSxDQUFBOXFCLENBQUEsQ0FBQTZoQyxTQUFBLEVBQUEsV0FBQSxDQUFBMWdELENBQUEsRUFBQTZlLENBQUEsQ0FBQTZoQyxTQUFBLENBQUE3aEMsQ0FBQSxDQUFBNmhDLFNBQUEsQ0FBQSxJQUFBLENBQUEsT0FBQTFnRCxDQUFBQSxDQUFBLEVBQUEsS0FBQTY5QyxJQUFBLENBQUFoL0IsQ0FBQSxDQUFBLFlBQUEsQ0FBQSxDQUFBNUwsQ0FBQSxHQUFBalQsQ0FBQSxFQUFBLENBQUEsQ0FBQXdsQyxDQUFBLEVBQUF6aUMsQ0FBQSxFQUFBZ1AsQ0FBQSxDQUFBLEVBQUEsQ0FBQSxRQUFBLEVBQUErM0IsQ0FBQSxDQUFBLENBQUE5cEMsQ0FBQSxFQUFBLFFBQUEsQ0FBQSxDQURBLENBQ0E4Z0QsZUFBQSxDQUFBLHlCQUFBamlDLENBQUEsQ0FBQWpjLENBQUEsQ0FBQS9KLENBQUEsQ0FBQSxDQUFBLEdBQUFpOUIsQ0FBQUEsQ0FBQSxDQUFBalgsQ0FBQSxDQUFBdStCLFlBQUEsRUFBQSxNQUFBdmtELENBQUEsQ0FBQStKLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQThNLENBQUEsQ0FBQW1QLENBQUEsQ0FBQXMrQixhQUFBLEVBQUEsTUFBQXRrRCxDQUFBLENBQUErSixDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUE0aUMsQ0FBQSxDQUFBL29DLElBQUEsQ0FBQXd3QyxHQUFBLENBQUFwdUIsQ0FBQSxDQUFBcStCLFdBQUEsQ0FBQSxLQUFBMkUsZUFBQSxDQUFBL3JCLENBQUEsQ0FBQXBtQixDQUFBLENBQUEsR0FBQSxNQUFBN1csQ0FBQSxDQUFBK0osQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBN0MsQ0FBQSxDQUFBLEtBQUE0aUQsZUFBQSxDQUFBOWpDLENBQUEsQ0FBQSxLQUFBaWpDLHFCQUFBLENBQUEsR0FBQXppRCxDQUFBQSxJQUFBLENBQUF5MkIsQ0FBQSxDQUFBcG1CLENBQUEsQ0FBQTgxQixDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEzbUIsQ0FBQSxDQUFBcStCLFdBQUEsQ0FBQW45QyxDQUFBLENBQUFtaEQsT0FBQSxFQUFBLENBQUFyaUMsQ0FBQSxDQUFBdytCLFNBQUEsQ0FBQXgrQixDQUFBLENBQUFzK0IsYUFBQSxDQUFBcDlDLENBQUEsQ0FBQW9oRCxRQUFBLEVBQUEsQ0FBQXRpQyxDQUFBLENBQUF5K0IsUUFBQSxDQUFBeitCLENBQUEsQ0FBQXUrQixZQUFBLENBQUFyOUMsQ0FBQSxDQUFBcWhELFdBQUEsRUFBQSxDQUFBLENBQUEsTUFBQXZvRCxDQUFBLEVBQUEsTUFBQUEsQ0FBQSxHQUFBLEtBQUF3b0QsYUFBQSxDQUFBeGlDLENBQUEsQ0FBQSxDQUFBLENBREEsQ0FDQThqQyxlQUFBLENBQUEseUJBQUE5akMsQ0FBQSxDQUFBamMsQ0FBQSxDQUFBLENBQUEsR0FBQS9KLENBQUFBLENBQUEsQ0FBQSxLQUFBeW1ELGNBQUEsQ0FBQXpnQyxDQUFBLENBQUEsS0FBQSxDQUFBLENBQUFpWCxDQUFBLENBQUEsS0FBQXdwQixjQUFBLENBQUF6Z0MsQ0FBQSxDQUFBLEtBQUEsQ0FBQSxDQUFBblAsQ0FBQSxDQUFBN1csQ0FBQSxFQUFBQSxDQUFBLENBQUErSixDQUFBLENBQUEvSixDQUFBLENBQUErSixDQUFBLENBQUEsTUFBQWt6QixDQUFBQSxDQUFBLEVBQUFwbUIsQ0FBQSxDQUFBb21CLENBQUEsQ0FBQUEsQ0FBQSxDQUFBcG1CLENBQUEsQ0FBQSxDQURBLENBQ0EyeEMsYUFBQSxDQUFBLHVCQUFBeGlDLENBQUEsQ0FBQSxDQUFBLEdBQUFqYyxDQUFBQSxDQUFBLENBQUEsS0FBQWk3QyxJQUFBLENBQUFoL0IsQ0FBQSxDQUFBLG1CQUFBLENBQUEsQ0FBQWpjLENBQUEsRUFBQUEsQ0FBQSxDQUFBdEwsS0FBQSxDQUFBdW5CLENBQUEsQ0FBQTlYLEtBQUEsQ0FBQThYLENBQUEsQ0FBQTlYLEtBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxJQUFBLENBQUEsQ0FBQThYLENBQUEsQ0FBQXUrQixZQUFBLENBQUF2K0IsQ0FBQSxDQUFBcytCLGFBQUEsQ0FBQSxDQUFBLENBQUF0K0IsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQURBLENBQ0E0aEMsa0JBQUEsQ0FBQSw0QkFBQTVoQyxDQUFBLENBQUEsQ0FBQSxHQUFBamMsQ0FBQUEsQ0FBQSxDQUFBLEtBQUFpN0MsSUFBQSxDQUFBaC9CLENBQUEsQ0FBQSxnQkFBQSxDQUFBLENBQUEsTUFBQSxPQUFBamMsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLFVBQUEsTUFBQUEsQ0FBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBQSxDQUFBLENBQUEsQ0FBQUEsQ0FBQSxDQUFBLENBREEsQ0FDQTA4QyxjQUFBLENBQUEsd0JBQUF6Z0MsQ0FBQSxDQUFBamMsQ0FBQSxDQUFBLENBQUEsTUFBQSxNQUFBZ2dELGNBQUEsQ0FBQS9qQyxDQUFBLENBQUEsS0FBQWcvQixJQUFBLENBQUFoL0IsQ0FBQSxDQUFBamMsQ0FBQSxDQUFBLE1BQUEsQ0FBQSxDQUFBLElBQUEsQ0FBQSxDQUFBLENBREEsQ0FDQWkvQyxlQUFBLENBQUEseUJBQUFoakMsQ0FBQSxDQUFBamMsQ0FBQSxDQUFBLENBQUEsTUFBQSxJQUFBLEtBQUFrL0MscUJBQUEsQ0FBQSxHQUFBemlELENBQUFBLElBQUEsQ0FBQXdmLENBQUEsQ0FBQWpjLENBQUEsQ0FBQSxFQUFBLENBQUEsRUFBQXMrQyxPQUFBLEVBQUEsQ0FBQSxDQURBLENBQ0FpRSxtQkFBQSxDQUFBLDZCQUFBdG1DLENBQUEsQ0FBQWpjLENBQUEsQ0FBQSxDQUFBLE1BQUEsSUFBQXZELENBQUFBLElBQUEsQ0FBQXdmLENBQUEsQ0FBQWpjLENBQUEsQ0FBQSxDQUFBLEVBQUF3N0MsTUFBQSxFQUFBLENBQUEsQ0FEQSxDQUNBNEcsZUFBQSxDQUFBLHlCQUFBbm1DLENBQUEsQ0FBQWpjLENBQUEsQ0FBQS9KLENBQUEsQ0FBQWk5QixDQUFBLENBQUEsQ0FBQSxHQUFBcG1CLENBQUFBLENBQUEsQ0FBQSxLQUFBK3dDLGtCQUFBLENBQUE1aEMsQ0FBQSxDQUFBLENBQUEybUIsQ0FBQSxDQUFBLEtBQUFzYyxxQkFBQSxDQUFBLEdBQUF6aUQsQ0FBQUEsSUFBQSxDQUFBeEcsQ0FBQSxDQUFBaTlCLENBQUEsRUFBQSxFQUFBbHpCLENBQUEsQ0FBQUEsQ0FBQSxDQUFBOE0sQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLE1BQUEsR0FBQTlNLENBQUEsRUFBQTRpQyxDQUFBLENBQUEyWSxPQUFBLENBQUEsS0FBQTBELGVBQUEsQ0FBQXJjLENBQUEsQ0FBQTRiLFdBQUEsRUFBQSxDQUFBNWIsQ0FBQSxDQUFBMmIsUUFBQSxFQUFBLENBQUEsQ0FBQSxDQUFBLEtBQUE4RCxVQUFBLENBQUFwbUMsQ0FBQSxDQUFBMm1CLENBQUEsQ0FBQSxDQUFBLENBREEsQ0FDQXlmLFVBQUEsQ0FBQSxvQkFBQXBtQyxDQUFBLENBQUFqYyxDQUFBLENBQUEsQ0FBQSxHQUFBL0osQ0FBQUEsQ0FBQSxDQUFBaTlCLENBQUEsQ0FBQXBtQixDQUFBLENBQUEsS0FBQTR2QyxjQUFBLENBQUF6Z0MsQ0FBQSxDQUFBLEtBQUEsQ0FBQSxDQUFBMm1CLENBQUEsQ0FBQSxLQUFBOFosY0FBQSxDQUFBemdDLENBQUEsQ0FBQSxLQUFBLENBQUEsQ0FBQTllLENBQUEsQ0FBQSxJQUFBLENBQUE2bEMsQ0FBQSxDQUFBLElBQUEsQ0FBQUssQ0FBQSxDQUFBLEtBQUE0WCxJQUFBLENBQUFoL0IsQ0FBQSxDQUFBLFdBQUEsQ0FBQSxDQUFBLE1BQUFvbkIsQ0FBQUEsQ0FBQSxHQUFBcHRDLENBQUEsQ0FBQW90QyxDQUFBLENBQUEvbkMsS0FBQSxDQUFBLEdBQUEsQ0FBQSxDQUFBNDNCLENBQUEsQ0FBQSxHQUFBejJCLENBQUFBLElBQUEsRUFBQSxDQUFBK2hELFdBQUEsRUFBQSxDQUFBcmhELENBQUEsQ0FBQXdwQixRQUFBLENBQUExd0IsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLEVBQUEsQ0FBQSxDQUFBK3NDLENBQUEsQ0FBQXJjLFFBQUEsQ0FBQTF3QixDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsRUFBQSxDQUFBLENBQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQW9LLEtBQUEsQ0FBQSxTQUFBLElBQUFsRCxDQUFBLEVBQUErMUIsQ0FBQSxDQUFBLENBQUFqOUIsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBb0ssS0FBQSxDQUFBLFNBQUEsSUFBQTJpQyxDQUFBLEVBQUE5UCxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQXBtQixDQUFBLEVBQUE5TSxDQUFBLENBQUE4K0MsT0FBQSxJQUFBaHlDLENBQUEsQ0FBQWd5QyxPQUFBLEVBQUEsSUFBQSxDQUFBbGMsQ0FBQSxFQUFBNWlDLENBQUEsQ0FBQTgrQyxPQUFBLElBQUFsYyxDQUFBLENBQUFrYyxPQUFBLEVBQUEsSUFBQSxDQUFBM2hELENBQUEsRUFBQTZDLENBQUEsQ0FBQXcrQyxXQUFBLElBQUFyaEQsQ0FBQSxJQUFBLENBQUE2bEMsQ0FBQSxFQUFBQSxDQUFBLEVBQUFoakMsQ0FBQSxDQUFBdytDLFdBQUEsRUFBQSxDQUFBLENBQUEsQ0FEQSxDQUNBakIsZ0JBQUEsQ0FBQSwwQkFBQXRoQyxDQUFBLENBQUEsQ0FBQSxHQUFBamMsQ0FBQUEsQ0FBQSxDQUFBLEtBQUFpN0MsSUFBQSxDQUFBaC9CLENBQUEsQ0FBQSxpQkFBQSxDQUFBLENBQUEsTUFBQWpjLENBQUFBLENBQUEsQ0FBQSxVQUFBLE1BQUFBLENBQUFBLENBQUEsQ0FBQUEsQ0FBQSxDQUFBLEdBQUF2RCxDQUFBQSxJQUFBLEVBQUEsQ0FBQStoRCxXQUFBLEdBQUEsR0FBQSxDQUFBNzNCLFFBQUEsQ0FBQTNtQixDQUFBLENBQUEsRUFBQSxDQUFBLENBQUEsQ0FBQXloQyxlQUFBLENBQUF6aEMsQ0FBQSxDQUFBNi9CLGFBQUEsQ0FBQSxLQUFBb2IsSUFBQSxDQUFBaC9CLENBQUEsQ0FBQSxlQUFBLENBQUEsQ0FBQTJqQixRQUFBLENBQUEsS0FBQXFiLElBQUEsQ0FBQWgvQixDQUFBLENBQUEsVUFBQSxDQUFBLENBQUEwakIsZUFBQSxDQUFBLEtBQUFzYixJQUFBLENBQUFoL0IsQ0FBQSxDQUFBLGlCQUFBLENBQUEsQ0FBQXlqQixVQUFBLENBQUEsS0FBQXViLElBQUEsQ0FBQWgvQixDQUFBLENBQUEsWUFBQSxDQUFBLENBQUEsQ0FBQSxDQURBLENBQ0F3L0IsV0FBQSxDQUFBLHFCQUFBeC9CLENBQUEsQ0FBQWpjLENBQUEsQ0FBQS9KLENBQUEsQ0FBQWk5QixDQUFBLENBQUEsQ0FBQWx6QixDQUFBLEdBQUFpYyxDQUFBLENBQUFraUMsVUFBQSxDQUFBbGlDLENBQUEsQ0FBQXErQixXQUFBLENBQUFyK0IsQ0FBQSxDQUFBbWlDLFlBQUEsQ0FBQW5pQyxDQUFBLENBQUFzK0IsYUFBQSxDQUFBdCtCLENBQUEsQ0FBQW9pQyxXQUFBLENBQUFwaUMsQ0FBQSxDQUFBdStCLFlBQUEsQ0FBQSxDQUFBLEdBQUExdEMsQ0FBQUEsQ0FBQSxDQUFBOU0sQ0FBQSxDQUFBLGtCQUFBQSxDQUFBLEVBQUFBLENBQUEsQ0FBQSxLQUFBay9DLHFCQUFBLENBQUEsR0FBQXppRCxDQUFBQSxJQUFBLENBQUF5MkIsQ0FBQSxDQUFBajlCLENBQUEsQ0FBQStKLENBQUEsQ0FBQSxDQUFBLENBQUEsS0FBQWsvQyxxQkFBQSxDQUFBLEdBQUF6aUQsQ0FBQUEsSUFBQSxDQUFBd2YsQ0FBQSxDQUFBb2lDLFdBQUEsQ0FBQXBpQyxDQUFBLENBQUFtaUMsWUFBQSxDQUFBbmlDLENBQUEsQ0FBQWtpQyxVQUFBLENBQUEsQ0FBQSxDQUFBLE1BQUEsTUFBQVMsVUFBQSxDQUFBLEtBQUEzRCxJQUFBLENBQUFoL0IsQ0FBQSxDQUFBLFlBQUEsQ0FBQSxDQUFBblAsQ0FBQSxDQUFBLEtBQUF5d0MsZ0JBQUEsQ0FBQXRoQyxDQUFBLENBQUEsQ0FBQSxDQUFBLENBREEsQ0FBQSxFQUNBQSxDQUFBLENBQUFobEIsRUFBQSxDQUFBNHJDLFVBQUEsQ0FBQSxTQUFBN2lDLENBQUEsQ0FBQSxDQUFBLEdBQUEsQ0FBQSxLQUFBMUksTUFBQSxDQUFBLE1BQUEsS0FBQSxDQUFBMmtCLENBQUEsQ0FBQTRtQixVQUFBLENBQUEyZixXQUFBLEdBQUF2bUMsQ0FBQSxDQUFBcm9CLFFBQUEsQ0FBQSxDQUFBNG5CLEVBQUEsQ0FBQSxXQUFBLENBQUFTLENBQUEsQ0FBQTRtQixVQUFBLENBQUFvYixtQkFBQSxFQUFBaGlDLENBQUEsQ0FBQTRtQixVQUFBLENBQUEyZixXQUFBLENBQUEsQ0FBQSxDQUFBLEVBQUEsSUFBQXZtQyxDQUFBLENBQUEsSUFBQUEsQ0FBQSxDQUFBNG1CLFVBQUEsQ0FBQWpFLFVBQUEsQ0FBQSxDQUFBdG5DLE1BQUEsRUFBQTJrQixDQUFBLENBQUEsTUFBQSxDQUFBLENBQUF1SCxNQUFBLENBQUF2SCxDQUFBLENBQUE0bUIsVUFBQSxDQUFBRixLQUFBLENBQUEsQ0FBQSxHQUFBMXNDLENBQUFBLENBQUEsQ0FBQXdELEtBQUEsQ0FBQXRDLFNBQUEsQ0FBQTlDLEtBQUEsQ0FBQUcsSUFBQSxDQUFBMkQsU0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLE1BQUEsVUFBQSxNQUFBNkgsQ0FBQUEsQ0FBQSxFQUFBLGVBQUFBLENBQUEsRUFBQSxZQUFBQSxDQUFBLEVBQUEsV0FBQUEsQ0FBQSxDQUFBLFdBQUFBLENBQUEsRUFBQSxJQUFBN0gsU0FBQSxDQUFBYixNQUFBLEVBQUEsVUFBQSxNQUFBYSxDQUFBQSxTQUFBLENBQUEsQ0FBQSxDQUFBLENBQUE4akIsQ0FBQSxDQUFBNG1CLFVBQUEsQ0FBQSxJQUFBN2lDLENBQUEsQ0FBQSxZQUFBLEVBQUF0TCxLQUFBLENBQUF1bkIsQ0FBQSxDQUFBNG1CLFVBQUEsQ0FBQSxDQUFBLEtBQUEsQ0FBQSxDQUFBLEVBQUFwdUMsTUFBQSxDQUFBd0IsQ0FBQSxDQUFBLENBQUEsQ0FBQSxLQUFBOEIsSUFBQSxDQUFBLFVBQUEsQ0FBQSxVQUFBLE1BQUFpSSxDQUFBQSxDQUFBLENBQUFpYyxDQUFBLENBQUE0bUIsVUFBQSxDQUFBLElBQUE3aUMsQ0FBQSxDQUFBLFlBQUEsRUFBQXRMLEtBQUEsQ0FBQXVuQixDQUFBLENBQUE0bUIsVUFBQSxDQUFBLENBQUEsSUFBQSxFQUFBcHVDLE1BQUEsQ0FBQXdCLENBQUEsQ0FBQSxDQUFBLENBQUFnbUIsQ0FBQSxDQUFBNG1CLFVBQUEsQ0FBQXFYLGlCQUFBLENBQUEsSUFBQSxDQUFBbDZDLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBaWMsQ0FBQSxDQUFBNG1CLFVBQUEsQ0FBQSxJQUFBN2lDLENBQUEsQ0FBQSxZQUFBLEVBQUF0TCxLQUFBLENBQUF1bkIsQ0FBQSxDQUFBNG1CLFVBQUEsQ0FBQSxDQUFBLEtBQUEsQ0FBQSxDQUFBLEVBQUFwdUMsTUFBQSxDQUFBd0IsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQURBLENBQ0FnbUIsQ0FBQSxDQUFBNG1CLFVBQUEsQ0FBQSxHQUFBM1AsQ0FBQUEsQ0FBQSxFQURBLENBQ0FqWCxDQUFBLENBQUE0bUIsVUFBQSxDQUFBMmYsV0FBQSxDQUFBLENBQUEsQ0FEQSxDQUNBdm1DLENBQUEsQ0FBQTRtQixVQUFBLENBQUF1QixJQUFBLENBQUEsR0FBQTNuQyxDQUFBQSxJQUFBLEVBQUEsQ0FBQXFpRCxPQUFBLEVBREEsQ0FDQTdpQyxDQUFBLENBQUE0bUIsVUFBQSxDQUFBaHNDLE9BQUEsQ0FBQSxRQURBLENBQ0FvbEIsQ0FBQSxDQUFBNG1CLFVBREEsQ0FDQTVtQixDQUFBLENBQUFtbkIsRUFBQSxDQUFBcWYsRUFBQSxDQUFBLENBQUEsQ0FBQSxjQUFBL2hELElBQUEsQ0FBQWdpRCxTQUFBLENBQUFDLFNBQUEsQ0FBQW5uRCxXQUFBLEVBQUEsQ0FEQSxDQUNBLEdBQUEyVCxDQUFBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUE4TSxDQUFBLENBQUFyb0IsUUFBQSxDQUFBLENBQUE0bkIsRUFBQSxDQUFBLFNBQUEsQ0FBQSxVQUFBLENBQUFyTSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxFQUFBOE0sQ0FBQSxDQUFBcW5CLE1BQUEsQ0FBQSxVQUFBLENBQUEsQ0FBQXpzQyxPQUFBLENBQUEsUUFBQSxDQUFBb0MsT0FBQSxDQUFBLENBQUEycEQsTUFBQSxDQUFBLHlDQUFBLENBQUFwVSxRQUFBLENBQUEsQ0FBQSxDQUFBbGYsS0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBdXpCLFVBQUEsQ0FBQSxxQkFBQSxDQUFBLEdBQUE3aUQsQ0FBQUEsQ0FBQSxDQUFBLElBQUEsQ0FBQSxLQUFBaWpDLE9BQUEsQ0FBQXpuQixFQUFBLENBQUEsYUFBQSxLQUFBc29CLFVBQUEsQ0FBQSxTQUFBN25CLENBQUEsQ0FBQSxDQUFBLE1BQUFqYyxDQUFBQSxDQUFBLENBQUE4aUQsVUFBQSxDQUFBN21DLENBQUEsQ0FBQSxDQUFBLENBQUEsRUFBQVQsRUFBQSxDQUFBLFNBQUEsS0FBQXNvQixVQUFBLENBQUEsU0FBQTd0QyxDQUFBLENBQUEsQ0FBQSxNQUFBLENBQUEsQ0FBQSxHQUFBZ21CLENBQUEsQ0FBQXhHLElBQUEsQ0FBQXhmLENBQUEsQ0FBQXFELE1BQUEsQ0FBQTBHLENBQUEsQ0FBQThqQyxVQUFBLENBQUEsb0JBQUEsQ0FBQSxFQUFBN25CLENBQUEsQ0FBQTdGLFVBQUEsQ0FBQW5nQixDQUFBLENBQUFxRCxNQUFBLENBQUEwRyxDQUFBLENBQUE4akMsVUFBQSxDQUFBLG9CQUFBLEVBQUE3dEMsQ0FBQSxDQUFBaXBCLHdCQUFBLEVBQUEsQ0FBQSxDQUFBLENBQUEsRUFBQSxJQUFBLEVBQUEsQ0FBQSxDQUFBLEVBQUEsS0FBQTZqQyxPQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBQyxhQUFBLENBQUEsd0JBQUEsQ0FBQSxLQUFBL2YsT0FBQSxDQUFBcG5CLEdBQUEsQ0FBQSxJQUFBLEtBQUFpb0IsVUFBQSxFQUFBLEtBQUFtZixrQkFBQSxFQUFBLEtBQUFydkQsUUFBQSxDQUFBaW9CLEdBQUEsQ0FBQSxhQUFBLEtBQUFpb0IsVUFBQSxDQUFBLEtBQUFtZixrQkFBQSxFQUFBcG5DLEdBQUEsQ0FBQSxXQUFBLEtBQUFpb0IsVUFBQSxDQUFBLEtBQUFvZixnQkFBQSxDQUFBLENBQUEsQ0FBQSxDQUFBSixVQUFBLENBQUEsb0JBQUE5aUQsQ0FBQSxDQUFBLENBQUEsR0FBQSxDQUFBbVAsQ0FBQSxDQUFBLENBQUEsS0FBQWcwQyxXQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsS0FBQUMsYUFBQSxFQUFBLEtBQUFDLFFBQUEsQ0FBQXJqRCxDQUFBLENBQUEsQ0FBQSxLQUFBc2pELGVBQUEsQ0FBQXRqRCxDQUFBLENBQUEsR0FBQS9KLENBQUFBLENBQUEsQ0FBQSxJQUFBLENBQUFpOUIsQ0FBQSxDQUFBLElBQUFsekIsQ0FBQSxDQUFBb2hCLEtBQUEsQ0FBQXRVLENBQUEsQ0FBQSxVQUFBLE1BQUEsTUFBQTdULE9BQUEsQ0FBQTJwRCxNQUFBLEVBQUE1aUQsQ0FBQSxDQUFBMUcsTUFBQSxDQUFBc0csUUFBQSxDQUFBcWMsQ0FBQSxDQUFBamMsQ0FBQSxDQUFBMUcsTUFBQSxDQUFBLENBQUE0VSxPQUFBLENBQUEsS0FBQWpWLE9BQUEsQ0FBQTJwRCxNQUFBLEVBQUF0ckQsTUFBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLE1BQUE0N0IsQ0FBQUEsQ0FBQSxFQUFBLENBQUFwbUIsQ0FBQSxFQUFBLEtBQUF5MkMsYUFBQSxDQUFBdmpELENBQUEsQ0FBQSxFQUFBLEtBQUF3akQsYUFBQSxDQUFBLENBQUEsS0FBQXZxRCxPQUFBLENBQUFxMkIsS0FBQSxDQUFBLEtBQUFrMEIsYUFBQSxHQUFBLEtBQUFDLGdCQUFBLENBQUE1d0MsVUFBQSxDQUFBLFVBQUEsQ0FBQTVjLENBQUEsQ0FBQXV0RCxhQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLEtBQUF2cUQsT0FBQSxDQUFBcTJCLEtBQUEsQ0FBQSxDQUFBLENBQUEsS0FBQW8wQixpQkFBQSxDQUFBMWpELENBQUEsR0FBQSxLQUFBMmpELGNBQUEsQ0FBQTNqRCxDQUFBLENBQUEsR0FBQSxLQUFBb2pELGFBQUEsQ0FBQSxLQUFBUSxXQUFBLENBQUE1akQsQ0FBQSxJQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsS0FBQW9qRCxhQUFBLEdBQUFwakQsQ0FBQSxDQUFBNGQsY0FBQSxHQUFBLENBQUEsQ0FBQSxHQUFBLENBQUEsQ0FBQSxHQUFBM0IsQ0FBQSxDQUFBeEcsSUFBQSxDQUFBelYsQ0FBQSxDQUFBMUcsTUFBQSxDQUFBLEtBQUF3cUMsVUFBQSxDQUFBLG9CQUFBLENBQUEsRUFBQTduQixDQUFBLENBQUE3RixVQUFBLENBQUFwVyxDQUFBLENBQUExRyxNQUFBLENBQUEsS0FBQXdxQyxVQUFBLENBQUEsb0JBQUEsQ0FBQSxDQUFBLEtBQUFtZixrQkFBQSxDQUFBLFNBQUFobkMsQ0FBQSxDQUFBLENBQUEsTUFBQWhtQixDQUFBQSxDQUFBLENBQUE0dEQsVUFBQSxDQUFBNW5DLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxLQUFBaW5DLGdCQUFBLENBQUEsU0FBQWpuQyxDQUFBLENBQUEsQ0FBQSxNQUFBaG1CLENBQUFBLENBQUEsQ0FBQW90RCxRQUFBLENBQUFwbkMsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLEtBQUFyb0IsUUFBQSxDQUFBNG5CLEVBQUEsQ0FBQSxhQUFBLEtBQUFzb0IsVUFBQSxDQUFBLEtBQUFtZixrQkFBQSxFQUFBem5DLEVBQUEsQ0FBQSxXQUFBLEtBQUFzb0IsVUFBQSxDQUFBLEtBQUFvZixnQkFBQSxDQUFBLENBQUFsakQsQ0FBQSxDQUFBNGQsY0FBQSxFQUFBLENBQUF6TyxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsRUFBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQTAwQyxVQUFBLENBQUEsb0JBQUE3akQsQ0FBQSxDQUFBLENBQUEsR0FBQSxLQUFBbWpELFdBQUEsQ0FBQSxDQUFBLEdBQUFsbkMsQ0FBQSxDQUFBbW5CLEVBQUEsQ0FBQXFmLEVBQUEsR0FBQSxDQUFBN3VELFFBQUEsQ0FBQWt3RCxZQUFBLEVBQUEsRUFBQWx3RCxRQUFBLENBQUFrd0QsWUFBQSxHQUFBLENBQUE5akQsQ0FBQSxDQUFBaWUsTUFBQSxDQUFBLE1BQUEsTUFBQW9sQyxRQUFBLENBQUFyakQsQ0FBQSxDQUFBLENBQUEsR0FBQSxDQUFBQSxDQUFBLENBQUFvaEIsS0FBQSxDQUFBLEdBQUFwaEIsQ0FBQSxDQUFBc2UsYUFBQSxDQUFBb0IsTUFBQSxFQUFBMWYsQ0FBQSxDQUFBc2UsYUFBQSxDQUFBd0IsT0FBQSxFQUFBOWYsQ0FBQSxDQUFBc2UsYUFBQSxDQUFBMkIsT0FBQSxFQUFBamdCLENBQUEsQ0FBQXNlLGFBQUEsQ0FBQThCLFFBQUEsQ0FBQSxLQUFBMmpDLGtCQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsSUFBQSxJQUFBLENBQUEsS0FBQUEsa0JBQUEsQ0FBQSxNQUFBLE1BQUFWLFFBQUEsQ0FBQXJqRCxDQUFBLENBQUEsQ0FBQSxPQUFBLENBQUFBLENBQUEsQ0FBQW9oQixLQUFBLEVBQUFwaEIsQ0FBQSxDQUFBaWUsTUFBQSxJQUFBLEtBQUFrbEMsV0FBQSxDQUFBLENBQUEsQ0FBQSxFQUFBLEtBQUFDLGFBQUEsRUFBQSxLQUFBWSxVQUFBLENBQUFoa0QsQ0FBQSxFQUFBQSxDQUFBLENBQUE0ZCxjQUFBLEVBQUEsR0FBQSxLQUFBOGxDLGlCQUFBLENBQUExakQsQ0FBQSxHQUFBLEtBQUEyakQsY0FBQSxDQUFBM2pELENBQUEsQ0FBQSxHQUFBLEtBQUFvakQsYUFBQSxDQUFBLEtBQUFRLFdBQUEsQ0FBQSxLQUFBTixlQUFBLENBQUF0akQsQ0FBQSxJQUFBLENBQUEsQ0FBQSxDQUFBLEtBQUFvakQsYUFBQSxDQUFBLEtBQUFZLFVBQUEsQ0FBQWhrRCxDQUFBLENBQUEsQ0FBQSxLQUFBcWpELFFBQUEsQ0FBQXJqRCxDQUFBLENBQUEsRUFBQSxDQUFBLEtBQUFvakQsYUFBQSxDQUFBLENBQUEsQ0FBQSxDQUFBQyxRQUFBLENBQUEsa0JBQUFyakQsQ0FBQSxDQUFBLENBQUEsS0FBQXBNLFFBQUEsQ0FBQWlvQixHQUFBLENBQUEsYUFBQSxLQUFBaW9CLFVBQUEsQ0FBQSxLQUFBbWYsa0JBQUEsRUFBQXBuQyxHQUFBLENBQUEsV0FBQSxLQUFBaW9CLFVBQUEsQ0FBQSxLQUFBb2YsZ0JBQUEsRUFBQSxLQUFBRSxhQUFBLEdBQUEsS0FBQUEsYUFBQSxDQUFBLENBQUEsQ0FBQSxDQUFBcGpELENBQUEsQ0FBQTFHLE1BQUEsR0FBQSxLQUFBZ3FELGVBQUEsQ0FBQWhxRCxNQUFBLEVBQUEyaUIsQ0FBQSxDQUFBeEcsSUFBQSxDQUFBelYsQ0FBQSxDQUFBMUcsTUFBQSxDQUFBLEtBQUF3cUMsVUFBQSxDQUFBLG9CQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxLQUFBbWdCLFVBQUEsQ0FBQWprRCxDQUFBLENBQUEsQ0FBQSxDQUFBLEtBQUF5akQsZ0JBQUEsR0FBQWgwQixZQUFBLENBQUEsS0FBQWcwQixnQkFBQSxDQUFBLENBQUEsTUFBQSxNQUFBQSxnQkFBQSxDQUFBLENBQUEsS0FBQU0sa0JBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQTUwQyxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUFuUCxDQUFBLENBQUE0ZCxjQUFBLEVBQUEsQ0FBQSxDQUFBLENBQUE4bEMsaUJBQUEsQ0FBQSwyQkFBQXpuQyxDQUFBLENBQUEsQ0FBQSxNQUFBcGlCLENBQUFBLElBQUEsQ0FBQXd1QixHQUFBLENBQUF4dUIsSUFBQSxDQUFBd3NDLEdBQUEsQ0FBQSxLQUFBaWQsZUFBQSxDQUFBcGpDLEtBQUEsQ0FBQWpFLENBQUEsQ0FBQWlFLEtBQUEsQ0FBQSxDQUFBcm1CLElBQUEsQ0FBQXdzQyxHQUFBLENBQUEsS0FBQWlkLGVBQUEsQ0FBQW5qQyxLQUFBLENBQUFsRSxDQUFBLENBQUFrRSxLQUFBLENBQUEsR0FBQSxLQUFBbG5CLE9BQUEsQ0FBQXUxQyxRQUFBLENBQUEsQ0FBQSxDQUFBbVYsY0FBQSxDQUFBLHlCQUFBLENBQUEsTUFBQSxNQUFBSCxhQUFBLENBQUEsQ0FBQSxDQUFBSSxXQUFBLENBQUEsc0JBQUEsQ0FBQSxDQUFBLENBQUFJLFVBQUEsQ0FBQSxxQkFBQSxDQUFBLENBQUEsQ0FBQUMsVUFBQSxDQUFBLHFCQUFBLENBQUEsQ0FBQSxDQUFBVixhQUFBLENBQUEsd0JBQUEsQ0FBQSxNQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUF0bkMsQ0FBQSxDQUFBbW5CLEVBQUEsQ0FBQThnQixNQUFBLENBQUEsQ0FBQTcxQyxHQUFBLENBQUEsYUFBQXJPLENBQUEsQ0FBQS9KLENBQUEsQ0FBQWk5QixDQUFBLENBQUEsQ0FBQSxHQUFBcG1CLENBQUFBLENBQUEsQ0FBQTgxQixDQUFBLENBQUEzbUIsQ0FBQSxDQUFBbW5CLEVBQUEsQ0FBQXBqQyxDQUFBLEVBQUE3SSxTQUFBLENBQUEsSUFBQTJWLENBQUEsR0FBQW9tQixDQUFBQSxDQUFBLEVBQUEwUCxDQUFBLENBQUF1aEIsT0FBQSxDQUFBcjNDLENBQUEsRUFBQTgxQixDQUFBLENBQUF1aEIsT0FBQSxDQUFBcjNDLENBQUEsR0FBQSxFQUFBLENBQUE4MUIsQ0FBQSxDQUFBdWhCLE9BQUEsQ0FBQXIzQyxDQUFBLEVBQUFuWSxJQUFBLENBQUEsQ0FBQXNCLENBQUEsQ0FBQWk5QixDQUFBLENBQUFwbUIsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBdFksSUFBQSxDQUFBLGNBQUF5bkIsQ0FBQSxDQUFBamMsQ0FBQSxDQUFBL0osQ0FBQSxDQUFBaTlCLENBQUEsQ0FBQSxDQUFBLEdBQUFwbUIsQ0FBQUEsQ0FBQSxDQUFBODFCLENBQUEsQ0FBQTNtQixDQUFBLENBQUFrb0MsT0FBQSxDQUFBbmtELENBQUEsQ0FBQSxDQUFBLEdBQUE0aUMsQ0FBQSxHQUFBMVAsQ0FBQSxFQUFBalgsQ0FBQSxDQUFBZ25CLE9BQUEsQ0FBQSxDQUFBLEVBQUF2c0MsVUFBQSxFQUFBLEtBQUF1bEIsQ0FBQSxDQUFBZ25CLE9BQUEsQ0FBQSxDQUFBLEVBQUF2c0MsVUFBQSxDQUFBcEIsUUFBQSxDQUFBLENBQUEsSUFBQXdYLENBQUEsQ0FBQSxDQUFBLENBQUE4MUIsQ0FBQSxDQUFBdHJDLE1BQUEsQ0FBQXdWLENBQUEsQ0FBQUEsQ0FBQSxFQUFBLEVBQUFtUCxDQUFBLENBQUFoakIsT0FBQSxDQUFBMnBDLENBQUEsQ0FBQTkxQixDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsR0FBQTgxQixDQUFBLENBQUE5MUIsQ0FBQSxDQUFBLENBQUEsQ0FBQSxFQUFBcFksS0FBQSxDQUFBdW5CLENBQUEsQ0FBQWduQixPQUFBLENBQUFodEMsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQWdtQixDQUFBLENBQUFtbkIsRUFBQSxDQUFBZ2hCLFFBQUEsQ0FBQSxTQUFBcGtELENBQUEsQ0FBQSxDQUFBQSxDQUFBLEVBQUEsU0FBQUEsQ0FBQSxDQUFBSixRQUFBLENBQUFwRSxXQUFBLEVBQUEsRUFBQXlnQixDQUFBLENBQUFqYyxDQUFBLENBQUEsQ0FBQTRlLE9BQUEsQ0FBQSxNQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEzQyxDQUFBLENBQUFxbkIsTUFBQSxDQUFBLGNBQUEsQ0FBQXJuQixDQUFBLENBQUFtbkIsRUFBQSxDQUFBaWhCLEtBQUEsQ0FBQSxDQUFBeHRELE9BQUEsQ0FBQSxRQUFBLENBQUFndEMsaUJBQUEsQ0FBQSxNQUFBLENBQUE1cUMsT0FBQSxDQUFBLENBQUFxckQsVUFBQSxDQUFBLENBQUEsQ0FBQSxDQUFBdmdDLFFBQUEsQ0FBQSxRQUFBLENBQUF3Z0MsSUFBQSxDQUFBLENBQUEsQ0FBQSxDQUFBQyxpQkFBQSxDQUFBLENBQUEsQ0FBQSxDQUFBQyxXQUFBLENBQUEsQ0FBQSxDQUFBLENBQUFuSSxNQUFBLENBQUEsTUFBQSxDQUFBb0ksUUFBQSxDQUFBLENBQUEsQ0FBQSxDQUFBQyxJQUFBLENBQUEsQ0FBQSxDQUFBLENBQUFub0MsTUFBQSxDQUFBLENBQUEsQ0FBQSxDQUFBb29DLE1BQUEsQ0FBQSxVQUFBLENBQUFDLFNBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQXg3QixPQUFBLENBQUEsQ0FBQSxDQUFBLENBQUF5N0IsZ0JBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQUMsTUFBQSxDQUFBLENBQUEsQ0FBQSxDQUFBQyxjQUFBLENBQUEsR0FBQSxDQUFBOWpELEtBQUEsQ0FBQSxTQUFBLENBQUErakQsTUFBQSxDQUFBLENBQUEsQ0FBQSxDQUFBQyxpQkFBQSxDQUFBLEVBQUEsQ0FBQUMsV0FBQSxDQUFBLEVBQUEsQ0FBQUMsSUFBQSxDQUFBLENBQUEsQ0FBQSxDQUFBQyxRQUFBLENBQUEsTUFBQSxDQUFBQyxhQUFBLENBQUEsRUFBQSxDQUFBL3hDLEtBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQWk1QixNQUFBLENBQUEsQ0FBQSxDQUFBLENBQUErWSxJQUFBLENBQUEsSUFBQSxDQUFBbCtDLEtBQUEsQ0FBQSxJQUFBLENBQUFzUCxJQUFBLENBQUEsSUFBQSxDQUFBLENBQUFrdUIsT0FBQSxDQUFBLGtCQUFBLENBQUEsYUFBQSxLQUFBNXJDLE9BQUEsQ0FBQTJyRCxNQUFBLEVBQUEsS0FBQVksb0JBQUEsRUFBQSxDQUFBLEtBQUF2c0QsT0FBQSxDQUFBcXJELFVBQUEsRUFBQSxLQUFBN2UsU0FBQSxDQUFBLGNBQUEsQ0FBQSxDQUFBLEtBQUFnZ0IsbUJBQUEsRUFBQSxDQUFBLEtBQUE1QyxVQUFBLEVBQUEsQ0FBQSxDQUFBLENBQUExZCxVQUFBLENBQUEsb0JBQUFscEIsQ0FBQSxDQUFBamMsQ0FBQSxDQUFBLENBQUEsS0FBQTJqQyxNQUFBLENBQUExbkIsQ0FBQSxDQUFBamMsQ0FBQSxFQUFBLFdBQUFpYyxDQUFBLEdBQUEsS0FBQXlwQyxzQkFBQSxHQUFBLEtBQUFELG1CQUFBLEVBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQXpnQixRQUFBLENBQUEsbUJBQUEsQ0FBQSxNQUFBLENBQUEsS0FBQTRmLE1BQUEsRUFBQSxLQUFBM2hCLE9BQUEsRUFBQXIyQixFQUFBLENBQUEsd0JBQUEsR0FBQSxLQUFBKzRDLGNBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxJQUFBLEVBQUEsR0FBQSxLQUFBRCxzQkFBQSxHQUFBLEtBQUExQyxhQUFBLEVBQUEsQ0FBQSxJQUFBLEVBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQU8sYUFBQSxDQUFBLHVCQUFBdmpELENBQUEsQ0FBQSxDQUFBLEdBQUEvSixDQUFBQSxDQUFBLENBQUEsS0FBQWdELE9BQUEsQ0FBQSxNQUFBLE1BQUEyckQsTUFBQSxFQUFBM3VELENBQUEsQ0FBQTBKLFFBQUEsRUFBQXNjLENBQUEsQ0FBQWpjLENBQUEsQ0FBQTFHLE1BQUEsQ0FBQSxDQUFBNFUsT0FBQSxDQUFBLHNCQUFBLEVBQUE1VyxNQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxFQUFBLEtBQUFrbEIsTUFBQSxDQUFBLEtBQUFvcEMsVUFBQSxDQUFBNWxELENBQUEsQ0FBQSxDQUFBLEtBQUF3YyxNQUFBLEVBQUEsS0FBQXFwQyxrQkFBQSxDQUFBN2xELENBQUEsRUFBQSxLQUFBOGxELFlBQUEsQ0FBQTd2RCxDQUFBLENBQUE0dUQsU0FBQSxHQUFBLENBQUEsQ0FBQSxDQUFBLFFBQUEsQ0FBQTV1RCxDQUFBLENBQUE0dUQsU0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLEVBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUFpQixZQUFBLENBQUEsc0JBQUE5bEQsQ0FBQSxDQUFBLENBQUEsS0FBQStsRCxZQUFBLENBQUEsS0FBQW55RCxRQUFBLENBQUFtUSxJQUFBLENBQUEvRCxDQUFBLEVBQUEvSCxHQUFBLENBQUEsVUFBQSxDQUFBLEdBQUErSCxDQUFBQSxDQUFBLENBQUFpYyxDQUFBLENBQUEsSUFBQSxDQUFBLENBQUEsTUFBQUEsQ0FBQUEsQ0FBQSxDQUFBLE9BQUEsQ0FBQSxDQUFBdkUsR0FBQSxDQUFBLFVBQUEsQ0FBQSxVQUFBLEVBQUFxTSxRQUFBLENBQUEvakIsQ0FBQSxDQUFBc0gsTUFBQSxFQUFBLEVBQUE2K0IsVUFBQSxDQUFBbm1DLENBQUEsQ0FBQW1tQyxVQUFBLEVBQUEsRUFBQUMsV0FBQSxDQUFBcG1DLENBQUEsQ0FBQW9tQyxXQUFBLEVBQUEsRUFBQXRLLE1BQUEsQ0FBQTk3QixDQUFBLENBQUE4N0IsTUFBQSxFQUFBLEVBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBa3FCLGNBQUEsQ0FBQSx5QkFBQSxDQUFBLEtBQUFELFlBQUEsR0FBQSxLQUFBQSxZQUFBLENBQUFoMkMsTUFBQSxHQUFBLE1BQUEsTUFBQWcyQyxZQUFBLEVBQUEsQ0FBQSxDQUFBRixrQkFBQSxDQUFBLDRCQUFBN2xELENBQUEsQ0FBQSxDQUFBLEdBQUEvSixDQUFBQSxDQUFBLENBQUFnbUIsQ0FBQSxDQUFBbW5CLEVBQUEsQ0FBQTluQixpQkFBQSxDQUFBLEtBQUExbkIsUUFBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUFzL0IsQ0FBQSxDQUFBalgsQ0FBQSxDQUFBamMsQ0FBQSxDQUFBMUcsTUFBQSxDQUFBLENBQUE0NUIsQ0FBQSxDQUFBaGxCLE9BQUEsQ0FBQWpZLENBQUEsRUFBQXFCLE1BQUEsRUFBQTJrQixDQUFBLENBQUFtbkIsRUFBQSxDQUFBZ2hCLFFBQUEsQ0FBQW51RCxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEydEQsV0FBQSxDQUFBLHFCQUFBNWpELENBQUEsQ0FBQSxDQUFBLEdBQUEvSixDQUFBQSxDQUFBLENBQUEsS0FBQWdELE9BQUEsQ0FBQSxNQUFBLE1BQUEyckQsTUFBQSxDQUFBLEtBQUFxQixhQUFBLENBQUFqbUQsQ0FBQSxDQUFBLENBQUEsS0FBQXlsQyxTQUFBLENBQUEsS0FBQW1mLE1BQUEsQ0FBQSx1QkFBQSxDQUFBLENBQUEsS0FBQXNCLHVCQUFBLEVBQUEsQ0FBQWpxQyxDQUFBLENBQUFtbkIsRUFBQSxDQUFBK2lCLFNBQUEsR0FBQWxxQyxDQUFBLENBQUFtbkIsRUFBQSxDQUFBK2lCLFNBQUEsQ0FBQXZ3QixPQUFBLENBQUEsSUFBQSxDQUFBLENBQUEsS0FBQXd3QixhQUFBLEVBQUEsQ0FBQSxLQUFBQyxXQUFBLENBQUEsS0FBQXpCLE1BQUEsQ0FBQWx0QyxHQUFBLENBQUEsVUFBQSxDQUFBLENBQUEsS0FBQSs0QixZQUFBLENBQUEsS0FBQW1VLE1BQUEsQ0FBQW5VLFlBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLEtBQUE1VCxZQUFBLENBQUEsS0FBQStuQixNQUFBLENBQUEvbkIsWUFBQSxFQUFBLENBQUEsS0FBQXlwQixnQkFBQSxDQUFBLEtBQUExQixNQUFBLENBQUFwMkMsT0FBQSxHQUFBM0ssTUFBQSxDQUFBLFVBQUEsQ0FBQSxNQUFBLFVBQUFvWSxDQUFBLENBQUEsSUFBQSxDQUFBLENBQUF2RSxHQUFBLENBQUEsVUFBQSxDQUFBLENBQUEsQ0FBQSxFQUFBcGdCLE1BQUEsQ0FBQSxDQUFBLENBQUEsS0FBQWl2RCxXQUFBLENBQUEsS0FBQXRqQixPQUFBLENBQUFuSCxNQUFBLEVBQUEsQ0FBQSxLQUFBMHFCLGVBQUEsQ0FBQXhtRCxDQUFBLENBQUEsQ0FBQSxLQUFBeW1ELGdCQUFBLENBQUEsS0FBQWpoQyxRQUFBLENBQUEsS0FBQWtoQyxpQkFBQSxDQUFBMW1ELENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLEtBQUEybUQsYUFBQSxDQUFBM21ELENBQUEsQ0FBQWtnQixLQUFBLENBQUEsS0FBQTBtQyxhQUFBLENBQUE1bUQsQ0FBQSxDQUFBbWdCLEtBQUEsQ0FBQWxxQixDQUFBLENBQUF5dUQsUUFBQSxFQUFBLEtBQUFtQyx1QkFBQSxDQUFBNXdELENBQUEsQ0FBQXl1RCxRQUFBLENBQUEsQ0FBQSxLQUFBb0MsZUFBQSxFQUFBLENBQUEsS0FBQTNqQixRQUFBLENBQUEsT0FBQSxDQUFBbmpDLENBQUEsSUFBQSxDQUFBLENBQUEsRUFBQSxLQUFBK21ELE1BQUEsR0FBQSxDQUFBLENBQUEsR0FBQSxLQUFBYix1QkFBQSxHQUFBanFDLENBQUEsQ0FBQW1uQixFQUFBLENBQUEraUIsU0FBQSxFQUFBLENBQUFsd0QsQ0FBQSxDQUFBK3dELGFBQUEsRUFBQS9xQyxDQUFBLENBQUFtbkIsRUFBQSxDQUFBK2lCLFNBQUEsQ0FBQWMsY0FBQSxDQUFBLElBQUEsQ0FBQWpuRCxDQUFBLENBQUEsQ0FBQSxLQUFBZ2tELFVBQUEsQ0FBQWhrRCxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQWljLENBQUEsQ0FBQW1uQixFQUFBLENBQUEraUIsU0FBQSxFQUFBbHFDLENBQUEsQ0FBQW1uQixFQUFBLENBQUEraUIsU0FBQSxDQUFBZSxTQUFBLENBQUEsSUFBQSxDQUFBbG5ELENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBd21ELGVBQUEsQ0FBQSx5QkFBQXZxQyxDQUFBLENBQUEsQ0FBQSxLQUFBNmYsTUFBQSxDQUFBLENBQUF4NEIsR0FBQSxDQUFBLEtBQUFpakQsV0FBQSxDQUFBampELEdBQUEsQ0FBQSxLQUFBNmpELE9BQUEsQ0FBQTdqRCxHQUFBLENBQUFzbUIsSUFBQSxDQUFBLEtBQUEyOEIsV0FBQSxDQUFBMzhCLElBQUEsQ0FBQSxLQUFBdTlCLE9BQUEsQ0FBQXY5QixJQUFBLENBQUFxN0IsTUFBQSxDQUFBLENBQUEsQ0FBQSxDQUFBMzlDLE1BQUEsQ0FBQSxLQUFBOC9DLGdCQUFBLEVBQUEsQ0FBQWxoRCxRQUFBLENBQUEsS0FBQW1oRCxrQkFBQSxFQUFBLENBQUEsQ0FBQSxLQUFBdnJCLE1BQUEsQ0FBQXBkLEtBQUEsQ0FBQSxDQUFBa0wsSUFBQSxDQUFBM04sQ0FBQSxDQUFBaUUsS0FBQSxDQUFBLEtBQUE0YixNQUFBLENBQUFsUyxJQUFBLENBQUF0bUIsR0FBQSxDQUFBMlksQ0FBQSxDQUFBa0UsS0FBQSxDQUFBLEtBQUEyYixNQUFBLENBQUF4NEIsR0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBMGdELFVBQUEsQ0FBQSxvQkFBQWhrRCxDQUFBLENBQUEvSixDQUFBLENBQUEsQ0FBQSxHQUFBLEtBQUFxd0QsZ0JBQUEsR0FBQSxLQUFBeHFCLE1BQUEsQ0FBQXgwQixNQUFBLENBQUEsS0FBQTgvQyxnQkFBQSxFQUFBLEVBQUEsS0FBQTVoQyxRQUFBLENBQUEsS0FBQWtoQyxpQkFBQSxDQUFBMW1ELENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLEtBQUF1bUQsV0FBQSxDQUFBLEtBQUFlLGtCQUFBLENBQUEsVUFBQSxDQUFBLENBQUEsQ0FBQXJ4RCxDQUFBLENBQUEsQ0FBQSxHQUFBaTlCLENBQUFBLENBQUEsQ0FBQSxLQUFBcTBCLE9BQUEsRUFBQSxDQUFBLEdBQUEsS0FBQXBrQixRQUFBLENBQUEsTUFBQSxDQUFBbmpDLENBQUEsQ0FBQWt6QixDQUFBLElBQUEsQ0FBQSxDQUFBLENBQUEsTUFBQSxNQUFBbXdCLFFBQUEsQ0FBQSxHQUFBcG5DLENBQUFBLENBQUEsQ0FBQW1DLEtBQUEsQ0FBQSxTQUFBLENBQUFwZSxDQUFBLENBQUEsRUFBQSxDQUFBLENBQUEsQ0FBQSxLQUFBd2xCLFFBQUEsQ0FBQTBOLENBQUEsQ0FBQTFOLFFBQUEsQ0FBQSxPQUFBLE1BQUFvL0IsTUFBQSxDQUFBLENBQUEsRUFBQXB0QyxLQUFBLENBQUFvUyxJQUFBLENBQUEsS0FBQXBFLFFBQUEsQ0FBQW9FLElBQUEsQ0FBQSxJQUFBLENBQUEsS0FBQWc3QixNQUFBLENBQUEsQ0FBQSxFQUFBcHRDLEtBQUEsQ0FBQWxVLEdBQUEsQ0FBQSxLQUFBa2lCLFFBQUEsQ0FBQWxpQixHQUFBLENBQUEsSUFBQSxDQUFBMlksQ0FBQSxDQUFBbW5CLEVBQUEsQ0FBQStpQixTQUFBLEVBQUFscUMsQ0FBQSxDQUFBbW5CLEVBQUEsQ0FBQStpQixTQUFBLENBQUFaLElBQUEsQ0FBQSxJQUFBLENBQUF2bEQsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBaWtELFVBQUEsQ0FBQSxvQkFBQWprRCxDQUFBLENBQUEsQ0FBQSxHQUFBL0osQ0FBQUEsQ0FBQSxDQUFBLElBQUEsQ0FBQWk5QixDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsTUFBQWpYLENBQUFBLENBQUEsQ0FBQW1uQixFQUFBLENBQUEraUIsU0FBQSxFQUFBLENBQUEsS0FBQWx0RCxPQUFBLENBQUErdEQsYUFBQSxHQUFBOXpCLENBQUEsQ0FBQWpYLENBQUEsQ0FBQW1uQixFQUFBLENBQUEraUIsU0FBQSxDQUFBcUIsSUFBQSxDQUFBLElBQUEsQ0FBQXhuRCxDQUFBLENBQUEsRUFBQSxLQUFBeW5ELE9BQUEsR0FBQXYwQixDQUFBLENBQUEsS0FBQXUwQixPQUFBLENBQUEsS0FBQUEsT0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsWUFBQSxLQUFBeHVELE9BQUEsQ0FBQThyRCxNQUFBLEVBQUEsQ0FBQTd4QixDQUFBLEVBQUEsVUFBQSxLQUFBajZCLE9BQUEsQ0FBQThyRCxNQUFBLEVBQUE3eEIsQ0FBQSxFQUFBLEtBQUFqNkIsT0FBQSxDQUFBOHJELE1BQUEsR0FBQSxDQUFBLENBQUEsRUFBQTlvQyxDQUFBLENBQUE3bUIsVUFBQSxDQUFBLEtBQUE2RCxPQUFBLENBQUE4ckQsTUFBQSxHQUFBLEtBQUE5ckQsT0FBQSxDQUFBOHJELE1BQUEsQ0FBQXZ3RCxJQUFBLENBQUEsS0FBQXl1QyxPQUFBLENBQUEvUCxDQUFBLENBQUEsQ0FBQWpYLENBQUEsQ0FBQSxLQUFBMm9DLE1BQUEsQ0FBQSxDQUFBcjJCLE9BQUEsQ0FBQSxLQUFBazRCLGdCQUFBLENBQUE5L0IsUUFBQSxDQUFBLEtBQUExdEIsT0FBQSxDQUFBK3JELGNBQUEsQ0FBQSxFQUFBLENBQUEsQ0FBQSxVQUFBLENBQUEvdUQsQ0FBQSxDQUFBa3RDLFFBQUEsQ0FBQSxNQUFBLENBQUFuakMsQ0FBQSxJQUFBLENBQUEsQ0FBQSxFQUFBL0osQ0FBQSxDQUFBOHdELE1BQUEsRUFBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLEtBQUE1akIsUUFBQSxDQUFBLE1BQUEsQ0FBQW5qQyxDQUFBLElBQUEsQ0FBQSxDQUFBLEVBQUEsS0FBQSttRCxNQUFBLEVBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUExRCxRQUFBLENBQUEsa0JBQUFyakQsQ0FBQSxDQUFBLENBQUEsTUFBQSxNQUFBZ21ELGNBQUEsR0FBQS9wQyxDQUFBLENBQUFtbkIsRUFBQSxDQUFBK2lCLFNBQUEsRUFBQWxxQyxDQUFBLENBQUFtbkIsRUFBQSxDQUFBK2lCLFNBQUEsQ0FBQXVCLFFBQUEsQ0FBQSxJQUFBLENBQUExbkQsQ0FBQSxDQUFBLENBQUEsS0FBQTJuRCxhQUFBLENBQUEvNkMsRUFBQSxDQUFBNU0sQ0FBQSxDQUFBMUcsTUFBQSxHQUFBLEtBQUEycEMsT0FBQSxDQUFBcmtCLE9BQUEsQ0FBQSxPQUFBLENBQUEsQ0FBQTNDLENBQUEsQ0FBQW1uQixFQUFBLENBQUFpaEIsS0FBQSxDQUFBbHRELFNBQUEsQ0FBQWtzRCxRQUFBLENBQUE3dUQsSUFBQSxDQUFBLElBQUEsQ0FBQXdMLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQTRpRCxNQUFBLENBQUEsaUJBQUEsQ0FBQSxNQUFBLE1BQUFnQyxNQUFBLENBQUFoNEMsRUFBQSxDQUFBLHdCQUFBLEVBQUEsS0FBQXkyQyxRQUFBLENBQUEsR0FBQXBuQyxDQUFBQSxDQUFBLENBQUFtQyxLQUFBLENBQUEsU0FBQSxDQUFBLENBQUE5a0IsTUFBQSxDQUFBLEtBQUEycEMsT0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLEtBQUE4akIsTUFBQSxFQUFBLENBQUEsSUFBQSxDQUFBLENBQUEsQ0FBQW5CLFVBQUEsQ0FBQSxvQkFBQTVsRCxDQUFBLENBQUEsQ0FBQSxNQUFBLE1BQUEvRyxPQUFBLENBQUF1akIsTUFBQSxDQUFBLENBQUEsQ0FBQVAsQ0FBQSxDQUFBamMsQ0FBQSxDQUFBMUcsTUFBQSxDQUFBLENBQUE0VSxPQUFBLENBQUEsS0FBQSswQixPQUFBLENBQUFsL0IsSUFBQSxDQUFBLEtBQUE5SyxPQUFBLENBQUF1akIsTUFBQSxDQUFBLEVBQUFsbEIsTUFBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQW11RCxtQkFBQSxDQUFBLDhCQUFBLENBQUEsS0FBQWtDLGFBQUEsQ0FBQSxLQUFBMXVELE9BQUEsQ0FBQXVqQixNQUFBLENBQUEsS0FBQXltQixPQUFBLENBQUFsL0IsSUFBQSxDQUFBLEtBQUE5SyxPQUFBLENBQUF1akIsTUFBQSxDQUFBLENBQUEsS0FBQXltQixPQUFBLENBQUEsS0FBQXdDLFNBQUEsQ0FBQSxLQUFBa2lCLGFBQUEsQ0FBQSxxQkFBQSxDQUFBLENBQUEsQ0FBQSxDQUFBakMsc0JBQUEsQ0FBQSxpQ0FBQSxDQUFBLEtBQUF6Z0IsWUFBQSxDQUFBLEtBQUEwaUIsYUFBQSxDQUFBLHFCQUFBLEVBQUEsQ0FBQSxDQUFBMUIsYUFBQSxDQUFBLHVCQUFBam1ELENBQUEsQ0FBQSxDQUFBLEdBQUEvSixDQUFBQSxDQUFBLENBQUEsS0FBQWdELE9BQUEsQ0FBQWk2QixDQUFBLENBQUFqWCxDQUFBLENBQUE3bUIsVUFBQSxDQUFBYSxDQUFBLENBQUEydUQsTUFBQSxDQUFBLENBQUE5M0MsQ0FBQSxDQUFBb21CLENBQUEsQ0FBQWpYLENBQUEsQ0FBQWhtQixDQUFBLENBQUEydUQsTUFBQSxDQUFBbHdELEtBQUEsQ0FBQSxLQUFBdXVDLE9BQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBampDLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxVQUFBL0osQ0FBQSxDQUFBMnVELE1BQUEsQ0FBQSxLQUFBM2hCLE9BQUEsQ0FBQTVwQyxLQUFBLEdBQUF5MkIsVUFBQSxDQUFBLElBQUEsQ0FBQSxDQUFBLEtBQUFtVCxPQUFBLENBQUEsTUFBQW4yQixDQUFBQSxDQUFBLENBQUEwQixPQUFBLENBQUEsTUFBQSxFQUFBbFgsTUFBQSxFQUFBd1YsQ0FBQSxDQUFBaVgsUUFBQSxDQUFBLFdBQUE5dEIsQ0FBQSxDQUFBOHRCLFFBQUEsQ0FBQSxLQUFBa2YsT0FBQSxDQUFBLENBQUEsRUFBQXZzQyxVQUFBLENBQUFULENBQUEsQ0FBQTh0QixRQUFBLENBQUEsQ0FBQW1QLENBQUEsRUFBQXBtQixDQUFBLENBQUEsQ0FBQSxDQUFBLEdBQUEsS0FBQW0yQixPQUFBLENBQUEsQ0FBQSxDQUFBLEVBQUEsS0FBQXVpQixvQkFBQSxFQUFBLENBQUExNEMsQ0FBQSxDQUFBLENBQUEsQ0FBQSxHQUFBLEtBQUFtMkIsT0FBQSxDQUFBLENBQUEsQ0FBQSxFQUFBLG1CQUFBamlDLElBQUEsQ0FBQThMLENBQUEsQ0FBQTRLLEdBQUEsQ0FBQSxVQUFBLENBQUEsQ0FBQSxFQUFBNUssQ0FBQSxDQUFBNEssR0FBQSxDQUFBLFVBQUEsQ0FBQSxVQUFBLENBQUEsQ0FBQTVLLENBQUEsQ0FBQSxDQUFBLENBQUEwNEMsb0JBQUEsQ0FBQSwrQkFBQSxDQUFBLGFBQUF4a0QsSUFBQSxDQUFBLEtBQUFpaUMsT0FBQSxDQUFBdnJCLEdBQUEsQ0FBQSxVQUFBLENBQUEsSUFBQSxLQUFBdXJCLE9BQUEsQ0FBQSxDQUFBLEVBQUF6ckIsS0FBQSxDQUFBZ08sUUFBQSxDQUFBLFVBQUEsRUFBQSxDQUFBLENBQUFxaEMsdUJBQUEsQ0FBQSxpQ0FBQTdtRCxDQUFBLENBQUEsQ0FBQSxVQUFBLE1BQUFBLENBQUFBLENBQUEsR0FBQUEsQ0FBQSxDQUFBQSxDQUFBLENBQUExRSxLQUFBLENBQUEsR0FBQSxDQUFBLEVBQUEyZ0IsQ0FBQSxDQUFBdmlCLE9BQUEsQ0FBQXNHLENBQUEsSUFBQUEsQ0FBQSxDQUFBLENBQUE0cEIsSUFBQSxDQUFBLENBQUE1cEIsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBc0QsR0FBQSxDQUFBLENBQUF0RCxDQUFBLENBQUEsQ0FBQSxDQUFBLEVBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxRQUFBQSxDQUFBQSxDQUFBLEdBQUEsS0FBQTg3QixNQUFBLENBQUFwZCxLQUFBLENBQUFrTCxJQUFBLENBQUE1cEIsQ0FBQSxDQUFBNHBCLElBQUEsQ0FBQSxLQUFBdTlCLE9BQUEsQ0FBQXY5QixJQUFBLENBQUEsQ0FBQSxTQUFBNXBCLENBQUFBLENBQUEsR0FBQSxLQUFBODdCLE1BQUEsQ0FBQXBkLEtBQUEsQ0FBQWtMLElBQUEsQ0FBQSxLQUFBZytCLGlCQUFBLENBQUFyaUMsS0FBQSxDQUFBdmxCLENBQUEsQ0FBQW9sQixLQUFBLENBQUEsS0FBQStoQyxPQUFBLENBQUF2OUIsSUFBQSxDQUFBLENBQUEsT0FBQTVwQixDQUFBQSxDQUFBLEdBQUEsS0FBQTg3QixNQUFBLENBQUFwZCxLQUFBLENBQUFwYixHQUFBLENBQUF0RCxDQUFBLENBQUFzRCxHQUFBLENBQUEsS0FBQTZqRCxPQUFBLENBQUE3akQsR0FBQSxDQUFBLENBQUEsVUFBQXRELENBQUFBLENBQUEsR0FBQSxLQUFBODdCLE1BQUEsQ0FBQXBkLEtBQUEsQ0FBQXBiLEdBQUEsQ0FBQSxLQUFBc2tELGlCQUFBLENBQUFsaEMsTUFBQSxDQUFBMW1CLENBQUEsQ0FBQWdzQyxNQUFBLENBQUEsS0FBQW1iLE9BQUEsQ0FBQTdqRCxHQUFBLENBQUEsQ0FBQSxDQUFBLENBQUF1a0QsV0FBQSxDQUFBLHFCQUFBNXJDLENBQUEsQ0FBQSxDQUFBLE1BQUEsZ0JBQUFqYixJQUFBLENBQUFpYixDQUFBLENBQUEwOUIsT0FBQSxHQUFBMTlCLENBQUEsR0FBQSxLQUFBcm9CLFFBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUF3ekQsZ0JBQUEsQ0FBQSwyQkFBQSxDQUFBLEdBQUFwbkQsQ0FBQUEsQ0FBQSxDQUFBLEtBQUE2OEIsWUFBQSxDQUFBZixNQUFBLEVBQUEsQ0FBQTdsQyxDQUFBLENBQUEsS0FBQXJDLFFBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxNQUFBLGFBQUEsS0FBQXl5RCxXQUFBLEVBQUEsS0FBQTVWLFlBQUEsQ0FBQSxDQUFBLElBQUF4NkMsQ0FBQSxFQUFBZ21CLENBQUEsQ0FBQXpmLFFBQUEsQ0FBQSxLQUFBaTBDLFlBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxLQUFBNVQsWUFBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLEdBQUE3OEIsQ0FBQSxDQUFBNHBCLElBQUEsRUFBQSxLQUFBNm1CLFlBQUEsQ0FBQXpsQixVQUFBLEVBQUEsQ0FBQWhyQixDQUFBLENBQUFzRCxHQUFBLEVBQUEsS0FBQW10QyxZQUFBLENBQUExbEIsU0FBQSxFQUFBLEVBQUEsS0FBQTg4QixXQUFBLENBQUEsS0FBQWhyQixZQUFBLENBQUEsQ0FBQSxDQUFBLElBQUE3OEIsQ0FBQSxDQUFBLENBQUFzRCxHQUFBLENBQUEsQ0FBQSxDQUFBc21CLElBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUF0bUIsR0FBQSxDQUFBdEQsQ0FBQSxDQUFBc0QsR0FBQSxFQUFBcWpCLFFBQUEsQ0FBQSxLQUFBa1csWUFBQSxDQUFBbmxCLEdBQUEsQ0FBQSxnQkFBQSxDQUFBLENBQUEsRUFBQSxDQUFBLEVBQUEsQ0FBQSxDQUFBLENBQUFrUyxJQUFBLENBQUE1cEIsQ0FBQSxDQUFBNHBCLElBQUEsRUFBQWpELFFBQUEsQ0FBQSxLQUFBa1csWUFBQSxDQUFBbmxCLEdBQUEsQ0FBQSxpQkFBQSxDQUFBLENBQUEsRUFBQSxDQUFBLEVBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEydkMsa0JBQUEsQ0FBQSw2QkFBQSxDQUFBLEdBQUEsYUFBQSxLQUFBaEIsV0FBQSxDQUFBLE1BQUEsQ0FBQS9pRCxHQUFBLENBQUEsQ0FBQSxDQUFBc21CLElBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxHQUFBM04sQ0FBQUEsQ0FBQSxDQUFBLEtBQUFnbkIsT0FBQSxDQUFBemQsUUFBQSxFQUFBLENBQUF4bEIsQ0FBQSxDQUFBLEtBQUE2bkQsV0FBQSxDQUFBLEtBQUFwWCxZQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxNQUFBLENBQUFudEMsR0FBQSxDQUFBMlksQ0FBQSxDQUFBM1ksR0FBQSxFQUFBcWpCLFFBQUEsQ0FBQSxLQUFBaStCLE1BQUEsQ0FBQWx0QyxHQUFBLENBQUEsS0FBQSxDQUFBLENBQUEsRUFBQSxDQUFBLEVBQUEsQ0FBQSxHQUFBMVgsQ0FBQSxDQUFBLENBQUEsQ0FBQSxLQUFBeXdDLFlBQUEsQ0FBQTFsQixTQUFBLEVBQUEsQ0FBQSxDQUFBbkIsSUFBQSxDQUFBM04sQ0FBQSxDQUFBMk4sSUFBQSxFQUFBakQsUUFBQSxDQUFBLEtBQUFpK0IsTUFBQSxDQUFBbHRDLEdBQUEsQ0FBQSxNQUFBLENBQUEsQ0FBQSxFQUFBLENBQUEsRUFBQSxDQUFBLEdBQUExWCxDQUFBLENBQUEsQ0FBQSxDQUFBLEtBQUF5d0MsWUFBQSxDQUFBemxCLFVBQUEsRUFBQSxDQUFBLENBQUEsQ0FDQSxDQURBLENBQ0FvN0IsYUFBQSxDQUFBLHdCQUFBLENBQUEsS0FBQWUsT0FBQSxDQUFBLENBQUF2OUIsSUFBQSxDQUFBakQsUUFBQSxDQUFBLEtBQUFzYyxPQUFBLENBQUF2ckIsR0FBQSxDQUFBLFlBQUEsQ0FBQSxDQUFBLEVBQUEsQ0FBQSxFQUFBLENBQUEsQ0FBQXBVLEdBQUEsQ0FBQXFqQixRQUFBLENBQUEsS0FBQXNjLE9BQUEsQ0FBQXZyQixHQUFBLENBQUEsV0FBQSxDQUFBLENBQUEsRUFBQSxDQUFBLEVBQUEsQ0FBQSxDQUFBME4sS0FBQSxDQUFBdUIsUUFBQSxDQUFBLEtBQUFzYyxPQUFBLENBQUF2ckIsR0FBQSxDQUFBLGFBQUEsQ0FBQSxDQUFBLEVBQUEsQ0FBQSxFQUFBLENBQUEsQ0FBQXMwQixNQUFBLENBQUFybEIsUUFBQSxDQUFBLEtBQUFzYyxPQUFBLENBQUF2ckIsR0FBQSxDQUFBLGNBQUEsQ0FBQSxDQUFBLEVBQUEsQ0FBQSxFQUFBLENBQUEsQ0FBQSxDQUFBLENBREEsQ0FDQXd1Qyx1QkFBQSxDQUFBLGtDQUFBLENBQUEsS0FBQTBCLGlCQUFBLENBQUEsQ0FBQXJpQyxLQUFBLENBQUEsS0FBQXEvQixNQUFBLENBQUF6ZSxVQUFBLEVBQUEsQ0FBQXpmLE1BQUEsQ0FBQSxLQUFBaytCLE1BQUEsQ0FBQXhlLFdBQUEsRUFBQSxDQUFBLENBQUEsQ0FEQSxDQUNBMGdCLGVBQUEsQ0FBQSwwQkFBQSxDQUFBLEdBQUE5bUQsQ0FBQUEsQ0FBQSxDQUFBL0osQ0FBQSxDQUFBaTlCLENBQUEsQ0FBQXBtQixDQUFBLENBQUEsS0FBQTdULE9BQUEsQ0FBQTJwQyxDQUFBLENBQUEsS0FBQWh2QyxRQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsTUFBQSxNQUFBazBELGlCQUFBLENBQUEsSUFBQSxDQUFBaDdDLENBQUEsQ0FBQTIzQyxXQUFBLENBQUEsV0FBQTMzQyxDQUFBLENBQUEyM0MsV0FBQSxFQUFBLEtBQUFBLFdBQUEsQ0FBQSxDQUFBeG9DLENBQUEsQ0FBQWxvQixNQUFBLENBQUEsQ0FBQWkzQixVQUFBLEdBQUEsS0FBQThRLE1BQUEsQ0FBQTUxQixRQUFBLENBQUEwakIsSUFBQSxDQUFBLEtBQUFrUyxNQUFBLENBQUF4MEIsTUFBQSxDQUFBc2lCLElBQUEsQ0FBQTNOLENBQUEsQ0FBQWxvQixNQUFBLENBQUEsQ0FBQWczQixTQUFBLEdBQUEsS0FBQStRLE1BQUEsQ0FBQTUxQixRQUFBLENBQUE1QyxHQUFBLENBQUEsS0FBQXc0QixNQUFBLENBQUF4MEIsTUFBQSxDQUFBaEUsR0FBQSxDQUFBMlksQ0FBQSxDQUFBbG9CLE1BQUEsQ0FBQSxDQUFBaTNCLFVBQUEsR0FBQS9PLENBQUEsQ0FBQWxvQixNQUFBLENBQUEsQ0FBQXd4QixLQUFBLEVBQUEsQ0FBQSxLQUFBcWlDLGlCQUFBLENBQUFyaUMsS0FBQSxDQUFBLEtBQUE0aEMsT0FBQSxDQUFBdjlCLElBQUEsQ0FBQTNOLENBQUEsQ0FBQWxvQixNQUFBLENBQUEsQ0FBQWczQixTQUFBLElBQUE5TyxDQUFBLENBQUFsb0IsTUFBQSxDQUFBLENBQUEyeUIsTUFBQSxJQUFBa2MsQ0FBQSxDQUFBcHFCLElBQUEsQ0FBQTloQixVQUFBLENBQUFrd0MsWUFBQSxFQUFBLEtBQUFnaEIsaUJBQUEsQ0FBQWxoQyxNQUFBLENBQUEsS0FBQXlnQyxPQUFBLENBQUE3akQsR0FBQSxDQUFBLENBQUEsSUFBQSxFQUFBLEVBQUEsYUFBQXdKLENBQUEsQ0FBQTIzQyxXQUFBLEVBQUEsS0FBQUEsV0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQXhvQyxDQUFBLENBQUEybUIsQ0FBQSxDQUFBLENBQUFyZCxLQUFBLEdBQUEsS0FBQXFpQyxpQkFBQSxDQUFBcmlDLEtBQUEsQ0FBQSxLQUFBNGhDLE9BQUEsQ0FBQXY5QixJQUFBLENBQUEsQ0FBQTNOLENBQUEsQ0FBQTJtQixDQUFBLENBQUEsQ0FBQWxjLE1BQUEsSUFBQWtjLENBQUEsQ0FBQXBxQixJQUFBLENBQUE5aEIsVUFBQSxDQUFBa3dDLFlBQUEsRUFBQSxLQUFBZ2hCLGlCQUFBLENBQUFsaEMsTUFBQSxDQUFBLEtBQUF5Z0MsT0FBQSxDQUFBN2pELEdBQUEsQ0FBQSxDQUFBLElBQUEsRUFBQSxFQUFBd0osQ0FBQSxDQUFBMjNDLFdBQUEsQ0FBQXB0RCxXQUFBLEdBQUFvQyxLQUFBLEVBQUEsS0FBQWdyRCxXQUFBLENBQUEzM0MsQ0FBQSxDQUFBMjNDLFdBQUEsQ0FBQSxJQUFBLEVBQUEsR0FBQSxXQUFBMzNDLENBQUEsQ0FBQTIzQyxXQUFBLEdBQUEzM0MsQ0FBQSxDQUFBMjNDLFdBQUEsQ0FBQSxLQUFBRyxNQUFBLENBQUEsQ0FBQSxFQUFBbHVELFVBQUEsRUFBQVQsQ0FBQSxDQUFBZ21CLENBQUEsQ0FBQW5QLENBQUEsQ0FBQTIzQyxXQUFBLENBQUEsQ0FBQXZ4QixDQUFBLENBQUFqOUIsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBaTlCLENBQUEsR0FBQWx6QixDQUFBLENBQUEsZ0JBQUFnQixJQUFBLENBQUEvSyxDQUFBLENBQUF5aEIsR0FBQSxDQUFBLFVBQUEsQ0FBQSxDQUFBLENBQUEsS0FBQStzQyxXQUFBLENBQUEsQ0FBQSxDQUFBOTlCLFFBQUEsQ0FBQTF3QixDQUFBLENBQUF5aEIsR0FBQSxDQUFBLGlCQUFBLENBQUEsQ0FBQSxFQUFBLENBQUEsRUFBQSxDQUFBLEdBQUFpUCxRQUFBLENBQUExd0IsQ0FBQSxDQUFBeWhCLEdBQUEsQ0FBQSxhQUFBLENBQUEsQ0FBQSxFQUFBLENBQUEsRUFBQSxDQUFBLENBQUEsQ0FBQSxDQUFBaVAsUUFBQSxDQUFBMXdCLENBQUEsQ0FBQXloQixHQUFBLENBQUEsZ0JBQUEsQ0FBQSxDQUFBLEVBQUEsQ0FBQSxFQUFBLENBQUEsR0FBQWlQLFFBQUEsQ0FBQTF3QixDQUFBLENBQUF5aEIsR0FBQSxDQUFBLFlBQUEsQ0FBQSxDQUFBLEVBQUEsQ0FBQSxFQUFBLENBQUEsQ0FBQSxDQUFBLENBQUExWCxDQUFBLENBQUFuRyxJQUFBLENBQUF3dUIsR0FBQSxDQUFBNkssQ0FBQSxDQUFBeVQsV0FBQSxDQUFBelQsQ0FBQSxDQUFBeE4sV0FBQSxDQUFBLENBQUF3TixDQUFBLENBQUF4TixXQUFBLEdBQUFpQixRQUFBLENBQUExd0IsQ0FBQSxDQUFBeWhCLEdBQUEsQ0FBQSxrQkFBQSxDQUFBLENBQUEsRUFBQSxDQUFBLEVBQUEsQ0FBQSxHQUFBaVAsUUFBQSxDQUFBMXdCLENBQUEsQ0FBQXloQixHQUFBLENBQUEsY0FBQSxDQUFBLENBQUEsRUFBQSxDQUFBLEVBQUEsQ0FBQSxFQUFBLEtBQUFrd0MsaUJBQUEsQ0FBQXJpQyxLQUFBLENBQUEsS0FBQTRoQyxPQUFBLENBQUF2OUIsSUFBQSxDQUFBLEtBQUF1OUIsT0FBQSxDQUFBL2hDLEtBQUEsQ0FBQSxDQUFBcGxCLENBQUEsQ0FBQW5HLElBQUEsQ0FBQXd1QixHQUFBLENBQUE2SyxDQUFBLENBQUEwVCxZQUFBLENBQUExVCxDQUFBLENBQUF1RyxZQUFBLENBQUEsQ0FBQXZHLENBQUEsQ0FBQXVHLFlBQUEsR0FBQTlTLFFBQUEsQ0FBQTF3QixDQUFBLENBQUF5aEIsR0FBQSxDQUFBLG1CQUFBLENBQUEsQ0FBQSxFQUFBLENBQUEsRUFBQSxDQUFBLEdBQUFpUCxRQUFBLENBQUExd0IsQ0FBQSxDQUFBeWhCLEdBQUEsQ0FBQSxlQUFBLENBQUEsQ0FBQSxFQUFBLENBQUEsRUFBQSxDQUFBLEVBQUEsS0FBQWt3QyxpQkFBQSxDQUFBbGhDLE1BQUEsQ0FBQSxLQUFBeWdDLE9BQUEsQ0FBQTdqRCxHQUFBLENBQUEsS0FBQTZqRCxPQUFBLENBQUFuYixNQUFBLENBQUEsQ0FBQSxLQUFBOGIsaUJBQUEsQ0FBQTd4RCxDQUFBLENBQUEsQ0FBQSxJQUFBLEVBQUEsQ0FBQSxFQUFBLEtBQUF3dUQsV0FBQSxDQUFBLElBQUEsQ0FBQSxJQUFBLEVBQUEsQ0FBQSxDQUFBLENBREEsQ0FDQTZDLGtCQUFBLENBQUEsNEJBQUFyckMsQ0FBQSxDQUFBamMsQ0FBQSxDQUFBLENBQUFBLENBQUEsR0FBQUEsQ0FBQSxDQUFBLEtBQUF3bEIsUUFBQSxDQUFBLENBQUEsR0FBQXZ2QixDQUFBQSxDQUFBLENBQUEsYUFBQWdtQixDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBaVgsQ0FBQSxDQUFBLEtBQUEyMEIsV0FBQSxDQUFBLEtBQUFwWCxZQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxNQUFBLENBQUFudEMsR0FBQSxDQUFBdEQsQ0FBQSxDQUFBc0QsR0FBQSxDQUFBLEtBQUF3NEIsTUFBQSxDQUFBNTFCLFFBQUEsQ0FBQTVDLEdBQUEsQ0FBQXJOLENBQUEsQ0FBQSxLQUFBNmxDLE1BQUEsQ0FBQXgwQixNQUFBLENBQUFoRSxHQUFBLENBQUFyTixDQUFBLENBQUEsQ0FBQSxVQUFBLEtBQUFvd0QsV0FBQSxDQUFBLENBQUEsS0FBQXZxQixNQUFBLENBQUFtcEIsTUFBQSxDQUFBM2hELEdBQUEsQ0FBQTR2QixDQUFBLENBQUEsQ0FBQSxDQUFBLEtBQUE0SSxNQUFBLENBQUFtcEIsTUFBQSxDQUFBM2hELEdBQUEsRUFBQXJOLENBQUEsQ0FBQTJ6QixJQUFBLENBQUE1cEIsQ0FBQSxDQUFBNHBCLElBQUEsQ0FBQSxLQUFBa1MsTUFBQSxDQUFBNTFCLFFBQUEsQ0FBQTBqQixJQUFBLENBQUEzekIsQ0FBQSxDQUFBLEtBQUE2bEMsTUFBQSxDQUFBeDBCLE1BQUEsQ0FBQXNpQixJQUFBLENBQUEzekIsQ0FBQSxDQUFBLENBQUEsVUFBQSxLQUFBb3dELFdBQUEsQ0FBQSxDQUFBLEtBQUF2cUIsTUFBQSxDQUFBbXBCLE1BQUEsQ0FBQXI3QixJQUFBLENBQUFzSixDQUFBLENBQUEsQ0FBQSxDQUFBLEtBQUE0SSxNQUFBLENBQUFtcEIsTUFBQSxDQUFBcjdCLElBQUEsRUFBQTN6QixDQUFBLENBQUEsQ0FBQSxDQURBLENBQ0F5d0QsaUJBQUEsQ0FBQSwyQkFBQXpxQyxDQUFBLENBQUFqYyxDQUFBLENBQUEsQ0FBQSxHQUFBL0osQ0FBQUEsQ0FBQSxDQUFBaTlCLENBQUEsQ0FBQXBtQixDQUFBLENBQUE4MUIsQ0FBQSxDQUFBemxDLENBQUEsQ0FBQSxLQUFBbEUsT0FBQSxDQUFBK3BDLENBQUEsQ0FBQSxLQUFBNmtCLFdBQUEsQ0FBQSxLQUFBcFgsWUFBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUFwTixDQUFBLENBQUFwbkIsQ0FBQSxDQUFBaUUsS0FBQSxDQUFBalMsQ0FBQSxDQUFBZ08sQ0FBQSxDQUFBa0UsS0FBQSxDQUFBLE1BQUE2aUIsQ0FBQUEsQ0FBQSxFQUFBLEtBQUFsSCxNQUFBLENBQUFtcEIsTUFBQSxHQUFBLEtBQUFucEIsTUFBQSxDQUFBbXBCLE1BQUEsQ0FBQSxDQUFBM2hELEdBQUEsQ0FBQSxLQUFBbXRDLFlBQUEsQ0FBQTFsQixTQUFBLEVBQUEsQ0FBQW5CLElBQUEsQ0FBQSxLQUFBNm1CLFlBQUEsQ0FBQXpsQixVQUFBLEVBQUEsQ0FBQSxFQUFBaHJCLENBQUEsR0FBQSxLQUFBeWtELFdBQUEsR0FBQSxLQUFBcUQsaUJBQUEsRUFBQTUwQixDQUFBLENBQUEsS0FBQTQwQixpQkFBQSxDQUFBaHNCLE1BQUEsRUFBQSxDQUFBN2xDLENBQUEsQ0FBQSxDQUFBLEtBQUF3dUQsV0FBQSxDQUFBLENBQUEsRUFBQXZ4QixDQUFBLENBQUF0SixJQUFBLENBQUEsS0FBQTY2QixXQUFBLENBQUEsQ0FBQSxFQUFBdnhCLENBQUEsQ0FBQTV2QixHQUFBLENBQUEsS0FBQW1oRCxXQUFBLENBQUEsQ0FBQSxFQUFBdnhCLENBQUEsQ0FBQXRKLElBQUEsQ0FBQSxLQUFBNjZCLFdBQUEsQ0FBQSxDQUFBLEVBQUF2eEIsQ0FBQSxDQUFBNXZCLEdBQUEsQ0FBQSxFQUFBck4sQ0FBQSxDQUFBLEtBQUF3dUQsV0FBQSxDQUFBeG9DLENBQUEsQ0FBQWlFLEtBQUEsQ0FBQSxLQUFBNGIsTUFBQSxDQUFBcGQsS0FBQSxDQUFBa0wsSUFBQSxDQUFBM3pCLENBQUEsQ0FBQSxDQUFBLENBQUEsR0FBQW90QyxDQUFBLENBQUFwdEMsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLEtBQUE2bEMsTUFBQSxDQUFBcGQsS0FBQSxDQUFBa0wsSUFBQSxDQUFBLENBQUEzTixDQUFBLENBQUFrRSxLQUFBLENBQUEsS0FBQTJiLE1BQUEsQ0FBQXBkLEtBQUEsQ0FBQXBiLEdBQUEsQ0FBQXJOLENBQUEsQ0FBQSxDQUFBLENBQUEsR0FBQWdZLENBQUEsQ0FBQWhZLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxLQUFBNmxDLE1BQUEsQ0FBQXBkLEtBQUEsQ0FBQXBiLEdBQUEsQ0FBQSxDQUFBMlksQ0FBQSxDQUFBaUUsS0FBQSxDQUFBLEtBQUE0YixNQUFBLENBQUFwZCxLQUFBLENBQUFrTCxJQUFBLENBQUEzekIsQ0FBQSxDQUFBLENBQUEsQ0FBQSxHQUFBb3RDLENBQUEsQ0FBQXB0QyxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsS0FBQTZsQyxNQUFBLENBQUFwZCxLQUFBLENBQUFrTCxJQUFBLENBQUEsQ0FBQTNOLENBQUEsQ0FBQWtFLEtBQUEsQ0FBQSxLQUFBMmIsTUFBQSxDQUFBcGQsS0FBQSxDQUFBcGIsR0FBQSxDQUFBck4sQ0FBQSxDQUFBLENBQUEsQ0FBQSxHQUFBZ1ksQ0FBQSxDQUFBaFksQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLEtBQUE2bEMsTUFBQSxDQUFBcGQsS0FBQSxDQUFBcGIsR0FBQSxDQUFBLEVBQUFuRyxDQUFBLENBQUF3bkQsSUFBQSxHQUFBNzNDLENBQUEsQ0FBQTNQLENBQUEsQ0FBQXduRCxJQUFBLENBQUEsQ0FBQSxFQUFBLEtBQUFpQyxhQUFBLENBQUEvc0QsSUFBQSxDQUFBK3JCLEtBQUEsQ0FBQSxDQUFBM1gsQ0FBQSxDQUFBLEtBQUEyNEMsYUFBQSxFQUFBenBELENBQUEsQ0FBQXduRCxJQUFBLENBQUEsQ0FBQSxDQUFBLEVBQUF4bkQsQ0FBQSxDQUFBd25ELElBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxLQUFBaUMsYUFBQSxDQUFBMzRDLENBQUEsQ0FBQWhZLENBQUEsQ0FBQTZXLENBQUEsQ0FBQSxLQUFBZ3ZCLE1BQUEsQ0FBQXBkLEtBQUEsQ0FBQXBiLEdBQUEsRUFBQXJOLENBQUEsQ0FBQSxDQUFBLENBQUEsRUFBQTZXLENBQUEsQ0FBQSxLQUFBZ3ZCLE1BQUEsQ0FBQXBkLEtBQUEsQ0FBQXBiLEdBQUEsQ0FBQXJOLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQTZXLENBQUEsQ0FBQUEsQ0FBQSxDQUFBLEtBQUFndkIsTUFBQSxDQUFBcGQsS0FBQSxDQUFBcGIsR0FBQSxFQUFBck4sQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBNlcsQ0FBQSxDQUFBM1AsQ0FBQSxDQUFBd25ELElBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQTczQyxDQUFBLENBQUEzUCxDQUFBLENBQUF3bkQsSUFBQSxDQUFBLENBQUEsQ0FBQSxDQUFBNzNDLENBQUEsQ0FBQTgxQixDQUFBLENBQUF6bEMsQ0FBQSxDQUFBd25ELElBQUEsQ0FBQSxDQUFBLEVBQUEsS0FBQWdDLGFBQUEsQ0FBQTlzRCxJQUFBLENBQUErckIsS0FBQSxDQUFBLENBQUF5ZCxDQUFBLENBQUEsS0FBQXNqQixhQUFBLEVBQUF4cEQsQ0FBQSxDQUFBd25ELElBQUEsQ0FBQSxDQUFBLENBQUEsRUFBQXhuRCxDQUFBLENBQUF3bkQsSUFBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLEtBQUFnQyxhQUFBLENBQUF0akIsQ0FBQSxDQUFBcHRDLENBQUEsQ0FBQTJzQyxDQUFBLENBQUEsS0FBQTlHLE1BQUEsQ0FBQXBkLEtBQUEsQ0FBQWtMLElBQUEsRUFBQTN6QixDQUFBLENBQUEsQ0FBQSxDQUFBLEVBQUEyc0MsQ0FBQSxDQUFBLEtBQUE5RyxNQUFBLENBQUFwZCxLQUFBLENBQUFrTCxJQUFBLENBQUEzekIsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBMnNDLENBQUEsQ0FBQUEsQ0FBQSxDQUFBLEtBQUE5RyxNQUFBLENBQUFwZCxLQUFBLENBQUFrTCxJQUFBLEVBQUEzekIsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBMnNDLENBQUEsQ0FBQXpsQyxDQUFBLENBQUF3bkQsSUFBQSxDQUFBLENBQUEsQ0FBQSxDQUFBL2hCLENBQUEsQ0FBQXpsQyxDQUFBLENBQUF3bkQsSUFBQSxDQUFBLENBQUEsQ0FBQSxDQUFBL2hCLENBQUEsQ0FBQSxDQUFBLE1BQUF6bEMsQ0FBQSxDQUFBb25ELElBQUEsR0FBQWxoQixDQUFBLENBQUEsS0FBQXNqQixhQUFBLENBQUEsQ0FBQSxNQUFBeHBELENBQUEsQ0FBQW9uRCxJQUFBLEdBQUF0MkMsQ0FBQSxDQUFBLEtBQUEyNEMsYUFBQSxDQUFBLENBQUEsQ0FBQSxDQUFBdGpELEdBQUEsQ0FBQTJLLENBQUEsQ0FBQSxLQUFBNnRCLE1BQUEsQ0FBQXBkLEtBQUEsQ0FBQXBiLEdBQUEsQ0FBQSxLQUFBdzRCLE1BQUEsQ0FBQTUxQixRQUFBLENBQUE1QyxHQUFBLENBQUEsS0FBQXc0QixNQUFBLENBQUF4MEIsTUFBQSxDQUFBaEUsR0FBQSxFQUFBLFVBQUEsS0FBQStpRCxXQUFBLENBQUEsQ0FBQSxLQUFBdnFCLE1BQUEsQ0FBQW1wQixNQUFBLENBQUEzaEQsR0FBQSxDQUFBMC9CLENBQUEsQ0FBQSxDQUFBLENBQUEsS0FBQWxILE1BQUEsQ0FBQW1wQixNQUFBLENBQUEzaEQsR0FBQSxDQUFBLENBQUFzbUIsSUFBQSxDQUFBeVosQ0FBQSxDQUFBLEtBQUF2SCxNQUFBLENBQUFwZCxLQUFBLENBQUFrTCxJQUFBLENBQUEsS0FBQWtTLE1BQUEsQ0FBQTUxQixRQUFBLENBQUEwakIsSUFBQSxDQUFBLEtBQUFrUyxNQUFBLENBQUF4MEIsTUFBQSxDQUFBc2lCLElBQUEsRUFBQSxVQUFBLEtBQUF5OEIsV0FBQSxDQUFBLENBQUEsS0FBQXZxQixNQUFBLENBQUFtcEIsTUFBQSxDQUFBcjdCLElBQUEsQ0FBQW9aLENBQUEsQ0FBQSxDQUFBLENBQUEsS0FBQWxILE1BQUEsQ0FBQW1wQixNQUFBLENBQUFyN0IsSUFBQSxDQUFBLENBQUEsQ0FBQSxDQURBLENBQ0FtOUIsTUFBQSxDQUFBLGlCQUFBLENBQUEsS0FBQTloQixZQUFBLENBQUEsS0FBQTJmLE1BQUEsQ0FBQSx1QkFBQSxFQUFBLEtBQUFBLE1BQUEsQ0FBQSxDQUFBLElBQUEsS0FBQTNoQixPQUFBLENBQUEsQ0FBQSxDQUFBLEVBQUEsS0FBQThrQixtQkFBQSxFQUFBLEtBQUFuRCxNQUFBLENBQUE3MEMsTUFBQSxFQUFBLENBQUEsS0FBQTYwQyxNQUFBLENBQUEsSUFBQSxDQUFBLEtBQUFtRCxtQkFBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLEtBQUFwQyxjQUFBLEVBQUEsS0FBQWhoQixPQUFBLEVBQUEsQ0FBQSxDQURBLENBQ0F4QixRQUFBLENBQUEsa0JBQUFuakMsQ0FBQSxDQUFBL0osQ0FBQSxDQUFBaTlCLENBQUEsQ0FBQSxDQUFBLE1BQUFBLENBQUFBLENBQUEsQ0FBQUEsQ0FBQSxFQUFBLEtBQUFxMEIsT0FBQSxFQUFBLENBQUF0ckMsQ0FBQSxDQUFBbW5CLEVBQUEsQ0FBQThnQixNQUFBLENBQUExdkQsSUFBQSxDQUFBLElBQUEsQ0FBQXdMLENBQUEsQ0FBQSxDQUFBL0osQ0FBQSxDQUFBaTlCLENBQUEsQ0FBQSxJQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLHFCQUFBbHlCLElBQUEsQ0FBQWhCLENBQUEsSUFBQSxLQUFBdW1ELFdBQUEsQ0FBQSxLQUFBZSxrQkFBQSxDQUFBLFVBQUEsQ0FBQSxDQUFBcDBCLENBQUEsQ0FBQTRJLE1BQUEsQ0FBQSxLQUFBeXFCLFdBQUEsQ0FBQSxDQUFBdHFDLENBQUEsQ0FBQXNuQixNQUFBLENBQUFwc0MsU0FBQSxDQUFBZ3NDLFFBQUEsQ0FBQTN1QyxJQUFBLENBQUEsSUFBQSxDQUFBd0wsQ0FBQSxDQUFBL0osQ0FBQSxDQUFBaTlCLENBQUEsQ0FBQSxDQUFBLENBREEsQ0FDQWl4QixPQUFBLENBQUEsRUFEQSxDQUNBb0QsT0FBQSxDQUFBLGtCQUFBLENBQUEsTUFBQSxDQUFBM0MsTUFBQSxDQUFBLEtBQUFBLE1BQUEsQ0FBQXAvQixRQUFBLENBQUEsS0FBQUEsUUFBQSxDQUFBaWhDLGdCQUFBLENBQUEsS0FBQUEsZ0JBQUEsQ0FBQTNxQixNQUFBLENBQUEsS0FBQXlxQixXQUFBLENBQUEsQ0FBQSxDQURBLENBQUEsQ0FBQSxDQUNBdHFDLENBQUEsQ0FBQW1uQixFQUFBLENBQUE4Z0IsTUFBQSxDQUFBNzFDLEdBQUEsQ0FBQSxXQUFBLENBQUEsbUJBQUEsQ0FBQSxDQUFBaEgsS0FBQSxDQUFBLGVBQUFySCxDQUFBLENBQUEvSixDQUFBLENBQUFpOUIsQ0FBQSxDQUFBLENBQUEsR0FBQXBtQixDQUFBQSxDQUFBLENBQUFtUCxDQUFBLENBQUFqakIsTUFBQSxDQUFBLEVBQUEsQ0FBQS9DLENBQUEsQ0FBQSxDQUFBcStDLElBQUEsQ0FBQXBoQixDQUFBLENBQUErUCxPQUFBLENBQUEsQ0FBQSxDQUFBL1AsQ0FBQSxDQUFBODBCLFNBQUEsQ0FBQSxFQUFBLENBQUEvckMsQ0FBQSxDQUFBaVgsQ0FBQSxDQUFBajZCLE9BQUEsQ0FBQXVyRCxpQkFBQSxDQUFBLENBQUF6c0QsSUFBQSxDQUFBLFVBQUEsQ0FBQSxHQUFBOUIsQ0FBQUEsQ0FBQSxDQUFBZ21CLENBQUEsQ0FBQSxJQUFBLENBQUEsQ0FBQWdzQyxRQUFBLENBQUEsVUFBQSxDQUFBLENBQUFoeUQsQ0FBQSxFQUFBLENBQUFBLENBQUEsQ0FBQWdELE9BQUEsQ0FBQTBHLFFBQUEsR0FBQXV6QixDQUFBLENBQUE4MEIsU0FBQSxDQUFBcnpELElBQUEsQ0FBQXNCLENBQUEsRUFBQUEsQ0FBQSxDQUFBNnVELGdCQUFBLEVBQUEsQ0FBQTd1RCxDQUFBLENBQUFrdEMsUUFBQSxDQUFBLFVBQUEsQ0FBQW5qQyxDQUFBLENBQUE4TSxDQUFBLENBQUEsRUFBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUE2SixJQUFBLENBQUEsY0FBQTNXLENBQUEsQ0FBQS9KLENBQUEsQ0FBQWk5QixDQUFBLENBQUEsQ0FBQSxHQUFBcG1CLENBQUFBLENBQUEsQ0FBQW1QLENBQUEsQ0FBQWpqQixNQUFBLENBQUEsRUFBQSxDQUFBL0MsQ0FBQSxDQUFBLENBQUFxK0MsSUFBQSxDQUFBcGhCLENBQUEsQ0FBQStQLE9BQUEsQ0FBQSxDQUFBLENBQUEvUCxDQUFBLENBQUE2MEIsbUJBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQTlyQyxDQUFBLENBQUFsa0IsSUFBQSxDQUFBbTdCLENBQUEsQ0FBQTgwQixTQUFBLENBQUEsVUFBQSxDQUFBLEdBQUEvckMsQ0FBQUEsQ0FBQSxDQUFBLElBQUEsQ0FBQUEsQ0FBQSxDQUFBaXNDLE1BQUEsRUFBQWpzQyxDQUFBLENBQUFpc0MsTUFBQSxDQUFBLENBQUEsQ0FBQWgxQixDQUFBLENBQUE2MEIsbUJBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQTlyQyxDQUFBLENBQUE4ckMsbUJBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQTlyQyxDQUFBLENBQUFrc0MsVUFBQSxDQUFBLENBQUEzaUMsUUFBQSxDQUFBdkosQ0FBQSxDQUFBbXNDLFdBQUEsQ0FBQTF3QyxHQUFBLENBQUEsVUFBQSxDQUFBLENBQUFwVSxHQUFBLENBQUEyWSxDQUFBLENBQUFtc0MsV0FBQSxDQUFBMXdDLEdBQUEsQ0FBQSxLQUFBLENBQUEsQ0FBQWtTLElBQUEsQ0FBQTNOLENBQUEsQ0FBQW1zQyxXQUFBLENBQUExd0MsR0FBQSxDQUFBLE1BQUEsQ0FBQSxDQUFBLENBQUF1RSxDQUFBLENBQUFnb0MsVUFBQSxDQUFBamtELENBQUEsQ0FBQSxDQUFBaWMsQ0FBQSxDQUFBaGpCLE9BQUEsQ0FBQTJyRCxNQUFBLENBQUEzb0MsQ0FBQSxDQUFBaGpCLE9BQUEsQ0FBQW92RCxPQUFBLEdBQUFwc0MsQ0FBQSxDQUFBOHJDLG1CQUFBLENBQUEsQ0FBQSxDQUFBLENBQUE5ckMsQ0FBQSxDQUFBa25CLFFBQUEsQ0FBQSxZQUFBLENBQUFuakMsQ0FBQSxDQUFBOE0sQ0FBQSxDQUFBLEVBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBeTRDLElBQUEsQ0FBQSxjQUFBdmxELENBQUEsQ0FBQS9KLENBQUEsQ0FBQWk5QixDQUFBLENBQUEsQ0FBQWpYLENBQUEsQ0FBQWxrQixJQUFBLENBQUFtN0IsQ0FBQSxDQUFBODBCLFNBQUEsQ0FBQSxVQUFBLENBQUEsR0FBQWw3QyxDQUFBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUE4MUIsQ0FBQSxDQUFBLElBQUEsQ0FBQUEsQ0FBQSxDQUFBMmpCLFdBQUEsQ0FBQXJ6QixDQUFBLENBQUFxekIsV0FBQSxDQUFBM2pCLENBQUEsQ0FBQWdsQixpQkFBQSxDQUFBMTBCLENBQUEsQ0FBQTAwQixpQkFBQSxDQUFBaGxCLENBQUEsQ0FBQTlHLE1BQUEsQ0FBQXBkLEtBQUEsQ0FBQXdVLENBQUEsQ0FBQTRJLE1BQUEsQ0FBQXBkLEtBQUEsQ0FBQWtrQixDQUFBLENBQUEwbEIsZUFBQSxDQUFBMWxCLENBQUEsQ0FBQTJsQixjQUFBLElBQUF6N0MsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBbVAsQ0FBQSxDQUFBbGtCLElBQUEsQ0FBQW03QixDQUFBLENBQUE4MEIsU0FBQSxDQUFBLFVBQUEsQ0FBQSxNQUFBLE1BQUF6QixXQUFBLENBQUFyekIsQ0FBQSxDQUFBcXpCLFdBQUEsQ0FBQSxLQUFBcUIsaUJBQUEsQ0FBQTEwQixDQUFBLENBQUEwMEIsaUJBQUEsQ0FBQSxLQUFBOXJCLE1BQUEsQ0FBQXBkLEtBQUEsQ0FBQXdVLENBQUEsQ0FBQTRJLE1BQUEsQ0FBQXBkLEtBQUEsQ0FBQSxPQUFBa2tCLENBQUEsRUFBQSxLQUFBMGxCLGVBQUEsQ0FBQSxLQUFBQyxjQUFBLENBQUEsRUFBQXRzQyxDQUFBLENBQUF6ZixRQUFBLENBQUFvbUMsQ0FBQSxDQUFBSyxPQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsS0FBQUEsT0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLEdBQUFuMkIsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBQSxDQUFBLEVBQUE4MUIsQ0FBQSxDQUFBc2xCLE1BQUEsR0FBQXRsQixDQUFBLENBQUFzbEIsTUFBQSxDQUFBLENBQUEsQ0FBQWgxQixDQUFBLENBQUFzMUIsT0FBQSxDQUFBdnlELENBQUEsQ0FBQTJ1RCxNQUFBLENBQUF0OUMsTUFBQSxFQUFBLENBQUFzN0IsQ0FBQSxDQUFBNmxCLFdBQUEsQ0FBQXh5RCxDQUFBLENBQUEydUQsTUFBQSxDQUFBN2dDLFFBQUEsQ0FBQTZlLENBQUEsQ0FBQUssT0FBQSxFQUFBeHRCLElBQUEsQ0FBQSxrQkFBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUFtdEIsQ0FBQSxDQUFBM3BDLE9BQUEsQ0FBQW92RCxPQUFBLENBQUF6bEIsQ0FBQSxDQUFBM3BDLE9BQUEsQ0FBQTJyRCxNQUFBLENBQUFoaUIsQ0FBQSxDQUFBM3BDLE9BQUEsQ0FBQTJyRCxNQUFBLENBQUEsVUFBQSxDQUFBLE1BQUEzdUQsQ0FBQUEsQ0FBQSxDQUFBMnVELE1BQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUE1a0QsQ0FBQSxDQUFBMUcsTUFBQSxDQUFBc3BDLENBQUEsQ0FBQTZsQixXQUFBLENBQUEsQ0FBQSxDQUFBLENBQUE3bEIsQ0FBQSxDQUFBMmdCLGFBQUEsQ0FBQXZqRCxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQTRpQyxDQUFBLENBQUFnaEIsV0FBQSxDQUFBNWpELENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBNGlDLENBQUEsQ0FBQTlHLE1BQUEsQ0FBQXBkLEtBQUEsQ0FBQXBiLEdBQUEsQ0FBQTR2QixDQUFBLENBQUE0SSxNQUFBLENBQUFwZCxLQUFBLENBQUFwYixHQUFBLENBQUFzL0IsQ0FBQSxDQUFBOUcsTUFBQSxDQUFBcGQsS0FBQSxDQUFBa0wsSUFBQSxDQUFBc0osQ0FBQSxDQUFBNEksTUFBQSxDQUFBcGQsS0FBQSxDQUFBa0wsSUFBQSxDQUFBZ1osQ0FBQSxDQUFBOUcsTUFBQSxDQUFBeDBCLE1BQUEsQ0FBQXNpQixJQUFBLEVBQUFzSixDQUFBLENBQUE0SSxNQUFBLENBQUF4MEIsTUFBQSxDQUFBc2lCLElBQUEsQ0FBQWdaLENBQUEsQ0FBQTlHLE1BQUEsQ0FBQXgwQixNQUFBLENBQUFzaUIsSUFBQSxDQUFBZ1osQ0FBQSxDQUFBOUcsTUFBQSxDQUFBeDBCLE1BQUEsQ0FBQWhFLEdBQUEsRUFBQTR2QixDQUFBLENBQUE0SSxNQUFBLENBQUF4MEIsTUFBQSxDQUFBaEUsR0FBQSxDQUFBcy9CLENBQUEsQ0FBQTlHLE1BQUEsQ0FBQXgwQixNQUFBLENBQUFoRSxHQUFBLENBQUE0dkIsQ0FBQSxDQUFBaVEsUUFBQSxDQUFBLFlBQUEsQ0FBQW5qQyxDQUFBLENBQUEsQ0FBQWt6QixDQUFBLENBQUF1MEIsT0FBQSxDQUFBN2tCLENBQUEsQ0FBQUssT0FBQSxDQUFBaG5CLENBQUEsQ0FBQWxrQixJQUFBLENBQUFtN0IsQ0FBQSxDQUFBODBCLFNBQUEsQ0FBQSxVQUFBLENBQUEsS0FBQWxELGdCQUFBLEdBQUEsQ0FBQSxDQUFBLENBQUE1eEIsQ0FBQSxDQUFBdTFCLFdBQUEsQ0FBQXYxQixDQUFBLENBQUErUCxPQUFBLENBQUFMLENBQUEsQ0FBQThsQixXQUFBLENBQUF4MUIsQ0FBQSxFQUFBMFAsQ0FBQSxDQUFBNmxCLFdBQUEsR0FBQTdsQixDQUFBLENBQUFvaEIsVUFBQSxDQUFBaGtELENBQUEsRUFBQS9KLENBQUEsQ0FBQXV2QixRQUFBLENBQUFvZCxDQUFBLENBQUFwZCxRQUFBLENBQUEsRUFBQW9kLENBQUEsQ0FBQXNsQixNQUFBLEdBQUF0bEIsQ0FBQSxDQUFBc2xCLE1BQUEsQ0FBQSxDQUFBLENBQUF0bEIsQ0FBQSxDQUFBbWxCLG1CQUFBLENBQUEsQ0FBQSxDQUFBLENBQUFubEIsQ0FBQSxDQUFBM3BDLE9BQUEsQ0FBQTB2RCxPQUFBLENBQUEvbEIsQ0FBQSxDQUFBM3BDLE9BQUEsQ0FBQThyRCxNQUFBLENBQUFuaUIsQ0FBQSxDQUFBM3BDLE9BQUEsQ0FBQThyRCxNQUFBLENBQUEsQ0FBQSxDQUFBLENBQUFuaUIsQ0FBQSxDQUFBTyxRQUFBLENBQUEsS0FBQSxDQUFBbmpDLENBQUEsQ0FBQTRpQyxDQUFBLENBQUEya0IsT0FBQSxDQUFBM2tCLENBQUEsQ0FBQSxDQUFBLENBQUFBLENBQUEsQ0FBQXFoQixVQUFBLENBQUFqa0QsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUE0aUMsQ0FBQSxDQUFBM3BDLE9BQUEsQ0FBQThyRCxNQUFBLENBQUFuaUIsQ0FBQSxDQUFBM3BDLE9BQUEsQ0FBQTB2RCxPQUFBLENBQUEvbEIsQ0FBQSxDQUFBM3BDLE9BQUEsQ0FBQTJyRCxNQUFBLENBQUFoaUIsQ0FBQSxDQUFBM3BDLE9BQUEsQ0FBQW92RCxPQUFBLENBQUF6bEIsQ0FBQSxDQUFBd2xCLFdBQUEsRUFBQXhsQixDQUFBLENBQUF3bEIsV0FBQSxDQUFBcjRDLE1BQUEsRUFBQSxDQUFBOVosQ0FBQSxDQUFBMnVELE1BQUEsQ0FBQTdnQyxRQUFBLENBQUFtUCxDQUFBLENBQUFzMUIsT0FBQSxDQUFBLENBQUF0MUIsQ0FBQSxDQUFBc3pCLGVBQUEsQ0FBQXhtRCxDQUFBLENBQUEsQ0FBQS9KLENBQUEsQ0FBQXV2QixRQUFBLENBQUEwTixDQUFBLENBQUF3ekIsaUJBQUEsQ0FBQTFtRCxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQWt6QixDQUFBLENBQUFpUSxRQUFBLENBQUEsY0FBQSxDQUFBbmpDLENBQUEsQ0FBQSxDQUFBa3pCLENBQUEsQ0FBQXUwQixPQUFBLENBQUEsQ0FBQSxDQUFBLENBQUF4ckMsQ0FBQSxDQUFBbGtCLElBQUEsQ0FBQW03QixDQUFBLENBQUE4MEIsU0FBQSxDQUFBLFVBQUEsQ0FBQSxLQUFBbEQsZ0JBQUEsR0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsRUFBQSxDQUFBLENBQUEsQ0FEQSxDQUNBN29DLENBQUEsQ0FBQW1uQixFQUFBLENBQUE4Z0IsTUFBQSxDQUFBNzFDLEdBQUEsQ0FBQSxXQUFBLENBQUEsUUFBQSxDQUFBLENBQUFoSCxLQUFBLENBQUEsZUFBQXJILENBQUEsQ0FBQS9KLENBQUEsQ0FBQWk5QixDQUFBLENBQUEsQ0FBQSxHQUFBcG1CLENBQUFBLENBQUEsQ0FBQW1QLENBQUEsQ0FBQSxNQUFBLENBQUEsQ0FBQTJtQixDQUFBLENBQUExUCxDQUFBLENBQUFqNkIsT0FBQSxDQUFBNlQsQ0FBQSxDQUFBNEssR0FBQSxDQUFBLFFBQUEsSUFBQWtyQixDQUFBLENBQUFnbUIsT0FBQSxDQUFBOTdDLENBQUEsQ0FBQTRLLEdBQUEsQ0FBQSxRQUFBLENBQUEsRUFBQTVLLENBQUEsQ0FBQTRLLEdBQUEsQ0FBQSxRQUFBLENBQUFrckIsQ0FBQSxDQUFBMFosTUFBQSxDQUFBLENBQUEsQ0FBQSxDQUFBM2xDLElBQUEsQ0FBQSxjQUFBM1csQ0FBQSxDQUFBL0osQ0FBQSxDQUFBaTlCLENBQUEsQ0FBQSxDQUFBLEdBQUFwbUIsQ0FBQUEsQ0FBQSxDQUFBb21CLENBQUEsQ0FBQWo2QixPQUFBLENBQUE2VCxDQUFBLENBQUE4N0MsT0FBQSxFQUFBM3NDLENBQUEsQ0FBQSxNQUFBLENBQUEsQ0FBQXZFLEdBQUEsQ0FBQSxRQUFBLENBQUE1SyxDQUFBLENBQUE4N0MsT0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBREEsQ0FDQTNzQyxDQUFBLENBQUFtbkIsRUFBQSxDQUFBOGdCLE1BQUEsQ0FBQTcxQyxHQUFBLENBQUEsV0FBQSxDQUFBLFNBQUEsQ0FBQSxDQUFBaEgsS0FBQSxDQUFBLGVBQUFySCxDQUFBLENBQUEvSixDQUFBLENBQUFpOUIsQ0FBQSxDQUFBLENBQUEsR0FBQXBtQixDQUFBQSxDQUFBLENBQUFtUCxDQUFBLENBQUFobUIsQ0FBQSxDQUFBMnVELE1BQUEsQ0FBQSxDQUFBaGlCLENBQUEsQ0FBQTFQLENBQUEsQ0FBQWo2QixPQUFBLENBQUE2VCxDQUFBLENBQUE0SyxHQUFBLENBQUEsU0FBQSxJQUFBa3JCLENBQUEsQ0FBQWltQixRQUFBLENBQUEvN0MsQ0FBQSxDQUFBNEssR0FBQSxDQUFBLFNBQUEsQ0FBQSxFQUFBNUssQ0FBQSxDQUFBNEssR0FBQSxDQUFBLFNBQUEsQ0FBQWtyQixDQUFBLENBQUF2WixPQUFBLENBQUEsQ0FBQSxDQUFBLENBQUExUyxJQUFBLENBQUEsY0FBQTNXLENBQUEsQ0FBQS9KLENBQUEsQ0FBQWk5QixDQUFBLENBQUEsQ0FBQSxHQUFBcG1CLENBQUFBLENBQUEsQ0FBQW9tQixDQUFBLENBQUFqNkIsT0FBQSxDQUFBNlQsQ0FBQSxDQUFBKzdDLFFBQUEsRUFBQTVzQyxDQUFBLENBQUFobUIsQ0FBQSxDQUFBMnVELE1BQUEsQ0FBQSxDQUFBbHRDLEdBQUEsQ0FBQSxTQUFBLENBQUE1SyxDQUFBLENBQUErN0MsUUFBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBREEsQ0FDQTVzQyxDQUFBLENBQUFtbkIsRUFBQSxDQUFBOGdCLE1BQUEsQ0FBQTcxQyxHQUFBLENBQUEsV0FBQSxDQUFBLFFBQUEsQ0FBQSxDQUFBaEgsS0FBQSxDQUFBLGVBQUE0VSxDQUFBLENBQUFqYyxDQUFBLENBQUEvSixDQUFBLENBQUEsQ0FBQUEsQ0FBQSxDQUFBNnlELHFCQUFBLEdBQUE3eUQsQ0FBQSxDQUFBNnlELHFCQUFBLENBQUE3eUQsQ0FBQSxDQUFBMnVELE1BQUEsQ0FBQW5VLFlBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxFQUFBeDZDLENBQUEsQ0FBQTZ5RCxxQkFBQSxDQUFBLENBQUEsSUFBQTd5RCxDQUFBLENBQUFyQyxRQUFBLENBQUEsQ0FBQSxDQUFBLEVBQUEsU0FBQXFDLENBQUEsQ0FBQTZ5RCxxQkFBQSxDQUFBLENBQUEsRUFBQW5QLE9BQUEsR0FBQTFqRCxDQUFBLENBQUE4eUQsY0FBQSxDQUFBOXlELENBQUEsQ0FBQTZ5RCxxQkFBQSxDQUFBaHRCLE1BQUEsRUFBQSxDQUFBLENBQUEsQ0FBQSxDQUFBeXBCLElBQUEsQ0FBQSxjQUFBdmxELENBQUEsQ0FBQS9KLENBQUEsQ0FBQWk5QixDQUFBLENBQUEsQ0FBQSxHQUFBcG1CLENBQUFBLENBQUEsQ0FBQW9tQixDQUFBLENBQUFqNkIsT0FBQSxDQUFBMnBDLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQXpsQyxDQUFBLENBQUErMUIsQ0FBQSxDQUFBNDFCLHFCQUFBLENBQUEsQ0FBQSxDQUFBLENBQUE5bEIsQ0FBQSxDQUFBOVAsQ0FBQSxDQUFBdC9CLFFBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQXVKLENBQUEsR0FBQTZsQyxDQUFBLEVBQUEsU0FBQTdsQyxDQUFBLENBQUF3OEMsT0FBQSxFQUFBN3NDLENBQUEsQ0FBQXkzQyxJQUFBLEVBQUEsTUFBQXozQyxDQUFBLENBQUF5M0MsSUFBQSxHQUFBcnhCLENBQUEsQ0FBQTYxQixjQUFBLENBQUF6bEQsR0FBQSxDQUFBbkcsQ0FBQSxDQUFBczhCLFlBQUEsQ0FBQXo1QixDQUFBLENBQUFtZ0IsS0FBQSxDQUFBclQsQ0FBQSxDQUFBbzRDLGlCQUFBLENBQUEvbkQsQ0FBQSxDQUFBNHRCLFNBQUEsQ0FBQTZYLENBQUEsQ0FBQXpsQyxDQUFBLENBQUE0dEIsU0FBQSxDQUFBamUsQ0FBQSxDQUFBcTRDLFdBQUEsQ0FBQW5sRCxDQUFBLENBQUFtZ0IsS0FBQSxDQUFBK1MsQ0FBQSxDQUFBNjFCLGNBQUEsQ0FBQXpsRCxHQUFBLENBQUF3SixDQUFBLENBQUFvNEMsaUJBQUEsR0FBQS9uRCxDQUFBLENBQUE0dEIsU0FBQSxDQUFBNlgsQ0FBQSxDQUFBemxDLENBQUEsQ0FBQTR0QixTQUFBLENBQUFqZSxDQUFBLENBQUFxNEMsV0FBQSxDQUFBLEVBQUFyNEMsQ0FBQSxDQUFBeTNDLElBQUEsRUFBQSxNQUFBejNDLENBQUEsQ0FBQXkzQyxJQUFBLEdBQUFyeEIsQ0FBQSxDQUFBNjFCLGNBQUEsQ0FBQW4vQixJQUFBLENBQUF6c0IsQ0FBQSxDQUFBdW9CLFdBQUEsQ0FBQTFsQixDQUFBLENBQUFrZ0IsS0FBQSxDQUFBcFQsQ0FBQSxDQUFBbzRDLGlCQUFBLENBQUEvbkQsQ0FBQSxDQUFBNnRCLFVBQUEsQ0FBQTRYLENBQUEsQ0FBQXpsQyxDQUFBLENBQUE2dEIsVUFBQSxDQUFBbGUsQ0FBQSxDQUFBcTRDLFdBQUEsQ0FBQW5sRCxDQUFBLENBQUFrZ0IsS0FBQSxDQUFBZ1QsQ0FBQSxDQUFBNjFCLGNBQUEsQ0FBQW4vQixJQUFBLENBQUE5YyxDQUFBLENBQUFvNEMsaUJBQUEsR0FBQS9uRCxDQUFBLENBQUE2dEIsVUFBQSxDQUFBNFgsQ0FBQSxDQUFBemxDLENBQUEsQ0FBQTZ0QixVQUFBLENBQUFsZSxDQUFBLENBQUFxNEMsV0FBQSxDQUFBLENBQUEsR0FBQXI0QyxDQUFBLENBQUF5M0MsSUFBQSxFQUFBLE1BQUF6M0MsQ0FBQSxDQUFBeTNDLElBQUEsR0FBQXZrRCxDQUFBLENBQUFtZ0IsS0FBQSxDQUFBbEUsQ0FBQSxDQUFBK21CLENBQUEsQ0FBQSxDQUFBalksU0FBQSxFQUFBLENBQUFqZSxDQUFBLENBQUFvNEMsaUJBQUEsQ0FBQXRpQixDQUFBLENBQUEzbUIsQ0FBQSxDQUFBK21CLENBQUEsQ0FBQSxDQUFBalksU0FBQSxDQUFBOU8sQ0FBQSxDQUFBK21CLENBQUEsQ0FBQSxDQUFBalksU0FBQSxHQUFBamUsQ0FBQSxDQUFBcTRDLFdBQUEsQ0FBQSxDQUFBbHBDLENBQUEsQ0FBQWxvQixNQUFBLENBQUEsQ0FBQTJ5QixNQUFBLElBQUExbUIsQ0FBQSxDQUFBbWdCLEtBQUEsQ0FBQWxFLENBQUEsQ0FBQSttQixDQUFBLENBQUEsQ0FBQWpZLFNBQUEsRUFBQSxFQUFBamUsQ0FBQSxDQUFBbzRDLGlCQUFBLEdBQUF0aUIsQ0FBQSxDQUFBM21CLENBQUEsQ0FBQSttQixDQUFBLENBQUEsQ0FBQWpZLFNBQUEsQ0FBQTlPLENBQUEsQ0FBQSttQixDQUFBLENBQUEsQ0FBQWpZLFNBQUEsR0FBQWplLENBQUEsQ0FBQXE0QyxXQUFBLENBQUEsQ0FBQSxFQUFBcjRDLENBQUEsQ0FBQXkzQyxJQUFBLEVBQUEsTUFBQXozQyxDQUFBLENBQUF5M0MsSUFBQSxHQUFBdmtELENBQUEsQ0FBQWtnQixLQUFBLENBQUFqRSxDQUFBLENBQUErbUIsQ0FBQSxDQUFBLENBQUFoWSxVQUFBLEVBQUEsQ0FBQWxlLENBQUEsQ0FBQW80QyxpQkFBQSxDQUFBdGlCLENBQUEsQ0FBQTNtQixDQUFBLENBQUErbUIsQ0FBQSxDQUFBLENBQUFoWSxVQUFBLENBQUEvTyxDQUFBLENBQUErbUIsQ0FBQSxDQUFBLENBQUFoWSxVQUFBLEdBQUFsZSxDQUFBLENBQUFxNEMsV0FBQSxDQUFBLENBQUFscEMsQ0FBQSxDQUFBbG9CLE1BQUEsQ0FBQSxDQUFBd3hCLEtBQUEsSUFBQXZsQixDQUFBLENBQUFrZ0IsS0FBQSxDQUFBakUsQ0FBQSxDQUFBK21CLENBQUEsQ0FBQSxDQUFBaFksVUFBQSxFQUFBLEVBQUFsZSxDQUFBLENBQUFvNEMsaUJBQUEsR0FBQXRpQixDQUFBLENBQUEzbUIsQ0FBQSxDQUFBK21CLENBQUEsQ0FBQSxDQUFBaFksVUFBQSxDQUFBL08sQ0FBQSxDQUFBK21CLENBQUEsQ0FBQSxDQUFBaFksVUFBQSxHQUFBbGUsQ0FBQSxDQUFBcTRDLFdBQUEsQ0FBQSxDQUFBLENBQUEsRUFBQXZpQixDQUFBLEdBQUEsQ0FBQSxDQUFBLEVBQUEzbUIsQ0FBQSxDQUFBbW5CLEVBQUEsQ0FBQStpQixTQUFBLEVBQUEsQ0FBQXI1QyxDQUFBLENBQUFrNkMsYUFBQSxFQUFBL3FDLENBQUEsQ0FBQW1uQixFQUFBLENBQUEraUIsU0FBQSxDQUFBYyxjQUFBLENBQUEvekIsQ0FBQSxDQUFBbHpCLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQURBLENBQ0FpYyxDQUFBLENBQUFtbkIsRUFBQSxDQUFBOGdCLE1BQUEsQ0FBQTcxQyxHQUFBLENBQUEsV0FBQSxDQUFBLE1BQUEsQ0FBQSxDQUFBaEgsS0FBQSxDQUFBLGVBQUFySCxDQUFBLENBQUEvSixDQUFBLENBQUFpOUIsQ0FBQSxDQUFBLENBQUEsR0FBQXBtQixDQUFBQSxDQUFBLENBQUFvbUIsQ0FBQSxDQUFBajZCLE9BQUEsQ0FBQWk2QixDQUFBLENBQUE4MUIsWUFBQSxDQUFBLEVBQUEsQ0FBQS9zQyxDQUFBLENBQUFuUCxDQUFBLENBQUFzNEMsSUFBQSxDQUFBL3RELFdBQUEsR0FBQTRILE1BQUEsQ0FBQTZOLENBQUEsQ0FBQXM0QyxJQUFBLENBQUFwUyxLQUFBLEVBQUEscUJBQUEsQ0FBQWxtQyxDQUFBLENBQUFzNEMsSUFBQSxDQUFBLENBQUFydEQsSUFBQSxDQUFBLFVBQUEsQ0FBQSxHQUFBaUksQ0FBQUEsQ0FBQSxDQUFBaWMsQ0FBQSxDQUFBLElBQUEsQ0FBQSxDQUFBaG1CLENBQUEsQ0FBQStKLENBQUEsQ0FBQTg3QixNQUFBLEVBQUEsQ0FBQSxPQUFBNUksQ0FBQSxDQUFBK1AsT0FBQSxDQUFBLENBQUEsQ0FBQSxFQUFBL1AsQ0FBQSxDQUFBODFCLFlBQUEsQ0FBQXIwRCxJQUFBLENBQUEsQ0FBQTIvQyxJQUFBLENBQUEsSUFBQSxDQUFBL3VCLEtBQUEsQ0FBQXZsQixDQUFBLENBQUFtbUMsVUFBQSxFQUFBLENBQUF6ZixNQUFBLENBQUExbUIsQ0FBQSxDQUFBb21DLFdBQUEsRUFBQSxDQUFBOWlDLEdBQUEsQ0FBQXJOLENBQUEsQ0FBQXFOLEdBQUEsQ0FBQXNtQixJQUFBLENBQUEzekIsQ0FBQSxDQUFBMnpCLElBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBMjdCLElBQUEsQ0FBQSxjQUFBdmxELENBQUEsQ0FBQS9KLENBQUEsQ0FBQWk5QixDQUFBLENBQUEsQ0FBQSxHQUFBcG1CLENBQUFBLENBQUEsQ0FBQTgxQixDQUFBLENBQUF6bEMsQ0FBQSxDQUFBNmxDLENBQUEsQ0FBQUssQ0FBQSxDQUFBcDFCLENBQUEsQ0FBQXkzQixDQUFBLENBQUFRLENBQUEsQ0FBQUksQ0FBQSxDQUFBcGIsQ0FBQSxDQUFBNmIsQ0FBQSxDQUFBN1QsQ0FBQSxDQUFBajZCLE9BQUEsQ0FBQSt0QyxDQUFBLENBQUFELENBQUEsQ0FBQXVlLGFBQUEsQ0FBQW5sRCxDQUFBLENBQUFsSyxDQUFBLENBQUE2bEMsTUFBQSxDQUFBbFMsSUFBQSxDQUFBemEsQ0FBQSxDQUFBaFAsQ0FBQSxDQUFBK3lCLENBQUEsQ0FBQTAwQixpQkFBQSxDQUFBcmlDLEtBQUEsQ0FBQWxWLENBQUEsQ0FBQXBhLENBQUEsQ0FBQTZsQyxNQUFBLENBQUF4NEIsR0FBQSxDQUFBbEcsQ0FBQSxDQUFBaVQsQ0FBQSxDQUFBNmlCLENBQUEsQ0FBQTAwQixpQkFBQSxDQUFBbGhDLE1BQUEsQ0FBQSxJQUFBNGYsQ0FBQSxDQUFBcFQsQ0FBQSxDQUFBODFCLFlBQUEsQ0FBQTF4RCxNQUFBLENBQUEsQ0FBQSxDQUFBZ3ZDLENBQUEsRUFBQSxDQUFBLENBQUFBLENBQUEsRUFBQSxFQUFBakQsQ0FBQSxDQUFBblEsQ0FBQSxDQUFBODFCLFlBQUEsQ0FBQTFpQixDQUFBLEVBQUExYyxJQUFBLENBQUFzSixDQUFBLENBQUFpMEIsT0FBQSxDQUFBdjlCLElBQUEsQ0FBQTNiLENBQUEsQ0FBQW8xQixDQUFBLENBQUFuUSxDQUFBLENBQUE4MUIsWUFBQSxDQUFBMWlCLENBQUEsRUFBQS9nQixLQUFBLENBQUFtZ0IsQ0FBQSxDQUFBeFMsQ0FBQSxDQUFBODFCLFlBQUEsQ0FBQTFpQixDQUFBLEVBQUFoakMsR0FBQSxDQUFBNHZCLENBQUEsQ0FBQWkwQixPQUFBLENBQUE3akQsR0FBQSxDQUFBNGlDLENBQUEsQ0FBQVIsQ0FBQSxDQUFBeFMsQ0FBQSxDQUFBODFCLFlBQUEsQ0FBQTFpQixDQUFBLEVBQUE1ZixNQUFBLENBQUEyYyxDQUFBLENBQUEyRCxDQUFBLENBQUE3M0IsQ0FBQSxFQUFBaFAsQ0FBQSxDQUFBOE4sQ0FBQSxDQUFBKzRCLENBQUEsRUFBQXRCLENBQUEsQ0FBQXNCLENBQUEsQ0FBQTVwQyxDQUFBLEVBQUFpVCxDQUFBLENBQUE2MUIsQ0FBQSxDQUFBYyxDQUFBLEVBQUEsQ0FBQS9xQixDQUFBLENBQUF6ZixRQUFBLENBQUEwMkIsQ0FBQSxDQUFBODFCLFlBQUEsQ0FBQTFpQixDQUFBLEVBQUFnTyxJQUFBLENBQUE3ekMsYUFBQSxDQUFBeXlCLENBQUEsQ0FBQTgxQixZQUFBLENBQUExaUIsQ0FBQSxFQUFBZ08sSUFBQSxDQUFBLEVBQUFwaEIsQ0FBQSxDQUFBODFCLFlBQUEsQ0FBQTFpQixDQUFBLEVBQUEyaUIsUUFBQSxFQUFBLzFCLENBQUEsQ0FBQWo2QixPQUFBLENBQUFtc0QsSUFBQSxDQUFBOEQsT0FBQSxFQUFBaDJCLENBQUEsQ0FBQWo2QixPQUFBLENBQUFtc0QsSUFBQSxDQUFBOEQsT0FBQSxDQUFBMTBELElBQUEsQ0FBQTArQixDQUFBLENBQUErUCxPQUFBLENBQUFqakMsQ0FBQSxDQUFBaWMsQ0FBQSxDQUFBampCLE1BQUEsQ0FBQWs2QixDQUFBLENBQUFxMEIsT0FBQSxFQUFBLENBQUEsQ0FBQTRCLFFBQUEsQ0FBQWoyQixDQUFBLENBQUE4MUIsWUFBQSxDQUFBMWlCLENBQUEsRUFBQWdPLElBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQXBoQixDQUFBLENBQUE4MUIsWUFBQSxDQUFBMWlCLENBQUEsRUFBQTJpQixRQUFBLENBQUEsQ0FBQSxDQUFBLEdBQUEsVUFBQWxpQixDQUFBLENBQUFzZSxRQUFBLEdBQUF2NEMsQ0FBQSxDQUFBazZCLENBQUEsRUFBQW50QyxJQUFBLENBQUF3c0MsR0FBQSxDQUFBWCxDQUFBLENBQUF0b0MsQ0FBQSxDQUFBLENBQUF3bEMsQ0FBQSxDQUFBb0UsQ0FBQSxFQUFBbnRDLElBQUEsQ0FBQXdzQyxHQUFBLENBQUFILENBQUEsQ0FBQTcxQixDQUFBLENBQUEsQ0FBQWxULENBQUEsQ0FBQTZwQyxDQUFBLEVBQUFudEMsSUFBQSxDQUFBd3NDLEdBQUEsQ0FBQWhELENBQUEsQ0FBQWwwQixDQUFBLENBQUEsQ0FBQTZ6QixDQUFBLENBQUFnRSxDQUFBLEVBQUFudEMsSUFBQSxDQUFBd3NDLEdBQUEsQ0FBQXA0QixDQUFBLENBQUE5TixDQUFBLENBQUEsQ0FBQTJNLENBQUEsR0FBQTdXLENBQUEsQ0FBQXV2QixRQUFBLENBQUFsaUIsR0FBQSxDQUFBNHZCLENBQUEsQ0FBQW8wQixrQkFBQSxDQUFBLFVBQUEsQ0FBQSxDQUFBaGtELEdBQUEsQ0FBQW9pQyxDQUFBLENBQUF4UyxDQUFBLENBQUEwMEIsaUJBQUEsQ0FBQWxoQyxNQUFBLENBQUFrRCxJQUFBLENBQUEsQ0FBQSxDQUFBLEVBQUF0bUIsR0FBQSxDQUFBLENBQUFzL0IsQ0FBQSxHQUFBM3NDLENBQUEsQ0FBQXV2QixRQUFBLENBQUFsaUIsR0FBQSxDQUFBNHZCLENBQUEsQ0FBQW8wQixrQkFBQSxDQUFBLFVBQUEsQ0FBQSxDQUFBaGtELEdBQUEsQ0FBQTRpQyxDQUFBLENBQUF0YyxJQUFBLENBQUEsQ0FBQSxDQUFBLEVBQUF0bUIsR0FBQSxDQUFBLENBQUFuRyxDQUFBLEdBQUFsSCxDQUFBLENBQUF1dkIsUUFBQSxDQUFBb0UsSUFBQSxDQUFBc0osQ0FBQSxDQUFBbzBCLGtCQUFBLENBQUEsVUFBQSxDQUFBLENBQUFoa0QsR0FBQSxDQUFBLENBQUEsQ0FBQXNtQixJQUFBLENBQUF5WixDQUFBLENBQUFuUSxDQUFBLENBQUEwMEIsaUJBQUEsQ0FBQXJpQyxLQUFBLENBQUEsRUFBQXFFLElBQUEsQ0FBQSxDQUFBb1osQ0FBQSxHQUFBL3NDLENBQUEsQ0FBQXV2QixRQUFBLENBQUFvRSxJQUFBLENBQUFzSixDQUFBLENBQUFvMEIsa0JBQUEsQ0FBQSxVQUFBLENBQUEsQ0FBQWhrRCxHQUFBLENBQUEsQ0FBQSxDQUFBc21CLElBQUEsQ0FBQTNiLENBQUEsQ0FBQSxFQUFBMmIsSUFBQSxDQUFBLEVBQUFzQixDQUFBLENBQUFwZSxDQUFBLEVBQUE4MUIsQ0FBQSxFQUFBemxDLENBQUEsRUFBQTZsQyxDQUFBLENBQUEsVUFBQStELENBQUEsQ0FBQXNlLFFBQUEsR0FBQXY0QyxDQUFBLENBQUFrNkIsQ0FBQSxFQUFBbnRDLElBQUEsQ0FBQXdzQyxHQUFBLENBQUFYLENBQUEsQ0FBQXIxQixDQUFBLENBQUEsQ0FBQXV5QixDQUFBLENBQUFvRSxDQUFBLEVBQUFudEMsSUFBQSxDQUFBd3NDLEdBQUEsQ0FBQUgsQ0FBQSxDQUFBOW9DLENBQUEsQ0FBQSxDQUFBRCxDQUFBLENBQUE2cEMsQ0FBQSxFQUFBbnRDLElBQUEsQ0FBQXdzQyxHQUFBLENBQUFoRCxDQUFBLENBQUFsakMsQ0FBQSxDQUFBLENBQUE2aUMsQ0FBQSxDQUFBZ0UsQ0FBQSxFQUFBbnRDLElBQUEsQ0FBQXdzQyxHQUFBLENBQUFwNEIsQ0FBQSxDQUFBa0IsQ0FBQSxDQUFBLENBQUFyQyxDQUFBLEdBQUE3VyxDQUFBLENBQUF1dkIsUUFBQSxDQUFBbGlCLEdBQUEsQ0FBQTR2QixDQUFBLENBQUFvMEIsa0JBQUEsQ0FBQSxVQUFBLENBQUEsQ0FBQWhrRCxHQUFBLENBQUFvaUMsQ0FBQSxDQUFBOWIsSUFBQSxDQUFBLENBQUEsQ0FBQSxFQUFBdG1CLEdBQUEsQ0FBQSxDQUFBcy9CLENBQUEsR0FBQTNzQyxDQUFBLENBQUF1dkIsUUFBQSxDQUFBbGlCLEdBQUEsQ0FBQTR2QixDQUFBLENBQUFvMEIsa0JBQUEsQ0FBQSxVQUFBLENBQUEsQ0FBQWhrRCxHQUFBLENBQUE0aUMsQ0FBQSxDQUFBaFQsQ0FBQSxDQUFBMDBCLGlCQUFBLENBQUFsaEMsTUFBQSxDQUFBa0QsSUFBQSxDQUFBLENBQUEsQ0FBQSxFQUFBdG1CLEdBQUEsQ0FBQSxDQUFBbkcsQ0FBQSxHQUFBbEgsQ0FBQSxDQUFBdXZCLFFBQUEsQ0FBQW9FLElBQUEsQ0FBQXNKLENBQUEsQ0FBQW8wQixrQkFBQSxDQUFBLFVBQUEsQ0FBQSxDQUFBaGtELEdBQUEsQ0FBQSxDQUFBLENBQUFzbUIsSUFBQSxDQUFBeVosQ0FBQSxDQUFBLEVBQUF6WixJQUFBLENBQUEsQ0FBQW9aLENBQUEsR0FBQS9zQyxDQUFBLENBQUF1dkIsUUFBQSxDQUFBb0UsSUFBQSxDQUFBc0osQ0FBQSxDQUFBbzBCLGtCQUFBLENBQUEsVUFBQSxDQUFBLENBQUFoa0QsR0FBQSxDQUFBLENBQUEsQ0FBQXNtQixJQUFBLENBQUEzYixDQUFBLENBQUFpbEIsQ0FBQSxDQUFBMDBCLGlCQUFBLENBQUFyaUMsS0FBQSxDQUFBLEVBQUFxRSxJQUFBLENBQUEsQ0FBQSxDQUFBLENBQUFzSixDQUFBLENBQUE4MUIsWUFBQSxDQUFBMWlCLENBQUEsRUFBQTJpQixRQUFBLEdBQUFuOEMsQ0FBQSxFQUFBODFCLENBQUEsRUFBQXpsQyxDQUFBLEVBQUE2bEMsQ0FBQSxFQUFBOVgsQ0FBQSxHQUFBZ0ksQ0FBQSxDQUFBajZCLE9BQUEsQ0FBQW1zRCxJQUFBLENBQUFBLElBQUEsRUFBQWx5QixDQUFBLENBQUFqNkIsT0FBQSxDQUFBbXNELElBQUEsQ0FBQUEsSUFBQSxDQUFBNXdELElBQUEsQ0FBQTArQixDQUFBLENBQUErUCxPQUFBLENBQUFqakMsQ0FBQSxDQUFBaWMsQ0FBQSxDQUFBampCLE1BQUEsQ0FBQWs2QixDQUFBLENBQUFxMEIsT0FBQSxFQUFBLENBQUEsQ0FBQTRCLFFBQUEsQ0FBQWoyQixDQUFBLENBQUE4MUIsWUFBQSxDQUFBMWlCLENBQUEsRUFBQWdPLElBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQXBoQixDQUFBLENBQUE4MUIsWUFBQSxDQUFBMWlCLENBQUEsRUFBQTJpQixRQUFBLENBQUFuOEMsQ0FBQSxFQUFBODFCLENBQUEsRUFBQXpsQyxDQUFBLEVBQUE2bEMsQ0FBQSxFQUFBOVgsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FEQSxDQUNBalAsQ0FBQSxDQUFBbW5CLEVBQUEsQ0FBQThnQixNQUFBLENBQUE3MUMsR0FBQSxDQUFBLFdBQUEsQ0FBQSxPQUFBLENBQUEsQ0FBQWhILEtBQUEsQ0FBQSxlQUFBckgsQ0FBQSxDQUFBL0osQ0FBQSxDQUFBaTlCLENBQUEsQ0FBQSxDQUFBLEdBQUFwbUIsQ0FBQUEsQ0FBQSxDQUFBODFCLENBQUEsQ0FBQTFQLENBQUEsQ0FBQWo2QixPQUFBLENBQUFrRSxDQUFBLENBQUE4ZSxDQUFBLENBQUF4aEIsU0FBQSxDQUFBd2hCLENBQUEsQ0FBQTJtQixDQUFBLENBQUFydkIsS0FBQSxDQUFBLEVBQUF6YSxJQUFBLENBQUEsU0FBQWtILENBQUEsQ0FBQS9KLENBQUEsQ0FBQSxDQUFBLE1BQUEsQ0FBQTB3QixRQUFBLENBQUExSyxDQUFBLENBQUFqYyxDQUFBLENBQUEsQ0FBQTBYLEdBQUEsQ0FBQSxRQUFBLENBQUEsQ0FBQSxFQUFBLENBQUEsRUFBQSxDQUFBLEdBQUFpUCxRQUFBLENBQUExSyxDQUFBLENBQUFobUIsQ0FBQSxDQUFBLENBQUF5aEIsR0FBQSxDQUFBLFFBQUEsQ0FBQSxDQUFBLEVBQUEsQ0FBQSxFQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBdmEsQ0FBQSxDQUFBN0YsTUFBQSxHQUFBd1YsQ0FBQSxDQUFBNlosUUFBQSxDQUFBMUssQ0FBQSxDQUFBOWUsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUF1YSxHQUFBLENBQUEsUUFBQSxDQUFBLENBQUEsRUFBQSxDQUFBLEVBQUEsQ0FBQSxDQUFBdUUsQ0FBQSxDQUFBOWUsQ0FBQSxDQUFBLENBQUFwRixJQUFBLENBQUEsU0FBQWlJLENBQUEsQ0FBQSxDQUFBaWMsQ0FBQSxDQUFBLElBQUEsQ0FBQSxDQUFBdkUsR0FBQSxDQUFBLFFBQUEsQ0FBQTVLLENBQUEsQ0FBQTlNLENBQUEsRUFBQSxDQUFBLENBQUEsQ0FBQSxLQUFBMFgsR0FBQSxDQUFBLFFBQUEsQ0FBQTVLLENBQUEsQ0FBQTNQLENBQUEsQ0FBQTdGLE1BQUEsQ0FBQSxFQUFBLENBQUEsQ0FBQSxDQURBLENBQ0Eya0IsQ0FBQSxDQUFBbW5CLEVBQUEsQ0FBQThnQixNQUFBLENBQUE3MUMsR0FBQSxDQUFBLFdBQUEsQ0FBQSxRQUFBLENBQUEsQ0FBQWhILEtBQUEsQ0FBQSxlQUFBckgsQ0FBQSxDQUFBL0osQ0FBQSxDQUFBaTlCLENBQUEsQ0FBQSxDQUFBLEdBQUFwbUIsQ0FBQUEsQ0FBQSxDQUFBbVAsQ0FBQSxDQUFBaG1CLENBQUEsQ0FBQTJ1RCxNQUFBLENBQUEsQ0FBQWhpQixDQUFBLENBQUExUCxDQUFBLENBQUFqNkIsT0FBQSxDQUFBNlQsQ0FBQSxDQUFBNEssR0FBQSxDQUFBLFFBQUEsSUFBQWtyQixDQUFBLENBQUF3bUIsT0FBQSxDQUFBdDhDLENBQUEsQ0FBQTRLLEdBQUEsQ0FBQSxRQUFBLENBQUEsRUFBQTVLLENBQUEsQ0FBQTRLLEdBQUEsQ0FBQSxRQUFBLENBQUFrckIsQ0FBQSxDQUFBNEosTUFBQSxDQUFBLENBQUEsQ0FBQSxDQUFBNzFCLElBQUEsQ0FBQSxjQUFBM1csQ0FBQSxDQUFBL0osQ0FBQSxDQUFBaTlCLENBQUEsQ0FBQSxDQUFBLEdBQUFwbUIsQ0FBQUEsQ0FBQSxDQUFBb21CLENBQUEsQ0FBQWo2QixPQUFBLENBQUE2VCxDQUFBLENBQUFzOEMsT0FBQSxFQUFBbnRDLENBQUEsQ0FBQWhtQixDQUFBLENBQUEydUQsTUFBQSxDQUFBLENBQUFsdEMsR0FBQSxDQUFBLFFBQUEsQ0FBQTVLLENBQUEsQ0FBQXM4QyxPQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FEQSxDQUNBbnRDLENBQUEsQ0FBQW1uQixFQUFBLENBQUFpbUIsU0FEQSxDQUNBcHRDLENBQUEsQ0FBQXFuQixNQUFBLENBQUEsY0FBQSxDQUFBcm5CLENBQUEsQ0FBQW1uQixFQUFBLENBQUFpaEIsS0FBQSxDQUFBLENBQUF4dEQsT0FBQSxDQUFBLFFBQUEsQ0FBQWd0QyxpQkFBQSxDQUFBLFFBQUEsQ0FBQTVxQyxPQUFBLENBQUEsQ0FBQXF3RCxVQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEvNkIsT0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBZzdCLGVBQUEsQ0FBQSxNQUFBLENBQUFDLGFBQUEsQ0FBQSxPQUFBLENBQUFDLFdBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQUMsUUFBQSxDQUFBLENBQUEsQ0FBQSxDQUFBNTRCLE9BQUEsQ0FBQSxDQUFBLGtCQUFBLHVDQUFBLENBQUEsQ0FBQTJ6QixXQUFBLENBQUEsQ0FBQSxDQUFBLENBQUFrRixLQUFBLENBQUEsQ0FBQSxDQUFBLENBQUFoRixJQUFBLENBQUEsQ0FBQSxDQUFBLENBQUFpRixPQUFBLENBQUEsUUFBQSxDQUFBaEYsTUFBQSxDQUFBLENBQUEsQ0FBQSxDQUFBaUYsU0FBQSxDQUFBLElBQUEsQ0FBQTlpQyxRQUFBLENBQUEsSUFBQSxDQUFBK2lDLFNBQUEsQ0FBQSxFQUFBLENBQUFoakMsUUFBQSxDQUFBLEVBQUEsQ0FBQTBsQixNQUFBLENBQUEsRUFBQSxDQUFBdWQsTUFBQSxDQUFBLElBQUEsQ0FBQTFpRCxLQUFBLENBQUEsSUFBQSxDQUFBc1AsSUFBQSxDQUFBLElBQUEsQ0FBQSxDQUFBcXpDLElBQUEsQ0FBQSxjQUFBL3RDLENBQUEsQ0FBQSxDQUFBLE1BQUE0SixDQUFBQSxVQUFBLENBQUE1SixDQUFBLENBQUEsRUFBQSxDQUFBLENBQUEsQ0FBQSxDQUFBZ3VDLFNBQUEsQ0FBQSxtQkFBQWh1QyxDQUFBLENBQUEsQ0FBQSxNQUFBLENBQUE4aEIsS0FBQSxDQUFBbFksVUFBQSxDQUFBNUosQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUFzNEIsVUFBQSxDQUFBLG9CQUFBdjBDLENBQUEsQ0FBQS9KLENBQUEsQ0FBQSxDQUFBLEdBQUEsV0FBQWdtQixDQUFBLENBQUFqYyxDQUFBLENBQUEsQ0FBQTBYLEdBQUEsQ0FBQSxVQUFBLENBQUEsQ0FBQSxNQUFBLENBQUEsQ0FBQSxDQUFBLEdBQUF3YixDQUFBQSxDQUFBLENBQUFqOUIsQ0FBQSxFQUFBLFNBQUFBLENBQUEsQ0FBQSxZQUFBLENBQUEsV0FBQSxDQUFBNlcsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLE1BQUE5TSxDQUFBQSxDQUFBLENBQUFrekIsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxFQUFBbHpCLENBQUEsQ0FBQWt6QixDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUFwbUIsQ0FBQSxDQUFBOU0sQ0FBQSxDQUFBa3pCLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQWx6QixDQUFBLENBQUFrekIsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBcG1CLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSszQixPQUFBLENBQUEsa0JBQUEsQ0FBQSxHQUFBN2tDLENBQUFBLENBQUEsQ0FBQS9KLENBQUEsQ0FBQSxLQUFBZ0QsT0FBQSxDQUFBaTZCLENBQUEsQ0FBQSxJQUFBLENBQUEsS0FBQXVTLFNBQUEsQ0FBQSxjQUFBLEVBQUF4cEIsQ0FBQSxDQUFBampCLE1BQUEsQ0FBQSxJQUFBLENBQUEsQ0FBQWt4RCxZQUFBLENBQUEsQ0FBQSxDQUFBajBELENBQUEsQ0FBQXd6RCxXQUFBLENBQUFBLFdBQUEsQ0FBQXh6RCxDQUFBLENBQUF3ekQsV0FBQSxDQUFBVSxlQUFBLENBQUEsS0FBQWxuQixPQUFBLENBQUFtbkIsNkJBQUEsQ0FBQSxFQUFBLENBQUEvQixPQUFBLENBQUFweUQsQ0FBQSxDQUFBMnVELE1BQUEsRUFBQTN1RCxDQUFBLENBQUEwekQsS0FBQSxFQUFBMXpELENBQUEsQ0FBQXM0QixPQUFBLENBQUF0NEIsQ0FBQSxDQUFBMnVELE1BQUEsRUFBQSxxQkFBQSxDQUFBLElBQUEsQ0FBQSxDQUFBLENBQUEsS0FBQTNoQixPQUFBLENBQUEsQ0FBQSxFQUFBcmpDLFFBQUEsQ0FBQVMsS0FBQSxDQUFBLDhDQUFBLElBQUEsS0FBQTRpQyxPQUFBLENBQUF0b0IsSUFBQSxDQUFBc0IsQ0FBQSxDQUFBLDBEQUFBLENBQUEsQ0FBQXZFLEdBQUEsQ0FBQSxDQUFBOE4sUUFBQSxDQUFBLEtBQUF5ZCxPQUFBLENBQUF2ckIsR0FBQSxDQUFBLFVBQUEsQ0FBQSxDQUFBNk4sS0FBQSxDQUFBLEtBQUEwZCxPQUFBLENBQUFrRCxVQUFBLEVBQUEsQ0FBQXpmLE1BQUEsQ0FBQSxLQUFBdWMsT0FBQSxDQUFBbUQsV0FBQSxFQUFBLENBQUE5aUMsR0FBQSxDQUFBLEtBQUEyL0IsT0FBQSxDQUFBdnJCLEdBQUEsQ0FBQSxLQUFBLENBQUEsQ0FBQWtTLElBQUEsQ0FBQSxLQUFBcVosT0FBQSxDQUFBdnJCLEdBQUEsQ0FBQSxNQUFBLENBQUEsQ0FBQSxDQUFBLEVBQUEsS0FBQXVyQixPQUFBLENBQUEsS0FBQUEsT0FBQSxDQUFBMzdCLE1BQUEsR0FBQW1PLElBQUEsQ0FBQSxjQUFBLENBQUEsS0FBQXd0QixPQUFBLENBQUFvbkIsU0FBQSxDQUFBLFVBQUEsQ0FBQSxDQUFBLENBQUEsS0FBQUMsZ0JBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQXRxRCxDQUFBLENBQUEsQ0FBQTJuQyxTQUFBLENBQUEsS0FBQXdpQixlQUFBLENBQUF6eUMsR0FBQSxDQUFBLFdBQUEsQ0FBQSxDQUFBeTFCLFdBQUEsQ0FBQSxLQUFBZ2QsZUFBQSxDQUFBenlDLEdBQUEsQ0FBQSxhQUFBLENBQUEsQ0FBQXcxQixZQUFBLENBQUEsS0FBQWlkLGVBQUEsQ0FBQXp5QyxHQUFBLENBQUEsY0FBQSxDQUFBLENBQUF5TixVQUFBLENBQUEsS0FBQWdsQyxlQUFBLENBQUF6eUMsR0FBQSxDQUFBLFlBQUEsQ0FBQSxDQUFBLENBQUEsS0FBQXVyQixPQUFBLENBQUF2ckIsR0FBQSxDQUFBMVgsQ0FBQSxDQUFBLENBQUEsS0FBQW1xRCxlQUFBLENBQUF6eUMsR0FBQSxDQUFBLFFBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxLQUFBNnlDLG1CQUFBLENBQUEsS0FBQUosZUFBQSxDQUFBenlDLEdBQUEsQ0FBQSxRQUFBLENBQUEsQ0FBQSxLQUFBeXlDLGVBQUEsQ0FBQXp5QyxHQUFBLENBQUEsUUFBQSxDQUFBLE1BQUEsQ0FBQSxDQUFBLEtBQUEweUMsNkJBQUEsQ0FBQXoxRCxJQUFBLENBQUEsS0FBQXcxRCxlQUFBLENBQUF6eUMsR0FBQSxDQUFBLENBQUE4TixRQUFBLENBQUEsUUFBQSxDQUFBZ2xDLElBQUEsQ0FBQSxDQUFBLENBQUEveUMsT0FBQSxDQUFBLE9BQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxLQUFBMHlDLGVBQUEsQ0FBQXp5QyxHQUFBLENBQUExWCxDQUFBLENBQUEsQ0FBQSxLQUFBeXFELHFCQUFBLEVBQUEsQ0FBQSxDQUFBLEtBQUFDLGFBQUEsRUFBQSxDQUFBejBELENBQUEsQ0FBQXl6RCxRQUFBLEVBQUF6dEMsQ0FBQSxDQUFBLEtBQUFnbkIsT0FBQSxDQUFBLENBQUF6bkIsRUFBQSxDQUFBLFlBQUEsQ0FBQSxVQUFBLENBQUF2bEIsQ0FBQSxDQUFBMEosUUFBQSxHQUFBdXpCLENBQUEsQ0FBQStSLFlBQUEsQ0FBQSx1QkFBQSxFQUFBL1IsQ0FBQSxDQUFBeTNCLFFBQUEsQ0FBQWp5QyxJQUFBLEVBQUEsRUFBQSxDQUFBLEVBQUE4QyxFQUFBLENBQUEsWUFBQSxDQUFBLFVBQUEsQ0FBQXZsQixDQUFBLENBQUEwSixRQUFBLEVBQUF1ekIsQ0FBQSxDQUFBMDNCLFFBQUEsR0FBQTEzQixDQUFBLENBQUF1UyxTQUFBLENBQUEsdUJBQUEsRUFBQXZTLENBQUEsQ0FBQXkzQixRQUFBLENBQUEveEMsSUFBQSxFQUFBLEVBQUEsQ0FBQSxDQUFBLENBQUEsS0FBQWlxQyxVQUFBLEVBQUEsQ0FBQSxDQUFBLENBQUE3ZCxRQUFBLENBQUEsbUJBQUEsQ0FBQSxLQUFBZ2UsYUFBQSxHQUFBLEdBQUFoakQsQ0FBQUEsQ0FBQSxDQUFBL0osQ0FBQSxDQUFBLFFBQUFBLENBQUFBLENBQUEsQ0FBQStKLENBQUEsQ0FBQSxDQUFBaWMsQ0FBQSxDQUFBamMsQ0FBQSxDQUFBLENBQUFvVyxVQUFBLENBQUEsV0FBQSxFQUFBQSxVQUFBLENBQUEsY0FBQSxFQUFBeUYsR0FBQSxDQUFBLFlBQUEsRUFBQTlYLElBQUEsQ0FBQSxzQkFBQSxFQUFBZ00sTUFBQSxHQUFBLENBQUEsQ0FBQSxNQUFBLE1BQUF1NkMsZ0JBQUEsR0FBQXIwRCxDQUFBLENBQUEsS0FBQWd0QyxPQUFBLENBQUEsQ0FBQWpqQyxDQUFBLENBQUEsS0FBQWlqQyxPQUFBLENBQUEsS0FBQWtuQixlQUFBLENBQUF6eUMsR0FBQSxDQUFBLENBQUE4TixRQUFBLENBQUF4bEIsQ0FBQSxDQUFBMFgsR0FBQSxDQUFBLFVBQUEsQ0FBQSxDQUFBNk4sS0FBQSxDQUFBdmxCLENBQUEsQ0FBQW1tQyxVQUFBLEVBQUEsQ0FBQXpmLE1BQUEsQ0FBQTFtQixDQUFBLENBQUFvbUMsV0FBQSxFQUFBLENBQUE5aUMsR0FBQSxDQUFBdEQsQ0FBQSxDQUFBMFgsR0FBQSxDQUFBLEtBQUEsQ0FBQSxDQUFBa1MsSUFBQSxDQUFBNXBCLENBQUEsQ0FBQTBYLEdBQUEsQ0FBQSxNQUFBLENBQUEsQ0FBQSxFQUFBdU0sV0FBQSxDQUFBamtCLENBQUEsQ0FBQSxDQUFBQSxDQUFBLENBQUErUCxNQUFBLEVBQUEsRUFBQSxLQUFBbzZDLGVBQUEsQ0FBQXp5QyxHQUFBLENBQUEsUUFBQSxDQUFBLEtBQUE2eUMsbUJBQUEsQ0FBQSxDQUFBdDBELENBQUEsQ0FBQSxLQUFBazBELGVBQUEsQ0FBQSxDQUFBLElBQUEsQ0FBQSxDQUFBLENBQUFobEIsVUFBQSxDQUFBLG9CQUFBbHBCLENBQUEsQ0FBQWpjLENBQUEsQ0FBQSxDQUFBLE9BQUEsS0FBQTJqQyxNQUFBLENBQUExbkIsQ0FBQSxDQUFBamMsQ0FBQSxFQUFBaWMsQ0FBQSxFQUFBLElBQUEsU0FBQSxDQUFBLEtBQUE0dUMsY0FBQSxHQUFBLEtBQUFILGFBQUEsRUFBQSxDQUFBLE1BQUEsUUFBQSxDQUFBLENBQUEsQ0FBQUEsYUFBQSxDQUFBLHdCQUFBLENBQUEsR0FBQTFxRCxDQUFBQSxDQUFBLENBQUEvSixDQUFBLENBQUFpOUIsQ0FBQSxDQUFBcG1CLENBQUEsQ0FBQTgxQixDQUFBLENBQUF6bEMsQ0FBQSxDQUFBLEtBQUFsRSxPQUFBLENBQUErcEMsQ0FBQSxDQUFBLElBQUEsQ0FBQSxHQUFBLEtBQUE0bUIsT0FBQSxDQUFBenNELENBQUEsQ0FBQXlzRCxPQUFBLEdBQUEzdEMsQ0FBQSxDQUFBLHNCQUFBLENBQUEsS0FBQWduQixPQUFBLENBQUEsQ0FBQTNyQyxNQUFBLENBQUEsQ0FBQXdWLENBQUEsQ0FBQSxpQkFBQSxDQUFBOU0sQ0FBQSxDQUFBLGlCQUFBLENBQUFrekIsQ0FBQSxDQUFBLGlCQUFBLENBQUFyL0IsQ0FBQSxDQUFBLGlCQUFBLENBQUFpM0QsRUFBQSxDQUFBLGtCQUFBLENBQUFDLEVBQUEsQ0FBQSxrQkFBQSxDQUFBQyxFQUFBLENBQUEsa0JBQUEsQ0FBQUMsRUFBQSxDQUFBLGtCQUFBLENBQUEsQ0FBQSxRQUFBLENBQUEsQ0FBQSxLQUFBTixRQUFBLENBQUExdUMsQ0FBQSxFQUFBLENBQUEsS0FBQTJ0QyxPQUFBLENBQUF2eUQsV0FBQSxHQUFBNEgsTUFBQSxDQUFBLElBQUEsUUFBQSxLQUFBMnFELE9BQUEsR0FBQSxLQUFBQSxPQUFBLENBQUEscUJBQUEsRUFBQTEyQixDQUFBLENBQUEsS0FBQTAyQixPQUFBLENBQUF0dUQsS0FBQSxDQUFBLEdBQUEsQ0FBQSxDQUFBLEtBQUFzdUQsT0FBQSxDQUFBLEVBQUEsQ0FBQTN6RCxDQUFBLENBQUEsQ0FBQSxDQUFBaTlCLENBQUEsQ0FBQTU3QixNQUFBLENBQUFyQixDQUFBLENBQUFBLENBQUEsRUFBQSxFQUFBK0osQ0FBQSxDQUFBaWMsQ0FBQSxDQUFBK2hCLElBQUEsQ0FBQTlLLENBQUEsQ0FBQWo5QixDQUFBLENBQUEsQ0FBQSxDQUFBNlcsQ0FBQSxDQUFBLGdCQUFBOU0sQ0FBQSxDQUFBNGlDLENBQUEsQ0FBQTNtQixDQUFBLENBQUEsT0FBQSxDQUFBLENBQUEsS0FBQXdwQixTQUFBLENBQUE3QyxDQUFBLENBQUEsdUJBQUE5MUIsQ0FBQSxDQUFBLENBQUE4MUIsQ0FBQSxDQUFBbHJCLEdBQUEsQ0FBQSxDQUFBODBCLE1BQUEsQ0FBQXJ2QyxDQUFBLENBQUFxdkMsTUFBQSxDQUFBLENBQUEsQ0FBQSxLQUFBb2QsT0FBQSxDQUFBNXBELENBQUEsRUFBQSxpQkFBQUEsQ0FBQSxDQUFBLEtBQUFpakMsT0FBQSxDQUFBemYsTUFBQSxDQUFBb2YsQ0FBQSxDQUFBLENBQUEsQ0FBQSxLQUFBc29CLFdBQUEsQ0FBQSxTQUFBbHJELENBQUEsQ0FBQSxDQUFBLEdBQUEvSixDQUFBQSxDQUFBLENBQUFpOUIsQ0FBQSxDQUFBcG1CLENBQUEsQ0FBQTgxQixDQUFBLENBQUE1aUMsQ0FBQSxDQUFBQSxDQUFBLEVBQUEsS0FBQWlqQyxPQUFBLENBQUEsSUFBQWh0QyxDQUFBLEdBQUEsTUFBQTJ6RCxPQUFBLEVBQUEsS0FBQUEsT0FBQSxDQUFBM3pELENBQUEsRUFBQW9CLFdBQUEsR0FBQTRILE1BQUEsQ0FBQSxLQUFBMnFELE9BQUEsQ0FBQTN6RCxDQUFBLEVBQUEsS0FBQWd0QyxPQUFBLENBQUFyMUIsUUFBQSxDQUFBLEtBQUFnOEMsT0FBQSxDQUFBM3pELENBQUEsQ0FBQSxFQUFBbUMsS0FBQSxHQUFBc2dCLElBQUEsRUFBQSxDQUFBLENBQUEsS0FBQWt4QyxPQUFBLENBQUEzekQsQ0FBQSxFQUFBbUIsTUFBQSxFQUFBLEtBQUF3eUQsT0FBQSxDQUFBM3pELENBQUEsRUFBQVgsUUFBQSxJQUFBLEtBQUFzMEQsT0FBQSxDQUFBM3pELENBQUEsRUFBQWdtQixDQUFBLENBQUEsS0FBQTJ0QyxPQUFBLENBQUEzekQsQ0FBQSxDQUFBLENBQUEsQ0FBQSxLQUFBeXVDLEdBQUEsQ0FBQSxLQUFBa2xCLE9BQUEsQ0FBQTN6RCxDQUFBLENBQUEsQ0FBQSxDQUFBKy9DLFNBQUEsQ0FBQWhULENBQUEsQ0FBQThmLFVBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxLQUFBd0gsZ0JBQUEsRUFBQSxLQUFBSCxlQUFBLENBQUEsQ0FBQSxFQUFBdnFELFFBQUEsQ0FBQVMsS0FBQSxDQUFBLG1DQUFBLENBQUEsR0FBQTZ5QixDQUFBLENBQUFqWCxDQUFBLENBQUEsS0FBQTJ0QyxPQUFBLENBQUEzekQsQ0FBQSxDQUFBLENBQUEsS0FBQWd0QyxPQUFBLENBQUEsQ0FBQUwsQ0FBQSxDQUFBLGtCQUFBNWhDLElBQUEsQ0FBQS9LLENBQUEsRUFBQWk5QixDQUFBLENBQUFrVCxXQUFBLEVBQUEsQ0FBQWxULENBQUEsQ0FBQWlULFVBQUEsRUFBQSxDQUFBcjVCLENBQUEsQ0FBQSxDQUFBLFNBQUEsQ0FBQSxVQUFBOUwsSUFBQSxDQUFBL0ssQ0FBQSxFQUFBLEtBQUEsQ0FBQSxVQUFBK0ssSUFBQSxDQUFBL0ssQ0FBQSxFQUFBLFFBQUEsQ0FBQSxNQUFBK0ssSUFBQSxDQUFBL0ssQ0FBQSxFQUFBLE9BQUEsQ0FBQSxNQUFBLEVBQUFtTCxJQUFBLENBQUEsRUFBQSxDQUFBLENBQUFwQixDQUFBLENBQUEwWCxHQUFBLENBQUE1SyxDQUFBLENBQUE4MUIsQ0FBQSxDQUFBLENBQUEsS0FBQTZuQixxQkFBQSxFQUFBLENBQUEsQ0FBQSxLQUFBRSxRQUFBLENBQUEsS0FBQUEsUUFBQSxDQUFBdDhDLEdBQUEsQ0FBQSxLQUFBdTdDLE9BQUEsQ0FBQTN6RCxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLEtBQUFpMUQsV0FBQSxDQUFBLEtBQUFqb0IsT0FBQSxDQUFBLENBQUEsS0FBQTBuQixRQUFBLENBQUEsS0FBQUEsUUFBQSxDQUFBdDhDLEdBQUEsQ0FBQSxLQUFBNDBCLE9BQUEsQ0FBQWwvQixJQUFBLENBQUEsc0JBQUEsQ0FBQSxDQUFBLENBQUEsS0FBQTRtRCxRQUFBLENBQUFsaUIsZ0JBQUEsRUFBQSxDQUFBLEtBQUFraUIsUUFBQSxDQUFBbnZDLEVBQUEsQ0FBQSxXQUFBLENBQUEsVUFBQSxDQUFBd25CLENBQUEsQ0FBQTRuQixRQUFBLEdBQUEsS0FBQW5uRCxTQUFBLEdBQUFtL0IsQ0FBQSxDQUFBLEtBQUFuL0IsU0FBQSxDQUFBcEQsS0FBQSxDQUFBLHFDQUFBLENBQUEsRUFBQTJpQyxDQUFBLENBQUF1aEIsSUFBQSxDQUFBM2hCLENBQUEsRUFBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsSUFBQSxFQUFBLENBQUEsQ0FBQSxDQUFBemxDLENBQUEsQ0FBQXVzRCxRQUFBLEdBQUEsS0FBQWlCLFFBQUEsQ0FBQS94QyxJQUFBLEdBQUEsS0FBQTZzQixTQUFBLENBQUEsdUJBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBb2xCLGNBQUEsQ0FBQSx5QkFBQSxDQUFBLEtBQUFGLFFBQUEsQ0FBQTU2QyxNQUFBLEdBQUEsQ0FBQSxDQUFBd3pDLGFBQUEsQ0FBQSx1QkFBQXZqRCxDQUFBLENBQUEsQ0FBQSxHQUFBL0osQ0FBQUEsQ0FBQSxDQUFBaTlCLENBQUEsQ0FBQXBtQixDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsSUFBQTdXLENBQUEsR0FBQSxNQUFBMnpELE9BQUEsRUFBQTEyQixDQUFBLENBQUFqWCxDQUFBLENBQUEsS0FBQTJ0QyxPQUFBLENBQUEzekQsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBaTlCLENBQUEsR0FBQWx6QixDQUFBLENBQUExRyxNQUFBLEVBQUEyaUIsQ0FBQSxDQUFBemYsUUFBQSxDQUFBMDJCLENBQUEsQ0FBQWx6QixDQUFBLENBQUExRyxNQUFBLENBQUEsSUFBQXdULENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsTUFBQSxDQUFBLEtBQUE3VCxPQUFBLENBQUEwRyxRQUFBLEVBQUFtTixDQUFBLENBQUEsQ0FBQSxDQUFBODJDLFdBQUEsQ0FBQSxxQkFBQTVqRCxDQUFBLENBQUEsQ0FBQSxHQUFBL0osQ0FBQUEsQ0FBQSxDQUFBaTlCLENBQUEsQ0FBQXBtQixDQUFBLENBQUE4MUIsQ0FBQSxDQUFBLEtBQUEzcEMsT0FBQSxDQUFBa0UsQ0FBQSxDQUFBLEtBQUE4bEMsT0FBQSxDQUFBLE1BQUEsTUFBQTJuQixRQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsS0FBQU8sWUFBQSxFQUFBLENBQUFsMUQsQ0FBQSxDQUFBLEtBQUErekQsSUFBQSxDQUFBLEtBQUFwRixNQUFBLENBQUFsdEMsR0FBQSxDQUFBLE1BQUEsQ0FBQSxDQUFBLENBQUF3YixDQUFBLENBQUEsS0FBQTgyQixJQUFBLENBQUEsS0FBQXBGLE1BQUEsQ0FBQWx0QyxHQUFBLENBQUEsS0FBQSxDQUFBLENBQUEsQ0FBQWtyQixDQUFBLENBQUE2aEIsV0FBQSxHQUFBeHVELENBQUEsRUFBQWdtQixDQUFBLENBQUEybUIsQ0FBQSxDQUFBNmhCLFdBQUEsQ0FBQSxDQUFBejVCLFVBQUEsSUFBQSxDQUFBLENBQUFrSSxDQUFBLEVBQUFqWCxDQUFBLENBQUEybUIsQ0FBQSxDQUFBNmhCLFdBQUEsQ0FBQSxDQUFBMTVCLFNBQUEsSUFBQSxDQUFBLENBQUEsQ0FBQSxLQUFBK1EsTUFBQSxDQUFBLEtBQUE4b0IsTUFBQSxDQUFBOW9CLE1BQUEsRUFBQSxDQUFBLEtBQUF0VyxRQUFBLENBQUEsQ0FBQW9FLElBQUEsQ0FBQTN6QixDQUFBLENBQUFxTixHQUFBLENBQUE0dkIsQ0FBQSxDQUFBLENBQUEsS0FBQXliLElBQUEsQ0FBQSxLQUFBMFosT0FBQSxDQUFBLENBQUE5aUMsS0FBQSxDQUFBLEtBQUFxL0IsTUFBQSxDQUFBci9CLEtBQUEsRUFBQSxDQUFBbUIsTUFBQSxDQUFBLEtBQUFrK0IsTUFBQSxDQUFBbCtCLE1BQUEsRUFBQSxDQUFBLENBQUEsQ0FBQW5CLEtBQUEsQ0FBQXBvQixDQUFBLENBQUFvb0IsS0FBQSxFQUFBLENBQUFtQixNQUFBLENBQUF2cEIsQ0FBQSxDQUFBdXBCLE1BQUEsRUFBQSxDQUFBLENBQUEsS0FBQTBrQyxZQUFBLENBQUEsS0FBQS9DLE9BQUEsQ0FBQSxDQUFBOWlDLEtBQUEsQ0FBQXBvQixDQUFBLENBQUFncEMsVUFBQSxFQUFBLENBQUF6ZixNQUFBLENBQUF2cEIsQ0FBQSxDQUFBaXBDLFdBQUEsRUFBQSxDQUFBLENBQUEsQ0FBQTdnQixLQUFBLENBQUFwb0IsQ0FBQSxDQUFBb29CLEtBQUEsRUFBQSxDQUFBbUIsTUFBQSxDQUFBdnBCLENBQUEsQ0FBQXVwQixNQUFBLEVBQUEsQ0FBQSxDQUFBLEtBQUEya0MsUUFBQSxDQUFBLENBQUE5bEMsS0FBQSxDQUFBcG9CLENBQUEsQ0FBQWdwQyxVQUFBLEdBQUFocEMsQ0FBQSxDQUFBb29CLEtBQUEsRUFBQSxDQUFBbUIsTUFBQSxDQUFBdnBCLENBQUEsQ0FBQWlwQyxXQUFBLEdBQUFqcEMsQ0FBQSxDQUFBdXBCLE1BQUEsRUFBQSxDQUFBLENBQUEsS0FBQSsvQixnQkFBQSxDQUFBLENBQUE3OEIsSUFBQSxDQUFBM3pCLENBQUEsQ0FBQXFOLEdBQUEsQ0FBQTR2QixDQUFBLENBQUEsQ0FBQSxLQUFBbzRCLHFCQUFBLENBQUEsQ0FBQTFoQyxJQUFBLENBQUE1cEIsQ0FBQSxDQUFBa2dCLEtBQUEsQ0FBQTVjLEdBQUEsQ0FBQXRELENBQUEsQ0FBQW1nQixLQUFBLENBQUEsQ0FBQSxLQUFBc3BDLFdBQUEsQ0FBQSxVQUFBLE1BQUE3bUIsQ0FBQUEsQ0FBQSxDQUFBNm1CLFdBQUEsQ0FBQTdtQixDQUFBLENBQUE2bUIsV0FBQSxDQUFBLEtBQUEyQixZQUFBLENBQUE3bEMsS0FBQSxDQUFBLEtBQUE2bEMsWUFBQSxDQUFBMWtDLE1BQUEsRUFBQSxDQUFBLENBQUE1WixDQUFBLENBQUFtUCxDQUFBLENBQUEsaUJBQUEsS0FBQXNvQyxJQUFBLENBQUEsQ0FBQTdzQyxHQUFBLENBQUEsUUFBQSxDQUFBLENBQUF1RSxDQUFBLENBQUEsTUFBQSxDQUFBLENBQUF2RSxHQUFBLENBQUEsUUFBQSxDQUFBLFNBQUE1SyxDQUFBLENBQUEsS0FBQXkzQyxJQUFBLENBQUEsU0FBQSxDQUFBejNDLENBQUEsQ0FBQSxDQUFBLEtBQUEyNEIsU0FBQSxDQUFBLHVCQUFBLENBQUEsQ0FBQSxLQUFBOGxCLFVBQUEsQ0FBQSxPQUFBLENBQUF2ckQsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBZ2tELFVBQUEsQ0FBQSxvQkFBQWhrRCxDQUFBLENBQUEsQ0FBQSxHQUFBL0osQ0FBQUEsQ0FBQSxDQUFBaTlCLENBQUEsQ0FBQXBtQixDQUFBLENBQUEsS0FBQXcrQyxxQkFBQSxDQUFBMW9CLENBQUEsQ0FBQSxLQUFBMmhCLElBQUEsQ0FBQXBuRCxDQUFBLENBQUE2QyxDQUFBLENBQUFrZ0IsS0FBQSxDQUFBcFQsQ0FBQSxDQUFBOGMsSUFBQSxFQUFBLENBQUEsQ0FBQW9aLENBQUEsQ0FBQWhqQyxDQUFBLENBQUFtZ0IsS0FBQSxDQUFBclQsQ0FBQSxDQUFBeEosR0FBQSxFQUFBLENBQUEsQ0FBQSsvQixDQUFBLENBQUEsS0FBQXdTLE9BQUEsQ0FBQWpULENBQUEsQ0FBQSxDQUFBLE1BQUEsTUFBQTRvQixxQkFBQSxHQUFBbm9CLENBQUEsRUFBQXB0QyxDQUFBLENBQUFvdEMsQ0FBQSxDQUFBM3VDLEtBQUEsQ0FBQSxJQUFBLENBQUEsQ0FBQXNMLENBQUEsQ0FBQTdDLENBQUEsQ0FBQTZsQyxDQUFBLENBQUEsQ0FBQSxDQUFBLEtBQUF5b0Isd0JBQUEsQ0FBQXpyRCxDQUFBLENBQUFvZ0IsUUFBQSxDQUFBLENBQUEsQ0FBQSxLQUFBOHBDLFlBQUEsRUFBQWxxRCxDQUFBLENBQUFvZ0IsUUFBQSxJQUFBbnFCLENBQUEsQ0FBQSxLQUFBeTFELFlBQUEsQ0FBQXoxRCxDQUFBLENBQUErSixDQUFBLENBQUEsQ0FBQSxDQUFBL0osQ0FBQSxDQUFBLEtBQUEwMUQsWUFBQSxDQUFBMTFELENBQUEsQ0FBQStKLENBQUEsQ0FBQSxDQUFBLEtBQUE0ckQsWUFBQSxDQUFBMzFELENBQUEsQ0FBQSxDQUFBLEtBQUFzMUQsVUFBQSxDQUFBLFFBQUEsQ0FBQXZyRCxDQUFBLENBQUEsQ0FBQWt6QixDQUFBLENBQUEsS0FBQTI0QixhQUFBLEVBQUEsQ0FBQSxDQUFBLEtBQUF4RCxPQUFBLEVBQUEsS0FBQStCLDZCQUFBLENBQUE5eUQsTUFBQSxFQUFBLEtBQUFtekQscUJBQUEsRUFBQSxDQUFBeHVDLENBQUEsQ0FBQTNoQixhQUFBLENBQUE0NEIsQ0FBQSxJQUFBLEtBQUFzNEIscUJBQUEsR0FBQSxLQUFBcm9CLFFBQUEsQ0FBQSxRQUFBLENBQUFuakMsQ0FBQSxDQUFBLEtBQUFvakMsRUFBQSxFQUFBLENBQUEsQ0FBQSxLQUFBeW9CLGFBQUEsRUFBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLEVBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBNUgsVUFBQSxDQUFBLG9CQUFBamtELENBQUEsQ0FBQSxDQUFBLEtBQUE0cUQsUUFBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLEdBQUEzMEQsQ0FBQUEsQ0FBQSxDQUFBaTlCLENBQUEsQ0FBQXBtQixDQUFBLENBQUE4MUIsQ0FBQSxDQUFBemxDLENBQUEsQ0FBQTZsQyxDQUFBLENBQUFLLENBQUEsQ0FBQXAxQixDQUFBLENBQUEsS0FBQWhWLE9BQUEsQ0FBQXlzQyxDQUFBLENBQUEsSUFBQSxDQUFBLE1BQUEsTUFBQTJpQixPQUFBLEdBQUFweUQsQ0FBQSxDQUFBLEtBQUFtMEQsNkJBQUEsQ0FBQWwzQixDQUFBLENBQUFqOUIsQ0FBQSxDQUFBcUIsTUFBQSxFQUFBLFlBQUEwSixJQUFBLENBQUEvSyxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEySixRQUFBLENBQUEsQ0FBQWtOLENBQUEsQ0FBQW9tQixDQUFBLEVBQUEsS0FBQXFoQixVQUFBLENBQUF0K0MsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLE1BQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQXl2QyxDQUFBLENBQUEybEIsUUFBQSxDQUFBM2tDLE1BQUEsQ0FBQWtjLENBQUEsQ0FBQTFQLENBQUEsQ0FBQSxDQUFBLENBQUF3UyxDQUFBLENBQUEybEIsUUFBQSxDQUFBOWxDLEtBQUEsQ0FBQXBvQixDQUFBLENBQUEsQ0FBQW9vQixLQUFBLENBQUFtZ0IsQ0FBQSxDQUFBa2YsTUFBQSxDQUFBci9CLEtBQUEsR0FBQXFkLENBQUEsQ0FBQWxjLE1BQUEsQ0FBQWdmLENBQUEsQ0FBQWtmLE1BQUEsQ0FBQWwrQixNQUFBLEdBQUE1WixDQUFBLENBQUEsQ0FBQWsyQixDQUFBLENBQUFuZCxVQUFBLENBQUE2ZixDQUFBLENBQUF6QyxPQUFBLENBQUF2ckIsR0FBQSxDQUFBLE1BQUEsQ0FBQSxDQUFBLEVBQUFndUIsQ0FBQSxDQUFBbGdCLFFBQUEsQ0FBQW9FLElBQUEsQ0FBQThiLENBQUEsQ0FBQStnQixnQkFBQSxDQUFBNzhCLElBQUEsR0FBQSxJQUFBLENBQUF5WixDQUFBLENBQUF4ZCxVQUFBLENBQUE2ZixDQUFBLENBQUF6QyxPQUFBLENBQUF2ckIsR0FBQSxDQUFBLEtBQUEsQ0FBQSxDQUFBLEVBQUFndUIsQ0FBQSxDQUFBbGdCLFFBQUEsQ0FBQWxpQixHQUFBLENBQUFvaUMsQ0FBQSxDQUFBK2dCLGdCQUFBLENBQUFuakQsR0FBQSxHQUFBLElBQUEsQ0FBQTJLLENBQUEsQ0FBQXNnQixPQUFBLEVBQUEsS0FBQTBVLE9BQUEsQ0FBQXZyQixHQUFBLENBQUF1RSxDQUFBLENBQUFqakIsTUFBQSxDQUFBbUUsQ0FBQSxDQUFBLENBQUFtRyxHQUFBLENBQUErL0IsQ0FBQSxDQUFBelosSUFBQSxDQUFBb1osQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBMEMsQ0FBQSxDQUFBa2YsTUFBQSxDQUFBbCtCLE1BQUEsQ0FBQWdmLENBQUEsQ0FBQWlKLElBQUEsQ0FBQWpvQixNQUFBLENBQUEsQ0FBQWdmLENBQUEsQ0FBQWtmLE1BQUEsQ0FBQXIvQixLQUFBLENBQUFtZ0IsQ0FBQSxDQUFBaUosSUFBQSxDQUFBcHBCLEtBQUEsQ0FBQSxDQUFBLEtBQUE4aUMsT0FBQSxFQUFBLENBQUFwNkMsQ0FBQSxDQUFBc2dCLE9BQUEsRUFBQSxLQUFBazhCLHFCQUFBLEVBQUEsRUFBQXh1QyxDQUFBLENBQUEsTUFBQSxDQUFBLENBQUF2RSxHQUFBLENBQUEsUUFBQSxDQUFBLE1BQUEsQ0FBQSxDQUFBLEtBQUF1dEIsWUFBQSxDQUFBLHVCQUFBLENBQUEsQ0FBQSxLQUFBc21CLFVBQUEsQ0FBQSxNQUFBLENBQUF2ckQsQ0FBQSxDQUFBLENBQUEsS0FBQXFvRCxPQUFBLEVBQUEsS0FBQXpELE1BQUEsQ0FBQTcwQyxNQUFBLEVBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUF5N0MscUJBQUEsQ0FBQSxnQ0FBQSxDQUFBLEtBQUFNLFlBQUEsQ0FBQSxDQUFBeG9ELEdBQUEsQ0FBQSxLQUFBa2lCLFFBQUEsQ0FBQWxpQixHQUFBLENBQUFzbUIsSUFBQSxDQUFBLEtBQUFwRSxRQUFBLENBQUFvRSxJQUFBLENBQUEsQ0FBQSxLQUFBbWlDLFFBQUEsQ0FBQSxDQUFBeG1DLEtBQUEsQ0FBQSxLQUFBb3BCLElBQUEsQ0FBQXBwQixLQUFBLENBQUFtQixNQUFBLENBQUEsS0FBQWlvQixJQUFBLENBQUFqb0IsTUFBQSxDQUFBLENBQUEsQ0FBQSxDQUFBbWxDLGFBQUEsQ0FBQSx3QkFBQSxDQUFBLEdBQUE1dkMsQ0FBQUEsQ0FBQSxDQUFBLEVBQUEsQ0FBQSxNQUFBLE1BQUF1SixRQUFBLENBQUFsaUIsR0FBQSxHQUFBLEtBQUF3b0QsWUFBQSxDQUFBeG9ELEdBQUEsR0FBQTJZLENBQUEsQ0FBQTNZLEdBQUEsQ0FBQSxLQUFBa2lCLFFBQUEsQ0FBQWxpQixHQUFBLENBQUEsSUFBQSxFQUFBLEtBQUFraUIsUUFBQSxDQUFBb0UsSUFBQSxHQUFBLEtBQUFraUMsWUFBQSxDQUFBbGlDLElBQUEsR0FBQTNOLENBQUEsQ0FBQTJOLElBQUEsQ0FBQSxLQUFBcEUsUUFBQSxDQUFBb0UsSUFBQSxDQUFBLElBQUEsQ0FBQSxDQUFBLEtBQUEra0IsSUFBQSxDQUFBcHBCLEtBQUEsR0FBQSxLQUFBd21DLFFBQUEsQ0FBQXhtQyxLQUFBLEdBQUF0SixDQUFBLENBQUFzSixLQUFBLENBQUEsS0FBQW9wQixJQUFBLENBQUFwcEIsS0FBQSxDQUFBLElBQUEsQ0FBQSxDQUFBLEtBQUFvcEIsSUFBQSxDQUFBam9CLE1BQUEsR0FBQSxLQUFBcWxDLFFBQUEsQ0FBQXJsQyxNQUFBLEdBQUF6SyxDQUFBLENBQUF5SyxNQUFBLENBQUEsS0FBQWlvQixJQUFBLENBQUFqb0IsTUFBQSxDQUFBLElBQUEsQ0FBQSxDQUFBLEtBQUFrK0IsTUFBQSxDQUFBbHRDLEdBQUEsQ0FBQXVFLENBQUEsQ0FBQSxDQUFBQSxDQUFBLENBQUEsQ0FBQSxDQUFBd3ZDLHdCQUFBLENBQUEsa0NBQUF4dkMsQ0FBQSxDQUFBLENBQUEsR0FBQWpjLENBQUFBLENBQUEsQ0FBQS9KLENBQUEsQ0FBQWk5QixDQUFBLENBQUFwbUIsQ0FBQSxDQUFBODFCLENBQUEsQ0FBQXpsQyxDQUFBLENBQUEsS0FBQWxFLE9BQUEsQ0FBQTJwQyxDQUFBLENBQUEsQ0FBQTliLFFBQUEsQ0FBQSxLQUFBbWpDLFNBQUEsQ0FBQTlzRCxDQUFBLENBQUEycEIsUUFBQSxFQUFBM3BCLENBQUEsQ0FBQTJwQixRQUFBLENBQUEsQ0FBQSxDQUFBQyxRQUFBLENBQUEsS0FBQWtqQyxTQUFBLENBQUE5c0QsQ0FBQSxDQUFBNHBCLFFBQUEsRUFBQTVwQixDQUFBLENBQUE0cEIsUUFBQSxDQUFBLEVBQUEsQ0FBQSxDQUFBK2lDLFNBQUEsQ0FBQSxLQUFBRyxTQUFBLENBQUE5c0QsQ0FBQSxDQUFBMnNELFNBQUEsRUFBQTNzRCxDQUFBLENBQUEyc0QsU0FBQSxDQUFBLENBQUEsQ0FBQUQsU0FBQSxDQUFBLEtBQUFJLFNBQUEsQ0FBQTlzRCxDQUFBLENBQUEwc0QsU0FBQSxFQUFBMXNELENBQUEsQ0FBQTBzRCxTQUFBLENBQUEsRUFBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLEtBQUFLLFlBQUEsRUFBQWp1QyxDQUFBLElBQUFqYyxDQUFBLENBQUE0aUMsQ0FBQSxDQUFBa25CLFNBQUEsQ0FBQSxLQUFBTCxXQUFBLENBQUF2MkIsQ0FBQSxDQUFBMFAsQ0FBQSxDQUFBOWIsUUFBQSxDQUFBLEtBQUEyaUMsV0FBQSxDQUFBeHpELENBQUEsQ0FBQTJzQyxDQUFBLENBQUFpbkIsU0FBQSxDQUFBLEtBQUFKLFdBQUEsQ0FBQTM4QyxDQUFBLENBQUE4MUIsQ0FBQSxDQUFBN2IsUUFBQSxDQUFBLEtBQUEwaUMsV0FBQSxDQUFBenBELENBQUEsQ0FBQTRpQyxDQUFBLENBQUE5YixRQUFBLEdBQUE4YixDQUFBLENBQUE5YixRQUFBLENBQUE5bUIsQ0FBQSxDQUFBLENBQUFrekIsQ0FBQSxDQUFBMFAsQ0FBQSxDQUFBa25CLFNBQUEsR0FBQWxuQixDQUFBLENBQUFrbkIsU0FBQSxDQUFBNTJCLENBQUEsQ0FBQSxDQUFBMFAsQ0FBQSxDQUFBN2IsUUFBQSxDQUFBOXdCLENBQUEsR0FBQTJzQyxDQUFBLENBQUE3YixRQUFBLENBQUE5d0IsQ0FBQSxDQUFBLENBQUEyc0MsQ0FBQSxDQUFBaW5CLFNBQUEsQ0FBQS84QyxDQUFBLEdBQUE4MUIsQ0FBQSxDQUFBaW5CLFNBQUEsQ0FBQS84QyxDQUFBLENBQUEsQ0FBQSxDQUFBLEtBQUFrL0MsWUFBQSxDQUFBcHBCLENBQUEsQ0FBQSxDQUFBLENBQUFncEIsWUFBQSxDQUFBLHNCQUFBM3ZDLENBQUEsQ0FBQSxDQUFBLEtBQUE2ZixNQUFBLENBQUEsS0FBQThvQixNQUFBLENBQUE5b0IsTUFBQSxFQUFBLENBQUEsS0FBQW11QixTQUFBLENBQUFodUMsQ0FBQSxDQUFBMk4sSUFBQSxJQUFBLEtBQUFwRSxRQUFBLENBQUFvRSxJQUFBLENBQUEzTixDQUFBLENBQUEyTixJQUFBLENBQUEsQ0FBQSxLQUFBcWdDLFNBQUEsQ0FBQWh1QyxDQUFBLENBQUEzWSxHQUFBLElBQUEsS0FBQWtpQixRQUFBLENBQUFsaUIsR0FBQSxDQUFBMlksQ0FBQSxDQUFBM1ksR0FBQSxDQUFBLENBQUEsS0FBQTJtRCxTQUFBLENBQUFodUMsQ0FBQSxDQUFBeUssTUFBQSxJQUFBLEtBQUFpb0IsSUFBQSxDQUFBam9CLE1BQUEsQ0FBQXpLLENBQUEsQ0FBQXlLLE1BQUEsQ0FBQSxDQUFBLEtBQUF1akMsU0FBQSxDQUFBaHVDLENBQUEsQ0FBQXNKLEtBQUEsSUFBQSxLQUFBb3BCLElBQUEsQ0FBQXBwQixLQUFBLENBQUF0SixDQUFBLENBQUFzSixLQUFBLENBQUEsQ0FBQSxDQUFBLENBQUFtbUMsWUFBQSxDQUFBLHNCQUFBenZDLENBQUEsQ0FBQSxDQUFBLEdBQUFqYyxDQUFBQSxDQUFBLENBQUEsS0FBQXdsQixRQUFBLENBQUF2dkIsQ0FBQSxDQUFBLEtBQUEwNEMsSUFBQSxDQUFBemIsQ0FBQSxDQUFBLEtBQUFxeEIsSUFBQSxDQUFBLE1BQUEsTUFBQTBGLFNBQUEsQ0FBQWh1QyxDQUFBLENBQUF5SyxNQUFBLEVBQUF6SyxDQUFBLENBQUFzSixLQUFBLENBQUF0SixDQUFBLENBQUF5SyxNQUFBLENBQUEsS0FBQStpQyxXQUFBLENBQUEsS0FBQVEsU0FBQSxDQUFBaHVDLENBQUEsQ0FBQXNKLEtBQUEsSUFBQXRKLENBQUEsQ0FBQXlLLE1BQUEsQ0FBQXpLLENBQUEsQ0FBQXNKLEtBQUEsQ0FBQSxLQUFBa2tDLFdBQUEsQ0FBQSxDQUFBLE9BQUF2MkIsQ0FBQSxHQUFBalgsQ0FBQSxDQUFBMk4sSUFBQSxDQUFBNXBCLENBQUEsQ0FBQTRwQixJQUFBLEVBQUEzekIsQ0FBQSxDQUFBc3ZCLEtBQUEsQ0FBQXRKLENBQUEsQ0FBQXNKLEtBQUEsQ0FBQSxDQUFBdEosQ0FBQSxDQUFBM1ksR0FBQSxDQUFBLElBQUEsQ0FBQSxDQUFBLE9BQUE0dkIsQ0FBQSxHQUFBalgsQ0FBQSxDQUFBM1ksR0FBQSxDQUFBdEQsQ0FBQSxDQUFBc0QsR0FBQSxFQUFBck4sQ0FBQSxDQUFBeXdCLE1BQUEsQ0FBQXpLLENBQUEsQ0FBQXlLLE1BQUEsQ0FBQSxDQUFBekssQ0FBQSxDQUFBMk4sSUFBQSxDQUFBNXBCLENBQUEsQ0FBQTRwQixJQUFBLEVBQUEzekIsQ0FBQSxDQUFBc3ZCLEtBQUEsQ0FBQXRKLENBQUEsQ0FBQXNKLEtBQUEsQ0FBQSxDQUFBLENBQUF0SixDQUFBLENBQUEsQ0FBQSxDQUFBMHZDLFlBQUEsQ0FBQSxzQkFBQTF2QyxDQUFBLENBQUEsQ0FBQSxHQUFBamMsQ0FBQUEsQ0FBQSxDQUFBLEtBQUFnc0QsWUFBQSxDQUFBLzFELENBQUEsQ0FBQSxLQUFBc3VELElBQUEsQ0FBQXJ4QixDQUFBLENBQUEsS0FBQSsyQixTQUFBLENBQUFodUMsQ0FBQSxDQUFBc0osS0FBQSxHQUFBdmxCLENBQUEsQ0FBQSttQixRQUFBLEVBQUEvbUIsQ0FBQSxDQUFBK21CLFFBQUEsQ0FBQTlLLENBQUEsQ0FBQXNKLEtBQUEsQ0FBQXpZLENBQUEsQ0FBQSxLQUFBbTlDLFNBQUEsQ0FBQWh1QyxDQUFBLENBQUF5SyxNQUFBLEdBQUExbUIsQ0FBQSxDQUFBNnBELFNBQUEsRUFBQTdwRCxDQUFBLENBQUE2cEQsU0FBQSxDQUFBNXRDLENBQUEsQ0FBQXlLLE1BQUEsQ0FBQWtjLENBQUEsQ0FBQSxLQUFBcW5CLFNBQUEsQ0FBQWh1QyxDQUFBLENBQUFzSixLQUFBLEdBQUF2bEIsQ0FBQSxDQUFBOG1CLFFBQUEsRUFBQTltQixDQUFBLENBQUE4bUIsUUFBQSxDQUFBN0ssQ0FBQSxDQUFBc0osS0FBQSxDQUFBcG9CLENBQUEsQ0FBQSxLQUFBOHNELFNBQUEsQ0FBQWh1QyxDQUFBLENBQUF5SyxNQUFBLEdBQUExbUIsQ0FBQSxDQUFBOHBELFNBQUEsRUFBQTlwRCxDQUFBLENBQUE4cEQsU0FBQSxDQUFBN3RDLENBQUEsQ0FBQXlLLE1BQUEsQ0FBQXNjLENBQUEsQ0FBQSxLQUFBeWpCLGdCQUFBLENBQUE3OEIsSUFBQSxDQUFBLEtBQUF3aEMsWUFBQSxDQUFBN2xDLEtBQUEsQ0FBQThkLENBQUEsQ0FBQSxLQUFBb2pCLGdCQUFBLENBQUFuakQsR0FBQSxDQUFBLEtBQUE4bkQsWUFBQSxDQUFBMWtDLE1BQUEsQ0FBQXpZLENBQUEsQ0FBQSxVQUFBak4sSUFBQSxDQUFBL0ssQ0FBQSxDQUFBLENBQUF5dkMsQ0FBQSxDQUFBLFVBQUExa0MsSUFBQSxDQUFBL0ssQ0FBQSxDQUFBLENBQUEsTUFBQTJzQyxDQUFBQSxDQUFBLEdBQUEzbUIsQ0FBQSxDQUFBc0osS0FBQSxDQUFBdmxCLENBQUEsQ0FBQThtQixRQUFBLENBQUEsQ0FBQTNwQixDQUFBLEdBQUE4ZSxDQUFBLENBQUF5SyxNQUFBLENBQUExbUIsQ0FBQSxDQUFBOHBELFNBQUEsQ0FBQSxDQUFBNTJCLENBQUEsR0FBQWpYLENBQUEsQ0FBQXNKLEtBQUEsQ0FBQXZsQixDQUFBLENBQUErbUIsUUFBQSxDQUFBLENBQUFqYSxDQUFBLEdBQUFtUCxDQUFBLENBQUF5SyxNQUFBLENBQUExbUIsQ0FBQSxDQUFBNnBELFNBQUEsQ0FBQSxDQUFBam5CLENBQUEsRUFBQTMwQixDQUFBLEdBQUFnTyxDQUFBLENBQUEyTixJQUFBLENBQUFvWixDQUFBLENBQUFoakMsQ0FBQSxDQUFBOG1CLFFBQUEsQ0FBQSxDQUFBb00sQ0FBQSxFQUFBamxCLENBQUEsR0FBQWdPLENBQUEsQ0FBQTJOLElBQUEsQ0FBQW9aLENBQUEsQ0FBQWhqQyxDQUFBLENBQUErbUIsUUFBQSxDQUFBLENBQUE1cEIsQ0FBQSxFQUFBdW9DLENBQUEsR0FBQXpwQixDQUFBLENBQUEzWSxHQUFBLENBQUErL0IsQ0FBQSxDQUFBcmpDLENBQUEsQ0FBQThwRCxTQUFBLENBQUEsQ0FBQWg5QyxDQUFBLEVBQUE0NEIsQ0FBQSxHQUFBenBCLENBQUEsQ0FBQTNZLEdBQUEsQ0FBQSsvQixDQUFBLENBQUFyakMsQ0FBQSxDQUFBNnBELFNBQUEsQ0FBQSxDQUFBNXRDLENBQUEsQ0FBQXNKLEtBQUEsRUFBQXRKLENBQUEsQ0FBQXlLLE1BQUEsRUFBQXpLLENBQUEsQ0FBQTJOLElBQUEsRUFBQSxDQUFBM04sQ0FBQSxDQUFBM1ksR0FBQSxDQUFBMlksQ0FBQSxDQUFBc0osS0FBQSxFQUFBdEosQ0FBQSxDQUFBeUssTUFBQSxFQUFBekssQ0FBQSxDQUFBM1ksR0FBQSxFQUFBLENBQUEyWSxDQUFBLENBQUEyTixJQUFBLEdBQUEzTixDQUFBLENBQUEyTixJQUFBLENBQUEsSUFBQSxDQUFBLENBQUEzTixDQUFBLENBQUEzWSxHQUFBLENBQUEsSUFBQSxDQUFBMlksQ0FBQSxDQUFBLENBQUEsQ0FBQWd3QywrQkFBQSxDQUFBLHlDQUFBaHdDLENBQUEsQ0FBQSxDQUFBLElBQUEsR0FBQWpjLENBQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEvSixDQUFBLENBQUEsRUFBQSxDQUFBaTlCLENBQUEsQ0FBQSxDQUFBalgsQ0FBQSxDQUFBdkUsR0FBQSxDQUFBLGdCQUFBLENBQUEsQ0FBQXVFLENBQUEsQ0FBQXZFLEdBQUEsQ0FBQSxrQkFBQSxDQUFBLENBQUF1RSxDQUFBLENBQUF2RSxHQUFBLENBQUEsbUJBQUEsQ0FBQSxDQUFBdUUsQ0FBQSxDQUFBdkUsR0FBQSxDQUFBLGlCQUFBLENBQUEsQ0FBQSxDQUFBNUssQ0FBQSxDQUFBLENBQUFtUCxDQUFBLENBQUF2RSxHQUFBLENBQUEsWUFBQSxDQUFBLENBQUF1RSxDQUFBLENBQUF2RSxHQUFBLENBQUEsY0FBQSxDQUFBLENBQUF1RSxDQUFBLENBQUF2RSxHQUFBLENBQUEsZUFBQSxDQUFBLENBQUF1RSxDQUFBLENBQUF2RSxHQUFBLENBQUEsYUFBQSxDQUFBLENBQUEsQ0FBQSxFQUFBMVgsQ0FBQSxDQUFBQSxDQUFBLEVBQUEsRUFBQS9KLENBQUEsQ0FBQStKLENBQUEsQ0FBQSxDQUFBNmxCLFVBQUEsQ0FBQXFOLENBQUEsQ0FBQWx6QixDQUFBLENBQUEsQ0FBQSxFQUFBLENBQUEsQ0FBQS9KLENBQUEsQ0FBQStKLENBQUEsQ0FBQSxFQUFBNmxCLFVBQUEsQ0FBQS9ZLENBQUEsQ0FBQTlNLENBQUEsQ0FBQSxDQUFBLEVBQUEsQ0FBQSxDQUFBLENBQUEsTUFBQSxDQUFBMG1CLE1BQUEsQ0FBQXp3QixDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQXN2QixLQUFBLENBQUF0dkIsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUF3MEQscUJBQUEsQ0FBQSxnQ0FBQSxDQUFBLEdBQUEsS0FBQUwsNkJBQUEsQ0FBQTl5RCxNQUFBLENBQUEsSUFBQSxHQUFBMmtCLENBQUFBLENBQUEsQ0FBQWpjLENBQUEsQ0FBQSxDQUFBLENBQUEvSixDQUFBLENBQUEsS0FBQTJ1RCxNQUFBLEVBQUEsS0FBQTNoQixPQUFBLENBQUEsS0FBQW1uQiw2QkFBQSxDQUFBOXlELE1BQUEsQ0FBQTBJLENBQUEsQ0FBQUEsQ0FBQSxFQUFBLEVBQUFpYyxDQUFBLENBQUEsS0FBQW11Qyw2QkFBQSxDQUFBcHFELENBQUEsQ0FBQSxDQUFBLEtBQUFrc0QsZUFBQSxHQUFBLEtBQUFBLGVBQUEsQ0FBQSxLQUFBRCwrQkFBQSxDQUFBaHdDLENBQUEsQ0FBQSxDQUFBLENBQUFBLENBQUEsQ0FBQXZFLEdBQUEsQ0FBQSxDQUFBZ1AsTUFBQSxDQUFBendCLENBQUEsQ0FBQXl3QixNQUFBLEdBQUEsS0FBQXdsQyxlQUFBLENBQUF4bEMsTUFBQSxFQUFBLENBQUEsQ0FBQW5CLEtBQUEsQ0FBQXR2QixDQUFBLENBQUFzdkIsS0FBQSxHQUFBLEtBQUEybUMsZUFBQSxDQUFBM21DLEtBQUEsRUFBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBNGxDLFlBQUEsQ0FBQSx1QkFBQSxDQUFBLEdBQUFuckQsQ0FBQUEsQ0FBQSxDQUFBLEtBQUFpakMsT0FBQSxDQUFBaHRDLENBQUEsQ0FBQSxLQUFBZ0QsT0FBQSxDQUFBLEtBQUFrekQsYUFBQSxDQUFBbnNELENBQUEsQ0FBQTg3QixNQUFBLEVBQUEsQ0FBQSxLQUFBdXNCLE9BQUEsRUFBQSxLQUFBekQsTUFBQSxDQUFBLEtBQUFBLE1BQUEsRUFBQTNvQyxDQUFBLENBQUEsc0NBQUEsQ0FBQSxDQUFBLEtBQUF3cEIsU0FBQSxDQUFBLEtBQUFtZixNQUFBLENBQUEsS0FBQXlELE9BQUEsQ0FBQSxDQUFBLEtBQUF6RCxNQUFBLENBQUFsdEMsR0FBQSxDQUFBLENBQUE2TixLQUFBLENBQUEsS0FBQTBkLE9BQUEsQ0FBQWtELFVBQUEsRUFBQSxDQUFBemYsTUFBQSxDQUFBLEtBQUF1YyxPQUFBLENBQUFtRCxXQUFBLEVBQUEsQ0FBQTVnQixRQUFBLENBQUEsVUFBQSxDQUFBb0UsSUFBQSxDQUFBLEtBQUF1aUMsYUFBQSxDQUFBdmlDLElBQUEsQ0FBQSxJQUFBLENBQUF0bUIsR0FBQSxDQUFBLEtBQUE2b0QsYUFBQSxDQUFBN29ELEdBQUEsQ0FBQSxJQUFBLENBQUFrcEMsTUFBQSxDQUFBLEVBQUF2MkMsQ0FBQSxDQUFBdTJDLE1BQUEsQ0FBQSxDQUFBLENBQUEsS0FBQW9ZLE1BQUEsQ0FBQTdnQyxRQUFBLENBQUEsTUFBQSxFQUFBMGtCLGdCQUFBLEVBQUEsRUFBQSxLQUFBbWMsTUFBQSxDQUFBLEtBQUEzaEIsT0FBQSxDQUFBLENBQUEsQ0FBQTRTLE9BQUEsQ0FBQSxDQUFBNzFDLENBQUEsQ0FBQSxXQUFBaWMsQ0FBQSxDQUFBamMsRUFBQSxDQUFBLENBQUEsTUFBQSxDQUFBdWxCLEtBQUEsQ0FBQSxLQUFBNmxDLFlBQUEsQ0FBQTdsQyxLQUFBLENBQUF2bEIsRUFBQSxDQUFBLENBQUEsQ0FBQSxDQUFBbk0sQ0FBQSxDQUFBLFdBQUFvb0IsQ0FBQSxDQUFBamMsQ0FBQSxDQUFBLENBQUEsR0FBQS9KLENBQUFBLENBQUEsQ0FBQSxLQUFBbTFELFlBQUEsQ0FBQWw0QixDQUFBLENBQUEsS0FBQXV6QixnQkFBQSxDQUFBLE1BQUEsQ0FBQTc4QixJQUFBLENBQUFzSixDQUFBLENBQUF0SixJQUFBLENBQUE1cEIsQ0FBQSxDQUFBdWxCLEtBQUEsQ0FBQXR2QixDQUFBLENBQUFzdkIsS0FBQSxDQUFBdmxCLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQThNLENBQUEsQ0FBQSxXQUFBbVAsQ0FBQSxDQUFBamMsQ0FBQSxDQUFBL0osQ0FBQSxDQUFBLENBQUEsR0FBQWk5QixDQUFBQSxDQUFBLENBQUEsS0FBQWs0QixZQUFBLENBQUF0K0MsQ0FBQSxDQUFBLEtBQUEyNUMsZ0JBQUEsQ0FBQSxNQUFBLENBQUFuakQsR0FBQSxDQUFBd0osQ0FBQSxDQUFBeEosR0FBQSxDQUFBck4sQ0FBQSxDQUFBeXdCLE1BQUEsQ0FBQXdNLENBQUEsQ0FBQXhNLE1BQUEsQ0FBQXp3QixDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUFpOUIsQ0FBQSxDQUFBLFdBQUFqWCxDQUFBLENBQUFqYyxDQUFBLENBQUEvSixDQUFBLENBQUEsQ0FBQSxNQUFBLENBQUF5d0IsTUFBQSxDQUFBLEtBQUEwa0MsWUFBQSxDQUFBMWtDLE1BQUEsQ0FBQXp3QixDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUE2MEQsRUFBQSxDQUFBLFlBQUE5cUQsQ0FBQSxDQUFBL0osQ0FBQSxDQUFBaTlCLENBQUEsQ0FBQSxDQUFBLE1BQUFqWCxDQUFBQSxDQUFBLENBQUFqakIsTUFBQSxDQUFBLEtBQUE2OEMsT0FBQSxDQUFBM2lCLENBQUEsQ0FBQXgrQixLQUFBLENBQUEsSUFBQSxDQUFBeUQsU0FBQSxDQUFBLENBQUEsS0FBQTA5QyxPQUFBLENBQUE3MUMsQ0FBQSxDQUFBdEwsS0FBQSxDQUFBLElBQUEsQ0FBQSxDQUFBc0wsQ0FBQSxDQUFBL0osQ0FBQSxDQUFBaTlCLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUE2M0IsRUFBQSxDQUFBLFlBQUEvcUQsQ0FBQSxDQUFBL0osQ0FBQSxDQUFBaTlCLENBQUEsQ0FBQSxDQUFBLE1BQUFqWCxDQUFBQSxDQUFBLENBQUFqakIsTUFBQSxDQUFBLEtBQUE2OEMsT0FBQSxDQUFBM2lCLENBQUEsQ0FBQXgrQixLQUFBLENBQUEsSUFBQSxDQUFBeUQsU0FBQSxDQUFBLENBQUEsS0FBQTA5QyxPQUFBLENBQUFoaUQsQ0FBQSxDQUFBYSxLQUFBLENBQUEsSUFBQSxDQUFBLENBQUFzTCxDQUFBLENBQUEvSixDQUFBLENBQUFpOUIsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQTgzQixFQUFBLENBQUEsWUFBQWhyRCxDQUFBLENBQUEvSixDQUFBLENBQUFpOUIsQ0FBQSxDQUFBLENBQUEsTUFBQWpYLENBQUFBLENBQUEsQ0FBQWpqQixNQUFBLENBQUEsS0FBQTY4QyxPQUFBLENBQUEvb0MsQ0FBQSxDQUFBcFksS0FBQSxDQUFBLElBQUEsQ0FBQXlELFNBQUEsQ0FBQSxDQUFBLEtBQUEwOUMsT0FBQSxDQUFBNzFDLENBQUEsQ0FBQXRMLEtBQUEsQ0FBQSxJQUFBLENBQUEsQ0FBQXNMLENBQUEsQ0FBQS9KLENBQUEsQ0FBQWk5QixDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBKzNCLEVBQUEsQ0FBQSxZQUFBanJELENBQUEsQ0FBQS9KLENBQUEsQ0FBQWk5QixDQUFBLENBQUEsQ0FBQSxNQUFBalgsQ0FBQUEsQ0FBQSxDQUFBampCLE1BQUEsQ0FBQSxLQUFBNjhDLE9BQUEsQ0FBQS9vQyxDQUFBLENBQUFwWSxLQUFBLENBQUEsSUFBQSxDQUFBeUQsU0FBQSxDQUFBLENBQUEsS0FBQTA5QyxPQUFBLENBQUFoaUQsQ0FBQSxDQUFBYSxLQUFBLENBQUEsSUFBQSxDQUFBLENBQUFzTCxDQUFBLENBQUEvSixDQUFBLENBQUFpOUIsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBcTRCLFVBQUEsQ0FBQSxvQkFBQXZyRCxDQUFBLENBQUEvSixDQUFBLENBQUEsQ0FBQWdtQixDQUFBLENBQUFtbkIsRUFBQSxDQUFBOGdCLE1BQUEsQ0FBQTF2RCxJQUFBLENBQUEsSUFBQSxDQUFBd0wsQ0FBQSxDQUFBLENBQUEvSixDQUFBLENBQUEsS0FBQW10QyxFQUFBLEVBQUEsQ0FBQSxFQUFBLFdBQUFwakMsQ0FBQSxFQUFBLEtBQUFtakMsUUFBQSxDQUFBbmpDLENBQUEsQ0FBQS9KLENBQUEsQ0FBQSxLQUFBbXRDLEVBQUEsRUFBQSxDQUFBLENBQUEsQ0FBQSxDQUFBK2dCLE9BQUEsQ0FBQSxFQUFBLENBQUEvZ0IsRUFBQSxDQUFBLGFBQUEsQ0FBQSxNQUFBLENBQUErbUIsZUFBQSxDQUFBLEtBQUFBLGVBQUEsQ0FBQWxuQixPQUFBLENBQUEsS0FBQUEsT0FBQSxDQUFBMmhCLE1BQUEsQ0FBQSxLQUFBQSxNQUFBLENBQUFwL0IsUUFBQSxDQUFBLEtBQUFBLFFBQUEsQ0FBQW1wQixJQUFBLENBQUEsS0FBQUEsSUFBQSxDQUFBeWMsWUFBQSxDQUFBLEtBQUFBLFlBQUEsQ0FBQTNFLGdCQUFBLENBQUEsS0FBQUEsZ0JBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQURBLENBQ0F4cUMsQ0FBQSxDQUFBbW5CLEVBQUEsQ0FBQThnQixNQUFBLENBQUE3MUMsR0FBQSxDQUFBLFdBQUEsQ0FBQSxTQUFBLENBQUEsQ0FBQXNJLElBQUEsQ0FBQSxjQUFBM1csQ0FBQSxDQUFBLENBQUEsR0FBQS9KLENBQUFBLENBQUEsQ0FBQWdtQixDQUFBLENBQUEsSUFBQSxDQUFBLENBQUFvdUMsU0FBQSxDQUFBLFVBQUEsQ0FBQSxDQUFBbjNCLENBQUEsQ0FBQWo5QixDQUFBLENBQUFnRCxPQUFBLENBQUE2VCxDQUFBLENBQUE3VyxDQUFBLENBQUFtMEQsNkJBQUEsQ0FBQXhuQixDQUFBLENBQUE5MUIsQ0FBQSxDQUFBeFYsTUFBQSxFQUFBLFlBQUEwSixJQUFBLENBQUE4TCxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUFsTixRQUFBLENBQUEsQ0FBQXpDLENBQUEsQ0FBQXlsQyxDQUFBLEVBQUEzc0MsQ0FBQSxDQUFBcytDLFVBQUEsQ0FBQXpuQyxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsTUFBQSxDQUFBLENBQUEsQ0FBQSxDQUFBN1csQ0FBQSxDQUFBbzFELFFBQUEsQ0FBQTNrQyxNQUFBLENBQUFzYyxDQUFBLENBQUFKLENBQUEsQ0FBQSxDQUFBLENBQUEzc0MsQ0FBQSxDQUFBbzFELFFBQUEsQ0FBQTlsQyxLQUFBLENBQUE4ZCxDQUFBLENBQUEsQ0FBQTlkLEtBQUEsQ0FBQXR2QixDQUFBLENBQUEwNEMsSUFBQSxDQUFBcHBCLEtBQUEsQ0FBQXlkLENBQUEsQ0FBQXRjLE1BQUEsQ0FBQXp3QixDQUFBLENBQUEwNEMsSUFBQSxDQUFBam9CLE1BQUEsQ0FBQXZwQixDQUFBLENBQUEsQ0FBQThRLENBQUEsQ0FBQTRYLFVBQUEsQ0FBQTV2QixDQUFBLENBQUFndEMsT0FBQSxDQUFBdnJCLEdBQUEsQ0FBQSxNQUFBLENBQUEsQ0FBQSxFQUFBemhCLENBQUEsQ0FBQXV2QixRQUFBLENBQUFvRSxJQUFBLENBQUEzekIsQ0FBQSxDQUFBd3dELGdCQUFBLENBQUE3OEIsSUFBQSxHQUFBLElBQUEsQ0FBQThiLENBQUEsQ0FBQTdmLFVBQUEsQ0FBQTV2QixDQUFBLENBQUFndEMsT0FBQSxDQUFBdnJCLEdBQUEsQ0FBQSxLQUFBLENBQUEsQ0FBQSxFQUFBemhCLENBQUEsQ0FBQXV2QixRQUFBLENBQUFsaUIsR0FBQSxDQUFBck4sQ0FBQSxDQUFBd3dELGdCQUFBLENBQUFuakQsR0FBQSxHQUFBLElBQUEsQ0FBQXJOLENBQUEsQ0FBQWd0QyxPQUFBLENBQUExVSxPQUFBLENBQUF0UyxDQUFBLENBQUFqakIsTUFBQSxDQUFBcXFDLENBQUEsQ0FBQXFDLENBQUEsRUFBQXozQixDQUFBLENBQUEsQ0FBQTNLLEdBQUEsQ0FBQW9pQyxDQUFBLENBQUE5YixJQUFBLENBQUEzYixDQUFBLENBQUEsQ0FBQSxFQUFBLENBQUEsQ0FBQSxDQUFBMGMsUUFBQSxDQUFBdUksQ0FBQSxDQUFBcTJCLGVBQUEsQ0FBQWovQixNQUFBLENBQUE0SSxDQUFBLENBQUFzMkIsYUFBQSxDQUFBMytCLElBQUEsQ0FBQSxlQUFBLENBQUEsR0FBQXFJLENBQUFBLENBQUEsQ0FBQSxDQUFBM04sS0FBQSxDQUFBTSxVQUFBLENBQUE1dkIsQ0FBQSxDQUFBZ3RDLE9BQUEsQ0FBQXZyQixHQUFBLENBQUEsT0FBQSxDQUFBLENBQUEsQ0FBQWdQLE1BQUEsQ0FBQWIsVUFBQSxDQUFBNXZCLENBQUEsQ0FBQWd0QyxPQUFBLENBQUF2ckIsR0FBQSxDQUFBLFFBQUEsQ0FBQSxDQUFBLENBQUFwVSxHQUFBLENBQUF1aUIsVUFBQSxDQUFBNXZCLENBQUEsQ0FBQWd0QyxPQUFBLENBQUF2ckIsR0FBQSxDQUFBLEtBQUEsQ0FBQSxDQUFBLENBQUFrUyxJQUFBLENBQUEvRCxVQUFBLENBQUE1dkIsQ0FBQSxDQUFBZ3RDLE9BQUEsQ0FBQXZyQixHQUFBLENBQUEsTUFBQSxDQUFBLENBQUEsQ0FBQSxDQUFBNUssQ0FBQSxFQUFBQSxDQUFBLENBQUF4VixNQUFBLEVBQUEya0IsQ0FBQSxDQUFBblAsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUE0SyxHQUFBLENBQUEsQ0FBQTZOLEtBQUEsQ0FBQTJOLENBQUEsQ0FBQTNOLEtBQUEsQ0FBQW1CLE1BQUEsQ0FBQXdNLENBQUEsQ0FBQXhNLE1BQUEsQ0FBQSxDQUFBLENBQUF6d0IsQ0FBQSxDQUFBMjFELFlBQUEsQ0FBQTE0QixDQUFBLENBQUEsQ0FBQWo5QixDQUFBLENBQUFzMUQsVUFBQSxDQUFBLFFBQUEsQ0FBQXZyRCxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsRUFBQSxDQUFBLENBQUEsQ0FEQSxDQUNBaWMsQ0FBQSxDQUFBbW5CLEVBQUEsQ0FBQThnQixNQUFBLENBQUE3MUMsR0FBQSxDQUFBLFdBQUEsQ0FBQSxhQUFBLENBQUEsQ0FBQWhILEtBQUEsQ0FBQSxnQkFBQSxDQUFBLEdBQUFySCxDQUFBQSxDQUFBLENBQUEvSixDQUFBLENBQUFpOUIsQ0FBQSxDQUFBcG1CLENBQUEsQ0FBQTgxQixDQUFBLENBQUF6bEMsQ0FBQSxDQUFBNmxDLENBQUEsQ0FBQUssQ0FBQSxDQUFBcG5CLENBQUEsQ0FBQSxJQUFBLENBQUEsQ0FBQW91QyxTQUFBLENBQUEsVUFBQSxDQUFBLENBQUFwOEMsQ0FBQSxDQUFBbzFCLENBQUEsQ0FBQXBxQyxPQUFBLENBQUF5c0MsQ0FBQSxDQUFBckMsQ0FBQSxDQUFBSixPQUFBLENBQUFpRCxDQUFBLENBQUFqNEIsQ0FBQSxDQUFBdzJDLFdBQUEsQ0FBQW5lLENBQUEsQ0FBQUosQ0FBQSxXQUFBanFCLENBQUFBLENBQUEsQ0FBQWlxQixDQUFBLENBQUExdUMsR0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLFNBQUF3SixJQUFBLENBQUFrbEMsQ0FBQSxFQUFBUixDQUFBLENBQUFwK0IsTUFBQSxHQUFBOVAsR0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBMHVDLENBQUEsQ0FBQUksQ0FBQSxHQUFBakQsQ0FBQSxDQUFBK29CLGdCQUFBLENBQUFud0MsQ0FBQSxDQUFBcXFCLENBQUEsQ0FBQSxDQUFBLFdBQUF0bEMsSUFBQSxDQUFBa2xDLENBQUEsR0FBQUEsQ0FBQSxHQUFBdHlDLFFBQUEsRUFBQXl2QyxDQUFBLENBQUFncEIsZUFBQSxDQUFBLENBQUF6aUMsSUFBQSxDQUFBLENBQUEsQ0FBQXRtQixHQUFBLENBQUEsQ0FBQSxDQUFBLENBQUErL0IsQ0FBQSxDQUFBaXBCLGlCQUFBLENBQUEsQ0FBQTFpQyxJQUFBLENBQUEsQ0FBQSxDQUFBdG1CLEdBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSsvQixDQUFBLENBQUFrcEIsVUFBQSxDQUFBLENBQUF0cEIsT0FBQSxDQUFBaG5CLENBQUEsQ0FBQXJvQixRQUFBLENBQUEsQ0FBQWcyQixJQUFBLENBQUEsQ0FBQSxDQUFBdG1CLEdBQUEsQ0FBQSxDQUFBLENBQUFpaUIsS0FBQSxDQUFBdEosQ0FBQSxDQUFBcm9CLFFBQUEsQ0FBQSxDQUFBMnhCLEtBQUEsRUFBQSxDQUFBbUIsTUFBQSxDQUFBekssQ0FBQSxDQUFBcm9CLFFBQUEsQ0FBQSxDQUFBOHlCLE1BQUEsSUFBQTl5QixRQUFBLENBQUE0a0IsSUFBQSxDQUFBOWhCLFVBQUEsQ0FBQWt3QyxZQUFBLENBQUEsR0FBQTVtQyxDQUFBLENBQUFpYyxDQUFBLENBQUFxcUIsQ0FBQSxDQUFBLENBQUFyd0MsQ0FBQSxDQUFBLEVBQUEsQ0FBQWdtQixDQUFBLENBQUEsQ0FBQSxLQUFBLENBQUEsT0FBQSxDQUFBLE1BQUEsQ0FBQSxRQUFBLENBQUEsQ0FBQSxDQUFBbGtCLElBQUEsQ0FBQSxTQUFBa2tCLENBQUEsQ0FBQWlYLENBQUEsQ0FBQSxDQUFBajlCLENBQUEsQ0FBQWdtQixDQUFBLENBQUEsQ0FBQW9uQixDQUFBLENBQUEybUIsSUFBQSxDQUFBaHFELENBQUEsQ0FBQTBYLEdBQUEsQ0FBQSxVQUFBd2IsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQW1RLENBQUEsQ0FBQWdwQixlQUFBLENBQUFyc0QsQ0FBQSxDQUFBODdCLE1BQUEsRUFBQSxDQUFBdUgsQ0FBQSxDQUFBaXBCLGlCQUFBLENBQUF0c0QsQ0FBQSxDQUFBd2xCLFFBQUEsRUFBQSxDQUFBNmQsQ0FBQSxDQUFBbXBCLGFBQUEsQ0FBQSxDQUFBOWxDLE1BQUEsQ0FBQTFtQixDQUFBLENBQUEwdEMsV0FBQSxHQUFBejNDLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQXN2QixLQUFBLENBQUF2bEIsQ0FBQSxDQUFBMnRDLFVBQUEsR0FBQTEzQyxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQWk5QixDQUFBLENBQUFtUSxDQUFBLENBQUFncEIsZUFBQSxDQUFBdi9DLENBQUEsQ0FBQXUyQixDQUFBLENBQUFtcEIsYUFBQSxDQUFBOWxDLE1BQUEsQ0FBQWtjLENBQUEsQ0FBQVMsQ0FBQSxDQUFBbXBCLGFBQUEsQ0FBQWpuQyxLQUFBLENBQUFwb0IsQ0FBQSxDQUFBa21DLENBQUEsQ0FBQWtSLFVBQUEsQ0FBQWpPLENBQUEsQ0FBQSxNQUFBLEVBQUFBLENBQUEsQ0FBQUssV0FBQSxDQUFBL0QsQ0FBQSxDQUFBSSxDQUFBLENBQUFLLENBQUEsQ0FBQWtSLFVBQUEsQ0FBQWpPLENBQUEsRUFBQUEsQ0FBQSxDQUFBTSxZQUFBLENBQUE5NUIsQ0FBQSxDQUFBdTJCLENBQUEsQ0FBQWtwQixVQUFBLENBQUEsQ0FBQXRwQixPQUFBLENBQUFxRCxDQUFBLENBQUExYyxJQUFBLENBQUFzSixDQUFBLENBQUF0SixJQUFBLENBQUF0bUIsR0FBQSxDQUFBNHZCLENBQUEsQ0FBQTV2QixHQUFBLENBQUFpaUIsS0FBQSxDQUFBcG9CLENBQUEsQ0FBQXVwQixNQUFBLENBQUFzYyxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBK21CLE1BQUEsQ0FBQSxnQkFBQS9wRCxDQUFBLENBQUEsQ0FBQSxHQUFBL0osQ0FBQUEsQ0FBQSxDQUFBaTlCLENBQUEsQ0FBQXBtQixDQUFBLENBQUE4MUIsQ0FBQSxDQUFBemxDLENBQUEsQ0FBQThlLENBQUEsQ0FBQSxJQUFBLENBQUEsQ0FBQW91QyxTQUFBLENBQUEsVUFBQSxDQUFBLENBQUFybkIsQ0FBQSxDQUFBN2xDLENBQUEsQ0FBQWxFLE9BQUEsQ0FBQW9xQyxDQUFBLENBQUFsbUMsQ0FBQSxDQUFBa3ZELGVBQUEsQ0FBQXArQyxDQUFBLENBQUE5USxDQUFBLENBQUFxb0IsUUFBQSxDQUFBa2dCLENBQUEsQ0FBQXZvQyxDQUFBLENBQUErc0QsWUFBQSxFQUFBbHFELENBQUEsQ0FBQW9nQixRQUFBLENBQUE4bEIsQ0FBQSxDQUFBLENBQUE1aUMsR0FBQSxDQUFBLENBQUEsQ0FBQXNtQixJQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEwYyxDQUFBLENBQUFucEMsQ0FBQSxDQUFBaXZELGdCQUFBLENBQUFsaEMsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBb2IsQ0FBQSxDQUFBLENBQUEsQ0FBQSxHQUFBMXlDLFFBQUEsRUFBQSxTQUFBb04sSUFBQSxDQUFBc2xDLENBQUEsQ0FBQTV1QixHQUFBLENBQUEsVUFBQSxDQUFBLENBQUEsR0FBQXd1QixDQUFBLENBQUE3QyxDQUFBLEVBQUFwMUIsQ0FBQSxDQUFBMmIsSUFBQSxFQUFBenNCLENBQUEsQ0FBQWtyRCxPQUFBLENBQUFobEIsQ0FBQSxDQUFBelosSUFBQSxDQUFBLENBQUEsSUFBQXpzQixDQUFBLENBQUF3eEMsSUFBQSxDQUFBcHBCLEtBQUEsQ0FBQXBvQixDQUFBLENBQUF3eEMsSUFBQSxDQUFBcHBCLEtBQUEsRUFBQXBvQixDQUFBLENBQUFrckQsT0FBQSxDQUFBbHJELENBQUEsQ0FBQXFvQixRQUFBLENBQUFvRSxJQUFBLENBQUF5WixDQUFBLENBQUF6WixJQUFBLENBQUF6c0IsQ0FBQSxDQUFBcW9CLFFBQUEsQ0FBQW9FLElBQUEsQ0FBQXNjLENBQUEsQ0FBQXRjLElBQUEsQ0FBQSxDQUFBOGIsQ0FBQSxHQUFBdm9DLENBQUEsQ0FBQXd4QyxJQUFBLENBQUFqb0IsTUFBQSxDQUFBdnBCLENBQUEsQ0FBQXd4QyxJQUFBLENBQUFwcEIsS0FBQSxDQUFBcG9CLENBQUEsQ0FBQXNzRCxXQUFBLENBQUF2K0IsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEvdEIsQ0FBQSxDQUFBcW9CLFFBQUEsQ0FBQW9FLElBQUEsQ0FBQW9aLENBQUEsQ0FBQTRoQixNQUFBLENBQUF2aEIsQ0FBQSxDQUFBelosSUFBQSxDQUFBLENBQUEsQ0FBQSxDQUFBM2IsQ0FBQSxDQUFBM0ssR0FBQSxFQUFBbkcsQ0FBQSxDQUFBa3JELE9BQUEsQ0FBQWhsQixDQUFBLENBQUEvL0IsR0FBQSxDQUFBLENBQUEsSUFBQW5HLENBQUEsQ0FBQXd4QyxJQUFBLENBQUFqb0IsTUFBQSxDQUFBdnBCLENBQUEsQ0FBQXd4QyxJQUFBLENBQUFqb0IsTUFBQSxFQUFBdnBCLENBQUEsQ0FBQWtyRCxPQUFBLENBQUFsckQsQ0FBQSxDQUFBcW9CLFFBQUEsQ0FBQWxpQixHQUFBLENBQUErL0IsQ0FBQSxDQUFBLy9CLEdBQUEsQ0FBQW5HLENBQUEsQ0FBQXFvQixRQUFBLENBQUFsaUIsR0FBQSxDQUFBLENBQUFvaUMsQ0FBQSxHQUFBdm9DLENBQUEsQ0FBQXd4QyxJQUFBLENBQUFwcEIsS0FBQSxDQUFBcG9CLENBQUEsQ0FBQXd4QyxJQUFBLENBQUFqb0IsTUFBQSxDQUFBdnBCLENBQUEsQ0FBQXNzRCxXQUFBLENBQUF2K0IsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEvdEIsQ0FBQSxDQUFBcW9CLFFBQUEsQ0FBQWxpQixHQUFBLENBQUFuRyxDQUFBLENBQUFrckQsT0FBQSxDQUFBaGxCLENBQUEsQ0FBQS8vQixHQUFBLENBQUEsQ0FBQSxDQUFBLENBQUF3SixDQUFBLENBQUEzUCxDQUFBLENBQUFpdkQsZ0JBQUEsQ0FBQTUwRCxHQUFBLENBQUEsQ0FBQSxJQUFBMkYsQ0FBQSxDQUFBOGxDLE9BQUEsQ0FBQTM3QixNQUFBLEdBQUE5UCxHQUFBLENBQUEsQ0FBQSxDQUFBLENBQUFvckMsQ0FBQSxDQUFBLG9CQUFBNWhDLElBQUEsQ0FBQTdELENBQUEsQ0FBQWl2RCxnQkFBQSxDQUFBMTBDLEdBQUEsQ0FBQSxVQUFBLENBQUEsQ0FBQSxDQUFBNUssQ0FBQSxFQUFBODFCLENBQUEsRUFBQXpsQyxDQUFBLENBQUEyK0IsTUFBQSxDQUFBbFMsSUFBQSxDQUFBenNCLENBQUEsQ0FBQW92RCxVQUFBLENBQUEzaUMsSUFBQSxDQUFBenNCLENBQUEsQ0FBQXFvQixRQUFBLENBQUFvRSxJQUFBLENBQUF6c0IsQ0FBQSxDQUFBMitCLE1BQUEsQ0FBQXg0QixHQUFBLENBQUFuRyxDQUFBLENBQUFvdkQsVUFBQSxDQUFBanBELEdBQUEsQ0FBQW5HLENBQUEsQ0FBQXFvQixRQUFBLENBQUFsaUIsR0FBQSxHQUFBbkcsQ0FBQSxDQUFBMitCLE1BQUEsQ0FBQWxTLElBQUEsQ0FBQXpzQixDQUFBLENBQUE4bEMsT0FBQSxDQUFBbkgsTUFBQSxHQUFBbFMsSUFBQSxDQUFBenNCLENBQUEsQ0FBQTIrQixNQUFBLENBQUF4NEIsR0FBQSxDQUFBbkcsQ0FBQSxDQUFBOGxDLE9BQUEsQ0FBQW5ILE1BQUEsR0FBQXg0QixHQUFBLENBQUEsQ0FBQXJOLENBQUEsQ0FBQTRELElBQUEsQ0FBQXdzQyxHQUFBLENBQUFscEMsQ0FBQSxDQUFBa3VELFFBQUEsQ0FBQTlsQyxLQUFBLEVBQUFwb0IsQ0FBQSxDQUFBa3JELE9BQUEsQ0FBQWxyRCxDQUFBLENBQUEyK0IsTUFBQSxDQUFBbFMsSUFBQSxDQUFBc2MsQ0FBQSxDQUFBdGMsSUFBQSxDQUFBenNCLENBQUEsQ0FBQTIrQixNQUFBLENBQUFsUyxJQUFBLENBQUF5WixDQUFBLENBQUF6WixJQUFBLENBQUEsQ0FBQSxDQUFBc0osQ0FBQSxDQUFBcjVCLElBQUEsQ0FBQXdzQyxHQUFBLENBQUFscEMsQ0FBQSxDQUFBa3VELFFBQUEsQ0FBQTNrQyxNQUFBLEVBQUF2cEIsQ0FBQSxDQUFBa3JELE9BQUEsQ0FBQWxyRCxDQUFBLENBQUEyK0IsTUFBQSxDQUFBeDRCLEdBQUEsQ0FBQTRpQyxDQUFBLENBQUE1aUMsR0FBQSxDQUFBbkcsQ0FBQSxDQUFBMitCLE1BQUEsQ0FBQXg0QixHQUFBLENBQUErL0IsQ0FBQSxDQUFBLy9CLEdBQUEsQ0FBQSxDQUFBLENBQUFyTixDQUFBLENBQUFrSCxDQUFBLENBQUF3eEMsSUFBQSxDQUFBcHBCLEtBQUEsRUFBQXBvQixDQUFBLENBQUFvdkQsVUFBQSxDQUFBaG5DLEtBQUEsR0FBQXBvQixDQUFBLENBQUF3eEMsSUFBQSxDQUFBcHBCLEtBQUEsQ0FBQXBvQixDQUFBLENBQUFvdkQsVUFBQSxDQUFBaG5DLEtBQUEsQ0FBQXR2QixDQUFBLENBQUF5dkMsQ0FBQSxHQUFBdm9DLENBQUEsQ0FBQXd4QyxJQUFBLENBQUFqb0IsTUFBQSxDQUFBdnBCLENBQUEsQ0FBQXd4QyxJQUFBLENBQUFwcEIsS0FBQSxDQUFBcG9CLENBQUEsQ0FBQXNzRCxXQUFBLENBQUF2K0IsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQWdJLENBQUEsQ0FBQS8xQixDQUFBLENBQUF3eEMsSUFBQSxDQUFBam9CLE1BQUEsRUFBQXZwQixDQUFBLENBQUFvdkQsVUFBQSxDQUFBN2xDLE1BQUEsR0FBQXZwQixDQUFBLENBQUF3eEMsSUFBQSxDQUFBam9CLE1BQUEsQ0FBQXZwQixDQUFBLENBQUFvdkQsVUFBQSxDQUFBN2xDLE1BQUEsQ0FBQXdNLENBQUEsQ0FBQXdTLENBQUEsR0FBQXZvQyxDQUFBLENBQUF3eEMsSUFBQSxDQUFBcHBCLEtBQUEsQ0FBQXBvQixDQUFBLENBQUF3eEMsSUFBQSxDQUFBam9CLE1BQUEsQ0FBQXZwQixDQUFBLENBQUFzc0QsV0FBQSxDQUFBditCLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUFBLENBQUEsR0FBQS90QixDQUFBLENBQUFxb0IsUUFBQSxDQUFBb0UsSUFBQSxDQUFBenNCLENBQUEsQ0FBQTJ1RCxZQUFBLENBQUFsaUMsSUFBQSxDQUFBenNCLENBQUEsQ0FBQXFvQixRQUFBLENBQUFsaUIsR0FBQSxDQUFBbkcsQ0FBQSxDQUFBMnVELFlBQUEsQ0FBQXhvRCxHQUFBLENBQUFuRyxDQUFBLENBQUF3eEMsSUFBQSxDQUFBcHBCLEtBQUEsQ0FBQXBvQixDQUFBLENBQUE0dUQsUUFBQSxDQUFBeG1DLEtBQUEsQ0FBQXBvQixDQUFBLENBQUF3eEMsSUFBQSxDQUFBam9CLE1BQUEsQ0FBQXZwQixDQUFBLENBQUE0dUQsUUFBQSxDQUFBcmxDLE1BQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQS9QLElBQUEsQ0FBQSxlQUFBLENBQUEsR0FBQTNXLENBQUFBLENBQUEsQ0FBQWljLENBQUEsQ0FBQSxJQUFBLENBQUEsQ0FBQW91QyxTQUFBLENBQUEsVUFBQSxDQUFBLENBQUFwMEQsQ0FBQSxDQUFBK0osQ0FBQSxDQUFBL0csT0FBQSxDQUFBaTZCLENBQUEsQ0FBQWx6QixDQUFBLENBQUFxc0QsZUFBQSxDQUFBdi9DLENBQUEsQ0FBQTlNLENBQUEsQ0FBQXNzRCxpQkFBQSxDQUFBMXBCLENBQUEsQ0FBQTVpQyxDQUFBLENBQUFvc0QsZ0JBQUEsQ0FBQWp2RCxDQUFBLENBQUE4ZSxDQUFBLENBQUFqYyxDQUFBLENBQUE0a0QsTUFBQSxDQUFBLENBQUE1aEIsQ0FBQSxDQUFBN2xDLENBQUEsQ0FBQTIrQixNQUFBLEVBQUEsQ0FBQXVILENBQUEsQ0FBQWxtQyxDQUFBLENBQUFncEMsVUFBQSxHQUFBbm1DLENBQUEsQ0FBQXFyRCxRQUFBLENBQUE5bEMsS0FBQSxDQUFBdFgsQ0FBQSxDQUFBOVEsQ0FBQSxDQUFBaXBDLFdBQUEsR0FBQXBtQyxDQUFBLENBQUFxckQsUUFBQSxDQUFBM2tDLE1BQUEsQ0FBQTFtQixDQUFBLENBQUFxb0QsT0FBQSxFQUFBLENBQUFweUQsQ0FBQSxDQUFBczRCLE9BQUEsRUFBQSxXQUFBdnRCLElBQUEsQ0FBQTRoQyxDQUFBLENBQUFsckIsR0FBQSxDQUFBLFVBQUEsQ0FBQSxDQUFBLEVBQUF1RSxDQUFBLENBQUEsSUFBQSxDQUFBLENBQUF2RSxHQUFBLENBQUEsQ0FBQWtTLElBQUEsQ0FBQW9aLENBQUEsQ0FBQXBaLElBQUEsQ0FBQTljLENBQUEsQ0FBQThjLElBQUEsQ0FBQXNKLENBQUEsQ0FBQXRKLElBQUEsQ0FBQXJFLEtBQUEsQ0FBQThkLENBQUEsQ0FBQTNjLE1BQUEsQ0FBQXpZLENBQUEsQ0FBQSxDQUFBLENBQUFqTyxDQUFBLENBQUFxb0QsT0FBQSxFQUFBLENBQUFweUQsQ0FBQSxDQUFBczRCLE9BQUEsRUFBQSxTQUFBdnRCLElBQUEsQ0FBQTRoQyxDQUFBLENBQUFsckIsR0FBQSxDQUFBLFVBQUEsQ0FBQSxDQUFBLEVBQUF1RSxDQUFBLENBQUEsSUFBQSxDQUFBLENBQUF2RSxHQUFBLENBQUEsQ0FBQWtTLElBQUEsQ0FBQW9aLENBQUEsQ0FBQXBaLElBQUEsQ0FBQTljLENBQUEsQ0FBQThjLElBQUEsQ0FBQXNKLENBQUEsQ0FBQXRKLElBQUEsQ0FBQXJFLEtBQUEsQ0FBQThkLENBQUEsQ0FBQTNjLE1BQUEsQ0FBQXpZLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBREEsQ0FDQWdPLENBQUEsQ0FBQW1uQixFQUFBLENBQUE4Z0IsTUFBQSxDQUFBNzFDLEdBQUEsQ0FBQSxXQUFBLENBQUEsWUFBQSxDQUFBLENBQUFoSCxLQUFBLENBQUEsZ0JBQUEsQ0FBQSxHQUFBckgsQ0FBQUEsQ0FBQSxDQUFBaWMsQ0FBQSxDQUFBLElBQUEsQ0FBQSxDQUFBb3VDLFNBQUEsQ0FBQSxVQUFBLENBQUEsQ0FBQXAwRCxDQUFBLENBQUErSixDQUFBLENBQUEvRyxPQUFBLENBQUFnakIsQ0FBQSxDQUFBaG1CLENBQUEsQ0FBQXF6RCxVQUFBLENBQUEsQ0FBQXZ4RCxJQUFBLENBQUEsVUFBQSxDQUFBLEdBQUFpSSxDQUFBQSxDQUFBLENBQUFpYyxDQUFBLENBQUEsSUFBQSxDQUFBLENBQUFqYyxDQUFBLENBQUF5VixJQUFBLENBQUEseUJBQUEsQ0FBQSxDQUFBOFAsS0FBQSxDQUFBTSxVQUFBLENBQUE3bEIsQ0FBQSxDQUFBdWxCLEtBQUEsRUFBQSxDQUFBLENBQUFtQixNQUFBLENBQUFiLFVBQUEsQ0FBQTdsQixDQUFBLENBQUEwbUIsTUFBQSxFQUFBLENBQUEsQ0FBQWtELElBQUEsQ0FBQS9ELFVBQUEsQ0FBQTdsQixDQUFBLENBQUEwWCxHQUFBLENBQUEsTUFBQSxDQUFBLENBQUEsQ0FBQXBVLEdBQUEsQ0FBQXVpQixVQUFBLENBQUE3bEIsQ0FBQSxDQUFBMFgsR0FBQSxDQUFBLEtBQUEsQ0FBQSxDQUFBLENBQUEsRUFBQSxDQUFBLEVBQUEsQ0FBQSxDQUFBcXlDLE1BQUEsQ0FBQSxnQkFBQS9wRCxDQUFBLENBQUEvSixDQUFBLENBQUEsQ0FBQSxHQUFBaTlCLENBQUFBLENBQUEsQ0FBQWpYLENBQUEsQ0FBQSxJQUFBLENBQUEsQ0FBQW91QyxTQUFBLENBQUEsVUFBQSxDQUFBLENBQUF2OUMsQ0FBQSxDQUFBb21CLENBQUEsQ0FBQWo2QixPQUFBLENBQUEycEMsQ0FBQSxDQUFBMVAsQ0FBQSxDQUFBazRCLFlBQUEsQ0FBQWp1RCxDQUFBLENBQUErMUIsQ0FBQSxDQUFBdXpCLGdCQUFBLENBQUF6akIsQ0FBQSxDQUFBLENBQUF0YyxNQUFBLENBQUF3TSxDQUFBLENBQUF5YixJQUFBLENBQUFqb0IsTUFBQSxDQUFBa2MsQ0FBQSxDQUFBbGMsTUFBQSxFQUFBLENBQUEsQ0FBQW5CLEtBQUEsQ0FBQTJOLENBQUEsQ0FBQXliLElBQUEsQ0FBQXBwQixLQUFBLENBQUFxZCxDQUFBLENBQUFyZCxLQUFBLEVBQUEsQ0FBQSxDQUFBamlCLEdBQUEsQ0FBQTR2QixDQUFBLENBQUExTixRQUFBLENBQUFsaUIsR0FBQSxDQUFBbkcsQ0FBQSxDQUFBbUcsR0FBQSxFQUFBLENBQUEsQ0FBQXNtQixJQUFBLENBQUFzSixDQUFBLENBQUExTixRQUFBLENBQUFvRSxJQUFBLENBQUF6c0IsQ0FBQSxDQUFBeXNCLElBQUEsRUFBQSxDQUFBLENBQUEsQ0FBQTNOLENBQUEsQ0FBQW5QLENBQUEsQ0FBQXc4QyxVQUFBLENBQUEsQ0FBQXZ4RCxJQUFBLENBQUEsVUFBQSxDQUFBLEdBQUFpSSxDQUFBQSxDQUFBLENBQUFpYyxDQUFBLENBQUEsSUFBQSxDQUFBLENBQUFpWCxDQUFBLENBQUFqWCxDQUFBLENBQUEsSUFBQSxDQUFBLENBQUF4RyxJQUFBLENBQUEseUJBQUEsQ0FBQSxDQUFBM0ksQ0FBQSxDQUFBLEVBQUEsQ0FBQTgxQixDQUFBLENBQUE1aUMsQ0FBQSxDQUFBd08sT0FBQSxDQUFBdlksQ0FBQSxDQUFBazBELGVBQUEsQ0FBQSxDQUFBLENBQUEsRUFBQTd5RCxNQUFBLENBQUEsQ0FBQSxPQUFBLENBQUEsUUFBQSxDQUFBLENBQUEsQ0FBQSxPQUFBLENBQUEsUUFBQSxDQUFBLEtBQUEsQ0FBQSxNQUFBLENBQUEsQ0FBQTJrQixDQUFBLENBQUFsa0IsSUFBQSxDQUFBNnFDLENBQUEsQ0FBQSxTQUFBM21CLENBQUEsQ0FBQWpjLENBQUEsQ0FBQSxDQUFBLEdBQUEvSixDQUFBQSxDQUFBLENBQUEsQ0FBQWk5QixDQUFBLENBQUFsekIsQ0FBQSxDQUFBLEVBQUEsQ0FBQSxHQUFBZ2pDLENBQUEsQ0FBQWhqQyxDQUFBLENBQUEsRUFBQSxDQUFBLENBQUEsQ0FBQS9KLENBQUEsRUFBQUEsQ0FBQSxFQUFBLENBQUEsR0FBQTZXLENBQUEsQ0FBQTlNLENBQUEsQ0FBQSxDQUFBL0osQ0FBQSxFQUFBLElBQUEsRUFBQSxDQUFBLEVBQUErSixDQUFBLENBQUEwWCxHQUFBLENBQUE1SyxDQUFBLENBQUEsQ0FBQSxDQUFBLEVBQUEsQ0FBQSxDQUFBNkosSUFBQSxDQUFBLGVBQUEsQ0FBQXNGLENBQUEsQ0FBQSxJQUFBLENBQUEsQ0FBQTdGLFVBQUEsQ0FBQSx5QkFBQSxFQUFBLENBQUEsQ0FBQSxDQURBLENBQ0E2RixDQUFBLENBQUFtbkIsRUFBQSxDQUFBOGdCLE1BQUEsQ0FBQTcxQyxHQUFBLENBQUEsV0FBQSxDQUFBLE9BQUEsQ0FBQSxDQUFBaEgsS0FBQSxDQUFBLGdCQUFBLENBQUEsR0FBQXJILENBQUFBLENBQUEsQ0FBQWljLENBQUEsQ0FBQSxJQUFBLENBQUEsQ0FBQW91QyxTQUFBLENBQUEsVUFBQSxDQUFBLENBQUFwMEQsQ0FBQSxDQUFBK0osQ0FBQSxDQUFBMnVDLElBQUEsQ0FBQTN1QyxDQUFBLENBQUEycEQsS0FBQSxDQUFBM3BELENBQUEsQ0FBQW1xRCxlQUFBLENBQUE5d0QsS0FBQSxFQUFBLENBQUEyRyxDQUFBLENBQUEycEQsS0FBQSxDQUFBanlDLEdBQUEsQ0FBQSxDQUFBMlIsT0FBQSxDQUFBLEdBQUEsQ0FBQTVSLE9BQUEsQ0FBQSxPQUFBLENBQUErTixRQUFBLENBQUEsVUFBQSxDQUFBa0IsTUFBQSxDQUFBendCLENBQUEsQ0FBQXl3QixNQUFBLENBQUFuQixLQUFBLENBQUF0dkIsQ0FBQSxDQUFBc3ZCLEtBQUEsQ0FBQXNFLE1BQUEsQ0FBQSxDQUFBLENBQUFELElBQUEsQ0FBQSxDQUFBLENBQUF0bUIsR0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUF0RCxDQUFBLENBQUF5bEMsU0FBQSxDQUFBemxDLENBQUEsQ0FBQTJwRCxLQUFBLENBQUEsb0JBQUEsQ0FBQSxDQUFBMXRDLENBQUEsQ0FBQWd3QixZQUFBLEdBQUEsQ0FBQSxDQUFBLEVBQUEsVUFBQSxNQUFBanNDLENBQUFBLENBQUEsQ0FBQS9HLE9BQUEsQ0FBQTB3RCxLQUFBLEVBQUEzcEQsQ0FBQSxDQUFBMnBELEtBQUEsQ0FBQTk0QixRQUFBLENBQUEsS0FBQTUzQixPQUFBLENBQUEwd0QsS0FBQSxDQUFBLENBQUEzcEQsQ0FBQSxDQUFBMnBELEtBQUEsQ0FBQTVsQyxRQUFBLENBQUEvakIsQ0FBQSxDQUFBNGtELE1BQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQW1GLE1BQUEsQ0FBQSxpQkFBQSxDQUFBLEdBQUEvcEQsQ0FBQUEsQ0FBQSxDQUFBaWMsQ0FBQSxDQUFBLElBQUEsQ0FBQSxDQUFBb3VDLFNBQUEsQ0FBQSxVQUFBLENBQUEsQ0FBQXJxRCxDQUFBLENBQUEycEQsS0FBQSxFQUFBM3BELENBQUEsQ0FBQTJwRCxLQUFBLENBQUFqeUMsR0FBQSxDQUFBLENBQUE4TixRQUFBLENBQUEsVUFBQSxDQUFBa0IsTUFBQSxDQUFBMW1CLENBQUEsQ0FBQTJ1QyxJQUFBLENBQUFqb0IsTUFBQSxDQUFBbkIsS0FBQSxDQUFBdmxCLENBQUEsQ0FBQTJ1QyxJQUFBLENBQUFwcEIsS0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUE1TyxJQUFBLENBQUEsZUFBQSxDQUFBLEdBQUEzVyxDQUFBQSxDQUFBLENBQUFpYyxDQUFBLENBQUEsSUFBQSxDQUFBLENBQUFvdUMsU0FBQSxDQUFBLFVBQUEsQ0FBQSxDQUFBcnFELENBQUEsQ0FBQTJwRCxLQUFBLEVBQUEzcEQsQ0FBQSxDQUFBNGtELE1BQUEsRUFBQTVrRCxDQUFBLENBQUE0a0QsTUFBQSxDQUFBcHRELEdBQUEsQ0FBQSxDQUFBLEVBQUFiLFdBQUEsQ0FBQXFKLENBQUEsQ0FBQTJwRCxLQUFBLENBQUFueUQsR0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBREEsQ0FDQXlrQixDQUFBLENBQUFtbkIsRUFBQSxDQUFBOGdCLE1BQUEsQ0FBQTcxQyxHQUFBLENBQUEsV0FBQSxDQUFBLE1BQUEsQ0FBQSxDQUFBMDdDLE1BQUEsQ0FBQSxpQkFBQSxDQUFBLEdBQUEvcEQsQ0FBQUEsQ0FBQSxDQUFBL0osQ0FBQSxDQUFBZ21CLENBQUEsQ0FBQSxJQUFBLENBQUEsQ0FBQW91QyxTQUFBLENBQUEsVUFBQSxDQUFBLENBQUFuM0IsQ0FBQSxDQUFBajlCLENBQUEsQ0FBQWdELE9BQUEsQ0FBQTZULENBQUEsQ0FBQTdXLENBQUEsQ0FBQTA0QyxJQUFBLENBQUEvTCxDQUFBLENBQUEzc0MsQ0FBQSxDQUFBbTFELFlBQUEsQ0FBQWp1RCxDQUFBLENBQUFsSCxDQUFBLENBQUF3d0QsZ0JBQUEsQ0FBQXpqQixDQUFBLENBQUEvc0MsQ0FBQSxDQUFBc3VELElBQUEsQ0FBQWxoQixDQUFBLENBQUEsVUFBQSxNQUFBblEsQ0FBQUEsQ0FBQSxDQUFBeXhCLElBQUEsQ0FBQSxDQUFBenhCLENBQUEsQ0FBQXl4QixJQUFBLENBQUF6eEIsQ0FBQSxDQUFBeXhCLElBQUEsQ0FBQSxDQUFBenhCLENBQUEsQ0FBQXl4QixJQUFBLENBQUExMkMsQ0FBQSxDQUFBbzFCLENBQUEsQ0FBQSxDQUFBLENBQUEsRUFBQSxDQUFBLENBQUFxQyxDQUFBLENBQUFyQyxDQUFBLENBQUEsQ0FBQSxDQUFBLEVBQUEsQ0FBQSxDQUFBNkMsQ0FBQSxDQUFBcnNDLElBQUEsQ0FBQStyQixLQUFBLENBQUEsQ0FBQTlZLENBQUEsQ0FBQXlZLEtBQUEsQ0FBQXFkLENBQUEsQ0FBQXJkLEtBQUEsRUFBQXRYLENBQUEsRUFBQUEsQ0FBQSxDQUFBcTRCLENBQUEsQ0FBQXpzQyxJQUFBLENBQUErckIsS0FBQSxDQUFBLENBQUE5WSxDQUFBLENBQUE0WixNQUFBLENBQUFrYyxDQUFBLENBQUFsYyxNQUFBLEVBQUFnZixDQUFBLEVBQUFBLENBQUEsQ0FBQXhhLENBQUEsQ0FBQTBYLENBQUEsQ0FBQXJkLEtBQUEsQ0FBQTJnQixDQUFBLENBQUFhLENBQUEsQ0FBQW5FLENBQUEsQ0FBQWxjLE1BQUEsQ0FBQTRmLENBQUEsQ0FBQVUsQ0FBQSxDQUFBOVQsQ0FBQSxDQUFBbk0sUUFBQSxFQUFBbUUsQ0FBQSxDQUFBZ0ksQ0FBQSxDQUFBbk0sUUFBQSxDQUFBNW1CLENBQUEsQ0FBQSt5QixDQUFBLENBQUEyMkIsU0FBQSxFQUFBOWlCLENBQUEsQ0FBQTdULENBQUEsQ0FBQTIyQixTQUFBLENBQUExNkMsQ0FBQSxDQUFBK2pCLENBQUEsQ0FBQXBNLFFBQUEsRUFBQW9NLENBQUEsQ0FBQXBNLFFBQUEsQ0FBQW9FLENBQUEsQ0FBQTdhLENBQUEsQ0FBQTZpQixDQUFBLENBQUE0MkIsU0FBQSxFQUFBNTJCLENBQUEsQ0FBQTQyQixTQUFBLENBQUEvaUIsQ0FBQSxDQUFBN1QsQ0FBQSxDQUFBeXhCLElBQUEsQ0FBQXRoQixDQUFBLENBQUFsMEIsQ0FBQSxHQUFBK2IsQ0FBQSxFQUFBamQsQ0FBQSxDQUFBLENBQUFvQyxDQUFBLEdBQUEwMkIsQ0FBQSxFQUFBckIsQ0FBQSxDQUFBLENBQUFzQixDQUFBLEdBQUE5YixDQUFBLEVBQUFqZCxDQUFBLENBQUEsQ0FBQTlOLENBQUEsR0FBQTRtQyxDQUFBLEVBQUFyQixDQUFBLENBQUEsQ0FBQSxhQUFBMWtDLElBQUEsQ0FBQWdpQyxDQUFBLEdBQUEvc0MsQ0FBQSxDQUFBMDRDLElBQUEsQ0FBQXBwQixLQUFBLENBQUEyRixDQUFBLENBQUFqMUIsQ0FBQSxDQUFBMDRDLElBQUEsQ0FBQWpvQixNQUFBLENBQUFxZ0IsQ0FBQSxFQUFBLFNBQUEvbEMsSUFBQSxDQUFBZ2lDLENBQUEsR0FBQS9zQyxDQUFBLENBQUEwNEMsSUFBQSxDQUFBcHBCLEtBQUEsQ0FBQTJGLENBQUEsQ0FBQWoxQixDQUFBLENBQUEwNEMsSUFBQSxDQUFBam9CLE1BQUEsQ0FBQXFnQixDQUFBLENBQUE5d0MsQ0FBQSxDQUFBdXZCLFFBQUEsQ0FBQWxpQixHQUFBLENBQUFuRyxDQUFBLENBQUFtRyxHQUFBLENBQUFnakMsQ0FBQSxFQUFBLFNBQUF0bEMsSUFBQSxDQUFBZ2lDLENBQUEsR0FBQS9zQyxDQUFBLENBQUEwNEMsSUFBQSxDQUFBcHBCLEtBQUEsQ0FBQTJGLENBQUEsQ0FBQWoxQixDQUFBLENBQUEwNEMsSUFBQSxDQUFBam9CLE1BQUEsQ0FBQXFnQixDQUFBLENBQUE5d0MsQ0FBQSxDQUFBdXZCLFFBQUEsQ0FBQW9FLElBQUEsQ0FBQXpzQixDQUFBLENBQUF5c0IsSUFBQSxDQUFBc2MsQ0FBQSxHQUFBLENBQUEsR0FBQWEsQ0FBQSxDQUFBckIsQ0FBQSxFQUFBLEdBQUF4YSxDQUFBLENBQUFqZCxDQUFBLElBQUFqTyxDQUFBLENBQUEvSixDQUFBLENBQUFnMkQsK0JBQUEsQ0FBQSxJQUFBLENBQUEsRUFBQWxsQixDQUFBLENBQUFyQixDQUFBLENBQUEsQ0FBQSxFQUFBenZDLENBQUEsQ0FBQTA0QyxJQUFBLENBQUFqb0IsTUFBQSxDQUFBcWdCLENBQUEsQ0FBQTl3QyxDQUFBLENBQUF1dkIsUUFBQSxDQUFBbGlCLEdBQUEsQ0FBQW5HLENBQUEsQ0FBQW1HLEdBQUEsQ0FBQWdqQyxDQUFBLEdBQUFTLENBQUEsQ0FBQXJCLENBQUEsQ0FBQTFsQyxDQUFBLENBQUEwbUIsTUFBQSxDQUFBendCLENBQUEsQ0FBQTA0QyxJQUFBLENBQUFqb0IsTUFBQSxDQUFBcWdCLENBQUEsQ0FBQTl3QyxDQUFBLENBQUF1dkIsUUFBQSxDQUFBbGlCLEdBQUEsQ0FBQW5HLENBQUEsQ0FBQW1HLEdBQUEsQ0FBQXMvQixDQUFBLENBQUFsYyxNQUFBLENBQUFxZ0IsQ0FBQSxDQUFBLENBQUE3YixDQUFBLENBQUFqZCxDQUFBLENBQUEsQ0FBQSxFQUFBaFksQ0FBQSxDQUFBMDRDLElBQUEsQ0FBQXBwQixLQUFBLENBQUEyRixDQUFBLENBQUFqMUIsQ0FBQSxDQUFBdXZCLFFBQUEsQ0FBQW9FLElBQUEsQ0FBQXpzQixDQUFBLENBQUF5c0IsSUFBQSxDQUFBc2MsQ0FBQSxHQUFBaGIsQ0FBQSxDQUFBamQsQ0FBQSxDQUFBak8sQ0FBQSxDQUFBdWxCLEtBQUEsQ0FBQXR2QixDQUFBLENBQUEwNEMsSUFBQSxDQUFBcHBCLEtBQUEsQ0FBQTJGLENBQUEsQ0FBQWoxQixDQUFBLENBQUF1dkIsUUFBQSxDQUFBb0UsSUFBQSxDQUFBenNCLENBQUEsQ0FBQXlzQixJQUFBLENBQUFnWixDQUFBLENBQUFyZCxLQUFBLENBQUEyRixDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQURBLENBQ0FqUCxDQUFBLENBQUFtbkIsRUFBQSxDQUFBaW5CLFNBREEsQ0FDQXB1QyxDQUFBLENBQUFxbkIsTUFBQSxDQUFBLFdBQUEsQ0FBQSxDQUFBenNDLE9BQUEsQ0FBQSxRQUFBLENBQUFvQyxPQUFBLENBQUEsQ0FBQThxQixRQUFBLENBQUEsTUFBQSxDQUFBMG9DLFFBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQWpzQyxPQUFBLENBQUEsRUFBQSxDQUFBc1EsT0FBQSxDQUFBLENBQUEsWUFBQSxlQUFBLENBQUEscUJBQUEsZUFBQSxDQUFBLENBQUE0N0IsYUFBQSxDQUFBLENBQUEsQ0FBQSxDQUFBcHRCLFNBQUEsQ0FBQSxPQUFBLENBQUErcEIsU0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBendDLElBQUEsQ0FBQSxJQUFBLENBQUE4TixNQUFBLENBQUEsTUFBQSxDQUFBbWpDLFNBQUEsQ0FBQSxJQUFBLENBQUE5aUMsUUFBQSxDQUFBLElBQUEsQ0FBQStpQyxTQUFBLENBQUEsR0FBQSxDQUFBaGpDLFFBQUEsQ0FBQSxHQUFBLENBQUE2bEMsS0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBbm5DLFFBQUEsQ0FBQSxDQUFBa2lCLEVBQUEsQ0FBQSxRQUFBLENBQUFMLEVBQUEsQ0FBQSxRQUFBLENBQUFQLEVBQUEsQ0FBQS95QyxNQUFBLENBQUFvekMsU0FBQSxDQUFBLEtBQUEsQ0FBQTNLLEtBQUEsQ0FBQSxlQUFBeDhCLENBQUEsQ0FBQSxDQUFBLEdBQUEvSixDQUFBQSxDQUFBLENBQUFnbUIsQ0FBQSxDQUFBLElBQUEsQ0FBQSxDQUFBdkUsR0FBQSxDQUFBMVgsQ0FBQSxFQUFBODdCLE1BQUEsR0FBQXg0QixHQUFBLENBQUEsRUFBQXJOLENBQUEsRUFBQWdtQixDQUFBLENBQUEsSUFBQSxDQUFBLENBQUF2RSxHQUFBLENBQUEsS0FBQSxDQUFBMVgsQ0FBQSxDQUFBc0QsR0FBQSxDQUFBck4sQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUFvMEQsU0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBM3hDLElBQUEsQ0FBQSxJQUFBLENBQUE0Z0MsS0FBQSxDQUFBLElBQUEsQ0FBQS96QixLQUFBLENBQUEsR0FBQSxDQUFBcW5DLFdBQUEsQ0FBQSxJQUFBLENBQUE5WCxLQUFBLENBQUEsSUFBQSxDQUFBeVEsSUFBQSxDQUFBLElBQUEsQ0FBQTJCLFNBQUEsQ0FBQSxJQUFBLENBQUFRLFFBQUEsQ0FBQSxJQUFBLENBQUFybUMsS0FBQSxDQUFBLElBQUEsQ0FBQTJZLElBQUEsQ0FBQSxJQUFBLENBQUErdkIsTUFBQSxDQUFBLElBQUEsQ0FBQThDLFdBQUEsQ0FBQSxJQUFBLENBQUFDLFVBQUEsQ0FBQSxJQUFBLENBQUEsQ0FBQUMsa0JBQUEsQ0FBQSxDQUFBdnNDLE9BQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQWtHLE1BQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQW1qQyxTQUFBLENBQUEsQ0FBQSxDQUFBLENBQUE5aUMsUUFBQSxDQUFBLENBQUEsQ0FBQSxDQUFBK2lDLFNBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQWhqQyxRQUFBLENBQUEsQ0FBQSxDQUFBLENBQUF2QixLQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQXluQyx1QkFBQSxDQUFBLENBQUFuRCxTQUFBLENBQUEsQ0FBQSxDQUFBLENBQUE5aUMsUUFBQSxDQUFBLENBQUEsQ0FBQSxDQUFBK2lDLFNBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQWhqQyxRQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQStkLE9BQUEsQ0FBQSxrQkFBQSxDQUFBLEtBQUFvb0IsV0FBQSxDQUFBLENBQUF4MUMsT0FBQSxDQUFBLEtBQUF3ckIsT0FBQSxDQUFBLENBQUEsRUFBQXpyQixLQUFBLENBQUFDLE9BQUEsQ0FBQThOLEtBQUEsQ0FBQSxLQUFBMGQsT0FBQSxDQUFBLENBQUEsRUFBQXpyQixLQUFBLENBQUErTixLQUFBLENBQUF1a0MsU0FBQSxDQUFBLEtBQUE3bUIsT0FBQSxDQUFBLENBQUEsRUFBQXpyQixLQUFBLENBQUFzeUMsU0FBQSxDQUFBRCxTQUFBLENBQUEsS0FBQTVtQixPQUFBLENBQUEsQ0FBQSxFQUFBenJCLEtBQUEsQ0FBQXF5QyxTQUFBLENBQUFuakMsTUFBQSxDQUFBLEtBQUF1YyxPQUFBLENBQUEsQ0FBQSxFQUFBenJCLEtBQUEsQ0FBQWtQLE1BQUEsQ0FBQSxDQUFBLEtBQUErL0IsZ0JBQUEsQ0FBQSxDQUFBbi9DLE1BQUEsQ0FBQSxLQUFBMjdCLE9BQUEsQ0FBQTM3QixNQUFBLEVBQUEsQ0FBQTZHLEtBQUEsQ0FBQSxLQUFBODBCLE9BQUEsQ0FBQTM3QixNQUFBLEdBQUFzRyxRQUFBLEdBQUFPLEtBQUEsQ0FBQSxLQUFBODBCLE9BQUEsQ0FBQSxDQUFBLENBQUEsS0FBQWlxQixhQUFBLENBQUEsS0FBQWpxQixPQUFBLENBQUEzOUIsSUFBQSxDQUFBLE9BQUEsQ0FBQSxDQUFBLE1BQUEsS0FBQXJNLE9BQUEsQ0FBQXFnRCxLQUFBLEVBQUEsTUFBQSxLQUFBNFQsYUFBQSxHQUFBLEtBQUFqMEQsT0FBQSxDQUFBcWdELEtBQUEsQ0FBQSxLQUFBNFQsYUFBQSxDQUFBLENBQUEsS0FBQWowRCxPQUFBLENBQUEwRyxRQUFBLEdBQUEsS0FBQTFHLE9BQUEsQ0FBQTBHLFFBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLEtBQUF3dEQsY0FBQSxFQUFBLENBQUEsS0FBQWxxQixPQUFBLENBQUF2cUIsSUFBQSxHQUFBb1gsVUFBQSxDQUFBLE9BQUEsRUFBQS9MLFFBQUEsQ0FBQSxLQUFBcXBDLFFBQUEsQ0FBQSxDQUFBLEtBQUEzbkIsU0FBQSxDQUFBLG1CQUFBLENBQUEsbUJBQUEsQ0FBQSxDQUFBLEtBQUE0bkIsZUFBQSxFQUFBLENBQUEsS0FBQUMsaUJBQUEsRUFBQSxDQUFBLEtBQUFyMEQsT0FBQSxDQUFBb3dELFNBQUEsRUFBQXB0QyxDQUFBLENBQUFobEIsRUFBQSxDQUFBb3lELFNBQUEsRUFBQSxLQUFBa0UsY0FBQSxFQUFBLENBQUEsS0FBQXQwRCxPQUFBLENBQUFveEQsU0FBQSxFQUFBcHVDLENBQUEsQ0FBQWhsQixFQUFBLENBQUFvekQsU0FBQSxFQUFBLEtBQUFtRCxjQUFBLEVBQUEsQ0FBQSxLQUFBQyxPQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsS0FBQUMsV0FBQSxFQUFBLENBQUEsQ0FBQSxDQUFBeHBCLEtBQUEsQ0FBQSxnQkFBQSxDQUFBLEtBQUFqckMsT0FBQSxDQUFBd3pELFFBQUEsRUFBQSxLQUFBenlCLElBQUEsRUFBQSxDQUFBLENBQUEsQ0FBQStiLFNBQUEsQ0FBQSxvQkFBQSxDQUFBLEdBQUEvMUMsQ0FBQUEsQ0FBQSxDQUFBLEtBQUEvRyxPQUFBLENBQUE4cUIsUUFBQSxDQUFBLE1BQUEvakIsQ0FBQUEsQ0FBQSxHQUFBQSxDQUFBLENBQUE1SSxNQUFBLEVBQUE0SSxDQUFBLENBQUExSyxRQUFBLENBQUEsQ0FBQTJtQixDQUFBLENBQUFqYyxDQUFBLENBQUEsQ0FBQSxLQUFBcE0sUUFBQSxDQUFBbVEsSUFBQSxDQUFBL0QsQ0FBQSxFQUFBLE1BQUEsRUFBQTNILEVBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEyc0MsUUFBQSxDQUFBLG1CQUFBLENBQUEsR0FBQS9vQixDQUFBQSxDQUFBLENBQUFqYyxDQUFBLENBQUEsS0FBQXltRCxnQkFBQSxDQUFBLEtBQUFrSCxnQkFBQSxHQUFBLEtBQUFDLGVBQUEsRUFBQSxDQUFBLEtBQUEzcUIsT0FBQSxDQUFBMk4sY0FBQSxHQUFBbDVCLEdBQUEsQ0FBQSxLQUFBdTFDLFdBQUEsRUFBQTFwQyxNQUFBLEVBQUEsQ0FBQSxLQUFBNnBDLFFBQUEsQ0FBQXI5QyxNQUFBLEVBQUEsQ0FBQSxLQUFBbTlDLGFBQUEsRUFBQSxLQUFBanFCLE9BQUEsQ0FBQTM5QixJQUFBLENBQUEsT0FBQSxDQUFBLEtBQUE0bkQsYUFBQSxDQUFBLENBQUFqeEMsQ0FBQSxDQUFBamMsQ0FBQSxDQUFBc0gsTUFBQSxDQUFBc0csUUFBQSxHQUFBdlYsRUFBQSxDQUFBMkgsQ0FBQSxDQUFBbU8sS0FBQSxDQUFBLENBQUE4TixDQUFBLENBQUEza0IsTUFBQSxFQUFBMmtCLENBQUEsQ0FBQSxDQUFBLENBQUEsR0FBQSxLQUFBZ25CLE9BQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQWhuQixDQUFBLENBQUEwSCxNQUFBLENBQUEsS0FBQXNmLE9BQUEsQ0FBQSxDQUFBampDLENBQUEsQ0FBQXNILE1BQUEsQ0FBQWtjLE1BQUEsQ0FBQSxLQUFBeWYsT0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBSyxNQUFBLENBQUEsaUJBQUEsQ0FBQSxNQUFBLE1BQUE4cEIsUUFBQSxDQUNBLENBREEsQ0FDQW45QyxPQUFBLENBQUFnTSxDQUFBLENBQUE5aEIsSUFEQSxDQUNBb3JDLE1BQUEsQ0FBQXRwQixDQUFBLENBQUE5aEIsSUFEQSxDQUNBMjZDLEtBQUEsQ0FBQSxlQUFBOTBDLENBQUEsQ0FBQSxDQUFBLEdBQUEvSixDQUFBQSxDQUFBLENBQUEsSUFBQSxDQUFBLEtBQUF3M0QsT0FBQSxFQUFBLEtBQUF0cUIsUUFBQSxDQUFBLGFBQUEsQ0FBQW5qQyxDQUFBLElBQUEsQ0FBQSxDQUFBLEdBQUEsS0FBQXl0RCxPQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsS0FBQUksZUFBQSxDQUFBLElBQUEsQ0FBQSxLQUFBRCxlQUFBLEVBQUEsQ0FBQSxLQUFBRCxnQkFBQSxFQUFBLENBQUEsS0FBQXBwQyxNQUFBLENBQUExZ0IsTUFBQSxDQUFBLFlBQUEsRUFBQSthLE9BQUEsQ0FBQSxPQUFBLEVBQUF0bkIsTUFBQSxFQUFBMmtCLENBQUEsQ0FBQW1uQixFQUFBLENBQUFnaEIsUUFBQSxDQUFBbm9DLENBQUEsQ0FBQW1uQixFQUFBLENBQUE5bkIsaUJBQUEsQ0FBQSxLQUFBMW5CLFFBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsS0FBQWs2RCxLQUFBLENBQUEsS0FBQVYsUUFBQSxDQUFBLEtBQUFuMEQsT0FBQSxDQUFBMmYsSUFBQSxDQUFBLFVBQUEsQ0FBQTNpQixDQUFBLENBQUFrdEMsUUFBQSxDQUFBLE9BQUEsQ0FBQW5qQyxDQUFBLEVBQUEsQ0FBQSxDQUFBLEVBQUEsQ0FEQSxDQUNBK3RELE1BQUEsQ0FBQSxpQkFBQSxDQUFBLE1BQUEsTUFBQU4sT0FBQSxDQUFBLENBREEsQ0FDQU8sU0FBQSxDQUFBLG9CQUFBLENBQUEsS0FBQUMsVUFBQSxHQUFBLENBREEsQ0FDQUEsVUFBQSxDQUFBLG9CQUFBanVELENBQUEsQ0FBQS9KLENBQUEsQ0FBQSxDQUFBLEdBQUFpOUIsQ0FBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBcG1CLENBQUEsQ0FBQSxLQUFBc2dELFFBQUEsQ0FBQXZnRCxRQUFBLENBQUEsbUJBQUEsRUFBQTVVLEdBQUEsQ0FBQSxVQUFBLENBQUEsTUFBQSxDQUFBZ2tCLENBQUEsQ0FBQSxJQUFBLENBQUEsQ0FBQXZFLEdBQUEsQ0FBQSxTQUFBLENBQUEsQ0FBQSxDQUFBLEVBQUFsZ0IsR0FBQSxFQUFBLENBQUFvckMsQ0FBQSxDQUFBL29DLElBQUEsQ0FBQXd1QixHQUFBLENBQUEzekIsS0FBQSxDQUFBLElBQUEsQ0FBQW9ZLENBQUEsQ0FBQSxDQUFBLE1BQUE4MUIsQ0FBQUEsQ0FBQSxFQUFBLENBQUEsS0FBQXdxQixRQUFBLENBQUExMUMsR0FBQSxDQUFBLFNBQUEsQ0FBQSxHQUFBLEtBQUEwMUMsUUFBQSxDQUFBMTFDLEdBQUEsQ0FBQSxTQUFBLENBQUFrckIsQ0FBQSxDQUFBLENBQUEsRUFBQTFQLENBQUEsQ0FBQSxDQUFBLENBQUEsRUFBQUEsQ0FBQSxFQUFBLENBQUFqOUIsQ0FBQSxFQUFBLEtBQUFrdEMsUUFBQSxDQUFBLE9BQUEsQ0FBQW5qQyxDQUFBLENBQUEsQ0FBQWt6QixDQUFBLENBQUEsQ0FEQSxDQUNBOEcsSUFBQSxDQUFBLGVBQUEsQ0FBQSxHQUFBaDZCLENBQUFBLENBQUEsQ0FBQSxJQUFBLENBQUEsTUFBQSxNQUFBeXRELE9BQUEsRUFBQSxLQUFBUSxVQUFBLElBQUEsS0FBQUMsY0FBQSxFQUFBLENBQUEsSUFBQSxFQUFBLEdBQUEsS0FBQVQsT0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLEtBQUFscEMsTUFBQSxDQUFBdEksQ0FBQSxDQUFBQSxDQUFBLENBQUFtbkIsRUFBQSxDQUFBOW5CLGlCQUFBLENBQUEsS0FBQTFuQixRQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLEtBQUF1NkQsS0FBQSxFQUFBLENBQUEsS0FBQUMsU0FBQSxFQUFBLENBQUEsS0FBQUMsY0FBQSxFQUFBLENBQUEsS0FBQUosVUFBQSxDQUFBLElBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLEtBQUFLLE9BQUEsRUFBQSxLQUFBQSxPQUFBLENBQUE1MkMsR0FBQSxDQUFBLFNBQUEsQ0FBQSxLQUFBMDFDLFFBQUEsQ0FBQTExQyxHQUFBLENBQUEsU0FBQSxFQUFBLENBQUEsQ0FBQSxDQUFBLEtBQUE2MkMsS0FBQSxDQUFBLEtBQUFuQixRQUFBLENBQUEsS0FBQW4wRCxPQUFBLENBQUF5ZixJQUFBLENBQUEsVUFBQSxDQUFBMVksQ0FBQSxDQUFBa3VELGNBQUEsR0FBQWx1RCxDQUFBLENBQUFtakMsUUFBQSxDQUFBLE9BQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLEtBQUFxckIsZ0JBQUEsRUFBQSxDQUFBLEtBQUFyckIsUUFBQSxDQUFBLE1BQUEsQ0FBQSxDQUFBLElBQUEsRUFBQSxDQUFBLENBQUEsQ0FEQSxDQUNBK3FCLGNBQUEsQ0FBQSx5QkFBQSxDQUFBLEdBQUFqeUMsQ0FBQUEsQ0FBQSxDQUFBLEtBQUE0eEMsZUFBQSxDQUFBNXhDLENBQUEsR0FBQUEsQ0FBQSxDQUFBLEtBQUFnbkIsT0FBQSxDQUFBbC9CLElBQUEsQ0FBQSxhQUFBLENBQUEsQ0FBQSxDQUFBa1ksQ0FBQSxDQUFBM2tCLE1BQUEsR0FBQTJrQixDQUFBLENBQUEsS0FBQWduQixPQUFBLENBQUFsL0IsSUFBQSxDQUFBLFdBQUEsQ0FBQSxDQUFBLENBQUFrWSxDQUFBLENBQUEza0IsTUFBQSxHQUFBMmtCLENBQUEsQ0FBQSxLQUFBd3lDLGtCQUFBLENBQUExcUQsSUFBQSxDQUFBLFdBQUEsQ0FBQSxDQUFBLENBQUFrWSxDQUFBLENBQUEza0IsTUFBQSxHQUFBMmtCLENBQUEsQ0FBQSxLQUFBeXlDLHFCQUFBLENBQUE3cUQsTUFBQSxDQUFBLFdBQUEsQ0FBQSxDQUFBLENBQUFvWSxDQUFBLENBQUEza0IsTUFBQSxHQUFBMmtCLENBQUEsQ0FBQSxLQUFBbXhDLFFBQUEsQ0FBQSxDQUFBbnhDLENBQUEsQ0FBQTVqQixFQUFBLENBQUEsQ0FBQSxFQUFBdW1CLE9BQUEsQ0FBQSxPQUFBLENBQUEsQ0FBQSxDQURBLENBQ0ErdkMsVUFBQSxDQUFBLG9CQUFBM3VELENBQUEsQ0FBQSxDQUFBLFFBQUEvSixDQUFBQSxDQUFBLEVBQUEsQ0FBQSxHQUFBK0osQ0FBQUEsQ0FBQSxDQUFBaWMsQ0FBQSxDQUFBbW5CLEVBQUEsQ0FBQTluQixpQkFBQSxDQUFBLEtBQUExbkIsUUFBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUFxQyxDQUFBLENBQUEsS0FBQW0zRCxRQUFBLENBQUEsQ0FBQSxJQUFBcHRELENBQUEsRUFBQWljLENBQUEsQ0FBQXpmLFFBQUEsQ0FBQSxLQUFBNHdELFFBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQXB0RCxDQUFBLENBQUEsQ0FBQS9KLENBQUEsRUFBQSxLQUFBaTRELGNBQUEsRUFBQSxDQUFBLENBQUFsdUQsQ0FBQSxDQUFBNGQsY0FBQSxHQUFBM25CLENBQUEsQ0FBQXpCLElBQUEsQ0FBQSxJQUFBLENBQUEsQ0FBQSxLQUFBb3hDLE1BQUEsQ0FBQTN2QyxDQUFBLENBQUEsQ0FBQSxDQURBLENBQ0FrM0QsY0FBQSxDQUFBLHlCQUFBLENBQUEsS0FBQUMsUUFBQSxDQUFBbnhDLENBQUEsQ0FBQSxPQUFBLENBQUEsQ0FBQXJELElBQUEsR0FBQXRULElBQUEsQ0FBQSxDQUFBa0QsUUFBQSxDQUFBLENBQUEsQ0FBQSxDQUFBMHFDLElBQUEsQ0FBQSxRQUFBLENBQUEsRUFBQW52QixRQUFBLENBQUEsS0FBQWd5QixTQUFBLEVBQUEsQ0FBQSxDQUFBLEtBQUF0USxTQUFBLENBQUEsS0FBQTJuQixRQUFBLENBQUEsV0FBQSxDQUFBLHNDQUFBLENBQUEsQ0FBQSxLQUFBMW9CLEdBQUEsQ0FBQSxLQUFBMG9CLFFBQUEsQ0FBQSxDQUFBN2EsT0FBQSxDQUFBLGlCQUFBdnlDLENBQUEsQ0FBQSxDQUFBLEdBQUEsS0FBQS9HLE9BQUEsQ0FBQXl6RCxhQUFBLEVBQUEsQ0FBQTFzRCxDQUFBLENBQUFvZixrQkFBQSxFQUFBLEVBQUFwZixDQUFBLENBQUF1Z0IsT0FBQSxFQUFBdmdCLENBQUEsQ0FBQXVnQixPQUFBLEdBQUF0RSxDQUFBLENBQUFtbkIsRUFBQSxDQUFBN2lCLE9BQUEsQ0FBQXV2QixNQUFBLENBQUEsTUFBQTl2QyxDQUFBQSxDQUFBLENBQUE0ZCxjQUFBLEdBQUEsS0FBQWszQixLQUFBLENBQUE5MEMsQ0FBQSxDQUFBLENBQUEsSUFBQSxFQUFBLENBQUEsR0FBQUEsQ0FBQSxDQUFBdWdCLE9BQUEsR0FBQXRFLENBQUEsQ0FBQW1uQixFQUFBLENBQUE3aUIsT0FBQSxDQUFBK3ZCLEdBQUEsRUFBQSxDQUFBdHdDLENBQUEsQ0FBQW9mLGtCQUFBLEVBQUEsQ0FBQSxDQUFBLEdBQUFucEIsQ0FBQUEsQ0FBQSxDQUFBLEtBQUFtM0QsUUFBQSxDQUFBcnBELElBQUEsQ0FBQSxXQUFBLENBQUEsQ0FBQW12QixDQUFBLENBQUFqOUIsQ0FBQSxDQUFBNE4sTUFBQSxDQUFBLFFBQUEsQ0FBQSxDQUFBaUosQ0FBQSxDQUFBN1csQ0FBQSxDQUFBNE4sTUFBQSxDQUFBLE9BQUEsQ0FBQSxDQUFBN0QsQ0FBQSxDQUFBMUcsTUFBQSxHQUFBd1QsQ0FBQSxDQUFBLENBQUEsQ0FBQSxFQUFBOU0sQ0FBQSxDQUFBMUcsTUFBQSxHQUFBLEtBQUE4ekQsUUFBQSxDQUFBLENBQUEsQ0FBQSxFQUFBcHRELENBQUEsQ0FBQW9nQixRQUFBLENBQUFwZ0IsQ0FBQSxDQUFBMUcsTUFBQSxHQUFBNDVCLENBQUEsQ0FBQSxDQUFBLENBQUEsRUFBQWx6QixDQUFBLENBQUExRyxNQUFBLEdBQUEsS0FBQTh6RCxRQUFBLENBQUEsQ0FBQSxDQUFBLEVBQUEsQ0FBQXB0RCxDQUFBLENBQUFvZ0IsUUFBQSxHQUFBLEtBQUF3bEIsTUFBQSxDQUFBLFVBQUEsQ0FBQTk0QixDQUFBLENBQUE4UixPQUFBLENBQUEsT0FBQSxFQUFBLENBQUEsRUFBQTVlLENBQUEsQ0FBQTRkLGNBQUEsRUFBQSxDQUFBLEVBQUEsS0FBQWdvQixNQUFBLENBQUEsVUFBQSxDQUFBMVMsQ0FBQSxDQUFBdFUsT0FBQSxDQUFBLE9BQUEsRUFBQSxDQUFBLEVBQUE1ZSxDQUFBLENBQUE0ZCxjQUFBLEVBQUEsRUFBQSxDQUFBLENBQUEsQ0FBQW80QixTQUFBLENBQUEsbUJBQUEvNUIsQ0FBQSxDQUFBLENBQUEsS0FBQWd5QyxVQUFBLENBQUFoeUMsQ0FBQSxHQUFBLEtBQUFpeUMsY0FBQSxFQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxLQUFBanJCLE9BQUEsQ0FBQWwvQixJQUFBLENBQUEsb0JBQUEsRUFBQXpNLE1BQUEsRUFBQSxLQUFBODFELFFBQUEsQ0FBQTluRCxJQUFBLENBQUEsQ0FBQSxtQkFBQSxLQUFBMjlCLE9BQUEsQ0FBQTBOLFFBQUEsR0FBQXJyQyxJQUFBLENBQUEsSUFBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBREEsQ0FDQStuRCxlQUFBLENBQUEsMEJBQUEsQ0FBQSxHQUFBcnRELENBQUFBLENBQUEsQ0FBQSxLQUFBNHVELGdCQUFBLENBQUEzeUMsQ0FBQSxDQUFBLE9BQUEsQ0FBQSxDQUFBLEtBQUF3cEIsU0FBQSxDQUFBLEtBQUFtcEIsZ0JBQUEsQ0FBQSxvQkFBQSxDQUFBLHFDQUFBLENBQUEsQ0FBQSxLQUFBbHFCLEdBQUEsQ0FBQSxLQUFBa3FCLGdCQUFBLENBQUEsQ0FBQTVZLFNBQUEsQ0FBQSxtQkFBQWgyQyxDQUFBLENBQUEsQ0FBQWljLENBQUEsQ0FBQWpjLENBQUEsQ0FBQTFHLE1BQUEsQ0FBQSxDQUFBNFUsT0FBQSxDQUFBLDJCQUFBLEdBQUEsS0FBQWsvQyxRQUFBLENBQUF4dUMsT0FBQSxDQUFBLE9BQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsS0FBQTh2QyxxQkFBQSxDQUFBenlDLENBQUEsQ0FBQSxpQ0FBQSxDQUFBLENBQUFnQyxNQUFBLENBQUEsQ0FBQTQ0QixLQUFBLENBQUE1NkIsQ0FBQSxDQUFBLEtBQUEsQ0FBQSxDQUFBNWxCLElBQUEsQ0FBQSxLQUFBNEMsT0FBQSxDQUFBcW1DLFNBQUEsRUFBQXhjLElBQUEsRUFBQSxDQUFBeTFCLElBQUEsQ0FBQSxvQkFBQSxDQUFBVSxTQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsRUFBQWwxQixRQUFBLENBQUEsS0FBQTZxQyxnQkFBQSxDQUFBLENBQUEsS0FBQW5wQixTQUFBLENBQUEsS0FBQWlwQixxQkFBQSxDQUFBLDBCQUFBLENBQUEsQ0FBQSxLQUFBaHFCLEdBQUEsQ0FBQSxLQUFBZ3FCLHFCQUFBLENBQUEsQ0FBQWh3QyxLQUFBLENBQUEsZUFBQXpDLENBQUEsQ0FBQSxDQUFBQSxDQUFBLENBQUEyQixjQUFBLEdBQUEsS0FBQWszQixLQUFBLENBQUE3NEIsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQWpjLENBQUEsQ0FBQWljLENBQUEsQ0FBQSxRQUFBLENBQUEsQ0FBQTAwQixRQUFBLEdBQUEzc0IsU0FBQSxDQUFBLEtBQUE0cUMsZ0JBQUEsQ0FBQSxDQUFBLEtBQUFucEIsU0FBQSxDQUFBemxDLENBQUEsQ0FBQSxpQkFBQSxDQUFBLENBQUEsS0FBQTZ1RCxNQUFBLENBQUE3dUQsQ0FBQSxDQUFBLENBQUEsS0FBQTR1RCxnQkFBQSxDQUFBNXFDLFNBQUEsQ0FBQSxLQUFBb3BDLFFBQUEsQ0FBQSxDQUFBLEtBQUFBLFFBQUEsQ0FBQTluRCxJQUFBLENBQUEsQ0FBQSxrQkFBQXRGLENBQUEsQ0FBQXNGLElBQUEsQ0FBQSxJQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FEQSxDQUNBdXBELE1BQUEsQ0FBQSxnQkFBQTV5QyxDQUFBLENBQUEsQ0FBQSxLQUFBaGpCLE9BQUEsQ0FBQXFnRCxLQUFBLENBQUFyOUIsQ0FBQSxDQUFBNWxCLElBQUEsQ0FBQSxLQUFBNEMsT0FBQSxDQUFBcWdELEtBQUEsQ0FBQSxDQUFBcjlCLENBQUEsQ0FBQTZHLElBQUEsQ0FBQSxRQUFBLENBQUEsQ0FBQSxDQURBLENBQ0F3cUMsaUJBQUEsQ0FBQSw0QkFBQSxDQUFBLEtBQUFtQixrQkFBQSxDQUFBeHlDLENBQUEsQ0FBQSxPQUFBLENBQUEsQ0FBQSxLQUFBd3BCLFNBQUEsQ0FBQSxLQUFBZ3BCLGtCQUFBLENBQUEsc0JBQUEsQ0FBQSxzQ0FBQSxDQUFBLENBQUEsS0FBQUssV0FBQSxDQUFBN3lDLENBQUEsQ0FBQSxPQUFBLENBQUEsQ0FBQThILFFBQUEsQ0FBQSxLQUFBMHFDLGtCQUFBLENBQUEsQ0FBQSxLQUFBaHBCLFNBQUEsQ0FBQSxLQUFBcXBCLFdBQUEsQ0FBQSxxQkFBQSxDQUFBLENBQUEsS0FBQUMsY0FBQSxFQUFBLENBQUEsQ0FEQSxDQUNBQSxjQUFBLENBQUEseUJBQUEsQ0FBQSxHQUFBL3VELENBQUFBLENBQUEsQ0FBQSxJQUFBLENBQUEvSixDQUFBLENBQUEsS0FBQWdELE9BQUEsQ0FBQXVuQixPQUFBLENBQUEsTUFBQSxNQUFBaXVDLGtCQUFBLENBQUExK0MsTUFBQSxHQUFBLEtBQUErK0MsV0FBQSxDQUFBOStDLEtBQUEsRUFBQSxDQUFBaU0sQ0FBQSxDQUFBM2hCLGFBQUEsQ0FBQXJFLENBQUEsR0FBQWdtQixDQUFBLENBQUF2aUIsT0FBQSxDQUFBekQsQ0FBQSxHQUFBLENBQUFBLENBQUEsQ0FBQXFCLE1BQUEsRUFBQSxLQUFBMnRDLFlBQUEsQ0FBQSxLQUFBbW9CLFFBQUEsQ0FBQSxtQkFBQSxFQUFBLElBQUEsRUFBQSxHQUFBbnhDLENBQUEsQ0FBQWxrQixJQUFBLENBQUE5QixDQUFBLENBQUEsU0FBQUEsQ0FBQSxDQUFBaTlCLENBQUEsQ0FBQSxDQUFBLEdBQUFwbUIsQ0FBQUEsQ0FBQSxDQUFBODFCLENBQUEsQ0FBQTFQLENBQUEsQ0FBQWpYLENBQUEsQ0FBQTdtQixVQUFBLENBQUE4OUIsQ0FBQSxFQUFBLENBQUF4VSxLQUFBLENBQUF3VSxDQUFBLENBQUE3OEIsSUFBQSxDQUFBSixDQUFBLENBQUEsQ0FBQWk5QixDQUFBLENBQUFBLENBQUEsQ0FBQWpYLENBQUEsQ0FBQWpqQixNQUFBLENBQUEsQ0FBQXZELElBQUEsQ0FBQSxRQUFBLENBQUEsQ0FBQXk5QixDQUFBLENBQUEsQ0FBQXBtQixDQUFBLENBQUFvbUIsQ0FBQSxDQUFBeFUsS0FBQSxDQUFBa2tCLENBQUEsQ0FBQSxDQUFBMlYsSUFBQSxDQUFBcmxCLENBQUEsQ0FBQXFsQixJQUFBLENBQUFTLFlBQUEsQ0FBQTlsQixDQUFBLENBQUE4bEIsWUFBQSxDQUFBQyxTQUFBLENBQUEvbEIsQ0FBQSxDQUFBK2xCLFNBQUEsQ0FBQWpJLEtBQUEsQ0FBQTlkLENBQUEsQ0FBQThkLEtBQUEsQ0FBQTM2QyxJQUFBLENBQUE2OEIsQ0FBQSxDQUFBNzhCLElBQUEsQ0FBQSxDQUFBLE1BQUE2OEIsQ0FBQUEsQ0FBQSxDQUFBeFUsS0FBQSxDQUFBLE1BQUF3VSxDQUFBQSxDQUFBLENBQUFxbEIsSUFBQSxDQUFBLE1BQUFybEIsQ0FBQUEsQ0FBQSxDQUFBOGxCLFlBQUEsQ0FBQSxNQUFBOWxCLENBQUFBLENBQUEsQ0FBQStsQixTQUFBLENBQUEsTUFBQS9sQixDQUFBQSxDQUFBLENBQUE4ZCxLQUFBLENBQUEsV0FBQSxNQUFBOWQsQ0FBQUEsQ0FBQSxDQUFBNzhCLElBQUEsRUFBQSxNQUFBNjhCLENBQUFBLENBQUEsQ0FBQTc4QixJQUFBLENBQUE0bEIsQ0FBQSxDQUFBLG1CQUFBLENBQUFpWCxDQUFBLENBQUEsQ0FBQWpWLE1BQUEsQ0FBQTJrQixDQUFBLEVBQUE3ZSxRQUFBLENBQUEvakIsQ0FBQSxDQUFBOHVELFdBQUEsRUFBQXR6QyxFQUFBLENBQUEsT0FBQSxDQUFBLFVBQUEsQ0FBQTFPLENBQUEsQ0FBQXBZLEtBQUEsQ0FBQXNMLENBQUEsQ0FBQWlqQyxPQUFBLENBQUEsQ0FBQSxDQUFBLENBQUE5cUMsU0FBQSxFQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsRUFBQSxLQUFBc3RDLFNBQUEsQ0FBQSxLQUFBMm5CLFFBQUEsQ0FBQSxtQkFBQSxDQUFBLENBQUEsS0FBQXFCLGtCQUFBLENBQUExcUMsUUFBQSxDQUFBLEtBQUFxcEMsUUFBQSxDQUFBLENBQUEsSUFBQSxFQUFBLENBQUEsQ0FBQSxDQURBLENBQ0FHLGNBQUEsQ0FBQSx5QkFBQSxDQUFBLFFBQUF2dEQsQ0FBQUEsQ0FBQSxDQUFBaWMsQ0FBQSxDQUFBLENBQUEsTUFBQSxDQUFBdUosUUFBQSxDQUFBdkosQ0FBQSxDQUFBdUosUUFBQSxDQUFBc1csTUFBQSxDQUFBN2YsQ0FBQSxDQUFBNmYsTUFBQSxDQUFBLENBQUEsSUFBQTdsQyxDQUFBQSxDQUFBLENBQUEsSUFBQSxDQUFBaTlCLENBQUEsQ0FBQSxLQUFBajZCLE9BQUEsQ0FBQSxLQUFBbTBELFFBQUEsQ0FBQS9ELFNBQUEsQ0FBQSxDQUFBekcsTUFBQSxDQUFBLCtDQUFBLENBQUFwbUMsTUFBQSxDQUFBLHFCQUFBLENBQUFpb0MsV0FBQSxDQUFBLFVBQUEsQ0FBQXA5QyxLQUFBLENBQUEsZUFBQTZyQixDQUFBLENBQUFwbUIsQ0FBQSxDQUFBLENBQUE3VyxDQUFBLENBQUF3dkMsU0FBQSxDQUFBeHBCLENBQUEsQ0FBQSxJQUFBLENBQUEsQ0FBQSxvQkFBQSxFQUFBaG1CLENBQUEsQ0FBQTZ2RCxZQUFBLEVBQUEsQ0FBQTd2RCxDQUFBLENBQUFrdEMsUUFBQSxDQUFBLFdBQUEsQ0FBQWpRLENBQUEsQ0FBQWx6QixDQUFBLENBQUE4TSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQXk0QyxJQUFBLENBQUEsY0FBQXRwQyxDQUFBLENBQUFpWCxDQUFBLENBQUEsQ0FBQWo5QixDQUFBLENBQUFrdEMsUUFBQSxDQUFBLE1BQUEsQ0FBQWxuQixDQUFBLENBQUFqYyxDQUFBLENBQUFrekIsQ0FBQSxDQUFBLEVBQUEsQ0FBQSxDQUFBdmMsSUFBQSxDQUFBLGNBQUE3SixDQUFBLENBQUE4MUIsQ0FBQSxDQUFBLENBQUEsR0FBQXpsQyxDQUFBQSxDQUFBLENBQUF5bEMsQ0FBQSxDQUFBOUcsTUFBQSxDQUFBbFMsSUFBQSxDQUFBM3pCLENBQUEsQ0FBQXJDLFFBQUEsQ0FBQW8zQixVQUFBLEVBQUEsQ0FBQWdZLENBQUEsQ0FBQUosQ0FBQSxDQUFBOUcsTUFBQSxDQUFBeDRCLEdBQUEsQ0FBQXJOLENBQUEsQ0FBQXJDLFFBQUEsQ0FBQW0zQixTQUFBLEVBQUEsQ0FBQW1JLENBQUEsQ0FBQTFOLFFBQUEsQ0FBQSxDQUFBa2lCLEVBQUEsQ0FBQSxVQUFBLENBQUFMLEVBQUEsQ0FBQSxRQUFBbHFDLENBQUEsRUFBQSxDQUFBLENBQUEsR0FBQSxDQUFBLEVBQUEsRUFBQUEsQ0FBQSxDQUFBLEdBQUEsQ0FBQSxLQUFBLEVBQUE2bEMsQ0FBQSxFQUFBLENBQUEsQ0FBQSxHQUFBLENBQUEsRUFBQSxFQUFBQSxDQUFBLENBQUE4RCxFQUFBLENBQUE3d0MsQ0FBQSxDQUFBbEMsTUFBQSxDQUFBLENBQUFrQyxDQUFBLENBQUFndkMsWUFBQSxDQUFBaHBCLENBQUEsQ0FBQSxJQUFBLENBQUEsQ0FBQSxvQkFBQSxDQUFBLENBQUFobUIsQ0FBQSxDQUFBK3ZELGNBQUEsRUFBQSxDQUFBL3ZELENBQUEsQ0FBQWt0QyxRQUFBLENBQUEsVUFBQSxDQUFBcjJCLENBQUEsQ0FBQTlNLENBQUEsQ0FBQTRpQyxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxFQUFBLENBREEsQ0FDQTRxQixjQUFBLENBQUEseUJBQUEsQ0FBQSxRQUFBeHRELENBQUFBLENBQUEsQ0FBQWljLENBQUEsQ0FBQSxDQUFBLE1BQUEsQ0FBQXdxQyxnQkFBQSxDQUFBeHFDLENBQUEsQ0FBQXdxQyxnQkFBQSxDQUFBMkUsWUFBQSxDQUFBbnZDLENBQUEsQ0FBQW12QyxZQUFBLENBQUE1bEMsUUFBQSxDQUFBdkosQ0FBQSxDQUFBdUosUUFBQSxDQUFBbXBCLElBQUEsQ0FBQTF5QixDQUFBLENBQUEweUIsSUFBQSxDQUFBLENBQUEsSUFBQTE0QyxDQUFBQSxDQUFBLENBQUEsSUFBQSxDQUFBaTlCLENBQUEsQ0FBQSxLQUFBajZCLE9BQUEsQ0FBQTZULENBQUEsQ0FBQW9tQixDQUFBLENBQUFtM0IsU0FBQSxDQUFBem5CLENBQUEsQ0FBQSxLQUFBd3FCLFFBQUEsQ0FBQTExQyxHQUFBLENBQUEsVUFBQSxDQUFBLENBQUF2YSxDQUFBLENBQUEsVUFBQSxNQUFBMlAsQ0FBQUEsQ0FBQSxDQUFBQSxDQUFBLENBQUEscUJBQUEsQ0FBQSxLQUFBc2dELFFBQUEsQ0FBQS9DLFNBQUEsQ0FBQSxDQUFBekgsTUFBQSxDQUFBLG9CQUFBLENBQUE2QixXQUFBLENBQUEsVUFBQSxDQUFBNkUsVUFBQSxDQUFBLEtBQUFybUIsT0FBQSxDQUFBbGMsUUFBQSxDQUFBbU0sQ0FBQSxDQUFBbk0sUUFBQSxDQUFBOGlDLFNBQUEsQ0FBQTMyQixDQUFBLENBQUEyMkIsU0FBQSxDQUFBL2lDLFFBQUEsQ0FBQW9NLENBQUEsQ0FBQXBNLFFBQUEsQ0FBQWdqQyxTQUFBLENBQUEsS0FBQWtGLFVBQUEsRUFBQSxDQUFBcEYsT0FBQSxDQUFBenNELENBQUEsQ0FBQWtLLEtBQUEsQ0FBQSxlQUFBNnJCLENBQUEsQ0FBQXBtQixDQUFBLENBQUEsQ0FBQTdXLENBQUEsQ0FBQXd2QyxTQUFBLENBQUF4cEIsQ0FBQSxDQUFBLElBQUEsQ0FBQSxDQUFBLG9CQUFBLEVBQUFobUIsQ0FBQSxDQUFBNnZELFlBQUEsRUFBQSxDQUFBN3ZELENBQUEsQ0FBQWt0QyxRQUFBLENBQUEsYUFBQSxDQUFBalEsQ0FBQSxDQUFBbHpCLENBQUEsQ0FBQThNLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBaTlDLE1BQUEsQ0FBQSxnQkFBQTl0QyxDQUFBLENBQUFpWCxDQUFBLENBQUEsQ0FBQWo5QixDQUFBLENBQUFrdEMsUUFBQSxDQUFBLFFBQUEsQ0FBQWxuQixDQUFBLENBQUFqYyxDQUFBLENBQUFrekIsQ0FBQSxDQUFBLEVBQUEsQ0FBQSxDQUFBdmMsSUFBQSxDQUFBLGNBQUE3SixDQUFBLENBQUE4MUIsQ0FBQSxDQUFBLENBQUEsR0FBQXpsQyxDQUFBQSxDQUFBLENBQUFsSCxDQUFBLENBQUFtM0QsUUFBQSxDQUFBdHhCLE1BQUEsRUFBQSxDQUFBa0gsQ0FBQSxDQUFBN2xDLENBQUEsQ0FBQXlzQixJQUFBLENBQUEzekIsQ0FBQSxDQUFBckMsUUFBQSxDQUFBbzNCLFVBQUEsRUFBQSxDQUFBcVksQ0FBQSxDQUFBbG1DLENBQUEsQ0FBQW1HLEdBQUEsQ0FBQXJOLENBQUEsQ0FBQXJDLFFBQUEsQ0FBQW0zQixTQUFBLEVBQUEsQ0FBQW1JLENBQUEsQ0FBQXhNLE1BQUEsQ0FBQXp3QixDQUFBLENBQUFtM0QsUUFBQSxDQUFBMW1DLE1BQUEsRUFBQSxDQUFBd00sQ0FBQSxDQUFBM04sS0FBQSxDQUFBdHZCLENBQUEsQ0FBQW0zRCxRQUFBLENBQUE3bkMsS0FBQSxFQUFBLENBQUEyTixDQUFBLENBQUExTixRQUFBLENBQUEsQ0FBQWtpQixFQUFBLENBQUEsVUFBQSxDQUFBTCxFQUFBLENBQUEsUUFBQXJFLENBQUEsRUFBQSxDQUFBLENBQUEsR0FBQSxDQUFBLEVBQUEsRUFBQUEsQ0FBQSxDQUFBLEdBQUEsQ0FBQSxLQUFBLEVBQUFLLENBQUEsRUFBQSxDQUFBLENBQUEsR0FBQSxDQUFBLEVBQUEsRUFBQUEsQ0FBQSxDQUFBeUQsRUFBQSxDQUFBN3dDLENBQUEsQ0FBQWxDLE1BQUEsQ0FBQSxDQUFBa0MsQ0FBQSxDQUFBZ3ZDLFlBQUEsQ0FBQWhwQixDQUFBLENBQUEsSUFBQSxDQUFBLENBQUEsb0JBQUEsQ0FBQSxDQUFBaG1CLENBQUEsQ0FBQSt2RCxjQUFBLEVBQUEsQ0FBQS92RCxDQUFBLENBQUFrdEMsUUFBQSxDQUFBLFlBQUEsQ0FBQXIyQixDQUFBLENBQUE5TSxDQUFBLENBQUE0aUMsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsRUFBQWxyQixHQUFBLENBQUEsVUFBQSxDQUFBa3JCLENBQUEsRUFBQSxDQURBLENBQ0E4cUIsV0FBQSxDQUFBLHNCQUFBLENBQUEsS0FBQWhwQixHQUFBLENBQUEsS0FBQXBCLE1BQUEsRUFBQSxDQUFBLENBQUEzUixPQUFBLENBQUEsaUJBQUEzeEIsQ0FBQSxDQUFBLENBQUEsS0FBQXd1RCxnQkFBQSxHQUFBLEtBQUFYLGVBQUEsQ0FBQTV4QyxDQUFBLENBQUFqYyxDQUFBLENBQUExRyxNQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsRUFBQSxDQURBLENBQ0FrMUQsZ0JBQUEsQ0FBQSwyQkFBQSxDQUFBLEtBQUFiLGdCQUFBLEdBQUEsS0FBQXNCLGtCQUFBLEdBQUE5cEQsT0FBQSxDQUFBLElBQUEsQ0FBQSxDQUFBLENBREEsQ0FDQXdvRCxnQkFBQSxDQUFBLDJCQUFBLENBQUEsR0FBQTN0RCxDQUFBQSxDQUFBLENBQUEsS0FBQWl2RCxrQkFBQSxFQUFBLENBQUFoNUQsQ0FBQSxDQUFBZ21CLENBQUEsQ0FBQXRoQixPQUFBLENBQUEsSUFBQSxDQUFBcUYsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLEdBQUEvSixDQUFBLEVBQUErSixDQUFBLENBQUFqSCxNQUFBLENBQUE5QyxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FEQSxDQUNBZzVELGtCQUFBLENBQUEsNkJBQUEsQ0FBQSxHQUFBaHpDLENBQUFBLENBQUEsQ0FBQSxLQUFBcm9CLFFBQUEsQ0FBQTZoQixJQUFBLENBQUEscUJBQUEsQ0FBQSxDQUFBLE1BQUF3RyxDQUFBQSxDQUFBLEdBQUFBLENBQUEsQ0FBQSxFQUFBLENBQUEsS0FBQXJvQixRQUFBLENBQUE2aEIsSUFBQSxDQUFBLHFCQUFBLENBQUF3RyxDQUFBLENBQUEsQ0FBQSxDQUFBQSxDQUFBLENBQUEsQ0FEQSxDQUNBK3lDLFVBQUEsQ0FBQSxxQkFBQSxDQUFBLEdBQUEveUMsQ0FBQUEsQ0FBQSxDQUFBLEtBQUFoakIsT0FBQSxDQUFBLE1BQUEsU0FBQWdqQixDQUFBLENBQUF5SyxNQUFBLENBQUF6SyxDQUFBLENBQUE2dEMsU0FBQSxDQUFBandELElBQUEsQ0FBQXd3QyxHQUFBLENBQUFwdUIsQ0FBQSxDQUFBNnRDLFNBQUEsQ0FBQTd0QyxDQUFBLENBQUF5SyxNQUFBLENBQUEsQ0FBQSxDQURBLENBQ0EwbkMsU0FBQSxDQUFBLG9CQUFBLENBQUEsR0FBQW55QyxDQUFBQSxDQUFBLENBQUEsS0FBQW14QyxRQUFBLENBQUF4Z0QsRUFBQSxDQUFBLFVBQUEsQ0FBQSxDQUFBcVAsQ0FBQSxFQUFBLEtBQUFteEMsUUFBQSxDQUFBMTBDLElBQUEsRUFBQSxDQUFBLEtBQUEwMEMsUUFBQSxDQUFBNW5DLFFBQUEsQ0FBQSxLQUFBdnNCLE9BQUEsQ0FBQXVzQixRQUFBLENBQUEsQ0FBQXZKLENBQUEsRUFBQSxLQUFBbXhDLFFBQUEsQ0FBQXgwQyxJQUFBLEVBQUEsQ0FBQSxDQURBLENBQ0Fzc0IsV0FBQSxDQUFBLHFCQUFBbGxDLENBQUEsQ0FBQSxDQUFBLEdBQUEvSixDQUFBQSxDQUFBLENBQUEsSUFBQSxDQUFBaTlCLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQXBtQixDQUFBLENBQUEsRUFBQSxDQUFBbVAsQ0FBQSxDQUFBbGtCLElBQUEsQ0FBQWlJLENBQUEsQ0FBQSxTQUFBaWMsQ0FBQSxDQUFBamMsQ0FBQSxDQUFBLENBQUEvSixDQUFBLENBQUFrdkMsVUFBQSxDQUFBbHBCLENBQUEsQ0FBQWpjLENBQUEsRUFBQWljLENBQUEsR0FBQWhtQixDQUFBQSxDQUFBLENBQUE4MkQsa0JBQUEsR0FBQTc1QixDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQWpYLENBQUEsR0FBQWhtQixDQUFBQSxDQUFBLENBQUErMkQsdUJBQUEsR0FBQWxnRCxDQUFBLENBQUFtUCxDQUFBLENBQUEsQ0FBQWpjLENBQUEsQ0FBQSxDQUFBLENBQUEsRUFBQWt6QixDQUFBLEdBQUEsS0FBQWk3QixLQUFBLEdBQUEsS0FBQUMsU0FBQSxFQUFBLENBQUEsQ0FBQSxLQUFBaEIsUUFBQSxDQUFBeGdELEVBQUEsQ0FBQSxxQkFBQSxHQUFBLEtBQUF3Z0QsUUFBQSxDQUFBL0MsU0FBQSxDQUFBLFFBQUEsQ0FBQXY5QyxDQUFBLENBQUEsQ0FBQSxDQURBLENBQ0FxNEIsVUFBQSxDQUFBLG9CQUFBbmxDLENBQUEsQ0FBQS9KLENBQUEsQ0FBQSxDQUFBLEdBQUFpOUIsQ0FBQUEsQ0FBQSxDQUFBcG1CLENBQUEsQ0FBQTgxQixDQUFBLENBQUEsS0FBQXdxQixRQUFBLENBQUEsYUFBQXB0RCxDQUFBLEdBQUEsS0FBQTJqQyxNQUFBLENBQUEzakMsQ0FBQSxDQUFBL0osQ0FBQSxFQUFBLGFBQUErSixDQUFBLEVBQUEsS0FBQW90RCxRQUFBLENBQUFycEMsUUFBQSxDQUFBLEtBQUFneUIsU0FBQSxFQUFBLENBQUEsQ0FBQSxZQUFBLzFDLENBQUEsRUFBQSxLQUFBK3VELGNBQUEsRUFBQSxDQUFBLGNBQUEvdUQsQ0FBQSxFQUFBLEtBQUEwdUQscUJBQUEsQ0FBQXp3QyxNQUFBLENBQUEsQ0FBQTQ0QixLQUFBLENBQUE1NkIsQ0FBQSxDQUFBLEtBQUEsQ0FBQSxDQUFBNWxCLElBQUEsQ0FBQSxHQUFBLEtBQUE0QyxPQUFBLENBQUFxbUMsU0FBQSxFQUFBeGMsSUFBQSxFQUFBLENBQUEsQ0FBQSxDQUFBLGNBQUE5aUIsQ0FBQSxHQUFBa3pCLENBQUEsQ0FBQTBQLENBQUEsQ0FBQWgyQixFQUFBLENBQUEscUJBQUEsQ0FBQSxDQUFBc21CLENBQUEsRUFBQSxDQUFBajlCLENBQUEsRUFBQTJzQyxDQUFBLENBQUF5bUIsU0FBQSxDQUFBLFNBQUEsQ0FBQSxDQUFBLENBQUFuMkIsQ0FBQSxFQUFBajlCLENBQUEsRUFBQSxLQUFBczNELGNBQUEsRUFBQSxDQUFBLENBQUEsYUFBQXZ0RCxDQUFBLEVBQUEsS0FBQW91RCxTQUFBLEVBQUEsQ0FBQSxjQUFBcHVELENBQUEsR0FBQThNLENBQUEsQ0FBQTgxQixDQUFBLENBQUFoMkIsRUFBQSxDQUFBLHFCQUFBLENBQUEsQ0FBQUUsQ0FBQSxFQUFBLENBQUE3VyxDQUFBLEVBQUEyc0MsQ0FBQSxDQUFBeW5CLFNBQUEsQ0FBQSxTQUFBLENBQUEsQ0FBQXY5QyxDQUFBLEVBQUEsVUFBQSxNQUFBN1csQ0FBQUEsQ0FBQSxFQUFBMnNDLENBQUEsQ0FBQXluQixTQUFBLENBQUEsUUFBQSxDQUFBLFNBQUEsQ0FBQXAwRCxDQUFBLENBQUEsQ0FBQTZXLENBQUEsRUFBQTdXLENBQUEsR0FBQSxDQUFBLENBQUEsRUFBQSxLQUFBdTNELGNBQUEsRUFBQSxDQUFBLENBQUEsVUFBQXh0RCxDQUFBLEVBQUEsS0FBQTZ1RCxNQUFBLENBQUEsS0FBQUQsZ0JBQUEsQ0FBQTdxRCxJQUFBLENBQUEsa0JBQUEsQ0FBQSxDQUFBLEVBQUEsQ0FEQSxDQUNBb3FELEtBQUEsQ0FBQSxnQkFBQSxDQUFBLEdBQUFseUMsQ0FBQUEsQ0FBQSxDQUFBamMsQ0FBQSxDQUFBL0osQ0FBQSxDQUFBaTlCLENBQUEsQ0FBQSxLQUFBajZCLE9BQUEsQ0FBQSxLQUFBZ3FDLE9BQUEsQ0FBQXZxQixJQUFBLEdBQUFoQixHQUFBLENBQUEsQ0FBQTZOLEtBQUEsQ0FBQSxNQUFBLENBQUF1a0MsU0FBQSxDQUFBLENBQUEsQ0FBQUQsU0FBQSxDQUFBLE1BQUEsQ0FBQW5qQyxNQUFBLENBQUEsQ0FBQSxDQUFBLEVBQUF3TSxDQUFBLENBQUFwTSxRQUFBLENBQUFvTSxDQUFBLENBQUEzTixLQUFBLEdBQUEyTixDQUFBLENBQUEzTixLQUFBLENBQUEyTixDQUFBLENBQUFwTSxRQUFBLENBQUEsQ0FBQTdLLENBQUEsQ0FBQSxLQUFBbXhDLFFBQUEsQ0FBQTExQyxHQUFBLENBQUEsQ0FBQWdQLE1BQUEsQ0FBQSxNQUFBLENBQUFuQixLQUFBLENBQUEyTixDQUFBLENBQUEzTixLQUFBLENBQUEsRUFBQTZnQixXQUFBLEVBQUEsQ0FBQXBtQyxDQUFBLENBQUFuRyxJQUFBLENBQUF3dUIsR0FBQSxDQUFBLENBQUEsQ0FBQTZLLENBQUEsQ0FBQTQyQixTQUFBLENBQUE3dEMsQ0FBQSxDQUFBLENBQUFobUIsQ0FBQSxDQUFBLFVBQUEsTUFBQWk5QixDQUFBQSxDQUFBLENBQUEyMkIsU0FBQSxDQUFBaHdELElBQUEsQ0FBQXd1QixHQUFBLENBQUEsQ0FBQSxDQUFBNkssQ0FBQSxDQUFBMjJCLFNBQUEsQ0FBQTV0QyxDQUFBLENBQUEsQ0FBQSxNQUFBLENBQUEsU0FBQWlYLENBQUEsQ0FBQXhNLE1BQUEsQ0FBQSxLQUFBdWMsT0FBQSxDQUFBdnJCLEdBQUEsQ0FBQSxDQUFBb3lDLFNBQUEsQ0FBQTlwRCxDQUFBLENBQUE2cEQsU0FBQSxDQUFBNXpELENBQUEsQ0FBQXl3QixNQUFBLENBQUEsTUFBQSxDQUFBLENBQUEsQ0FBQSxLQUFBdWMsT0FBQSxDQUFBdmMsTUFBQSxDQUFBN3NCLElBQUEsQ0FBQXd1QixHQUFBLENBQUEsQ0FBQSxDQUFBNkssQ0FBQSxDQUFBeE0sTUFBQSxDQUFBekssQ0FBQSxDQUFBLENBQUEsQ0FBQSxLQUFBbXhDLFFBQUEsQ0FBQXhnRCxFQUFBLENBQUEscUJBQUEsR0FBQSxLQUFBd2dELFFBQUEsQ0FBQS9DLFNBQUEsQ0FBQSxRQUFBLENBQUEsV0FBQSxDQUFBLEtBQUEyRSxVQUFBLEVBQUEsQ0FBQSxDQUFBLENBREEsQ0FDQWxKLFlBQUEsQ0FBQSx1QkFBQSxDQUFBLEtBQUFDLFlBQUEsQ0FBQSxLQUFBbnlELFFBQUEsQ0FBQW1RLElBQUEsQ0FBQSxRQUFBLEVBQUE5TCxHQUFBLENBQUEsVUFBQSxDQUFBLEdBQUErSCxDQUFBQSxDQUFBLENBQUFpYyxDQUFBLENBQUEsSUFBQSxDQUFBLENBQUEsTUFBQUEsQ0FBQUEsQ0FBQSxDQUFBLE9BQUEsQ0FBQSxDQUFBdkUsR0FBQSxDQUFBLENBQUE4TixRQUFBLENBQUEsVUFBQSxDQUFBRCxLQUFBLENBQUF2bEIsQ0FBQSxDQUFBbW1DLFVBQUEsRUFBQSxDQUFBemYsTUFBQSxDQUFBMW1CLENBQUEsQ0FBQW9tQyxXQUFBLEVBQUEsQ0FBQSxFQUFBcmlCLFFBQUEsQ0FBQS9qQixDQUFBLENBQUFzSCxNQUFBLEVBQUEsRUFBQXcwQixNQUFBLENBQUE5N0IsQ0FBQSxDQUFBODdCLE1BQUEsRUFBQSxFQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBREEsQ0FDQWtxQixjQUFBLENBQUEseUJBQUEsQ0FBQSxLQUFBRCxZQUFBLEdBQUEsS0FBQUEsWUFBQSxDQUFBaDJDLE1BQUEsR0FBQSxNQUFBLE1BQUFnMkMsWUFBQSxFQUFBLENBREEsQ0FDQW1KLGlCQUFBLENBQUEsMkJBQUFsdkQsQ0FBQSxDQUFBLENBQUEsTUFBQWljLENBQUFBLENBQUEsQ0FBQWpjLENBQUEsQ0FBQTFHLE1BQUEsQ0FBQSxDQUFBNFUsT0FBQSxDQUFBLFlBQUEsRUFBQTVXLE1BQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEya0IsQ0FBQSxDQUFBamMsQ0FBQSxDQUFBMUcsTUFBQSxDQUFBLENBQUE0VSxPQUFBLENBQUEsZ0JBQUEsRUFBQTVXLE1BQUEsQ0FBQSxDQURBLENBQ0ErMkQsY0FBQSxDQUFBLHlCQUFBLENBQUEsR0FBQSxLQUFBcDFELE9BQUEsQ0FBQTB6RCxLQUFBLENBQUEsQ0FBQSxHQUFBM3NELENBQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxLQUFBNGxDLE1BQUEsQ0FBQSxVQUFBLENBQUE1bEMsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsRUFBQSxLQUFBcE0sUUFBQSxDQUFBNmhCLElBQUEsQ0FBQSxvQkFBQSxHQUFBLEtBQUFpdkIsR0FBQSxDQUFBLEtBQUE5d0MsUUFBQSxDQUFBLENBQUErOUIsT0FBQSxDQUFBLGlCQUFBMVYsQ0FBQSxDQUFBLENBQUFqYyxDQUFBLEVBQUEsS0FBQWt2RCxpQkFBQSxDQUFBanpDLENBQUEsQ0FBQSxHQUFBQSxDQUFBLENBQUEyQixjQUFBLEdBQUEsS0FBQXF4QyxrQkFBQSxHQUFBLENBQUEsRUFBQWYsY0FBQSxFQUFBLEVBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxLQUFBSSxPQUFBLENBQUFyeUMsQ0FBQSxDQUFBLE9BQUEsQ0FBQSxDQUFBOEgsUUFBQSxDQUFBLEtBQUFneUIsU0FBQSxFQUFBLENBQUEsQ0FBQSxLQUFBdFEsU0FBQSxDQUFBLEtBQUE2b0IsT0FBQSxDQUFBLElBQUEsQ0FBQSw0QkFBQSxDQUFBLENBQUEsS0FBQTVwQixHQUFBLENBQUEsS0FBQTRwQixPQUFBLENBQUEsQ0FBQXRZLFNBQUEsQ0FBQSxZQUFBLENBQUEsQ0FBQSxDQUFBLEtBQUFwaUQsUUFBQSxDQUFBNmhCLElBQUEsQ0FBQSxvQkFBQSxDQUFBLENBQUEsS0FBQTdoQixRQUFBLENBQUE2aEIsSUFBQSxDQUFBLG9CQUFBLEdBQUEsQ0FBQSxFQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FEQSxDQUNBbTRDLGVBQUEsQ0FBQSwwQkFBQSxDQUFBLEdBQUEsS0FBQTMwRCxPQUFBLENBQUEwekQsS0FBQSxFQUFBLEtBQUEyQixPQUFBLENBQUEsQ0FBQSxHQUFBcnlDLENBQUFBLENBQUEsQ0FBQSxLQUFBcm9CLFFBQUEsQ0FBQTZoQixJQUFBLENBQUEsb0JBQUEsRUFBQSxDQUFBLENBQUF3RyxDQUFBLENBQUEsS0FBQXJvQixRQUFBLENBQUE2aEIsSUFBQSxDQUFBLG9CQUFBLENBQUF3RyxDQUFBLENBQUEsRUFBQSxLQUFBMHBCLElBQUEsQ0FBQSxLQUFBL3hDLFFBQUEsQ0FBQSxTQUFBLEVBQUEsS0FBQUEsUUFBQSxDQUFBd2lCLFVBQUEsQ0FBQSxvQkFBQSxDQUFBLENBQUEsQ0FBQSxLQUFBazRDLE9BQUEsQ0FBQXYrQyxNQUFBLEVBQUEsQ0FBQSxLQUFBdStDLE9BQUEsQ0FBQSxJQUFBLENBQUEsQ0FBQSxDQURBLENBQUEsQ0FEQSxDQUVBcnlDLENBQUEsQ0FBQWd3QixZQUFBLEdBQUEsQ0FBQSxDQUFBLEVBQUFod0IsQ0FBQSxDQUFBcW5CLE1BQUEsQ0FBQSxXQUFBLENBQUFybkIsQ0FBQSxDQUFBbW5CLEVBQUEsQ0FBQStyQixNQUFBLENBQUEsQ0FBQWwyRCxPQUFBLENBQUEsQ0FBQW0yRCxXQUFBLENBQUEsRUFBQSxDQUFBLENBQUFqQyxjQUFBLENBQUEseUJBQUEsQ0FBQSxLQUFBeHBCLE1BQUEsR0FBQSxLQUFBeXBCLFFBQUEsQ0FBQXY4QixRQUFBLENBQUEsS0FBQTUzQixPQUFBLENBQUFtMkQsV0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBanFCLFVBQUEsQ0FBQSxvQkFBQWxwQixDQUFBLENBQUFqYyxDQUFBLENBQUEsQ0FBQSxnQkFBQWljLENBQUEsRUFBQSxLQUFBbXhDLFFBQUEsQ0FBQWw4QixXQUFBLENBQUEsS0FBQWo0QixPQUFBLENBQUFtMkQsV0FBQSxFQUFBditCLFFBQUEsQ0FBQTd3QixDQUFBLENBQUEsQ0FBQSxLQUFBNGpDLFdBQUEsQ0FBQXpyQyxTQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FGQSxDQUVBOGpCLENBQUEsQ0FBQW1uQixFQUFBLENBQUErckIsTUFGQSxDQUVBbHpDLENBQUEsQ0FBQXFuQixNQUFBLENBQUEsY0FBQSxDQUFBLENBQUF6c0MsT0FBQSxDQUFBLFFBQUEsQ0FBQWd0QyxpQkFBQSxDQUFBLE1BQUEsQ0FBQTVxQyxPQUFBLENBQUEsQ0FBQW8yRCxNQUFBLENBQUEsR0FBQSxDQUFBL0ssVUFBQSxDQUFBLENBQUEsQ0FBQSxDQUFBZ0wsTUFBQSxDQUFBLENBQUEsQ0FBQSxDQUFBcHVELEtBQUEsQ0FBQSxTQUFBLENBQUFxdUQsU0FBQSxDQUFBLFdBQUEsQ0FBQXJlLFFBQUEsQ0FBQSxJQUFBLENBQUFzZSxVQUFBLENBQUEsSUFBQSxDQUFBaEksSUFBQSxDQUFBLElBQUEsQ0FBQWlJLEdBQUEsQ0FBQSxJQUFBLENBQUFDLElBQUEsQ0FBQSxJQUFBLENBQUEsQ0FBQTdxQixPQUFBLENBQUEsa0JBQUEsQ0FBQSxHQUFBN2tDLENBQUFBLENBQUEsQ0FBQS9KLENBQUEsQ0FBQSxLQUFBZ0QsT0FBQSxDQUFBaTZCLENBQUEsQ0FBQWo5QixDQUFBLENBQUFvNUQsTUFBQSxDQUFBLEtBQUFNLE1BQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxLQUFBQyxLQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsS0FBQVAsTUFBQSxDQUFBcHpDLENBQUEsQ0FBQTdtQixVQUFBLENBQUE4OUIsQ0FBQSxFQUFBQSxDQUFBLENBQUEsU0FBQWpYLENBQUEsQ0FBQSxDQUFBLE1BQUFBLENBQUFBLENBQUEsQ0FBQXJQLEVBQUEsQ0FBQXNtQixDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsS0FBQTI4QixXQUFBLENBQUEsVUFBQSxDQUFBLE1BQUExM0QsQ0FBQUEsU0FBQSxDQUFBYixNQUFBLEVBQUEwSSxDQUFBLENBQUE3SCxTQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsSUFBQSxFQUFBLEVBQUE2SCxDQUFBLENBQUFBLENBQUEsQ0FBQUEsQ0FBQSxDQUFBLENBQUF1bEIsS0FBQSxDQUFBLEtBQUEwZCxPQUFBLENBQUEsQ0FBQSxFQUFBdmQsV0FBQSxDQUFBZ0IsTUFBQSxDQUFBLEtBQUF1YyxPQUFBLENBQUEsQ0FBQSxFQUFBeEosWUFBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLEtBQUFxMkIsYUFBQSxDQUFBNzVELENBQUEsQ0FBQWlMLEtBQUEsQ0FBQSxDQUFBakwsQ0FBQSxDQUFBcXVELFVBQUEsRUFBQSxLQUFBN2UsU0FBQSxDQUFBLGNBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQXFxQixhQUFBLENBQUEsdUJBQUE5dkQsQ0FBQSxDQUFBLENBQUFpYyxDQUFBLENBQUFtbkIsRUFBQSxDQUFBK2lCLFNBQUEsQ0FBQTRKLFVBQUEsQ0FBQS92RCxDQUFBLEVBQUFpYyxDQUFBLENBQUFtbkIsRUFBQSxDQUFBK2lCLFNBQUEsQ0FBQTRKLFVBQUEsQ0FBQS92RCxDQUFBLEdBQUEsRUFBQSxDQUFBaWMsQ0FBQSxDQUFBbW5CLEVBQUEsQ0FBQStpQixTQUFBLENBQUE0SixVQUFBLENBQUEvdkQsQ0FBQSxFQUFBckwsSUFBQSxDQUFBLElBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQXE3RCxPQUFBLENBQUEsaUJBQUEvekMsQ0FBQSxDQUFBLENBQUEsSUFBQSxHQUFBamMsQ0FBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQWljLENBQUEsQ0FBQTNrQixNQUFBLENBQUEwSSxDQUFBLENBQUFBLENBQUEsRUFBQSxFQUFBaWMsQ0FBQSxDQUFBamMsQ0FBQSxDQUFBLEdBQUEsSUFBQSxFQUFBaWMsQ0FBQSxDQUFBbGpCLE1BQUEsQ0FBQWlILENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQWdsQyxRQUFBLENBQUEsbUJBQUEsQ0FBQSxHQUFBaGxDLENBQUFBLENBQUEsQ0FBQWljLENBQUEsQ0FBQW1uQixFQUFBLENBQUEraUIsU0FBQSxDQUFBNEosVUFBQSxDQUFBLEtBQUE5MkQsT0FBQSxDQUFBaUksS0FBQSxDQUFBLENBQUEsS0FBQTh1RCxPQUFBLENBQUFod0QsQ0FBQSxFQUFBLENBQUEsQ0FBQW1sQyxVQUFBLENBQUEsb0JBQUFubEMsQ0FBQSxDQUFBL0osQ0FBQSxDQUFBLENBQUEsR0FBQSxXQUFBK0osQ0FBQSxDQUFBLEtBQUFxdkQsTUFBQSxDQUFBcHpDLENBQUEsQ0FBQTdtQixVQUFBLENBQUFhLENBQUEsRUFBQUEsQ0FBQSxDQUFBLFNBQUFnbUIsQ0FBQSxDQUFBLENBQUEsTUFBQUEsQ0FBQUEsQ0FBQSxDQUFBclAsRUFBQSxDQUFBM1csQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLElBQUEsSUFBQSxVQUFBK0osQ0FBQSxDQUFBLENBQUEsR0FBQWt6QixDQUFBQSxDQUFBLENBQUFqWCxDQUFBLENBQUFtbkIsRUFBQSxDQUFBK2lCLFNBQUEsQ0FBQTRKLFVBQUEsQ0FBQSxLQUFBOTJELE9BQUEsQ0FBQWlJLEtBQUEsQ0FBQSxDQUFBLEtBQUE4dUQsT0FBQSxDQUFBOThCLENBQUEsRUFBQSxLQUFBNDhCLGFBQUEsQ0FBQTc1RCxDQUFBLENBQUEsQ0FBQSxNQUFBMHRDLE1BQUEsQ0FBQTNqQyxDQUFBLENBQUEvSixDQUFBLEVBQUEsQ0FBQSxDQUFBKzdDLFNBQUEsQ0FBQSxtQkFBQWh5QyxDQUFBLENBQUEsQ0FBQSxHQUFBL0osQ0FBQUEsQ0FBQSxDQUFBZ21CLENBQUEsQ0FBQW1uQixFQUFBLENBQUEraUIsU0FBQSxDQUFBdndCLE9BQUEsQ0FBQSxLQUFBcTZCLGVBQUEsR0FBQWg2RCxDQUFBLEVBQUEsS0FBQWt0QyxRQUFBLENBQUEsVUFBQSxDQUFBbmpDLENBQUEsQ0FBQSxLQUFBb2pDLEVBQUEsQ0FBQW50QyxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQWk2RCxXQUFBLENBQUEscUJBQUFsd0QsQ0FBQSxDQUFBLENBQUEsR0FBQS9KLENBQUFBLENBQUEsQ0FBQWdtQixDQUFBLENBQUFtbkIsRUFBQSxDQUFBK2lCLFNBQUEsQ0FBQXZ3QixPQUFBLENBQUEsS0FBQXU2QixrQkFBQSxHQUFBbDZELENBQUEsRUFBQSxLQUFBa3RDLFFBQUEsQ0FBQSxZQUFBLENBQUFuakMsQ0FBQSxDQUFBLEtBQUFvakMsRUFBQSxDQUFBbnRDLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBbTZELEtBQUEsQ0FBQSxlQUFBcHdELENBQUEsQ0FBQSxDQUFBLEdBQUEvSixDQUFBQSxDQUFBLENBQUFnbUIsQ0FBQSxDQUFBbW5CLEVBQUEsQ0FBQStpQixTQUFBLENBQUF2d0IsT0FBQSxDQUFBMy9CLENBQUEsRUFBQSxDQUFBQSxDQUFBLENBQUF3eUQsV0FBQSxFQUFBeHlELENBQUEsQ0FBQWd0QyxPQUFBLEVBQUEsQ0FBQSxJQUFBLEtBQUFBLE9BQUEsQ0FBQSxDQUFBLENBQUEsRUFBQSxLQUFBb3NCLE1BQUEsQ0FBQTc2RCxJQUFBLENBQUEsS0FBQXl1QyxPQUFBLENBQUEsQ0FBQSxDQUFBLENBQUFodEMsQ0FBQSxDQUFBd3lELFdBQUEsRUFBQXh5RCxDQUFBLENBQUFndEMsT0FBQSxDQUFBLEdBQUEsS0FBQW90QixjQUFBLEdBQUEsS0FBQWx0QixRQUFBLENBQUEsTUFBQSxDQUFBbmpDLENBQUEsQ0FBQSxLQUFBb2pDLEVBQUEsQ0FBQW50QyxDQUFBLENBQUEsQ0FBQSxFQUFBLENBQUEsQ0FBQXE2RCxJQUFBLENBQUEsY0FBQXR3RCxDQUFBLENBQUEsQ0FBQSxHQUFBL0osQ0FBQUEsQ0FBQSxDQUFBZ21CLENBQUEsQ0FBQW1uQixFQUFBLENBQUEraUIsU0FBQSxDQUFBdndCLE9BQUEsQ0FBQTMvQixDQUFBLEVBQUEsQ0FBQUEsQ0FBQSxDQUFBd3lELFdBQUEsRUFBQXh5RCxDQUFBLENBQUFndEMsT0FBQSxFQUFBLENBQUEsSUFBQSxLQUFBQSxPQUFBLENBQUEsQ0FBQSxDQUFBLEVBQUEsS0FBQW9zQixNQUFBLENBQUE3NkQsSUFBQSxDQUFBLEtBQUF5dUMsT0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBaHRDLENBQUEsQ0FBQXd5RCxXQUFBLEVBQUF4eUQsQ0FBQSxDQUFBZ3RDLE9BQUEsQ0FBQSxHQUFBLEtBQUFzdEIsaUJBQUEsR0FBQSxLQUFBcHRCLFFBQUEsQ0FBQSxLQUFBLENBQUFuakMsQ0FBQSxDQUFBLEtBQUFvakMsRUFBQSxDQUFBbnRDLENBQUEsQ0FBQSxDQUFBLEVBQUEsQ0FBQSxDQUFBdTZELEtBQUEsQ0FBQSxlQUFBeHdELENBQUEsQ0FBQS9KLENBQUEsQ0FBQSxDQUFBLEdBQUFpOUIsQ0FBQUEsQ0FBQSxDQUFBajlCLENBQUEsRUFBQWdtQixDQUFBLENBQUFtbkIsRUFBQSxDQUFBK2lCLFNBQUEsQ0FBQXZ3QixPQUFBLENBQUE5b0IsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLE1BQUFvbUIsQ0FBQUEsQ0FBQSxFQUFBLENBQUFBLENBQUEsQ0FBQXUxQixXQUFBLEVBQUF2MUIsQ0FBQSxDQUFBK1AsT0FBQSxFQUFBLENBQUEsSUFBQSxLQUFBQSxPQUFBLENBQUEsQ0FBQSxDQUFBLEVBQUEsS0FBQUEsT0FBQSxDQUFBbC9CLElBQUEsQ0FBQSxxQkFBQSxFQUFBcUosR0FBQSxDQUFBLHdCQUFBLEVBQUFyVixJQUFBLENBQUEsVUFBQSxDQUFBLEdBQUE5QixDQUFBQSxDQUFBLENBQUFnbUIsQ0FBQSxDQUFBLElBQUEsQ0FBQSxDQUFBdzBDLFNBQUEsQ0FBQSxVQUFBLENBQUEsQ0FBQSxNQUFBeDZELENBQUFBLENBQUEsQ0FBQWdELE9BQUEsQ0FBQXEyRCxNQUFBLEVBQUEsQ0FBQXI1RCxDQUFBLENBQUFnRCxPQUFBLENBQUEwRyxRQUFBLEVBQUExSixDQUFBLENBQUFnRCxPQUFBLENBQUFpSSxLQUFBLEdBQUFneUIsQ0FBQSxDQUFBajZCLE9BQUEsQ0FBQWlJLEtBQUEsRUFBQWpMLENBQUEsQ0FBQW81RCxNQUFBLENBQUE3NkQsSUFBQSxDQUFBeUIsQ0FBQSxDQUFBZ3RDLE9BQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQS9QLENBQUEsQ0FBQXUxQixXQUFBLEVBQUF2MUIsQ0FBQSxDQUFBK1AsT0FBQSxDQUFBLEVBQUE1eUIsQ0FBQSxDQUFBNmlCLENBQUEsQ0FBQWpYLENBQUEsQ0FBQWpqQixNQUFBLENBQUEvQyxDQUFBLENBQUEsQ0FBQTZsQyxNQUFBLENBQUE3bEMsQ0FBQSxDQUFBZ3RDLE9BQUEsQ0FBQW5ILE1BQUEsRUFBQSxDQUFBLENBQUEsQ0FBQTdsQyxDQUFBLENBQUFnRCxPQUFBLENBQUFzMkQsU0FBQSxDQUFBdnZELENBQUEsQ0FBQSxFQUFBOE0sQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxFQUFBLElBQUEsRUFBQSxDQUFBLENBQUEsRUFBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLEtBQUF1aUQsTUFBQSxDQUFBNzZELElBQUEsQ0FBQSxLQUFBeXVDLE9BQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQS9QLENBQUEsQ0FBQXUxQixXQUFBLEVBQUF2MUIsQ0FBQSxDQUFBK1AsT0FBQSxHQUFBLEtBQUFrdEIsa0JBQUEsR0FBQSxLQUFBSSxpQkFBQSxFQUFBLENBQUEsS0FBQXB0QixRQUFBLENBQUEsTUFBQSxDQUFBbmpDLENBQUEsQ0FBQSxLQUFBb2pDLEVBQUEsQ0FBQWxRLENBQUEsQ0FBQSxDQUFBLENBQUEsS0FBQStQLE9BQUEsRUFBQSxDQUFBLENBQUEsRUFBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUFHLEVBQUEsQ0FBQSxZQUFBbm5CLENBQUEsQ0FBQSxDQUFBLE1BQUEsQ0FBQW90QyxTQUFBLENBQUFwdEMsQ0FBQSxDQUFBd3NDLFdBQUEsRUFBQXhzQyxDQUFBLENBQUFnbkIsT0FBQSxDQUFBMmhCLE1BQUEsQ0FBQTNvQyxDQUFBLENBQUEyb0MsTUFBQSxDQUFBcC9CLFFBQUEsQ0FBQXZKLENBQUEsQ0FBQXVKLFFBQUEsQ0FBQXNXLE1BQUEsQ0FBQTdmLENBQUEsQ0FBQXNxQyxXQUFBLENBQUEsQ0FBQSxDQUFBLENBQUE4SixjQUFBLENBQUEseUJBQUEsQ0FBQSxLQUFBNXFCLFNBQUEsQ0FBQSxvQkFBQSxFQUFBLENBQUEsQ0FBQThxQixpQkFBQSxDQUFBLDRCQUFBLENBQUEsS0FBQXRyQixZQUFBLENBQUEsb0JBQUEsRUFBQSxDQUFBLENBQUFnckIsZUFBQSxDQUFBLDBCQUFBLENBQUEsS0FBQXhxQixTQUFBLENBQUEscUJBQUEsRUFBQSxDQUFBLENBQUEwcUIsa0JBQUEsQ0FBQSw2QkFBQSxDQUFBLEtBQUFsckIsWUFBQSxDQUFBLHFCQUFBLEVBQUEsQ0FBQSxDQUFBLENBRkEsQ0FFQSxHQUFBNTBCLENBQUFBLENBQUEsQ0FBQTRMLENBQUEsQ0FBQW1uQixFQUFBLENBQUFzdEIsU0FBQSxDQUFBLFVBQUEsQ0FBQSxRQUFBejBDLENBQUFBLENBQUEsQ0FBQUEsQ0FBQSxDQUFBamMsQ0FBQSxDQUFBL0osQ0FBQSxDQUFBLENBQUEsTUFBQWdtQixDQUFBQSxDQUFBLEVBQUFqYyxDQUFBLEVBQUFBLENBQUEsQ0FBQS9KLENBQUEsQ0FBQWdtQixDQUFBLENBQUEsT0FBQSxVQUFBamMsQ0FBQSxDQUFBL0osQ0FBQSxDQUFBaTlCLENBQUEsQ0FBQXBtQixDQUFBLENBQUEsQ0FBQSxHQUFBLENBQUE3VyxDQUFBLENBQUE2bEMsTUFBQSxDQUFBLE1BQUEsQ0FBQSxDQUFBLENBQUEsR0FBQThHLENBQUFBLENBQUEsQ0FBQSxDQUFBNWlDLENBQUEsQ0FBQXVtRCxXQUFBLEVBQUF2bUQsQ0FBQSxDQUFBd2xCLFFBQUEsQ0FBQW1yQyxRQUFBLEVBQUEvbUMsSUFBQSxDQUFBNXBCLENBQUEsQ0FBQW1uRCxPQUFBLENBQUF2OUIsSUFBQSxDQUFBenNCLENBQUEsQ0FBQSxDQUFBNkMsQ0FBQSxDQUFBdW1ELFdBQUEsRUFBQXZtRCxDQUFBLENBQUF3bEIsUUFBQSxDQUFBbXJDLFFBQUEsRUFBQXJ0RCxHQUFBLENBQUF0RCxDQUFBLENBQUFtbkQsT0FBQSxDQUFBN2pELEdBQUEsQ0FBQTAvQixDQUFBLENBQUFKLENBQUEsQ0FBQTVpQyxDQUFBLENBQUE0bkQsaUJBQUEsQ0FBQXJpQyxLQUFBLENBQUE4ZCxDQUFBLENBQUFsbUMsQ0FBQSxDQUFBNkMsQ0FBQSxDQUFBNG5ELGlCQUFBLENBQUFsaEMsTUFBQSxDQUFBelksQ0FBQSxDQUFBaFksQ0FBQSxDQUFBNmxDLE1BQUEsQ0FBQWxTLElBQUEsQ0FBQThiLENBQUEsQ0FBQXp2QyxDQUFBLENBQUE2bEMsTUFBQSxDQUFBeDRCLEdBQUEsQ0FBQTRpQyxDQUFBLENBQUFqNEIsQ0FBQSxDQUFBaFksQ0FBQSxDQUFBNDVELFdBQUEsR0FBQXRxQyxLQUFBLENBQUErZ0IsQ0FBQSxDQUFBWixDQUFBLENBQUF6dkMsQ0FBQSxDQUFBNDVELFdBQUEsR0FBQW5wQyxNQUFBLENBQUEsT0FBQXdNLENBQUEsRUFBQSxJQUFBLEtBQUEsQ0FBQSxNQUFBMFAsQ0FBQUEsQ0FBQSxFQUFBMzBCLENBQUEsRUFBQWk0QixDQUFBLEVBQUFsRCxDQUFBLEVBQUE3bEMsQ0FBQSxFQUFBdW9DLENBQUEsRUFBQVksQ0FBQSxFQUFBakQsQ0FBQSxDQUFBLElBQUEsV0FBQSxDQUFBLE1BQUFULENBQUFBLENBQUEsQ0FBQTVpQyxDQUFBLENBQUE0bkQsaUJBQUEsQ0FBQXJpQyxLQUFBLENBQUEsQ0FBQSxDQUFBdFgsQ0FBQSxFQUFBaTRCLENBQUEsQ0FBQWxELENBQUEsQ0FBQWhqQyxDQUFBLENBQUE0bkQsaUJBQUEsQ0FBQXJpQyxLQUFBLENBQUEsQ0FBQSxFQUFBcG9CLENBQUEsQ0FBQTZDLENBQUEsQ0FBQTRuRCxpQkFBQSxDQUFBbGhDLE1BQUEsQ0FBQSxDQUFBLENBQUFnZixDQUFBLEVBQUFZLENBQUEsQ0FBQWpELENBQUEsQ0FBQXJqQyxDQUFBLENBQUE0bkQsaUJBQUEsQ0FBQWxoQyxNQUFBLENBQUEsQ0FBQSxDQUFBLElBQUEsU0FBQSxDQUFBLE1BQUF6SyxDQUFBQSxDQUFBLENBQUFuUCxDQUFBLENBQUFxVCxLQUFBLENBQUF1bEIsQ0FBQSxDQUFBenZDLENBQUEsQ0FBQTQ1RCxXQUFBLEdBQUFucEMsTUFBQSxDQUFBLEVBQUF6SyxDQUFBLENBQUFuUCxDQUFBLENBQUFvVCxLQUFBLENBQUFqUyxDQUFBLENBQUFoWSxDQUFBLENBQUE0NUQsV0FBQSxHQUFBdHFDLEtBQUEsQ0FBQSxDQUFBLElBQUEsT0FBQSxDQUFBLE1BQUEsQ0FBQXBvQixDQUFBLEVBQUF1b0MsQ0FBQSxFQUFBWSxDQUFBLEVBQUFucEMsQ0FBQSxFQUFBa21DLENBQUEsRUFBQXFDLENBQUEsRUFBQVksQ0FBQSxFQUFBakQsQ0FBQSxFQUFBcUMsQ0FBQSxDQUFBdm9DLENBQUEsRUFBQWttQyxDQUFBLENBQUFpRCxDQUFBLElBQUExRCxDQUFBLEVBQUEzMEIsQ0FBQSxFQUFBaTRCLENBQUEsRUFBQXRELENBQUEsRUFBQUksQ0FBQSxFQUFBLzBCLENBQUEsRUFBQWk0QixDQUFBLEVBQUFsRCxDQUFBLEVBQUEvMEIsQ0FBQSxDQUFBMjBCLENBQUEsRUFBQUksQ0FBQSxDQUFBa0QsQ0FBQSxDQUFBLENBQUEsUUFBQSxNQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsRUFBQSxDQUFBanFCLENBQUEsQ0FBQW1uQixFQUFBLENBQUEraUIsU0FBQSxDQUFBLENBQUF2d0IsT0FBQSxDQUFBLElBQUEsQ0FBQW02QixVQUFBLENBQUEsQ0FBQSxVQUFBLEVBQUEsQ0FBQSxDQUFBOUksY0FBQSxDQUFBLHdCQUFBam5ELENBQUEsQ0FBQS9KLENBQUEsQ0FBQSxDQUFBLEdBQUFpOUIsQ0FBQUEsQ0FBQSxDQUFBcG1CLENBQUEsQ0FBQTgxQixDQUFBLENBQUEzbUIsQ0FBQSxDQUFBbW5CLEVBQUEsQ0FBQStpQixTQUFBLENBQUE0SixVQUFBLENBQUEvdkQsQ0FBQSxDQUFBL0csT0FBQSxDQUFBaUksS0FBQSxHQUFBLEVBQUEsQ0FBQS9ELENBQUEsQ0FBQWxILENBQUEsQ0FBQUEsQ0FBQSxDQUFBUixJQUFBLENBQUEsSUFBQSxDQUFBdXRDLENBQUEsQ0FBQSxDQUFBaGpDLENBQUEsQ0FBQXlvRCxXQUFBLEVBQUF6b0QsQ0FBQSxDQUFBaWpDLE9BQUEsRUFBQWwvQixJQUFBLENBQUEscUJBQUEsRUFBQXVLLE9BQUEsRUFBQSxDQUFBMk4sQ0FBQSxDQUFBLElBQUFpWCxDQUFBLENBQUEsQ0FBQSxDQUFBMFAsQ0FBQSxDQUFBdHJDLE1BQUEsQ0FBQTQ3QixDQUFBLENBQUFBLENBQUEsRUFBQSxFQUFBLEdBQUEsRUFBQTBQLENBQUEsQ0FBQTFQLENBQUEsQ0FBQSxDQUFBajZCLE9BQUEsQ0FBQTBHLFFBQUEsRUFBQUssQ0FBQSxFQUFBLENBQUE0aUMsQ0FBQSxDQUFBMVAsQ0FBQSxDQUFBLENBQUFtOEIsTUFBQSxDQUFBNzZELElBQUEsQ0FBQW91QyxDQUFBLENBQUExUCxDQUFBLENBQUEsQ0FBQStQLE9BQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQWpqQyxDQUFBLENBQUF5b0QsV0FBQSxFQUFBem9ELENBQUEsQ0FBQWlqQyxPQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsSUFBQW4yQixDQUFBLENBQUEsQ0FBQSxDQUFBazJCLENBQUEsQ0FBQTFyQyxNQUFBLENBQUF3VixDQUFBLENBQUFBLENBQUEsRUFBQSxFQUFBLEdBQUFrMkIsQ0FBQSxDQUFBbDJCLENBQUEsQ0FBQSxHQUFBODFCLENBQUEsQ0FBQTFQLENBQUEsQ0FBQSxDQUFBK1AsT0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUFMLENBQUEsQ0FBQTFQLENBQUEsQ0FBQSxDQUFBMjhCLFdBQUEsR0FBQW5wQyxNQUFBLENBQUEsQ0FBQSxDQUFBLFFBQUF6SyxDQUFBQSxDQUFBLENBQUEsQ0FBQSxDQUFBMm1CLENBQUEsQ0FBQTFQLENBQUEsQ0FBQSxDQUFBc0csT0FBQSxDQUFBLFNBQUFvSixDQUFBLENBQUExUCxDQUFBLENBQUEsQ0FBQStQLE9BQUEsQ0FBQXZyQixHQUFBLENBQUEsU0FBQSxDQUFBLENBQUFrckIsQ0FBQSxDQUFBMVAsQ0FBQSxDQUFBLENBQUFzRyxPQUFBLEdBQUEsY0FBQXI4QixDQUFBLEVBQUF5bEMsQ0FBQSxDQUFBMVAsQ0FBQSxDQUFBLENBQUE4ZSxTQUFBLENBQUF4OUMsSUFBQSxDQUFBb3VDLENBQUEsQ0FBQTFQLENBQUEsQ0FBQSxDQUFBajlCLENBQUEsQ0FBQSxDQUFBMnNDLENBQUEsQ0FBQTFQLENBQUEsQ0FBQSxDQUFBNEksTUFBQSxDQUFBOEcsQ0FBQSxDQUFBMVAsQ0FBQSxDQUFBLENBQUErUCxPQUFBLENBQUFuSCxNQUFBLEVBQUEsQ0FBQThHLENBQUEsQ0FBQTFQLENBQUEsQ0FBQSxDQUFBMjhCLFdBQUEsQ0FBQSxDQUFBdHFDLEtBQUEsQ0FBQXFkLENBQUEsQ0FBQTFQLENBQUEsQ0FBQSxDQUFBK1AsT0FBQSxDQUFBLENBQUEsRUFBQXZkLFdBQUEsQ0FBQWdCLE1BQUEsQ0FBQWtjLENBQUEsQ0FBQTFQLENBQUEsQ0FBQSxDQUFBK1AsT0FBQSxDQUFBLENBQUEsRUFBQXhKLFlBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBK3RCLElBQUEsQ0FBQSxjQUFBeG5ELENBQUEsQ0FBQS9KLENBQUEsQ0FBQSxDQUFBLEdBQUFpOUIsQ0FBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLE1BQUFqWCxDQUFBQSxDQUFBLENBQUFsa0IsSUFBQSxDQUFBLENBQUFra0IsQ0FBQSxDQUFBbW5CLEVBQUEsQ0FBQStpQixTQUFBLENBQUE0SixVQUFBLENBQUEvdkQsQ0FBQSxDQUFBL0csT0FBQSxDQUFBaUksS0FBQSxHQUFBLEVBQUEsRUFBQTdNLEtBQUEsRUFBQSxDQUFBLFVBQUEsQ0FBQSxLQUFBNEUsT0FBQSxHQUFBLENBQUEsS0FBQUEsT0FBQSxDQUFBMEcsUUFBQSxFQUFBLEtBQUE2NUIsT0FBQSxFQUFBbnBCLENBQUEsQ0FBQXJRLENBQUEsQ0FBQSxJQUFBLENBQUEsS0FBQS9HLE9BQUEsQ0FBQXMyRCxTQUFBLENBQUF0NUQsQ0FBQSxDQUFBLEdBQUFpOUIsQ0FBQSxDQUFBLEtBQUFzOUIsS0FBQSxDQUFBaDhELElBQUEsQ0FBQSxJQUFBLENBQUF5QixDQUFBLEdBQUFpOUIsQ0FBQSxFQUFBLENBQUEsS0FBQWo2QixPQUFBLENBQUEwRyxRQUFBLEVBQUEsS0FBQTY1QixPQUFBLEVBQUEsS0FBQTYxQixNQUFBLENBQUE3NkQsSUFBQSxDQUFBLEtBQUF5dUMsT0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBampDLENBQUEsQ0FBQXlvRCxXQUFBLEVBQUF6b0QsQ0FBQSxDQUFBaWpDLE9BQUEsQ0FBQSxHQUFBLEtBQUEyc0IsS0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLEtBQUFELE1BQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxLQUFBTyxXQUFBLENBQUExN0QsSUFBQSxDQUFBLElBQUEsQ0FBQXlCLENBQUEsQ0FBQSxDQUFBLEVBQUEsQ0FBQSxFQUFBaTlCLENBQUEsQ0FBQSxDQUFBLENBQUFnMEIsU0FBQSxDQUFBLG1CQUFBbG5ELENBQUEsQ0FBQS9KLENBQUEsQ0FBQSxDQUFBK0osQ0FBQSxDQUFBaWpDLE9BQUEsQ0FBQXgwQixZQUFBLENBQUEsTUFBQSxFQUFBK00sRUFBQSxDQUFBLGtCQUFBLENBQUEsVUFBQSxDQUFBeGIsQ0FBQSxDQUFBL0csT0FBQSxDQUFBNnJELGdCQUFBLEVBQUE3b0MsQ0FBQSxDQUFBbW5CLEVBQUEsQ0FBQStpQixTQUFBLENBQUFjLGNBQUEsQ0FBQWpuRCxDQUFBLENBQUEvSixDQUFBLENBQUEsQ0FBQSxDQUFBLEVBQUEsQ0FBQSxDQUFBc3ZELElBQUEsQ0FBQSxjQUFBdmxELENBQUEsQ0FBQS9KLENBQUEsQ0FBQSxDQUFBK0osQ0FBQSxDQUFBL0csT0FBQSxDQUFBNnJELGdCQUFBLEVBQUE3b0MsQ0FBQSxDQUFBbW5CLEVBQUEsQ0FBQStpQixTQUFBLENBQUFjLGNBQUEsQ0FBQWpuRCxDQUFBLENBQUEvSixDQUFBLENBQUEsQ0FBQWdtQixDQUFBLENBQUFsa0IsSUFBQSxDQUFBa2tCLENBQUEsQ0FBQW1uQixFQUFBLENBQUEraUIsU0FBQSxDQUFBNEosVUFBQSxDQUFBL3ZELENBQUEsQ0FBQS9HLE9BQUEsQ0FBQWlJLEtBQUEsR0FBQSxFQUFBLENBQUEsVUFBQSxDQUFBLEdBQUEsQ0FBQSxLQUFBakksT0FBQSxDQUFBMEcsUUFBQSxFQUFBLENBQUEsS0FBQWl4RCxXQUFBLEVBQUEsS0FBQXAzQixPQUFBLENBQUEsQ0FBQSxHQUFBdEcsQ0FBQUEsQ0FBQSxDQUFBcG1CLENBQUEsQ0FBQTgxQixDQUFBLENBQUF6bEMsQ0FBQSxDQUFBa1QsQ0FBQSxDQUFBclEsQ0FBQSxDQUFBLElBQUEsQ0FBQSxLQUFBL0csT0FBQSxDQUFBczJELFNBQUEsQ0FBQXQ1RCxDQUFBLENBQUEsQ0FBQStzQyxDQUFBLENBQUEsQ0FBQTdsQyxDQUFBLEVBQUEsS0FBQXd5RCxNQUFBLENBQUEsT0FBQSxDQUFBeHlELENBQUEsRUFBQSxDQUFBLEtBQUF3eUQsTUFBQSxDQUFBLFFBQUEsQ0FBQSxJQUFBLENBQUEzc0IsQ0FBQSxHQUFBLEtBQUEvcEMsT0FBQSxDQUFBcTJELE1BQUEsR0FBQXhpRCxDQUFBLENBQUEsS0FBQTdULE9BQUEsQ0FBQWlJLEtBQUEsQ0FBQTBoQyxDQUFBLENBQUEsS0FBQUssT0FBQSxDQUFBejBCLE9BQUEsQ0FBQSxxQkFBQSxFQUFBM0ssTUFBQSxDQUFBLFVBQUEsQ0FBQSxNQUFBb1ksQ0FBQUEsQ0FBQSxDQUFBLElBQUEsQ0FBQSxDQUFBdzBDLFNBQUEsQ0FBQSxVQUFBLEVBQUF4M0QsT0FBQSxDQUFBaUksS0FBQSxHQUFBNEwsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBODFCLENBQUEsQ0FBQXRyQyxNQUFBLEdBQUE0N0IsQ0FBQSxDQUFBalgsQ0FBQSxDQUFBMm1CLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBNnRCLFNBQUEsQ0FBQSxVQUFBLENBQUEsQ0FBQXY5QixDQUFBLENBQUEwOUIsV0FBQSxDQUFBLFdBQUE1dEIsQ0FBQSxDQUFBLEVBQUE5UCxDQUFBLEVBQUEsV0FBQThQLENBQUEsR0FBQTlQLENBQUEsQ0FBQXk4QixNQUFBLENBQUEsQ0FBQSxDQUFBLENBQUF6OEIsQ0FBQSxDQUFBMDhCLEtBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQTE4QixDQUFBLENBQUFvOUIsSUFBQSxDQUFBOTdELElBQUEsQ0FBQTArQixDQUFBLENBQUFqOUIsQ0FBQSxDQUFBLENBQUEsQ0FBQSxLQUFBK3NDLENBQUEsRUFBQSxDQUFBLENBQUEsQ0FBQSxLQUFBLFVBQUFBLENBQUEsQ0FBQSxRQUFBLENBQUEsT0FBQSxFQUFBLENBQUEsQ0FBQSxDQUFBLEtBQUEsV0FBQUEsQ0FBQSxDQUFBLE9BQUEsQ0FBQSxNQUFBLEVBQUF4dUMsSUFBQSxDQUFBLElBQUEsQ0FBQXlCLENBQUEsQ0FBQSxDQUFBaTlCLENBQUEsRUFBQSxVQUFBOFAsQ0FBQSxHQUFBOVAsQ0FBQSxDQUFBMDhCLEtBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQTE4QixDQUFBLENBQUF5OEIsTUFBQSxDQUFBLENBQUEsQ0FBQSxDQUFBejhCLENBQUEsQ0FBQWs5QixLQUFBLENBQUE1N0QsSUFBQSxDQUFBMCtCLENBQUEsQ0FBQWo5QixDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUF5eEQsUUFBQSxDQUFBLGtCQUFBMW5ELENBQUEsQ0FBQS9KLENBQUEsQ0FBQSxDQUFBK0osQ0FBQSxDQUFBaWpDLE9BQUEsQ0FBQXgwQixZQUFBLENBQUEsTUFBQSxFQUFBb04sR0FBQSxDQUFBLGtCQUFBLEVBQUE3YixDQUFBLENBQUEvRyxPQUFBLENBQUE2ckQsZ0JBQUEsRUFBQTdvQyxDQUFBLENBQUFtbkIsRUFBQSxDQUFBK2lCLFNBQUEsQ0FBQWMsY0FBQSxDQUFBam5ELENBQUEsQ0FBQS9KLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBZ21CLENBQUEsQ0FBQWd3QixZQUFBLEdBQUEsQ0FBQSxDQUFBLEVBQUFod0IsQ0FBQSxDQUFBcW5CLE1BQUEsQ0FBQSxjQUFBLENBQUFybkIsQ0FBQSxDQUFBbW5CLEVBQUEsQ0FBQXF0QixTQUFBLENBQUEsQ0FBQXgzRCxPQUFBLENBQUEsQ0FBQTQzRCxVQUFBLENBQUEsQ0FBQSxDQUFBLENBQUFDLFdBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBYixlQUFBLENBQUEsMEJBQUEsQ0FBQSxLQUFBdHNCLE1BQUEsR0FBQSxLQUFBMXFDLE9BQUEsQ0FBQTYzRCxXQUFBLEVBQUEsS0FBQTd0QixPQUFBLENBQUFwUyxRQUFBLENBQUEsS0FBQTUzQixPQUFBLENBQUE2M0QsV0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBWCxrQkFBQSxDQUFBLDZCQUFBLENBQUEsS0FBQXhzQixNQUFBLEdBQUEsS0FBQTFxQyxPQUFBLENBQUE2M0QsV0FBQSxFQUFBLEtBQUE3dEIsT0FBQSxDQUFBL1IsV0FBQSxDQUFBLEtBQUFqNEIsT0FBQSxDQUFBNjNELFdBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQVQsY0FBQSxDQUFBLHlCQUFBLENBQUEsS0FBQTFzQixNQUFBLEdBQUEsS0FBQTFxQyxPQUFBLENBQUE0M0QsVUFBQSxFQUFBLEtBQUE1dEIsT0FBQSxDQUFBcFMsUUFBQSxDQUFBLEtBQUE1M0IsT0FBQSxDQUFBNDNELFVBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQU4saUJBQUEsQ0FBQSw0QkFBQSxDQUFBLEtBQUE1c0IsTUFBQSxHQUFBLEtBQUExcUMsT0FBQSxDQUFBNDNELFVBQUEsRUFBQSxLQUFBNXRCLE9BQUEsQ0FBQS9SLFdBQUEsQ0FBQSxLQUFBajRCLE9BQUEsQ0FBQTQzRCxVQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBNTBDLENBQUEsQ0FBQW1uQixFQUFBLENBQUFxdEIsU0FBQSxDQUFBeDBDLENBQUEsQ0FBQXFuQixNQUFBLENBQUEsZ0JBQUEsQ0FBQSxDQUFBenNDLE9BQUEsQ0FBQSxRQUFBLENBQUFvQyxPQUFBLENBQUEsQ0FBQTYzQixPQUFBLENBQUEsQ0FBQSxpQkFBQSxlQUFBLENBQUEsdUJBQUEsZ0JBQUEsQ0FBQSwwQkFBQSxpQkFBQSxDQUFBLENBQUF6SSxHQUFBLENBQUEsR0FBQSxDQUFBbnRCLEtBQUEsQ0FBQSxDQUFBLENBQUEyNUMsTUFBQSxDQUFBLElBQUEsQ0FBQS9tQixRQUFBLENBQUEsSUFBQSxDQUFBLENBQUF1YyxHQUFBLENBQUEsQ0FBQSxDQUFBeEYsT0FBQSxDQUFBLGtCQUFBLENBQUEsS0FBQWtzQixRQUFBLENBQUEsS0FBQTkzRCxPQUFBLENBQUFpQyxLQUFBLENBQUEsS0FBQTgxRCxpQkFBQSxFQUFBLENBQUEsS0FBQS90QixPQUFBLENBQUEzOUIsSUFBQSxDQUFBLENBQUE0dEMsSUFBQSxDQUFBLGFBQUEsQ0FBQSxnQkFBQSxLQUFBN0ksR0FBQSxDQUFBLENBQUEsQ0FBQSxLQUFBNUUsU0FBQSxDQUFBLGdCQUFBLENBQUEsNkJBQUEsQ0FBQSxDQUFBLEtBQUF3ckIsUUFBQSxDQUFBaDFDLENBQUEsQ0FBQSxPQUFBLENBQUEsQ0FBQThILFFBQUEsQ0FBQSxLQUFBa2YsT0FBQSxDQUFBLENBQUEsS0FBQXdDLFNBQUEsQ0FBQSxLQUFBd3JCLFFBQUEsQ0FBQSxzQkFBQSxDQUFBLGtCQUFBLENBQUEsQ0FBQSxLQUFBQyxhQUFBLEVBQUEsQ0FBQSxDQUFBLENBQUFsc0IsUUFBQSxDQUFBLG1CQUFBLENBQUEsS0FBQS9CLE9BQUEsQ0FBQW5ULFVBQUEsQ0FBQSxnREFBQSxFQUFBLEtBQUFtaEMsUUFBQSxDQUFBbGhELE1BQUEsRUFBQSxDQUFBLENBQUEsQ0FBQTdVLEtBQUEsQ0FBQSxlQUFBK2dCLENBQUEsQ0FBQSxDQUFBLE1BQUEsS0FBQSxFQUFBLEdBQUFBLENBQUEsQ0FBQSxLQUFBaGpCLE9BQUEsQ0FBQWlDLEtBQUEsRUFBQSxLQUFBakMsT0FBQSxDQUFBaUMsS0FBQSxDQUFBLEtBQUE4MUQsaUJBQUEsQ0FBQS8wQyxDQUFBLENBQUEsQ0FBQSxLQUFBaTFDLGFBQUEsRUFBQSxDQUFBLElBQUEsRUFBQSxDQUFBLENBQUEsQ0FBQSxDQUFBRixpQkFBQSxDQUFBLDJCQUFBLzBDLENBQUEsQ0FBQSxDQUFBLE1BQUEsS0FBQSxFQUFBLEdBQUFBLENBQUEsR0FBQUEsQ0FBQSxDQUFBLEtBQUFoakIsT0FBQSxDQUFBaUMsS0FBQSxFQUFBLEtBQUFpMkQsYUFBQSxDQUFBbDFDLENBQUEsR0FBQSxDQUFBLENBQUEsQ0FBQSxVQUFBLE1BQUFBLENBQUFBLENBQUEsR0FBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLEtBQUFrMUMsYUFBQSxDQUFBLENBQUEsQ0FBQSxDQUFBdDNELElBQUEsQ0FBQXd3QyxHQUFBLENBQUEsS0FBQXB4QyxPQUFBLENBQUFvdkIsR0FBQSxDQUFBeHVCLElBQUEsQ0FBQXd1QixHQUFBLENBQUEsS0FBQWdpQixHQUFBLENBQUFwdUIsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUFpcEIsV0FBQSxDQUFBLHFCQUFBanBCLENBQUEsQ0FBQSxDQUFBLEdBQUFqYyxDQUFBQSxDQUFBLENBQUFpYyxDQUFBLENBQUEvZ0IsS0FBQSxDQUFBLE1BQUErZ0IsQ0FBQUEsQ0FBQSxDQUFBL2dCLEtBQUEsQ0FBQSxLQUFBeW9DLE1BQUEsQ0FBQTFuQixDQUFBLENBQUEsQ0FBQSxLQUFBaGpCLE9BQUEsQ0FBQWlDLEtBQUEsQ0FBQSxLQUFBODFELGlCQUFBLENBQUFoeEQsQ0FBQSxDQUFBLENBQUEsS0FBQWt4RCxhQUFBLEVBQUEsQ0FBQSxDQUFBLENBQUEvckIsVUFBQSxDQUFBLG9CQUFBbHBCLENBQUEsQ0FBQWpjLENBQUEsQ0FBQSxDQUFBLFFBQUFpYyxDQUFBLEdBQUFqYyxDQUFBLENBQUFuRyxJQUFBLENBQUF3dUIsR0FBQSxDQUFBLEtBQUFnaUIsR0FBQSxDQUFBcnFDLENBQUEsQ0FBQSxFQUFBLEtBQUEyakMsTUFBQSxDQUFBMW5CLENBQUEsQ0FBQWpjLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQThrQyxrQkFBQSxDQUFBLDRCQUFBN29CLENBQUEsQ0FBQSxDQUFBLEtBQUEwbkIsTUFBQSxDQUFBMW5CLENBQUEsRUFBQSxLQUFBZ25CLE9BQUEsQ0FBQTM5QixJQUFBLENBQUEsZUFBQSxDQUFBMlcsQ0FBQSxDQUFBLENBQUEsS0FBQXFwQixZQUFBLENBQUEsSUFBQSxDQUFBLG1CQUFBLENBQUEsQ0FBQSxDQUFBcnBCLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQW0xQyxXQUFBLENBQUEsc0JBQUEsQ0FBQSxNQUFBLE1BQUFELGFBQUEsQ0FBQSxHQUFBLENBQUEsS0FBQSxLQUFBbDRELE9BQUEsQ0FBQWlDLEtBQUEsQ0FBQSxLQUFBbXZDLEdBQUEsR0FBQSxLQUFBcHhDLE9BQUEsQ0FBQW92QixHQUFBLENBQUEsS0FBQWdpQixHQUFBLENBQUEsQ0FBQSxDQUFBLENBQUE2bUIsYUFBQSxDQUFBLHdCQUFBLENBQUEsR0FBQWx4RCxDQUFBQSxDQUFBLENBQUEsS0FBQS9HLE9BQUEsQ0FBQWlDLEtBQUEsQ0FBQWpGLENBQUEsQ0FBQSxLQUFBbTdELFdBQUEsRUFBQSxDQUFBLEtBQUFILFFBQUEsQ0FBQXA0QyxNQUFBLENBQUEsS0FBQXM0QyxhQUFBLEVBQUFueEQsQ0FBQSxDQUFBLEtBQUFxcUMsR0FBQSxFQUFBOWtCLEtBQUEsQ0FBQXR2QixDQUFBLENBQUFvN0QsT0FBQSxDQUFBLENBQUEsRUFBQSxHQUFBLEVBQUEsS0FBQS9yQixZQUFBLENBQUEsS0FBQTJyQixRQUFBLENBQUEseUJBQUEsQ0FBQSxJQUFBLENBQUFqeEQsQ0FBQSxHQUFBLEtBQUEvRyxPQUFBLENBQUFvdkIsR0FBQSxFQUFBaWQsWUFBQSxDQUFBLDhCQUFBLENBQUEsSUFBQSxDQUFBLEtBQUE2ckIsYUFBQSxDQUFBLENBQUEsS0FBQUEsYUFBQSxFQUFBLEtBQUFsdUIsT0FBQSxDQUFBblQsVUFBQSxDQUFBLGVBQUEsRUFBQSxLQUFBd2hDLFVBQUEsR0FBQSxLQUFBQSxVQUFBLENBQUFyMUMsQ0FBQSxDQUFBLE9BQUEsQ0FBQSxDQUFBOEgsUUFBQSxDQUFBLEtBQUFrdEMsUUFBQSxDQUFBLENBQUEsS0FBQXhyQixTQUFBLENBQUEsS0FBQTZyQixVQUFBLENBQUEsd0JBQUEsQ0FBQSxDQUFBLEdBQUEsS0FBQXJ1QixPQUFBLENBQUEzOUIsSUFBQSxDQUFBLENBQUEsZ0JBQUEsS0FBQXJNLE9BQUEsQ0FBQW92QixHQUFBLENBQUEsZ0JBQUFyb0IsQ0FBQSxDQUFBLEVBQUEsS0FBQXN4RCxVQUFBLEdBQUEsS0FBQUEsVUFBQSxDQUFBdmhELE1BQUEsR0FBQSxLQUFBdWhELFVBQUEsQ0FBQSxJQUFBLENBQUEsQ0FBQSxDQUFBLEtBQUFQLFFBQUEsR0FBQS93RCxDQUFBLEdBQUEsS0FBQSt3RCxRQUFBLENBQUEvd0QsQ0FBQSxDQUFBLEtBQUFtakMsUUFBQSxDQUFBLFFBQUEsQ0FBQSxDQUFBLENBQUFuakMsQ0FBQSxHQUFBLEtBQUEvRyxPQUFBLENBQUFvdkIsR0FBQSxFQUFBLEtBQUE4YSxRQUFBLENBQUEsVUFBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQWxuQixDQUFBLENBQUFxbkIsTUFBQSxDQUFBLGVBQUEsQ0FBQXJuQixDQUFBLENBQUFtbkIsRUFBQSxDQUFBaWhCLEtBQUEsQ0FBQSxDQUFBeHRELE9BQUEsQ0FBQSxRQUFBLENBQUFvQyxPQUFBLENBQUEsQ0FBQThxQixRQUFBLENBQUEsTUFBQSxDQUFBd3RDLFdBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQS9pQixRQUFBLENBQUEsQ0FBQSxDQUFBM3FDLE1BQUEsQ0FBQSxHQUFBLENBQUEwckQsU0FBQSxDQUFBLE9BQUEsQ0FBQTdtRCxRQUFBLENBQUEsSUFBQSxDQUFBOG9ELFNBQUEsQ0FBQSxJQUFBLENBQUFucUQsS0FBQSxDQUFBLElBQUEsQ0FBQXNQLElBQUEsQ0FBQSxJQUFBLENBQUE4NkMsVUFBQSxDQUFBLElBQUEsQ0FBQUMsV0FBQSxDQUFBLElBQUEsQ0FBQSxDQUFBN3NCLE9BQUEsQ0FBQSxrQkFBQSxDQUFBLEdBQUE3a0MsQ0FBQUEsQ0FBQSxDQUFBLElBQUEsQ0FBQSxLQUFBeWxDLFNBQUEsQ0FBQSxlQUFBLEVBQUEsS0FBQWtzQixPQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsS0FBQXZpQixPQUFBLENBQUEsVUFBQSxDQUFBcHZDLENBQUEsQ0FBQTR4RCxVQUFBLENBQUEzMUMsQ0FBQSxDQUFBamMsQ0FBQSxDQUFBaWpDLE9BQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBbkgsTUFBQSxFQUFBLENBQUE5N0IsQ0FBQSxDQUFBNnhELFNBQUEsQ0FBQTUxQyxDQUFBLENBQUFqYyxDQUFBLENBQUEvRyxPQUFBLENBQUE0SyxNQUFBLENBQUE3RCxDQUFBLENBQUFpakMsT0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUFqakMsQ0FBQSxDQUFBeWxDLFNBQUEsQ0FBQXpsQyxDQUFBLENBQUE2eEQsU0FBQSxDQUFBLGFBQUEsQ0FBQSxDQUFBN3hELENBQUEsQ0FBQTZ4RCxTQUFBLENBQUE5NUQsSUFBQSxDQUFBLFVBQUEsQ0FBQSxHQUFBOUIsQ0FBQUEsQ0FBQSxDQUFBZ21CLENBQUEsQ0FBQSxJQUFBLENBQUEsQ0FBQWlYLENBQUEsQ0FBQWo5QixDQUFBLENBQUE2bEMsTUFBQSxFQUFBLENBQUFodkIsQ0FBQSxDQUFBLENBQUE4YyxJQUFBLENBQUFzSixDQUFBLENBQUF0SixJQUFBLENBQUE1cEIsQ0FBQSxDQUFBNHhELFVBQUEsQ0FBQWhvQyxJQUFBLENBQUF0bUIsR0FBQSxDQUFBNHZCLENBQUEsQ0FBQTV2QixHQUFBLENBQUF0RCxDQUFBLENBQUE0eEQsVUFBQSxDQUFBdHVELEdBQUEsQ0FBQSxDQUFBMlksQ0FBQSxDQUFBeEcsSUFBQSxDQUFBLElBQUEsQ0FBQSxpQkFBQSxDQUFBLENBQUF3dEIsT0FBQSxDQUFBLElBQUEsQ0FBQTZ1QixRQUFBLENBQUE3N0QsQ0FBQSxDQUFBMnpCLElBQUEsQ0FBQTljLENBQUEsQ0FBQThjLElBQUEsQ0FBQXRtQixHQUFBLENBQUF3SixDQUFBLENBQUF4SixHQUFBLENBQUE4aEIsS0FBQSxDQUFBdFksQ0FBQSxDQUFBOGMsSUFBQSxDQUFBM3pCLENBQUEsQ0FBQWt3QyxVQUFBLEVBQUEsQ0FBQTZGLE1BQUEsQ0FBQWwvQixDQUFBLENBQUF4SixHQUFBLENBQUFyTixDQUFBLENBQUFtd0MsV0FBQSxFQUFBLENBQUEyckIsYUFBQSxDQUFBLENBQUEsQ0FBQSxDQUFBcnBELFFBQUEsQ0FBQXpTLENBQUEsQ0FBQXM3QixRQUFBLENBQUEsYUFBQSxDQUFBLENBQUFpZ0MsU0FBQSxDQUFBdjdELENBQUEsQ0FBQXM3QixRQUFBLENBQUEsY0FBQSxDQUFBLENBQUFtZ0MsV0FBQSxDQUFBejdELENBQUEsQ0FBQXM3QixRQUFBLENBQUEsZ0JBQUEsQ0FBQSxDQUFBLEVBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLEtBQUE2ZCxPQUFBLEVBQUEsQ0FBQSxLQUFBeVQsVUFBQSxFQUFBLENBQUEsS0FBQStCLE1BQUEsQ0FBQTNvQyxDQUFBLENBQUEsT0FBQSxDQUFBLENBQUEsS0FBQXdwQixTQUFBLENBQUEsS0FBQW1mLE1BQUEsQ0FBQSxzQkFBQSxDQUFBLENBQUEsQ0FBQSxDQUFBNWYsUUFBQSxDQUFBLG1CQUFBLENBQUEsS0FBQTZzQixTQUFBLENBQUF6N0MsVUFBQSxDQUFBLGlCQUFBLEVBQUEsS0FBQTRzQyxhQUFBLEVBQUEsQ0FBQSxDQUFBLENBQUFZLFdBQUEsQ0FBQSxxQkFBQTVqRCxDQUFBLENBQUEsQ0FBQSxHQUFBL0osQ0FBQUEsQ0FBQSxDQUFBLElBQUEsQ0FBQWk5QixDQUFBLENBQUEsS0FBQWo2QixPQUFBLENBQUEsS0FBQSs0RCxJQUFBLENBQUEsQ0FBQWh5RCxDQUFBLENBQUFrZ0IsS0FBQSxDQUFBbGdCLENBQUEsQ0FBQW1nQixLQUFBLENBQUEsQ0FBQSxLQUFBeXhDLFVBQUEsQ0FBQTMxQyxDQUFBLENBQUEsS0FBQWduQixPQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQW5ILE1BQUEsRUFBQSxDQUFBLEtBQUE3aUMsT0FBQSxDQUFBMEcsUUFBQSxHQUFBLEtBQUFreUQsU0FBQSxDQUFBNTFDLENBQUEsQ0FBQWlYLENBQUEsQ0FBQXJ2QixNQUFBLENBQUEsS0FBQW8vQixPQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxLQUFBRSxRQUFBLENBQUEsT0FBQSxDQUFBbmpDLENBQUEsQ0FBQSxDQUFBaWMsQ0FBQSxDQUFBaVgsQ0FBQSxDQUFBblAsUUFBQSxDQUFBLENBQUFQLE1BQUEsQ0FBQSxLQUFBb2hDLE1BQUEsQ0FBQSxDQUFBLEtBQUFBLE1BQUEsQ0FBQWx0QyxHQUFBLENBQUEsQ0FBQWtTLElBQUEsQ0FBQTVwQixDQUFBLENBQUFrZ0IsS0FBQSxDQUFBNWMsR0FBQSxDQUFBdEQsQ0FBQSxDQUFBbWdCLEtBQUEsQ0FBQW9GLEtBQUEsQ0FBQSxDQUFBLENBQUFtQixNQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQXdNLENBQUEsQ0FBQXErQixXQUFBLEVBQUEsS0FBQW5pQixPQUFBLEVBQUEsQ0FBQSxLQUFBeWlCLFNBQUEsQ0FBQWh1RCxNQUFBLENBQUEsY0FBQSxFQUFBOUwsSUFBQSxDQUFBLFVBQUEsQ0FBQSxHQUFBbTdCLENBQUFBLENBQUEsQ0FBQWpYLENBQUEsQ0FBQXhHLElBQUEsQ0FBQSxJQUFBLENBQUEsaUJBQUEsQ0FBQSxDQUFBeWQsQ0FBQSxDQUFBNitCLGFBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQS94RCxDQUFBLENBQUFpZ0IsT0FBQSxFQUFBamdCLENBQUEsQ0FBQThmLE9BQUEsR0FBQTdwQixDQUFBLENBQUFndkMsWUFBQSxDQUFBL1IsQ0FBQSxDQUFBNCtCLFFBQUEsQ0FBQSxhQUFBLEVBQUE1K0IsQ0FBQSxDQUFBeHFCLFFBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQXpTLENBQUEsQ0FBQXd2QyxTQUFBLENBQUF2UyxDQUFBLENBQUE0K0IsUUFBQSxDQUFBLGdCQUFBLENBQUEsQ0FBQTUrQixDQUFBLENBQUF3K0IsV0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBejdELENBQUEsQ0FBQWt0QyxRQUFBLENBQUEsYUFBQSxDQUFBbmpDLENBQUEsQ0FBQSxDQUFBMHhELFdBQUEsQ0FBQXgrQixDQUFBLENBQUErUCxPQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUFobkIsQ0FBQSxDQUFBamMsQ0FBQSxDQUFBMUcsTUFBQSxDQUFBLENBQUFrVixPQUFBLEdBQUFGLE9BQUEsR0FBQXZXLElBQUEsQ0FBQSxVQUFBLENBQUEsR0FBQW03QixDQUFBQSxDQUFBLENBQUFwbUIsQ0FBQSxDQUFBbVAsQ0FBQSxDQUFBeEcsSUFBQSxDQUFBLElBQUEsQ0FBQSxpQkFBQSxDQUFBLENBQUEsTUFBQTNJLENBQUFBLENBQUEsRUFBQW9tQixDQUFBLENBQUEsQ0FBQWx6QixDQUFBLENBQUFpZ0IsT0FBQSxFQUFBLENBQUFqZ0IsQ0FBQSxDQUFBOGYsT0FBQSxFQUFBLENBQUFoVCxDQUFBLENBQUFnbEQsUUFBQSxDQUFBdmdDLFFBQUEsQ0FBQSxhQUFBLENBQUEsQ0FBQXQ3QixDQUFBLENBQUFndkMsWUFBQSxDQUFBbjRCLENBQUEsQ0FBQWdsRCxRQUFBLENBQUE1K0IsQ0FBQSxDQUFBLGdCQUFBLENBQUEsYUFBQSxFQUFBdVMsU0FBQSxDQUFBMzRCLENBQUEsQ0FBQWdsRCxRQUFBLENBQUE1K0IsQ0FBQSxDQUFBLGNBQUEsQ0FBQSxnQkFBQSxDQUFBLENBQUFwbUIsQ0FBQSxDQUFBNGtELFdBQUEsQ0FBQSxDQUFBeCtCLENBQUEsQ0FBQXBtQixDQUFBLENBQUEwa0QsU0FBQSxDQUFBdCtCLENBQUEsQ0FBQXBtQixDQUFBLENBQUFwRSxRQUFBLENBQUF3cUIsQ0FBQSxDQUFBQSxDQUFBLENBQUFqOUIsQ0FBQSxDQUFBa3RDLFFBQUEsQ0FBQSxXQUFBLENBQUFuakMsQ0FBQSxDQUFBLENBQUF3eEQsU0FBQSxDQUFBMWtELENBQUEsQ0FBQW0yQixPQUFBLENBQUEsQ0FBQSxDQUFBaHRDLENBQUEsQ0FBQWt0QyxRQUFBLENBQUEsYUFBQSxDQUFBbmpDLENBQUEsQ0FBQSxDQUFBMHhELFdBQUEsQ0FBQTVrRCxDQUFBLENBQUFtMkIsT0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsRUFBQSxJQUFBLEVBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQStnQixVQUFBLENBQUEsb0JBQUFoa0QsQ0FBQSxDQUFBLENBQUEsR0FBQSxLQUFBMnhELE9BQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLEtBQUExNEQsT0FBQSxDQUFBMEcsUUFBQSxDQUFBLENBQUEsR0FBQTFKLENBQUFBLENBQUEsQ0FBQWk5QixDQUFBLENBQUEsSUFBQSxDQUFBcG1CLENBQUEsQ0FBQSxLQUFBN1QsT0FBQSxDQUFBMnBDLENBQUEsQ0FBQSxLQUFBb3ZCLElBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQTcwRCxDQUFBLENBQUEsS0FBQTYwRCxJQUFBLENBQUEsQ0FBQSxDQUFBLENBQUFodkIsQ0FBQSxDQUFBaGpDLENBQUEsQ0FBQWtnQixLQUFBLENBQUFtakIsQ0FBQSxDQUFBcmpDLENBQUEsQ0FBQW1nQixLQUFBLENBQUEsTUFBQXlpQixDQUFBQSxDQUFBLENBQUFJLENBQUEsR0FBQS9zQyxDQUFBLENBQUErc0MsQ0FBQSxDQUFBQSxDQUFBLENBQUFKLENBQUEsQ0FBQUEsQ0FBQSxDQUFBM3NDLENBQUEsRUFBQWtILENBQUEsQ0FBQWttQyxDQUFBLEdBQUFwdEMsQ0FBQSxDQUFBb3RDLENBQUEsQ0FBQUEsQ0FBQSxDQUFBbG1DLENBQUEsQ0FBQUEsQ0FBQSxDQUFBbEgsQ0FBQSxDQUFBLENBQUEsS0FBQTJ1RCxNQUFBLENBQUFsdEMsR0FBQSxDQUFBLENBQUFrUyxJQUFBLENBQUFnWixDQUFBLENBQUF0L0IsR0FBQSxDQUFBbkcsQ0FBQSxDQUFBb29CLEtBQUEsQ0FBQXlkLENBQUEsQ0FBQUosQ0FBQSxDQUFBbGMsTUFBQSxDQUFBMmMsQ0FBQSxDQUFBbG1DLENBQUEsQ0FBQSxDQUFBLENBQUEsS0FBQTAwRCxTQUFBLENBQUE5NUQsSUFBQSxDQUFBLFVBQUEsQ0FBQSxHQUFBOUIsQ0FBQUEsQ0FBQSxDQUFBZ21CLENBQUEsQ0FBQXhHLElBQUEsQ0FBQSxJQUFBLENBQUEsaUJBQUEsQ0FBQSxDQUFBeEgsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBeTNCLENBQUEsQ0FBQSxFQUFBLENBQUF6dkMsQ0FBQSxFQUFBQSxDQUFBLENBQUFndEMsT0FBQSxHQUFBL1AsQ0FBQSxDQUFBK1AsT0FBQSxDQUFBLENBQUEsQ0FBQSxHQUFBeUMsQ0FBQSxDQUFBOWIsSUFBQSxDQUFBM3pCLENBQUEsQ0FBQTJ6QixJQUFBLENBQUFzSixDQUFBLENBQUEwK0IsVUFBQSxDQUFBaG9DLElBQUEsQ0FBQThiLENBQUEsQ0FBQXRnQixLQUFBLENBQUFudkIsQ0FBQSxDQUFBbXZCLEtBQUEsQ0FBQThOLENBQUEsQ0FBQTArQixVQUFBLENBQUFob0MsSUFBQSxDQUFBOGIsQ0FBQSxDQUFBcGlDLEdBQUEsQ0FBQXJOLENBQUEsQ0FBQXFOLEdBQUEsQ0FBQTR2QixDQUFBLENBQUEwK0IsVUFBQSxDQUFBdHVELEdBQUEsQ0FBQW9pQyxDQUFBLENBQUFzRyxNQUFBLENBQUEvMUMsQ0FBQSxDQUFBKzFDLE1BQUEsQ0FBQTlZLENBQUEsQ0FBQTArQixVQUFBLENBQUF0dUQsR0FBQSxDQUFBLFVBQUF3SixDQUFBLENBQUF5aUQsU0FBQSxDQUFBdGhELENBQUEsQ0FBQSxFQUFBeTNCLENBQUEsQ0FBQTliLElBQUEsQ0FBQW9aLENBQUEsRUFBQUosQ0FBQSxDQUFBOEMsQ0FBQSxDQUFBdGdCLEtBQUEsRUFBQXNnQixDQUFBLENBQUFwaUMsR0FBQSxDQUFBKy9CLENBQUEsRUFBQWxtQyxDQUFBLENBQUF1b0MsQ0FBQSxDQUFBc0csTUFBQSxDQUFBLENBQUEsUUFBQWwvQixDQUFBLENBQUF5aUQsU0FBQSxHQUFBdGhELENBQUEsQ0FBQXkzQixDQUFBLENBQUE5YixJQUFBLENBQUFnWixDQUFBLEVBQUFJLENBQUEsQ0FBQTBDLENBQUEsQ0FBQXRnQixLQUFBLEVBQUFzZ0IsQ0FBQSxDQUFBcGlDLEdBQUEsQ0FBQW5HLENBQUEsRUFBQWttQyxDQUFBLENBQUFxQyxDQUFBLENBQUFzRyxNQUFBLENBQUEsQ0FBQS85QixDQUFBLEVBQUFoWSxDQUFBLENBQUF5UyxRQUFBLEdBQUF3cUIsQ0FBQSxDQUFBK1IsWUFBQSxDQUFBaHZDLENBQUEsQ0FBQTY3RCxRQUFBLENBQUEsYUFBQSxFQUFBNzdELENBQUEsQ0FBQXlTLFFBQUEsQ0FBQSxDQUFBLENBQUEsRUFBQXpTLENBQUEsQ0FBQXk3RCxXQUFBLEdBQUF4K0IsQ0FBQSxDQUFBK1IsWUFBQSxDQUFBaHZDLENBQUEsQ0FBQTY3RCxRQUFBLENBQUEsZ0JBQUEsRUFBQTc3RCxDQUFBLENBQUF5N0QsV0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUF6N0QsQ0FBQSxDQUFBdTdELFNBQUEsR0FBQXQrQixDQUFBLENBQUF1UyxTQUFBLENBQUF4dkMsQ0FBQSxDQUFBNjdELFFBQUEsQ0FBQSxjQUFBLEVBQUE3N0QsQ0FBQSxDQUFBdTdELFNBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQXQrQixDQUFBLENBQUFpUSxRQUFBLENBQUEsV0FBQSxDQUFBbmpDLENBQUEsQ0FBQSxDQUFBd3hELFNBQUEsQ0FBQXY3RCxDQUFBLENBQUFndEMsT0FBQSxDQUFBLENBQUEsQ0FBQSxHQUFBaHRDLENBQUEsQ0FBQXU3RCxTQUFBLEdBQUEsQ0FBQXh4RCxDQUFBLENBQUFpZ0IsT0FBQSxFQUFBamdCLENBQUEsQ0FBQThmLE9BQUEsR0FBQTdwQixDQUFBLENBQUE4N0QsYUFBQSxFQUFBNytCLENBQUEsQ0FBQStSLFlBQUEsQ0FBQWh2QyxDQUFBLENBQUE2N0QsUUFBQSxDQUFBLGNBQUEsRUFBQTc3RCxDQUFBLENBQUF1N0QsU0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBdCtCLENBQUEsQ0FBQXVTLFNBQUEsQ0FBQXh2QyxDQUFBLENBQUE2N0QsUUFBQSxDQUFBLGFBQUEsQ0FBQSxDQUFBNzdELENBQUEsQ0FBQXlTLFFBQUEsQ0FBQSxDQUFBLENBQUEsR0FBQXdxQixDQUFBLENBQUErUixZQUFBLENBQUFodkMsQ0FBQSxDQUFBNjdELFFBQUEsQ0FBQSxjQUFBLEVBQUE3N0QsQ0FBQSxDQUFBdTdELFNBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQXY3RCxDQUFBLENBQUE4N0QsYUFBQSxHQUFBNytCLENBQUEsQ0FBQXVTLFNBQUEsQ0FBQXh2QyxDQUFBLENBQUE2N0QsUUFBQSxDQUFBLGdCQUFBLEVBQUE3N0QsQ0FBQSxDQUFBeTdELFdBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBeCtCLENBQUEsQ0FBQWlRLFFBQUEsQ0FBQSxhQUFBLENBQUFuakMsQ0FBQSxDQUFBLENBQUEweEQsV0FBQSxDQUFBejdELENBQUEsQ0FBQWd0QyxPQUFBLENBQUEsQ0FBQSxDQUFBLEVBQUFodEMsQ0FBQSxDQUFBeVMsUUFBQSxHQUFBMUksQ0FBQSxDQUFBaWdCLE9BQUEsRUFBQWpnQixDQUFBLENBQUE4ZixPQUFBLEVBQUE3cEIsQ0FBQSxDQUFBODdELGFBQUEsR0FBQTcrQixDQUFBLENBQUErUixZQUFBLENBQUFodkMsQ0FBQSxDQUFBNjdELFFBQUEsQ0FBQSxhQUFBLEVBQUE3N0QsQ0FBQSxDQUFBeVMsUUFBQSxDQUFBLENBQUEsQ0FBQSxDQUFBd3FCLENBQUEsQ0FBQXVTLFNBQUEsQ0FBQXh2QyxDQUFBLENBQUE2N0QsUUFBQSxDQUFBLGdCQUFBLENBQUEsQ0FBQTc3RCxDQUFBLENBQUF5N0QsV0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBeCtCLENBQUEsQ0FBQWlRLFFBQUEsQ0FBQSxhQUFBLENBQUFuakMsQ0FBQSxDQUFBLENBQUEweEQsV0FBQSxDQUFBejdELENBQUEsQ0FBQWd0QyxPQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxFQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBZ2hCLFVBQUEsQ0FBQSxvQkFBQWprRCxDQUFBLENBQUEsQ0FBQSxHQUFBL0osQ0FBQUEsQ0FBQSxDQUFBLElBQUEsQ0FBQSxNQUFBLE1BQUEwN0QsT0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBMTFDLENBQUEsQ0FBQSxpQkFBQSxDQUFBLEtBQUFnbkIsT0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUFsckMsSUFBQSxDQUFBLFVBQUEsQ0FBQSxHQUFBbTdCLENBQUFBLENBQUEsQ0FBQWpYLENBQUEsQ0FBQXhHLElBQUEsQ0FBQSxJQUFBLENBQUEsaUJBQUEsQ0FBQSxDQUFBeGYsQ0FBQSxDQUFBZ3ZDLFlBQUEsQ0FBQS9SLENBQUEsQ0FBQTQrQixRQUFBLENBQUEsZ0JBQUEsRUFBQTUrQixDQUFBLENBQUF3K0IsV0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBeCtCLENBQUEsQ0FBQTYrQixhQUFBLENBQUEsQ0FBQSxDQUFBLENBQUE5N0QsQ0FBQSxDQUFBa3RDLFFBQUEsQ0FBQSxZQUFBLENBQUFuakMsQ0FBQSxDQUFBLENBQUF5eEQsVUFBQSxDQUFBditCLENBQUEsQ0FBQStQLE9BQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUFobkIsQ0FBQSxDQUFBLGVBQUEsQ0FBQSxLQUFBZ25CLE9BQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBbHJDLElBQUEsQ0FBQSxVQUFBLENBQUEsR0FBQW03QixDQUFBQSxDQUFBLENBQUFqWCxDQUFBLENBQUF4RyxJQUFBLENBQUEsSUFBQSxDQUFBLGlCQUFBLENBQUEsQ0FBQXhmLENBQUEsQ0FBQWd2QyxZQUFBLENBQUEvUixDQUFBLENBQUE0K0IsUUFBQSxDQUFBLGNBQUEsRUFBQXJzQixTQUFBLENBQUF2UyxDQUFBLENBQUE0K0IsUUFBQSxDQUFBLGFBQUEsRUFBQTUrQixDQUFBLENBQUFzK0IsU0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBdCtCLENBQUEsQ0FBQXhxQixRQUFBLENBQUEsQ0FBQSxDQUFBLENBQUF3cUIsQ0FBQSxDQUFBNitCLGFBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQTk3RCxDQUFBLENBQUFrdEMsUUFBQSxDQUFBLFVBQUEsQ0FBQW5qQyxDQUFBLENBQUEsQ0FBQTBJLFFBQUEsQ0FBQXdxQixDQUFBLENBQUErUCxPQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLEtBQUFFLFFBQUEsQ0FBQSxNQUFBLENBQUFuakMsQ0FBQSxDQUFBLENBQUEsS0FBQTRrRCxNQUFBLENBQUE3MEMsTUFBQSxFQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQWtNLENBQUEsQ0FBQXFuQixNQUFBLENBQUEsZUFBQSxDQUFBLENBQUFybkIsQ0FBQSxDQUFBbW5CLEVBQUEsQ0FBQThMLGNBQUEsQ0FBQSxDQUFBcjRDLE9BQUEsQ0FBQSxRQUFBLENBQUFzdEMsY0FBQSxDQUFBLFVBQUEsQ0FBQWxyQyxPQUFBLENBQUEsQ0FBQThxQixRQUFBLENBQUEsSUFBQSxDQUFBK00sT0FBQSxDQUFBLENBQUEsNEJBQUEsZUFBQSxDQUFBLDhCQUFBLGVBQUEsQ0FBQSxDQUFBbnhCLFFBQUEsQ0FBQSxJQUFBLENBQUFxeEMsS0FBQSxDQUFBLENBQUEveUIsTUFBQSxDQUFBLHNCQUFBLENBQUEsQ0FBQXVILFFBQUEsQ0FBQSxDQUFBa2lCLEVBQUEsQ0FBQSxVQUFBLENBQUFMLEVBQUEsQ0FBQSxhQUFBLENBQUFGLFNBQUEsQ0FBQSxNQUFBLENBQUEsQ0FBQTVoQixLQUFBLENBQUEsQ0FBQSxDQUFBLENBQUFzdkIsTUFBQSxDQUFBLElBQUEsQ0FBQUMsS0FBQSxDQUFBLElBQUEsQ0FBQXp6QixLQUFBLENBQUEsSUFBQSxDQUFBMlksSUFBQSxDQUFBLElBQUEsQ0FBQWorQixNQUFBLENBQUEsSUFBQSxDQUFBLENBQUE4b0MsT0FBQSxDQUFBLGtCQUFBLENBQUEsR0FBQTdrQyxDQUFBQSxDQUFBLENBQUEsS0FBQWlqQyxPQUFBLENBQUEwTixRQUFBLEdBQUFyckMsSUFBQSxDQUFBLElBQUEsQ0FBQSxDQUFBLEtBQUEyc0QsR0FBQSxDQUFBLENBQUFodkIsT0FBQSxDQUFBampDLENBQUEsQ0FBQWllLE1BQUEsQ0FBQWplLENBQUEsQ0FBQSxTQUFBLENBQUFpMEMsSUFBQSxDQUFBajBDLENBQUEsQ0FBQSxPQUFBLENBQUEsQ0FBQSxLQUFBa3lELFdBQUEsRUFBQSxDQUFBLEtBQUFDLFNBQUEsRUFBQSxDQUFBLEtBQUE5aUIscUJBQUEsRUFBQSxDQUFBLEtBQUEraUIsU0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLEtBQUFDLFNBQUEsQ0FBQXAyQyxDQUFBLEVBQUEsQ0FBQSxDQUFBLENBQUFpMkMsV0FBQSxDQUFBLHNCQUFBLENBQUEsR0FBQWx5RCxDQUFBQSxDQUFBLENBQUEvSixDQUFBLENBQUEsSUFBQSxDQUFBaTlCLENBQUEsQ0FBQSxLQUFBby9CLFlBQUEsQ0FBQSxLQUFBcnZCLE9BQUEsQ0FBQWwvQixJQUFBLENBQUEsaUJBQUEsQ0FBQSxDQUFBLEtBQUFrL0IsT0FBQSxDQUFBLENBQUEsRUFBQXQ2QixhQUFBLENBQUEsQ0FBQSxLQUFBNm5DLE1BQUEsQ0FBQSxLQUFBdk4sT0FBQSxDQUFBdU4sTUFBQSxHQUFBbHJDLElBQUEsQ0FBQSxLQUFBLENBQUEsS0FBQTJzRCxHQUFBLENBQUFoMEMsTUFBQSxDQUFBLENBQUEsS0FBQXltQixHQUFBLENBQUEsS0FBQThMLE1BQUEsQ0FBQSxDQUFBOXhCLEtBQUEsQ0FBQSxlQUFBekMsQ0FBQSxDQUFBLENBQUEsS0FBQWdDLE1BQUEsQ0FBQW9ELEtBQUEsR0FBQXBGLENBQUEsQ0FBQTJCLGNBQUEsRUFBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsS0FBQXFsQixPQUFBLENBQUFycUIsSUFBQSxFQUFBLENBQUEsS0FBQXFGLE1BQUEsQ0FBQWhDLENBQUEsQ0FBQSxRQUFBLENBQUEsQ0FBQXdVLFFBQUEsQ0FBQSxLQUFBeDNCLE9BQUEsQ0FBQTBHLFFBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUFpQixFQUFBLENBQUEsS0FBQXF4RCxHQUFBLENBQUFoMEMsTUFBQSxDQUFBaTFCLElBQUEsQ0FBQSxVQUFBLENBQUEsZ0JBQUEsT0FBQSxDQUFBLG9CQUFBLE1BQUEsQ0FBQSxZQUFBLEtBQUErZSxHQUFBLENBQUFoZSxJQUFBLENBQUEsZ0JBQUEsTUFBQSxDQUFBcUYsS0FBQSxDQUFBLEtBQUFyVyxPQUFBLENBQUEzOUIsSUFBQSxDQUFBLE9BQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQTJlLFdBQUEsQ0FBQSxLQUFBZ2YsT0FBQSxDQUFBLENBQUEsS0FBQXdDLFNBQUEsQ0FBQSxLQUFBeG5CLE1BQUEsQ0FBQSxrREFBQSxDQUFBLHFCQUFBLENBQUEsQ0FBQWplLENBQUEsQ0FBQWljLENBQUEsQ0FBQSxRQUFBLENBQUEsQ0FBQThILFFBQUEsQ0FBQSxLQUFBOUYsTUFBQSxDQUFBLENBQUEsS0FBQXduQixTQUFBLENBQUF6bEMsQ0FBQSxDQUFBLG9CQUFBLENBQUEsV0FBQSxLQUFBL0csT0FBQSxDQUFBKzNDLEtBQUEsQ0FBQS95QixNQUFBLENBQUEsQ0FBQSxLQUFBczBDLFVBQUEsQ0FBQSxLQUFBQyxpQkFBQSxDQUFBdC9CLENBQUEsRUFBQW5QLFFBQUEsQ0FBQSxLQUFBOUYsTUFBQSxDQUFBLENBQUEsS0FBQWhsQixPQUFBLENBQUFzc0IsS0FBQSxHQUFBLENBQUEsQ0FBQSxFQUFBLEtBQUFrdEMsYUFBQSxFQUFBLENBQUEsS0FBQS90QixHQUFBLENBQUEsS0FBQXptQixNQUFBLENBQUEsS0FBQXkwQyxhQUFBLENBQUEsQ0FBQSxLQUFBejBDLE1BQUEsQ0FBQXZDLEdBQUEsQ0FBQSxTQUFBLENBQUEsVUFBQSxDQUFBemxCLENBQUEsQ0FBQW04RCxTQUFBLEVBQUFuOEQsQ0FBQSxDQUFBMDhELFlBQUEsRUFBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQVIsU0FBQSxDQUFBLG9CQUFBLENBQUEsR0FBQW55RCxDQUFBQSxDQUFBLENBQUEsSUFBQSxDQUFBLEtBQUFpMEMsSUFBQSxDQUFBaDRCLENBQUEsQ0FBQSxNQUFBLENBQUEsQ0FBQSxjQUFBLE1BQUEsQ0FBQSxrQkFBQSxLQUFBZzJDLEdBQUEsQ0FBQWgwQyxNQUFBLENBQUFyZCxFQUFBLENBQUEsS0FBQXF4RCxHQUFBLENBQUFoZSxJQUFBLENBQUEsQ0FBQSxDQUFBLEtBQUEyZSxRQUFBLENBQUEzMkMsQ0FBQSxDQUFBLE9BQUEsQ0FBQSxDQUFBdUgsTUFBQSxDQUFBLEtBQUF5d0IsSUFBQSxDQUFBLENBQUEsS0FBQXhPLFNBQUEsQ0FBQSxLQUFBbXRCLFFBQUEsQ0FBQSxvQkFBQSxDQUFBLFVBQUEsQ0FBQSxDQUFBLEtBQUFBLFFBQUEsQ0FBQTd1QyxRQUFBLENBQUEsS0FBQWd5QixTQUFBLEVBQUEsQ0FBQSxDQUFBLEtBQUE4YyxZQUFBLENBQUEsS0FBQTVlLElBQUEsQ0FBQUEsSUFBQSxDQUFBLENBQUFuakIsT0FBQSxDQUFBLENBQUEsVUFBQSxrQkFBQSxDQUFBLENBQUFvaUIsSUFBQSxDQUFBLFNBQUEsQ0FBQW4zQyxNQUFBLENBQUEsZ0JBQUFrZ0IsQ0FBQSxDQUFBaG1CLENBQUEsQ0FBQSxDQUFBZ21CLENBQUEsQ0FBQTJCLGNBQUEsR0FBQTVkLENBQUEsQ0FBQTh5RCxhQUFBLEVBQUEsQ0FBQTl5RCxDQUFBLENBQUEreUQsT0FBQSxDQUFBOThELENBQUEsQ0FBQXErQyxJQUFBLENBQUE3K0IsSUFBQSxDQUFBLG9CQUFBLENBQUEsQ0FBQXdHLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQW9GLEtBQUEsQ0FBQSxlQUFBcEYsQ0FBQSxDQUFBaG1CLENBQUEsQ0FBQSxDQUFBLEdBQUFpOUIsQ0FBQUEsQ0FBQSxDQUFBajlCLENBQUEsQ0FBQXErQyxJQUFBLENBQUE3K0IsSUFBQSxDQUFBLG9CQUFBLENBQUEsQ0FBQSxNQUFBelYsQ0FBQSxDQUFBZ3pELFVBQUEsRUFBQTkvQixDQUFBLENBQUEva0IsS0FBQSxHQUFBbk8sQ0FBQSxDQUFBZ3pELFVBQUEsR0FBQWh6RCxDQUFBLENBQUFtakMsUUFBQSxDQUFBLE9BQUEsQ0FBQWxuQixDQUFBLENBQUEsQ0FBQXE0QixJQUFBLENBQUFwaEIsQ0FBQSxDQUFBLEVBQUFsekIsQ0FBQSxDQUFBK3RELE1BQUEsRUFBQS90RCxDQUFBLENBQUEreUQsT0FBQSxDQUFBNy9CLENBQUEsQ0FBQWpYLENBQUEsQ0FBQSxFQUFBamMsQ0FBQSxDQUFBZ3pELFVBQUEsQ0FBQTkvQixDQUFBLENBQUEva0IsS0FBQSxDQUFBbk8sQ0FBQSxDQUFBaWUsTUFBQSxDQUFBM1ksSUFBQSxDQUFBLHVCQUFBLENBQUF0RixDQUFBLENBQUFxeUQsU0FBQSxDQUFBaDZELEVBQUEsQ0FBQTY2QixDQUFBLENBQUEva0IsS0FBQSxFQUFBN0ksSUFBQSxDQUFBLElBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLEVBQUEydUMsSUFBQSxDQUFBLFVBQUEsQ0FBQSxDQUFBLEtBQUE0ZSxZQUFBLENBQUFsdEIsSUFBQSxDQUFBLEtBQUFzTyxJQUFBLENBQUEsWUFBQSxDQUFBLENBQUEsS0FBQTRlLFlBQUEsQ0FBQXRmLHFCQUFBLENBQUEsVUFBQSxDQUFBLE1BQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLEtBQUFzZixZQUFBLENBQUE5ZSxVQUFBLENBQUEsVUFBQSxDQUFBLE1BQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQTNFLE9BQUEsQ0FBQSxrQkFBQSxDQUFBLEtBQUF1akIsWUFBQSxHQUFBLEtBQUFKLFVBQUEsQ0FBQTF1QyxXQUFBLENBQUEsS0FBQTB1QyxVQUFBLENBQUEsS0FBQUMsaUJBQUEsQ0FBQSxLQUFBUyxnQkFBQSxHQUFBeDlDLElBQUEsQ0FBQSxvQkFBQSxHQUFBLEVBQUEsQ0FBQSxDQUFBLENBQUEsT0FBQSxLQUFBeGMsT0FBQSxDQUFBc3NCLEtBQUEsRUFBQSxLQUFBa3RDLGFBQUEsRUFBQSxDQUFBLENBQUEsQ0FBQUUsWUFBQSxDQUFBLHVCQUFBLENBQUEsR0FBQTEyQyxDQUFBQSxDQUFBLENBQUFqYyxDQUFBLENBQUEsS0FBQWlqQyxPQUFBLENBQUFsL0IsSUFBQSxDQUFBLFFBQUEsQ0FBQSxDQUFBLEtBQUFrd0MsSUFBQSxDQUFBamtDLEtBQUEsR0FBQSxLQUFBa2pELGFBQUEsQ0FBQWx6RCxDQUFBLENBQUEsQ0FBQSxLQUFBODJDLFdBQUEsQ0FBQSxLQUFBN0MsSUFBQSxDQUFBLEtBQUFqQixLQUFBLENBQUEsQ0FBQSxLQUFBNmYsWUFBQSxDQUFBempCLE9BQUEsRUFBQSxDQUFBLEtBQUFpakIsU0FBQSxDQUFBLEtBQUFwZSxJQUFBLENBQUFsd0MsSUFBQSxDQUFBLElBQUEsRUFBQXFKLEdBQUEsQ0FBQSx5QkFBQSxFQUFBckosSUFBQSxDQUFBLHVCQUFBLENBQUEsQ0FBQSxLQUFBcXVELFNBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQXB5RCxDQUFBLENBQUExSSxNQUFBLEdBQUEya0IsQ0FBQSxDQUFBLEtBQUFnM0MsZ0JBQUEsRUFBQSxDQUFBLEtBQUFKLFlBQUEsQ0FBQXh4QyxLQUFBLENBQUEsSUFBQSxDQUFBcEYsQ0FBQSxDQUFBLENBQUEsS0FBQWszQyxRQUFBLENBQUFsM0MsQ0FBQSxDQUFBeEcsSUFBQSxDQUFBLG9CQUFBLENBQUEsQ0FBQSxDQUFBLEtBQUEwdkIsVUFBQSxDQUFBLFVBQUEsQ0FBQSxLQUFBbEMsT0FBQSxDQUFBdnRCLElBQUEsQ0FBQSxVQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBc2tCLElBQUEsQ0FBQSxjQUFBL2QsQ0FBQSxDQUFBLENBQUEsS0FBQWhqQixPQUFBLENBQUEwRyxRQUFBLEdBQUEsS0FBQXl5RCxTQUFBLEVBQUEsS0FBQW50QixZQUFBLENBQUEsS0FBQWdQLElBQUEsQ0FBQWx3QyxJQUFBLENBQUEsa0JBQUEsQ0FBQSxDQUFBLElBQUEsQ0FBQSxpQkFBQSxFQUFBLEtBQUE4dUQsWUFBQSxDQUFBeHhDLEtBQUEsQ0FBQSxJQUFBLENBQUEsS0FBQTR4QyxnQkFBQSxFQUFBLENBQUEsRUFBQSxLQUFBTixZQUFBLEVBQUEsQ0FBQSxLQUFBTixTQUFBLENBQUEvNkQsTUFBQSxHQUFBLEtBQUF5MkQsTUFBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLEtBQUFxRixXQUFBLEVBQUEsQ0FBQSxLQUFBcmMsV0FBQSxFQUFBLENBQUEsS0FBQXFYLFNBQUEsRUFBQSxDQUFBLEtBQUExcEIsR0FBQSxDQUFBLEtBQUE5d0MsUUFBQSxDQUFBLEtBQUF5L0QsY0FBQSxDQUFBLENBQUEsS0FBQWx3QixRQUFBLENBQUEsTUFBQSxDQUFBbG5CLENBQUEsQ0FBQSxDQUFBLEVBQUEsQ0FBQSxDQUFBbXlDLFNBQUEsQ0FBQSxvQkFBQSxDQUFBLEtBQUF3RSxRQUFBLENBQUFwdEMsUUFBQSxDQUFBdkosQ0FBQSxDQUFBampCLE1BQUEsQ0FBQSxDQUFBOHRDLEVBQUEsQ0FBQSxLQUFBN29CLE1BQUEsQ0FBQSxDQUFBLEtBQUFobEIsT0FBQSxDQUFBdXNCLFFBQUEsQ0FBQSxFQUFBLENBQUEsQ0FBQXN2QixLQUFBLENBQUEsZUFBQTc0QixDQUFBLENBQUEsQ0FBQSxLQUFBOHhDLE1BQUEsR0FBQSxLQUFBQSxNQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsS0FBQXFGLFdBQUEsRUFBQSxDQUFBLEtBQUFFLEtBQUEsQ0FBQSxJQUFBLENBQUEsS0FBQTN0QixJQUFBLENBQUEsS0FBQS94QyxRQUFBLENBQUEsQ0FBQSxLQUFBdXZDLFFBQUEsQ0FBQSxPQUFBLENBQUFsbkIsQ0FBQSxDQUFBLEVBQUEsQ0FBQSxDQUFBcW5CLE1BQUEsQ0FBQSxpQkFBQSxDQUFBLE1BQUEsTUFBQXJsQixNQUFBLENBQUEsQ0FBQSxDQUFBczFDLFVBQUEsQ0FBQSxxQkFBQSxDQUFBLE1BQUEsTUFBQXRmLElBQUEsQ0FBQSxDQUFBLENBQUF1ZSxpQkFBQSxDQUFBLDJCQUFBeHlELENBQUEsQ0FBQSxDQUFBLEdBQUEvSixDQUFBQSxDQUFBLENBQUFnbUIsQ0FBQSxDQUFBLFFBQUEsQ0FBQSxDQUFBLE1BQUEsTUFBQXUzQyxRQUFBLENBQUF2OUQsQ0FBQSxDQUFBK0osQ0FBQSxDQUFBNjJDLEtBQUEsRUFBQSxLQUFBcFIsU0FBQSxDQUFBeHZDLENBQUEsQ0FBQSxvQkFBQSxDQUFBLENBQUFBLENBQUEsQ0FBQSxDQUFBLENBQUE2Z0QsV0FBQSxDQUFBLHFCQUFBOTJDLENBQUEsQ0FBQS9KLENBQUEsQ0FBQSxDQUFBLEdBQUFpOUIsQ0FBQUEsQ0FBQSxDQUFBLElBQUEsQ0FBQXBtQixDQUFBLENBQUEsRUFBQSxDQUFBbVAsQ0FBQSxDQUFBbGtCLElBQUEsQ0FBQTlCLENBQUEsQ0FBQSxTQUFBQSxDQUFBLENBQUEyc0MsQ0FBQSxDQUFBLENBQUEsR0FBQXpsQyxDQUFBQSxDQUFBLENBQUF5bEMsQ0FBQSxDQUFBem9CLFFBQUEsR0FBQXJOLENBQUEsR0FBQTNQLENBQUEsQ0FBQThlLENBQUEsQ0FBQSxNQUFBLENBQUEsQ0FBQTVsQixJQUFBLENBQUF1c0MsQ0FBQSxDQUFBem9CLFFBQUEsQ0FBQSxDQUFBLENBQUErWSxDQUFBLENBQUF1UyxTQUFBLENBQUF0b0MsQ0FBQSxDQUFBLHdCQUFBLENBQUEsbUJBQUF5bEMsQ0FBQSxDQUFBSyxPQUFBLENBQUEzN0IsTUFBQSxDQUFBLFVBQUEsRUFBQW9PLElBQUEsQ0FBQSxVQUFBLEVBQUEsb0JBQUEsQ0FBQSxFQUFBLENBQUEsQ0FBQSxDQUFBdlksQ0FBQSxDQUFBNG1CLFFBQUEsQ0FBQS9qQixDQUFBLENBQUEsQ0FBQThNLENBQUEsQ0FBQTgxQixDQUFBLENBQUF6b0IsUUFBQSxFQUFBK1ksQ0FBQSxDQUFBOGpCLGVBQUEsQ0FBQWgzQyxDQUFBLENBQUE0aUMsQ0FBQSxDQUFBLENBQUEsQ0FBQSxFQUFBLENBQUEsQ0FBQW9VLGVBQUEsQ0FBQSx5QkFBQS82QixDQUFBLENBQUFqYyxDQUFBLENBQUEsQ0FBQSxNQUFBLE1BQUFpM0MsV0FBQSxDQUFBaDdCLENBQUEsQ0FBQWpjLENBQUEsRUFBQXlWLElBQUEsQ0FBQSxvQkFBQSxDQUFBelYsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBaTNDLFdBQUEsQ0FBQSxxQkFBQWozQyxDQUFBLENBQUEvSixDQUFBLENBQUEsQ0FBQSxHQUFBaTlCLENBQUFBLENBQUEsQ0FBQWpYLENBQUEsQ0FBQSxNQUFBLENBQUEsQ0FBQW5QLENBQUEsQ0FBQW1QLENBQUEsQ0FBQSxPQUFBLENBQUEsQ0FBQXE5QixLQUFBLENBQUFyakQsQ0FBQSxDQUFBZ3RDLE9BQUEsQ0FBQTM5QixJQUFBLENBQUEsT0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLE1BQUFyUCxDQUFBQSxDQUFBLENBQUEwSixRQUFBLEVBQUEsS0FBQThsQyxTQUFBLENBQUF2UyxDQUFBLENBQUEsSUFBQSxDQUFBLG1CQUFBLENBQUEsQ0FBQSxLQUFBc2dDLFFBQUEsQ0FBQTFtRCxDQUFBLENBQUE3VyxDQUFBLENBQUE0Z0QsS0FBQSxDQUFBLENBQUEzakIsQ0FBQSxDQUFBMVAsTUFBQSxDQUFBMVcsQ0FBQSxFQUFBaVgsUUFBQSxDQUFBL2pCLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQXd6RCxRQUFBLENBQUEsa0JBQUF2M0MsQ0FBQSxDQUFBamMsQ0FBQSxDQUFBLENBQUFBLENBQUEsQ0FBQWljLENBQUEsQ0FBQTVsQixJQUFBLENBQUEySixDQUFBLENBQUEsQ0FBQWljLENBQUEsQ0FBQTZHLElBQUEsQ0FBQSxRQUFBLENBQUEsQ0FBQSxDQUFBLENBQUE0d0IsS0FBQSxDQUFBLGVBQUF6M0IsQ0FBQSxDQUFBamMsQ0FBQSxDQUFBLENBQUEsR0FBQS9KLENBQUFBLENBQUEsQ0FBQWk5QixDQUFBLENBQUFwbUIsQ0FBQSxDQUFBLGVBQUEsQ0FBQSxLQUFBaWhELE1BQUEsQ0FBQTkzRCxDQUFBLENBQUEsS0FBQW84RCxTQUFBLENBQUFoNkQsRUFBQSxDQUFBLEtBQUEyNkQsVUFBQSxFQUFBMXJELE1BQUEsQ0FBQSxJQUFBLENBQUEsRUFBQXJSLENBQUEsQ0FBQSxLQUFBbzhELFNBQUEsQ0FBQWg2RCxFQUFBLENBQUEsS0FBQTRxQyxPQUFBLENBQUEsQ0FBQSxFQUFBdDZCLGFBQUEsRUFBQXJCLE1BQUEsQ0FBQSxJQUFBLENBQUEsQ0FBQXdGLENBQUEsRUFBQSwwQkFBQSxFQUFBb21CLENBQUEsQ0FBQSxVQUFBalgsQ0FBQSxFQUFBLFNBQUFBLENBQUEsQ0FBQWhtQixDQUFBLENBQUEsVUFBQWdtQixDQUFBLENBQUEsU0FBQSxDQUFBLFNBQUEsQ0FBQSxDQUFBblAsQ0FBQSxFQUFBelUsRUFBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUFwQyxDQUFBLENBQUFnbUIsQ0FBQSxDQUFBLEtBQUEsQ0FBQSxDQUFBblAsQ0FBQSxFQUFBelUsRUFBQSxDQUFBLENBQUEsQ0FBQSxDQUFBNjZCLENBQUEsQ0FBQTU3QixNQUFBLEVBQUEsS0FBQXU3RCxZQUFBLENBQUF4eEMsS0FBQSxDQUFBcmhCLENBQUEsQ0FBQWt6QixDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUErL0IsZ0JBQUEsQ0FBQSwyQkFBQSxDQUFBLE1BQUEsTUFBQVosU0FBQSxDQUFBaDZELEVBQUEsQ0FBQSxLQUFBNHFDLE9BQUEsQ0FBQSxDQUFBLEVBQUF0NkIsYUFBQSxFQUFBckIsTUFBQSxDQUFBLElBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQXNyQyxPQUFBLENBQUEsaUJBQUEzMkIsQ0FBQSxDQUFBLENBQUEsS0FBQSxLQUFBOHhDLE1BQUEsQ0FBQSxPQUFBLENBQUEsTUFBQSxFQUFBOXhDLENBQUEsRUFBQSxDQUFBLENBQUE2MkMsYUFBQSxDQUFBLHdCQUFBLENBQUEsR0FBQTcyQyxDQUFBQSxDQUFBLENBQUEsS0FBQXEzQyxLQUFBLEdBQUF2L0QsTUFBQSxDQUFBMC9ELFlBQUEsRUFBQXgzQyxDQUFBLENBQUFsb0IsTUFBQSxDQUFBMC9ELFlBQUEsRUFBQSxDQUFBeDNDLENBQUEsQ0FBQXkzQyxlQUFBLEVBQUEsQ0FBQXozQyxDQUFBLENBQUEwM0MsUUFBQSxDQUFBLEtBQUFMLEtBQUEsQ0FBQSxFQUFBLEtBQUFBLEtBQUEsQ0FBQXYzRCxNQUFBLEVBQUEsQ0FBQSxLQUFBa2lCLE1BQUEsQ0FBQW9ELEtBQUEsRUFBQSxFQUFBLENBQUEsQ0FBQWd5QyxjQUFBLENBQUEsQ0FBQXJkLFNBQUEsQ0FBQSxtQkFBQWgyQyxDQUFBLENBQUEsQ0FBQSxLQUFBK3RELE1BQUEsR0FBQTl4QyxDQUFBLENBQUFqYyxDQUFBLENBQUExRyxNQUFBLENBQUEsQ0FBQTRVLE9BQUEsQ0FBQSx5QkFBQStOLENBQUEsQ0FBQW1uQixFQUFBLENBQUEzMkIsY0FBQSxDQUFBLEtBQUF3bEQsR0FBQSxDQUFBaDBDLE1BQUEsQ0FBQSxFQUFBM21CLE1BQUEsRUFBQSxLQUFBdzlDLEtBQUEsQ0FBQTkwQyxDQUFBLENBQUEsRUFBQSxDQUFBLENBQUEsQ0FBQTB5RCxhQUFBLENBQUEsQ0FBQTFjLFNBQUEsQ0FBQSxvQkFBQSxDQUFBLEdBQUEvNUIsQ0FBQUEsQ0FBQSxDQUFBbG9CLE1BQUEsQ0FBQTAvRCxZQUFBLEVBQUF4M0MsQ0FBQSxDQUFBbG9CLE1BQUEsQ0FBQTAvRCxZQUFBLEVBQUEsQ0FBQXgzQyxDQUFBLENBQUEyM0MsVUFBQSxHQUFBLEtBQUFOLEtBQUEsQ0FBQXIzQyxDQUFBLENBQUE0M0MsVUFBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLEVBQUEsS0FBQVAsS0FBQSxDQUFBMS9ELFFBQUEsQ0FBQTZtQixTQUFBLENBQUFxNUMsV0FBQSxFQUFBLENBQUEsQ0FBQSxDQUFBcDFDLEtBQUEsQ0FBQSxlQUFBekMsQ0FBQSxDQUFBLENBQUEsS0FBQTYyQyxhQUFBLEdBQUEsS0FBQWxnQixPQUFBLENBQUEzMkIsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBczJCLE9BQUEsQ0FBQSxpQkFBQXZ5QyxDQUFBLENBQUEsQ0FBQSxHQUFBL0osQ0FBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLE9BQUErSixDQUFBLENBQUF1Z0IsT0FBQSxFQUFBLElBQUF0RSxDQUFBQSxDQUFBLENBQUFtbkIsRUFBQSxDQUFBN2lCLE9BQUEsQ0FBQSt2QixHQUFBLENBQUEsSUFBQXIwQixDQUFBQSxDQUFBLENBQUFtbkIsRUFBQSxDQUFBN2lCLE9BQUEsQ0FBQXV2QixNQUFBLENBQUEsS0FBQWdGLEtBQUEsQ0FBQTkwQyxDQUFBLEVBQUEvSixDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsTUFBQSxJQUFBZ21CLENBQUFBLENBQUEsQ0FBQW1uQixFQUFBLENBQUE3aUIsT0FBQSxDQUFBc3ZCLEtBQUEsQ0FBQSxLQUFBa2UsTUFBQSxFQUFBLEtBQUFnRyxrQkFBQSxDQUFBL3pELENBQUEsQ0FBQSxDQUFBLE1BQUEsSUFBQWljLENBQUFBLENBQUEsQ0FBQW1uQixFQUFBLENBQUE3aUIsT0FBQSxDQUFBZ3dCLEVBQUEsQ0FBQXZ3QyxDQUFBLENBQUEwZixNQUFBLENBQUEsS0FBQWt6QixPQUFBLENBQUE1eUMsQ0FBQSxDQUFBLENBQUEsS0FBQTB6QyxLQUFBLENBQUEsTUFBQSxDQUFBMXpDLENBQUEsQ0FBQSxDQUFBLE1BQUEsSUFBQWljLENBQUFBLENBQUEsQ0FBQW1uQixFQUFBLENBQUE3aUIsT0FBQSxDQUFBb3ZCLElBQUEsQ0FBQTN2QyxDQUFBLENBQUEwZixNQUFBLENBQUEsS0FBQWt6QixPQUFBLENBQUE1eUMsQ0FBQSxDQUFBLENBQUEsS0FBQTB6QyxLQUFBLENBQUEsTUFBQSxDQUFBMXpDLENBQUEsQ0FBQSxDQUFBLE1BQUEsSUFBQWljLENBQUFBLENBQUEsQ0FBQW1uQixFQUFBLENBQUE3aUIsT0FBQSxDQUFBOHZCLEtBQUEsQ0FBQSxLQUFBMGQsTUFBQSxDQUFBLEtBQUFnRyxrQkFBQSxDQUFBL3pELENBQUEsQ0FBQSxDQUFBLEtBQUE0eUMsT0FBQSxDQUFBNXlDLENBQUEsQ0FBQSxDQUFBLE1BQUEsSUFBQWljLENBQUFBLENBQUEsQ0FBQW1uQixFQUFBLENBQUE3aUIsT0FBQSxDQUFBeXZCLElBQUEsQ0FBQSxLQUFBMEQsS0FBQSxDQUFBLE1BQUEsQ0FBQTF6QyxDQUFBLEVBQUEsTUFBQSxJQUFBaWMsQ0FBQUEsQ0FBQSxDQUFBbW5CLEVBQUEsQ0FBQTdpQixPQUFBLENBQUE2dkIsS0FBQSxDQUFBLEtBQUFzRCxLQUFBLENBQUEsTUFBQSxDQUFBMXpDLENBQUEsRUFBQSxNQUFBLElBQUFpYyxDQUFBQSxDQUFBLENBQUFtbkIsRUFBQSxDQUFBN2lCLE9BQUEsQ0FBQXd2QixJQUFBLENBQUEsSUFBQTl6QixDQUFBQSxDQUFBLENBQUFtbkIsRUFBQSxDQUFBN2lCLE9BQUEsQ0FBQTJ2QixPQUFBLENBQUEsS0FBQXdELEtBQUEsQ0FBQSxPQUFBLENBQUExekMsQ0FBQSxFQUFBLE1BQUEsSUFBQWljLENBQUFBLENBQUEsQ0FBQW1uQixFQUFBLENBQUE3aUIsT0FBQSxDQUFBcXZCLEdBQUEsQ0FBQSxJQUFBM3pCLENBQUFBLENBQUEsQ0FBQW1uQixFQUFBLENBQUE3aUIsT0FBQSxDQUFBMHZCLFNBQUEsQ0FBQSxLQUFBeUQsS0FBQSxDQUFBLE1BQUEsQ0FBQTF6QyxDQUFBLEVBQUEsTUFBQSxRQUFBLEtBQUFpMEMsSUFBQSxDQUFBcjFCLE9BQUEsQ0FBQTVlLENBQUEsRUFBQS9KLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBQSxDQUFBLEVBQUErSixDQUFBLENBQUE0ZCxjQUFBLEVBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQW0yQyxrQkFBQSxDQUFBLDRCQUFBOTNDLENBQUEsQ0FBQSxDQUFBLEdBQUFqYyxDQUFBQSxDQUFBLENBQUEsS0FBQXF5RCxTQUFBLENBQUFoNkQsRUFBQSxDQUFBLEtBQUEyNkQsVUFBQSxFQUFBMXJELE1BQUEsQ0FBQSxJQUFBLENBQUEsQ0FBQXRILENBQUEsQ0FBQXV4QixRQUFBLENBQUEsbUJBQUEsR0FBQSxLQUFBd2hDLE9BQUEsQ0FBQS95RCxDQUFBLENBQUF5VixJQUFBLENBQUEsb0JBQUEsQ0FBQSxDQUFBd0csQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBODJDLE9BQUEsQ0FBQSxpQkFBQTkyQyxDQUFBLENBQUFqYyxDQUFBLENBQUEsQ0FBQSxHQUFBL0osQ0FBQUEsQ0FBQSxDQUFBLEtBQUFndEMsT0FBQSxDQUFBLENBQUEsRUFBQXQ2QixhQUFBLENBQUEsS0FBQXM2QixPQUFBLENBQUEsQ0FBQSxFQUFBdDZCLGFBQUEsQ0FBQXNULENBQUEsQ0FBQTlOLEtBQUEsQ0FBQSxLQUFBb2tELFVBQUEsQ0FBQTF1QyxXQUFBLENBQUEsS0FBQTB1QyxVQUFBLENBQUEsS0FBQUMsaUJBQUEsQ0FBQXYyQyxDQUFBLENBQUEsQ0FBQSxDQUFBLEtBQUFrM0MsUUFBQSxDQUFBbDNDLENBQUEsQ0FBQSxDQUFBLEtBQUFrbkIsUUFBQSxDQUFBLFFBQUEsQ0FBQW5qQyxDQUFBLENBQUEsQ0FBQXMwQyxJQUFBLENBQUFyNEIsQ0FBQSxDQUFBLENBQUEsQ0FBQUEsQ0FBQSxDQUFBOU4sS0FBQSxHQUFBbFksQ0FBQSxFQUFBLEtBQUFrdEMsUUFBQSxDQUFBLFFBQUEsQ0FBQW5qQyxDQUFBLENBQUEsQ0FBQXMwQyxJQUFBLENBQUFyNEIsQ0FBQSxDQUFBLENBQUEsQ0FBQSxLQUFBNjRCLEtBQUEsQ0FBQTkwQyxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUFtekQsUUFBQSxDQUFBLGtCQUFBbDNDLENBQUEsQ0FBQSxDQUFBLEdBQUFqYyxDQUFBQSxDQUFBLENBQUEsS0FBQXF5RCxTQUFBLENBQUFoNkQsRUFBQSxDQUFBNGpCLENBQUEsQ0FBQTlOLEtBQUEsRUFBQTdJLElBQUEsQ0FBQSxJQUFBLENBQUEsQ0FBQSxLQUFBMlksTUFBQSxDQUFBM1ksSUFBQSxDQUFBLENBQUEsa0JBQUF0RixDQUFBLENBQUEsd0JBQUFBLENBQUEsQ0FBQSxFQUFBLEtBQUFpMEMsSUFBQSxDQUFBM3VDLElBQUEsQ0FBQSx1QkFBQSxDQUFBdEYsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBbWxDLFVBQUEsQ0FBQSxvQkFBQWxwQixDQUFBLENBQUFqYyxDQUFBLENBQUEsQ0FBQSxHQUFBLFVBQUFpYyxDQUFBLENBQUEsQ0FBQSxHQUFBaG1CLENBQUFBLENBQUEsQ0FBQSxLQUFBZ29CLE1BQUEsQ0FBQWxhLElBQUEsQ0FBQSxjQUFBLENBQUEsQ0FBQSxLQUFBa2hDLFlBQUEsQ0FBQWh2QyxDQUFBLENBQUEsSUFBQSxDQUFBLEtBQUFnRCxPQUFBLENBQUErM0MsS0FBQSxDQUFBL3lCLE1BQUEsRUFBQXduQixTQUFBLENBQUF4dkMsQ0FBQSxDQUFBLElBQUEsQ0FBQStKLENBQUEsQ0FBQWllLE1BQUEsRUFBQSxNQUFBMGxCLE1BQUEsQ0FBQTFuQixDQUFBLENBQUFqYyxDQUFBLEVBQUEsYUFBQWljLENBQUEsRUFBQSxLQUFBMjJDLFFBQUEsQ0FBQTd1QyxRQUFBLENBQUEsS0FBQWd5QixTQUFBLEVBQUEsQ0FBQSxDQUFBLFVBQUE5NUIsQ0FBQSxFQUFBLEtBQUF3MkMsYUFBQSxFQUFBLENBQUEsQ0FBQSxDQUFBM3RCLGtCQUFBLENBQUEsNEJBQUE3b0IsQ0FBQSxDQUFBLENBQUEsS0FBQTBuQixNQUFBLENBQUExbkIsQ0FBQSxFQUFBLEtBQUE0MkMsWUFBQSxDQUFBdDVDLE1BQUEsQ0FBQSxVQUFBLENBQUEwQyxDQUFBLENBQUEsQ0FBQSxLQUFBZ0MsTUFBQSxDQUFBM1ksSUFBQSxDQUFBLGVBQUEsQ0FBQTJXLENBQUEsQ0FBQSxDQUFBLEtBQUFxcEIsWUFBQSxDQUFBLEtBQUFybkIsTUFBQSxDQUFBLElBQUEsQ0FBQSxtQkFBQSxDQUFBaEMsQ0FBQSxDQUFBLENBQUEsS0FBQWduQixPQUFBLENBQUF2dEIsSUFBQSxDQUFBLFVBQUEsQ0FBQXVHLENBQUEsQ0FBQSxDQUFBQSxDQUFBLEVBQUEsS0FBQWdDLE1BQUEsQ0FBQTNZLElBQUEsQ0FBQSxVQUFBLENBQUEsQ0FBQSxDQUFBLEVBQUEsS0FBQXd2QyxLQUFBLEVBQUEsRUFBQSxLQUFBNzJCLE1BQUEsQ0FBQTNZLElBQUEsQ0FBQSxVQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBeXdDLFNBQUEsQ0FBQSxvQkFBQSxDQUFBLEdBQUEvMUMsQ0FBQUEsQ0FBQSxDQUFBLEtBQUEvRyxPQUFBLENBQUE4cUIsUUFBQSxDQUFBLE1BQUEvakIsQ0FBQUEsQ0FBQSxHQUFBQSxDQUFBLENBQUFBLENBQUEsQ0FBQTVJLE1BQUEsRUFBQTRJLENBQUEsQ0FBQTFLLFFBQUEsQ0FBQTJtQixDQUFBLENBQUFqYyxDQUFBLENBQUEsQ0FBQSxLQUFBcE0sUUFBQSxDQUFBbVEsSUFBQSxDQUFBL0QsQ0FBQSxFQUFBM0gsRUFBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEySCxDQUFBLEVBQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsR0FBQUEsQ0FBQSxDQUFBLEtBQUFpakMsT0FBQSxDQUFBLzBCLE9BQUEsQ0FBQSxtQkFBQSxDQUFBLENBQUEsQ0FBQWxPLENBQUEsQ0FBQTFJLE1BQUEsR0FBQTBJLENBQUEsQ0FBQSxLQUFBcE0sUUFBQSxDQUFBLENBQUEsRUFBQTRrQixJQUFBLENBQUEsQ0FBQXhZLENBQUEsQ0FBQSxDQUFBLENBQUFvekQsV0FBQSxDQUFBLHNCQUFBLENBQUEsS0FBQW4xQyxNQUFBLENBQUEzWSxJQUFBLENBQUEsZUFBQSxDQUFBLEtBQUF5b0QsTUFBQSxFQUFBLEtBQUE5b0IsWUFBQSxDQUFBLEtBQUFobkIsTUFBQSxDQUFBLHlCQUFBLEtBQUE4dkMsTUFBQSxDQUFBLFFBQUEsQ0FBQSxNQUFBLENBQUEsRUFBQXRvQixTQUFBLENBQUEsS0FBQXhuQixNQUFBLENBQUEseUJBQUEsS0FBQTh2QyxNQUFBLENBQUEsTUFBQSxDQUFBLFFBQUEsQ0FBQSxFQUFBem9CLFlBQUEsQ0FBQSxLQUFBc3RCLFFBQUEsQ0FBQSxvQkFBQSxDQUFBLElBQUEsQ0FBQSxLQUFBN0UsTUFBQSxDQUFBLENBQUEsS0FBQTlaLElBQUEsQ0FBQTN1QyxJQUFBLENBQUEsYUFBQSxDQUFBLENBQUEsS0FBQXlvRCxNQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEwRSxhQUFBLENBQUEsd0JBQUEsQ0FBQSxHQUFBeDJDLENBQUFBLENBQUEsQ0FBQSxLQUFBaGpCLE9BQUEsQ0FBQXNzQixLQUFBLENBQUEsTUFBQXRKLENBQUFBLENBQUEsR0FBQSxDQUFBLENBQUEsRUFBQSxLQUFBZ0MsTUFBQSxDQUFBdkcsR0FBQSxDQUFBLE9BQUEsQ0FBQSxFQUFBLEVBQUEsSUFBQSxFQUFBLEdBQUEsT0FBQXVFLENBQUEsR0FBQUEsQ0FBQSxDQUFBLEtBQUFnbkIsT0FBQSxDQUFBdnFCLElBQUEsR0FBQXl0QixVQUFBLEVBQUEsQ0FBQSxLQUFBbEQsT0FBQSxDQUFBcnFCLElBQUEsRUFBQSxFQUFBLEtBQUFxRixNQUFBLENBQUFrb0IsVUFBQSxDQUFBbHFCLENBQUEsQ0FBQSxDQUFBLElBQUEsRUFBQSxDQUFBLENBQUEsQ0FBQSxDQUFBODZCLFdBQUEsQ0FBQSxzQkFBQSxDQUFBLEtBQUE5QyxJQUFBLENBQUE5TixVQUFBLENBQUF0c0MsSUFBQSxDQUFBd3VCLEdBQUEsQ0FBQSxLQUFBcEssTUFBQSxDQUFBa29CLFVBQUEsRUFBQSxDQUFBLEtBQUE4TixJQUFBLENBQUExdUIsS0FBQSxDQUFBLEVBQUEsRUFBQTRnQixVQUFBLEdBQUEsQ0FBQSxDQUFBLEVBQUEsQ0FBQSxDQUFBdkIsaUJBQUEsQ0FBQSw0QkFBQSxDQUFBLEdBQUEzb0IsQ0FBQUEsQ0FBQSxDQUFBLEtBQUEwbkIsTUFBQSxFQUFBLENBQUEsTUFBQTFuQixDQUFBQSxDQUFBLENBQUF0YyxRQUFBLENBQUEsS0FBQXNqQyxPQUFBLENBQUF2dEIsSUFBQSxDQUFBLFVBQUEsQ0FBQSxDQUFBdUcsQ0FBQSxDQUFBLENBQUEsQ0FBQWkzQyxhQUFBLENBQUEsdUJBQUFsekQsQ0FBQSxDQUFBLENBQUEsR0FBQS9KLENBQUFBLENBQUEsQ0FBQSxJQUFBLENBQUFpOUIsQ0FBQSxDQUFBLEVBQUEsQ0FBQWx6QixDQUFBLENBQUFqSSxJQUFBLENBQUEsU0FBQWlJLENBQUEsQ0FBQThNLENBQUEsQ0FBQSxDQUFBb21CLENBQUEsQ0FBQXYrQixJQUFBLENBQUFzQixDQUFBLENBQUFxOEQsWUFBQSxDQUFBcjJDLENBQUEsQ0FBQW5QLENBQUEsQ0FBQSxDQUFBOU0sQ0FBQSxDQUFBLEVBQUEsQ0FBQSxFQUFBLEtBQUFnekMsS0FBQSxDQUFBOWYsQ0FBQSxDQUFBLENBQUEsQ0FBQW8vQixZQUFBLENBQUEsc0JBQUFyMkMsQ0FBQSxDQUFBamMsQ0FBQSxDQUFBLENBQUEsR0FBQS9KLENBQUFBLENBQUEsQ0FBQWdtQixDQUFBLENBQUEzVSxNQUFBLENBQUEsVUFBQSxDQUFBLENBQUEsTUFBQSxDQUFBMjdCLE9BQUEsQ0FBQWhuQixDQUFBLENBQUE5TixLQUFBLENBQUFuTyxDQUFBLENBQUE5RSxLQUFBLENBQUErZ0IsQ0FBQSxDQUFBL2xCLEdBQUEsRUFBQSxDQUFBMmdELEtBQUEsQ0FBQTU2QixDQUFBLENBQUE1bEIsSUFBQSxFQUFBLENBQUE4akIsUUFBQSxDQUFBbGtCLENBQUEsQ0FBQXFQLElBQUEsQ0FBQSxPQUFBLEdBQUEsRUFBQSxDQUFBM0YsUUFBQSxDQUFBMUosQ0FBQSxDQUFBeWYsSUFBQSxDQUFBLFVBQUEsR0FBQXVHLENBQUEsQ0FBQXZHLElBQUEsQ0FBQSxVQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQXN2QixRQUFBLENBQUEsbUJBQUEsQ0FBQSxLQUFBc0ssdUJBQUEsR0FBQSxLQUFBc2pCLFFBQUEsQ0FBQTdpRCxNQUFBLEVBQUEsQ0FBQSxLQUFBa08sTUFBQSxDQUFBbE8sTUFBQSxFQUFBLENBQUEsS0FBQWt6QixPQUFBLENBQUF2cUIsSUFBQSxFQUFBLENBQUEsS0FBQXVxQixPQUFBLENBQUEyTixjQUFBLEVBQUEsQ0FBQSxLQUFBSixNQUFBLENBQUFsckMsSUFBQSxDQUFBLEtBQUEsQ0FBQSxLQUFBMnNELEdBQUEsQ0FBQWh2QixPQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUFobkIsQ0FBQSxDQUFBcW5CLE1BQUEsQ0FBQSxXQUFBLENBQUFybkIsQ0FBQSxDQUFBbW5CLEVBQUEsQ0FBQWloQixLQUFBLENBQUEsQ0FBQXh0RCxPQUFBLENBQUEsUUFBQSxDQUFBZ3RDLGlCQUFBLENBQUEsT0FBQSxDQUFBNXFDLE9BQUEsQ0FBQSxDQUFBczFCLE9BQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQXVDLE9BQUEsQ0FBQSxDQUFBLFlBQUEsZUFBQSxDQUFBLG1CQUFBLGVBQUEsQ0FBQSxrQkFBQSxnQ0FBQSxDQUFBLENBQUEwZCxRQUFBLENBQUEsQ0FBQSxDQUFBbm1CLEdBQUEsQ0FBQSxHQUFBLENBQUFnaUIsR0FBQSxDQUFBLENBQUEsQ0FBQTJwQixXQUFBLENBQUEsWUFBQSxDQUFBVixLQUFBLENBQUEsQ0FBQSxDQUFBLENBQUF6b0MsSUFBQSxDQUFBLENBQUEsQ0FBQTN2QixLQUFBLENBQUEsQ0FBQSxDQUFBeWQsTUFBQSxDQUFBLElBQUEsQ0FBQWs4QixNQUFBLENBQUEsSUFBQSxDQUFBb2YsS0FBQSxDQUFBLElBQUEsQ0FBQTVzRCxLQUFBLENBQUEsSUFBQSxDQUFBc1AsSUFBQSxDQUFBLElBQUEsQ0FBQSxDQUFBdTlDLFFBQUEsQ0FBQSxDQUFBLENBQUFydkIsT0FBQSxDQUFBLGtCQUFBLENBQUEsS0FBQXN2QixXQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsS0FBQUMsYUFBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLEtBQUFDLFdBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxLQUFBQyxZQUFBLENBQUEsSUFBQSxDQUFBLEtBQUFDLGtCQUFBLEVBQUEsQ0FBQSxLQUFBMVIsVUFBQSxFQUFBLENBQUEsS0FBQTJSLGdCQUFBLEVBQUEsQ0FBQSxLQUFBL3VCLFNBQUEsQ0FBQSx1QkFBQSxLQUFBdXVCLFdBQUEsQ0FBQSw2QkFBQSxDQUFBLENBQUEsS0FBQTl3QixRQUFBLEVBQUEsQ0FBQSxLQUFBbXhCLFdBQUEsQ0FBQSxDQUFBLENBQUEsQ0FDQSxDQURBLENBQ0FueEIsUUFBQSxDQUFBLG1CQUFBLENBQUEsS0FBQXV4QixZQUFBLEdBQUEsS0FBQUMsY0FBQSxFQUFBLENBQUEsS0FBQXppQixZQUFBLEVBQUEsQ0FBQSxLQUFBaWYsYUFBQSxFQUFBLENBQUEsQ0FEQSxDQUNBd0QsY0FBQSxDQUFBLHlCQUFBLENBQUEsR0FBQTEwRCxDQUFBQSxDQUFBLENBQUEvSixDQUFBLENBQUFpOUIsQ0FBQSxDQUFBLEtBQUFqNkIsT0FBQSxDQUFBNlQsQ0FBQSxDQUFBLEtBQUFtMkIsT0FBQSxDQUFBbC9CLElBQUEsQ0FBQSxtQkFBQSxDQUFBLENBQUE2K0IsQ0FBQSxDQUFBLDRCQUFBLENBQUF6bEMsQ0FBQSxDQUFBLEVBQUEsQ0FBQSxJQUFBbEgsQ0FBQSxDQUFBaTlCLENBQUEsQ0FBQXZhLE1BQUEsRUFBQXVhLENBQUEsQ0FBQXZhLE1BQUEsQ0FBQXJoQixNQUFBLEVBQUEsQ0FBQSxDQUFBd1YsQ0FBQSxDQUFBeFYsTUFBQSxDQUFBckIsQ0FBQSxHQUFBNlcsQ0FBQSxDQUFBelksS0FBQSxDQUFBNEIsQ0FBQSxFQUFBOFosTUFBQSxHQUFBakQsQ0FBQSxDQUFBQSxDQUFBLENBQUF6WSxLQUFBLENBQUEsQ0FBQSxDQUFBNEIsQ0FBQSxDQUFBLENBQUEsQ0FBQStKLENBQUEsQ0FBQThNLENBQUEsQ0FBQXhWLE1BQUEsQ0FBQXJCLENBQUEsQ0FBQStKLENBQUEsQ0FBQUEsQ0FBQSxFQUFBLEVBQUE3QyxDQUFBLENBQUF4SSxJQUFBLENBQUFpdUMsQ0FBQSxFQUFBLENBQUEsS0FBQWduQixPQUFBLENBQUE5OEMsQ0FBQSxDQUFBdUIsR0FBQSxDQUFBNE4sQ0FBQSxDQUFBOWUsQ0FBQSxDQUFBaUUsSUFBQSxDQUFBLEVBQUEsQ0FBQSxDQUFBLENBQUEyaUIsUUFBQSxDQUFBLEtBQUFrZixPQUFBLENBQUEsQ0FBQSxDQUFBLEtBQUF3QyxTQUFBLENBQUEsS0FBQW1rQixPQUFBLENBQUEsa0JBQUEsQ0FBQSxrQkFBQSxDQUFBLENBQUEsS0FBQXB0QyxNQUFBLENBQUEsS0FBQW90QyxPQUFBLENBQUF2eEQsRUFBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLEtBQUF1eEQsT0FBQSxDQUFBN3hELElBQUEsQ0FBQSxTQUFBaUksQ0FBQSxDQUFBLENBQUFpYyxDQUFBLENBQUEsSUFBQSxDQUFBLENBQUF4RyxJQUFBLENBQUEsd0JBQUEsQ0FBQXpWLENBQUEsRUFBQXNGLElBQUEsQ0FBQSxVQUFBLENBQUEsQ0FBQSxFQUFBLENBQUEsQ0FBQSxDQUFBLENBREEsQ0FDQW12RCxZQUFBLENBQUEsdUJBQUEsQ0FBQSxHQUFBejBELENBQUFBLENBQUEsQ0FBQSxLQUFBL0csT0FBQSxDQUFBK0csQ0FBQSxDQUFBc3pELEtBQUEsRUFBQXR6RCxDQUFBLENBQUFzekQsS0FBQSxHQUFBLENBQUEsQ0FBQSxHQUFBdHpELENBQUEsQ0FBQTJZLE1BQUEsQ0FBQTNZLENBQUEsQ0FBQTJZLE1BQUEsQ0FBQXJoQixNQUFBLEVBQUEsSUFBQTBJLENBQUEsQ0FBQTJZLE1BQUEsQ0FBQXJoQixNQUFBLENBQUEwSSxDQUFBLENBQUEyWSxNQUFBLENBQUEsQ0FBQTNZLENBQUEsQ0FBQTJZLE1BQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQTNZLENBQUEsQ0FBQTJZLE1BQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBc0QsQ0FBQSxDQUFBdmlCLE9BQUEsQ0FBQXNHLENBQUEsQ0FBQTJZLE1BQUEsSUFBQTNZLENBQUEsQ0FBQTJZLE1BQUEsQ0FBQTNZLENBQUEsQ0FBQTJZLE1BQUEsQ0FBQXRrQixLQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQTJMLENBQUEsQ0FBQTJZLE1BQUEsQ0FBQSxDQUFBLEtBQUFnOEMsU0FBQSxFQUFBLENBQUEsS0FBQUEsU0FBQSxFQUFBLENBQUEsRUFBQSxLQUFBckIsS0FBQSxFQUFBLEtBQUFBLEtBQUEsQ0FBQWg4RCxNQUFBLEVBQUEsS0FBQTJ0QyxZQUFBLENBQUEsS0FBQXF1QixLQUFBLENBQUEseUNBQUEsRUFBQSxLQUFBQSxLQUFBLENBQUE1N0MsR0FBQSxDQUFBLENBQUFrUyxJQUFBLENBQUEsRUFBQSxDQUFBb2lCLE1BQUEsQ0FBQSxFQUFBLENBQUEsQ0FBQSxHQUFBLEtBQUFzbkIsS0FBQSxDQUFBcjNDLENBQUEsQ0FBQSxPQUFBLENBQUEsQ0FBQThILFFBQUEsQ0FBQSxLQUFBa2YsT0FBQSxDQUFBLENBQUEsS0FBQXdDLFNBQUEsQ0FBQSxLQUFBNnRCLEtBQUEsQ0FBQSxpQkFBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLFFBQUF0ekQsQ0FBQSxDQUFBc3pELEtBQUEsRUFBQSxRQUFBdHpELENBQUEsQ0FBQXN6RCxLQUFBLEdBQUEsS0FBQTd0QixTQUFBLENBQUEsS0FBQTZ0QixLQUFBLENBQUEsbUJBQUF0ekQsQ0FBQSxDQUFBc3pELEtBQUEsQ0FBQSxHQUFBLEtBQUFBLEtBQUEsRUFBQSxLQUFBQSxLQUFBLENBQUF2akQsTUFBQSxFQUFBLENBQUEsS0FBQXVqRCxLQUFBLENBQUEsSUFBQSxFQUFBLENBREEsQ0FDQXJoQixZQUFBLENBQUEsdUJBQUEsQ0FBQSxLQUFBdE0sSUFBQSxDQUFBLEtBQUFpa0IsT0FBQSxFQUFBLEtBQUFsbEIsR0FBQSxDQUFBLEtBQUFrbEIsT0FBQSxDQUFBLEtBQUFnTCxhQUFBLENBQUEsQ0FBQSxLQUFBL3VCLFVBQUEsQ0FBQSxLQUFBK2pCLE9BQUEsQ0FBQSxDQUFBLEtBQUE5akIsVUFBQSxDQUFBLEtBQUE4akIsT0FBQSxDQUFBLENBQUEsQ0FEQSxDQUNBNWtCLFFBQUEsQ0FBQSxtQkFBQSxDQUFBLEtBQUE0a0IsT0FBQSxDQUFBNzVDLE1BQUEsR0FBQSxLQUFBdWpELEtBQUEsRUFBQSxLQUFBQSxLQUFBLENBQUF2akQsTUFBQSxFQUFBLENBQUEsS0FBQWl6QyxhQUFBLEVBQUEsQ0FBQSxDQURBLENBQ0FPLGFBQUEsQ0FBQSx1QkFBQXZqRCxDQUFBLENBQUEsQ0FBQSxHQUFBL0osQ0FBQUEsQ0FBQSxDQUFBaTlCLENBQUEsQ0FBQXBtQixDQUFBLENBQUE4MUIsQ0FBQSxDQUFBemxDLENBQUEsQ0FBQTZsQyxDQUFBLENBQUFLLENBQUEsQ0FBQXAxQixDQUFBLENBQUF5M0IsQ0FBQSxDQUFBLElBQUEsQ0FBQVEsQ0FBQSxDQUFBLEtBQUFqdEMsT0FBQSxDQUFBLE1BQUFpdEMsQ0FBQUEsQ0FBQSxDQUFBdm1DLFFBQUEsQ0FBQSxDQUFBLENBQUEsRUFBQSxLQUFBazFELFdBQUEsQ0FBQSxDQUFBdHZDLEtBQUEsQ0FBQSxLQUFBMGQsT0FBQSxDQUFBa0QsVUFBQSxFQUFBLENBQUF6ZixNQUFBLENBQUEsS0FBQXVjLE9BQUEsQ0FBQW1ELFdBQUEsRUFBQSxDQUFBLENBQUEsS0FBQStsQixhQUFBLENBQUEsS0FBQWxwQixPQUFBLENBQUFuSCxNQUFBLEVBQUEsQ0FBQTdsQyxDQUFBLENBQUEsQ0FBQXF4QyxDQUFBLENBQUF0bkMsQ0FBQSxDQUFBa2dCLEtBQUEsQ0FBQWduQixDQUFBLENBQUFsbkMsQ0FBQSxDQUFBbWdCLEtBQUEsQ0FBQSxDQUFBK1MsQ0FBQSxDQUFBLEtBQUE0aEMsbUJBQUEsQ0FBQTcrRCxDQUFBLENBQUEsQ0FBQTZXLENBQUEsQ0FBQSxLQUFBaW9ELFNBQUEsR0FBQSxLQUFBSixTQUFBLEVBQUEsQ0FBQSxDQUFBLENBQUEsS0FBQS9LLE9BQUEsQ0FBQTd4RCxJQUFBLENBQUEsU0FBQWlJLENBQUEsQ0FBQSxDQUFBLEdBQUEvSixDQUFBQSxDQUFBLENBQUE0RCxJQUFBLENBQUF3c0MsR0FBQSxDQUFBblQsQ0FBQSxDQUFBd1MsQ0FBQSxDQUFBL3NCLE1BQUEsQ0FBQTNZLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQThNLENBQUEsQ0FBQTdXLENBQUEsRUFBQTZXLENBQUEsR0FBQTdXLENBQUEsR0FBQStKLENBQUEsR0FBQTBsQyxDQUFBLENBQUFzdkIsaUJBQUEsRUFBQXR2QixDQUFBLENBQUEvc0IsTUFBQSxDQUFBM1ksQ0FBQSxJQUFBa21DLENBQUEsQ0FBQW1FLEdBQUEsQ0FBQSxJQUFBdjlCLENBQUEsQ0FBQTdXLENBQUEsQ0FBQTJzQyxDQUFBLENBQUEzbUIsQ0FBQSxDQUFBLElBQUEsQ0FBQSxDQUFBOWUsQ0FBQSxDQUFBNkMsQ0FBQSxFQUFBLENBQUEsQ0FBQSxDQUFBZ2pDLENBQUEsQ0FBQSxLQUFBaXlCLE1BQUEsQ0FBQWoxRCxDQUFBLENBQUE3QyxDQUFBLENBQUEsQ0FBQTZsQyxDQUFBLEdBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLEVBQUEsS0FBQW94QixhQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsS0FBQUUsWUFBQSxDQUFBbjNELENBQUEsQ0FBQSxLQUFBc29DLFNBQUEsQ0FBQTdDLENBQUEsQ0FBQSxJQUFBLENBQUEsaUJBQUEsQ0FBQSxDQUFBQSxDQUFBLENBQUFoa0IsT0FBQSxDQUFBLE9BQUEsQ0FBQSxDQUFBeWtCLENBQUEsQ0FBQVQsQ0FBQSxDQUFBOUcsTUFBQSxFQUFBLENBQUE3dEIsQ0FBQSxDQUFBLENBQUFnTyxDQUFBLENBQUFqYyxDQUFBLENBQUExRyxNQUFBLENBQUEsQ0FBQWtWLE9BQUEsR0FBQUYsT0FBQSxHQUFBMUIsRUFBQSxDQUFBLG1CQUFBLENBQUEsQ0FBQSxLQUFBc29ELFlBQUEsQ0FBQWpuRCxDQUFBLENBQUEsQ0FBQTJiLElBQUEsQ0FBQSxDQUFBLENBQUF0bUIsR0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUFzbUIsSUFBQSxDQUFBNXBCLENBQUEsQ0FBQWtnQixLQUFBLENBQUFtakIsQ0FBQSxDQUFBelosSUFBQSxDQUFBZ1osQ0FBQSxDQUFBcmQsS0FBQSxHQUFBLENBQUEsQ0FBQWppQixHQUFBLENBQUF0RCxDQUFBLENBQUFtZ0IsS0FBQSxDQUFBa2pCLENBQUEsQ0FBQS8vQixHQUFBLENBQUFzL0IsQ0FBQSxDQUFBbGMsTUFBQSxHQUFBLENBQUEsRUFBQUMsUUFBQSxDQUFBaWMsQ0FBQSxDQUFBbHJCLEdBQUEsQ0FBQSxnQkFBQSxDQUFBLENBQUEsRUFBQSxDQUFBLEVBQUEsQ0FBQSxHQUFBaVAsUUFBQSxDQUFBaWMsQ0FBQSxDQUFBbHJCLEdBQUEsQ0FBQSxtQkFBQSxDQUFBLENBQUEsRUFBQSxDQUFBLEVBQUEsQ0FBQSxHQUFBaVAsUUFBQSxDQUFBaWMsQ0FBQSxDQUFBbHJCLEdBQUEsQ0FBQSxXQUFBLENBQUEsQ0FBQSxFQUFBLENBQUEsRUFBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLEtBQUFreUMsT0FBQSxDQUFBcjRCLFFBQUEsQ0FBQSxnQkFBQSxHQUFBLEtBQUE0akMsTUFBQSxDQUFBbjFELENBQUEsQ0FBQTdDLENBQUEsQ0FBQSsxQixDQUFBLENBQUEsQ0FBQSxLQUFBbWhDLFdBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FEQSxDQUNBelEsV0FBQSxDQUFBLHNCQUFBLENBQUEsTUFBQSxDQUFBLENBQUEsQ0FBQSxDQURBLENBQ0FJLFVBQUEsQ0FBQSxvQkFBQS9uQyxDQUFBLENBQUEsQ0FBQSxHQUFBamMsQ0FBQUEsQ0FBQSxDQUFBLENBQUFzbkMsQ0FBQSxDQUFBcnJCLENBQUEsQ0FBQWlFLEtBQUEsQ0FBQWduQixDQUFBLENBQUFqckIsQ0FBQSxDQUFBa0UsS0FBQSxDQUFBLENBQUFscUIsQ0FBQSxDQUFBLEtBQUE2K0QsbUJBQUEsQ0FBQTkwRCxDQUFBLENBQUEsQ0FBQSxNQUFBLE1BQUFtMUQsTUFBQSxDQUFBbDVDLENBQUEsQ0FBQSxLQUFBcTRDLFlBQUEsQ0FBQXIrRCxDQUFBLEVBQUEsQ0FBQSxDQUFBLENBQUEsQ0FEQSxDQUNBZ3VELFVBQUEsQ0FBQSxvQkFBQWhvQyxDQUFBLENBQUEsQ0FBQSxNQUFBLE1BQUFncEIsWUFBQSxDQUFBLEtBQUEya0IsT0FBQSxDQUFBLElBQUEsQ0FBQSxpQkFBQSxFQUFBLEtBQUF3SyxhQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsS0FBQWdCLEtBQUEsQ0FBQW41QyxDQUFBLENBQUEsS0FBQXE0QyxZQUFBLENBQUEsQ0FBQSxLQUFBemUsT0FBQSxDQUFBNTVCLENBQUEsQ0FBQSxLQUFBcTRDLFlBQUEsQ0FBQSxDQUFBLEtBQUFBLFlBQUEsQ0FBQSxJQUFBLENBQUEsS0FBQVksWUFBQSxDQUFBLElBQUEsQ0FBQSxLQUFBYixXQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FEQSxDQUNBRSxrQkFBQSxDQUFBLDZCQUFBLENBQUEsS0FBQVAsV0FBQSxDQUFBLGFBQUEsS0FBQS82RCxPQUFBLENBQUErNkQsV0FBQSxDQUFBLFVBQUEsQ0FBQSxZQUFBLENBQUEsQ0FEQSxDQUNBYyxtQkFBQSxDQUFBLDZCQUFBNzRDLENBQUEsQ0FBQSxDQUFBLEdBQUFqYyxDQUFBQSxDQUFBLENBQUEvSixDQUFBLENBQUFpOUIsQ0FBQSxDQUFBcG1CLENBQUEsQ0FBQTgxQixDQUFBLENBQUEsTUFBQSxlQUFBLEtBQUFveEIsV0FBQSxFQUFBaDBELENBQUEsQ0FBQSxLQUFBNjBELFdBQUEsQ0FBQXR2QyxLQUFBLENBQUF0dkIsQ0FBQSxDQUFBZ21CLENBQUEsQ0FBQXFyQixDQUFBLENBQUEsS0FBQTZrQixhQUFBLENBQUF2aUMsSUFBQSxFQUFBLEtBQUFzckMsWUFBQSxDQUFBLEtBQUFBLFlBQUEsQ0FBQXRyQyxJQUFBLENBQUEsQ0FBQSxDQUFBLEdBQUE1cEIsQ0FBQSxDQUFBLEtBQUE2MEQsV0FBQSxDQUFBbnVDLE1BQUEsQ0FBQXp3QixDQUFBLENBQUFnbUIsQ0FBQSxDQUFBaXJCLENBQUEsQ0FBQSxLQUFBaWxCLGFBQUEsQ0FBQTdvRCxHQUFBLEVBQUEsS0FBQTR4RCxZQUFBLENBQUEsS0FBQUEsWUFBQSxDQUFBNXhELEdBQUEsQ0FBQSxDQUFBLENBQUEsRUFBQTR2QixDQUFBLENBQUFqOUIsQ0FBQSxDQUFBK0osQ0FBQSxDQUFBa3pCLENBQUEsQ0FBQSxDQUFBLEdBQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxFQUFBQSxDQUFBLEdBQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxhQUFBLEtBQUE4Z0MsV0FBQSxHQUFBOWdDLENBQUEsQ0FBQSxFQUFBQSxDQUFBLENBQUEsQ0FBQXBtQixDQUFBLENBQUEsS0FBQWlvRCxTQUFBLEdBQUEsS0FBQUosU0FBQSxFQUFBLENBQUEveEIsQ0FBQSxDQUFBLEtBQUEreEIsU0FBQSxHQUFBemhDLENBQUEsQ0FBQXBtQixDQUFBLENBQUEsS0FBQXVvRCxlQUFBLENBQUF6eUIsQ0FBQSxDQUFBLENBQUEsQ0FEQSxDQUNBMmtCLE9BQUEsQ0FBQSxpQkFBQXRyQyxDQUFBLENBQUFqYyxDQUFBLENBQUEvSixDQUFBLENBQUEsQ0FBQSxHQUFBaTlCLENBQUFBLENBQUEsQ0FBQSxDQUFBMVcsTUFBQSxDQUFBLEtBQUFvdEMsT0FBQSxDQUFBM3RDLENBQUEsQ0FBQSxDQUFBcTVDLFdBQUEsQ0FBQXI1QyxDQUFBLENBQUEvZ0IsS0FBQSxDQUFBLElBQUEsRUFBQSxHQUFBOEUsQ0FBQSxDQUFBQSxDQUFBLENBQUEsS0FBQTlFLEtBQUEsRUFBQSxDQUFBLENBQUEsTUFBQSxNQUFBcTZELGtCQUFBLEtBQUFyaUMsQ0FBQSxDQUFBaDRCLEtBQUEsQ0FBQSxJQUFBLEVBQUEsR0FBQThFLENBQUEsQ0FBQUEsQ0FBQSxDQUFBLEtBQUEyWSxNQUFBLENBQUFzRCxDQUFBLENBQUEsQ0FBQWlYLENBQUEsQ0FBQXZhLE1BQUEsQ0FBQTFpQixDQUFBLEVBQUEsS0FBQTBpQixNQUFBLEVBQUEsRUFBQXVhLENBQUEsQ0FBQSxDQURBLENBQ0FxaUMsa0JBQUEsQ0FBQSw2QkFBQSxDQUFBLE1BQUEsTUFBQXQ4RCxPQUFBLENBQUEwZixNQUFBLEVBQUEsS0FBQTFmLE9BQUEsQ0FBQTBmLE1BQUEsQ0FBQXJoQixNQUFBLENBQUEsQ0FEQSxDQUNBMjlELE1BQUEsQ0FBQSxnQkFBQWg1QyxDQUFBLENBQUFqYyxDQUFBLENBQUEsQ0FBQSxNQUFBLE1BQUFtakMsUUFBQSxDQUFBLE9BQUEsQ0FBQWxuQixDQUFBLENBQUEsS0FBQXNyQyxPQUFBLENBQUF2bkQsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQURBLENBQ0FtMUQsTUFBQSxDQUFBLGdCQUFBbDVDLENBQUEsQ0FBQWpjLENBQUEsQ0FBQS9KLENBQUEsQ0FBQSxDQUFBLEdBQUFpOUIsQ0FBQUEsQ0FBQSxDQUFBcG1CLENBQUEsQ0FBQTgxQixDQUFBLENBQUEsS0FBQTFuQyxLQUFBLEVBQUEsQ0FBQWlDLENBQUEsQ0FBQSxLQUFBd2IsTUFBQSxFQUFBLENBQUEsS0FBQTQ4QyxrQkFBQSxLQUFBem9ELENBQUEsQ0FBQSxLQUFBNkwsTUFBQSxDQUFBM1ksQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQTRpQyxDQUFBLENBQUEsS0FBQWpxQixNQUFBLENBQUEzWSxDQUFBLENBQUEsQ0FBQSxJQUFBLEtBQUEvRyxPQUFBLENBQUEwZixNQUFBLENBQUFyaEIsTUFBQSxFQUFBLEtBQUEyQixPQUFBLENBQUFxNkQsS0FBQSxHQUFBLENBQUEsQ0FBQSxHQUFBcjlELENBQUEsQ0FBQSxJQUFBK0osQ0FBQSxDQUFBbkcsSUFBQSxDQUFBd3dDLEdBQUEsQ0FBQXY5QixDQUFBLENBQUE3VyxDQUFBLENBQUEsQ0FBQTRELElBQUEsQ0FBQXd1QixHQUFBLENBQUF2YixDQUFBLENBQUE3VyxDQUFBLENBQUEsQ0FBQSxDQUFBa0gsQ0FBQSxDQUFBNkMsQ0FBQSxDQUFBLENBQUEvSixDQUFBLEVBQUFBLENBQUEsR0FBQTJzQyxDQUFBLEdBQUExUCxDQUFBLENBQUEsS0FBQWlRLFFBQUEsQ0FBQSxPQUFBLENBQUFsbkIsQ0FBQSxDQUFBLEtBQUFzckMsT0FBQSxDQUFBdm5ELENBQUEsQ0FBQS9KLENBQUEsQ0FBQWtILENBQUEsQ0FBQSxDQUFBLENBQUErMUIsQ0FBQSxHQUFBLENBQUEsQ0FBQSxHQUFBLEtBQUFxaUMsa0JBQUEsR0FBQSxLQUFBNThDLE1BQUEsQ0FBQTNZLENBQUEsQ0FBQS9KLENBQUEsQ0FBQSxDQUFBLEtBQUFpRixLQUFBLENBQUFqRixDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FEQSxDQUNBbS9ELEtBQUEsQ0FBQSxlQUFBbjVDLENBQUEsQ0FBQWpjLENBQUEsQ0FBQSxDQUFBLEtBQUFtakMsUUFBQSxDQUFBLE1BQUEsQ0FBQWxuQixDQUFBLENBQUEsS0FBQXNyQyxPQUFBLENBQUF2bkQsQ0FBQSxDQUFBLEVBQUEsQ0FEQSxDQUNBNjFDLE9BQUEsQ0FBQSxpQkFBQTU1QixDQUFBLENBQUFqYyxDQUFBLENBQUEsQ0FBQSxLQUFBbTBELFdBQUEsRUFBQSxLQUFBQyxhQUFBLEdBQUEsS0FBQVksaUJBQUEsQ0FBQWgxRCxDQUFBLENBQUEsS0FBQW1qQyxRQUFBLENBQUEsUUFBQSxDQUFBbG5CLENBQUEsQ0FBQSxLQUFBc3JDLE9BQUEsQ0FBQXZuRCxDQUFBLENBQUEsQ0FBQSxFQUFBLENBREEsQ0FDQTlFLEtBQUEsQ0FBQSxlQUFBK2dCLENBQUEsQ0FBQSxDQUFBLE1BQUE5akIsQ0FBQUEsU0FBQSxDQUFBYixNQUFBLEVBQUEsS0FBQTJCLE9BQUEsQ0FBQWlDLEtBQUEsQ0FBQSxLQUFBbTZELGVBQUEsQ0FBQXA1QyxDQUFBLENBQUEsQ0FBQSxLQUFBaTFDLGFBQUEsRUFBQSxDQUFBLEtBQUFyYixPQUFBLENBQUEsSUFBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLElBQUEsRUFBQSxFQUFBLEtBQUFQLE1BQUEsRUFBQSxDQUFBLENBREEsQ0FDQTM4QixNQUFBLENBQUEsZ0JBQUEzWSxDQUFBLENBQUEvSixDQUFBLENBQUEsQ0FBQSxHQUFBaTlCLENBQUFBLENBQUEsQ0FBQXBtQixDQUFBLENBQUE4MUIsQ0FBQSxDQUFBLEdBQUF6cUMsU0FBQSxDQUFBYixNQUFBLENBQUEsQ0FBQSxDQUFBLE1BQUEsTUFBQTJCLE9BQUEsQ0FBQTBmLE1BQUEsQ0FBQTNZLENBQUEsRUFBQSxLQUFBcTFELGVBQUEsQ0FBQXAvRCxDQUFBLENBQUEsQ0FBQSxLQUFBaTdELGFBQUEsRUFBQSxDQUFBLEtBQUFyYixPQUFBLENBQUEsSUFBQSxDQUFBNzFDLENBQUEsQ0FBQSxDQUFBLElBQUEsRUFBQSxDQUFBLEdBQUEsQ0FBQTdILFNBQUEsQ0FBQWIsTUFBQSxDQUFBLE1BQUEsTUFBQWsrRCxPQUFBLEVBQUEsQ0FBQSxHQUFBLENBQUF2NUMsQ0FBQSxDQUFBdmlCLE9BQUEsQ0FBQXZCLFNBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLE1BQUEsTUFBQW85RCxrQkFBQSxHQUFBLEtBQUFDLE9BQUEsQ0FBQXgxRCxDQUFBLENBQUEsQ0FBQSxLQUFBOUUsS0FBQSxFQUFBLENBQUEsSUFBQWc0QixDQUFBLENBQUEsS0FBQWo2QixPQUFBLENBQUEwZixNQUFBLENBQUE3TCxDQUFBLENBQUEzVSxTQUFBLENBQUEsQ0FBQSxDQUFBLENBQUF5cUMsQ0FBQSxDQUFBLENBQUEsQ0FBQTFQLENBQUEsQ0FBQTU3QixNQUFBLENBQUFzckMsQ0FBQSxDQUFBQSxDQUFBLEVBQUEsQ0FBQSxFQUFBMVAsQ0FBQSxDQUFBMFAsQ0FBQSxDQUFBLENBQUEsS0FBQXl5QixlQUFBLENBQUF2b0QsQ0FBQSxDQUFBODFCLENBQUEsQ0FBQSxDQUFBLENBQUEsS0FBQWlULE9BQUEsQ0FBQSxJQUFBLENBQUFqVCxDQUFBLENBQUEsQ0FBQSxDQUFBLEtBQUFzdUIsYUFBQSxHQUFBLENBREEsQ0FDQS9yQixVQUFBLENBQUEsb0JBQUFubEMsQ0FBQSxDQUFBL0osQ0FBQSxDQUFBLENBQUEsR0FBQWk5QixDQUFBQSxDQUFBLENBQUFwbUIsQ0FBQSxDQUFBLENBQUEsQ0FBQSxPQUFBLFVBQUE5TSxDQUFBLEVBQUEsS0FBQS9HLE9BQUEsQ0FBQXE2RCxLQUFBLEdBQUEsQ0FBQSxDQUFBLEdBQUEsUUFBQXI5RCxDQUFBLEVBQUEsS0FBQWdELE9BQUEsQ0FBQWlDLEtBQUEsQ0FBQSxLQUFBczZELE9BQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxLQUFBdjhELE9BQUEsQ0FBQTBmLE1BQUEsQ0FBQSxJQUFBLEVBQUEsUUFBQTFpQixDQUFBLEdBQUEsS0FBQWdELE9BQUEsQ0FBQWlDLEtBQUEsQ0FBQSxLQUFBczZELE9BQUEsQ0FBQSxLQUFBdjhELE9BQUEsQ0FBQTBmLE1BQUEsQ0FBQXJoQixNQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsS0FBQTJCLE9BQUEsQ0FBQTBmLE1BQUEsQ0FBQSxJQUFBLENBQUEsRUFBQXNELENBQUEsQ0FBQXZpQixPQUFBLENBQUEsS0FBQVQsT0FBQSxDQUFBMGYsTUFBQSxJQUFBN0wsQ0FBQSxDQUFBLEtBQUE3VCxPQUFBLENBQUEwZixNQUFBLENBQUFyaEIsTUFBQSxDQUFBLENBQUEsS0FBQXFzQyxNQUFBLENBQUEzakMsQ0FBQSxDQUFBL0osQ0FBQSxDQUFBLENBQUErSixDQUFBLEVBQUEsSUFBQSxhQUFBLENBQUEsS0FBQXUwRCxrQkFBQSxHQUFBLEtBQUF0dkIsWUFBQSxDQUFBLHlDQUFBLEVBQUFRLFNBQUEsQ0FBQSxhQUFBLEtBQUF1dUIsV0FBQSxDQUFBLENBQUEsS0FBQTlDLGFBQUEsRUFBQSxDQUFBLEtBQUFqNEQsT0FBQSxDQUFBcTZELEtBQUEsRUFBQSxLQUFBbUMsYUFBQSxDQUFBeC9ELENBQUEsQ0FBQSxDQUFBLEtBQUEyekQsT0FBQSxDQUFBbHlDLEdBQUEsQ0FBQSxlQUFBemhCLENBQUEsQ0FBQSxRQUFBLENBQUEsTUFBQSxDQUFBLEVBQUEsQ0FBQSxDQUFBLE1BQUEsSUFBQSxPQUFBLENBQUEsS0FBQW8rRCxXQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsS0FBQW5ELGFBQUEsRUFBQSxDQUFBLEtBQUFyYixPQUFBLENBQUEsSUFBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLEtBQUF3ZSxXQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsTUFBQSxJQUFBLFFBQUEsQ0FBQSxJQUFBLEtBQUFBLFdBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxLQUFBbkQsYUFBQSxFQUFBLENBQUFoK0IsQ0FBQSxDQUFBcG1CLENBQUEsQ0FBQSxDQUFBLENBQUFvbUIsQ0FBQSxFQUFBLENBQUEsQ0FBQUEsQ0FBQSxFQUFBLEVBQUEsS0FBQTJpQixPQUFBLENBQUEsSUFBQSxDQUFBM2lCLENBQUEsRUFBQSxDQUFBLEtBQUFtaEMsV0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLE1BQUEsSUFBQSxNQUFBLENBQUEsSUFBQSxLQUFBLENBQUEsSUFBQSxLQUFBLENBQUEsS0FBQUEsV0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLEtBQUFHLGdCQUFBLEVBQUEsQ0FBQSxLQUFBdEQsYUFBQSxFQUFBLENBQUEsS0FBQW1ELFdBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxNQUFBLElBQUEsT0FBQSxDQUFBLEtBQUFBLFdBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxLQUFBbnhCLFFBQUEsRUFBQSxDQUFBLEtBQUFteEIsV0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FEQSxDQUNBdnZCLGtCQUFBLENBQUEsNEJBQUE3b0IsQ0FBQSxDQUFBLENBQUEsS0FBQTBuQixNQUFBLENBQUExbkIsQ0FBQSxFQUFBLEtBQUFxcEIsWUFBQSxDQUFBLElBQUEsQ0FBQSxtQkFBQSxDQUFBLENBQUEsQ0FBQXJwQixDQUFBLENBQUEsQ0FBQSxDQURBLENBQ0FxNUIsTUFBQSxDQUFBLGlCQUFBLENBQUEsR0FBQXI1QixDQUFBQSxDQUFBLENBQUEsS0FBQWhqQixPQUFBLENBQUFpQyxLQUFBLENBQUEsTUFBQStnQixDQUFBQSxDQUFBLENBQUEsS0FBQW81QyxlQUFBLENBQUFwNUMsQ0FBQSxDQUFBLENBQUEsQ0FEQSxDQUNBdTVDLE9BQUEsQ0FBQSxpQkFBQXY1QyxDQUFBLENBQUEsQ0FBQSxHQUFBamMsQ0FBQUEsQ0FBQSxDQUFBL0osQ0FBQSxDQUFBaTlCLENBQUEsQ0FBQSxHQUFBLzZCLFNBQUEsQ0FBQWIsTUFBQSxDQUFBLE1BQUEwSSxDQUFBQSxDQUFBLENBQUEsS0FBQS9HLE9BQUEsQ0FBQTBmLE1BQUEsQ0FBQXNELENBQUEsQ0FBQSxDQUFBamMsQ0FBQSxDQUFBLEtBQUFxMUQsZUFBQSxDQUFBcjFELENBQUEsQ0FBQSxDQUFBLEdBQUEsS0FBQXUxRCxrQkFBQSxFQUFBLENBQUEsQ0FBQSxJQUFBdC9ELENBQUEsQ0FBQSxLQUFBZ0QsT0FBQSxDQUFBMGYsTUFBQSxDQUFBdGtCLEtBQUEsRUFBQSxDQUFBNitCLENBQUEsQ0FBQSxDQUFBLENBQUFqOUIsQ0FBQSxDQUFBcUIsTUFBQSxDQUFBNDdCLENBQUEsQ0FBQUEsQ0FBQSxFQUFBLENBQUEsRUFBQWo5QixDQUFBLENBQUFpOUIsQ0FBQSxDQUFBLENBQUEsS0FBQW1pQyxlQUFBLENBQUFwL0QsQ0FBQSxDQUFBaTlCLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxNQUFBajlCLENBQUFBLENBQUEsQ0FBQSxPQUFBLEVBQUEsQ0FBQSxDQURBLENBQ0FvL0QsZUFBQSxDQUFBLHlCQUFBcDVDLENBQUEsQ0FBQSxDQUFBLEdBQUEsS0FBQTA0QyxTQUFBLElBQUExNEMsQ0FBQSxDQUFBLE1BQUEsTUFBQTA0QyxTQUFBLEVBQUEsQ0FBQSxHQUFBMTRDLENBQUEsRUFBQSxLQUFBODRDLFNBQUEsRUFBQSxDQUFBLE1BQUEsTUFBQUEsU0FBQSxFQUFBLENBQUEsR0FBQS8wRCxDQUFBQSxDQUFBLENBQUEsS0FBQS9HLE9BQUEsQ0FBQTR4QixJQUFBLENBQUEsQ0FBQSxDQUFBLEtBQUE1eEIsT0FBQSxDQUFBNHhCLElBQUEsQ0FBQSxDQUFBLENBQUE1MEIsQ0FBQSxDQUFBLENBQUFnbUIsQ0FBQSxDQUFBLEtBQUEwNEMsU0FBQSxFQUFBLEVBQUEzMEQsQ0FBQSxDQUFBa3pCLENBQUEsQ0FBQWpYLENBQUEsQ0FBQWhtQixDQUFBLENBQUEsTUFBQSxHQUFBNEQsSUFBQSxDQUFBd3NDLEdBQUEsQ0FBQXB3QyxDQUFBLENBQUEsRUFBQStKLENBQUEsR0FBQWt6QixDQUFBLEVBQUFqOUIsQ0FBQSxDQUFBLENBQUEsQ0FBQStKLENBQUEsQ0FBQSxDQUFBQSxDQUFBLEVBQUE2bEIsVUFBQSxDQUFBcU4sQ0FBQSxDQUFBbStCLE9BQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBREEsQ0FDQW1ELGdCQUFBLENBQUEsMkJBQUEsQ0FBQSxHQUFBdjRDLENBQUFBLENBQUEsQ0FBQSxLQUFBaGpCLE9BQUEsQ0FBQW92QixHQUFBLENBQUFyb0IsQ0FBQSxDQUFBLEtBQUEyMEQsU0FBQSxFQUFBLENBQUExK0QsQ0FBQSxDQUFBLEtBQUFnRCxPQUFBLENBQUE0eEIsSUFBQSxDQUFBcUksQ0FBQSxDQUFBcjVCLElBQUEsQ0FBQStyQixLQUFBLENBQUEsQ0FBQTNKLENBQUEsQ0FBQWpjLENBQUEsRUFBQS9KLENBQUEsRUFBQUEsQ0FBQSxDQUFBZ21CLENBQUEsQ0FBQWlYLENBQUEsQ0FBQWx6QixDQUFBLENBQUFpYyxDQUFBLENBQUEsS0FBQWhqQixPQUFBLENBQUFvdkIsR0FBQSxHQUFBcE0sQ0FBQSxFQUFBaG1CLENBQUEsQ0FBQSxDQUFBLEtBQUFveUIsR0FBQSxDQUFBeEMsVUFBQSxDQUFBNUosQ0FBQSxDQUFBbzFDLE9BQUEsQ0FBQSxLQUFBcUUsVUFBQSxFQUFBLENBQUEsQ0FBQSxDQUFBLENBREEsQ0FDQUEsVUFBQSxDQUFBLHFCQUFBLENBQUEsR0FBQXo1QyxDQUFBQSxDQUFBLENBQUEsS0FBQTA1QyxZQUFBLENBQUEsS0FBQTE4RCxPQUFBLENBQUE0eEIsSUFBQSxDQUFBLENBQUEsTUFBQSxRQUFBLEtBQUE1eEIsT0FBQSxDQUFBb3hDLEdBQUEsR0FBQXB1QixDQUFBLENBQUFwaUIsSUFBQSxDQUFBd3VCLEdBQUEsQ0FBQXBNLENBQUEsQ0FBQSxLQUFBMDVDLFlBQUEsQ0FBQSxLQUFBMThELE9BQUEsQ0FBQW94QyxHQUFBLENBQUEsQ0FBQSxFQUFBcHVCLENBQUEsQ0FBQSxDQURBLENBQ0EwNUMsWUFBQSxDQUFBLHNCQUFBMTVDLENBQUEsQ0FBQSxDQUFBLEdBQUFqYyxDQUFBQSxDQUFBLENBQUEsR0FBQWljLENBQUEsQ0FBQWhtQixDQUFBLENBQUErSixDQUFBLENBQUFwTCxPQUFBLENBQUEsR0FBQSxDQUFBLENBQUEsTUFBQSxDQUFBLENBQUEsR0FBQXFCLENBQUEsQ0FBQSxDQUFBLENBQUErSixDQUFBLENBQUExSSxNQUFBLENBQUFyQixDQUFBLENBQUEsQ0FBQSxDQUFBLENBREEsQ0FDQTArRCxTQUFBLENBQUEsb0JBQUEsQ0FBQSxNQUFBLE1BQUExN0QsT0FBQSxDQUFBb3hDLEdBQUEsQ0FBQSxDQURBLENBQ0EwcUIsU0FBQSxDQUFBLG9CQUFBLENBQUEsTUFBQSxNQUFBMXNDLEdBQUEsQ0FBQSxDQURBLENBQ0FvdEMsYUFBQSxDQUFBLHVCQUFBeDVDLENBQUEsQ0FBQSxDQUFBLGFBQUFBLENBQUEsRUFBQSxLQUFBcTNDLEtBQUEsQ0FBQTU3QyxHQUFBLENBQUEsQ0FBQTZOLEtBQUEsQ0FBQSxFQUFBLENBQUFxRSxJQUFBLENBQUEsRUFBQSxDQUFBLENBQUEsQ0FBQSxlQUFBM04sQ0FBQSxFQUFBLEtBQUFxM0MsS0FBQSxDQUFBNTdDLEdBQUEsQ0FBQSxDQUFBZ1AsTUFBQSxDQUFBLEVBQUEsQ0FBQXNsQixNQUFBLENBQUEsRUFBQSxDQUFBLENBQUEsQ0FBQSxDQURBLENBQ0FrbEIsYUFBQSxDQUFBLHdCQUFBLENBQUEsR0FBQWx4RCxDQUFBQSxDQUFBLENBQUEvSixDQUFBLENBQUFpOUIsQ0FBQSxDQUFBcG1CLENBQUEsQ0FBQTgxQixDQUFBLENBQUF6bEMsQ0FBQSxDQUFBLEtBQUFsRSxPQUFBLENBQUFxNkQsS0FBQSxDQUFBdHdCLENBQUEsQ0FBQSxLQUFBL3BDLE9BQUEsQ0FBQW9xQyxDQUFBLENBQUEsSUFBQSxDQUFBcDFCLENBQUEsQ0FBQSxLQUFBb21ELFdBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQXJ4QixDQUFBLENBQUF6VSxPQUFBLENBQUFtWCxDQUFBLENBQUEsRUFBQSxDQUFBLEtBQUE2dkIsa0JBQUEsR0FBQSxLQUFBM0wsT0FBQSxDQUFBN3hELElBQUEsQ0FBQSxTQUFBbTdCLENBQUEsQ0FBQSxDQUFBajlCLENBQUEsQ0FBQSxLQUFBLENBQUFvdEMsQ0FBQSxDQUFBMXFCLE1BQUEsQ0FBQXVhLENBQUEsRUFBQW1RLENBQUEsQ0FBQXN4QixTQUFBLEVBQUEsR0FBQXR4QixDQUFBLENBQUEweEIsU0FBQSxHQUFBMXhCLENBQUEsQ0FBQXN4QixTQUFBLEVBQUEsQ0FBQSxDQUFBLENBQUFqdkIsQ0FBQSxDQUFBLGVBQUFyQyxDQUFBLENBQUEyd0IsV0FBQSxDQUFBLE1BQUEsQ0FBQSxRQUFBLENBQUEsQ0FBQS85RCxDQUFBLENBQUEsR0FBQSxDQUFBZ21CLENBQUEsQ0FBQSxJQUFBLENBQUEsQ0FBQXRGLElBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxFQUFBMUksQ0FBQSxDQUFBLFNBQUEsQ0FBQSxLQUFBLEVBQUF5M0IsQ0FBQSxDQUFBMUMsQ0FBQSxDQUFBelUsT0FBQSxDQUFBLENBQUE4VSxDQUFBLENBQUFwcUMsT0FBQSxDQUFBcTZELEtBQUEsR0FBQSxDQUFBLENBQUEsR0FBQSxlQUFBandCLENBQUEsQ0FBQTJ3QixXQUFBLEVBQUEsSUFBQTlnQyxDQUFBLEVBQUFtUSxDQUFBLENBQUFpd0IsS0FBQSxDQUFBMzhDLElBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxFQUFBMUksQ0FBQSxDQUFBLFNBQUEsQ0FBQSxLQUFBLEVBQUEsQ0FBQTJiLElBQUEsQ0FBQTN6QixDQUFBLENBQUEsR0FBQSxDQUFBLENBQUErc0MsQ0FBQSxDQUFBelUsT0FBQSxDQUFBLENBQUEsSUFBQTJFLENBQUEsRUFBQW1RLENBQUEsQ0FBQWl3QixLQUFBLENBQUFybEQsQ0FBQSxDQUFBLFNBQUEsQ0FBQSxLQUFBLEVBQUEsQ0FBQXNYLEtBQUEsQ0FBQXR2QixDQUFBLENBQUErSixDQUFBLENBQUEsR0FBQSxDQUFBLENBQUEsQ0FBQTBQLEtBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQWliLFFBQUEsQ0FBQXFZLENBQUEsQ0FBQXpVLE9BQUEsQ0FBQSxDQUFBLEdBQUEsSUFBQTJFLENBQUEsRUFBQW1RLENBQUEsQ0FBQWl3QixLQUFBLENBQUEzOEMsSUFBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLEVBQUExSSxDQUFBLENBQUEsU0FBQSxDQUFBLEtBQUEsRUFBQSxDQUFBKzlCLE1BQUEsQ0FBQS8xQyxDQUFBLENBQUEsR0FBQSxDQUFBLENBQUErc0MsQ0FBQSxDQUFBelUsT0FBQSxDQUFBLENBQUEsSUFBQTJFLENBQUEsRUFBQW1RLENBQUEsQ0FBQWl3QixLQUFBLENBQUFybEQsQ0FBQSxDQUFBLFNBQUEsQ0FBQSxLQUFBLEVBQUEsQ0FBQXlZLE1BQUEsQ0FBQXp3QixDQUFBLENBQUErSixDQUFBLENBQUEsR0FBQSxDQUFBLENBQUEsQ0FBQTBQLEtBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQWliLFFBQUEsQ0FBQXFZLENBQUEsQ0FBQXpVLE9BQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBdnVCLENBQUEsQ0FBQS9KLENBQUEsQ0FBQSxDQUFBLENBQUEsRUFBQWk5QixDQUFBLENBQUEsS0FBQWg0QixLQUFBLEVBQUEsQ0FBQTRSLENBQUEsQ0FBQSxLQUFBNm5ELFNBQUEsRUFBQSxDQUFBL3hCLENBQUEsQ0FBQSxLQUFBbXlCLFNBQUEsRUFBQSxDQUFBOStELENBQUEsQ0FBQTJzQyxDQUFBLEdBQUE5MUIsQ0FBQSxDQUFBLEtBQUEsQ0FBQW9tQixDQUFBLENBQUFwbUIsQ0FBQSxHQUFBODFCLENBQUEsQ0FBQTkxQixDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQTQ0QixDQUFBLENBQUEsZUFBQSxLQUFBc3VCLFdBQUEsQ0FBQSxNQUFBLENBQUEsUUFBQSxDQUFBLENBQUEvOUQsQ0FBQSxDQUFBLEdBQUEsQ0FBQSxLQUFBdW1CLE1BQUEsQ0FBQTdGLElBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxFQUFBMUksQ0FBQSxDQUFBLFNBQUEsQ0FBQSxLQUFBLEVBQUF5M0IsQ0FBQSxDQUFBMUMsQ0FBQSxDQUFBelUsT0FBQSxDQUFBLENBQUEsUUFBQXB4QixDQUFBLEVBQUEsZUFBQSxLQUFBNjJELFdBQUEsRUFBQSxLQUFBVixLQUFBLENBQUEzOEMsSUFBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLEVBQUExSSxDQUFBLENBQUEsU0FBQSxDQUFBLEtBQUEsRUFBQSxDQUFBc1gsS0FBQSxDQUFBdHZCLENBQUEsQ0FBQSxHQUFBLENBQUEsQ0FBQStzQyxDQUFBLENBQUF6VSxPQUFBLENBQUEsQ0FBQSxRQUFBcHhCLENBQUEsRUFBQSxlQUFBLEtBQUE2MkQsV0FBQSxFQUFBLEtBQUFWLEtBQUEsQ0FBQTM4QyxJQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsRUFBQTFJLENBQUEsQ0FBQSxTQUFBLENBQUEsS0FBQSxFQUFBLENBQUFzWCxLQUFBLENBQUEsSUFBQXR2QixDQUFBLENBQUEsR0FBQSxDQUFBLENBQUErc0MsQ0FBQSxDQUFBelUsT0FBQSxDQUFBLENBQUEsUUFBQXB4QixDQUFBLEVBQUEsYUFBQSxLQUFBNjJELFdBQUEsRUFBQSxLQUFBVixLQUFBLENBQUEzOEMsSUFBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLEVBQUExSSxDQUFBLENBQUEsU0FBQSxDQUFBLEtBQUEsRUFBQSxDQUFBeVksTUFBQSxDQUFBendCLENBQUEsQ0FBQSxHQUFBLENBQUEsQ0FBQStzQyxDQUFBLENBQUF6VSxPQUFBLENBQUEsQ0FBQSxRQUFBcHhCLENBQUEsRUFBQSxhQUFBLEtBQUE2MkQsV0FBQSxFQUFBLEtBQUFWLEtBQUEsQ0FBQTM4QyxJQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsRUFBQTFJLENBQUEsQ0FBQSxTQUFBLENBQUEsS0FBQSxFQUFBLENBQUF5WSxNQUFBLENBQUEsSUFBQXp3QixDQUFBLENBQUEsR0FBQSxDQUFBLENBQUErc0MsQ0FBQSxDQUFBelUsT0FBQSxDQUFBLEVBQUEsQ0FEQSxDQUNBcW1DLGFBQUEsQ0FBQSxDQUFBcmlCLE9BQUEsQ0FBQSxpQkFBQXZ5QyxDQUFBLENBQUEsQ0FBQSxHQUFBL0osQ0FBQUEsQ0FBQSxDQUFBaTlCLENBQUEsQ0FBQXBtQixDQUFBLENBQUE4MUIsQ0FBQSxDQUFBemxDLENBQUEsQ0FBQThlLENBQUEsQ0FBQWpjLENBQUEsQ0FBQTFHLE1BQUEsQ0FBQSxDQUFBbWMsSUFBQSxDQUFBLHdCQUFBLENBQUEsQ0FBQSxPQUFBelYsQ0FBQSxDQUFBdWdCLE9BQUEsRUFBQSxJQUFBdEUsQ0FBQUEsQ0FBQSxDQUFBbW5CLEVBQUEsQ0FBQTdpQixPQUFBLENBQUF3dkIsSUFBQSxDQUFBLElBQUE5ekIsQ0FBQUEsQ0FBQSxDQUFBbW5CLEVBQUEsQ0FBQTdpQixPQUFBLENBQUFxdkIsR0FBQSxDQUFBLElBQUEzekIsQ0FBQUEsQ0FBQSxDQUFBbW5CLEVBQUEsQ0FBQTdpQixPQUFBLENBQUEydkIsT0FBQSxDQUFBLElBQUFqMEIsQ0FBQUEsQ0FBQSxDQUFBbW5CLEVBQUEsQ0FBQTdpQixPQUFBLENBQUEwdkIsU0FBQSxDQUFBLElBQUFoMEIsQ0FBQUEsQ0FBQSxDQUFBbW5CLEVBQUEsQ0FBQTdpQixPQUFBLENBQUFnd0IsRUFBQSxDQUFBLElBQUF0MEIsQ0FBQUEsQ0FBQSxDQUFBbW5CLEVBQUEsQ0FBQTdpQixPQUFBLENBQUE2dkIsS0FBQSxDQUFBLElBQUFuMEIsQ0FBQUEsQ0FBQSxDQUFBbW5CLEVBQUEsQ0FBQTdpQixPQUFBLENBQUFvdkIsSUFBQSxDQUFBLElBQUExekIsQ0FBQUEsQ0FBQSxDQUFBbW5CLEVBQUEsQ0FBQTdpQixPQUFBLENBQUF5dkIsSUFBQSxDQUFBLEdBQUFod0MsQ0FBQSxDQUFBNGQsY0FBQSxHQUFBLENBQUEsS0FBQXUyQyxXQUFBLEdBQUEsS0FBQUEsV0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLEtBQUExdUIsU0FBQSxDQUFBeHBCLENBQUEsQ0FBQWpjLENBQUEsQ0FBQTFHLE1BQUEsQ0FBQSxDQUFBLElBQUEsQ0FBQSxpQkFBQSxDQUFBLENBQUFyRCxDQUFBLENBQUEsS0FBQWcvRCxNQUFBLENBQUFqMUQsQ0FBQSxDQUFBN0MsQ0FBQSxDQUFBLENBQUFsSCxDQUFBLEdBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxPQUFBLENBQUEsT0FBQTJzQyxDQUFBLENBQUEsS0FBQTNwQyxPQUFBLENBQUE0eEIsSUFBQSxDQUFBcUksQ0FBQSxDQUFBcG1CLENBQUEsQ0FBQSxLQUFBeW9ELGtCQUFBLEdBQUEsS0FBQTU4QyxNQUFBLENBQUF4YixDQUFBLENBQUEsQ0FBQSxLQUFBakMsS0FBQSxFQUFBLENBQUE4RSxDQUFBLENBQUF1Z0IsT0FBQSxFQUFBLElBQUF0RSxDQUFBQSxDQUFBLENBQUFtbkIsRUFBQSxDQUFBN2lCLE9BQUEsQ0FBQXd2QixJQUFBLENBQUFqakMsQ0FBQSxDQUFBLEtBQUE2bkQsU0FBQSxFQUFBLENBQUEsTUFBQSxJQUFBMTRDLENBQUFBLENBQUEsQ0FBQW1uQixFQUFBLENBQUE3aUIsT0FBQSxDQUFBcXZCLEdBQUEsQ0FBQTlpQyxDQUFBLENBQUEsS0FBQWlvRCxTQUFBLEVBQUEsQ0FBQSxNQUFBLElBQUE5NEMsQ0FBQUEsQ0FBQSxDQUFBbW5CLEVBQUEsQ0FBQTdpQixPQUFBLENBQUEydkIsT0FBQSxDQUFBcGpDLENBQUEsQ0FBQSxLQUFBdW9ELGVBQUEsQ0FBQW5pQyxDQUFBLENBQUEsQ0FBQSxLQUFBNmhDLFNBQUEsR0FBQSxLQUFBSixTQUFBLEVBQUEsRUFBQSxLQUFBVCxRQUFBLENBQUEsQ0FBQSxNQUFBLElBQUFqNEMsQ0FBQUEsQ0FBQSxDQUFBbW5CLEVBQUEsQ0FBQTdpQixPQUFBLENBQUEwdkIsU0FBQSxDQUFBbmpDLENBQUEsQ0FBQSxLQUFBdW9ELGVBQUEsQ0FBQW5pQyxDQUFBLENBQUEsQ0FBQSxLQUFBNmhDLFNBQUEsR0FBQSxLQUFBSixTQUFBLEVBQUEsRUFBQSxLQUFBVCxRQUFBLENBQUEsQ0FBQSxNQUFBLElBQUFqNEMsQ0FBQUEsQ0FBQSxDQUFBbW5CLEVBQUEsQ0FBQTdpQixPQUFBLENBQUFnd0IsRUFBQSxDQUFBLElBQUF0MEIsQ0FBQUEsQ0FBQSxDQUFBbW5CLEVBQUEsQ0FBQTdpQixPQUFBLENBQUE2dkIsS0FBQSxDQUFBLEdBQUFsZCxDQUFBLEdBQUEsS0FBQTZoQyxTQUFBLEVBQUEsQ0FBQSxPQUFBam9ELENBQUEsQ0FBQSxLQUFBdW9ELGVBQUEsQ0FBQW5pQyxDQUFBLENBQUEwUCxDQUFBLENBQUEsQ0FBQSxNQUFBLElBQUEzbUIsQ0FBQUEsQ0FBQSxDQUFBbW5CLEVBQUEsQ0FBQTdpQixPQUFBLENBQUFvdkIsSUFBQSxDQUFBLElBQUExekIsQ0FBQUEsQ0FBQSxDQUFBbW5CLEVBQUEsQ0FBQTdpQixPQUFBLENBQUF5dkIsSUFBQSxDQUFBLEdBQUE5YyxDQUFBLEdBQUEsS0FBQXloQyxTQUFBLEVBQUEsQ0FBQSxPQUFBN25ELENBQUEsQ0FBQSxLQUFBdW9ELGVBQUEsQ0FBQW5pQyxDQUFBLENBQUEwUCxDQUFBLENBQUEsQ0FBQSxDQUFBLEtBQUF1eUIsTUFBQSxDQUFBbjFELENBQUEsQ0FBQTdDLENBQUEsQ0FBQTJQLENBQUEsRUFBQSxDQUFBLENBQUFzc0MsS0FBQSxDQUFBLGVBQUFwNUMsQ0FBQSxDQUFBLENBQUEsR0FBQS9KLENBQUFBLENBQUEsQ0FBQWdtQixDQUFBLENBQUFqYyxDQUFBLENBQUExRyxNQUFBLENBQUEsQ0FBQW1jLElBQUEsQ0FBQSx3QkFBQSxDQUFBLENBQUEsS0FBQTArQyxXQUFBLEdBQUEsS0FBQUEsV0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLEtBQUFpQixLQUFBLENBQUFwMUQsQ0FBQSxDQUFBL0osQ0FBQSxDQUFBLENBQUEsS0FBQTQvQyxPQUFBLENBQUE3MUMsQ0FBQSxDQUFBL0osQ0FBQSxDQUFBLENBQUEsS0FBQWd2QyxZQUFBLENBQUFocEIsQ0FBQSxDQUFBamMsQ0FBQSxDQUFBMUcsTUFBQSxDQUFBLENBQUEsSUFBQSxDQUFBLGlCQUFBLENBQUEsRUFBQSxDQUFBLENBREEsQ0FBQSxDQUFBLENBQ0EyaUIsQ0FBQSxDQUFBcW5CLE1BQUEsQ0FBQSxhQUFBLENBQUFybkIsQ0FBQSxDQUFBbW5CLEVBQUEsQ0FBQWloQixLQUFBLENBQUEsQ0FBQXh0RCxPQUFBLENBQUEsUUFBQSxDQUFBZ3RDLGlCQUFBLENBQUEsTUFBQSxDQUFBcDJCLEtBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQXhVLE9BQUEsQ0FBQSxDQUFBOHFCLFFBQUEsQ0FBQSxRQUFBLENBQUF3Z0MsSUFBQSxDQUFBLENBQUEsQ0FBQSxDQUFBcVIsV0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBblIsV0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBbkksTUFBQSxDQUFBLE1BQUEsQ0FBQW9JLFFBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQW1SLFdBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQUMsb0JBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQUMsZUFBQSxDQUFBLENBQUEsQ0FBQSxDQUFBcFIsSUFBQSxDQUFBLENBQUEsQ0FBQSxDQUFBbm9DLE1BQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQW9vQyxNQUFBLENBQUEsVUFBQSxDQUFBNVIsS0FBQSxDQUFBLEtBQUEsQ0FBQTNwQixPQUFBLENBQUEsQ0FBQSxDQUFBLENBQUErK0IsV0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBckQsTUFBQSxDQUFBLENBQUEsQ0FBQSxDQUFBRSxNQUFBLENBQUEsQ0FBQSxDQUFBLENBQUFDLGlCQUFBLENBQUEsRUFBQSxDQUFBQyxXQUFBLENBQUEsRUFBQSxDQUFBamtELEtBQUEsQ0FBQSxTQUFBLENBQUFxdUQsU0FBQSxDQUFBLFdBQUEsQ0FBQS9pQixNQUFBLENBQUEsR0FBQSxDQUFBMEUsUUFBQSxDQUFBLElBQUEsQ0FBQThrQixVQUFBLENBQUEsSUFBQSxDQUFBbmhCLE1BQUEsQ0FBQSxJQUFBLENBQUEyYSxVQUFBLENBQUEsSUFBQSxDQUFBQyxHQUFBLENBQUEsSUFBQSxDQUFBQyxJQUFBLENBQUEsSUFBQSxDQUFBdUcsT0FBQSxDQUFBLElBQUEsQ0FBQWxtRCxNQUFBLENBQUEsSUFBQSxDQUFBalgsSUFBQSxDQUFBLElBQUEsQ0FBQXVPLEtBQUEsQ0FBQSxJQUFBLENBQUFzUCxJQUFBLENBQUEsSUFBQSxDQUFBdS9DLE1BQUEsQ0FBQSxJQUFBLENBQUEsQ0FBQUMsV0FBQSxDQUFBLHFCQUFBbDZDLENBQUEsQ0FBQWpjLENBQUEsQ0FBQS9KLENBQUEsQ0FBQSxDQUFBLE1BQUFnbUIsQ0FBQUEsQ0FBQSxFQUFBamMsQ0FBQSxFQUFBQSxDQUFBLENBQUEvSixDQUFBLENBQUFnbUIsQ0FBQSxDQUFBLENBQUEsQ0FBQW02QyxXQUFBLENBQUEscUJBQUFuNkMsQ0FBQSxDQUFBLENBQUEsTUFBQSxjQUFBamIsSUFBQSxDQUFBaWIsQ0FBQSxDQUFBdkUsR0FBQSxDQUFBLE9BQUEsQ0FBQSxHQUFBLG9CQUFBMVcsSUFBQSxDQUFBaWIsQ0FBQSxDQUFBdkUsR0FBQSxDQUFBLFNBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBbXRCLE9BQUEsQ0FBQSxrQkFBQSxDQUFBLEtBQUEwakIsY0FBQSxDQUFBLEVBQUEsQ0FBQSxLQUFBOWlCLFNBQUEsQ0FBQSxhQUFBLENBQUEsQ0FBQSxLQUFBMkosT0FBQSxFQUFBLENBQUEsS0FBQXRULE1BQUEsQ0FBQSxLQUFBbUgsT0FBQSxDQUFBbkgsTUFBQSxFQUFBLENBQUEsS0FBQSttQixVQUFBLEVBQUEsQ0FBQSxLQUFBNEMsbUJBQUEsRUFBQSxDQUFBLEtBQUFoNEMsS0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQTAzQixVQUFBLENBQUEsb0JBQUFscEIsQ0FBQSxDQUFBamMsQ0FBQSxDQUFBLENBQUEsS0FBQTJqQyxNQUFBLENBQUExbkIsQ0FBQSxDQUFBamMsQ0FBQSxFQUFBLFdBQUFpYyxDQUFBLEVBQUEsS0FBQXdwQyxtQkFBQSxFQUFBLENBQUEsQ0FBQSxDQUFBQSxtQkFBQSxDQUFBLDhCQUFBLENBQUEsR0FBQXpsRCxDQUFBQSxDQUFBLENBQUEsSUFBQSxDQUFBLEtBQUFpbEMsWUFBQSxDQUFBLEtBQUFoQyxPQUFBLENBQUFsL0IsSUFBQSxDQUFBLHFCQUFBLENBQUEsQ0FBQSxvQkFBQSxFQUFBa1ksQ0FBQSxDQUFBbGtCLElBQUEsQ0FBQSxLQUFBaTdDLEtBQUEsQ0FBQSxVQUFBLENBQUFoekMsQ0FBQSxDQUFBeWxDLFNBQUEsQ0FBQSxLQUFBNHdCLFFBQUEsQ0FBQXA5RCxPQUFBLENBQUF1akIsTUFBQSxDQUFBLEtBQUE4M0IsSUFBQSxDQUFBdndDLElBQUEsQ0FBQSxLQUFBc3lELFFBQUEsQ0FBQXA5RCxPQUFBLENBQUF1akIsTUFBQSxDQUFBLENBQUEsS0FBQTgzQixJQUFBLENBQUEsb0JBQUEsRUFBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUF0UCxRQUFBLENBQUEsbUJBQUEsQ0FBQSxLQUFBZ2UsYUFBQSxHQUFBLElBQUEsR0FBQS9tQyxDQUFBQSxDQUFBLENBQUEsS0FBQSsyQixLQUFBLENBQUExN0MsTUFBQSxDQUFBLENBQUEsQ0FBQTJrQixDQUFBLEVBQUEsQ0FBQSxDQUFBQSxDQUFBLEVBQUEsRUFBQSxLQUFBKzJCLEtBQUEsQ0FBQS8yQixDQUFBLEVBQUFxNEIsSUFBQSxDQUFBbCtCLFVBQUEsQ0FBQSxLQUFBMHRCLFVBQUEsQ0FBQSxPQUFBLEVBQUEsQ0FBQSxNQUFBLEtBQUEsQ0FBQSxDQUFBLENBQUF5ZixhQUFBLENBQUEsdUJBQUF2akQsQ0FBQSxDQUFBL0osQ0FBQSxDQUFBLENBQUEsR0FBQWk5QixDQUFBQSxDQUFBLENBQUEsSUFBQSxDQUFBcG1CLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQTgxQixDQUFBLENBQUEsSUFBQSxDQUFBLE1BQUEsTUFBQTB6QixTQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsS0FBQXI5RCxPQUFBLENBQUEwRyxRQUFBLEVBQUEsV0FBQSxLQUFBMUcsT0FBQSxDQUFBeEQsSUFBQSxDQUFBLENBQUEsQ0FBQSxFQUFBLEtBQUE4Z0UsYUFBQSxDQUFBdjJELENBQUEsRUFBQWljLENBQUEsQ0FBQWpjLENBQUEsQ0FBQTFHLE1BQUEsQ0FBQSxDQUFBa1YsT0FBQSxHQUFBelcsSUFBQSxDQUFBLFVBQUEsQ0FBQSxNQUFBa2tCLENBQUFBLENBQUEsQ0FBQXhHLElBQUEsQ0FBQSxJQUFBLENBQUFtdEIsQ0FBQSxDQUFBa0IsVUFBQSxDQUFBLE9BQUEsSUFBQWxCLENBQUEsRUFBQTFQLENBQUEsQ0FBQWpYLENBQUEsQ0FBQSxJQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsRUFBQSxJQUFBLEVBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQUEsQ0FBQSxDQUFBeEcsSUFBQSxDQUFBelYsQ0FBQSxDQUFBMUcsTUFBQSxDQUFBc3BDLENBQUEsQ0FBQWtCLFVBQUEsQ0FBQSxPQUFBLElBQUFsQixDQUFBLEdBQUExUCxDQUFBLENBQUFqWCxDQUFBLENBQUFqYyxDQUFBLENBQUExRyxNQUFBLENBQUEsQ0FBQSxDQUFBNDVCLENBQUEsQ0FBQSxDQUFBLEtBQUFqNkIsT0FBQSxDQUFBdWpCLE1BQUEsRUFBQXZtQixDQUFBLEdBQUFnbUIsQ0FBQSxDQUFBLEtBQUFoakIsT0FBQSxDQUFBdWpCLE1BQUEsQ0FBQTBXLENBQUEsQ0FBQSxDQUFBbnZCLElBQUEsQ0FBQSxHQUFBLEVBQUF1SyxPQUFBLEdBQUF2VyxJQUFBLENBQUEsVUFBQSxDQUFBLE9BQUFpSSxDQUFBLENBQUExRyxNQUFBLEdBQUF3VCxDQUFBLENBQUEsQ0FBQSxDQUFBLEVBQUEsQ0FBQSxFQUFBQSxDQUFBLEdBQUEsS0FBQTI3QyxXQUFBLENBQUF2MUIsQ0FBQSxDQUFBLEtBQUFzakMsd0JBQUEsRUFBQSxDQUFBLENBQUEsQ0FBQSxFQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBNVMsV0FBQSxDQUFBLHFCQUFBNWpELENBQUEsQ0FBQS9KLENBQUEsQ0FBQWk5QixDQUFBLENBQUEsQ0FBQSxHQUFBcG1CLENBQUFBLENBQUEsQ0FBQTgxQixDQUFBLENBQUF6bEMsQ0FBQSxDQUFBLEtBQUFsRSxPQUFBLENBQUEsR0FBQSxLQUFBdzlELGdCQUFBLENBQUEsSUFBQSxDQUFBLEtBQUEzUixnQkFBQSxFQUFBLENBQUEsS0FBQUYsTUFBQSxDQUFBLEtBQUFxQixhQUFBLENBQUFqbUQsQ0FBQSxDQUFBLENBQUEsS0FBQWttRCx1QkFBQSxFQUFBLENBQUEsS0FBQUUsYUFBQSxFQUFBLENBQUEsS0FBQTNWLFlBQUEsQ0FBQSxLQUFBbVUsTUFBQSxDQUFBblUsWUFBQSxFQUFBLENBQUEsS0FBQTNVLE1BQUEsQ0FBQSxLQUFBMnNCLFdBQUEsQ0FBQTNzQixNQUFBLEVBQUEsQ0FBQSxLQUFBQSxNQUFBLENBQUEsQ0FBQXg0QixHQUFBLENBQUEsS0FBQXc0QixNQUFBLENBQUF4NEIsR0FBQSxDQUFBLEtBQUE2akQsT0FBQSxDQUFBN2pELEdBQUEsQ0FBQXNtQixJQUFBLENBQUEsS0FBQWtTLE1BQUEsQ0FBQWxTLElBQUEsQ0FBQSxLQUFBdTlCLE9BQUEsQ0FBQXY5QixJQUFBLENBQUEsQ0FBQTNOLENBQUEsQ0FBQWpqQixNQUFBLENBQUEsS0FBQThpQyxNQUFBLENBQUEsQ0FBQXBkLEtBQUEsQ0FBQSxDQUFBa0wsSUFBQSxDQUFBNXBCLENBQUEsQ0FBQWtnQixLQUFBLENBQUEsS0FBQTRiLE1BQUEsQ0FBQWxTLElBQUEsQ0FBQXRtQixHQUFBLENBQUF0RCxDQUFBLENBQUFtZ0IsS0FBQSxDQUFBLEtBQUEyYixNQUFBLENBQUF4NEIsR0FBQSxDQUFBLENBQUFnRSxNQUFBLENBQUEsS0FBQTgvQyxnQkFBQSxFQUFBLENBQUFsaEQsUUFBQSxDQUFBLEtBQUFtaEQsa0JBQUEsRUFBQSxDQUFBLENBQUEsQ0FBQSxLQUFBekMsTUFBQSxDQUFBbHRDLEdBQUEsQ0FBQSxVQUFBLENBQUEsVUFBQSxDQUFBLENBQUEsS0FBQTJ1QyxXQUFBLENBQUEsS0FBQXpCLE1BQUEsQ0FBQWx0QyxHQUFBLENBQUEsVUFBQSxDQUFBLENBQUEsS0FBQSt1QyxnQkFBQSxDQUFBLEtBQUFDLGlCQUFBLENBQUExbUQsQ0FBQSxDQUFBLENBQUEsS0FBQTJtRCxhQUFBLENBQUEzbUQsQ0FBQSxDQUFBa2dCLEtBQUEsQ0FBQSxLQUFBMG1DLGFBQUEsQ0FBQTVtRCxDQUFBLENBQUFtZ0IsS0FBQSxDQUFBaGpCLENBQUEsQ0FBQXVuRCxRQUFBLEVBQUEsS0FBQW1DLHVCQUFBLENBQUExcEQsQ0FBQSxDQUFBdW5ELFFBQUEsQ0FBQSxDQUFBLEtBQUFnUyxXQUFBLENBQUEsQ0FBQTVvRCxJQUFBLENBQUEsS0FBQTI2QyxXQUFBLENBQUEzNkMsSUFBQSxHQUFBLENBQUEsQ0FBQSxDQUFBeEcsTUFBQSxDQUFBLEtBQUFtaEQsV0FBQSxDQUFBbmhELE1BQUEsR0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLEtBQUFzOUMsTUFBQSxDQUFBLENBQUEsSUFBQSxLQUFBNkQsV0FBQSxDQUFBLENBQUEsQ0FBQSxFQUFBLEtBQUFBLFdBQUEsQ0FBQTd2QyxJQUFBLEVBQUEsQ0FBQSxLQUFBKzlDLGtCQUFBLEVBQUEsQ0FBQXg1RCxDQUFBLENBQUFzbkQsV0FBQSxFQUFBLEtBQUFxQyxlQUFBLEVBQUEsQ0FBQTNwRCxDQUFBLENBQUFtL0MsTUFBQSxFQUFBLFNBQUFuL0MsQ0FBQSxDQUFBbS9DLE1BQUEsR0FBQTFaLENBQUEsQ0FBQSxLQUFBaHZDLFFBQUEsQ0FBQW1RLElBQUEsQ0FBQSxNQUFBLENBQUEsQ0FBQSxLQUFBNnlELFlBQUEsQ0FBQWgwQixDQUFBLENBQUFsckIsR0FBQSxDQUFBLFFBQUEsQ0FBQSxDQUFBa3JCLENBQUEsQ0FBQWxyQixHQUFBLENBQUEsUUFBQSxDQUFBdmEsQ0FBQSxDQUFBbS9DLE1BQUEsQ0FBQSxDQUFBLEtBQUF1YSxnQkFBQSxDQUFBNTZDLENBQUEsQ0FBQSxxQkFBQTllLENBQUEsQ0FBQW0vQyxNQUFBLENBQUEsd0JBQUEsQ0FBQSxDQUFBdjRCLFFBQUEsQ0FBQTZlLENBQUEsQ0FBQSxDQUFBLENBQUF6bEMsQ0FBQSxDQUFBa3NCLE9BQUEsR0FBQSxLQUFBdTdCLE1BQUEsQ0FBQWx0QyxHQUFBLENBQUEsU0FBQSxJQUFBLEtBQUFvL0MsY0FBQSxDQUFBLEtBQUFsUyxNQUFBLENBQUFsdEMsR0FBQSxDQUFBLFNBQUEsQ0FBQSxFQUFBLEtBQUFrdEMsTUFBQSxDQUFBbHRDLEdBQUEsQ0FBQSxTQUFBLENBQUF2YSxDQUFBLENBQUFrc0IsT0FBQSxDQUFBLENBQUEsQ0FBQWxzQixDQUFBLENBQUFxdkMsTUFBQSxHQUFBLEtBQUFvWSxNQUFBLENBQUFsdEMsR0FBQSxDQUFBLFFBQUEsSUFBQSxLQUFBcS9DLGFBQUEsQ0FBQSxLQUFBblMsTUFBQSxDQUFBbHRDLEdBQUEsQ0FBQSxRQUFBLENBQUEsRUFBQSxLQUFBa3RDLE1BQUEsQ0FBQWx0QyxHQUFBLENBQUEsUUFBQSxDQUFBdmEsQ0FBQSxDQUFBcXZDLE1BQUEsQ0FBQSxDQUFBLENBQUEsS0FBQWlFLFlBQUEsQ0FBQSxDQUFBLElBQUEsS0FBQTc4QyxRQUFBLENBQUEsQ0FBQSxDQUFBLEVBQUEsU0FBQSxLQUFBNjhDLFlBQUEsQ0FBQSxDQUFBLEVBQUFrSixPQUFBLEdBQUEsS0FBQW9QLGNBQUEsQ0FBQSxLQUFBdFksWUFBQSxDQUFBM1UsTUFBQSxFQUFBLENBQUEsQ0FBQSxLQUFBcUgsUUFBQSxDQUFBLE9BQUEsQ0FBQW5qQyxDQUFBLENBQUEsS0FBQXVuRCxPQUFBLEVBQUEsQ0FBQSxDQUFBLEtBQUF5UCwwQkFBQSxFQUFBLEtBQUE5USx1QkFBQSxFQUFBLENBQUEsQ0FBQWh6QixDQUFBLENBQUEsSUFBQXBtQixDQUFBLENBQUEsS0FBQW1xRCxVQUFBLENBQUEzL0QsTUFBQSxDQUFBLENBQUEsQ0FBQXdWLENBQUEsRUFBQSxDQUFBLENBQUFBLENBQUEsRUFBQSxFQUFBLEtBQUFtcUQsVUFBQSxDQUFBbnFELENBQUEsRUFBQXEyQixRQUFBLENBQUEsVUFBQSxDQUFBbmpDLENBQUEsQ0FBQSxLQUFBdW5ELE9BQUEsQ0FBQSxJQUFBLENBQUEsRUFBQSxDQUFBLE1BQUF0ckMsQ0FBQUEsQ0FBQSxDQUFBbW5CLEVBQUEsQ0FBQStpQixTQUFBLEdBQUFscUMsQ0FBQSxDQUFBbW5CLEVBQUEsQ0FBQStpQixTQUFBLENBQUF2d0IsT0FBQSxDQUFBLElBQUEsRUFBQTNaLENBQUEsQ0FBQW1uQixFQUFBLENBQUEraUIsU0FBQSxFQUFBLENBQUFocEQsQ0FBQSxDQUFBNnBELGFBQUEsRUFBQS9xQyxDQUFBLENBQUFtbkIsRUFBQSxDQUFBK2lCLFNBQUEsQ0FBQWMsY0FBQSxDQUFBLElBQUEsQ0FBQWpuRCxDQUFBLENBQUEsQ0FBQSxLQUFBazNELFFBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxLQUFBenhCLFNBQUEsQ0FBQSxLQUFBbWYsTUFBQSxDQUFBLG9CQUFBLENBQUEsQ0FBQSxLQUFBWixVQUFBLENBQUFoa0QsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBZ2tELFVBQUEsQ0FBQSxvQkFBQWhrRCxDQUFBLENBQUEsQ0FBQSxHQUFBL0osQ0FBQUEsQ0FBQSxDQUFBaTlCLENBQUEsQ0FBQXBtQixDQUFBLENBQUE4MUIsQ0FBQSxDQUFBemxDLENBQUEsQ0FBQSxLQUFBbEUsT0FBQSxDQUFBK3BDLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxJQUFBLEtBQUF4ZCxRQUFBLENBQUEsS0FBQWtoQyxpQkFBQSxDQUFBMW1ELENBQUEsQ0FBQSxDQUFBLEtBQUF1bUQsV0FBQSxDQUFBLEtBQUFlLGtCQUFBLENBQUEsVUFBQSxDQUFBLENBQUEsS0FBQTZQLGVBQUEsR0FBQSxLQUFBQSxlQUFBLENBQUEsS0FBQTVRLFdBQUEsQ0FBQSxDQUFBLEtBQUF0dEQsT0FBQSxDQUFBZ3NELE1BQUEsR0FBQSxLQUFBeFUsWUFBQSxDQUFBLENBQUEsSUFBQSxLQUFBNzhDLFFBQUEsQ0FBQSxDQUFBLENBQUEsRUFBQSxTQUFBLEtBQUE2OEMsWUFBQSxDQUFBLENBQUEsRUFBQWtKLE9BQUEsRUFBQSxLQUFBb1AsY0FBQSxDQUFBemxELEdBQUEsQ0FBQSxLQUFBbXRDLFlBQUEsQ0FBQSxDQUFBLEVBQUFoWCxZQUFBLENBQUF6NUIsQ0FBQSxDQUFBbWdCLEtBQUEsQ0FBQWhqQixDQUFBLENBQUErbkQsaUJBQUEsQ0FBQSxLQUFBelUsWUFBQSxDQUFBLENBQUEsRUFBQTFsQixTQUFBLENBQUFpWSxDQUFBLENBQUEsS0FBQXlOLFlBQUEsQ0FBQSxDQUFBLEVBQUExbEIsU0FBQSxDQUFBNXRCLENBQUEsQ0FBQWdvRCxXQUFBLENBQUFubEQsQ0FBQSxDQUFBbWdCLEtBQUEsQ0FBQSxLQUFBNG9DLGNBQUEsQ0FBQXpsRCxHQUFBLENBQUFuRyxDQUFBLENBQUErbkQsaUJBQUEsR0FBQSxLQUFBelUsWUFBQSxDQUFBLENBQUEsRUFBQTFsQixTQUFBLENBQUFpWSxDQUFBLENBQUEsS0FBQXlOLFlBQUEsQ0FBQSxDQUFBLEVBQUExbEIsU0FBQSxDQUFBNXRCLENBQUEsQ0FBQWdvRCxXQUFBLENBQUEsQ0FBQSxLQUFBNEQsY0FBQSxDQUFBbi9CLElBQUEsQ0FBQSxLQUFBNm1CLFlBQUEsQ0FBQSxDQUFBLEVBQUEvcUIsV0FBQSxDQUFBMWxCLENBQUEsQ0FBQWtnQixLQUFBLENBQUEvaUIsQ0FBQSxDQUFBK25ELGlCQUFBLENBQUEsS0FBQXpVLFlBQUEsQ0FBQSxDQUFBLEVBQUF6bEIsVUFBQSxDQUFBZ1ksQ0FBQSxDQUFBLEtBQUF5TixZQUFBLENBQUEsQ0FBQSxFQUFBemxCLFVBQUEsQ0FBQTd0QixDQUFBLENBQUFnb0QsV0FBQSxDQUFBbmxELENBQUEsQ0FBQWtnQixLQUFBLENBQUEsS0FBQTZvQyxjQUFBLENBQUFuL0IsSUFBQSxDQUFBenNCLENBQUEsQ0FBQStuRCxpQkFBQSxHQUFBLEtBQUF6VSxZQUFBLENBQUEsQ0FBQSxFQUFBemxCLFVBQUEsQ0FBQWdZLENBQUEsQ0FBQSxLQUFBeU4sWUFBQSxDQUFBLENBQUEsRUFBQXpsQixVQUFBLENBQUE3dEIsQ0FBQSxDQUFBZ29ELFdBQUEsQ0FBQSxHQUFBbmxELENBQUEsQ0FBQW1nQixLQUFBLENBQUEsS0FBQXZzQixRQUFBLENBQUFtM0IsU0FBQSxFQUFBLENBQUE1dEIsQ0FBQSxDQUFBK25ELGlCQUFBLENBQUFsaUIsQ0FBQSxDQUFBLEtBQUFwdkMsUUFBQSxDQUFBbTNCLFNBQUEsQ0FBQSxLQUFBbjNCLFFBQUEsQ0FBQW0zQixTQUFBLEdBQUE1dEIsQ0FBQSxDQUFBZ29ELFdBQUEsQ0FBQSxDQUFBLEtBQUFweEQsTUFBQSxDQUFBMnlCLE1BQUEsSUFBQTFtQixDQUFBLENBQUFtZ0IsS0FBQSxDQUFBLEtBQUF2c0IsUUFBQSxDQUFBbTNCLFNBQUEsRUFBQSxFQUFBNXRCLENBQUEsQ0FBQStuRCxpQkFBQSxHQUFBbGlCLENBQUEsQ0FBQSxLQUFBcHZDLFFBQUEsQ0FBQW0zQixTQUFBLENBQUEsS0FBQW4zQixRQUFBLENBQUFtM0IsU0FBQSxHQUFBNXRCLENBQUEsQ0FBQWdvRCxXQUFBLENBQUEsQ0FBQSxDQUFBbmxELENBQUEsQ0FBQWtnQixLQUFBLENBQUEsS0FBQXRzQixRQUFBLENBQUFvM0IsVUFBQSxFQUFBLENBQUE3dEIsQ0FBQSxDQUFBK25ELGlCQUFBLENBQUFsaUIsQ0FBQSxDQUFBLEtBQUFwdkMsUUFBQSxDQUFBbzNCLFVBQUEsQ0FBQSxLQUFBcDNCLFFBQUEsQ0FBQW8zQixVQUFBLEdBQUE3dEIsQ0FBQSxDQUFBZ29ELFdBQUEsQ0FBQSxDQUFBLEtBQUFweEQsTUFBQSxDQUFBd3hCLEtBQUEsSUFBQXZsQixDQUFBLENBQUFrZ0IsS0FBQSxDQUFBLEtBQUF0c0IsUUFBQSxDQUFBbzNCLFVBQUEsRUFBQSxFQUFBN3RCLENBQUEsQ0FBQStuRCxpQkFBQSxHQUFBbGlCLENBQUEsQ0FBQSxLQUFBcHZDLFFBQUEsQ0FBQW8zQixVQUFBLENBQUEsS0FBQXAzQixRQUFBLENBQUFvM0IsVUFBQSxHQUFBN3RCLENBQUEsQ0FBQWdvRCxXQUFBLENBQUEsQ0FBQSxFQUFBbmlCLENBQUEsR0FBQSxDQUFBLENBQUEsRUFBQS9tQixDQUFBLENBQUFtbkIsRUFBQSxDQUFBK2lCLFNBQUEsRUFBQSxDQUFBaHBELENBQUEsQ0FBQTZwRCxhQUFBLEVBQUEvcUMsQ0FBQSxDQUFBbW5CLEVBQUEsQ0FBQStpQixTQUFBLENBQUFjLGNBQUEsQ0FBQSxJQUFBLENBQUFqbkQsQ0FBQSxDQUFBLENBQUEsQ0FBQSxLQUFBdW1ELFdBQUEsQ0FBQSxLQUFBZSxrQkFBQSxDQUFBLFVBQUEsQ0FBQSxDQUFBLEtBQUFydUQsT0FBQSxDQUFBc3JELElBQUEsRUFBQSxNQUFBLEtBQUF0ckQsT0FBQSxDQUFBc3JELElBQUEsR0FBQSxLQUFBSyxNQUFBLENBQUEsQ0FBQSxFQUFBcHRDLEtBQUEsQ0FBQW9TLElBQUEsQ0FBQSxLQUFBcEUsUUFBQSxDQUFBb0UsSUFBQSxDQUFBLElBQUEsQ0FBQSxDQUFBLEtBQUEzd0IsT0FBQSxDQUFBc3JELElBQUEsRUFBQSxNQUFBLEtBQUF0ckQsT0FBQSxDQUFBc3JELElBQUEsR0FBQSxLQUFBSyxNQUFBLENBQUEsQ0FBQSxFQUFBcHRDLEtBQUEsQ0FBQWxVLEdBQUEsQ0FBQSxLQUFBa2lCLFFBQUEsQ0FBQWxpQixHQUFBLENBQUEsSUFBQSxDQUFBLENBQUFyTixDQUFBLENBQUEsS0FBQSs4QyxLQUFBLENBQUExN0MsTUFBQSxDQUFBLENBQUEsQ0FBQXJCLENBQUEsRUFBQSxDQUFBLENBQUFBLENBQUEsRUFBQSxFQUFBLEdBQUFpOUIsQ0FBQSxDQUFBLEtBQUE4ZixLQUFBLENBQUEvOEMsQ0FBQSxDQUFBLENBQUE2VyxDQUFBLENBQUFvbUIsQ0FBQSxDQUFBb2hCLElBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQTFSLENBQUEsQ0FBQSxLQUFBdzBCLHNCQUFBLENBQUFsa0MsQ0FBQSxDQUFBLENBQUEwUCxDQUFBLEVBQUExUCxDQUFBLENBQUFtakMsUUFBQSxHQUFBLEtBQUFJLGdCQUFBLEVBQUEzcEQsQ0FBQSxHQUFBLEtBQUEyN0MsV0FBQSxDQUFBLENBQUEsQ0FBQSxFQUFBLEtBQUFMLFdBQUEsQ0FBQSxJQUFBeGxCLENBQUEsQ0FBQSxNQUFBLENBQUEsTUFBQSxJQUFBLENBQUEsSUFBQTkxQixDQUFBLEVBQUEsQ0FBQW1QLENBQUEsQ0FBQXpmLFFBQUEsQ0FBQSxLQUFBNHJELFdBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQXQ3QyxDQUFBLENBQUEsR0FBQSxpQkFBQSxLQUFBN1QsT0FBQSxDQUFBeEQsSUFBQSxDQUFBLENBQUF3bUIsQ0FBQSxDQUFBemYsUUFBQSxDQUFBLEtBQUF5bUMsT0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBbjJCLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxHQUFBLEtBQUF5aEMsU0FBQSxDQUFBLElBQUEzTCxDQUFBLENBQUEsTUFBQSxDQUFBLElBQUEsQ0FBQSxZQUFBLEtBQUEzcEMsT0FBQSxDQUFBczJELFNBQUEsRUFBQSxDQUFBLEtBQUE4SCxvQkFBQSxDQUFBbmtDLENBQUEsQ0FBQSxDQUFBLE1BQUEsS0FBQW9rQyxVQUFBLENBQUF0M0QsQ0FBQSxDQUFBa3pCLENBQUEsRUFBQSxLQUFBaVEsUUFBQSxDQUFBLFFBQUEsQ0FBQW5qQyxDQUFBLENBQUEsS0FBQXVuRCxPQUFBLEVBQUEsQ0FBQSxDQUFBLE1BQUEsQ0FBQSxDQUFBLE1BQUEsTUFBQWdRLGtCQUFBLENBQUF2M0QsQ0FBQSxFQUFBaWMsQ0FBQSxDQUFBbW5CLEVBQUEsQ0FBQStpQixTQUFBLEVBQUFscUMsQ0FBQSxDQUFBbW5CLEVBQUEsQ0FBQStpQixTQUFBLENBQUFaLElBQUEsQ0FBQSxJQUFBLENBQUF2bEQsQ0FBQSxDQUFBLENBQUEsS0FBQW1qQyxRQUFBLENBQUEsTUFBQSxDQUFBbmpDLENBQUEsQ0FBQSxLQUFBdW5ELE9BQUEsRUFBQSxDQUFBLENBQUEsS0FBQTRQLGVBQUEsQ0FBQSxLQUFBNVEsV0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQXRDLFVBQUEsQ0FBQSxvQkFBQWprRCxDQUFBLENBQUEvSixDQUFBLENBQUEsQ0FBQSxHQUFBK0osQ0FBQSxDQUFBLENBQUEsR0FBQWljLENBQUEsQ0FBQW1uQixFQUFBLENBQUEraUIsU0FBQSxFQUFBLENBQUEsS0FBQWx0RCxPQUFBLENBQUErdEQsYUFBQSxFQUFBL3FDLENBQUEsQ0FBQW1uQixFQUFBLENBQUEraUIsU0FBQSxDQUFBcUIsSUFBQSxDQUFBLElBQUEsQ0FBQXhuRCxDQUFBLENBQUEsQ0FBQSxLQUFBL0csT0FBQSxDQUFBOHJELE1BQUEsQ0FBQSxDQUFBLEdBQUE3eEIsQ0FBQUEsQ0FBQSxDQUFBLElBQUEsQ0FBQXBtQixDQUFBLENBQUEsS0FBQXM3QyxXQUFBLENBQUF0c0IsTUFBQSxFQUFBLENBQUE4RyxDQUFBLENBQUEsS0FBQTNwQyxPQUFBLENBQUFzckQsSUFBQSxDQUFBcG5ELENBQUEsQ0FBQSxFQUFBLENBQUF5bEMsQ0FBQSxFQUFBLE1BQUFBLENBQUEsR0FBQXpsQyxDQUFBLENBQUF5c0IsSUFBQSxDQUFBOWMsQ0FBQSxDQUFBOGMsSUFBQSxDQUFBLEtBQUFrUyxNQUFBLENBQUF4MEIsTUFBQSxDQUFBc2lCLElBQUEsQ0FBQSxLQUFBdTlCLE9BQUEsQ0FBQXY5QixJQUFBLEVBQUEsS0FBQWlULFlBQUEsQ0FBQSxDQUFBLElBQUEsS0FBQWpwQyxRQUFBLENBQUEsQ0FBQSxFQUFBNGtCLElBQUEsQ0FBQSxDQUFBLENBQUEsS0FBQXFrQixZQUFBLENBQUEsQ0FBQSxFQUFBN1IsVUFBQSxDQUFBLEVBQUE0WCxDQUFBLEVBQUEsTUFBQUEsQ0FBQSxHQUFBemxDLENBQUEsQ0FBQW1HLEdBQUEsQ0FBQXdKLENBQUEsQ0FBQXhKLEdBQUEsQ0FBQSxLQUFBdzRCLE1BQUEsQ0FBQXgwQixNQUFBLENBQUFoRSxHQUFBLENBQUEsS0FBQTZqRCxPQUFBLENBQUE3akQsR0FBQSxFQUFBLEtBQUF1NUIsWUFBQSxDQUFBLENBQUEsSUFBQSxLQUFBanBDLFFBQUEsQ0FBQSxDQUFBLEVBQUE0a0IsSUFBQSxDQUFBLENBQUEsQ0FBQSxLQUFBcWtCLFlBQUEsQ0FBQSxDQUFBLEVBQUE5UixTQUFBLENBQUEsQ0FBQSxDQUFBLEtBQUF1ckMsU0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBcjZDLENBQUEsQ0FBQSxLQUFBMm9DLE1BQUEsQ0FBQSxDQUFBcjJCLE9BQUEsQ0FBQXB4QixDQUFBLENBQUF3cEIsUUFBQSxDQUFBLEtBQUExdEIsT0FBQSxDQUFBOHJELE1BQUEsQ0FBQSxFQUFBLENBQUEsRUFBQSxHQUFBLENBQUEsVUFBQSxDQUFBN3hCLENBQUEsQ0FBQTZ6QixNQUFBLENBQUEvbUQsQ0FBQSxFQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsSUFBQSxNQUFBK21ELE1BQUEsQ0FBQS9tRCxDQUFBLENBQUEvSixDQUFBLEVBQUEsTUFBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQTJzRCxNQUFBLENBQUEsaUJBQUEsQ0FBQSxHQUFBLEtBQUFzVSxRQUFBLENBQUEsQ0FBQSxLQUFBN1QsUUFBQSxDQUFBLEdBQUFwbkMsQ0FBQUEsQ0FBQSxDQUFBbUMsS0FBQSxDQUFBLFNBQUEsQ0FBQSxDQUFBOWtCLE1BQUEsQ0FBQSxJQUFBLENBQUEsQ0FBQSxFQUFBLGFBQUEsS0FBQUwsT0FBQSxDQUFBMnJELE1BQUEsRUFBQSxLQUFBNkQsV0FBQSxDQUFBL3dDLEdBQUEsQ0FBQSxLQUFBeXdDLFVBQUEsRUFBQSxLQUFBbGpCLFlBQUEsQ0FBQSxLQUFBd2pCLFdBQUEsQ0FBQSxvQkFBQSxDQUFBLEVBQUEsS0FBQUEsV0FBQSxDQUFBL3ZDLElBQUEsRUFBQSxDQUFBLElBQUEsR0FBQTFZLENBQUFBLENBQUEsQ0FBQSxLQUFBaTNELFVBQUEsQ0FBQTMvRCxNQUFBLENBQUEsQ0FBQSxDQUFBMEksQ0FBQSxFQUFBLENBQUEsQ0FBQUEsQ0FBQSxFQUFBLEVBQUEsS0FBQWkzRCxVQUFBLENBQUFqM0QsQ0FBQSxFQUFBbWpDLFFBQUEsQ0FBQSxZQUFBLENBQUEsSUFBQSxDQUFBLEtBQUFva0IsT0FBQSxDQUFBLElBQUEsQ0FBQSxFQUFBLEtBQUEwUCxVQUFBLENBQUFqM0QsQ0FBQSxFQUFBdW9ELGNBQUEsQ0FBQW1ILElBQUEsR0FBQSxLQUFBdUgsVUFBQSxDQUFBajNELENBQUEsRUFBQW1qQyxRQUFBLENBQUEsS0FBQSxDQUFBLElBQUEsQ0FBQSxLQUFBb2tCLE9BQUEsQ0FBQSxJQUFBLENBQUEsRUFBQSxLQUFBMFAsVUFBQSxDQUFBajNELENBQUEsRUFBQXVvRCxjQUFBLENBQUFtSCxJQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxPQUFBLE1BQUF0SCxXQUFBLEdBQUEsS0FBQUEsV0FBQSxDQUFBLENBQUEsRUFBQTF4RCxVQUFBLEVBQUEsS0FBQTB4RCxXQUFBLENBQUEsQ0FBQSxFQUFBMXhELFVBQUEsQ0FBQUMsV0FBQSxDQUFBLEtBQUF5eEQsV0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsYUFBQSxLQUFBbnZELE9BQUEsQ0FBQTJyRCxNQUFBLEVBQUEsS0FBQUEsTUFBQSxFQUFBLEtBQUFBLE1BQUEsQ0FBQSxDQUFBLEVBQUFsdUQsVUFBQSxFQUFBLEtBQUFrdUQsTUFBQSxDQUFBNzBDLE1BQUEsRUFBQSxDQUFBa00sQ0FBQSxDQUFBampCLE1BQUEsQ0FBQSxJQUFBLENBQUEsQ0FBQTRyRCxNQUFBLENBQUEsSUFBQSxDQUFBc1MsUUFBQSxDQUFBLENBQUEsQ0FBQSxDQUFBWixTQUFBLENBQUEsQ0FBQSxDQUFBLENBQUFrQixZQUFBLENBQUEsSUFBQSxDQUFBLENBQUEsQ0FBQSxLQUFBZCxXQUFBLENBQUE1b0QsSUFBQSxDQUFBbU8sQ0FBQSxDQUFBLEtBQUF5NkMsV0FBQSxDQUFBNW9ELElBQUEsQ0FBQSxDQUFBOFYsS0FBQSxDQUFBLEtBQUE2a0MsV0FBQSxDQUFBLENBQUF4c0MsQ0FBQSxDQUFBLEtBQUF5NkMsV0FBQSxDQUFBcHZELE1BQUEsQ0FBQSxDQUFBbWMsT0FBQSxDQUFBLEtBQUFnbEMsV0FBQSxDQUFBLEVBQUEsSUFBQSxDQUFBLENBQUEsQ0FBQXAxQixTQUFBLENBQUEsbUJBQUFyekIsQ0FBQSxDQUFBLENBQUEsR0FBQS9KLENBQUFBLENBQUEsQ0FBQSxLQUFBd2hFLGlCQUFBLENBQUF6M0QsQ0FBQSxFQUFBQSxDQUFBLENBQUEwM0QsU0FBQSxDQUFBLENBQUF4a0MsQ0FBQSxDQUFBLEVBQUEsQ0FBQSxNQUFBbHpCLENBQUFBLENBQUEsQ0FBQUEsQ0FBQSxFQUFBLEVBQUEsQ0FBQWljLENBQUEsQ0FBQWhtQixDQUFBLENBQUEsQ0FBQThCLElBQUEsQ0FBQSxVQUFBLENBQUEsR0FBQTlCLENBQUFBLENBQUEsQ0FBQSxDQUFBZ21CLENBQUEsQ0FBQWpjLENBQUEsQ0FBQXMwQyxJQUFBLEVBQUEsSUFBQSxDQUFBLENBQUFodkMsSUFBQSxDQUFBdEYsQ0FBQSxDQUFBMjNELFNBQUEsRUFBQSxJQUFBLEdBQUEsRUFBQSxFQUFBdDNELEtBQUEsQ0FBQUwsQ0FBQSxDQUFBNDNELFVBQUEsRUFBQSxnQkFBQSxDQUFBLENBQUEzaEUsQ0FBQSxFQUFBaTlCLENBQUEsQ0FBQXYrQixJQUFBLENBQUEsQ0FBQXFMLENBQUEsQ0FBQTBCLEdBQUEsRUFBQXpMLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxJQUFBLEVBQUEsR0FBQSxFQUFBK0osQ0FBQSxDQUFBMEIsR0FBQSxFQUFBMUIsQ0FBQSxDQUFBNDNELFVBQUEsQ0FBQTNoRSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQWk5QixDQUFBLENBQUE1N0IsTUFBQSxFQUFBMEksQ0FBQSxDQUFBMEIsR0FBQSxFQUFBd3hCLENBQUEsQ0FBQXYrQixJQUFBLENBQUFxTCxDQUFBLENBQUEwQixHQUFBLENBQUEsR0FBQSxDQUFBLENBQUF3eEIsQ0FBQSxDQUFBOXhCLElBQUEsQ0FBQSxHQUFBLENBQUEsQ0FBQSxDQUFBLENBQUE3SixPQUFBLENBQUEsaUJBQUF5SSxDQUFBLENBQUEsQ0FBQSxHQUFBL0osQ0FBQUEsQ0FBQSxDQUFBLEtBQUF3aEUsaUJBQUEsQ0FBQXozRCxDQUFBLEVBQUFBLENBQUEsQ0FBQTAzRCxTQUFBLENBQUEsQ0FBQXhrQyxDQUFBLENBQUEsRUFBQSxDQUFBLE1BQUFsekIsQ0FBQUEsQ0FBQSxDQUFBQSxDQUFBLEVBQUEsRUFBQSxDQUFBL0osQ0FBQSxDQUFBOEIsSUFBQSxDQUFBLFVBQUEsQ0FBQW03QixDQUFBLENBQUF2K0IsSUFBQSxDQUFBc25CLENBQUEsQ0FBQWpjLENBQUEsQ0FBQXMwQyxJQUFBLEVBQUEsSUFBQSxDQUFBLENBQUFodkMsSUFBQSxDQUFBdEYsQ0FBQSxDQUFBMjNELFNBQUEsRUFBQSxJQUFBLEdBQUEsRUFBQSxFQUFBLENBQUEsQ0FBQSxDQUFBemtDLENBQUEsQ0FBQSxDQUFBLENBQUFvMUIsZUFBQSxDQUFBLHlCQUFBcnNDLENBQUEsQ0FBQSxDQUFBLEdBQUFqYyxDQUFBQSxDQUFBLENBQUEsS0FBQXVtRCxXQUFBLENBQUEzOEIsSUFBQSxDQUFBM3pCLENBQUEsQ0FBQStKLENBQUEsQ0FBQSxLQUFBNG5ELGlCQUFBLENBQUFyaUMsS0FBQSxDQUFBMk4sQ0FBQSxDQUFBLEtBQUFxekIsV0FBQSxDQUFBampELEdBQUEsQ0FBQXdKLENBQUEsQ0FBQW9tQixDQUFBLENBQUEsS0FBQTAwQixpQkFBQSxDQUFBbGhDLE1BQUEsQ0FBQWtjLENBQUEsQ0FBQTNtQixDQUFBLENBQUEyTixJQUFBLENBQUF6c0IsQ0FBQSxDQUFBeWxDLENBQUEsQ0FBQTNtQixDQUFBLENBQUFzSixLQUFBLENBQUF5ZCxDQUFBLENBQUEvbUIsQ0FBQSxDQUFBM1ksR0FBQSxDQUFBKy9CLENBQUEsQ0FBQUwsQ0FBQSxDQUFBL21CLENBQUEsQ0FBQXlLLE1BQUEsQ0FBQXpZLENBQUEsQ0FBQSxLQUFBNnRCLE1BQUEsQ0FBQXBkLEtBQUEsQ0FBQXBiLEdBQUEsQ0FBQW9pQyxDQUFBLENBQUEsS0FBQTVKLE1BQUEsQ0FBQXBkLEtBQUEsQ0FBQWtMLElBQUEsQ0FBQXNjLENBQUEsQ0FBQSxNQUFBLEtBQUFqdEMsT0FBQSxDQUFBc3JELElBQUEsRUFBQXJ4QixDQUFBLENBQUFqbEIsQ0FBQSxDQUFBKzBCLENBQUEsRUFBQUssQ0FBQSxDQUFBblEsQ0FBQSxDQUFBamxCLENBQUEsQ0FBQXE0QixDQUFBLENBQUEsTUFBQSxLQUFBcnRDLE9BQUEsQ0FBQXNyRCxJQUFBLEVBQUF2a0QsQ0FBQSxDQUFBMGxDLENBQUEsQ0FBQTlDLENBQUEsRUFBQXpsQyxDQUFBLENBQUE2QyxDQUFBLENBQUEwbEMsQ0FBQSxDQUFBeGEsQ0FBQSxDQUFBZ2IsQ0FBQSxFQUFBSSxDQUFBLENBQUEsTUFBQSxZQUFBLEtBQUFydEMsT0FBQSxDQUFBczJELFNBQUEsRUFBQSxLQUFBdDJELE9BQUEsQ0FBQTQrRCx5QkFBQSxFQUFBLFlBQUEsS0FBQTUrRCxPQUFBLENBQUFzMkQsU0FBQSxFQUFBLEtBQUEzSCxpQkFBQSxDQUFBLEtBQUFrUSxRQUFBLENBQUEsT0FBQSxDQUFBLFFBQUEsRUFBQTc3QyxDQUFBLENBQUEsS0FBQTY3QyxRQUFBLENBQUEsT0FBQSxDQUFBLFFBQUEsQ0FBQSxDQUFBNXNDLENBQUEsQ0FBQWxyQixDQUFBLENBQUEsS0FBQTRuRCxpQkFBQSxDQUFBcmlDLEtBQUEsQ0FBQSxDQUFBLENBQUFxZCxDQUFBLEVBQUF6bEMsQ0FBQSxDQUFBbEgsQ0FBQSxDQUFBLEtBQUEyeEQsaUJBQUEsQ0FBQXJpQyxLQUFBLENBQUEsQ0FBQSxFQUFBMk4sQ0FBQSxDQUFBLEtBQUEwMEIsaUJBQUEsQ0FBQWxoQyxNQUFBLENBQUEsQ0FBQSxDQUFBc2MsQ0FBQSxFQUFBSyxDQUFBLENBQUF2MkIsQ0FBQSxDQUFBLEtBQUE4NkMsaUJBQUEsQ0FBQWxoQyxNQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQTB3QyxzQkFBQSxDQUFBLGdDQUFBbjdDLENBQUEsQ0FBQSxDQUFBLEdBQUFqYyxDQUFBQSxDQUFBLENBQUEvSixDQUFBLENBQUFpOUIsQ0FBQSxDQUFBLE1BQUEsS0FBQWo2QixPQUFBLENBQUFzckQsSUFBQSxFQUFBLEtBQUE0UixXQUFBLENBQUEsS0FBQTVQLFdBQUEsQ0FBQWpqRCxHQUFBLENBQUEsS0FBQXc0QixNQUFBLENBQUFwZCxLQUFBLENBQUFwYixHQUFBLENBQUEyWSxDQUFBLENBQUEzWSxHQUFBLENBQUEyWSxDQUFBLENBQUF5SyxNQUFBLENBQUEsQ0FBQTVaLENBQUEsQ0FBQSxNQUFBLEtBQUE3VCxPQUFBLENBQUFzckQsSUFBQSxFQUFBLEtBQUE0UixXQUFBLENBQUEsS0FBQTVQLFdBQUEsQ0FBQTM4QixJQUFBLENBQUEsS0FBQWtTLE1BQUEsQ0FBQXBkLEtBQUEsQ0FBQWtMLElBQUEsQ0FBQTNOLENBQUEsQ0FBQTJOLElBQUEsQ0FBQTNOLENBQUEsQ0FBQXNKLEtBQUEsQ0FBQSxDQUFBcWQsQ0FBQSxDQUFBMVAsQ0FBQSxFQUFBcG1CLENBQUEsQ0FBQSxNQUFBODFCLENBQUFBLENBQUEsRUFBQTVpQyxDQUFBLENBQUEsS0FBQSszRCx5QkFBQSxFQUFBLENBQUE5aEUsQ0FBQSxDQUFBLEtBQUEraEUsMkJBQUEsRUFBQSxDQUFBLEtBQUFGLFFBQUEsQ0FBQSxVQUFBN2hFLENBQUEsRUFBQSxTQUFBK0osQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUFBLENBQUEsR0FBQSxTQUFBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxFQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQXEzRCxvQkFBQSxDQUFBLDhCQUFBcDdDLENBQUEsQ0FBQSxDQUFBLEdBQUFqYyxDQUFBQSxDQUFBLENBQUEsS0FBQW0yRCxXQUFBLENBQUEsS0FBQTVQLFdBQUEsQ0FBQWpqRCxHQUFBLENBQUEsS0FBQXc0QixNQUFBLENBQUFwZCxLQUFBLENBQUFwYixHQUFBLENBQUEyWSxDQUFBLENBQUEzWSxHQUFBLENBQUEyWSxDQUFBLENBQUF5SyxNQUFBLENBQUEsQ0FBQSxDQUFBekssQ0FBQSxDQUFBeUssTUFBQSxDQUFBLENBQUF6d0IsQ0FBQSxDQUFBLEtBQUFrZ0UsV0FBQSxDQUFBLEtBQUE1UCxXQUFBLENBQUEzOEIsSUFBQSxDQUFBLEtBQUFrUyxNQUFBLENBQUFwZCxLQUFBLENBQUFrTCxJQUFBLENBQUEzTixDQUFBLENBQUEyTixJQUFBLENBQUEzTixDQUFBLENBQUFzSixLQUFBLENBQUEsQ0FBQSxDQUFBdEosQ0FBQSxDQUFBc0osS0FBQSxDQUFBLENBQUEyTixDQUFBLENBQUEsS0FBQTZrQyx5QkFBQSxFQUFBLENBQUFqckQsQ0FBQSxDQUFBLEtBQUFrckQsMkJBQUEsRUFBQSxDQUFBLE1BQUEsTUFBQUYsUUFBQSxFQUFBaHJELENBQUEsQ0FBQSxVQUFBQSxDQUFBLEVBQUE3VyxDQUFBLEVBQUEsU0FBQTZXLENBQUEsRUFBQSxDQUFBN1csQ0FBQSxDQUFBaTlCLENBQUEsR0FBQSxTQUFBQSxDQUFBLEVBQUFsekIsQ0FBQSxFQUFBLE9BQUFrekIsQ0FBQSxFQUFBLENBQUFsekIsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBKzNELHlCQUFBLENBQUEsb0NBQUEsQ0FBQSxHQUFBOTdDLENBQUFBLENBQUEsQ0FBQSxLQUFBc3FDLFdBQUEsQ0FBQWpqRCxHQUFBLENBQUEsS0FBQTZ6RCxlQUFBLENBQUE3ekQsR0FBQSxDQUFBLE1BQUEsS0FBQTJZLENBQUEsR0FBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxNQUFBLENBQUEsSUFBQSxDQUFBLENBQUEsQ0FBQSxDQUFBKzdDLDJCQUFBLENBQUEsc0NBQUEsQ0FBQSxHQUFBLzdDLENBQUFBLENBQUEsQ0FBQSxLQUFBc3FDLFdBQUEsQ0FBQTM4QixJQUFBLENBQUEsS0FBQXV0QyxlQUFBLENBQUF2dEMsSUFBQSxDQUFBLE1BQUEsS0FBQTNOLENBQUEsR0FBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxPQUFBLENBQUEsTUFBQSxDQUFBLENBQUEsQ0FBQSxDQUFBbXpCLE9BQUEsQ0FBQSxpQkFBQW56QixDQUFBLENBQUEsQ0FBQSxNQUFBLE1BQUFzNkMsYUFBQSxDQUFBdDZDLENBQUEsRUFBQSxLQUFBd3BDLG1CQUFBLEVBQUEsQ0FBQSxLQUFBWCxnQkFBQSxFQUFBLENBQUEsSUFBQSxDQUFBLENBQUEsQ0FBQW1ULFlBQUEsQ0FBQSx1QkFBQSxDQUFBLEdBQUFoOEMsQ0FBQUEsQ0FBQSxDQUFBLEtBQUFoakIsT0FBQSxDQUFBLE1BQUFnakIsQ0FBQUEsQ0FBQSxDQUFBMjVDLFdBQUEsQ0FBQXYrRCxXQUFBLEdBQUE0SCxNQUFBLENBQUEsQ0FBQWdkLENBQUEsQ0FBQTI1QyxXQUFBLENBQUEsQ0FBQTM1QyxDQUFBLENBQUEyNUMsV0FBQSxDQUFBLENBQUEsQ0FBQTZCLGlCQUFBLENBQUEsMkJBQUF6M0QsQ0FBQSxDQUFBLENBQUEsUUFBQS9KLENBQUFBLENBQUEsRUFBQSxDQUFBK3NDLENBQUEsQ0FBQXJ1QyxJQUFBLENBQUEsSUFBQSxFQUFBLElBQUF1K0IsQ0FBQUEsQ0FBQSxDQUFBcG1CLENBQUEsQ0FBQTgxQixDQUFBLENBQUF6bEMsQ0FBQSxDQUFBNmxDLENBQUEsQ0FBQSxFQUFBLENBQUFLLENBQUEsQ0FBQSxFQUFBLENBQUFwMUIsQ0FBQSxDQUFBLEtBQUFncUQsWUFBQSxFQUFBLENBQUEsR0FBQWhxRCxDQUFBLEVBQUFqTyxDQUFBLENBQUEsSUFBQWt6QixDQUFBLENBQUFqbEIsQ0FBQSxDQUFBM1csTUFBQSxDQUFBLENBQUEsQ0FBQTQ3QixDQUFBLEVBQUEsQ0FBQSxDQUFBQSxDQUFBLEVBQUEsRUFBQSxJQUFBMFAsQ0FBQSxDQUFBM21CLENBQUEsQ0FBQWhPLENBQUEsQ0FBQWlsQixDQUFBLENBQUEsQ0FBQSxLQUFBdC9CLFFBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBa1osQ0FBQSxDQUFBODFCLENBQUEsQ0FBQXRyQyxNQUFBLENBQUEsQ0FBQSxDQUFBd1YsQ0FBQSxFQUFBLENBQUEsQ0FBQUEsQ0FBQSxFQUFBLEVBQUEzUCxDQUFBLENBQUE4ZSxDQUFBLENBQUF4RyxJQUFBLENBQUFtdEIsQ0FBQSxDQUFBOTFCLENBQUEsQ0FBQSxDQUFBLEtBQUFpM0IsY0FBQSxDQUFBLENBQUE1bUMsQ0FBQSxFQUFBQSxDQUFBLEdBQUEsSUFBQSxFQUFBLENBQUFBLENBQUEsQ0FBQWxFLE9BQUEsQ0FBQTBHLFFBQUEsRUFBQTBqQyxDQUFBLENBQUExdUMsSUFBQSxDQUFBLENBQUFzbkIsQ0FBQSxDQUFBN21CLFVBQUEsQ0FBQStILENBQUEsQ0FBQWxFLE9BQUEsQ0FBQSs1QyxLQUFBLEVBQUE3MUMsQ0FBQSxDQUFBbEUsT0FBQSxDQUFBKzVDLEtBQUEsQ0FBQXgrQyxJQUFBLENBQUEySSxDQUFBLENBQUE4bEMsT0FBQSxDQUFBLENBQUFobkIsQ0FBQSxDQUFBOWUsQ0FBQSxDQUFBbEUsT0FBQSxDQUFBKzVDLEtBQUEsQ0FBQTcxQyxDQUFBLENBQUE4bEMsT0FBQSxDQUFBLENBQUE3MUIsR0FBQSxDQUFBLHFCQUFBLEVBQUFBLEdBQUEsQ0FBQSwwQkFBQSxDQUFBLENBQUFqUSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxJQUFBa21DLENBQUEsQ0FBQTF1QyxJQUFBLENBQUEsQ0FBQXNuQixDQUFBLENBQUE3bUIsVUFBQSxDQUFBLEtBQUE2RCxPQUFBLENBQUErNUMsS0FBQSxFQUFBLEtBQUEvNUMsT0FBQSxDQUFBKzVDLEtBQUEsQ0FBQXgrQyxJQUFBLENBQUEsS0FBQXl1QyxPQUFBLENBQUEsSUFBQSxDQUFBLENBQUFocUMsT0FBQSxDQUFBLEtBQUFBLE9BQUEsQ0FBQXE3QyxJQUFBLENBQUEsS0FBQW1VLFdBQUEsQ0FBQSxDQUFBLENBQUF4c0MsQ0FBQSxDQUFBLEtBQUFoakIsT0FBQSxDQUFBKzVDLEtBQUEsQ0FBQSxLQUFBL1AsT0FBQSxDQUFBLENBQUE3MUIsR0FBQSxDQUFBLHFCQUFBLEVBQUFBLEdBQUEsQ0FBQSwwQkFBQSxDQUFBLENBQUEsSUFBQSxDQUFBLEVBQUE4bEIsQ0FBQSxDQUFBbVEsQ0FBQSxDQUFBL3JDLE1BQUEsQ0FBQSxDQUFBLENBQUE0N0IsQ0FBQSxFQUFBLENBQUEsQ0FBQUEsQ0FBQSxFQUFBLEVBQUFtUSxDQUFBLENBQUFuUSxDQUFBLENBQUEsQ0FBQSxDQUFBLEVBQUFuN0IsSUFBQSxDQUFBOUIsQ0FBQSxFQUFBLENBQUEsTUFBQWdtQixDQUFBQSxDQUFBLENBQUErbUIsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBd3pCLHdCQUFBLENBQUEsbUNBQUEsQ0FBQSxHQUFBeDJELENBQUFBLENBQUEsQ0FBQSxLQUFBeW9ELFdBQUEsQ0FBQTFrRCxJQUFBLENBQUEsU0FBQSxLQUFBKy9CLFVBQUEsQ0FBQSxRQUFBLENBQUEsQ0FBQSxLQUFBa1AsS0FBQSxDQUFBLzJCLENBQUEsQ0FBQXpqQixJQUFBLENBQUEsS0FBQXc2QyxLQUFBLENBQUEsU0FBQS8yQixDQUFBLENBQUEsQ0FBQSxJQUFBLEdBQUFobUIsQ0FBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQStKLENBQUEsQ0FBQTFJLE1BQUEsQ0FBQXJCLENBQUEsQ0FBQUEsQ0FBQSxFQUFBLEVBQUEsR0FBQStKLENBQUEsQ0FBQS9KLENBQUEsQ0FBQSxHQUFBZ21CLENBQUEsQ0FBQXE0QixJQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsTUFBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLE1BQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBaWlCLGFBQUEsQ0FBQSx1QkFBQXYyRCxDQUFBLENBQUEsQ0FBQSxLQUFBZ3pDLEtBQUEsQ0FBQSxFQUFBLENBQUEsS0FBQWlrQixVQUFBLENBQUEsQ0FBQSxJQUFBLENBQUEsQ0FBQSxHQUFBaGhFLENBQUFBLENBQUEsQ0FBQWk5QixDQUFBLENBQUFwbUIsQ0FBQSxDQUFBODFCLENBQUEsQ0FBQXpsQyxDQUFBLENBQUE2bEMsQ0FBQSxDQUFBSyxDQUFBLENBQUFwMUIsQ0FBQSxDQUFBeTNCLENBQUEsQ0FBQSxLQUFBc04sS0FBQSxDQUFBOU0sQ0FBQSxDQUFBLENBQUEsQ0FBQWpxQixDQUFBLENBQUE3bUIsVUFBQSxDQUFBLEtBQUE2RCxPQUFBLENBQUErNUMsS0FBQSxFQUFBLEtBQUEvNUMsT0FBQSxDQUFBKzVDLEtBQUEsQ0FBQXgrQyxJQUFBLENBQUEsS0FBQXl1QyxPQUFBLENBQUEsQ0FBQSxDQUFBLENBQUFqakMsQ0FBQSxDQUFBLENBQUFzMEMsSUFBQSxDQUFBLEtBQUFtVSxXQUFBLENBQUEsQ0FBQSxDQUFBeHNDLENBQUEsQ0FBQSxLQUFBaGpCLE9BQUEsQ0FBQSs1QyxLQUFBLENBQUEsS0FBQS9QLE9BQUEsQ0FBQSxDQUFBLElBQUEsQ0FBQSxDQUFBLENBQUFxRCxDQUFBLENBQUEsS0FBQTJ4QixZQUFBLEVBQUEsQ0FBQSxHQUFBM3hCLENBQUEsRUFBQSxLQUFBNzRCLEtBQUEsQ0FBQSxJQUFBeFgsQ0FBQSxDQUFBcXdDLENBQUEsQ0FBQWh2QyxNQUFBLENBQUEsQ0FBQSxDQUFBckIsQ0FBQSxFQUFBLENBQUEsQ0FBQUEsQ0FBQSxFQUFBLEVBQUEsSUFBQTZXLENBQUEsQ0FBQW1QLENBQUEsQ0FBQXFxQixDQUFBLENBQUFyd0MsQ0FBQSxDQUFBLENBQUEsS0FBQXJDLFFBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBcy9CLENBQUEsQ0FBQXBtQixDQUFBLENBQUF4VixNQUFBLENBQUEsQ0FBQSxDQUFBNDdCLENBQUEsRUFBQSxDQUFBLENBQUFBLENBQUEsRUFBQSxFQUFBMFAsQ0FBQSxDQUFBM21CLENBQUEsQ0FBQXhHLElBQUEsQ0FBQTNJLENBQUEsQ0FBQW9tQixDQUFBLENBQUEsQ0FBQSxLQUFBNlEsY0FBQSxDQUFBLENBQUFuQixDQUFBLEVBQUFBLENBQUEsR0FBQSxJQUFBLEVBQUEsQ0FBQUEsQ0FBQSxDQUFBM3BDLE9BQUEsQ0FBQTBHLFFBQUEsR0FBQXVtQyxDQUFBLENBQUF2eEMsSUFBQSxDQUFBLENBQUFzbkIsQ0FBQSxDQUFBN21CLFVBQUEsQ0FBQXd0QyxDQUFBLENBQUEzcEMsT0FBQSxDQUFBKzVDLEtBQUEsRUFBQXBRLENBQUEsQ0FBQTNwQyxPQUFBLENBQUErNUMsS0FBQSxDQUFBeCtDLElBQUEsQ0FBQW91QyxDQUFBLENBQUFLLE9BQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQWpqQyxDQUFBLENBQUEsQ0FBQXMwQyxJQUFBLENBQUEsS0FBQW1VLFdBQUEsQ0FBQSxDQUFBLENBQUF4c0MsQ0FBQSxDQUFBMm1CLENBQUEsQ0FBQTNwQyxPQUFBLENBQUErNUMsS0FBQSxDQUFBcFEsQ0FBQSxDQUFBSyxPQUFBLENBQUEsQ0FBQUwsQ0FBQSxDQUFBLEVBQUEsS0FBQXEwQixVQUFBLENBQUF0aUUsSUFBQSxDQUFBaXVDLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLElBQUEzc0MsQ0FBQSxDQUFBaXdDLENBQUEsQ0FBQTV1QyxNQUFBLENBQUEsQ0FBQSxDQUFBckIsQ0FBQSxFQUFBLENBQUEsQ0FBQUEsQ0FBQSxFQUFBLEVBQUEsSUFBQWtILENBQUEsQ0FBQStvQyxDQUFBLENBQUFqd0MsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUErc0MsQ0FBQSxDQUFBa0QsQ0FBQSxDQUFBandDLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBaTlCLENBQUEsQ0FBQSxDQUFBLENBQUFqbEIsQ0FBQSxDQUFBKzBCLENBQUEsQ0FBQTFyQyxNQUFBLENBQUEyVyxDQUFBLENBQUFpbEIsQ0FBQSxDQUFBQSxDQUFBLEVBQUEsRUFBQW1RLENBQUEsQ0FBQXBuQixDQUFBLENBQUErbUIsQ0FBQSxDQUFBOVAsQ0FBQSxDQUFBLENBQUEsQ0FBQW1RLENBQUEsQ0FBQTV0QixJQUFBLENBQUEsS0FBQXF1QixVQUFBLENBQUEsT0FBQSxDQUFBM21DLENBQUEsQ0FBQSxDQUFBdW9DLENBQUEsQ0FBQS93QyxJQUFBLENBQUEsQ0FBQTIvQyxJQUFBLENBQUFqUixDQUFBLENBQUFnekIsUUFBQSxDQUFBbDVELENBQUEsQ0FBQW9vQixLQUFBLENBQUEsQ0FBQSxDQUFBbUIsTUFBQSxDQUFBLENBQUEsQ0FBQWtELElBQUEsQ0FBQSxDQUFBLENBQUF0bUIsR0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQXdoRCxnQkFBQSxDQUFBLDBCQUFBOWtELENBQUEsQ0FBQSxDQUFBLEtBQUE4M0QsUUFBQSxDQUFBLEtBQUE5a0IsS0FBQSxDQUFBMTdDLE1BQUEsQ0FBQSxNQUFBLEtBQUEyQixPQUFBLENBQUFzckQsSUFBQSxFQUFBLEtBQUE2UixXQUFBLENBQUEsS0FBQXBqQixLQUFBLENBQUEsQ0FBQSxFQUFBc0IsSUFBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsS0FBQXpYLFlBQUEsRUFBQSxLQUFBK25CLE1BQUEsR0FBQSxLQUFBOW9CLE1BQUEsQ0FBQXgwQixNQUFBLENBQUEsS0FBQTgvQyxnQkFBQSxFQUFBLENBQUEsQ0FBQSxHQUFBbnhELENBQUFBLENBQUEsQ0FBQWk5QixDQUFBLENBQUFwbUIsQ0FBQSxDQUFBODFCLENBQUEsQ0FBQSxJQUFBM3NDLENBQUEsQ0FBQSxLQUFBKzhDLEtBQUEsQ0FBQTE3QyxNQUFBLENBQUEsQ0FBQSxDQUFBckIsQ0FBQSxFQUFBLENBQUEsQ0FBQUEsQ0FBQSxFQUFBLEVBQUFpOUIsQ0FBQSxDQUFBLEtBQUE4ZixLQUFBLENBQUEvOEMsQ0FBQSxDQUFBLENBQUFpOUIsQ0FBQSxDQUFBbWpDLFFBQUEsR0FBQSxLQUFBSSxnQkFBQSxFQUFBLEtBQUFBLGdCQUFBLEVBQUF2akMsQ0FBQSxDQUFBb2hCLElBQUEsQ0FBQSxDQUFBLElBQUEsS0FBQW1VLFdBQUEsQ0FBQSxDQUFBLENBQUEsR0FBQTM3QyxDQUFBLENBQUEsS0FBQTdULE9BQUEsQ0FBQWkvRCxnQkFBQSxDQUFBajhDLENBQUEsQ0FBQSxLQUFBaGpCLE9BQUEsQ0FBQWkvRCxnQkFBQSxDQUFBaGxDLENBQUEsQ0FBQW9oQixJQUFBLENBQUEsQ0FBQXBoQixDQUFBLENBQUFvaEIsSUFBQSxDQUFBdDBDLENBQUEsR0FBQWt6QixDQUFBLENBQUEzTixLQUFBLENBQUF6WSxDQUFBLENBQUFxNUIsVUFBQSxFQUFBLENBQUFqVCxDQUFBLENBQUF4TSxNQUFBLENBQUE1WixDQUFBLENBQUFzNUIsV0FBQSxFQUFBLENBQUEsQ0FBQXhELENBQUEsQ0FBQTkxQixDQUFBLENBQUFndkIsTUFBQSxFQUFBLENBQUE1SSxDQUFBLENBQUF0SixJQUFBLENBQUFnWixDQUFBLENBQUFoWixJQUFBLENBQUFzSixDQUFBLENBQUE1dkIsR0FBQSxDQUFBcy9CLENBQUEsQ0FBQXQvQixHQUFBLENBQUEsQ0FBQSxDQUFBLEdBQUEsS0FBQXJLLE9BQUEsQ0FBQWsvRCxNQUFBLEVBQUEsS0FBQWwvRCxPQUFBLENBQUFrL0QsTUFBQSxDQUFBQyxpQkFBQSxDQUFBLEtBQUFuL0QsT0FBQSxDQUFBay9ELE1BQUEsQ0FBQUMsaUJBQUEsQ0FBQTVqRSxJQUFBLENBQUEsSUFBQSxFQUFBLElBQUEsS0FBQXlCLENBQUEsQ0FBQSxLQUFBZ2hFLFVBQUEsQ0FBQTMvRCxNQUFBLENBQUEsQ0FBQSxDQUFBckIsQ0FBQSxFQUFBLENBQUEsQ0FBQUEsQ0FBQSxFQUFBLEVBQUEyc0MsQ0FBQSxDQUFBLEtBQUFxMEIsVUFBQSxDQUFBaGhFLENBQUEsRUFBQWd0QyxPQUFBLENBQUFuSCxNQUFBLEVBQUEsQ0FBQSxLQUFBbTdCLFVBQUEsQ0FBQWhoRSxDQUFBLEVBQUFzeUQsY0FBQSxDQUFBMytCLElBQUEsQ0FBQWdaLENBQUEsQ0FBQWhaLElBQUEsQ0FBQSxLQUFBcXRDLFVBQUEsQ0FBQWhoRSxDQUFBLEVBQUFzeUQsY0FBQSxDQUFBamxELEdBQUEsQ0FBQXMvQixDQUFBLENBQUF0L0IsR0FBQSxDQUFBLEtBQUEyekQsVUFBQSxDQUFBaGhFLENBQUEsRUFBQXN5RCxjQUFBLENBQUFoakMsS0FBQSxDQUFBLEtBQUEweEMsVUFBQSxDQUFBaGhFLENBQUEsRUFBQWd0QyxPQUFBLENBQUFrRCxVQUFBLEVBQUEsQ0FBQSxLQUFBOHdCLFVBQUEsQ0FBQWhoRSxDQUFBLEVBQUFzeUQsY0FBQSxDQUFBN2hDLE1BQUEsQ0FBQSxLQUFBdXdDLFVBQUEsQ0FBQWhoRSxDQUFBLEVBQUFndEMsT0FBQSxDQUFBbUQsV0FBQSxFQUFBLENBQUEsQ0FBQSxNQUFBLEtBQUEsQ0FBQSxDQUFBLENBQUF1d0Isa0JBQUEsQ0FBQSw0QkFBQTMyRCxDQUFBLENBQUEsQ0FBQUEsQ0FBQSxDQUFBQSxDQUFBLEVBQUEsSUFBQSxDQUFBLEdBQUEvSixDQUFBQSxDQUFBLENBQUFpOUIsQ0FBQSxDQUFBbHpCLENBQUEsQ0FBQS9HLE9BQUEsQ0FBQWk2QixDQUFBLENBQUFrMUIsV0FBQSxFQUFBbDFCLENBQUEsQ0FBQWsxQixXQUFBLENBQUEvd0QsV0FBQSxHQUFBNEgsTUFBQSxHQUFBaEosQ0FBQSxDQUFBaTlCLENBQUEsQ0FBQWsxQixXQUFBLENBQUFsMUIsQ0FBQSxDQUFBazFCLFdBQUEsQ0FBQSxDQUFBbmxCLE9BQUEsQ0FBQSxrQkFBQSxDQUFBLEdBQUEvUCxDQUFBQSxDQUFBLENBQUFsekIsQ0FBQSxDQUFBeW9ELFdBQUEsQ0FBQSxDQUFBLEVBQUE3b0QsUUFBQSxDQUFBcEUsV0FBQSxFQUFBLENBQUFzUixDQUFBLENBQUFtUCxDQUFBLENBQUEsSUFBQWlYLENBQUEsQ0FBQSxHQUFBLENBQUFsekIsQ0FBQSxDQUFBcE0sUUFBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsTUFBQW9NLENBQUFBLENBQUEsQ0FBQXlsQyxTQUFBLENBQUEzNEIsQ0FBQSxDQUFBLHlCQUFBLENBQUE3VyxDQUFBLEVBQUErSixDQUFBLENBQUF5b0QsV0FBQSxDQUFBLENBQUEsRUFBQWhsRCxTQUFBLEVBQUF3aEMsWUFBQSxDQUFBbjRCLENBQUEsQ0FBQSxvQkFBQSxFQUFBLFVBQUFvbUIsQ0FBQSxDQUFBbHpCLENBQUEsQ0FBQXE0RCxvQkFBQSxDQUFBcjRELENBQUEsQ0FBQXlvRCxXQUFBLENBQUExa0QsSUFBQSxDQUFBLElBQUEsRUFBQTFMLEVBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQTRqQixDQUFBLENBQUEsTUFBQSxDQUFBamMsQ0FBQSxDQUFBcE0sUUFBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUFtd0IsUUFBQSxDQUFBalgsQ0FBQSxDQUFBLENBQUEsQ0FBQSxPQUFBb21CLENBQUEsQ0FBQWx6QixDQUFBLENBQUFxNEQsb0JBQUEsQ0FBQXI0RCxDQUFBLENBQUF5b0QsV0FBQSxDQUFBMzdDLENBQUEsQ0FBQSxDQUFBLFFBQUFvbUIsQ0FBQSxFQUFBcG1CLENBQUEsQ0FBQXhILElBQUEsQ0FBQSxLQUFBLENBQUF0RixDQUFBLENBQUF5b0QsV0FBQSxDQUFBbmpELElBQUEsQ0FBQSxLQUFBLENBQUEsQ0FBQSxDQUFBclAsQ0FBQSxFQUFBNlcsQ0FBQSxDQUFBNEssR0FBQSxDQUFBLFlBQUEsQ0FBQSxRQUFBLENBQUEsQ0FBQTVLLENBQUEsQ0FBQSxDQUFBLENBQUFvcEQsTUFBQSxDQUFBLGdCQUFBajZDLENBQUEsQ0FBQW5QLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQTdXLENBQUEsRUFBQWk5QixDQUFBLENBQUE0aUMsb0JBQUEsSUFBQWhwRCxDQUFBLENBQUE0WixNQUFBLElBQUE1WixDQUFBLENBQUE0WixNQUFBLENBQUExbUIsQ0FBQSxDQUFBeW9ELFdBQUEsQ0FBQS9hLFdBQUEsR0FBQS9tQixRQUFBLENBQUEzbUIsQ0FBQSxDQUFBeW9ELFdBQUEsQ0FBQS93QyxHQUFBLENBQUEsWUFBQSxHQUFBLENBQUEsQ0FBQSxFQUFBLENBQUEsQ0FBQWlQLFFBQUEsQ0FBQTNtQixDQUFBLENBQUF5b0QsV0FBQSxDQUFBL3dDLEdBQUEsQ0FBQSxlQUFBLEdBQUEsQ0FBQSxDQUFBLEVBQUEsQ0FBQSxDQUFBLENBQUE1SyxDQUFBLENBQUF5WSxLQUFBLElBQUF6WSxDQUFBLENBQUF5WSxLQUFBLENBQUF2bEIsQ0FBQSxDQUFBeW9ELFdBQUEsQ0FBQTlhLFVBQUEsR0FBQWhuQixRQUFBLENBQUEzbUIsQ0FBQSxDQUFBeW9ELFdBQUEsQ0FBQS93QyxHQUFBLENBQUEsYUFBQSxHQUFBLENBQUEsQ0FBQSxFQUFBLENBQUEsQ0FBQWlQLFFBQUEsQ0FBQTNtQixDQUFBLENBQUF5b0QsV0FBQSxDQUFBL3dDLEdBQUEsQ0FBQSxjQUFBLEdBQUEsQ0FBQSxDQUFBLEVBQUEsQ0FBQSxDQUFBLEVBQUEsQ0FBQSxDQUFBLEVBQUExWCxDQUFBLENBQUFvb0QsV0FBQSxDQUFBbnNDLENBQUEsQ0FBQWlYLENBQUEsQ0FBQWsxQixXQUFBLENBQUFubEIsT0FBQSxDQUFBenVDLElBQUEsQ0FBQXdMLENBQUEsQ0FBQWlqQyxPQUFBLENBQUFqakMsQ0FBQSxDQUFBeW9ELFdBQUEsQ0FBQSxDQUFBLENBQUF6b0QsQ0FBQSxDQUFBeW9ELFdBQUEsQ0FBQTdrQyxLQUFBLENBQUE1akIsQ0FBQSxDQUFBb29ELFdBQUEsQ0FBQSxDQUFBbDFCLENBQUEsQ0FBQWsxQixXQUFBLENBQUE4TixNQUFBLENBQUFsMkQsQ0FBQSxDQUFBQSxDQUFBLENBQUFvb0QsV0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBaVEsb0JBQUEsQ0FBQSw4QkFBQXI0RCxDQUFBLENBQUEvSixDQUFBLENBQUEsQ0FBQSxHQUFBaTlCLENBQUFBLENBQUEsQ0FBQSxJQUFBLENBQUFsekIsQ0FBQSxDQUFBNE4sUUFBQSxHQUFBN1YsSUFBQSxDQUFBLFVBQUEsQ0FBQWtrQixDQUFBLENBQUEsaUJBQUEsQ0FBQWlYLENBQUEsQ0FBQXQvQixRQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQTBSLElBQUEsQ0FBQSxTQUFBLENBQUEyVyxDQUFBLENBQUEsSUFBQSxDQUFBLENBQUEzVyxJQUFBLENBQUEsU0FBQSxHQUFBLENBQUEsRUFBQXllLFFBQUEsQ0FBQTl0QixDQUFBLEVBQUEsQ0FBQSxFQUFBLENBQUEsQ0FBQXNoRSxrQkFBQSxDQUFBLDRCQUFBdjNELENBQUEsQ0FBQSxDQUFBLEdBQUEvSixDQUFBQSxDQUFBLENBQUFpOUIsQ0FBQSxDQUFBcG1CLENBQUEsQ0FBQTgxQixDQUFBLENBQUF6bEMsQ0FBQSxDQUFBNmxDLENBQUEsQ0FBQUssQ0FBQSxDQUFBcDFCLENBQUEsQ0FBQXkzQixDQUFBLENBQUFRLENBQUEsQ0FBQUksQ0FBQSxDQUFBLElBQUEsQ0FBQXBiLENBQUEsQ0FBQSxJQUFBLENBQUEsSUFBQWoxQixDQUFBLENBQUEsS0FBQWdoRSxVQUFBLENBQUEzL0QsTUFBQSxDQUFBLENBQUEsQ0FBQXJCLENBQUEsRUFBQSxDQUFBLENBQUFBLENBQUEsRUFBQSxFQUFBLEdBQUEsQ0FBQWdtQixDQUFBLENBQUF6ZixRQUFBLENBQUEsS0FBQWlzRCxXQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsS0FBQXdPLFVBQUEsQ0FBQWhoRSxDQUFBLEVBQUFndEMsT0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsR0FBQSxLQUFBcWxCLGVBQUEsQ0FBQSxLQUFBMk8sVUFBQSxDQUFBaGhFLENBQUEsRUFBQXN5RCxjQUFBLENBQUEsQ0FBQSxDQUFBLEdBQUFqaUIsQ0FBQSxFQUFBcnFCLENBQUEsQ0FBQXpmLFFBQUEsQ0FBQSxLQUFBeTZELFVBQUEsQ0FBQWhoRSxDQUFBLEVBQUFndEMsT0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBcUQsQ0FBQSxDQUFBckQsT0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsU0FBQXFELENBQUEsQ0FBQSxLQUFBMndCLFVBQUEsQ0FBQWhoRSxDQUFBLENBQUEsQ0FBQWkxQixDQUFBLENBQUFqMUIsQ0FBQSxDQUFBLENBQUEsSUFBQSxNQUFBZ2hFLFVBQUEsQ0FBQWhoRSxDQUFBLEVBQUFzeUQsY0FBQSxDQUFBbUgsSUFBQSxHQUFBLEtBQUF1SCxVQUFBLENBQUFoaEUsQ0FBQSxFQUFBa3RDLFFBQUEsQ0FBQSxLQUFBLENBQUFuakMsQ0FBQSxDQUFBLEtBQUF1bkQsT0FBQSxDQUFBLElBQUEsQ0FBQSxFQUFBLEtBQUEwUCxVQUFBLENBQUFoaEUsQ0FBQSxFQUFBc3lELGNBQUEsQ0FBQW1ILElBQUEsQ0FBQSxDQUFBLEVBQUEsQ0FBQSxHQUFBcHBCLENBQUEsQ0FBQSxHQUFBLElBQUEsS0FBQTJ3QixVQUFBLENBQUEzL0QsTUFBQSxDQUFBLEtBQUEyL0QsVUFBQSxDQUFBL3JDLENBQUEsRUFBQXE5QixjQUFBLENBQUFtSCxJQUFBLEdBQUEsS0FBQXVILFVBQUEsQ0FBQS9yQyxDQUFBLEVBQUFpWSxRQUFBLENBQUEsTUFBQSxDQUFBbmpDLENBQUEsQ0FBQSxLQUFBdW5ELE9BQUEsQ0FBQSxJQUFBLENBQUEsRUFBQSxLQUFBMFAsVUFBQSxDQUFBL3JDLENBQUEsRUFBQXE5QixjQUFBLENBQUFtSCxJQUFBLENBQUEsQ0FBQSxFQUFBLElBQUEsQ0FBQSxJQUFBNWlELENBQUEsQ0FBQSxHQUFBLENBQUE4MUIsQ0FBQSxDQUFBLElBQUEsQ0FBQThDLENBQUEsQ0FBQVksQ0FBQSxDQUFBd3hCLFFBQUEsRUFBQSxLQUFBMUIsV0FBQSxDQUFBLEtBQUEzTixXQUFBLENBQUEsQ0FBQXRyRCxDQUFBLENBQUF1b0MsQ0FBQSxDQUFBLE1BQUEsQ0FBQSxLQUFBLENBQUExQyxDQUFBLENBQUEwQyxDQUFBLENBQUEsT0FBQSxDQUFBLFFBQUEsQ0FBQVEsQ0FBQSxDQUFBUixDQUFBLENBQUEsT0FBQSxDQUFBLE9BQUEsQ0FBQXhTLENBQUEsQ0FBQSxLQUFBOGYsS0FBQSxDQUFBMTdDLE1BQUEsQ0FBQSxDQUFBLENBQUE0N0IsQ0FBQSxFQUFBLENBQUEsQ0FBQUEsQ0FBQSxFQUFBLEVBQUFqWCxDQUFBLENBQUF6ZixRQUFBLENBQUEsS0FBQXk2RCxVQUFBLENBQUEvckMsQ0FBQSxFQUFBK1gsT0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLEtBQUErUCxLQUFBLENBQUE5ZixDQUFBLEVBQUFvaEIsSUFBQSxDQUFBLENBQUEsQ0FBQSxHQUFBLEtBQUF0QixLQUFBLENBQUE5ZixDQUFBLEVBQUFvaEIsSUFBQSxDQUFBLENBQUEsSUFBQSxLQUFBbVUsV0FBQSxDQUFBLENBQUEsQ0FBQSxHQUFBcGxCLENBQUEsQ0FBQSxLQUFBMlAsS0FBQSxDQUFBOWYsQ0FBQSxFQUFBb2hCLElBQUEsQ0FBQXhZLE1BQUEsR0FBQTMrQixDQUFBLENBQUEsQ0FBQThRLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQWpPLENBQUEsQ0FBQWttQyxDQUFBLENBQUEsQ0FBQTdDLENBQUEsQ0FBQSxLQUFBMlAsS0FBQSxDQUFBOWYsQ0FBQSxFQUFBOFAsQ0FBQSxFQUFBLENBQUEsR0FBQS8wQixDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQW5CLENBQUEsQ0FBQWpULElBQUEsQ0FBQXdzQyxHQUFBLENBQUFybUMsQ0FBQSxDQUFBa21DLENBQUEsQ0FBQSxDQUFBN0MsQ0FBQSxDQUFBLEdBQUF2MkIsQ0FBQSxDQUFBalQsSUFBQSxDQUFBd3NDLEdBQUEsQ0FBQXJtQyxDQUFBLENBQUFrbUMsQ0FBQSxDQUFBLENBQUE3QyxDQUFBLENBQUEsQ0FBQVQsQ0FBQSxDQUFBLEtBQUFvUSxLQUFBLENBQUE5ZixDQUFBLENBQUEsQ0FBQSxLQUFBcWIsU0FBQSxDQUFBdGdDLENBQUEsQ0FBQSxJQUFBLENBQUEsTUFBQSxDQUFBLEVBQUEsQ0FBQSxHQUFBLENBQUEyMEIsQ0FBQSxFQUFBLENBQUEsS0FBQTNwQyxPQUFBLENBQUE0OEQsV0FBQSxDQUFBLE9BQUEsR0FBQSxLQUFBWSxnQkFBQSxHQUFBLEtBQUFRLFVBQUEsQ0FBQS9yQyxDQUFBLENBQUEsQ0FBQSxNQUFBLE1BQUF1ckMsZ0JBQUEsQ0FBQWxPLGNBQUEsQ0FBQW1ILElBQUEsR0FBQSxLQUFBdUgsVUFBQSxDQUFBL3JDLENBQUEsRUFBQWlZLFFBQUEsQ0FBQSxNQUFBLENBQUFuakMsQ0FBQSxDQUFBLEtBQUF1bkQsT0FBQSxFQUFBLEVBQUEsS0FBQWtQLGdCQUFBLENBQUFsTyxjQUFBLENBQUFtSCxJQUFBLENBQUEsQ0FBQSxFQUFBLElBQUEsRUFBQSxDQUFBOXNCLENBQUEsQ0FBQSxLQUFBMDBCLFVBQUEsQ0FBQXQzRCxDQUFBLENBQUE0aUMsQ0FBQSxDQUFBLElBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLEtBQUEwMEIsVUFBQSxDQUFBdDNELENBQUEsQ0FBQSxJQUFBLENBQUEsS0FBQWkzRCxVQUFBLENBQUEvckMsQ0FBQSxFQUFBK1gsT0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsS0FBQUUsUUFBQSxDQUFBLFFBQUEsQ0FBQW5qQyxDQUFBLENBQUEsS0FBQXVuRCxPQUFBLEVBQUEsQ0FBQSxDQUFBLEtBQUEwUCxVQUFBLENBQUEvckMsQ0FBQSxFQUFBaVksUUFBQSxDQUFBLFFBQUEsQ0FBQW5qQyxDQUFBLENBQUEsS0FBQXVuRCxPQUFBLENBQUEsSUFBQSxDQUFBLENBQUEsQ0FBQSxLQUFBa1AsZ0JBQUEsQ0FBQSxLQUFBUSxVQUFBLENBQUEvckMsQ0FBQSxDQUFBLENBQUEsS0FBQWp5QixPQUFBLENBQUFtdkQsV0FBQSxDQUFBOE4sTUFBQSxDQUFBLEtBQUFPLGdCQUFBLENBQUEsS0FBQXJPLFdBQUEsQ0FBQSxDQUFBLEtBQUE2TyxVQUFBLENBQUEvckMsQ0FBQSxFQUFBaVksUUFBQSxDQUFBLE1BQUEsQ0FBQW5qQyxDQUFBLENBQUEsS0FBQXVuRCxPQUFBLENBQUEsSUFBQSxDQUFBLENBQUEsQ0FBQSxLQUFBMFAsVUFBQSxDQUFBL3JDLENBQUEsRUFBQXE5QixjQUFBLENBQUFtSCxJQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBekosYUFBQSxDQUFBLHVCQUFBam1ELENBQUEsQ0FBQSxDQUFBLEdBQUEvSixDQUFBQSxDQUFBLENBQUEsS0FBQWdELE9BQUEsQ0FBQWk2QixDQUFBLENBQUFqWCxDQUFBLENBQUE3bUIsVUFBQSxDQUFBYSxDQUFBLENBQUEydUQsTUFBQSxFQUFBM29DLENBQUEsQ0FBQWhtQixDQUFBLENBQUEydUQsTUFBQSxDQUFBbHdELEtBQUEsQ0FBQSxLQUFBdXVDLE9BQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBampDLENBQUEsQ0FBQSxLQUFBeW9ELFdBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxVQUFBeHlELENBQUEsQ0FBQTJ1RCxNQUFBLENBQUEsS0FBQTZELFdBQUEsQ0FBQXB2RCxLQUFBLEVBQUEsQ0FBQSxLQUFBb3ZELFdBQUEsQ0FBQSxNQUFBdjFCLENBQUFBLENBQUEsQ0FBQTFrQixPQUFBLENBQUEsTUFBQSxFQUFBbFgsTUFBQSxFQUFBMmtCLENBQUEsQ0FBQSxXQUFBaG1CLENBQUEsQ0FBQTh0QixRQUFBLENBQUE5dEIsQ0FBQSxDQUFBOHRCLFFBQUEsQ0FBQSxLQUFBMGtDLFdBQUEsQ0FBQSxDQUFBLEVBQUEveEQsVUFBQSxDQUFBLENBQUEsQ0FBQSxFQUFBRCxXQUFBLENBQUF5OEIsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsR0FBQSxLQUFBdTFCLFdBQUEsQ0FBQSxDQUFBLENBQUEsR0FBQSxLQUFBTixVQUFBLENBQUEsQ0FBQTVpQyxLQUFBLENBQUEsS0FBQWtqQyxXQUFBLENBQUEsQ0FBQSxFQUFBanhDLEtBQUEsQ0FBQStOLEtBQUEsQ0FBQW1CLE1BQUEsQ0FBQSxLQUFBK2hDLFdBQUEsQ0FBQSxDQUFBLEVBQUFqeEMsS0FBQSxDQUFBa1AsTUFBQSxDQUFBbEIsUUFBQSxDQUFBLEtBQUFpakMsV0FBQSxDQUFBL3dDLEdBQUEsQ0FBQSxVQUFBLENBQUEsQ0FBQXBVLEdBQUEsQ0FBQSxLQUFBbWxELFdBQUEsQ0FBQS93QyxHQUFBLENBQUEsS0FBQSxDQUFBLENBQUFrUyxJQUFBLENBQUEsS0FBQTYrQixXQUFBLENBQUEvd0MsR0FBQSxDQUFBLE1BQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUF3YixDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUExYixLQUFBLENBQUErTixLQUFBLEVBQUF0dkIsQ0FBQSxDQUFBOC9ELGVBQUEsR0FBQTdpQyxDQUFBLENBQUEzTixLQUFBLENBQUEsS0FBQWtqQyxXQUFBLENBQUFsakMsS0FBQSxFQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEyTixDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUExYixLQUFBLENBQUFrUCxNQUFBLEVBQUF6d0IsQ0FBQSxDQUFBOC9ELGVBQUEsR0FBQTdpQyxDQUFBLENBQUF4TSxNQUFBLENBQUEsS0FBQStoQyxXQUFBLENBQUEvaEMsTUFBQSxFQUFBLENBQUEsQ0FBQXdNLENBQUEsQ0FBQSxDQUFBLENBQUEyekIsdUJBQUEsQ0FBQSxpQ0FBQTdtRCxDQUFBLENBQUEsQ0FBQSxVQUFBLE1BQUFBLENBQUFBLENBQUEsR0FBQUEsQ0FBQSxDQUFBQSxDQUFBLENBQUExRSxLQUFBLENBQUEsR0FBQSxDQUFBLEVBQUEyZ0IsQ0FBQSxDQUFBdmlCLE9BQUEsQ0FBQXNHLENBQUEsSUFBQUEsQ0FBQSxDQUFBLENBQUE0cEIsSUFBQSxDQUFBLENBQUE1cEIsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBc0QsR0FBQSxDQUFBLENBQUF0RCxDQUFBLENBQUEsQ0FBQSxDQUFBLEVBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxRQUFBQSxDQUFBQSxDQUFBLEdBQUEsS0FBQTg3QixNQUFBLENBQUFwZCxLQUFBLENBQUFrTCxJQUFBLENBQUE1cEIsQ0FBQSxDQUFBNHBCLElBQUEsQ0FBQSxLQUFBdTlCLE9BQUEsQ0FBQXY5QixJQUFBLENBQUEsQ0FBQSxTQUFBNXBCLENBQUFBLENBQUEsR0FBQSxLQUFBODdCLE1BQUEsQ0FBQXBkLEtBQUEsQ0FBQWtMLElBQUEsQ0FBQSxLQUFBZytCLGlCQUFBLENBQUFyaUMsS0FBQSxDQUFBdmxCLENBQUEsQ0FBQW9sQixLQUFBLENBQUEsS0FBQStoQyxPQUFBLENBQUF2OUIsSUFBQSxDQUFBLENBQUEsT0FBQTVwQixDQUFBQSxDQUFBLEdBQUEsS0FBQTg3QixNQUFBLENBQUFwZCxLQUFBLENBQUFwYixHQUFBLENBQUF0RCxDQUFBLENBQUFzRCxHQUFBLENBQUEsS0FBQTZqRCxPQUFBLENBQUE3akQsR0FBQSxDQUFBLENBQUEsVUFBQXRELENBQUFBLENBQUEsR0FBQSxLQUFBODdCLE1BQUEsQ0FBQXBkLEtBQUEsQ0FBQXBiLEdBQUEsQ0FBQSxLQUFBc2tELGlCQUFBLENBQUFsaEMsTUFBQSxDQUFBMW1CLENBQUEsQ0FBQWdzQyxNQUFBLENBQUEsS0FBQW1iLE9BQUEsQ0FBQTdqRCxHQUFBLENBQUEsQ0FBQSxDQUFBLENBQUE4akQsZ0JBQUEsQ0FBQSwyQkFBQSxDQUFBLEtBQUF2cUIsWUFBQSxDQUFBLEtBQUErbkIsTUFBQSxDQUFBL25CLFlBQUEsRUFBQSxDQUFBLEdBQUE3OEIsQ0FBQUEsQ0FBQSxDQUFBLEtBQUE2OEIsWUFBQSxDQUFBZixNQUFBLEVBQUEsQ0FBQSxNQUFBLGFBQUEsS0FBQXVxQixXQUFBLEVBQUEsS0FBQTVWLFlBQUEsQ0FBQSxDQUFBLElBQUEsS0FBQTc4QyxRQUFBLENBQUEsQ0FBQSxDQUFBLEVBQUFxb0IsQ0FBQSxDQUFBemYsUUFBQSxDQUFBLEtBQUFpMEMsWUFBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLEtBQUE1VCxZQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsR0FBQTc4QixDQUFBLENBQUE0cEIsSUFBQSxFQUFBLEtBQUE2bUIsWUFBQSxDQUFBemxCLFVBQUEsRUFBQSxDQUFBaHJCLENBQUEsQ0FBQXNELEdBQUEsRUFBQSxLQUFBbXRDLFlBQUEsQ0FBQTFsQixTQUFBLEVBQUEsRUFBQSxDQUFBLEtBQUE4UixZQUFBLENBQUEsQ0FBQSxJQUFBLEtBQUFqcEMsUUFBQSxDQUFBLENBQUEsRUFBQTRrQixJQUFBLEVBQUEsS0FBQXFrQixZQUFBLENBQUEsQ0FBQSxFQUFBOGMsT0FBQSxFQUFBLFNBQUEsS0FBQTljLFlBQUEsQ0FBQSxDQUFBLEVBQUE4YyxPQUFBLENBQUFuK0MsV0FBQSxFQUFBLEVBQUF5Z0IsQ0FBQSxDQUFBbW5CLEVBQUEsQ0FBQXFmLEVBQUEsSUFBQXppRCxDQUFBLENBQUEsQ0FBQXNELEdBQUEsQ0FBQSxDQUFBLENBQUFzbUIsSUFBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQXRtQixHQUFBLENBQUF0RCxDQUFBLENBQUFzRCxHQUFBLEVBQUFxakIsUUFBQSxDQUFBLEtBQUFrVyxZQUFBLENBQUFubEIsR0FBQSxDQUFBLGdCQUFBLENBQUEsQ0FBQSxFQUFBLENBQUEsRUFBQSxDQUFBLENBQUEsQ0FBQWtTLElBQUEsQ0FBQTVwQixDQUFBLENBQUE0cEIsSUFBQSxFQUFBakQsUUFBQSxDQUFBLEtBQUFrVyxZQUFBLENBQUFubEIsR0FBQSxDQUFBLGlCQUFBLENBQUEsQ0FBQSxFQUFBLENBQUEsRUFBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQTJ2QyxrQkFBQSxDQUFBLDZCQUFBLENBQUEsR0FBQSxhQUFBLEtBQUFoQixXQUFBLENBQUEsQ0FBQSxHQUFBcHFDLENBQUFBLENBQUEsQ0FBQSxLQUFBd3NDLFdBQUEsQ0FBQWpqQyxRQUFBLEVBQUEsQ0FBQSxNQUFBLENBQUFsaUIsR0FBQSxDQUFBMlksQ0FBQSxDQUFBM1ksR0FBQSxFQUFBcWpCLFFBQUEsQ0FBQSxLQUFBaStCLE1BQUEsQ0FBQWx0QyxHQUFBLENBQUEsS0FBQSxDQUFBLENBQUEsRUFBQSxDQUFBLEVBQUEsQ0FBQSxFQUFBLEtBQUErNEIsWUFBQSxDQUFBMWxCLFNBQUEsRUFBQSxDQUFBbkIsSUFBQSxDQUFBM04sQ0FBQSxDQUFBMk4sSUFBQSxFQUFBakQsUUFBQSxDQUFBLEtBQUFpK0IsTUFBQSxDQUFBbHRDLEdBQUEsQ0FBQSxNQUFBLENBQUEsQ0FBQSxFQUFBLENBQUEsRUFBQSxDQUFBLEVBQUEsS0FBQSs0QixZQUFBLENBQUF6bEIsVUFBQSxFQUFBLENBQUEsQ0FBQSxPQUFBLENBQUExbkIsR0FBQSxDQUFBLENBQUEsQ0FBQXNtQixJQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBdzhCLGFBQUEsQ0FBQSx3QkFBQSxDQUFBLEtBQUFlLE9BQUEsQ0FBQSxDQUFBdjlCLElBQUEsQ0FBQWpELFFBQUEsQ0FBQSxLQUFBOGhDLFdBQUEsQ0FBQS93QyxHQUFBLENBQUEsWUFBQSxDQUFBLENBQUEsRUFBQSxDQUFBLEVBQUEsQ0FBQSxDQUFBcFUsR0FBQSxDQUFBcWpCLFFBQUEsQ0FBQSxLQUFBOGhDLFdBQUEsQ0FBQS93QyxHQUFBLENBQUEsV0FBQSxDQUFBLENBQUEsRUFBQSxDQUFBLEVBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBd3VDLHVCQUFBLENBQUEsa0NBQUEsQ0FBQSxLQUFBMEIsaUJBQUEsQ0FBQSxDQUFBcmlDLEtBQUEsQ0FBQSxLQUFBcS9CLE1BQUEsQ0FBQXplLFVBQUEsRUFBQSxDQUFBemYsTUFBQSxDQUFBLEtBQUFrK0IsTUFBQSxDQUFBeGUsV0FBQSxFQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEwZ0IsZUFBQSxDQUFBLDBCQUFBLENBQUEsR0FBQTltRCxDQUFBQSxDQUFBLENBQUEvSixDQUFBLENBQUFpOUIsQ0FBQSxDQUFBcG1CLENBQUEsQ0FBQSxLQUFBN1QsT0FBQSxDQUFBLFdBQUE2VCxDQUFBLENBQUEyM0MsV0FBQSxHQUFBMzNDLENBQUEsQ0FBQTIzQyxXQUFBLENBQUEsS0FBQUcsTUFBQSxDQUFBLENBQUEsRUFBQWx1RCxVQUFBLEVBQUEsQ0FBQSxhQUFBb1csQ0FBQSxDQUFBMjNDLFdBQUEsRUFBQSxXQUFBMzNDLENBQUEsQ0FBQTIzQyxXQUFBLElBQUEsS0FBQUEsV0FBQSxDQUFBLENBQUEsRUFBQSxLQUFBM29CLE1BQUEsQ0FBQTUxQixRQUFBLENBQUEwakIsSUFBQSxDQUFBLEtBQUFrUyxNQUFBLENBQUF4MEIsTUFBQSxDQUFBc2lCLElBQUEsQ0FBQSxFQUFBLEtBQUFrUyxNQUFBLENBQUE1MUIsUUFBQSxDQUFBNUMsR0FBQSxDQUFBLEtBQUF3NEIsTUFBQSxDQUFBeDBCLE1BQUEsQ0FBQWhFLEdBQUEsQ0FBQSxhQUFBd0osQ0FBQSxDQUFBMjNDLFdBQUEsQ0FBQSxLQUFBN3dELFFBQUEsQ0FBQTJ4QixLQUFBLEVBQUEsQ0FBQSxLQUFBeHhCLE1BQUEsQ0FBQXd4QixLQUFBLEdBQUEsS0FBQXFpQyxpQkFBQSxDQUFBcmlDLEtBQUEsQ0FBQSxLQUFBNGhDLE9BQUEsQ0FBQXY5QixJQUFBLENBQUEsQ0FBQSxhQUFBOWMsQ0FBQSxDQUFBMjNDLFdBQUEsQ0FBQSxLQUFBN3dELFFBQUEsQ0FBQTh5QixNQUFBLElBQUE5eUIsUUFBQSxDQUFBNGtCLElBQUEsQ0FBQTloQixVQUFBLENBQUFrd0MsWUFBQSxDQUFBLEtBQUE3eUMsTUFBQSxDQUFBMnlCLE1BQUEsSUFBQSxLQUFBOXlCLFFBQUEsQ0FBQSxDQUFBLEVBQUE0a0IsSUFBQSxDQUFBOWhCLFVBQUEsQ0FBQWt3QyxZQUFBLEVBQUEsS0FBQWdoQixpQkFBQSxDQUFBbGhDLE1BQUEsQ0FBQSxLQUFBeWdDLE9BQUEsQ0FBQTdqRCxHQUFBLENBQUEsQ0FBQSxDQUFBLDZCQUFBdEMsSUFBQSxDQUFBOEwsQ0FBQSxDQUFBMjNDLFdBQUEsSUFBQXprRCxDQUFBLENBQUFpYyxDQUFBLENBQUFuUCxDQUFBLENBQUEyM0MsV0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUF4dUQsQ0FBQSxDQUFBZ21CLENBQUEsQ0FBQW5QLENBQUEsQ0FBQTIzQyxXQUFBLENBQUEsQ0FBQTNvQixNQUFBLEVBQUEsQ0FBQTVJLENBQUEsQ0FBQSxXQUFBalgsQ0FBQSxDQUFBamMsQ0FBQSxDQUFBLENBQUEwWCxHQUFBLENBQUEsVUFBQSxDQUFBLENBQUEsS0FBQStzQyxXQUFBLENBQUEsQ0FBQXh1RCxDQUFBLENBQUEyekIsSUFBQSxFQUFBakQsUUFBQSxDQUFBMUssQ0FBQSxDQUFBamMsQ0FBQSxDQUFBLENBQUEwWCxHQUFBLENBQUEsaUJBQUEsQ0FBQSxDQUFBLEVBQUEsQ0FBQSxFQUFBLENBQUEsR0FBQWlQLFFBQUEsQ0FBQTFLLENBQUEsQ0FBQWpjLENBQUEsQ0FBQSxDQUFBMFgsR0FBQSxDQUFBLGFBQUEsQ0FBQSxDQUFBLEVBQUEsQ0FBQSxFQUFBLENBQUEsRUFBQSxLQUFBeXZDLE9BQUEsQ0FBQXY5QixJQUFBLENBQUEzekIsQ0FBQSxDQUFBcU4sR0FBQSxFQUFBcWpCLFFBQUEsQ0FBQTFLLENBQUEsQ0FBQWpjLENBQUEsQ0FBQSxDQUFBMFgsR0FBQSxDQUFBLGdCQUFBLENBQUEsQ0FBQSxFQUFBLENBQUEsRUFBQSxDQUFBLEdBQUFpUCxRQUFBLENBQUExSyxDQUFBLENBQUFqYyxDQUFBLENBQUEsQ0FBQTBYLEdBQUEsQ0FBQSxZQUFBLENBQUEsQ0FBQSxFQUFBLENBQUEsRUFBQSxDQUFBLEVBQUEsS0FBQXl2QyxPQUFBLENBQUE3akQsR0FBQSxDQUFBck4sQ0FBQSxDQUFBMnpCLElBQUEsRUFBQXNKLENBQUEsQ0FBQXI1QixJQUFBLENBQUF3dUIsR0FBQSxDQUFBcm9CLENBQUEsQ0FBQTJtQyxXQUFBLENBQUEzbUMsQ0FBQSxDQUFBMGxCLFdBQUEsQ0FBQSxDQUFBMWxCLENBQUEsQ0FBQTBsQixXQUFBLEdBQUFpQixRQUFBLENBQUExSyxDQUFBLENBQUFqYyxDQUFBLENBQUEsQ0FBQTBYLEdBQUEsQ0FBQSxpQkFBQSxDQUFBLENBQUEsRUFBQSxDQUFBLEVBQUEsQ0FBQSxHQUFBaVAsUUFBQSxDQUFBMUssQ0FBQSxDQUFBamMsQ0FBQSxDQUFBLENBQUEwWCxHQUFBLENBQUEsY0FBQSxDQUFBLENBQUEsRUFBQSxDQUFBLEVBQUEsQ0FBQSxFQUFBLEtBQUFrd0MsaUJBQUEsQ0FBQXJpQyxLQUFBLENBQUEsS0FBQTRoQyxPQUFBLENBQUF2OUIsSUFBQSxDQUFBM3pCLENBQUEsQ0FBQXFOLEdBQUEsRUFBQTR2QixDQUFBLENBQUFyNUIsSUFBQSxDQUFBd3VCLEdBQUEsQ0FBQXJvQixDQUFBLENBQUE0bUMsWUFBQSxDQUFBNW1DLENBQUEsQ0FBQXk1QixZQUFBLENBQUEsQ0FBQXo1QixDQUFBLENBQUF5NUIsWUFBQSxHQUFBOVMsUUFBQSxDQUFBMUssQ0FBQSxDQUFBamMsQ0FBQSxDQUFBLENBQUEwWCxHQUFBLENBQUEsZ0JBQUEsQ0FBQSxDQUFBLEVBQUEsQ0FBQSxFQUFBLENBQUEsR0FBQWlQLFFBQUEsQ0FBQTFLLENBQUEsQ0FBQWpjLENBQUEsQ0FBQSxDQUFBMFgsR0FBQSxDQUFBLGVBQUEsQ0FBQSxDQUFBLEVBQUEsQ0FBQSxFQUFBLENBQUEsRUFBQSxLQUFBa3dDLGlCQUFBLENBQUFsaEMsTUFBQSxDQUFBLEtBQUF5Z0MsT0FBQSxDQUFBN2pELEdBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBZ2tELGtCQUFBLENBQUEsNEJBQUF0bkQsQ0FBQSxDQUFBL0osQ0FBQSxDQUFBLENBQUFBLENBQUEsR0FBQUEsQ0FBQSxDQUFBLEtBQUF1dkIsUUFBQSxDQUFBLENBQUEsR0FBQTBOLENBQUFBLENBQUEsQ0FBQSxhQUFBbHpCLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUE4TSxDQUFBLENBQUEsYUFBQSxLQUFBdTVDLFdBQUEsRUFBQSxLQUFBNVYsWUFBQSxDQUFBLENBQUEsSUFBQSxLQUFBNzhDLFFBQUEsQ0FBQSxDQUFBLENBQUEsRUFBQXFvQixDQUFBLENBQUF6ZixRQUFBLENBQUEsS0FBQWkwQyxZQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsS0FBQTVULFlBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLEtBQUE0VCxZQUFBLENBQUEsS0FBQTVULFlBQUEsQ0FBQStGLENBQUEsQ0FBQSxlQUFBNWhDLElBQUEsQ0FBQThMLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQTZzQyxPQUFBLENBQUEsQ0FBQSxNQUFBLENBQUFyMkMsR0FBQSxDQUFBck4sQ0FBQSxDQUFBcU4sR0FBQSxDQUFBLEtBQUF3NEIsTUFBQSxDQUFBNTFCLFFBQUEsQ0FBQTVDLEdBQUEsQ0FBQTR2QixDQUFBLENBQUEsS0FBQTRJLE1BQUEsQ0FBQXgwQixNQUFBLENBQUFoRSxHQUFBLENBQUE0dkIsQ0FBQSxDQUFBLENBQUEsVUFBQSxLQUFBbXpCLFdBQUEsQ0FBQSxDQUFBLEtBQUE1VixZQUFBLENBQUExbEIsU0FBQSxFQUFBLENBQUE2WCxDQUFBLENBQUEsQ0FBQSxDQUFBOTFCLENBQUEsQ0FBQWllLFNBQUEsRUFBQSxFQUFBbUksQ0FBQSxDQUFBdEosSUFBQSxDQUFBM3pCLENBQUEsQ0FBQTJ6QixJQUFBLENBQUEsS0FBQWtTLE1BQUEsQ0FBQTUxQixRQUFBLENBQUEwakIsSUFBQSxDQUFBc0osQ0FBQSxDQUFBLEtBQUE0SSxNQUFBLENBQUF4MEIsTUFBQSxDQUFBc2lCLElBQUEsQ0FBQXNKLENBQUEsQ0FBQSxDQUFBLFVBQUEsS0FBQW16QixXQUFBLENBQUEsQ0FBQSxLQUFBNVYsWUFBQSxDQUFBemxCLFVBQUEsRUFBQSxDQUFBNFgsQ0FBQSxDQUFBLENBQUEsQ0FBQTkxQixDQUFBLENBQUFrZSxVQUFBLEVBQUEsRUFBQWtJLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQXd6QixpQkFBQSxDQUFBLDJCQUFBMW1ELENBQUEsQ0FBQSxDQUFBLEdBQUEvSixDQUFBQSxDQUFBLENBQUFpOUIsQ0FBQSxDQUFBcG1CLENBQUEsQ0FBQSxLQUFBN1QsT0FBQSxDQUFBMnBDLENBQUEsQ0FBQTVpQyxDQUFBLENBQUFrZ0IsS0FBQSxDQUFBL2lCLENBQUEsQ0FBQTZDLENBQUEsQ0FBQW1nQixLQUFBLENBQUE2aUIsQ0FBQSxDQUFBLGFBQUEsS0FBQXFqQixXQUFBLEVBQUEsS0FBQTVWLFlBQUEsQ0FBQSxDQUFBLElBQUEsS0FBQTc4QyxRQUFBLENBQUEsQ0FBQSxDQUFBLEVBQUFxb0IsQ0FBQSxDQUFBemYsUUFBQSxDQUFBLEtBQUFpMEMsWUFBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLEtBQUE1VCxZQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxLQUFBNFQsWUFBQSxDQUFBLEtBQUE1VCxZQUFBLENBQUF3RyxDQUFBLENBQUEsZUFBQXJpQyxJQUFBLENBQUFnaUMsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBMlcsT0FBQSxDQUFBLENBQUEsTUFBQSxhQUFBLEtBQUEwTSxXQUFBLEVBQUEsS0FBQTVWLFlBQUEsQ0FBQSxDQUFBLElBQUEsS0FBQTc4QyxRQUFBLENBQUEsQ0FBQSxDQUFBLEVBQUEsS0FBQTY4QyxZQUFBLENBQUEsQ0FBQSxJQUFBLEtBQUE1VCxZQUFBLENBQUEsQ0FBQSxDQUFBLEdBQUEsS0FBQWYsTUFBQSxDQUFBNTFCLFFBQUEsQ0FBQSxLQUFBbWhELGtCQUFBLEVBQUEsRUFBQSxLQUFBWixnQkFBQSxHQUFBLEtBQUFoQyxXQUFBLEdBQUF6a0QsQ0FBQSxDQUFBa2dCLEtBQUEsQ0FBQSxLQUFBNGIsTUFBQSxDQUFBcGQsS0FBQSxDQUFBa0wsSUFBQSxDQUFBLEtBQUE2NkIsV0FBQSxDQUFBLENBQUEsQ0FBQSxHQUFBN2hCLENBQUEsQ0FBQSxLQUFBNmhCLFdBQUEsQ0FBQSxDQUFBLEVBQUEsS0FBQTNvQixNQUFBLENBQUFwZCxLQUFBLENBQUFrTCxJQUFBLEVBQUE1cEIsQ0FBQSxDQUFBbWdCLEtBQUEsQ0FBQSxLQUFBMmIsTUFBQSxDQUFBcGQsS0FBQSxDQUFBcGIsR0FBQSxDQUFBLEtBQUFtaEQsV0FBQSxDQUFBLENBQUEsQ0FBQSxHQUFBdG5ELENBQUEsQ0FBQSxLQUFBc25ELFdBQUEsQ0FBQSxDQUFBLEVBQUEsS0FBQTNvQixNQUFBLENBQUFwZCxLQUFBLENBQUFwYixHQUFBLENBQUEsQ0FBQXRELENBQUEsQ0FBQWtnQixLQUFBLENBQUEsS0FBQTRiLE1BQUEsQ0FBQXBkLEtBQUEsQ0FBQWtMLElBQUEsQ0FBQSxLQUFBNjZCLFdBQUEsQ0FBQSxDQUFBLENBQUEsR0FBQTdoQixDQUFBLENBQUEsS0FBQTZoQixXQUFBLENBQUEsQ0FBQSxFQUFBLEtBQUEzb0IsTUFBQSxDQUFBcGQsS0FBQSxDQUFBa0wsSUFBQSxDQUFBLENBQUE1cEIsQ0FBQSxDQUFBbWdCLEtBQUEsQ0FBQSxLQUFBMmIsTUFBQSxDQUFBcGQsS0FBQSxDQUFBcGIsR0FBQSxDQUFBLEtBQUFtaEQsV0FBQSxDQUFBLENBQUEsQ0FBQSxHQUFBdG5ELENBQUEsQ0FBQSxLQUFBc25ELFdBQUEsQ0FBQSxDQUFBLEVBQUEsS0FBQTNvQixNQUFBLENBQUFwZCxLQUFBLENBQUFwYixHQUFBLENBQUEsRUFBQXdKLENBQUEsQ0FBQTYzQyxJQUFBLEdBQUExdUQsQ0FBQSxDQUFBLEtBQUEyd0QsYUFBQSxDQUFBL3NELElBQUEsQ0FBQStyQixLQUFBLENBQUEsQ0FBQXpvQixDQUFBLENBQUEsS0FBQXlwRCxhQUFBLEVBQUE5NUMsQ0FBQSxDQUFBNjNDLElBQUEsQ0FBQSxDQUFBLENBQUEsRUFBQTczQyxDQUFBLENBQUE2M0MsSUFBQSxDQUFBLENBQUEsQ0FBQSxDQUFBeG5ELENBQUEsQ0FBQSxLQUFBc25ELFdBQUEsQ0FBQXh1RCxDQUFBLENBQUEsS0FBQTZsQyxNQUFBLENBQUFwZCxLQUFBLENBQUFwYixHQUFBLEVBQUEsS0FBQW1oRCxXQUFBLENBQUEsQ0FBQSxDQUFBLEVBQUF4dUQsQ0FBQSxDQUFBLEtBQUE2bEMsTUFBQSxDQUFBcGQsS0FBQSxDQUFBcGIsR0FBQSxFQUFBLEtBQUFtaEQsV0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBeHVELENBQUEsQ0FBQUEsQ0FBQSxDQUFBLEtBQUE2bEMsTUFBQSxDQUFBcGQsS0FBQSxDQUFBcGIsR0FBQSxFQUFBLEtBQUFtaEQsV0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBeHVELENBQUEsQ0FBQTZXLENBQUEsQ0FBQTYzQyxJQUFBLENBQUEsQ0FBQSxDQUFBLENBQUExdUQsQ0FBQSxDQUFBNlcsQ0FBQSxDQUFBNjNDLElBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQTF1RCxDQUFBLENBQUFpOUIsQ0FBQSxDQUFBLEtBQUF5ekIsYUFBQSxDQUFBOXNELElBQUEsQ0FBQStyQixLQUFBLENBQUEsQ0FBQWdkLENBQUEsQ0FBQSxLQUFBK2pCLGFBQUEsRUFBQTc1QyxDQUFBLENBQUE2M0MsSUFBQSxDQUFBLENBQUEsQ0FBQSxFQUFBNzNDLENBQUEsQ0FBQTYzQyxJQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEvaEIsQ0FBQSxDQUFBLEtBQUE2aEIsV0FBQSxDQUFBdnhCLENBQUEsQ0FBQSxLQUFBNEksTUFBQSxDQUFBcGQsS0FBQSxDQUFBa0wsSUFBQSxFQUFBLEtBQUE2NkIsV0FBQSxDQUFBLENBQUEsQ0FBQSxFQUFBdnhCLENBQUEsQ0FBQSxLQUFBNEksTUFBQSxDQUFBcGQsS0FBQSxDQUFBa0wsSUFBQSxFQUFBLEtBQUE2NkIsV0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBdnhCLENBQUEsQ0FBQUEsQ0FBQSxDQUFBLEtBQUE0SSxNQUFBLENBQUFwZCxLQUFBLENBQUFrTCxJQUFBLEVBQUEsS0FBQTY2QixXQUFBLENBQUEsQ0FBQSxDQUFBLENBQUF2eEIsQ0FBQSxDQUFBcG1CLENBQUEsQ0FBQTYzQyxJQUFBLENBQUEsQ0FBQSxDQUFBLENBQUF6eEIsQ0FBQSxDQUFBcG1CLENBQUEsQ0FBQTYzQyxJQUFBLENBQUEsQ0FBQSxDQUFBLENBQUF6eEIsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBNXZCLEdBQUEsQ0FBQW5HLENBQUEsQ0FBQSxLQUFBMitCLE1BQUEsQ0FBQXBkLEtBQUEsQ0FBQXBiLEdBQUEsQ0FBQSxLQUFBdzRCLE1BQUEsQ0FBQTUxQixRQUFBLENBQUE1QyxHQUFBLENBQUEsS0FBQXc0QixNQUFBLENBQUF4MEIsTUFBQSxDQUFBaEUsR0FBQSxFQUFBLFVBQUEsS0FBQStpRCxXQUFBLENBQUEsQ0FBQSxLQUFBNVYsWUFBQSxDQUFBMWxCLFNBQUEsRUFBQSxDQUFBc1ksQ0FBQSxDQUFBLENBQUEsQ0FBQUwsQ0FBQSxDQUFBalksU0FBQSxFQUFBLENBQUEsQ0FBQW5CLElBQUEsQ0FBQWdaLENBQUEsQ0FBQSxLQUFBOUcsTUFBQSxDQUFBcGQsS0FBQSxDQUFBa0wsSUFBQSxDQUFBLEtBQUFrUyxNQUFBLENBQUE1MUIsUUFBQSxDQUFBMGpCLElBQUEsQ0FBQSxLQUFBa1MsTUFBQSxDQUFBeDBCLE1BQUEsQ0FBQXNpQixJQUFBLEVBQUEsVUFBQSxLQUFBeThCLFdBQUEsQ0FBQSxDQUFBLEtBQUE1VixZQUFBLENBQUF6bEIsVUFBQSxFQUFBLENBQUFxWSxDQUFBLENBQUEsQ0FBQSxDQUFBTCxDQUFBLENBQUFoWSxVQUFBLEVBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBc3NDLFVBQUEsQ0FBQSxvQkFBQXI3QyxDQUFBLENBQUFqYyxDQUFBLENBQUEvSixDQUFBLENBQUFpOUIsQ0FBQSxDQUFBLENBQUFqOUIsQ0FBQSxDQUFBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUFRLFdBQUEsQ0FBQSxLQUFBMnhELFdBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBcG9ELENBQUEsQ0FBQXMwQyxJQUFBLENBQUEsQ0FBQSxFQUFBNTlDLFVBQUEsQ0FBQWd0QixZQUFBLENBQUEsS0FBQTBrQyxXQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsU0FBQSxLQUFBN1osU0FBQSxDQUFBdnVDLENBQUEsQ0FBQXMwQyxJQUFBLENBQUEsQ0FBQSxDQUFBLENBQUF0MEMsQ0FBQSxDQUFBczBDLElBQUEsQ0FBQSxDQUFBLEVBQUE5eEMsV0FBQSxDQUFBLENBQUEsS0FBQTgxRCxPQUFBLENBQUEsS0FBQUEsT0FBQSxDQUFBLEVBQUEsS0FBQUEsT0FBQSxDQUFBLENBQUEsQ0FBQSxHQUFBeHJELENBQUFBLENBQUEsQ0FBQSxLQUFBd3JELE9BQUEsQ0FDQSxLQUFBMXlCLE1BQUEsQ0FBQSxVQUFBLENBQUE5NEIsQ0FBQSxHQUFBLEtBQUF3ckQsT0FBQSxFQUFBLEtBQUF4VCxnQkFBQSxDQUFBLENBQUE1eEIsQ0FBQSxDQUFBLENBQUEsQ0FBQSxFQUFBLENBREEsQ0FDQTZ6QixNQUFBLENBQUEsZ0JBQUE5cUMsQ0FBQSxDQUFBamMsQ0FBQSxDQUFBLENBQUEsUUFBQS9KLENBQUFBLENBQUEsQ0FBQWdtQixDQUFBLENBQUFqYyxDQUFBLENBQUEvSixDQUFBLENBQUEsQ0FBQSxNQUFBLFVBQUFpOUIsQ0FBQSxDQUFBLENBQUFqOUIsQ0FBQSxDQUFBa3RDLFFBQUEsQ0FBQWxuQixDQUFBLENBQUFpWCxDQUFBLENBQUFsekIsQ0FBQSxDQUFBdW5ELE9BQUEsQ0FBQXZuRCxDQUFBLENBQUEsRUFBQSxDQUFBLENBQUEsTUFBQXMyRCxTQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsR0FBQXBqQyxDQUFBQSxDQUFBLENBQUFwbUIsQ0FBQSxDQUFBLEVBQUEsQ0FBQSxHQUFBLENBQUEsS0FBQTBxRCxZQUFBLEVBQUEsS0FBQS9PLFdBQUEsQ0FBQW5oRCxNQUFBLEdBQUFoUSxNQUFBLEVBQUEsS0FBQTh3RCxXQUFBLENBQUF6a0MsTUFBQSxDQUFBLEtBQUE4a0MsV0FBQSxDQUFBLENBQUEsS0FBQStPLFlBQUEsQ0FBQSxJQUFBLENBQUEsS0FBQTVTLE1BQUEsQ0FBQSxDQUFBLElBQUEsS0FBQTZELFdBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLElBQUF2MUIsQ0FBQSxHQUFBLE1BQUFpMUIsVUFBQSxFQUFBLENBQUEsU0FBQSxLQUFBQSxVQUFBLENBQUFqMUIsQ0FBQSxDQUFBLEVBQUEsV0FBQSxLQUFBaTFCLFVBQUEsQ0FBQWoxQixDQUFBLENBQUEsSUFBQSxLQUFBaTFCLFVBQUEsQ0FBQWoxQixDQUFBLEVBQUEsRUFBQSxFQUFBLENBQUEsS0FBQXUxQixXQUFBLENBQUEvd0MsR0FBQSxDQUFBLEtBQUF5d0MsVUFBQSxFQUFBLEtBQUFsakIsWUFBQSxDQUFBLEtBQUF3akIsV0FBQSxDQUFBLG9CQUFBLENBQUEsQ0FBQSxDQUFBLElBQUEsTUFBQUEsV0FBQSxDQUFBL3ZDLElBQUEsR0FBQSxJQUFBLEtBQUFnd0MsV0FBQSxFQUFBLENBQUExb0QsQ0FBQSxFQUFBOE0sQ0FBQSxDQUFBblksSUFBQSxDQUFBLFNBQUFzbkIsQ0FBQSxDQUFBLENBQUEsS0FBQWtuQixRQUFBLENBQUEsU0FBQSxDQUFBbG5CLENBQUEsQ0FBQSxLQUFBc3JDLE9BQUEsQ0FBQSxLQUFBbUIsV0FBQSxDQUFBLEVBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxLQUFBQSxXQUFBLEVBQUEsS0FBQWdPLFdBQUEsQ0FBQTVvRCxJQUFBLEdBQUEsS0FBQTI2QyxXQUFBLENBQUEzNkMsSUFBQSxHQUFBVixHQUFBLENBQUEscUJBQUEsRUFBQSxDQUFBLENBQUEsRUFBQSxLQUFBc3BELFdBQUEsQ0FBQXB2RCxNQUFBLEdBQUEsS0FBQW1oRCxXQUFBLENBQUFuaEQsTUFBQSxHQUFBLENBQUEsQ0FBQSxFQUFBdEgsQ0FBQSxFQUFBOE0sQ0FBQSxDQUFBblksSUFBQSxDQUFBLFNBQUFzbkIsQ0FBQSxDQUFBLENBQUEsS0FBQWtuQixRQUFBLENBQUEsUUFBQSxDQUFBbG5CLENBQUEsQ0FBQSxLQUFBc3JDLE9BQUEsRUFBQSxFQUFBLENBQUEsQ0FBQSxDQUFBLE9BQUEsS0FBQWtQLGdCQUFBLEdBQUF6MkQsQ0FBQSxHQUFBOE0sQ0FBQSxDQUFBblksSUFBQSxDQUFBLFNBQUFzbkIsQ0FBQSxDQUFBLENBQUEsS0FBQWtuQixRQUFBLENBQUEsUUFBQSxDQUFBbG5CLENBQUEsQ0FBQSxLQUFBc3JDLE9BQUEsRUFBQSxFQUFBLENBQUEsRUFBQXo2QyxDQUFBLENBQUFuWSxJQUFBLENBQUEsU0FBQXNuQixDQUFBLENBQUEsQ0FBQSxNQUFBLFVBQUFqYyxDQUFBLENBQUEsQ0FBQWljLENBQUEsQ0FBQWtuQixRQUFBLENBQUEsU0FBQSxDQUFBbmpDLENBQUEsQ0FBQSxLQUFBdW5ELE9BQUEsQ0FBQSxJQUFBLENBQUEsRUFBQSxDQUFBLENBQUEsQ0FBQSxDQUFBL3lELElBQUEsQ0FBQSxJQUFBLENBQUEsS0FBQWlpRSxnQkFBQSxDQUFBLENBQUEsQ0FBQTNwRCxDQUFBLENBQUFuWSxJQUFBLENBQUEsU0FBQXNuQixDQUFBLENBQUEsQ0FBQSxNQUFBLFVBQUFqYyxDQUFBLENBQUEsQ0FBQWljLENBQUEsQ0FBQWtuQixRQUFBLENBQUEsUUFBQSxDQUFBbmpDLENBQUEsQ0FBQSxLQUFBdW5ELE9BQUEsQ0FBQSxJQUFBLENBQUEsRUFBQSxDQUFBLENBQUEsQ0FBQSxDQUFBL3lELElBQUEsQ0FBQSxJQUFBLENBQUEsS0FBQWlpRSxnQkFBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUF2akMsQ0FBQSxDQUFBLEtBQUErakMsVUFBQSxDQUFBMy9ELE1BQUEsQ0FBQSxDQUFBLENBQUE0N0IsQ0FBQSxFQUFBLENBQUEsQ0FBQUEsQ0FBQSxFQUFBLEVBQUFsekIsQ0FBQSxFQUFBOE0sQ0FBQSxDQUFBblksSUFBQSxDQUFBc0IsQ0FBQSxDQUFBLFlBQUEsQ0FBQSxJQUFBLENBQUEsS0FBQWdoRSxVQUFBLENBQUEvakMsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLEtBQUErakMsVUFBQSxDQUFBL2pDLENBQUEsRUFBQXExQixjQUFBLENBQUFtSCxJQUFBLEdBQUE1aUQsQ0FBQSxDQUFBblksSUFBQSxDQUFBc0IsQ0FBQSxDQUFBLEtBQUEsQ0FBQSxJQUFBLENBQUEsS0FBQWdoRSxVQUFBLENBQUEvakMsQ0FBQSxDQUFBLENBQUEsRUFBQSxLQUFBK2pDLFVBQUEsQ0FBQS9qQyxDQUFBLEVBQUFxMUIsY0FBQSxDQUFBbUgsSUFBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsR0FBQSxLQUFBa0gsWUFBQSxHQUFBLEtBQUFoakUsUUFBQSxDQUFBbVEsSUFBQSxDQUFBLE1BQUEsRUFBQTJULEdBQUEsQ0FBQSxRQUFBLENBQUEsS0FBQWsvQyxZQUFBLEVBQUEsS0FBQUMsZ0JBQUEsQ0FBQTltRCxNQUFBLEVBQUEsRUFBQSxLQUFBK21ELGNBQUEsRUFBQSxLQUFBbFMsTUFBQSxDQUFBbHRDLEdBQUEsQ0FBQSxTQUFBLENBQUEsS0FBQW8vQyxjQUFBLENBQUEsQ0FBQSxLQUFBQyxhQUFBLEVBQUEsS0FBQW5TLE1BQUEsQ0FBQWx0QyxHQUFBLENBQUEsUUFBQSxDQUFBLFNBQUEsS0FBQXEvQyxhQUFBLENBQUEsRUFBQSxDQUFBLEtBQUFBLGFBQUEsQ0FBQSxDQUFBLEtBQUFHLFFBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQWwzRCxDQUFBLEVBQUEsS0FBQW1qQyxRQUFBLENBQUEsWUFBQSxDQUFBbG5CLENBQUEsQ0FBQSxLQUFBc3JDLE9BQUEsRUFBQSxDQUFBLENBQUEsS0FBQWEsV0FBQSxDQUFBLENBQUEsRUFBQTF4RCxVQUFBLENBQUFDLFdBQUEsQ0FBQSxLQUFBeXhELFdBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLEtBQUFMLG1CQUFBLEdBQUEsS0FBQW5ELE1BQUEsQ0FBQSxDQUFBLElBQUEsS0FBQTZELFdBQUEsQ0FBQSxDQUFBLENBQUEsRUFBQSxLQUFBN0QsTUFBQSxDQUFBNzBDLE1BQUEsRUFBQSxDQUFBLEtBQUE2MEMsTUFBQSxDQUFBLElBQUEsQ0FBQSxDQUFBLENBQUE1a0QsQ0FBQSxDQUFBLENBQUEsSUFBQWt6QixDQUFBLENBQUEsQ0FBQSxDQUFBcG1CLENBQUEsQ0FBQXhWLE1BQUEsQ0FBQTQ3QixDQUFBLENBQUFBLENBQUEsRUFBQSxFQUFBcG1CLENBQUEsQ0FBQW9tQixDQUFBLENBQUEsQ0FBQTErQixJQUFBLENBQUEsSUFBQSxDQUFBeW5CLENBQUEsRUFBQSxDQUFBLEtBQUFrbkIsUUFBQSxDQUFBLE1BQUEsQ0FBQWxuQixDQUFBLENBQUEsS0FBQXNyQyxPQUFBLEVBQUEsRUFBQSxPQUFBLE1BQUFtQixXQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxLQUFBWCxtQkFBQSxDQUFBLENBREEsQ0FDQTVrQixRQUFBLENBQUEsbUJBQUEsQ0FBQWxuQixDQUFBLENBQUFzbkIsTUFBQSxDQUFBcHNDLFNBQUEsQ0FBQWdzQyxRQUFBLENBQUF6dUMsS0FBQSxDQUFBLElBQUEsQ0FBQXlELFNBQUEsSUFBQSxDQUFBLENBQUEsRUFBQSxLQUFBeXFELE1BQUEsRUFBQSxDQUFBLENBREEsQ0FDQTJFLE9BQUEsQ0FBQSxpQkFBQXZuRCxDQUFBLENBQUEsQ0FBQSxHQUFBL0osQ0FBQUEsQ0FBQSxDQUFBK0osQ0FBQSxFQUFBLElBQUEsQ0FBQSxNQUFBLENBQUE0a0QsTUFBQSxDQUFBM3VELENBQUEsQ0FBQTJ1RCxNQUFBLENBQUF3RCxXQUFBLENBQUFueUQsQ0FBQSxDQUFBbXlELFdBQUEsRUFBQW5zQyxDQUFBLENBQUEsRUFBQSxDQUFBLENBQUF1SixRQUFBLENBQUF2dkIsQ0FBQSxDQUFBdXZCLFFBQUEsQ0FBQWloQyxnQkFBQSxDQUFBeHdELENBQUEsQ0FBQXd3RCxnQkFBQSxDQUFBM3FCLE1BQUEsQ0FBQTdsQyxDQUFBLENBQUFzd0QsV0FBQSxDQUFBalMsSUFBQSxDQUFBcitDLENBQUEsQ0FBQXd5RCxXQUFBLENBQUE4UCxNQUFBLENBQUF2NEQsQ0FBQSxDQUFBQSxDQUFBLENBQUFpakMsT0FBQSxDQUFBLElBQUEsQ0FBQSxDQUFBLENBREEsQ0FBQSxDQURBLENBRUFobkIsQ0FBQSxDQUFBcW5CLE1BQUEsQ0FBQSxZQUFBLENBQUEsQ0FBQXpzQyxPQUFBLENBQUEsUUFBQSxDQUFBc3RDLGNBQUEsQ0FBQSxTQUFBLENBQUFOLGlCQUFBLENBQUEsTUFBQSxDQUFBNXFDLE9BQUEsQ0FBQSxDQUFBNjNCLE9BQUEsQ0FBQSxDQUFBLGFBQUEsZUFBQSxDQUFBLGtCQUFBLGNBQUEsQ0FBQSxnQkFBQSxjQUFBLENBQUEsQ0FBQTBuQyxPQUFBLENBQUEsSUFBQSxDQUFBeG5CLEtBQUEsQ0FBQSxDQUFBMUMsSUFBQSxDQUFBLHNCQUFBLENBQUFELEVBQUEsQ0FBQSxzQkFBQSxDQUFBLENBQUFvcUIsV0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBcHdDLEdBQUEsQ0FBQSxJQUFBLENBQUFnaUIsR0FBQSxDQUFBLElBQUEsQ0FBQXF1QixZQUFBLENBQUEsSUFBQSxDQUFBQyxJQUFBLENBQUEsRUFBQSxDQUFBOXRDLElBQUEsQ0FBQSxDQUFBLENBQUFncUIsTUFBQSxDQUFBLElBQUEsQ0FBQStqQixJQUFBLENBQUEsSUFBQSxDQUFBdnhELEtBQUEsQ0FBQSxJQUFBLENBQUFzUCxJQUFBLENBQUEsSUFBQSxDQUFBLENBQUFrdUIsT0FBQSxDQUFBLGtCQUFBLENBQUEsS0FBQU0sVUFBQSxDQUFBLEtBQUEsQ0FBQSxLQUFBbHNDLE9BQUEsQ0FBQW92QixHQUFBLEVBQUEsS0FBQThjLFVBQUEsQ0FBQSxLQUFBLENBQUEsS0FBQWxzQyxPQUFBLENBQUFveEMsR0FBQSxDQUFBLENBQUEsS0FBQWxGLFVBQUEsQ0FBQSxNQUFBLENBQUEsS0FBQWxzQyxPQUFBLENBQUE0eEIsSUFBQSxDQUFBLENBQUEsS0FBQSxLQUFBM3ZCLEtBQUEsRUFBQSxFQUFBLEtBQUFvNkMsTUFBQSxDQUFBLEtBQUFyUyxPQUFBLENBQUEvc0MsR0FBQSxFQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxLQUFBMmlFLEtBQUEsRUFBQSxDQUFBLEtBQUFuMEIsR0FBQSxDQUFBLEtBQUFvMEIsT0FBQSxDQUFBLENBQUEsS0FBQTUxQixRQUFBLEVBQUEsQ0FBQSxLQUFBd0IsR0FBQSxDQUFBLEtBQUEzd0MsTUFBQSxDQUFBLENBQUE4cUIsWUFBQSxDQUFBLHVCQUFBLENBQUEsS0FBQW9rQixPQUFBLENBQUFuVCxVQUFBLENBQUEsY0FBQSxFQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBOFUsaUJBQUEsQ0FBQSw0QkFBQSxDQUFBLEdBQUE1a0MsQ0FBQUEsQ0FBQSxDQUFBLEtBQUEyakMsTUFBQSxFQUFBLENBQUExdEMsQ0FBQSxDQUFBLEtBQUFndEMsT0FBQSxDQUFBLE1BQUFobkIsQ0FBQUEsQ0FBQSxDQUFBbGtCLElBQUEsQ0FBQSxDQUFBLEtBQUEsQ0FBQSxLQUFBLENBQUEsTUFBQSxDQUFBLENBQUEsU0FBQWtrQixDQUFBLENBQUFpWCxDQUFBLENBQUEsQ0FBQSxHQUFBcG1CLENBQUFBLENBQUEsQ0FBQTdXLENBQUEsQ0FBQXFQLElBQUEsQ0FBQTR0QixDQUFBLENBQUEsQ0FBQSxNQUFBcG1CLENBQUEsRUFBQUEsQ0FBQSxDQUFBeFYsTUFBQSxHQUFBMEksQ0FBQSxDQUFBa3pCLENBQUEsQ0FBQSxDQUFBcG1CLENBQUEsRUFBQSxDQUFBLEVBQUE5TSxDQUFBLENBQUEsQ0FBQSxDQUFBODRELE9BQUEsQ0FBQSxDQUFBdm1CLE9BQUEsQ0FBQSxpQkFBQXQyQixDQUFBLENBQUEsQ0FBQSxLQUFBZzVDLE1BQUEsQ0FBQWg1QyxDQUFBLEdBQUEsS0FBQWkyQixRQUFBLENBQUFqMkIsQ0FBQSxDQUFBLEVBQUFBLENBQUEsQ0FBQTJCLGNBQUEsRUFBQSxDQUFBLENBQUEsQ0FBQXc3QixLQUFBLENBQUEsT0FBQSxDQUFBLzNCLEtBQUEsQ0FBQSxnQkFBQSxDQUFBLEtBQUFzeUIsUUFBQSxDQUFBLEtBQUExUSxPQUFBLENBQUEvc0MsR0FBQSxFQUFBLENBQUEsQ0FBQSxDQUFBb3JCLElBQUEsQ0FBQSxjQUFBckYsQ0FBQSxDQUFBLENBQUEsTUFBQSxNQUFBMDVCLFVBQUEsRUFBQSxNQUFBLE1BQUFBLFVBQUEsQ0FBQSxJQUFBLEVBQUEsR0FBQSxLQUFBeWYsS0FBQSxHQUFBLEtBQUFseUIsUUFBQSxFQUFBLENBQUEsS0FBQXlRLFFBQUEsR0FBQSxLQUFBMVEsT0FBQSxDQUFBL3NDLEdBQUEsRUFBQSxFQUFBLEtBQUFpdEMsUUFBQSxDQUFBLFFBQUEsQ0FBQWxuQixDQUFBLENBQUEsQ0FBQSxJQUFBLEVBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQTg4QyxVQUFBLENBQUEsb0JBQUE5OEMsQ0FBQSxDQUFBamMsQ0FBQSxDQUFBLENBQUEsR0FBQUEsQ0FBQSxDQUFBLENBQUEsR0FBQSxDQUFBLEtBQUFnNUQsUUFBQSxFQUFBLENBQUEsS0FBQS9ELE1BQUEsQ0FBQWg1QyxDQUFBLENBQUEsQ0FBQSxNQUFBLENBQUEsQ0FBQSxDQUFBLEtBQUFnOUMsS0FBQSxDQUFBLENBQUFqNUQsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLEVBQUEsS0FBQS9HLE9BQUEsQ0FBQTR4QixJQUFBLENBQUE1TyxDQUFBLEVBQUF3VCxZQUFBLENBQUEsS0FBQXlwQyxlQUFBLENBQUEsQ0FBQSxLQUFBQSxlQUFBLENBQUEsS0FBQXR6QixNQUFBLENBQUEsVUFBQSxDQUFBLEtBQUFvekIsUUFBQSxFQUFBLEtBQUE1RCxLQUFBLENBQUFuNUMsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLEdBQUEsQ0FBQSxDQUFBQSxDQUFBLENBQUEyQixjQUFBLEVBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSwrQkFBQSxrQ0FBQTVkLENBQUEsQ0FBQSxDQUFBLFFBQUEvSixDQUFBQSxDQUFBLEVBQUEsQ0FBQSxHQUFBK0osQ0FBQUEsQ0FBQSxDQUFBLEtBQUFpakMsT0FBQSxDQUFBLENBQUEsSUFBQWhuQixDQUFBLENBQUFtbkIsRUFBQSxDQUFBOW5CLGlCQUFBLENBQUEsS0FBQTFuQixRQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQW9NLENBQUEsR0FBQSxLQUFBaWpDLE9BQUEsQ0FBQXJrQixPQUFBLENBQUEsT0FBQSxFQUFBLEtBQUErMEIsUUFBQSxDQUFBemdCLENBQUEsQ0FBQSxLQUFBMFMsTUFBQSxDQUFBLFVBQUEsQ0FBQSxLQUFBK04sUUFBQSxDQUFBemdCLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLElBQUFBLENBQUFBLENBQUEsQ0FBQUEsQ0FBQSxDQUFBLEtBQUErUCxPQUFBLENBQUEsQ0FBQSxJQUFBaG5CLENBQUEsQ0FBQW1uQixFQUFBLENBQUE5bkIsaUJBQUEsQ0FBQSxLQUFBMW5CLFFBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLEtBQUErL0MsUUFBQSxDQUFBLEtBQUExUSxPQUFBLENBQUEvc0MsR0FBQSxFQUFBLENBQUE4SixDQUFBLENBQUE0ZCxjQUFBLEVBQUEsQ0FBQTNuQixDQUFBLENBQUF6QixJQUFBLENBQUEsSUFBQSxDQUFBLENBQUEsS0FBQW1oRCxVQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsS0FBQS9QLE1BQUEsQ0FBQSxVQUFBLENBQUEsTUFBQSxNQUFBK1AsVUFBQSxDQUFBMS9DLENBQUEsQ0FBQXpCLElBQUEsQ0FBQSxJQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxLQUFBeWdFLE1BQUEsQ0FBQWoxRCxDQUFBLElBQUEsQ0FBQSxDQUFBLEVBQUEsS0FBQW01RCxPQUFBLENBQUEsSUFBQSxDQUFBbDlDLENBQUEsQ0FBQWpjLENBQUEsQ0FBQXlkLGFBQUEsQ0FBQSxDQUFBOFQsUUFBQSxDQUFBLGVBQUEsRUFBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUF2eEIsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLDZCQUFBLE9BQUEsQ0FBQSxnQ0FBQSxtQ0FBQUEsQ0FBQSxDQUFBLENBQUEsTUFBQWljLENBQUFBLENBQUEsQ0FBQWpjLENBQUEsQ0FBQXlkLGFBQUEsQ0FBQSxDQUFBOFQsUUFBQSxDQUFBLGlCQUFBLEVBQUEsS0FBQTBqQyxNQUFBLENBQUFqMUQsQ0FBQSxJQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxFQUFBLEtBQUFtNUQsT0FBQSxDQUFBLElBQUEsQ0FBQWw5QyxDQUFBLENBQUFqYyxDQUFBLENBQUF5ZCxhQUFBLENBQUEsQ0FBQThULFFBQUEsQ0FBQSxlQUFBLEVBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBdnhCLENBQUEsRUFBQSxJQUFBLEVBQUEsQ0FBQSxDQUFBLElBQUEsRUFBQSxDQUFBLENBQUEsQ0FBQSxnQ0FBQSxPQUFBLENBQUEsQ0FBQTAzQyxRQUFBLENBQUEsbUJBQUEsQ0FBQSxLQUFBMGhCLFNBQUEsQ0FBQSxLQUFBbjJCLE9BQUEsQ0FBQTM5QixJQUFBLENBQUEsY0FBQSxDQUFBLEtBQUEsRUFBQXFWLElBQUEsQ0FBQSxRQUFBLEVBQUFyVCxNQUFBLEdBQUFrYyxNQUFBLENBQUEsZ0JBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQXExQyxLQUFBLENBQUEsZ0JBQUEsQ0FBQSxLQUFBbmhCLFFBQUEsR0FBQSxLQUFBalMsU0FBQSxDQUFBLEtBQUEyekIsU0FBQSxDQUFBLFlBQUEsQ0FBQSw2QkFBQSxDQUFBLENBQUEsS0FBQTN6QixTQUFBLENBQUEsa0JBQUEsQ0FBQSxDQUFBLEtBQUF4QyxPQUFBLENBQUEzOUIsSUFBQSxDQUFBLE1BQUEsQ0FBQSxZQUFBLENBQUEsQ0FBQSxLQUFBa2IsT0FBQSxDQUFBLEtBQUE0NEMsU0FBQSxDQUFBeHJELFFBQUEsQ0FBQSxHQUFBLEVBQUF0SSxJQUFBLENBQUEsVUFBQSxDQUFBLENBQUEsQ0FBQSxFQUFBQSxJQUFBLENBQUEsYUFBQSxDQUFBLENBQUEsQ0FBQSxFQUFBMlksTUFBQSxDQUFBLENBQUE2UyxPQUFBLENBQUEsQ0FBQSxZQUFBLEVBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxLQUFBbVUsWUFBQSxDQUFBLEtBQUF6a0IsT0FBQSxDQUFBLGVBQUEsQ0FBQSxDQUFBLEtBQUFpbEIsU0FBQSxDQUFBLEtBQUFqbEIsT0FBQSxDQUFBcG9CLEtBQUEsRUFBQSxDQUFBLGlDQUFBLENBQUEsQ0FBQSxLQUFBcXRDLFNBQUEsQ0FBQSxLQUFBamxCLE9BQUEsQ0FBQWxvQixJQUFBLEVBQUEsQ0FBQSxtQ0FBQSxDQUFBLENBQUEsS0FBQWtvQixPQUFBLENBQUFwb0IsS0FBQSxHQUFBNmxCLE1BQUEsQ0FBQSxDQUFBczZCLElBQUEsQ0FBQSxLQUFBdC9DLE9BQUEsQ0FBQSszQyxLQUFBLENBQUEzQyxFQUFBLENBQUE0SyxTQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLEtBQUF6NEIsT0FBQSxDQUFBbG9CLElBQUEsR0FBQTJsQixNQUFBLENBQUEsQ0FBQXM2QixJQUFBLENBQUEsS0FBQXQvQyxPQUFBLENBQUErM0MsS0FBQSxDQUFBMUMsSUFBQSxDQUFBMkssU0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxLQUFBejRCLE9BQUEsQ0FBQWtHLE1BQUEsR0FBQTdzQixJQUFBLENBQUFpdkIsSUFBQSxDQUFBLEdBQUEsS0FBQXN3QyxTQUFBLENBQUExeUMsTUFBQSxFQUFBLENBQUEsRUFBQSxLQUFBMHlDLFNBQUEsQ0FBQTF5QyxNQUFBLEdBQUEsQ0FBQSxFQUFBLEtBQUEweUMsU0FBQSxDQUFBMXlDLE1BQUEsQ0FBQSxLQUFBMHlDLFNBQUEsQ0FBQTF5QyxNQUFBLEVBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQXdyQixRQUFBLENBQUEsa0JBQUFseUMsQ0FBQSxDQUFBLENBQUEsR0FBQS9KLENBQUFBLENBQUEsQ0FBQSxLQUFBZ0QsT0FBQSxDQUFBaTZCLENBQUEsQ0FBQWpYLENBQUEsQ0FBQW1uQixFQUFBLENBQUE3aUIsT0FBQSxDQUFBLE9BQUF2Z0IsQ0FBQSxDQUFBdWdCLE9BQUEsRUFBQSxJQUFBMlMsQ0FBQUEsQ0FBQSxDQUFBcWQsRUFBQSxDQUFBLE1BQUEsTUFBQTRvQixPQUFBLENBQUEsSUFBQSxDQUFBLENBQUEsQ0FBQW41RCxDQUFBLEVBQUEsQ0FBQSxDQUFBLENBQUEsSUFBQWt6QixDQUFBQSxDQUFBLENBQUF5YyxJQUFBLENBQUEsTUFBQSxNQUFBd3BCLE9BQUEsQ0FBQSxJQUFBLENBQUEsQ0FBQSxDQUFBLENBQUFuNUQsQ0FBQSxFQUFBLENBQUEsQ0FBQSxDQUFBLElBQUFrekIsQ0FBQUEsQ0FBQSxDQUFBZ2QsT0FBQSxDQUFBLE1BQUEsTUFBQWlwQixPQUFBLENBQUEsSUFBQSxDQUFBbGpFLENBQUEsQ0FBQTBpRSxJQUFBLENBQUEzNEQsQ0FBQSxFQUFBLENBQUEsQ0FBQSxDQUFBLElBQUFrekIsQ0FBQUEsQ0FBQSxDQUFBK2MsU0FBQSxDQUFBLE1BQUEsTUFBQWtwQixPQUFBLENBQUEsSUFBQSxDQUFBLENBQUFsakUsQ0FBQSxDQUFBMGlFLElBQUEsQ0FBQTM0RCxDQUFBLEVBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxNQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQWkxRCxNQUFBLENBQUEsZ0JBQUFoNUMsQ0FBQSxDQUFBLENBQUEsTUFBQSxNQUFBKzhDLFFBQUEsRUFBQSxLQUFBNzFCLFFBQUEsQ0FBQSxPQUFBLENBQUFsbkIsQ0FBQSxJQUFBLENBQUEsQ0FBQSxFQUFBLEtBQUFxOEMsT0FBQSxHQUFBLEtBQUFBLE9BQUEsQ0FBQSxDQUFBLEVBQUEsS0FBQVUsUUFBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxFQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQUcsT0FBQSxDQUFBLGlCQUFBbDlDLENBQUEsQ0FBQWpjLENBQUEsQ0FBQS9KLENBQUEsQ0FBQSxDQUFBZ21CLENBQUEsQ0FBQUEsQ0FBQSxFQUFBLEdBQUEsQ0FBQXdULFlBQUEsQ0FBQSxLQUFBMUIsS0FBQSxDQUFBLENBQUEsS0FBQUEsS0FBQSxDQUFBLEtBQUE2WCxNQUFBLENBQUEsVUFBQSxDQUFBLEtBQUF1ekIsT0FBQSxDQUFBLEVBQUEsQ0FBQW41RCxDQUFBLENBQUEvSixDQUFBLEVBQUEsQ0FBQSxDQUFBZ21CLENBQUEsQ0FBQSxDQUFBLEtBQUFnOUMsS0FBQSxDQUFBajVELENBQUEsQ0FBQSxLQUFBL0csT0FBQSxDQUFBNHhCLElBQUEsQ0FBQTUwQixDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUFnakUsS0FBQSxDQUFBLGVBQUFoOUMsQ0FBQSxDQUFBamMsQ0FBQSxDQUFBLENBQUEsR0FBQS9KLENBQUFBLENBQUEsQ0FBQSxLQUFBaUYsS0FBQSxJQUFBLENBQUEsQ0FBQSxLQUFBbzlELE9BQUEsR0FBQSxLQUFBQSxPQUFBLENBQUEsQ0FBQSxFQUFBcmlFLENBQUEsQ0FBQSxLQUFBb2pFLFlBQUEsQ0FBQXBqRSxDQUFBLENBQUFnbUIsQ0FBQSxDQUFBLEtBQUFxOUMsVUFBQSxDQUFBLEtBQUFoQixPQUFBLENBQUEsQ0FBQSxDQUFBLEtBQUFVLFFBQUEsRUFBQSxLQUFBNzFCLFFBQUEsQ0FBQSxNQUFBLENBQUFuakMsQ0FBQSxDQUFBLENBQUE5RSxLQUFBLENBQUFqRixDQUFBLENBQUEsSUFBQSxDQUFBLENBQUEsR0FBQSxLQUFBcS9DLE1BQUEsQ0FBQXIvQyxDQUFBLEVBQUEsS0FBQXFpRSxPQUFBLEVBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQWdCLFVBQUEsQ0FBQSxvQkFBQXQ1RCxDQUFBLENBQUEsQ0FBQSxHQUFBL0osQ0FBQUEsQ0FBQSxDQUFBLEtBQUFnRCxPQUFBLENBQUF3L0QsV0FBQSxDQUFBLE1BQUF4aUUsQ0FBQUEsQ0FBQSxDQUFBZ21CLENBQUEsQ0FBQTdtQixVQUFBLENBQUFhLENBQUEsRUFBQUEsQ0FBQSxDQUFBK0osQ0FBQSxDQUFBLENBQUFuRyxJQUFBLENBQUErdUMsS0FBQSxDQUFBNW9DLENBQUEsQ0FBQUEsQ0FBQSxDQUFBQSxDQUFBLENBQUEsR0FBQSxDQUFBQSxDQUFBLENBQUFBLENBQUEsQ0FBQSxHQUFBLENBQUEsR0FBQUEsQ0FBQSxDQUFBLEdBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBMDFELFVBQUEsQ0FBQSxxQkFBQSxDQUFBLEdBQUF6NUMsQ0FBQUEsQ0FBQSxDQUFBLEtBQUEwNUMsWUFBQSxDQUFBLEtBQUExOEQsT0FBQSxDQUFBNHhCLElBQUEsQ0FBQSxDQUFBLE1BQUEsUUFBQSxLQUFBNXhCLE9BQUEsQ0FBQW94QyxHQUFBLEdBQUFwdUIsQ0FBQSxDQUFBcGlCLElBQUEsQ0FBQXd1QixHQUFBLENBQUFwTSxDQUFBLENBQUEsS0FBQTA1QyxZQUFBLENBQUEsS0FBQTE4RCxPQUFBLENBQUFveEMsR0FBQSxDQUFBLENBQUEsRUFBQXB1QixDQUFBLENBQUEsQ0FBQSxDQUFBMDVDLFlBQUEsQ0FBQSxzQkFBQTE1QyxDQUFBLENBQUEsQ0FBQSxHQUFBamMsQ0FBQUEsQ0FBQSxDQUFBLEdBQUFpYyxDQUFBLENBQUFobUIsQ0FBQSxDQUFBK0osQ0FBQSxDQUFBcEwsT0FBQSxDQUFBLEdBQUEsQ0FBQSxDQUFBLE1BQUEsQ0FBQSxDQUFBLEdBQUFxQixDQUFBLENBQUEsQ0FBQSxDQUFBK0osQ0FBQSxDQUFBMUksTUFBQSxDQUFBckIsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUFvakUsWUFBQSxDQUFBLHNCQUFBcDlDLENBQUEsQ0FBQSxDQUFBLEdBQUFqYyxDQUFBQSxDQUFBLENBQUEvSixDQUFBLENBQUFpOUIsQ0FBQSxDQUFBLEtBQUFqNkIsT0FBQSxDQUFBLE1BQUErRyxDQUFBQSxDQUFBLENBQUEsT0FBQWt6QixDQUFBLENBQUFtWCxHQUFBLENBQUFuWCxDQUFBLENBQUFtWCxHQUFBLENBQUEsQ0FBQSxDQUFBcDBDLENBQUEsQ0FBQWdtQixDQUFBLENBQUFqYyxDQUFBLENBQUEvSixDQUFBLENBQUE0RCxJQUFBLENBQUErckIsS0FBQSxDQUFBM3ZCLENBQUEsQ0FBQWk5QixDQUFBLENBQUFySSxJQUFBLEVBQUFxSSxDQUFBLENBQUFySSxJQUFBLENBQUE1TyxDQUFBLENBQUFqYyxDQUFBLENBQUEvSixDQUFBLENBQUFnbUIsQ0FBQSxDQUFBNEosVUFBQSxDQUFBNUosQ0FBQSxDQUFBbzFDLE9BQUEsQ0FBQSxLQUFBcUUsVUFBQSxFQUFBLENBQUEsQ0FBQSxDQUFBLE9BQUF4aUMsQ0FBQSxDQUFBN0ssR0FBQSxFQUFBcE0sQ0FBQSxDQUFBaVgsQ0FBQSxDQUFBN0ssR0FBQSxDQUFBNkssQ0FBQSxDQUFBN0ssR0FBQSxDQUFBLE9BQUE2SyxDQUFBLENBQUFtWCxHQUFBLEVBQUFuWCxDQUFBLENBQUFtWCxHQUFBLENBQUFwdUIsQ0FBQSxDQUFBaVgsQ0FBQSxDQUFBbVgsR0FBQSxDQUFBcHVCLENBQUEsQ0FBQSxDQUFBLENBQUFtNUMsS0FBQSxDQUFBLGVBQUFuNUMsQ0FBQSxDQUFBLENBQUEsS0FBQSs4QyxRQUFBLEdBQUF2cEMsWUFBQSxDQUFBLEtBQUExQixLQUFBLENBQUEsQ0FBQTBCLFlBQUEsQ0FBQSxLQUFBeXBDLGVBQUEsQ0FBQSxDQUFBLEtBQUFaLE9BQUEsQ0FBQSxDQUFBLENBQUEsS0FBQVUsUUFBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLEtBQUE3MUIsUUFBQSxDQUFBLE1BQUEsQ0FBQWxuQixDQUFBLENBQUEsRUFBQSxDQUFBLENBQUFrcEIsVUFBQSxDQUFBLG9CQUFBbHBCLENBQUEsQ0FBQWpjLENBQUEsQ0FBQSxDQUFBLEdBQUEvSixDQUFBQSxDQUFBLENBQUFpOUIsQ0FBQSxDQUFBcG1CLENBQUEsQ0FBQSxNQUFBLFlBQUFtUCxDQUFBLEVBQUEsaUJBQUFBLENBQUEsRUFBQWhtQixDQUFBLENBQUEsS0FBQXNqRSxNQUFBLENBQUEsS0FBQXQyQixPQUFBLENBQUEvc0MsR0FBQSxFQUFBLENBQUEsQ0FBQSxLQUFBK0MsT0FBQSxDQUFBZ2pCLENBQUEsRUFBQWpjLENBQUEsQ0FBQSxLQUFBaWpDLE9BQUEsQ0FBQS9zQyxHQUFBLENBQUEsS0FBQXNqRSxPQUFBLENBQUF2akUsQ0FBQSxDQUFBLENBQUEsQ0FBQSxJQUFBLEVBQUEsR0FBQSxDQUFBLFFBQUFnbUIsQ0FBQSxFQUFBLFFBQUFBLENBQUEsRUFBQSxTQUFBQSxDQUFBLEdBQUEsVUFBQSxNQUFBamMsQ0FBQUEsQ0FBQSxHQUFBQSxDQUFBLENBQUEsS0FBQXU1RCxNQUFBLENBQUF2NUQsQ0FBQSxDQUFBLEVBQUEsVUFBQWljLENBQUEsR0FBQWlYLENBQUEsQ0FBQSxLQUFBMVMsT0FBQSxDQUFBcG9CLEtBQUEsR0FBQTJMLElBQUEsQ0FBQSxVQUFBLENBQUEsQ0FBQSxLQUFBa2hDLFlBQUEsQ0FBQS9SLENBQUEsQ0FBQSxJQUFBLENBQUEsS0FBQWo2QixPQUFBLENBQUErM0MsS0FBQSxDQUFBM0MsRUFBQSxDQUFBLENBQUEsS0FBQTVJLFNBQUEsQ0FBQXZTLENBQUEsQ0FBQSxJQUFBLENBQUFsekIsQ0FBQSxDQUFBcXVDLEVBQUEsQ0FBQSxDQUFBdmhDLENBQUEsQ0FBQSxLQUFBMFQsT0FBQSxDQUFBbG9CLElBQUEsR0FBQXlMLElBQUEsQ0FBQSxVQUFBLENBQUEsQ0FBQSxLQUFBa2hDLFlBQUEsQ0FBQW40QixDQUFBLENBQUEsSUFBQSxDQUFBLEtBQUE3VCxPQUFBLENBQUErM0MsS0FBQSxDQUFBMUMsSUFBQSxDQUFBLENBQUEsS0FBQTdJLFNBQUEsQ0FBQTM0QixDQUFBLENBQUEsSUFBQSxDQUFBOU0sQ0FBQSxDQUFBc3VDLElBQUEsQ0FBQSxDQUFBLENBQUEsS0FBQTNLLE1BQUEsQ0FBQTFuQixDQUFBLENBQUFqYyxDQUFBLENBQUEsQ0FBQSxJQUFBLEVBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQThrQyxrQkFBQSxDQUFBLDRCQUFBN29CLENBQUEsQ0FBQSxDQUFBLEtBQUEwbkIsTUFBQSxDQUFBMW5CLENBQUEsRUFBQSxLQUFBcXBCLFlBQUEsQ0FBQSxLQUFBOHpCLFNBQUEsQ0FBQSxJQUFBLENBQUEsbUJBQUEsQ0FBQSxDQUFBLENBQUFuOUMsQ0FBQSxDQUFBLENBQUEsS0FBQWduQixPQUFBLENBQUF2dEIsSUFBQSxDQUFBLFVBQUEsQ0FBQSxDQUFBLENBQUF1RyxDQUFBLENBQUEsQ0FBQSxLQUFBdUUsT0FBQSxDQUFBdkMsTUFBQSxDQUFBaEMsQ0FBQSxDQUFBLFNBQUEsQ0FBQSxRQUFBLENBQUEsQ0FBQSxDQUFBLENBQUFpcEIsV0FBQSxDQUFBbEMsQ0FBQSxDQUFBLFNBQUEvbUIsQ0FBQSxDQUFBLENBQUEsS0FBQTBuQixNQUFBLENBQUExbkIsQ0FBQSxFQUFBLENBQUEsQ0FBQSxDQUFBczlDLE1BQUEsQ0FBQSxnQkFBQXQ5QyxDQUFBLENBQUEsQ0FBQSxNQUFBLFVBQUEsTUFBQUEsQ0FBQUEsQ0FBQSxFQUFBLEtBQUFBLENBQUEsR0FBQUEsQ0FBQSxDQUFBbG9CLE1BQUEsQ0FBQTBsRSxTQUFBLEVBQUEsS0FBQXhnRSxPQUFBLENBQUF5L0QsWUFBQSxDQUFBZSxTQUFBLENBQUE1ekMsVUFBQSxDQUFBNUosQ0FBQSxDQUFBLEVBQUEsQ0FBQSxLQUFBaGpCLE9BQUEsQ0FBQXUvRCxPQUFBLENBQUEsQ0FBQSxDQUFBdjhDLENBQUEsRUFBQSxLQUFBQSxDQUFBLEVBQUE4aEIsS0FBQSxDQUFBOWhCLENBQUEsQ0FBQSxDQUFBLElBQUEsQ0FBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQXU5QyxPQUFBLENBQUEsaUJBQUF2OUMsQ0FBQSxDQUFBLENBQUEsTUFBQSxLQUFBQSxDQUFBLENBQUEsRUFBQSxDQUFBbG9CLE1BQUEsQ0FBQTBsRSxTQUFBLEVBQUEsS0FBQXhnRSxPQUFBLENBQUF5L0QsWUFBQSxDQUFBZSxTQUFBLENBQUFDLE1BQUEsQ0FBQXo5QyxDQUFBLENBQUEsS0FBQWhqQixPQUFBLENBQUF5L0QsWUFBQSxDQUFBLEtBQUF6L0QsT0FBQSxDQUFBdS9ELE9BQUEsQ0FBQSxDQUFBdjhDLENBQUEsQ0FBQSxDQUFBLENBQUFpbkIsUUFBQSxDQUFBLG1CQUFBLENBQUEsS0FBQUQsT0FBQSxDQUFBMzlCLElBQUEsQ0FBQSxDQUFBLGdCQUFBLEtBQUFyTSxPQUFBLENBQUFveEMsR0FBQSxDQUFBLGdCQUFBLEtBQUFweEMsT0FBQSxDQUFBb3ZCLEdBQUEsQ0FBQSxnQkFBQSxLQUFBa3hDLE1BQUEsQ0FBQSxLQUFBdDJCLE9BQUEsQ0FBQS9zQyxHQUFBLEVBQUEsQ0FBQSxDQUFBLEVBQUEsQ0FBQSxDQUFBeWpFLE9BQUEsQ0FBQSxrQkFBQSxDQUFBLEdBQUExOUMsQ0FBQUEsQ0FBQSxDQUFBLEtBQUEvZ0IsS0FBQSxFQUFBLENBQUEsTUFBQSxRQUFBK2dCLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQUEsQ0FBQSxHQUFBLEtBQUFvOUMsWUFBQSxDQUFBcDlDLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQXE1QixNQUFBLENBQUEsZ0JBQUFyNUIsQ0FBQSxDQUFBamMsQ0FBQSxDQUFBLENBQUEsR0FBQS9KLENBQUFBLENBQUEsQ0FBQSxLQUFBZ21CLENBQUEsR0FBQWhtQixDQUFBLENBQUEsS0FBQXNqRSxNQUFBLENBQUF0OUMsQ0FBQSxDQUFBLENBQUEsT0FBQWhtQixDQUFBLEdBQUErSixDQUFBLEdBQUEvSixDQUFBLENBQUEsS0FBQW9qRSxZQUFBLENBQUFwakUsQ0FBQSxDQUFBLENBQUEsQ0FBQWdtQixDQUFBLENBQUEsS0FBQXU5QyxPQUFBLENBQUF2akUsQ0FBQSxDQUFBLENBQUEsRUFBQSxLQUFBZ3RDLE9BQUEsQ0FBQS9zQyxHQUFBLENBQUErbEIsQ0FBQSxDQUFBLENBQUEsS0FBQWluQixRQUFBLEVBQUEsQ0FBQSxDQUFBLENBQUE4QixRQUFBLENBQUEsbUJBQUEsQ0FBQSxLQUFBL0IsT0FBQSxDQUFBdnRCLElBQUEsQ0FBQSxVQUFBLENBQUEsQ0FBQSxDQUFBLEVBQUFvYSxVQUFBLENBQUEsNkRBQUEsRUFBQSxLQUFBc3BDLFNBQUEsQ0FBQXYxQyxXQUFBLENBQUEsS0FBQW9mLE9BQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQTIyQixNQUFBLENBQUE1MkIsQ0FBQSxDQUFBLFNBQUEvbUIsQ0FBQSxDQUFBLENBQUEsS0FBQTQ5QyxPQUFBLENBQUE1OUMsQ0FBQSxFQUFBLENBQUEsQ0FBQSxDQUFBNDlDLE9BQUEsQ0FBQSxpQkFBQTU5QyxDQUFBLENBQUEsQ0FBQSxLQUFBZzVDLE1BQUEsS0FBQSxLQUFBZ0UsS0FBQSxDQUFBLENBQUFoOUMsQ0FBQSxFQUFBLENBQUEsRUFBQSxLQUFBaGpCLE9BQUEsQ0FBQTR4QixJQUFBLEVBQUEsS0FBQXVxQyxLQUFBLEVBQUEsRUFBQSxDQUFBLENBQUEwRSxRQUFBLENBQUE5MkIsQ0FBQSxDQUFBLFNBQUEvbUIsQ0FBQSxDQUFBLENBQUEsS0FBQTg5QyxTQUFBLENBQUE5OUMsQ0FBQSxFQUFBLENBQUEsQ0FBQSxDQUFBODlDLFNBQUEsQ0FBQSxtQkFBQTk5QyxDQUFBLENBQUEsQ0FBQSxLQUFBZzVDLE1BQUEsS0FBQSxLQUFBZ0UsS0FBQSxDQUFBLENBQUFoOUMsQ0FBQSxFQUFBLENBQUEsRUFBQSxDQUFBLEtBQUFoakIsT0FBQSxDQUFBNHhCLElBQUEsRUFBQSxLQUFBdXFDLEtBQUEsRUFBQSxFQUFBLENBQUEsQ0FBQTRFLE1BQUEsQ0FBQWgzQixDQUFBLENBQUEsU0FBQS9tQixDQUFBLENBQUEsQ0FBQSxLQUFBNDlDLE9BQUEsQ0FBQSxDQUFBNTlDLENBQUEsRUFBQSxDQUFBLEVBQUEsS0FBQWhqQixPQUFBLENBQUEwL0QsSUFBQSxFQUFBLENBQUEsQ0FBQSxDQUFBc0IsUUFBQSxDQUFBajNCLENBQUEsQ0FBQSxTQUFBL21CLENBQUEsQ0FBQSxDQUFBLEtBQUE4OUMsU0FBQSxDQUFBLENBQUE5OUMsQ0FBQSxFQUFBLENBQUEsRUFBQSxLQUFBaGpCLE9BQUEsQ0FBQTAvRCxJQUFBLEVBQUEsQ0FBQSxDQUFBLENBQUF6OUQsS0FBQSxDQUFBLGVBQUErZ0IsQ0FBQSxDQUFBLENBQUEsTUFBQTlqQixDQUFBQSxTQUFBLENBQUFiLE1BQUEsRUFBQTByQyxDQUFBLENBQUEsS0FBQXNTLE1BQUEsQ0FBQSxDQUFBOWdELElBQUEsQ0FBQSxJQUFBLENBQUF5bkIsQ0FBQSxFQUFBLElBQUEsRUFBQSxFQUFBLEtBQUFzOUMsTUFBQSxDQUFBLEtBQUF0MkIsT0FBQSxDQUFBL3NDLEdBQUEsRUFBQSxDQUFBLENBQUEsQ0FBQSxDQUFBb3RDLE1BQUEsQ0FBQSxpQkFBQSxDQUFBLE1BQUEsTUFBQTgxQixTQUFBLENBQUEsQ0FBQSxDQUFBLENBRkEsQ0FFQW45QyxDQUFBLENBQUFnd0IsWUFBQSxHQUFBLENBQUEsQ0FBQSxFQUFBaHdCLENBQUEsQ0FBQXFuQixNQUFBLENBQUEsWUFBQSxDQUFBcm5CLENBQUEsQ0FBQW1uQixFQUFBLENBQUFxVSxPQUFBLENBQUEsQ0FBQUMsUUFBQSxDQUFBLG1CQUFBLENBQUEsS0FBQTBoQixTQUFBLENBQUEsS0FBQW4yQixPQUFBLENBQUEzOUIsSUFBQSxDQUFBLGNBQUEsQ0FBQSxLQUFBLEVBQUFxVixJQUFBLENBQUEsS0FBQXUvQyxjQUFBLEVBQUEsRUFBQTV5RCxNQUFBLEdBQUFrYyxNQUFBLENBQUEsS0FBQTIyQyxXQUFBLEVBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQUQsY0FBQSxDQUFBLHlCQUFBLENBQUEsTUFBQSxRQUFBLENBQUEsQ0FBQSxDQUFBQyxXQUFBLENBQUEsc0JBQUEsQ0FBQSxNQUFBLGdCQUFBLENBQUEsQ0FBQSxDQUFBLENBRkEsQ0FFQWwrQyxDQUFBLENBQUFtbkIsRUFBQSxDQUFBcVUsT0FGQSxDQUVBeDdCLENBQUEsQ0FBQXFuQixNQUFBLENBQUEsU0FBQSxDQUFBLENBQUF6c0MsT0FBQSxDQUFBLFFBQUEsQ0FBQXk0QixLQUFBLENBQUEsR0FBQSxDQUFBcjJCLE9BQUEsQ0FBQSxDQUFBZzlCLE1BQUEsQ0FBQSxJQUFBLENBQUFuRixPQUFBLENBQUEsQ0FBQSxVQUFBLGVBQUEsQ0FBQSxjQUFBLGVBQUEsQ0FBQSxnQkFBQSxrQkFBQSxDQUFBLGNBQUEsZUFBQSxDQUFBLENBQUErZixXQUFBLENBQUEsQ0FBQSxDQUFBLENBQUFqMUIsS0FBQSxDQUFBLE9BQUEsQ0FBQW0xQixXQUFBLENBQUEsU0FBQSxDQUFBbjRCLElBQUEsQ0FBQSxJQUFBLENBQUFGLElBQUEsQ0FBQSxJQUFBLENBQUF3NEIsUUFBQSxDQUFBLElBQUEsQ0FBQUMsY0FBQSxDQUFBLElBQUEsQ0FBQWlwQixVQUFBLENBQUEsSUFBQSxDQUFBNTdDLElBQUEsQ0FBQSxJQUFBLENBQUEsQ0FBQTY3QyxRQUFBLENBQUEsVUFBQSxDQUFBLEdBQUFwK0MsQ0FBQUEsQ0FBQSxDQUFBLE1BQUEsQ0FBQSxNQUFBLFVBQUFqYyxDQUFBLENBQUEsQ0FBQSxHQUFBL0osQ0FBQUEsQ0FBQSxDQUFBaTlCLENBQUEsQ0FBQWo5QixDQUFBLENBQUErSixDQUFBLENBQUF1SSxJQUFBLENBQUF4TyxPQUFBLENBQUFraUIsQ0FBQSxDQUFBLEVBQUEsQ0FBQSxDQUFBaVgsQ0FBQSxDQUFBOXFCLFFBQUEsQ0FBQUcsSUFBQSxDQUFBeE8sT0FBQSxDQUFBa2lCLENBQUEsQ0FBQSxFQUFBLENBQUEsQ0FBQSxHQUFBLENBQUFobUIsQ0FBQSxDQUFBcWtFLGtCQUFBLENBQUFya0UsQ0FBQSxDQUFBLENBQUEsT0FBQTZXLENBQUEsQ0FBQSxDQUFBLElBQUEsQ0FBQW9tQixDQUFBLENBQUFvbkMsa0JBQUEsQ0FBQXBuQyxDQUFBLENBQUEsQ0FBQSxPQUFBcG1CLENBQUEsQ0FBQSxDQUFBLE9BQUE5TSxDQUFBQSxDQUFBLENBQUFtSSxJQUFBLENBQUE3USxNQUFBLENBQUEsQ0FBQSxFQUFBckIsQ0FBQSxHQUFBaTlCLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxFQUFBLENBQUEyUixPQUFBLENBQUEsa0JBQUEsQ0FBQSxHQUFBN2tDLENBQUFBLENBQUEsQ0FBQSxJQUFBLENBQUEvSixDQUFBLENBQUEsS0FBQWdELE9BQUEsQ0FBQSxLQUFBc2hFLE9BQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxLQUFBOTBCLFNBQUEsQ0FBQSxTQUFBLENBQUEsNkJBQUEsQ0FBQSxDQUFBLEtBQUFILFlBQUEsQ0FBQSxxQkFBQSxDQUFBLElBQUEsQ0FBQXJ2QyxDQUFBLENBQUE0NkMsV0FBQSxDQUFBLENBQUEsS0FBQTJwQixZQUFBLEVBQUEsQ0FBQXZrRSxDQUFBLENBQUFnZ0MsTUFBQSxDQUFBLEtBQUF3a0MsY0FBQSxFQUFBLENBQUF4K0MsQ0FBQSxDQUFBdmlCLE9BQUEsQ0FBQXpELENBQUEsQ0FBQTBKLFFBQUEsSUFBQTFKLENBQUEsQ0FBQTBKLFFBQUEsQ0FBQXNjLENBQUEsQ0FBQTFQLE1BQUEsQ0FBQXRXLENBQUEsQ0FBQTBKLFFBQUEsQ0FBQWxMLE1BQUEsQ0FBQXduQixDQUFBLENBQUFoa0IsR0FBQSxDQUFBLEtBQUF5aUUsSUFBQSxDQUFBNzJELE1BQUEsQ0FBQSxvQkFBQSxDQUFBLENBQUEsU0FBQW9ZLENBQUEsQ0FBQSxDQUFBLE1BQUFqYyxDQUFBQSxDQUFBLENBQUEwNkQsSUFBQSxDQUFBdnNELEtBQUEsQ0FBQThOLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLEVBQUFuakIsSUFBQSxFQUFBLENBQUEsQ0FBQSxLQUFBbTlCLE1BQUEsQ0FBQSxLQUFBaDlCLE9BQUEsQ0FBQWc5QixNQUFBLEdBQUEsQ0FBQSxDQUFBLEVBQUEsS0FBQTBrQyxPQUFBLENBQUFyakUsTUFBQSxDQUFBLEtBQUFnN0MsV0FBQSxDQUFBcjhDLENBQUEsQ0FBQWdnQyxNQUFBLENBQUEsQ0FBQWhhLENBQUEsRUFBQSxDQUFBLEtBQUFpbkIsUUFBQSxFQUFBLENBQUEsS0FBQWpOLE1BQUEsQ0FBQTMrQixNQUFBLEVBQUEsS0FBQWtuQixJQUFBLENBQUF2b0IsQ0FBQSxDQUFBZ2dDLE1BQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQXdrQyxjQUFBLENBQUEseUJBQUEsQ0FBQSxHQUFBejZELENBQUFBLENBQUEsQ0FBQSxLQUFBL0csT0FBQSxDQUFBZzlCLE1BQUEsQ0FBQWhnQyxDQUFBLENBQUEsS0FBQWdELE9BQUEsQ0FBQTQzQyxXQUFBLENBQUEzZCxDQUFBLENBQUE5cUIsUUFBQSxDQUFBRCxJQUFBLENBQUFvbkMsU0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLE1BQUEsUUFBQXZ2QyxDQUFBLEdBQUFrekIsQ0FBQSxFQUFBLEtBQUF3bkMsSUFBQSxDQUFBM2lFLElBQUEsQ0FBQSxTQUFBOUIsQ0FBQSxDQUFBNlcsQ0FBQSxDQUFBLENBQUEsTUFBQW1QLENBQUFBLENBQUEsQ0FBQW5QLENBQUEsQ0FBQSxDQUFBeEgsSUFBQSxDQUFBLGVBQUEsSUFBQTR0QixDQUFBLEVBQUFsekIsQ0FBQSxDQUFBL0osQ0FBQSxDQUFBLENBQUEsQ0FBQSxFQUFBLElBQUEsRUFBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLE9BQUErSixDQUFBLEdBQUFBLENBQUEsQ0FBQSxLQUFBMDZELElBQUEsQ0FBQXZzRCxLQUFBLENBQUEsS0FBQXVzRCxJQUFBLENBQUE3MkQsTUFBQSxDQUFBLGlCQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxPQUFBN0QsQ0FBQSxFQUFBLENBQUEsQ0FBQSxHQUFBQSxDQUFBLElBQUFBLENBQUEsQ0FBQSxLQUFBMDZELElBQUEsQ0FBQXBqRSxNQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLEVBQUEwSSxDQUFBLEdBQUEsQ0FBQSxDQUFBLEdBQUFBLENBQUEsQ0FBQSxLQUFBMDZELElBQUEsQ0FBQXZzRCxLQUFBLENBQUEsS0FBQXVzRCxJQUFBLENBQUFyaUUsRUFBQSxDQUFBMkgsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsR0FBQUEsQ0FBQSxHQUFBQSxDQUFBLENBQUEvSixDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBQSxDQUFBLEVBQUErSixDQUFBLEdBQUEsQ0FBQSxDQUFBLEVBQUEsS0FBQTI2RCxPQUFBLENBQUFyakUsTUFBQSxHQUFBMEksQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBQSxDQUFBLENBQUEsQ0FBQSxDQUFBK2tDLG1CQUFBLENBQUEsOEJBQUEsQ0FBQSxNQUFBLENBQUE2MUIsR0FBQSxDQUFBLEtBQUEza0MsTUFBQSxDQUFBNGIsS0FBQSxDQUFBLEtBQUE1YixNQUFBLENBQUEzK0IsTUFBQSxDQUFBLEtBQUF1akUsZUFBQSxDQUFBLEtBQUE1a0MsTUFBQSxDQUFBLENBQUFoYSxDQUFBLEVBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQTYrQyxXQUFBLENBQUEscUJBQUE5NkQsQ0FBQSxDQUFBLENBQUEsR0FBQS9KLENBQUFBLENBQUEsQ0FBQWdtQixDQUFBLENBQUFBLENBQUEsQ0FBQW1uQixFQUFBLENBQUE5bkIsaUJBQUEsQ0FBQSxLQUFBMW5CLFFBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUFzYSxPQUFBLENBQUEsSUFBQSxDQUFBLENBQUFnbEIsQ0FBQSxDQUFBLEtBQUF3bkMsSUFBQSxDQUFBdnNELEtBQUEsQ0FBQWxZLENBQUEsQ0FBQSxDQUFBNlcsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLEdBQUEsQ0FBQSxLQUFBaXVELGNBQUEsQ0FBQS82RCxDQUFBLENBQUEsQ0FBQSxDQUFBLE9BQUFBLENBQUEsQ0FBQXVnQixPQUFBLEVBQUEsSUFBQXRFLENBQUFBLENBQUEsQ0FBQW1uQixFQUFBLENBQUE3aUIsT0FBQSxDQUFBNnZCLEtBQUEsQ0FBQSxJQUFBbjBCLENBQUFBLENBQUEsQ0FBQW1uQixFQUFBLENBQUE3aUIsT0FBQSxDQUFBb3ZCLElBQUEsQ0FBQXpjLENBQUEsR0FBQSxNQUFBLElBQUFqWCxDQUFBQSxDQUFBLENBQUFtbkIsRUFBQSxDQUFBN2lCLE9BQUEsQ0FBQWd3QixFQUFBLENBQUEsSUFBQXQwQixDQUFBQSxDQUFBLENBQUFtbkIsRUFBQSxDQUFBN2lCLE9BQUEsQ0FBQXl2QixJQUFBLENBQUFsakMsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBb21CLENBQUEsRUFBQSxDQUFBLE1BQUEsSUFBQWpYLENBQUFBLENBQUEsQ0FBQW1uQixFQUFBLENBQUE3aUIsT0FBQSxDQUFBcXZCLEdBQUEsQ0FBQTFjLENBQUEsQ0FBQSxLQUFBeW5DLE9BQUEsQ0FBQXJqRSxNQUFBLENBQUEsQ0FBQSxDQUFBLE1BQUEsSUFBQTJrQixDQUFBQSxDQUFBLENBQUFtbkIsRUFBQSxDQUFBN2lCLE9BQUEsQ0FBQXd2QixJQUFBLENBQUE3YyxDQUFBLENBQUEsQ0FBQSxDQUFBLE1BQUEsSUFBQWpYLENBQUFBLENBQUEsQ0FBQW1uQixFQUFBLENBQUE3aUIsT0FBQSxDQUFBOHZCLEtBQUEsQ0FBQSxNQUFBcndDLENBQUFBLENBQUEsQ0FBQTRkLGNBQUEsR0FBQTZSLFlBQUEsQ0FBQSxLQUFBdXJDLFVBQUEsQ0FBQSxDQUFBLEtBQUFocEIsU0FBQSxDQUFBOWUsQ0FBQSxDQUFBLENBQUEsSUFBQSxFQUFBLENBQUEsSUFBQWpYLENBQUFBLENBQUEsQ0FBQW1uQixFQUFBLENBQUE3aUIsT0FBQSxDQUFBc3ZCLEtBQUEsQ0FBQSxNQUFBN3ZDLENBQUFBLENBQUEsQ0FBQTRkLGNBQUEsR0FBQTZSLFlBQUEsQ0FBQSxLQUFBdXJDLFVBQUEsQ0FBQSxDQUFBLEtBQUFocEIsU0FBQSxDQUFBOWUsQ0FBQSxHQUFBLEtBQUFqNkIsT0FBQSxDQUFBZzlCLE1BQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQS9DLENBQUEsQ0FBQSxDQUFBLElBQUEsRUFBQSxDQUFBLFFBQUEsT0FBQSxDQUFBbHpCLENBQUEsQ0FBQTRkLGNBQUEsR0FBQTZSLFlBQUEsQ0FBQSxLQUFBdXJDLFVBQUEsQ0FBQSxDQUFBOW5DLENBQUEsQ0FBQSxLQUFBK25DLGFBQUEsQ0FBQS9uQyxDQUFBLENBQUFwbUIsQ0FBQSxDQUFBLENBQUE5TSxDQUFBLENBQUE4ZixPQUFBLEVBQUE5ZixDQUFBLENBQUFpZ0IsT0FBQSxHQUFBaHFCLENBQUEsQ0FBQXFQLElBQUEsQ0FBQSxlQUFBLENBQUEsT0FBQSxFQUFBLEtBQUFvMUQsSUFBQSxDQUFBcmlFLEVBQUEsQ0FBQTY2QixDQUFBLEVBQUE1dEIsSUFBQSxDQUFBLGVBQUEsQ0FBQSxNQUFBLENBQUEsQ0FBQSxLQUFBMDFELFVBQUEsQ0FBQSxLQUFBcDFCLE1BQUEsQ0FBQSxVQUFBLENBQUEsS0FBQXJzQixNQUFBLENBQUEsUUFBQSxDQUFBMlosQ0FBQSxFQUFBLENBQUEsQ0FBQSxLQUFBNUQsS0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQTRyQyxhQUFBLENBQUEsdUJBQUFsN0QsQ0FBQSxDQUFBLENBQUEsS0FBQSs2RCxjQUFBLENBQUEvNkQsQ0FBQSxHQUFBQSxDQUFBLENBQUE4ZixPQUFBLEVBQUE5ZixDQUFBLENBQUF1Z0IsT0FBQSxHQUFBdEUsQ0FBQSxDQUFBbW5CLEVBQUEsQ0FBQTdpQixPQUFBLENBQUFnd0IsRUFBQSxHQUFBdndDLENBQUEsQ0FBQTRkLGNBQUEsR0FBQSxLQUFBcVksTUFBQSxDQUFBclgsT0FBQSxDQUFBLE9BQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBbThDLGNBQUEsQ0FBQSx3QkFBQS82RCxDQUFBLENBQUEsQ0FBQSxNQUFBQSxDQUFBQSxDQUFBLENBQUEwZixNQUFBLEVBQUExZixDQUFBLENBQUF1Z0IsT0FBQSxHQUFBdEUsQ0FBQSxDQUFBbW5CLEVBQUEsQ0FBQTdpQixPQUFBLENBQUEydkIsT0FBQSxFQUFBLEtBQUE4QixTQUFBLENBQUEsS0FBQWlwQixhQUFBLENBQUEsS0FBQWhpRSxPQUFBLENBQUFnOUIsTUFBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxFQUFBLENBQUEsQ0FBQSxFQUFBajJCLENBQUEsQ0FBQTBmLE1BQUEsRUFBQTFmLENBQUEsQ0FBQXVnQixPQUFBLEdBQUF0RSxDQUFBLENBQUFtbkIsRUFBQSxDQUFBN2lCLE9BQUEsQ0FBQTB2QixTQUFBLEVBQUEsS0FBQStCLFNBQUEsQ0FBQSxLQUFBaXBCLGFBQUEsQ0FBQSxLQUFBaGlFLE9BQUEsQ0FBQWc5QixNQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLEVBQUEsQ0FBQSxDQUFBLEVBQUEsSUFBQSxFQUFBLENBQUEsQ0FBQSxDQUFBa2xDLFlBQUEsQ0FBQSxzQkFBQW43RCxDQUFBLENBQUEvSixDQUFBLENBQUEsQ0FBQSxRQUFBaTlCLENBQUFBLENBQUEsRUFBQSxDQUFBLE1BQUFsekIsQ0FBQUEsQ0FBQSxDQUFBOE0sQ0FBQSxHQUFBOU0sQ0FBQSxDQUFBLENBQUEsRUFBQSxFQUFBQSxDQUFBLEdBQUFBLENBQUEsQ0FBQThNLENBQUEsQ0FBQSxDQUFBOU0sQ0FBQSxDQUFBLEtBQUEsR0FBQThNLENBQUFBLENBQUEsQ0FBQSxLQUFBNHRELElBQUEsQ0FBQXBqRSxNQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxHQUFBMmtCLENBQUEsQ0FBQXRoQixPQUFBLENBQUF1NEIsQ0FBQSxFQUFBLENBQUEsS0FBQWo2QixPQUFBLENBQUEwRyxRQUFBLENBQUEsR0FBQUssQ0FBQSxDQUFBL0osQ0FBQSxDQUFBK0osQ0FBQSxDQUFBLENBQUEsQ0FBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLE1BQUFBLENBQUFBLENBQUEsQ0FBQSxDQUFBLENBQUFpN0QsYUFBQSxDQUFBLHVCQUFBaC9DLENBQUEsQ0FBQWpjLENBQUEsQ0FBQSxDQUFBLE1BQUFpYyxDQUFBQSxDQUFBLENBQUEsS0FBQWsvQyxZQUFBLENBQUFsL0MsQ0FBQSxDQUFBamMsQ0FBQSxDQUFBLENBQUEsS0FBQTA2RCxJQUFBLENBQUFyaUUsRUFBQSxDQUFBNGpCLENBQUEsRUFBQTJDLE9BQUEsQ0FBQSxPQUFBLENBQUEsQ0FBQTNDLENBQUEsQ0FBQSxDQUFBLENBQUFrcEIsVUFBQSxDQUFBLG9CQUFBbHBCLENBQUEsQ0FBQWpjLENBQUEsQ0FBQSxDQUFBLE1BQUEsV0FBQWljLENBQUEsRUFBQSxLQUFBKzFCLFNBQUEsQ0FBQWh5QyxDQUFBLEVBQUEsSUFBQSxFQUFBLEdBQUEsS0FBQTJqQyxNQUFBLENBQUExbkIsQ0FBQSxDQUFBamMsQ0FBQSxFQUFBLGdCQUFBaWMsQ0FBQSxHQUFBLEtBQUFxcEIsWUFBQSxDQUFBLHFCQUFBLENBQUEsSUFBQSxDQUFBdGxDLENBQUEsRUFBQUEsQ0FBQSxFQUFBLEtBQUEvRyxPQUFBLENBQUFnOUIsTUFBQSxHQUFBLENBQUEsQ0FBQSxFQUFBLEtBQUErYixTQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxVQUFBLzFCLENBQUEsRUFBQSxLQUFBZzJCLFlBQUEsQ0FBQWp5QyxDQUFBLENBQUEsQ0FBQSxnQkFBQWljLENBQUEsRUFBQSxLQUFBbS9DLGlCQUFBLENBQUFwN0QsQ0FBQSxDQUFBLENBQUEsSUFBQSxFQUFBLENBQUEsQ0FBQSxDQUFBLENBQUFxN0QsaUJBQUEsQ0FBQSwyQkFBQXAvQyxDQUFBLENBQUEsQ0FBQSxNQUFBQSxDQUFBQSxDQUFBLENBQUFBLENBQUEsQ0FBQWxpQixPQUFBLENBQUEscUNBQUEsQ0FBQSxNQUFBLENBQUEsQ0FBQSxFQUFBLENBQUEsQ0FBQSxDQUFBcTFDLE9BQUEsQ0FBQSxrQkFBQSxDQUFBLEdBQUFwdkMsQ0FBQUEsQ0FBQSxDQUFBLEtBQUEvRyxPQUFBLENBQUFoRCxDQUFBLENBQUEsS0FBQXFsRSxPQUFBLENBQUExdEQsUUFBQSxDQUFBLGVBQUEsQ0FBQSxDQUFBNU4sQ0FBQSxDQUFBTCxRQUFBLENBQUFzYyxDQUFBLENBQUFoa0IsR0FBQSxDQUFBaEMsQ0FBQSxDQUFBNE4sTUFBQSxDQUFBLG9CQUFBLENBQUEsQ0FBQSxTQUFBb1ksQ0FBQSxDQUFBLENBQUEsTUFBQWhtQixDQUFBQSxDQUFBLENBQUFrWSxLQUFBLENBQUE4TixDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxLQUFBdStDLFlBQUEsRUFBQSxDQUFBeDZELENBQUEsQ0FBQWkyQixNQUFBLEdBQUEsQ0FBQSxDQUFBLEVBQUEsS0FBQTBrQyxPQUFBLENBQUFyakUsTUFBQSxDQUFBLEtBQUEyK0IsTUFBQSxDQUFBMytCLE1BQUEsRUFBQSxDQUFBMmtCLENBQUEsQ0FBQXpmLFFBQUEsQ0FBQSxLQUFBOCtELE9BQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxLQUFBcmxDLE1BQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLEtBQUF5a0MsSUFBQSxDQUFBcGpFLE1BQUEsR0FBQTBJLENBQUEsQ0FBQUwsUUFBQSxDQUFBckksTUFBQSxFQUFBMEksQ0FBQSxDQUFBaTJCLE1BQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxLQUFBQSxNQUFBLENBQUFoYSxDQUFBLEVBQUEsRUFBQSxLQUFBKzFCLFNBQUEsQ0FBQSxLQUFBbXBCLFlBQUEsQ0FBQXRoRSxJQUFBLENBQUF3dUIsR0FBQSxDQUFBLENBQUEsQ0FBQXJvQixDQUFBLENBQUFpMkIsTUFBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQWoyQixDQUFBLENBQUFpMkIsTUFBQSxDQUFBLEtBQUF5a0MsSUFBQSxDQUFBdnNELEtBQUEsQ0FBQSxLQUFBOG5CLE1BQUEsQ0FBQSxFQUFBajJCLENBQUEsQ0FBQWkyQixNQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsS0FBQUEsTUFBQSxDQUFBaGEsQ0FBQSxFQUFBLENBQUEsQ0FBQSxLQUFBaW5CLFFBQUEsRUFBQSxDQUFBLENBQUEsQ0FBQUEsUUFBQSxDQUFBLG1CQUFBLENBQUEsS0FBQTRCLGtCQUFBLENBQUEsS0FBQTdyQyxPQUFBLENBQUEwRyxRQUFBLEVBQUEsS0FBQXN5QyxZQUFBLENBQUEsS0FBQWg1QyxPQUFBLENBQUEyaUIsS0FBQSxDQUFBLENBQUEsS0FBQXcvQyxpQkFBQSxDQUFBLEtBQUFuaUUsT0FBQSxDQUFBODNDLFdBQUEsQ0FBQSxDQUFBLEtBQUEycEIsSUFBQSxDQUFBdHRELEdBQUEsQ0FBQSxLQUFBNm9CLE1BQUEsRUFBQTN3QixJQUFBLENBQUEsQ0FBQSxnQkFBQSxPQUFBLENBQUEsZ0JBQUEsT0FBQSxDQUFBa0QsUUFBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxLQUFBNnBDLE1BQUEsQ0FBQWpsQyxHQUFBLENBQUEsS0FBQXl0RCxlQUFBLENBQUEsS0FBQTVrQyxNQUFBLENBQUEsRUFBQXJkLElBQUEsR0FBQXRULElBQUEsQ0FBQSxDQUFBLGNBQUEsTUFBQSxDQUFBLENBQUEsQ0FBQSxLQUFBMndCLE1BQUEsQ0FBQTMrQixNQUFBLEVBQUEsS0FBQTIrQixNQUFBLENBQUEzd0IsSUFBQSxDQUFBLENBQUEsZ0JBQUEsTUFBQSxDQUFBLGdCQUFBLE1BQUEsQ0FBQWtELFFBQUEsQ0FBQSxDQUFBLENBQUEsRUFBQSxLQUFBaTlCLFNBQUEsQ0FBQSxLQUFBeFAsTUFBQSxDQUFBLGdCQUFBLENBQUEsaUJBQUEsQ0FBQSxDQUFBLEtBQUE0a0MsZUFBQSxDQUFBLEtBQUE1a0MsTUFBQSxFQUFBdmQsSUFBQSxHQUFBcFQsSUFBQSxDQUFBLENBQUEsY0FBQSxPQUFBLENBQUEsQ0FBQSxFQUFBLEtBQUFvMUQsSUFBQSxDQUFBcmlFLEVBQUEsQ0FBQSxDQUFBLEVBQUFpTixJQUFBLENBQUEsVUFBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQWsxRCxZQUFBLENBQUEsdUJBQUEsQ0FBQSxHQUFBeDZELENBQUFBLENBQUEsQ0FBQSxJQUFBLENBQUEvSixDQUFBLENBQUEsS0FBQXlrRSxJQUFBLENBQUF4bkMsQ0FBQSxDQUFBLEtBQUF5bkMsT0FBQSxDQUFBN3RELENBQUEsQ0FBQSxLQUFBdWxDLE1BQUEsQ0FBQSxLQUFBaXBCLE9BQUEsQ0FBQSxLQUFBQyxRQUFBLEdBQUFqMkQsSUFBQSxDQUFBLE1BQUEsQ0FBQSxTQUFBLENBQUEsQ0FBQSxLQUFBbWdDLFNBQUEsQ0FBQSxLQUFBNjFCLE9BQUEsQ0FBQSxhQUFBLENBQUEscURBQUEsQ0FBQSxDQUFBLEtBQUFBLE9BQUEsQ0FBQTkvQyxFQUFBLENBQUEsWUFBQSxLQUFBNm9CLGNBQUEsQ0FBQSxNQUFBLENBQUEsU0FBQXJrQyxDQUFBLENBQUEsQ0FBQWljLENBQUEsQ0FBQSxJQUFBLENBQUEsQ0FBQXJQLEVBQUEsQ0FBQSxvQkFBQSxHQUFBNU0sQ0FBQSxDQUFBNGQsY0FBQSxFQUFBLENBQUEsQ0FBQSxFQUFBcEMsRUFBQSxDQUFBLFFBQUEsS0FBQTZvQixjQUFBLENBQUEsaUJBQUEsQ0FBQSxVQUFBLENBQUFwb0IsQ0FBQSxDQUFBLElBQUEsQ0FBQSxDQUFBL04sT0FBQSxDQUFBLElBQUEsRUFBQXRCLEVBQUEsQ0FBQSxvQkFBQSxHQUFBLEtBQUEwVSxJQUFBLEVBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxLQUFBbzVDLElBQUEsQ0FBQSxLQUFBWSxPQUFBLENBQUF2M0QsSUFBQSxDQUFBLG1CQUFBLEVBQUF1QixJQUFBLENBQUEsQ0FBQTR0QyxJQUFBLENBQUEsS0FBQSxDQUFBMXFDLFFBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsS0FBQWk5QixTQUFBLENBQUEsS0FBQWkxQixJQUFBLENBQUEsYUFBQSxDQUFBLGtCQUFBLENBQUEsQ0FBQSxLQUFBQyxPQUFBLENBQUEsS0FBQUQsSUFBQSxDQUFBemlFLEdBQUEsQ0FBQSxVQUFBLENBQUEsTUFBQWdrQixDQUFBQSxDQUFBLENBQUEsR0FBQSxDQUFBLElBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsRUFBQTNXLElBQUEsQ0FBQSxDQUFBNHRDLElBQUEsQ0FBQSxjQUFBLENBQUExcUMsUUFBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxLQUFBaTlCLFNBQUEsQ0FBQSxLQUFBazFCLE9BQUEsQ0FBQSxnQkFBQSxDQUFBLENBQUEsS0FBQXRvQixNQUFBLENBQUFwMkIsQ0FBQSxFQUFBLENBQUEsS0FBQTArQyxPQUFBLENBQUE1aUUsSUFBQSxDQUFBLFNBQUE5QixDQUFBLENBQUFpOUIsQ0FBQSxDQUFBLENBQUEsR0FBQXBtQixDQUFBQSxDQUFBLENBQUE4MUIsQ0FBQSxDQUFBemxDLENBQUEsQ0FBQTZsQyxDQUFBLENBQUEvbUIsQ0FBQSxDQUFBaVgsQ0FBQSxDQUFBLENBQUF5ZCxRQUFBLEdBQUFyckMsSUFBQSxDQUFBLElBQUEsQ0FBQSxDQUFBKzlCLENBQUEsQ0FBQXBuQixDQUFBLENBQUFpWCxDQUFBLENBQUEsQ0FBQWhsQixPQUFBLENBQUEsSUFBQSxDQUFBLENBQUFELENBQUEsQ0FBQW8xQixDQUFBLENBQUEvOUIsSUFBQSxDQUFBLGVBQUEsQ0FBQSxDQUFBdEYsQ0FBQSxDQUFBcTZELFFBQUEsQ0FBQW5uQyxDQUFBLEdBQUFwbUIsQ0FBQSxDQUFBb21CLENBQUEsQ0FBQS9xQixJQUFBLENBQUFoTCxDQUFBLENBQUEyUCxDQUFBLENBQUF5aUMsU0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBM00sQ0FBQSxDQUFBNWlDLENBQUEsQ0FBQWlqQyxPQUFBLENBQUFsL0IsSUFBQSxDQUFBL0QsQ0FBQSxDQUFBcTdELGlCQUFBLENBQUF2dUQsQ0FBQSxDQUFBLENBQUEsR0FBQTNQLENBQUEsQ0FBQWttQyxDQUFBLENBQUEvOUIsSUFBQSxDQUFBLGVBQUEsR0FBQTJXLENBQUEsQ0FBQSxFQUFBLENBQUEsQ0FBQTAwQixRQUFBLEdBQUEsQ0FBQSxFQUFBL3ZDLEVBQUEsQ0FBQWtNLENBQUEsQ0FBQSxJQUFBM1AsQ0FBQSxDQUFBeWxDLENBQUEsQ0FBQTVpQyxDQUFBLENBQUFpakMsT0FBQSxDQUFBbC9CLElBQUEsQ0FBQStJLENBQUEsQ0FBQSxDQUFBODFCLENBQUEsQ0FBQXRyQyxNQUFBLEdBQUFzckMsQ0FBQSxDQUFBNWlDLENBQUEsQ0FBQXc3RCxZQUFBLENBQUFyK0QsQ0FBQSxDQUFBLENBQUF5bEMsQ0FBQSxDQUFBM2UsV0FBQSxDQUFBamtCLENBQUEsQ0FBQXF5QyxNQUFBLENBQUFwOEMsQ0FBQSxDQUFBLENBQUEsR0FBQStKLENBQUEsQ0FBQXM3RCxPQUFBLENBQUEsQ0FBQSxDQUFBMTRCLENBQUEsQ0FBQXQ5QixJQUFBLENBQUEsV0FBQSxDQUFBLFFBQUEsQ0FBQSxFQUFBczlCLENBQUEsQ0FBQXRyQyxNQUFBLEdBQUEwSSxDQUFBLENBQUFxeUMsTUFBQSxDQUFBcnlDLENBQUEsQ0FBQXF5QyxNQUFBLENBQUFoa0MsR0FBQSxDQUFBdTBCLENBQUEsQ0FBQSxDQUFBLENBQUEzMEIsQ0FBQSxFQUFBbzFCLENBQUEsQ0FBQTV0QixJQUFBLENBQUEsdUJBQUEsQ0FBQXhILENBQUEsQ0FBQSxDQUFBbzFCLENBQUEsQ0FBQS85QixJQUFBLENBQUEsQ0FBQSxnQkFBQW5JLENBQUEsQ0FBQSxrQkFBQTZsQyxDQUFBLENBQUEsQ0FBQSxDQUFBSixDQUFBLENBQUF0OUIsSUFBQSxDQUFBLGlCQUFBLENBQUEwOUIsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsS0FBQXFQLE1BQUEsQ0FBQS9zQyxJQUFBLENBQUEsTUFBQSxDQUFBLFVBQUEsQ0FBQSxDQUFBLEtBQUFtZ0MsU0FBQSxDQUFBLEtBQUE0TSxNQUFBLENBQUEsZUFBQSxDQUFBLG1CQUFBLENBQUEsQ0FBQXA4QyxDQUFBLEdBQUEsS0FBQTB2QyxJQUFBLENBQUExdkMsQ0FBQSxDQUFBbVgsR0FBQSxDQUFBLEtBQUFzdEQsSUFBQSxDQUFBLEVBQUEsS0FBQS8wQixJQUFBLENBQUF6UyxDQUFBLENBQUE5bEIsR0FBQSxDQUFBLEtBQUF1dEQsT0FBQSxDQUFBLENBQUEsQ0FBQSxLQUFBaDFCLElBQUEsQ0FBQTc0QixDQUFBLENBQUFNLEdBQUEsQ0FBQSxLQUFBaWxDLE1BQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUFrcEIsUUFBQSxDQUFBLG1CQUFBLENBQUEsTUFBQSxNQUFBRCxPQUFBLEVBQUEsS0FBQXI0QixPQUFBLENBQUFsL0IsSUFBQSxDQUFBLFFBQUEsRUFBQTFMLEVBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUFtakUsWUFBQSxDQUFBLHNCQUFBeDdELENBQUEsQ0FBQSxDQUFBLE1BQUFpYyxDQUFBQSxDQUFBLENBQUEsT0FBQSxDQUFBLENBQUEzVyxJQUFBLENBQUEsSUFBQSxDQUFBdEYsQ0FBQSxFQUFBeVYsSUFBQSxDQUFBLGlCQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUFxdkIsa0JBQUEsQ0FBQSw0QkFBQTlrQyxDQUFBLENBQUEsQ0FBQSxHQUFBL0osQ0FBQUEsQ0FBQSxDQUFBaTlCLENBQUEsQ0FBQXBtQixDQUFBLENBQUEsSUFBQW1QLENBQUEsQ0FBQXZpQixPQUFBLENBQUFzRyxDQUFBLElBQUFBLENBQUEsQ0FBQTFJLE1BQUEsQ0FBQTBJLENBQUEsQ0FBQTFJLE1BQUEsR0FBQSxLQUFBcWpFLE9BQUEsQ0FBQXJqRSxNQUFBLEdBQUEwSSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxFQUFBOE0sQ0FBQSxDQUFBLENBQUEsQ0FBQW9tQixDQUFBLENBQUEsS0FBQXduQyxJQUFBLENBQUE1dEQsQ0FBQSxDQUFBLENBQUFBLENBQUEsRUFBQSxFQUFBN1csQ0FBQSxDQUFBZ21CLENBQUEsQ0FBQWlYLENBQUEsQ0FBQSxDQUFBbHpCLENBQUEsR0FBQSxDQUFBLENBQUEsRUFBQSxDQUFBLENBQUEsR0FBQWljLENBQUEsQ0FBQXRoQixPQUFBLENBQUFtUyxDQUFBLENBQUE5TSxDQUFBLENBQUEsRUFBQS9KLENBQUEsQ0FBQXFQLElBQUEsQ0FBQSxlQUFBLENBQUEsTUFBQSxFQUFBLEtBQUFtZ0MsU0FBQSxDQUFBeHZDLENBQUEsQ0FBQSxJQUFBLENBQUEsbUJBQUEsQ0FBQSxHQUFBQSxDQUFBLENBQUE2NUIsVUFBQSxDQUFBLGVBQUEsRUFBQSxLQUFBbVYsWUFBQSxDQUFBaHZDLENBQUEsQ0FBQSxJQUFBLENBQUEsbUJBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxLQUFBZ0QsT0FBQSxDQUFBMEcsUUFBQSxDQUFBSyxDQUFBLENBQUEsS0FBQXNsQyxZQUFBLENBQUEsS0FBQWhDLE1BQUEsRUFBQSxDQUFBLEtBQUFTLGNBQUEsQ0FBQSxXQUFBLENBQUEsSUFBQSxDQUFBL2pDLENBQUEsR0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQWl5QyxZQUFBLENBQUEsc0JBQUFqeUMsQ0FBQSxDQUFBLENBQUEsR0FBQS9KLENBQUFBLENBQUEsQ0FBQSxFQUFBLENBQUErSixDQUFBLEVBQUFpYyxDQUFBLENBQUFsa0IsSUFBQSxDQUFBaUksQ0FBQSxDQUFBMUUsS0FBQSxDQUFBLEdBQUEsQ0FBQSxDQUFBLFNBQUEyZ0IsQ0FBQSxDQUFBamMsQ0FBQSxDQUFBLENBQUEvSixDQUFBLENBQUErSixDQUFBLENBQUEsQ0FBQSxlQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsS0FBQTJsQyxJQUFBLENBQUEsS0FBQWcxQixPQUFBLENBQUF0c0QsR0FBQSxDQUFBLEtBQUFxc0QsSUFBQSxFQUFBcnNELEdBQUEsQ0FBQSxLQUFBZ2tDLE1BQUEsQ0FBQSxDQUFBLENBQUEsS0FBQTNOLEdBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxLQUFBaTJCLE9BQUEsQ0FBQSxDQUFBajhDLEtBQUEsQ0FBQSxlQUFBekMsQ0FBQSxDQUFBLENBQUFBLENBQUEsQ0FBQTJCLGNBQUEsR0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLEtBQUE4bUIsR0FBQSxDQUFBLEtBQUFpMkIsT0FBQSxDQUFBMWtFLENBQUEsQ0FBQSxDQUFBLEtBQUF5dUMsR0FBQSxDQUFBLEtBQUFnMkIsSUFBQSxDQUFBLENBQUFub0IsT0FBQSxDQUFBLGFBQUEsQ0FBQSxDQUFBLENBQUEsS0FBQTdOLEdBQUEsQ0FBQSxLQUFBMk4sTUFBQSxDQUFBLENBQUFFLE9BQUEsQ0FBQSxlQUFBLENBQUEsQ0FBQSxDQUFBLEtBQUF6TSxVQUFBLENBQUEsS0FBQTQwQixJQUFBLENBQUEsQ0FBQSxLQUFBNzBCLFVBQUEsQ0FBQSxLQUFBNjBCLElBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQVUsaUJBQUEsQ0FBQSwyQkFBQXA3RCxDQUFBLENBQUEsQ0FBQSxHQUFBL0osQ0FBQUEsQ0FBQSxDQUFBaTlCLENBQUEsQ0FBQSxLQUFBK1AsT0FBQSxDQUFBMzdCLE1BQUEsRUFBQSxDQUFBLFNBQUF0SCxDQUFBLEVBQUEvSixDQUFBLENBQUFpOUIsQ0FBQSxDQUFBeE0sTUFBQSxFQUFBLENBQUF6d0IsQ0FBQSxFQUFBLEtBQUFndEMsT0FBQSxDQUFBbUQsV0FBQSxHQUFBLEtBQUFuRCxPQUFBLENBQUF2YyxNQUFBLEVBQUEsQ0FBQSxLQUFBdWMsT0FBQSxDQUFBcDJCLFFBQUEsQ0FBQSxVQUFBLEVBQUE5VSxJQUFBLENBQUEsVUFBQSxDQUFBLEdBQUFpSSxDQUFBQSxDQUFBLENBQUFpYyxDQUFBLENBQUEsSUFBQSxDQUFBLENBQUFpWCxDQUFBLENBQUFsekIsQ0FBQSxDQUFBMFgsR0FBQSxDQUFBLFVBQUEsQ0FBQSxDQUFBLGFBQUF3YixDQUFBLEVBQUEsVUFBQUEsQ0FBQSxHQUFBajlCLENBQUEsRUFBQStKLENBQUEsQ0FBQW9tQyxXQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsRUFBQSxDQUFBLENBQUEsQ0FBQSxLQUFBbkQsT0FBQSxDQUFBcjFCLFFBQUEsR0FBQVIsR0FBQSxDQUFBLEtBQUFpbEMsTUFBQSxFQUFBdDZDLElBQUEsQ0FBQSxVQUFBLENBQUE5QixDQUFBLEVBQUFnbUIsQ0FBQSxDQUFBLElBQUEsQ0FBQSxDQUFBbXFCLFdBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLEtBQUFpTSxNQUFBLENBQUF0NkMsSUFBQSxDQUFBLFVBQUEsQ0FBQWtrQixDQUFBLENBQUEsSUFBQSxDQUFBLENBQUF5SyxNQUFBLENBQUE3c0IsSUFBQSxDQUFBd3VCLEdBQUEsQ0FBQSxDQUFBLENBQUFweUIsQ0FBQSxDQUFBZ21CLENBQUEsQ0FBQSxJQUFBLENBQUEsQ0FBQXl4QixXQUFBLEVBQUEsQ0FBQXp4QixDQUFBLENBQUEsSUFBQSxDQUFBLENBQUF5SyxNQUFBLEVBQUEsQ0FBQSxFQUFBLENBQUEsRUFBQWhQLEdBQUEsQ0FBQSxVQUFBLENBQUEsTUFBQSxDQUFBLEVBQUEsU0FBQTFYLENBQUEsR0FBQS9KLENBQUEsQ0FBQSxDQUFBLENBQUEsS0FBQW84QyxNQUFBLENBQUF0NkMsSUFBQSxDQUFBLFVBQUEsQ0FBQTlCLENBQUEsQ0FBQTRELElBQUEsQ0FBQXd1QixHQUFBLENBQUFweUIsQ0FBQSxDQUFBZ21CLENBQUEsQ0FBQSxJQUFBLENBQUEsQ0FBQXlLLE1BQUEsQ0FBQSxFQUFBLEVBQUFBLE1BQUEsRUFBQSxDQUFBLENBQUEsQ0FBQSxFQUFBQSxNQUFBLENBQUF6d0IsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUFrOEMsYUFBQSxDQUFBLHVCQUFBbnlDLENBQUEsQ0FBQSxDQUFBLEdBQUEvSixDQUFBQSxDQUFBLENBQUEsS0FBQWdELE9BQUEsQ0FBQWk2QixDQUFBLENBQUEsS0FBQStDLE1BQUEsQ0FBQW5wQixDQUFBLENBQUFtUCxDQUFBLENBQUFqYyxDQUFBLENBQUF5ZCxhQUFBLENBQUEsQ0FBQW1sQixDQUFBLENBQUE5MUIsQ0FBQSxDQUFBb0IsT0FBQSxDQUFBLElBQUEsQ0FBQSxDQUFBL1EsQ0FBQSxDQUFBeWxDLENBQUEsQ0FBQSxDQUFBLENBQUEsR0FBQTFQLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQThQLENBQUEsQ0FBQTdsQyxDQUFBLEVBQUFsSCxDQUFBLENBQUE0NkMsV0FBQSxDQUFBeE4sQ0FBQSxDQUFBTCxDQUFBLENBQUEvbUIsQ0FBQSxFQUFBLENBQUEsS0FBQTQrQyxlQUFBLENBQUFqNEIsQ0FBQSxDQUFBLENBQUEzMEIsQ0FBQSxDQUFBaWxCLENBQUEsQ0FBQTU3QixNQUFBLENBQUEsS0FBQXVqRSxlQUFBLENBQUEzbkMsQ0FBQSxDQUFBLENBQUFqWCxDQUFBLEVBQUEsQ0FBQXlwQixDQUFBLENBQUEsQ0FBQSsxQixNQUFBLENBQUF2b0MsQ0FBQSxDQUFBdWYsUUFBQSxDQUFBeGtDLENBQUEsQ0FBQXl0RCxNQUFBLENBQUExNEIsQ0FBQSxDQUFBL21CLENBQUEsRUFBQSxDQUFBMm1CLENBQUEsQ0FBQStQLFFBQUEsQ0FBQXRQLENBQUEsQ0FBQSxDQUFBcmpDLENBQUEsQ0FBQTRkLGNBQUEsR0FBQWdsQixDQUFBLENBQUFyUixRQUFBLENBQUEsbUJBQUEsR0FBQXFSLENBQUEsQ0FBQXJSLFFBQUEsQ0FBQSxpQkFBQSxDQUFBLEVBQUEsS0FBQWdwQyxPQUFBLEVBQUFwOUQsQ0FBQSxFQUFBLENBQUFsSCxDQUFBLENBQUE0NkMsV0FBQSxFQUFBLEtBQUExTixRQUFBLENBQUEsZ0JBQUEsQ0FBQW5qQyxDQUFBLENBQUEwbEMsQ0FBQSxJQUFBLENBQUEsQ0FBQSxHQUFBenZDLENBQUEsQ0FBQWdnQyxNQUFBLENBQUErTSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsS0FBQTAzQixJQUFBLENBQUF2c0QsS0FBQSxDQUFBeTBCLENBQUEsQ0FBQSxDQUFBLEtBQUEzTSxNQUFBLENBQUE5NEIsQ0FBQSxDQUFBOGUsQ0FBQSxFQUFBLENBQUEybUIsQ0FBQSxDQUFBLEtBQUFsSixHQUFBLEVBQUEsS0FBQUEsR0FBQSxDQUFBdEIsS0FBQSxFQUFBLENBQUFucUIsQ0FBQSxDQUFBM1csTUFBQSxFQUFBK3JDLENBQUEsQ0FBQS9yQyxNQUFBLEVBQUEya0IsQ0FBQSxDQUFBaGlCLEtBQUEsQ0FBQSxrREFBQSxDQUFBLENBQUFvcEMsQ0FBQSxDQUFBL3JDLE1BQUEsRUFBQSxLQUFBa25CLElBQUEsQ0FBQSxLQUFBazhDLElBQUEsQ0FBQXZzRCxLQUFBLENBQUF5MEIsQ0FBQSxDQUFBLENBQUE1aUMsQ0FBQSxDQUFBLENBQUEsS0FBQTR5QyxPQUFBLENBQUE1eUMsQ0FBQSxDQUFBMGxDLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBa04sT0FBQSxDQUFBLGlCQUFBNXlDLENBQUEsQ0FBQS9KLENBQUEsQ0FBQSxDQUFBLFFBQUFpOUIsQ0FBQUEsQ0FBQSxFQUFBLENBQUEwUCxDQUFBLENBQUEyM0IsT0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBMzNCLENBQUEsQ0FBQU8sUUFBQSxDQUFBLFVBQUEsQ0FBQW5qQyxDQUFBLENBQUEvSixDQUFBLENBQUEsQ0FBQSxTQUFBNlcsQ0FBQUEsQ0FBQSxFQUFBLENBQUE4MUIsQ0FBQSxDQUFBNkMsU0FBQSxDQUFBeHZDLENBQUEsQ0FBQXlsRSxNQUFBLENBQUF4dEQsT0FBQSxDQUFBLElBQUEsQ0FBQSxDQUFBLGdCQUFBLENBQUEsaUJBQUEsRUFBQS9RLENBQUEsQ0FBQTdGLE1BQUEsRUFBQXNyQyxDQUFBLENBQUEzcEMsT0FBQSxDQUFBeWYsSUFBQSxDQUFBa3FCLENBQUEsQ0FBQTJyQixLQUFBLENBQUFweEQsQ0FBQSxDQUFBeWxDLENBQUEsQ0FBQTNwQyxPQUFBLENBQUF5ZixJQUFBLENBQUF3YSxDQUFBLENBQUEsRUFBQS8xQixDQUFBLENBQUF1YixJQUFBLEdBQUF3YSxDQUFBLEVBQUEsQ0FBQSxDQUFBLElBQUEwUCxDQUFBQSxDQUFBLENBQUEsSUFBQSxDQUFBemxDLENBQUEsQ0FBQWxILENBQUEsQ0FBQTA4QyxRQUFBLENBQUEzUCxDQUFBLENBQUEvc0MsQ0FBQSxDQUFBdzhDLFFBQUEsQ0FBQSxLQUFBOG5CLE9BQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQXYzQixDQUFBLENBQUExckMsTUFBQSxFQUFBLEtBQUEyQixPQUFBLENBQUEyZixJQUFBLENBQUEsS0FBQWsxQyxLQUFBLENBQUE5cUIsQ0FBQSxDQUFBLEtBQUEvcEMsT0FBQSxDQUFBMmYsSUFBQSxDQUFBLFVBQUEsQ0FBQWdxQixDQUFBLENBQUFxQyxZQUFBLENBQUFodkMsQ0FBQSxDQUFBd2xFLE1BQUEsQ0FBQXZ0RCxPQUFBLENBQUEsSUFBQSxDQUFBLENBQUEsZ0JBQUEsQ0FBQSxpQkFBQSxFQUFBcEIsQ0FBQSxFQUFBLENBQUEsQ0FBQSxDQUFBLEVBQUEsS0FBQW00QixZQUFBLENBQUFodkMsQ0FBQSxDQUFBd2xFLE1BQUEsQ0FBQXZ0RCxPQUFBLENBQUEsSUFBQSxDQUFBLENBQUEsZ0JBQUEsQ0FBQSxpQkFBQSxFQUFBODBCLENBQUEsQ0FBQXBxQixJQUFBLEVBQUEsQ0FBQTlMLENBQUEsRUFBQSxDQUFBLENBQUFrMkIsQ0FBQSxDQUFBMTlCLElBQUEsQ0FBQSxhQUFBLENBQUEsTUFBQSxDQUFBLENBQUFyUCxDQUFBLENBQUF3bEUsTUFBQSxDQUFBbjJELElBQUEsQ0FBQSxDQUFBLGdCQUFBLE9BQUEsQ0FBQSxnQkFBQSxPQUFBLENBQUEsQ0FBQSxDQUFBbkksQ0FBQSxDQUFBN0YsTUFBQSxFQUFBMHJDLENBQUEsQ0FBQTFyQyxNQUFBLENBQUFyQixDQUFBLENBQUF3bEUsTUFBQSxDQUFBbjJELElBQUEsQ0FBQSxVQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQW5JLENBQUEsQ0FBQTdGLE1BQUEsRUFBQSxLQUFBb2pFLElBQUEsQ0FBQTcyRCxNQUFBLENBQUEsVUFBQSxDQUFBLE1BQUEsS0FBQW9ZLENBQUEsQ0FBQSxJQUFBLENBQUEsQ0FBQTNXLElBQUEsQ0FBQSxVQUFBLENBQUEsQ0FBQSxDQUFBLEVBQUFBLElBQUEsQ0FBQSxVQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQW5JLENBQUEsQ0FBQW1JLElBQUEsQ0FBQSxhQUFBLENBQUEsT0FBQSxDQUFBLENBQUFyUCxDQUFBLENBQUF5bEUsTUFBQSxDQUFBcDJELElBQUEsQ0FBQSxDQUFBLGdCQUFBLE1BQUEsQ0FBQSxnQkFBQSxNQUFBLENBQUFrRCxRQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUF3cEMsU0FBQSxDQUFBLG1CQUFBaHlDLENBQUEsQ0FBQSxDQUFBLEdBQUEvSixDQUFBQSxDQUFBLENBQUFpOUIsQ0FBQSxDQUFBLEtBQUFvZixXQUFBLENBQUF0eUMsQ0FBQSxDQUFBLENBQUFrekIsQ0FBQSxDQUFBLENBQUEsQ0FBQSxHQUFBLEtBQUErQyxNQUFBLENBQUEsQ0FBQSxDQUFBLEdBQUEvQyxDQUFBLENBQUE1N0IsTUFBQSxHQUFBNDdCLENBQUEsQ0FBQSxLQUFBK0MsTUFBQSxFQUFBaGdDLENBQUEsQ0FBQWk5QixDQUFBLENBQUFudkIsSUFBQSxDQUFBLGlCQUFBLEVBQUEsQ0FBQSxDQUFBLENBQUEsS0FBQW91QyxhQUFBLENBQUEsQ0FBQTc0QyxNQUFBLENBQUFyRCxDQUFBLENBQUF3bkIsYUFBQSxDQUFBeG5CLENBQUEsQ0FBQTJuQixjQUFBLENBQUEzQixDQUFBLENBQUE5aEIsSUFBQSxDQUFBLENBQUEsRUFBQSxDQUFBLENBQUFtNEMsV0FBQSxDQUFBLHFCQUFBdHlDLENBQUEsQ0FBQSxDQUFBLE1BQUFBLENBQUFBLENBQUEsR0FBQSxDQUFBLENBQUEsQ0FBQWljLENBQUEsRUFBQSxDQUFBLEtBQUF5K0MsSUFBQSxDQUFBcmlFLEVBQUEsQ0FBQTJILENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQTI3RCxTQUFBLENBQUEsbUJBQUEzN0QsQ0FBQSxDQUFBLENBQUEsTUFBQSxVQUFBLE1BQUFBLENBQUFBLENBQUEsR0FBQUEsQ0FBQSxDQUFBLEtBQUEyNkQsT0FBQSxDQUFBeHNELEtBQUEsQ0FBQSxLQUFBd3NELE9BQUEsQ0FBQTkyRCxNQUFBLENBQUEsV0FBQW9ZLENBQUEsQ0FBQW1uQixFQUFBLENBQUEzMkIsY0FBQSxDQUFBek0sQ0FBQSxDQUFBLENBQUEsSUFBQSxDQUFBLENBQUEsRUFBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQWdsQyxRQUFBLENBQUEsbUJBQUEsQ0FBQSxLQUFBdEwsR0FBQSxFQUFBLEtBQUFBLEdBQUEsQ0FBQXRCLEtBQUEsRUFBQSxDQUFBLEtBQUFrakMsT0FBQSxDQUFBeHJDLFVBQUEsQ0FBQSxNQUFBLEVBQUFqVSxHQUFBLENBQUEsS0FBQXdvQixjQUFBLENBQUEsQ0FBQSxLQUFBczJCLE9BQUEsQ0FBQTdxQyxVQUFBLENBQUEsZUFBQSxFQUFBOGdCLGNBQUEsRUFBQSxDQUFBLEtBQUE4cEIsSUFBQSxDQUFBcnNELEdBQUEsQ0FBQSxLQUFBZ2tDLE1BQUEsRUFBQXQ2QyxJQUFBLENBQUEsVUFBQSxDQUFBa2tCLENBQUEsQ0FBQXhHLElBQUEsQ0FBQSxJQUFBLENBQUEsaUJBQUEsRUFBQXdHLENBQUEsQ0FBQSxJQUFBLENBQUEsQ0FBQWxNLE1BQUEsRUFBQSxDQUFBa00sQ0FBQSxDQUFBLElBQUEsQ0FBQSxDQUFBNlQsVUFBQSxDQUFBLDJGQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxLQUFBNHFDLElBQUEsQ0FBQTNpRSxJQUFBLENBQUEsVUFBQSxDQUFBLEdBQUFpSSxDQUFBQSxDQUFBLENBQUFpYyxDQUFBLENBQUEsSUFBQSxDQUFBLENBQUFobUIsQ0FBQSxDQUFBK0osQ0FBQSxDQUFBeVYsSUFBQSxDQUFBLHVCQUFBLENBQUEsQ0FBQXhmLENBQUEsQ0FBQStKLENBQUEsQ0FBQXNGLElBQUEsQ0FBQSxlQUFBLENBQUFyUCxDQUFBLEVBQUFtZ0IsVUFBQSxDQUFBLHVCQUFBLENBQUEsQ0FBQXBXLENBQUEsQ0FBQTh2QixVQUFBLENBQUEsZUFBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsS0FBQXVpQixNQUFBLENBQUEzNUIsSUFBQSxFQUFBLENBQUEsWUFBQSxLQUFBemYsT0FBQSxDQUFBODNDLFdBQUEsRUFBQSxLQUFBc0IsTUFBQSxDQUFBMzZCLEdBQUEsQ0FBQSxRQUFBLENBQUEsRUFBQSxDQUFBLENBQUEsQ0FBQSxDQUFBNnRCLE1BQUEsQ0FBQSxnQkFBQXZsQyxDQUFBLENBQUEsQ0FBQSxHQUFBL0osQ0FBQUEsQ0FBQSxDQUFBLEtBQUFnRCxPQUFBLENBQUEwRyxRQUFBLENBQUExSixDQUFBLEdBQUEsQ0FBQSxDQUFBLEdBQUEsSUFBQSxFQUFBLEdBQUErSixDQUFBLENBQUEvSixDQUFBLENBQUEsQ0FBQSxDQUFBLEVBQUErSixDQUFBLENBQUEsS0FBQTI3RCxTQUFBLENBQUEzN0QsQ0FBQSxDQUFBLENBQUEvSixDQUFBLENBQUFnbUIsQ0FBQSxDQUFBdmlCLE9BQUEsQ0FBQXpELENBQUEsRUFBQWdtQixDQUFBLENBQUFoa0IsR0FBQSxDQUFBaEMsQ0FBQSxDQUFBLFNBQUFnbUIsQ0FBQSxDQUFBLENBQUEsTUFBQUEsQ0FBQUEsQ0FBQSxHQUFBamMsQ0FBQSxDQUFBaWMsQ0FBQSxDQUFBLElBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQUEsQ0FBQSxDQUFBaGtCLEdBQUEsQ0FBQSxLQUFBeWlFLElBQUEsQ0FBQSxTQUFBeitDLENBQUEsQ0FBQWhtQixDQUFBLENBQUEsQ0FBQSxNQUFBQSxDQUFBQSxDQUFBLEdBQUErSixDQUFBLENBQUEvSixDQUFBLENBQUEsSUFBQSxDQUFBLENBQUEsQ0FBQSxFQUFBLEtBQUE2dUMsa0JBQUEsQ0FBQTd1QyxDQUFBLENBQUEsRUFBQSxDQUFBLENBQUFnYSxPQUFBLENBQUEsaUJBQUFqUSxDQUFBLENBQUEsQ0FBQSxHQUFBL0osQ0FBQUEsQ0FBQSxDQUFBLEtBQUFnRCxPQUFBLENBQUEwRyxRQUFBLENBQUEsR0FBQTFKLENBQUEsR0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLEdBQUEsSUFBQSxFQUFBLEdBQUErSixDQUFBLENBQUEvSixDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsSUFBQSxDQUFBLEdBQUErSixDQUFBLENBQUEsS0FBQTI3RCxTQUFBLENBQUEzN0QsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLEdBQUFpYyxDQUFBLENBQUF0aEIsT0FBQSxDQUFBcUYsQ0FBQSxDQUFBL0osQ0FBQSxDQUFBLENBQUEsT0FBQUEsQ0FBQSxDQUFBZ21CLENBQUEsQ0FBQXZpQixPQUFBLENBQUF6RCxDQUFBLEVBQUFnbUIsQ0FBQSxDQUFBcGtCLEtBQUEsQ0FBQSxDQUFBbUksQ0FBQSxDQUFBLENBQUEvSixDQUFBLEVBQUE2QyxJQUFBLEVBQUEsQ0FBQSxDQUFBa0gsQ0FBQSxDQUFBLENBQUEsTUFBQThrQyxrQkFBQSxDQUFBN3VDLENBQUEsRUFBQSxDQUFBLENBQUEsQ0FBQXVvQixJQUFBLENBQUEsY0FBQXhlLENBQUEsQ0FBQS9KLENBQUEsQ0FBQSxDQUFBK0osQ0FBQSxDQUFBLEtBQUEyN0QsU0FBQSxDQUFBMzdELENBQUEsQ0FBQSxDQUFBLEdBQUFrekIsQ0FBQUEsQ0FBQSxDQUFBLElBQUEsQ0FBQXBtQixDQUFBLENBQUEsS0FBQTR0RCxJQUFBLENBQUFyaUUsRUFBQSxDQUFBMkgsQ0FBQSxDQUFBLENBQUE0aUMsQ0FBQSxDQUFBOTFCLENBQUEsQ0FBQS9JLElBQUEsQ0FBQSxpQkFBQSxDQUFBLENBQUE1RyxDQUFBLENBQUEsS0FBQTA5RCxlQUFBLENBQUEvdEQsQ0FBQSxDQUFBLENBQUFrMkIsQ0FBQSxDQUFBLENBQUE0M0IsR0FBQSxDQUFBOXRELENBQUEsQ0FBQStrQyxLQUFBLENBQUExMEMsQ0FBQSxDQUFBLENBQUFrbUMsQ0FBQSxDQUFBLFFBQUFBLENBQUFBLENBQUEsQ0FBQXBuQixDQUFBLENBQUFqYyxDQUFBLENBQUEsQ0FBQSxVQUFBQSxDQUFBLEVBQUFrekIsQ0FBQSxDQUFBbWYsTUFBQSxDQUFBMTdCLElBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBdWMsQ0FBQSxDQUFBK1IsWUFBQSxDQUFBbjRCLENBQUEsQ0FBQSxpQkFBQSxDQUFBLENBQUEzUCxDQUFBLENBQUEyeUIsVUFBQSxDQUFBLFdBQUEsQ0FBQSxDQUFBN1QsQ0FBQSxHQUFBaVgsQ0FBQSxDQUFBd0csR0FBQSxFQUFBLE1BQUF4RyxDQUFBQSxDQUFBLENBQUF3RyxHQUFBLENBQUEsQ0FBQSxDQUFBLEtBQUEyZ0MsUUFBQSxDQUFBejNCLENBQUEsQ0FBQSxDQUFBLENBQUEsSUFBQSxLQUFBbEosR0FBQSxDQUFBemQsQ0FBQSxDQUFBK2EsSUFBQSxDQUFBLEtBQUE0a0MsYUFBQSxDQUFBaDVCLENBQUEsQ0FBQTNzQyxDQUFBLENBQUErc0MsQ0FBQSxDQUFBLENBQUEsQ0FBQSxLQUFBdEosR0FBQSxFQUFBLGFBQUEsS0FBQUEsR0FBQSxDQUFBckIsVUFBQSxHQUFBLEtBQUFvTixTQUFBLENBQUEzNEIsQ0FBQSxDQUFBLGlCQUFBLEVBQUEzUCxDQUFBLENBQUFtSSxJQUFBLENBQUEsV0FBQSxDQUFBLE1BQUEsQ0FBQSxDQUFBLEtBQUFvMEIsR0FBQSxDQUFBOThCLElBQUEsQ0FBQSxTQUFBcWYsQ0FBQSxDQUFBamMsQ0FBQSxDQUFBOE0sQ0FBQSxDQUFBLENBQUErRixVQUFBLENBQUEsVUFBQSxDQUFBMVYsQ0FBQSxDQUFBMmxCLElBQUEsQ0FBQTdHLENBQUEsRUFBQWlYLENBQUEsQ0FBQWlRLFFBQUEsQ0FBQSxNQUFBLENBQUFsdEMsQ0FBQSxDQUFBK3NDLENBQUEsQ0FBQSxDQUFBSyxDQUFBLENBQUF2MkIsQ0FBQSxDQUFBOU0sQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsRUFBQThRLElBQUEsQ0FBQSxTQUFBbUwsQ0FBQSxDQUFBamMsQ0FBQSxDQUFBLENBQUE2UyxVQUFBLENBQUEsVUFBQSxDQUFBd3dCLENBQUEsQ0FBQXBuQixDQUFBLENBQUFqYyxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsRUFBQSxDQUFBLENBQUE0N0QsYUFBQSxDQUFBLHVCQUFBNTdELENBQUEsQ0FBQS9KLENBQUEsQ0FBQWk5QixDQUFBLENBQUEsQ0FBQSxHQUFBcG1CLENBQUFBLENBQUEsQ0FBQSxJQUFBLENBQUEsTUFBQSxDQUFBc3BCLEdBQUEsQ0FBQXAyQixDQUFBLENBQUFzRixJQUFBLENBQUEsTUFBQSxFQUFBdkwsT0FBQSxDQUFBLE1BQUEsQ0FBQSxFQUFBLENBQUEsQ0FBQTYrQixVQUFBLENBQUEsb0JBQUE1NEIsQ0FBQSxDQUFBNGlDLENBQUEsQ0FBQSxDQUFBLE1BQUE5MUIsQ0FBQUEsQ0FBQSxDQUFBcTJCLFFBQUEsQ0FBQSxZQUFBLENBQUFsdEMsQ0FBQSxDQUFBZ21CLENBQUEsQ0FBQWpqQixNQUFBLENBQUEsQ0FBQXU3QixLQUFBLENBQUF2MEIsQ0FBQSxDQUFBKzBCLFlBQUEsQ0FBQTZOLENBQUEsQ0FBQSxDQUFBMVAsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEybkMsZUFBQSxDQUFBLHlCQUFBNzZELENBQUEsQ0FBQSxDQUFBLEdBQUEvSixDQUFBQSxDQUFBLENBQUFnbUIsQ0FBQSxDQUFBamMsQ0FBQSxDQUFBLENBQUFzRixJQUFBLENBQUEsZUFBQSxDQUFBLENBQUEsTUFBQSxNQUFBMjlCLE9BQUEsQ0FBQWwvQixJQUFBLENBQUEsS0FBQXMzRCxpQkFBQSxDQUFBLElBQUFwbEUsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FGQSxDQUVBZ21CLENBQUEsQ0FBQWd3QixZQUFBLEdBQUEsQ0FBQSxDQUFBLEVBQUFod0IsQ0FBQSxDQUFBcW5CLE1BQUEsQ0FBQSxTQUFBLENBQUFybkIsQ0FBQSxDQUFBbW5CLEVBQUEsQ0FBQXMzQixJQUFBLENBQUEsQ0FBQUYsWUFBQSxDQUFBLHVCQUFBLENBQUEsS0FBQTUyQixXQUFBLENBQUF6ckMsU0FBQSxFQUFBLEtBQUFzdEMsU0FBQSxDQUFBLEtBQUFpMUIsSUFBQSxDQUFBLFFBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUZBLENBRUF6K0MsQ0FBQSxDQUFBbW5CLEVBQUEsQ0FBQXMzQixJQUZBLENBRUF6K0MsQ0FBQSxDQUFBcW5CLE1BQUEsQ0FBQSxZQUFBLENBQUEsQ0FBQXpzQyxPQUFBLENBQUEsUUFBQSxDQUFBb0MsT0FBQSxDQUFBLENBQUE2M0IsT0FBQSxDQUFBLENBQUEsYUFBQSxnQ0FBQSxDQUFBLENBQUFoaUIsT0FBQSxDQUFBLGtCQUFBLENBQUEsR0FBQTlPLENBQUFBLENBQUEsQ0FBQWljLENBQUEsQ0FBQSxJQUFBLENBQUEsQ0FBQTNXLElBQUEsQ0FBQSxPQUFBLEdBQUEsRUFBQSxDQUFBLE1BQUEyVyxDQUFBQSxDQUFBLENBQUEsS0FBQSxDQUFBLENBQUE1bEIsSUFBQSxDQUFBMkosQ0FBQSxFQUFBOGlCLElBQUEsRUFBQSxDQUFBLENBQUEsQ0FBQWxLLElBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQW82QixLQUFBLENBQUEseUJBQUEsQ0FBQXh0QixRQUFBLENBQUEsQ0FBQWtpQixFQUFBLENBQUEsYUFBQSxDQUFBTCxFQUFBLENBQUEsYUFBQSxDQUFBRixTQUFBLENBQUEsY0FBQSxDQUFBLENBQUF6dUIsSUFBQSxDQUFBLENBQUEsQ0FBQSxDQUFBbWpELEtBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQS9tQixLQUFBLENBQUEsSUFBQSxDQUFBOWEsSUFBQSxDQUFBLElBQUEsQ0FBQSxDQUFBOGhDLGVBQUEsQ0FBQSx5QkFBQTk3RCxDQUFBLENBQUEvSixDQUFBLENBQUEsQ0FBQSxHQUFBaTlCLENBQUFBLENBQUEsQ0FBQSxDQUFBbHpCLENBQUEsQ0FBQXNGLElBQUEsQ0FBQSxrQkFBQSxHQUFBLEVBQUEsRUFBQWhLLEtBQUEsQ0FBQSxLQUFBLENBQUEsQ0FBQTQzQixDQUFBLENBQUF2K0IsSUFBQSxDQUFBc0IsQ0FBQSxFQUFBK0osQ0FBQSxDQUFBeVYsSUFBQSxDQUFBLGVBQUEsQ0FBQXhmLENBQUEsRUFBQXFQLElBQUEsQ0FBQSxrQkFBQSxDQUFBMlcsQ0FBQSxDQUFBK2hCLElBQUEsQ0FBQTlLLENBQUEsQ0FBQTl4QixJQUFBLENBQUEsR0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQTI2RCxrQkFBQSxDQUFBLDRCQUFBLzdELENBQUEsQ0FBQSxDQUFBLEdBQUEvSixDQUFBQSxDQUFBLENBQUErSixDQUFBLENBQUF5VixJQUFBLENBQUEsZUFBQSxDQUFBLENBQUF5ZCxDQUFBLENBQUEsQ0FBQWx6QixDQUFBLENBQUFzRixJQUFBLENBQUEsa0JBQUEsR0FBQSxFQUFBLEVBQUFoSyxLQUFBLENBQUEsS0FBQSxDQUFBLENBQUF3UixDQUFBLENBQUFtUCxDQUFBLENBQUF0aEIsT0FBQSxDQUFBMUUsQ0FBQSxDQUFBaTlCLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxHQUFBcG1CLENBQUEsRUFBQW9tQixDQUFBLENBQUFuNkIsTUFBQSxDQUFBK1QsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBOU0sQ0FBQSxDQUFBb1csVUFBQSxDQUFBLGVBQUEsQ0FBQSxDQUFBOGMsQ0FBQSxDQUFBalgsQ0FBQSxDQUFBK2hCLElBQUEsQ0FBQTlLLENBQUEsQ0FBQTl4QixJQUFBLENBQUEsR0FBQSxDQUFBLENBQUEsQ0FBQTh4QixDQUFBLENBQUFsekIsQ0FBQSxDQUFBc0YsSUFBQSxDQUFBLGtCQUFBLENBQUE0dEIsQ0FBQSxDQUFBLENBQUFsekIsQ0FBQSxDQUFBOHZCLFVBQUEsQ0FBQSxrQkFBQSxDQUFBLENBQUEsQ0FBQSxDQUFBK1UsT0FBQSxDQUFBLGtCQUFBLENBQUEsS0FBQUgsR0FBQSxDQUFBLENBQUFzM0IsU0FBQSxDQUFBLE1BQUEsQ0FBQXJxQyxPQUFBLENBQUEsTUFBQSxDQUFBLEVBQUEsS0FBQXNxQyxRQUFBLENBQUEsRUFBQSxDQUFBLEtBQUF6dEQsT0FBQSxDQUFBLEVBQUEsQ0FBQSxLQUFBMG5DLFVBQUEsQ0FBQWo2QixDQUFBLENBQUEsT0FBQSxDQUFBLENBQUEzVyxJQUFBLENBQUEsQ0FBQTR0QyxJQUFBLENBQUEsS0FBQSxDQUFBLFlBQUEsV0FBQSxDQUFBLGdCQUFBLFdBQUEsQ0FBQSxFQUFBbnZCLFFBQUEsQ0FBQSxLQUFBbndCLFFBQUEsQ0FBQSxDQUFBLEVBQUE0a0IsSUFBQSxDQUFBLENBQUEsS0FBQWl0QixTQUFBLENBQUEsS0FBQXlRLFVBQUEsQ0FBQSxJQUFBLENBQUEsNkJBQUEsQ0FBQSxDQUFBLEtBQUFnbUIsY0FBQSxDQUFBamdELENBQUEsQ0FBQSxFQUFBLENBQUEsQ0FBQSxDQUFBLENBQUFrcEIsVUFBQSxDQUFBLG9CQUFBbmxDLENBQUEsQ0FBQS9KLENBQUEsQ0FBQSxDQUFBLEdBQUFpOUIsQ0FBQUEsQ0FBQSxDQUFBLElBQUEsQ0FBQSxLQUFBeVEsTUFBQSxDQUFBM2pDLENBQUEsQ0FBQS9KLENBQUEsRUFBQSxZQUFBK0osQ0FBQSxFQUFBaWMsQ0FBQSxDQUFBbGtCLElBQUEsQ0FBQSxLQUFBa2tFLFFBQUEsQ0FBQSxTQUFBaGdELENBQUEsQ0FBQWpjLENBQUEsQ0FBQSxDQUFBa3pCLENBQUEsQ0FBQWlwQyxjQUFBLENBQUFuOEQsQ0FBQSxDQUFBaWpDLE9BQUEsRUFBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUE2QixrQkFBQSxDQUFBLDRCQUFBN29CLENBQUEsQ0FBQSxDQUFBLEtBQUFBLENBQUEsQ0FBQSxVQUFBLENBQUEsU0FBQSxJQUFBLENBQUEsQ0FBQW1nRCxRQUFBLENBQUEsbUJBQUEsQ0FBQSxHQUFBcDhELENBQUFBLENBQUEsQ0FBQSxJQUFBLENBQUFpYyxDQUFBLENBQUFsa0IsSUFBQSxDQUFBLEtBQUFra0UsUUFBQSxDQUFBLFNBQUFobUUsQ0FBQSxDQUFBaTlCLENBQUEsQ0FBQSxDQUFBLEdBQUFwbUIsQ0FBQUEsQ0FBQSxDQUFBbVAsQ0FBQSxDQUFBbUMsS0FBQSxDQUFBLE1BQUEsQ0FBQSxDQUFBdFIsQ0FBQSxDQUFBeFQsTUFBQSxDQUFBd1QsQ0FBQSxDQUFBMlEsYUFBQSxDQUFBeVYsQ0FBQSxDQUFBK1AsT0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBampDLENBQUEsQ0FBQTgwQyxLQUFBLENBQUFob0MsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxFQUFBLEtBQUFvdkQsY0FBQSxDQUFBLEtBQUFBLGNBQUEsQ0FBQTd0RCxHQUFBLENBQUEsS0FBQTQwQixPQUFBLENBQUFsL0IsSUFBQSxDQUFBLEtBQUE5SyxPQUFBLENBQUErNUMsS0FBQSxFQUFBMWtDLE9BQUEsR0FBQXpLLE1BQUEsQ0FBQSxVQUFBLENBQUEsR0FBQTdELENBQUFBLENBQUEsQ0FBQWljLENBQUEsQ0FBQSxJQUFBLENBQUEsQ0FBQSxNQUFBamMsQ0FBQUEsQ0FBQSxDQUFBNE0sRUFBQSxDQUFBLFNBQUEsRUFBQTVNLENBQUEsQ0FBQXlWLElBQUEsQ0FBQSxrQkFBQSxDQUFBelYsQ0FBQSxDQUFBc0YsSUFBQSxDQUFBLE9BQUEsQ0FBQSxFQUFBd3FCLFVBQUEsQ0FBQSxPQUFBLENBQUEsQ0FBQSxJQUFBLEVBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQXVzQyxPQUFBLENBQUEsa0JBQUEsQ0FBQSxLQUFBSCxjQUFBLENBQUFua0UsSUFBQSxDQUFBLFVBQUEsQ0FBQSxHQUFBaUksQ0FBQUEsQ0FBQSxDQUFBaWMsQ0FBQSxDQUFBLElBQUEsQ0FBQSxDQUFBamMsQ0FBQSxDQUFBeVYsSUFBQSxDQUFBLGtCQUFBLEdBQUF6VixDQUFBLENBQUFzRixJQUFBLENBQUEsT0FBQSxDQUFBdEYsQ0FBQSxDQUFBeVYsSUFBQSxDQUFBLGtCQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsRUFBQSxLQUFBeW1ELGNBQUEsQ0FBQWpnRCxDQUFBLENBQUEsRUFBQSxDQUFBLENBQUEsQ0FBQSxDQUFBK2QsSUFBQSxDQUFBLGNBQUFoNkIsQ0FBQSxDQUFBLENBQUEsR0FBQS9KLENBQUFBLENBQUEsQ0FBQSxJQUFBLENBQUFpOUIsQ0FBQSxDQUFBalgsQ0FBQSxDQUFBamMsQ0FBQSxDQUFBQSxDQUFBLENBQUExRyxNQUFBLENBQUEsS0FBQTJwQyxPQUFBLENBQUEsQ0FBQS8wQixPQUFBLENBQUEsS0FBQWpWLE9BQUEsQ0FBQSs1QyxLQUFBLENBQUEsQ0FBQTlmLENBQUEsQ0FBQTU3QixNQUFBLEVBQUEsQ0FBQTQ3QixDQUFBLENBQUF6ZCxJQUFBLENBQUEsZUFBQSxDQUFBLEdBQUF5ZCxDQUFBLENBQUE1dEIsSUFBQSxDQUFBLE9BQUEsR0FBQTR0QixDQUFBLENBQUF6ZCxJQUFBLENBQUEsa0JBQUEsQ0FBQXlkLENBQUEsQ0FBQTV0QixJQUFBLENBQUEsT0FBQSxDQUFBLENBQUEsQ0FBQTR0QixDQUFBLENBQUF6ZCxJQUFBLENBQUEsaUJBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBelYsQ0FBQSxFQUFBLGNBQUFBLENBQUEsQ0FBQXZLLElBQUEsRUFBQXk5QixDQUFBLENBQUExa0IsT0FBQSxHQUFBelcsSUFBQSxDQUFBLFVBQUEsQ0FBQSxHQUFBaUksQ0FBQUEsQ0FBQSxDQUFBa3pCLENBQUEsQ0FBQWpYLENBQUEsQ0FBQSxJQUFBLENBQUEsQ0FBQWlYLENBQUEsQ0FBQXpkLElBQUEsQ0FBQSxpQkFBQSxJQUFBelYsQ0FBQSxDQUFBaWMsQ0FBQSxDQUFBbUMsS0FBQSxDQUFBLE1BQUEsQ0FBQSxDQUFBcGUsQ0FBQSxDQUFBMUcsTUFBQSxDQUFBMEcsQ0FBQSxDQUFBeWQsYUFBQSxDQUFBLElBQUEsQ0FBQXhuQixDQUFBLENBQUE2K0MsS0FBQSxDQUFBOTBDLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxFQUFBa3pCLENBQUEsQ0FBQTV0QixJQUFBLENBQUEsT0FBQSxJQUFBNHRCLENBQUEsQ0FBQXlkLFFBQUEsR0FBQTE2QyxDQUFBLENBQUF1WSxPQUFBLENBQUEsS0FBQTVOLEVBQUEsRUFBQSxDQUFBcWlDLE9BQUEsQ0FBQSxJQUFBLENBQUFxVyxLQUFBLENBQUFwbUIsQ0FBQSxDQUFBNXRCLElBQUEsQ0FBQSxPQUFBLENBQUEsQ0FBQSxDQUFBNHRCLENBQUEsQ0FBQTV0QixJQUFBLENBQUEsT0FBQSxDQUFBLEVBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsS0FBQWczRCxzQkFBQSxDQUFBdDhELENBQUEsQ0FBQWt6QixDQUFBLENBQUEsQ0FBQSxLQUFBaXBDLGNBQUEsQ0FBQWpwQyxDQUFBLENBQUFsekIsQ0FBQSxDQUFBLEVBQUEsQ0FBQSxDQUFBbThELGNBQUEsQ0FBQSx3QkFBQWxnRCxDQUFBLENBQUFqYyxDQUFBLENBQUEsQ0FBQSxHQUFBL0osQ0FBQUEsQ0FBQSxDQUFBaTlCLENBQUEsQ0FBQSxLQUFBajZCLE9BQUEsQ0FBQTZWLE9BQUEsQ0FBQWhDLENBQUEsQ0FBQSxJQUFBLENBQUE4MUIsQ0FBQSxDQUFBNWlDLENBQUEsQ0FBQUEsQ0FBQSxDQUFBdkssSUFBQSxDQUFBLElBQUEsQ0FBQSxNQUFBLFVBQUEsTUFBQXk5QixDQUFBQSxDQUFBLEVBQUFBLENBQUEsQ0FBQTU5QixRQUFBLEVBQUE0OUIsQ0FBQSxDQUFBOTdCLE1BQUEsQ0FBQSxLQUFBbzlDLEtBQUEsQ0FBQXgwQyxDQUFBLENBQUFpYyxDQUFBLENBQUFpWCxDQUFBLENBQUEsRUFBQWo5QixDQUFBLENBQUFpOUIsQ0FBQSxDQUFBMStCLElBQUEsQ0FBQXluQixDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsU0FBQWhtQixDQUFBLENBQUEsQ0FBQTZXLENBQUEsQ0FBQTg0QixNQUFBLENBQUEsVUFBQSxDQUFBM3BCLENBQUEsQ0FBQXhHLElBQUEsQ0FBQSxpQkFBQSxJQUFBelYsQ0FBQSxHQUFBQSxDQUFBLENBQUF2SyxJQUFBLENBQUFtdEMsQ0FBQSxDQUFBLENBQUEsS0FBQTRSLEtBQUEsQ0FBQXgwQyxDQUFBLENBQUFpYyxDQUFBLENBQUFobUIsQ0FBQSxDQUFBLEVBQUEsQ0FBQSxFQUFBLENBQUEsQ0FBQSxDQUFBQSxDQUFBLEVBQUEsS0FBQXUrQyxLQUFBLENBQUF4MEMsQ0FBQSxDQUFBaWMsQ0FBQSxDQUFBaG1CLENBQUEsQ0FBQSxDQUFBLElBQUEsRUFBQSxDQUFBLENBQUEsQ0FBQSxDQUFBdStDLEtBQUEsQ0FBQSxlQUFBeDBDLENBQUEsQ0FBQS9KLENBQUEsQ0FBQWk5QixDQUFBLENBQUEsQ0FBQSxRQUFBcG1CLENBQUFBLENBQUEsQ0FBQW1QLENBQUEsQ0FBQSxDQUFBaE8sQ0FBQSxDQUFBNjRCLEVBQUEsQ0FBQTdxQixDQUFBLENBQUE5ZSxDQUFBLENBQUF5UCxFQUFBLENBQUEsU0FBQSxHQUFBelAsQ0FBQSxDQUFBcW9CLFFBQUEsQ0FBQXZYLENBQUEsQ0FBQSxDQUFBLElBQUEyMEIsQ0FBQUEsQ0FBQSxDQUFBemxDLENBQUEsQ0FBQTZsQyxDQUFBLENBQUFLLENBQUEsQ0FBQXAxQixDQUFBLENBQUFnTyxDQUFBLENBQUFqakIsTUFBQSxDQUFBLEVBQUEsQ0FBQSxLQUFBQyxPQUFBLENBQUF1c0IsUUFBQSxDQUFBLENBQUEsR0FBQTBOLENBQUEsQ0FBQSxDQUFBLEdBQUEwUCxDQUFBLENBQUEsS0FBQTI1QixLQUFBLENBQUF0bUUsQ0FBQSxDQUFBLENBQUEsTUFBQTJzQyxDQUFBQSxDQUFBLENBQUE0NUIsT0FBQSxDQUFBejRELElBQUEsQ0FBQSxxQkFBQSxFQUFBK2UsSUFBQSxDQUFBb1EsQ0FBQSxFQUFBLElBQUEsRUFBQSxDQUFBajlCLENBQUEsQ0FBQTJXLEVBQUEsQ0FBQSxTQUFBLElBQUE1TSxDQUFBLEVBQUEsY0FBQUEsQ0FBQSxDQUFBdkssSUFBQSxDQUFBUSxDQUFBLENBQUFxUCxJQUFBLENBQUEsT0FBQSxDQUFBLEVBQUEsQ0FBQSxDQUFBclAsQ0FBQSxDQUFBNjVCLFVBQUEsQ0FBQSxPQUFBLENBQUEsRUFBQThTLENBQUEsQ0FBQSxLQUFBNjVCLFFBQUEsQ0FBQXhtRSxDQUFBLENBQUEsQ0FBQWtILENBQUEsQ0FBQXlsQyxDQUFBLENBQUE0NUIsT0FBQSxDQUFBLEtBQUFWLGVBQUEsQ0FBQTdsRSxDQUFBLENBQUFrSCxDQUFBLENBQUFtSSxJQUFBLENBQUEsSUFBQSxDQUFBLENBQUEsQ0FBQW5JLENBQUEsQ0FBQTRHLElBQUEsQ0FBQSxxQkFBQSxFQUFBK2UsSUFBQSxDQUFBb1EsQ0FBQSxDQUFBLENBQUEsS0FBQWdqQixVQUFBLENBQUF0b0MsUUFBQSxHQUFBZ0wsSUFBQSxFQUFBLENBQUF5cUIsQ0FBQSxDQUFBcG5CLENBQUEsQ0FBQSxPQUFBLENBQUEsQ0FBQTZHLElBQUEsQ0FBQTNsQixDQUFBLENBQUE0RyxJQUFBLENBQUEscUJBQUEsRUFBQStlLElBQUEsRUFBQSxDQUFBLENBQUF1Z0IsQ0FBQSxDQUFBdlQsVUFBQSxDQUFBLE1BQUEsRUFBQS9yQixJQUFBLENBQUEsUUFBQSxFQUFBK3JCLFVBQUEsQ0FBQSxNQUFBLENBQUEsQ0FBQXVULENBQUEsQ0FBQXZULFVBQUEsQ0FBQSxJQUFBLEVBQUEvckIsSUFBQSxDQUFBLE1BQUEsRUFBQStyQixVQUFBLENBQUEsSUFBQSxDQUFBLENBQUF1VCxDQUFBLENBQUF0ZixRQUFBLENBQUEsS0FBQW15QixVQUFBLENBQUEsQ0FBQSxLQUFBajlDLE9BQUEsQ0FBQTRpRSxLQUFBLEVBQUE3N0QsQ0FBQSxFQUFBLFNBQUFnQixJQUFBLENBQUFoQixDQUFBLENBQUF2SyxJQUFBLENBQUEsRUFBQSxLQUFBaXZDLEdBQUEsQ0FBQSxLQUFBOXdDLFFBQUEsQ0FBQSxDQUFBOG9FLFNBQUEsQ0FBQTV2RCxDQUFBLENBQUEsRUFBQUEsQ0FBQSxDQUFBOU0sQ0FBQSxDQUFBLEVBQUE3QyxDQUFBLENBQUFxb0IsUUFBQSxDQUFBdkosQ0FBQSxDQUFBampCLE1BQUEsQ0FBQSxDQUFBOHRDLEVBQUEsQ0FBQTd3QyxDQUFBLENBQUEsQ0FBQSxLQUFBZ0QsT0FBQSxDQUFBdXNCLFFBQUEsQ0FBQSxDQUFBLENBQUFyb0IsQ0FBQSxDQUFBeWIsSUFBQSxFQUFBLENBQUEsS0FBQTIxQyxLQUFBLENBQUFweEQsQ0FBQSxDQUFBLEtBQUFsRSxPQUFBLENBQUF5ZixJQUFBLENBQUEsQ0FBQSxLQUFBemYsT0FBQSxDQUFBNGlFLEtBQUEsRUFBQSxLQUFBNWlFLE9BQUEsQ0FBQXlmLElBQUEsRUFBQSxLQUFBemYsT0FBQSxDQUFBeWYsSUFBQSxDQUFBNFcsS0FBQSxHQUFBMFQsQ0FBQSxDQUFBLEtBQUEyNUIsV0FBQSxDQUFBQyxXQUFBLENBQUEsVUFBQSxDQUFBei9ELENBQUEsQ0FBQXlQLEVBQUEsQ0FBQSxVQUFBLElBQUFFLENBQUEsQ0FBQW1CLENBQUEsQ0FBQTY0QixFQUFBLENBQUEsQ0FBQSsxQixhQUFBLENBQUE3NUIsQ0FBQSxDQUFBLEVBQUEsQ0FBQSxDQUFBL21CLENBQUEsQ0FBQTZPLEVBQUEsQ0FBQWUsUUFBQSxDQUFBLENBQUEsQ0FBQSxLQUFBc1gsUUFBQSxDQUFBLE1BQUEsQ0FBQW5qQyxDQUFBLENBQUEsQ0FBQXc4RCxPQUFBLENBQUFyL0QsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQW0vRCxzQkFBQSxDQUFBLGdDQUFBdDhELENBQUEsQ0FBQS9KLENBQUEsQ0FBQSxDQUFBLEdBQUFpOUIsQ0FBQUEsQ0FBQSxDQUFBLENBQUFrbUIsS0FBQSxDQUFBLGVBQUFwNUMsQ0FBQSxDQUFBLENBQUEsR0FBQUEsQ0FBQSxDQUFBdWdCLE9BQUEsR0FBQXRFLENBQUEsQ0FBQW1uQixFQUFBLENBQUE3aUIsT0FBQSxDQUFBdXZCLE1BQUEsQ0FBQSxDQUFBLEdBQUE1YyxDQUFBQSxDQUFBLENBQUFqWCxDQUFBLENBQUFtQyxLQUFBLENBQUFwZSxDQUFBLENBQUEsQ0FBQWt6QixDQUFBLENBQUF6VixhQUFBLENBQUF4bkIsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLEtBQUE2K0MsS0FBQSxDQUFBNWhCLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUFqOUIsQ0FBQSxDQUFBLENBQUEsQ0FBQSxHQUFBLEtBQUFndEMsT0FBQSxDQUFBLENBQUEsQ0FBQSxHQUFBL1AsQ0FBQSxDQUFBbmpCLE1BQUEsQ0FBQSxVQUFBLENBQUEsS0FBQStzRCxjQUFBLENBQUEsS0FBQVAsS0FBQSxDQUFBdG1FLENBQUEsRUFBQXVtRSxPQUFBLEVBQUEsQ0FBQSxFQUFBeDhELENBQUEsRUFBQSxjQUFBQSxDQUFBLENBQUF2SyxJQUFBLEdBQUF5OUIsQ0FBQSxDQUFBMVIsVUFBQSxDQUFBLE9BQUEsQ0FBQSxDQUFBeGhCLENBQUEsRUFBQSxZQUFBQSxDQUFBLENBQUF2SyxJQUFBLEdBQUF5OUIsQ0FBQSxDQUFBNlMsUUFBQSxDQUFBLE9BQUEsQ0FBQSxDQUFBLEtBQUFyQixHQUFBLENBQUEsQ0FBQSxDQUFBLENBQUF6dUMsQ0FBQSxDQUFBaTlCLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQTRoQixLQUFBLENBQUEsZUFBQTkwQyxDQUFBLENBQUEsQ0FBQSxHQUFBL0osQ0FBQUEsQ0FBQSxDQUFBaTlCLENBQUEsQ0FBQSxJQUFBLENBQUFwbUIsQ0FBQSxDQUFBbVAsQ0FBQSxDQUFBamMsQ0FBQSxDQUFBQSxDQUFBLENBQUF5ZCxhQUFBLENBQUEsS0FBQXdsQixPQUFBLENBQUEsQ0FBQUwsQ0FBQSxDQUFBLEtBQUEyNUIsS0FBQSxDQUFBenZELENBQUEsQ0FBQSxDQUFBLE1BQUE4MUIsQ0FBQUEsQ0FBQSxFQUFBM3NDLENBQUEsQ0FBQTJzQyxDQUFBLENBQUE0NUIsT0FBQSxDQUFBNTVCLENBQUEsQ0FBQW02QixPQUFBLEdBQUFGLGFBQUEsQ0FBQSxLQUFBRixXQUFBLENBQUEsQ0FBQTd2RCxDQUFBLENBQUEySSxJQUFBLENBQUEsa0JBQUEsR0FBQSxDQUFBM0ksQ0FBQSxDQUFBeEgsSUFBQSxDQUFBLE9BQUEsQ0FBQSxFQUFBd0gsQ0FBQSxDQUFBeEgsSUFBQSxDQUFBLE9BQUEsQ0FBQXdILENBQUEsQ0FBQTJJLElBQUEsQ0FBQSxrQkFBQSxDQUFBLENBQUEsQ0FBQSxLQUFBc21ELGtCQUFBLENBQUFqdkQsQ0FBQSxDQUFBLENBQUE4MUIsQ0FBQSxDQUFBbzZCLE1BQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQS9tRSxDQUFBLENBQUEwZ0IsSUFBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsS0FBQW0zQyxLQUFBLENBQUE3M0QsQ0FBQSxDQUFBLEtBQUFnRCxPQUFBLENBQUEyZixJQUFBLENBQUEsVUFBQSxDQUFBc2EsQ0FBQSxDQUFBNHBDLGNBQUEsQ0FBQTdnRCxDQUFBLENBQUEsSUFBQSxDQUFBLEVBQUEsQ0FBQSxDQUFBLENBQUFuUCxDQUFBLENBQUFzSixVQUFBLENBQUEsaUJBQUEsQ0FBQSxDQUFBLEtBQUF1dkIsSUFBQSxDQUFBNzRCLENBQUEsQ0FBQSwyQkFBQSxDQUFBLENBQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsR0FBQSxLQUFBbTJCLE9BQUEsQ0FBQSxDQUFBLENBQUEsRUFBQSxLQUFBMEMsSUFBQSxDQUFBNzRCLENBQUEsQ0FBQSxRQUFBLENBQUEsQ0FBQSxLQUFBNjRCLElBQUEsQ0FBQSxLQUFBL3hDLFFBQUEsQ0FBQSxXQUFBLENBQUEsQ0FBQW9NLENBQUEsRUFBQSxlQUFBQSxDQUFBLENBQUF2SyxJQUFBLEVBQUF3bUIsQ0FBQSxDQUFBbGtCLElBQUEsQ0FBQSxLQUFBeVcsT0FBQSxDQUFBLFNBQUF4TyxDQUFBLENBQUEvSixDQUFBLENBQUEsQ0FBQWdtQixDQUFBLENBQUFobUIsQ0FBQSxDQUFBZ3RDLE9BQUEsQ0FBQSxDQUFBMzlCLElBQUEsQ0FBQSxPQUFBLENBQUFyUCxDQUFBLENBQUFxakQsS0FBQSxFQUFBLE1BQUFwbUIsQ0FBQUEsQ0FBQSxDQUFBMWtCLE9BQUEsQ0FBQXhPLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBNGlDLENBQUEsQ0FBQW02QixPQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsS0FBQTU1QixRQUFBLENBQUEsT0FBQSxDQUFBbmpDLENBQUEsQ0FBQSxDQUFBdzhELE9BQUEsQ0FBQXZtRSxDQUFBLENBQUEsQ0FBQSxDQUFBMnNDLENBQUEsQ0FBQW82QixNQUFBLEdBQUFwNkIsQ0FBQSxDQUFBbTZCLE9BQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsSUFBQSxFQUFBLEdBQUFqd0QsQ0FBQSxDQUFBc0osVUFBQSxDQUFBLGlCQUFBLEVBQUEsSUFBQSxFQUFBLENBQUEsQ0FBQSxDQUFBLENBQUFxbUQsUUFBQSxDQUFBLGtCQUFBejhELENBQUEsQ0FBQSxDQUFBLEdBQUEvSixDQUFBQSxDQUFBLENBQUFnbUIsQ0FBQSxDQUFBLE9BQUEsQ0FBQSxDQUFBM1csSUFBQSxDQUFBLE1BQUEsQ0FBQSxTQUFBLENBQUEsQ0FBQTR0QixDQUFBLENBQUFqWCxDQUFBLENBQUEsT0FBQSxDQUFBLENBQUE4SCxRQUFBLENBQUE5dEIsQ0FBQSxDQUFBLENBQUE2VyxDQUFBLENBQUE3VyxDQUFBLENBQUEwNkMsUUFBQSxHQUFBcnJDLElBQUEsQ0FBQSxJQUFBLENBQUEsQ0FBQSxNQUFBLE1BQUFtZ0MsU0FBQSxDQUFBdlMsQ0FBQSxDQUFBLG9CQUFBLEVBQUEsS0FBQXVTLFNBQUEsQ0FBQXh2QyxDQUFBLENBQUEsWUFBQSxDQUFBLDZCQUFBLENBQUEsQ0FBQUEsQ0FBQSxDQUFBOHRCLFFBQUEsQ0FBQSxLQUFBZ3lCLFNBQUEsQ0FBQS8xQyxDQUFBLENBQUEsQ0FBQSxDQUFBLEtBQUFpOEQsUUFBQSxDQUFBbnZELENBQUEsRUFBQSxDQUFBbTJCLE9BQUEsQ0FBQWpqQyxDQUFBLENBQUF3OEQsT0FBQSxDQUFBdm1FLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQXNtRSxLQUFBLENBQUEsZUFBQXRnRCxDQUFBLENBQUEsQ0FBQSxHQUFBamMsQ0FBQUEsQ0FBQSxDQUFBaWMsQ0FBQSxDQUFBeEcsSUFBQSxDQUFBLGVBQUEsQ0FBQSxDQUFBLE1BQUF6VixDQUFBQSxDQUFBLENBQUEsS0FBQWk4RCxRQUFBLENBQUFqOEQsQ0FBQSxDQUFBLENBQUEsSUFBQSxDQUFBLENBQUEsQ0FBQTg4RCxjQUFBLENBQUEsd0JBQUE3Z0QsQ0FBQSxDQUFBLENBQUFBLENBQUEsQ0FBQWxNLE1BQUEsR0FBQSxNQUFBLE1BQUFrc0QsUUFBQSxDQUFBaGdELENBQUEsQ0FBQTNXLElBQUEsQ0FBQSxJQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQXl3QyxTQUFBLENBQUEsbUJBQUE5NUIsQ0FBQSxDQUFBLENBQUEsR0FBQWpjLENBQUFBLENBQUEsQ0FBQWljLENBQUEsQ0FBQS9OLE9BQUEsQ0FBQSxtQkFBQSxDQUFBLENBQUEsTUFBQWxPLENBQUFBLENBQUEsQ0FBQTFJLE1BQUEsR0FBQTBJLENBQUEsQ0FBQSxLQUFBcE0sUUFBQSxDQUFBLENBQUEsRUFBQTRrQixJQUFBLEVBQUF4WSxDQUFBLENBQUEsQ0FBQSxDQUFBZ2xDLFFBQUEsQ0FBQSxtQkFBQSxDQUFBLEdBQUFobEMsQ0FBQUEsQ0FBQSxDQUFBLElBQUEsQ0FBQWljLENBQUEsQ0FBQWxrQixJQUFBLENBQUEsS0FBQWtrRSxRQUFBLENBQUEsU0FBQWhtRSxDQUFBLENBQUFpOUIsQ0FBQSxDQUFBLENBQUEsR0FBQXBtQixDQUFBQSxDQUFBLENBQUFtUCxDQUFBLENBQUFtQyxLQUFBLENBQUEsTUFBQSxDQUFBLENBQUF3a0IsQ0FBQSxDQUFBMVAsQ0FBQSxDQUFBK1AsT0FBQSxDQUFBbjJCLENBQUEsQ0FBQXhULE1BQUEsQ0FBQXdULENBQUEsQ0FBQTJRLGFBQUEsQ0FBQW1sQixDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUE1aUMsQ0FBQSxDQUFBODBDLEtBQUEsQ0FBQWhvQyxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQW1QLENBQUEsQ0FBQSxJQUFBaG1CLENBQUEsQ0FBQSxDQUFBOFosTUFBQSxFQUFBLENBQUE2eUIsQ0FBQSxDQUFBbnRCLElBQUEsQ0FBQSxrQkFBQSxJQUFBbXRCLENBQUEsQ0FBQXQ5QixJQUFBLENBQUEsT0FBQSxHQUFBczlCLENBQUEsQ0FBQXQ5QixJQUFBLENBQUEsT0FBQSxDQUFBczlCLENBQUEsQ0FBQW50QixJQUFBLENBQUEsa0JBQUEsQ0FBQSxDQUFBLENBQUFtdEIsQ0FBQSxDQUFBeHNCLFVBQUEsQ0FBQSxrQkFBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLEVBQUEsS0FBQTgvQixVQUFBLENBQUFubUMsTUFBQSxFQUFBLENBQUEsQ0FBQSxDQUFBLENBRkEsQ0FFQWtNLENBQUEsQ0FBQWd3QixZQUFBLEdBQUEsQ0FBQSxDQUFBLEVBQUFod0IsQ0FBQSxDQUFBcW5CLE1BQUEsQ0FBQSxZQUFBLENBQUFybkIsQ0FBQSxDQUFBbW5CLEVBQUEsQ0FBQW81QixPQUFBLENBQUEsQ0FBQXZqRSxPQUFBLENBQUEsQ0FBQWdrRSxZQUFBLENBQUEsSUFBQSxDQUFBLENBQUFSLFFBQUEsQ0FBQSxtQkFBQSxDQUFBLEdBQUF4Z0QsQ0FBQUEsQ0FBQSxDQUFBLEtBQUEybkIsV0FBQSxDQUFBenJDLFNBQUEsQ0FBQSxDQUFBLE1BQUEsTUFBQWMsT0FBQSxDQUFBZ2tFLFlBQUEsRUFBQWhoRCxDQUFBLENBQUF1Z0QsT0FBQSxDQUFBM3JDLFFBQUEsQ0FBQSxLQUFBNTNCLE9BQUEsQ0FBQWdrRSxZQUFBLENBQUEsQ0FBQWhoRCxDQUFBLENBQUEsQ0FBQSxDQUFBLENBRkEsQ0FFQUEsQ0FBQSxDQUFBbW5CLEVBQUEsQ0FBQW81QixPQUZBLENBRUEsQ0FQQSxFQ0xBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEcsQ0FFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsRyxDQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEcsQ0FFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBR0EsVUFBQS9vRSxPQUFBLENBQUEsQ0FDQSxHQUFBLE1BQUF3cUMsQ0FBQUEsTUFBQSxHQUFBLFVBQUEs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bUJBQUEsR0FDQUUsVUFBQSxDQUFBLE1BQUEsQ0FBQSxDQUNBRCxVQUFBLENBQUEsTUFBQSxDQUFBLENBQ0EsQ0FKQSxDQUlBLEdBSkEsQ0FBQSxDQUtBLENBQ0EsQ0FDQSxDQUNBLENBalBBLENBQUEsQ0FtUEEsQ0F0UEEsQ0F3UEF0M0MsQ0FBQSxDQUFBLFVBQUEsQ0FBQSxDQUFBN2lCLEVBQUEsQ0FBQSxXQUFBLENBQUEsU0FBQXhiLENBQUEsUUFBQUEsQ0FBQUEsQ0FBQSxDQUFBNGQsY0FBQSxFQUFBLEVBQUEsRUFFQXlnQixDQUFBLENBQUF0cUMsTUFBQSxDQUFBLENBQUF5bkIsRUFBQSxDQUFBLE9BQUEsQ0FBQSxTQUFBeGIsQ0FBQSxDQUFBLENBQ0EsR0FBQTQwRSxDQUFBQSxNQUFBLENBQUE1MEUsQ0FBQSxDQUFBc2UsYUFBQSxDQUFBczJELE1BQUEsQ0FFQSxHQUFBbEIsa0JBQUEsQ0FBQW5pRCxRQUFBLENBQUEsb0JBQUEsQ0FBQSxDQUFBLENBQ0EsR0FBQXlqRCxDQUFBQSxNQUFBLENBQUFDLGFBQUEsRUFBQSxDQUVBLEdBQUFMLE1BQUEsQ0FBQSxDQUFBLEVBQUFNLGNBQUEsR0FBQSxDQUFBLENBQUEsQ0FDQUYsTUFBQSxDQUFBbDFFLElBQUEsR0FDQSxDQUVBLEdBQUE4MEUsTUFBQSxDQUFBLENBQUEsRUFBQU0sY0FBQSxHQUFBLENBQUEsQ0FBQSxDQUNBRixNQUFBLENBQUFsbkUsSUFBQSxHQUNBLENBQ0EsQ0FDQSxDQWRBIiwiZmlsZSI6Im1haW4ubWluLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyohXG4gKiBqUXVlcnkgSmF2YVNjcmlwdCBMaWJyYXJ5IHYzLjUuMVxuICogaHR0cHM6Ly9qcXVlcnkuY29tL1xuICpcbiAqIEluY2x1ZGVzIFNpenpsZS5qc1xuICogaHR0cHM6Ly9zaXp6bGVqcy5jb20vXG4gKlxuICogQ29weXJpZ2h0IEpTIEZvdW5kYXRpb24gYW5kIG90aGVyIGNvbnRyaWJ1dG9yc1xuICogUmVsZWFzZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlXG4gKiBodHRwczovL2pxdWVyeS5vcmcvbGljZW5zZVxuICpcbiAqIERhdGU6IDIwMjAtMDUtMDRUMjI6NDlaXG4gKi9cbiggZnVuY3Rpb24oIGdsb2JhbCwgZmFjdG9yeSApIHtcblxuXHRcInVzZSBzdHJpY3RcIjtcblxuXHRpZiAoIHR5cGVvZiBtb2R1bGUgPT09IFwib2JqZWN0XCIgJiYgdHlwZW9mIG1vZHVsZS5leHBvcnRzID09PSBcIm9iamVjdFwiICkge1xuXG5cdFx0Ly8gRm9yIENvbW1vbkpTIGFuZCBDb21tb25KUy1saWtlIGVudmlyb25tZW50cyB3aGVyZSBhIHByb3BlciBgd2luZG93YFxuXHRcdC8vIGlzIHByZXNlbnQsIGV4ZWN1dGUgdGhlIGZhY3RvcnkgYW5kIGdldCBqUXVlcnkuXG5cdFx0Ly8gRm9yIGVudmlyb25tZW50cyB0aGF0IGRvIG5vdCBoYXZlIGEgYHdpbmRvd2Agd2l0aCBhIGBkb2N1bWVudGBcblx0XHQvLyAoc3VjaCBhcyBOb2RlLmpzKSwgZXhwb3NlIGEgZmFjdG9yeSBhcyBtb2R1bGUuZXhwb3J0cy5cblx0XHQvLyBUaGlzIGFjY2VudHVhdGVzIHRoZSBuZWVkIGZvciB0aGUgY3JlYXRpb24gb2YgYSByZWFsIGB3aW5kb3dgLlxuXHRcdC8vIGUuZy4gdmFyIGpRdWVyeSA9IHJlcXVpcmUoXCJqcXVlcnlcIikod2luZG93KTtcblx0XHQvLyBTZWUgdGlja2V0ICMxNDU0OSBmb3IgbW9yZSBpbmZvLlxuXHRcdG1vZHVsZS5leHBvcnRzID0gZ2xvYmFsLmRvY3VtZW50ID9cblx0XHRcdGZhY3RvcnkoIGdsb2JhbCwgdHJ1ZSApIDpcblx0XHRcdGZ1bmN0aW9uKCB3ICkge1xuXHRcdFx0XHRpZiAoICF3LmRvY3VtZW50ICkge1xuXHRcdFx0XHRcdHRocm93IG5ldyBFcnJvciggXCJqUXVlcnkgcmVxdWlyZXMgYSB3aW5kb3cgd2l0aCBhIGRvY3VtZW50XCIgKTtcblx0XHRcdFx0fVxuXHRcdFx0XHRyZXR1cm4gZmFjdG9yeSggdyApO1xuXHRcdFx0fTtcblx0fSBlbHNlIHtcblx0XHRmYWN0b3J5KCBnbG9iYWwgKTtcblx0fVxuXG4vLyBQYXNzIHRoaXMgaWYgd2luZG93IGlzIG5vdCBkZWZpbmVkIHlldFxufSApKCB0eXBlb2Ygd2luZG93ICE9PSBcInVuZGVmaW5lZFwiID8gd2luZG93IDogdGhpcywgZnVuY3Rpb24oIHdpbmRvdywgbm9HbG9iYWwgKSB7XG5cbi8vIEVkZ2UgPD0gMTIgLSAxMyssIEZpcmVmb3ggPD0xOCAtIDQ1KywgSUUgMTAgLSAxMSwgU2FmYXJpIDUuMSAtIDkrLCBpT1MgNiAtIDkuMVxuLy8gdGhyb3cgZXhjZXB0aW9ucyB3aGVuIG5vbi1zdHJpY3QgY29kZSAoZS5nLiwgQVNQLk5FVCA0LjUpIGFjY2Vzc2VzIHN0cmljdCBtb2RlXG4vLyBhcmd1bWVudHMuY2FsbGVlLmNhbGxlciAodHJhYy0xMzMzNSkuIEJ1dCBhcyBvZiBqUXVlcnkgMy4wICgyMDE2KSwgc3RyaWN0IG1vZGUgc2hvdWxkIGJlIGNvbW1vblxuLy8gZW5vdWdoIHRoYXQgYWxsIHN1Y2ggYXR0ZW1wdHMgYXJlIGd1YXJkZWQgaW4gYSB0cnkgYmxvY2suXG5cInVzZSBzdHJpY3RcIjtcblxudmFyIGFyciA9IFtdO1xuXG52YXIgZ2V0UHJvdG8gPSBPYmplY3QuZ2V0UHJvdG90eXBlT2Y7XG5cbnZhciBzbGljZSA9IGFyci5zbGljZTtcblxudmFyIGZsYXQgPSBhcnIuZmxhdCA/IGZ1bmN0aW9uKCBhcnJheSApIHtcblx0cmV0dXJuIGFyci5mbGF0LmNhbGwoIGFycmF5ICk7XG59IDogZnVuY3Rpb24oIGFycmF5ICkge1xuXHRyZXR1cm4gYXJyLmNvbmNhdC5hcHBseSggW10sIGFycmF5ICk7XG59O1xuXG5cbnZhciBwdXNoID0gYXJyLnB1c2g7XG5cbnZhciBpbmRleE9mID0gYXJyLmluZGV4T2Y7XG5cbnZhciBjbGFzczJ0eXBlID0ge307XG5cbnZhciB0b1N0cmluZyA9IGNsYXNzMnR5cGUudG9TdHJpbmc7XG5cbnZhciBoYXNPd24gPSBjbGFzczJ0eXBlLmhhc093blByb3BlcnR5O1xuXG52YXIgZm5Ub1N0cmluZyA9IGhhc093bi50b1N0cmluZztcblxudmFyIE9iamVjdEZ1bmN0aW9uU3RyaW5nID0gZm5Ub1N0cmluZy5jYWxsKCBPYmplY3QgKTtcblxudmFyIHN1cHBvcnQgPSB7fTtcblxudmFyIGlzRnVuY3Rpb24gPSBmdW5jdGlvbiBpc0Z1bmN0aW9uKCBvYmogKSB7XG5cbiAgICAgIC8vIFN1cHBvcnQ6IENocm9tZSA8PTU3LCBGaXJlZm94IDw9NTJcbiAgICAgIC8vIEluIHNvbWUgYnJvd3NlcnMsIHR5cGVvZiByZXR1cm5zIFwiZnVuY3Rpb25cIiBmb3IgSFRNTCA8b2JqZWN0PiBlbGVtZW50c1xuICAgICAgLy8gKGkuZS4sIGB0eXBlb2YgZG9jdW1lbnQuY3JlYXRlRWxlbWVudCggXCJvYmplY3RcIiApID09PSBcImZ1bmN0aW9uXCJgKS5cbiAgICAgIC8vIFdlIGRvbid0IHdhbnQgdG8gY2xhc3NpZnkgKmFueSogRE9NIG5vZGUgYXMgYSBmdW5jdGlvbi5cbiAgICAgIHJldHVybiB0eXBlb2Ygb2JqID09PSBcImZ1bmN0aW9uXCIgJiYgdHlwZW9mIG9iai5ub2RlVHlwZSAhPT0gXCJudW1iZXJcIjtcbiAgfTtcblxuXG52YXIgaXNXaW5kb3cgPSBmdW5jdGlvbiBpc1dpbmRvdyggb2JqICkge1xuXHRcdHJldHVybiBvYmogIT0gbnVsbCAmJiBvYmogPT09IG9iai53aW5kb3c7XG5cdH07XG5cblxudmFyIGRvY3VtZW50ID0gd2luZG93LmRvY3VtZW50O1xuXG5cblxuXHR2YXIgcHJlc2VydmVkU2NyaXB0QXR0cmlidXRlcyA9IHtcblx0XHR0eXBlOiB0cnVlLFxuXHRcdHNyYzogdHJ1ZSxcblx0XHRub25jZTogdHJ1ZSxcblx0XHRub01vZHVsZTogdHJ1ZVxuXHR9O1xuXG5cdGZ1bmN0aW9uIERPTUV2YWwoIGNvZGUsIG5vZGUsIGRvYyApIHtcblx0XHRkb2MgPSBkb2MgfHwgZG9jdW1lbnQ7XG5cblx0XHR2YXIgaSwgdmFsLFxuXHRcdFx0c2NyaXB0ID0gZG9jLmNyZWF0ZUVsZW1lbnQoIFwic2NyaXB0XCIgKTtcblxuXHRcdHNjcmlwdC50ZXh0ID0gY29kZTtcblx0XHRpZiAoIG5vZGUgKSB7XG5cdFx0XHRmb3IgKCBpIGluIHByZXNlcnZlZFNjcmlwdEF0dHJpYnV0ZXMgKSB7XG5cblx0XHRcdFx0Ly8gU3VwcG9ydDogRmlyZWZveCA2NCssIEVkZ2UgMTgrXG5cdFx0XHRcdC8vIFNvbWUgYnJvd3NlcnMgZG9uJ3Qgc3VwcG9ydCB0aGUgXCJub25jZVwiIHByb3BlcnR5IG9uIHNjcmlwdHMuXG5cdFx0XHRcdC8vIE9uIHRoZSBvdGhlciBoYW5kLCBqdXN0IHVzaW5nIGBnZXRBdHRyaWJ1dGVgIGlzIG5vdCBlbm91Z2ggYXNcblx0XHRcdFx0Ly8gdGhlIGBub25jZWAgYXR0cmlidXRlIGlzIHJlc2V0IHRvIGFuIGVtcHR5IHN0cmluZyB3aGVuZXZlciBpdFxuXHRcdFx0XHQvLyBiZWNvbWVzIGJyb3dzaW5nLWNvbnRleHQgY29ubmVjdGVkLlxuXHRcdFx0XHQvLyBTZWUgaHR0cHM6Ly9naXRodWIuY29tL3doYXR3Zy9odG1sL2lzc3Vlcy8yMzY5XG5cdFx0XHRcdC8vIFNlZSBodHRwczovL2h0bWwuc3BlYy53aGF0d2cub3JnLyNub25jZS1hdHRyaWJ1dGVzXG5cdFx0XHRcdC8vIFRoZSBgbm9kZS5nZXRBdHRyaWJ1dGVgIGNoZWNrIHdhcyBhZGRlZCBmb3IgdGhlIHNha2Ugb2Zcblx0XHRcdFx0Ly8gYGpRdWVyeS5nbG9iYWxFdmFsYCBzbyB0aGF0IGl0IGNhbiBmYWtlIGEgbm9uY2UtY29udGFpbmluZyBub2RlXG5cdFx0XHRcdC8vIHZpYSBhbiBvYmplY3QuXG5cdFx0XHRcdHZhbCA9IG5vZGVbIGkgXSB8fCBub2RlLmdldEF0dHJpYnV0ZSAmJiBub2RlLmdldEF0dHJpYnV0ZSggaSApO1xuXHRcdFx0XHRpZiAoIHZhbCApIHtcblx0XHRcdFx0XHRzY3JpcHQuc2V0QXR0cmlidXRlKCBpLCB2YWwgKTtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH1cblx0XHRkb2MuaGVhZC5hcHBlbmRDaGlsZCggc2NyaXB0ICkucGFyZW50Tm9kZS5yZW1vdmVDaGlsZCggc2NyaXB0ICk7XG5cdH1cblxuXG5mdW5jdGlvbiB0b1R5cGUoIG9iaiApIHtcblx0aWYgKCBvYmogPT0gbnVsbCApIHtcblx0XHRyZXR1cm4gb2JqICsgXCJcIjtcblx0fVxuXG5cdC8vIFN1cHBvcnQ6IEFuZHJvaWQgPD0yLjMgb25seSAoZnVuY3Rpb25pc2ggUmVnRXhwKVxuXHRyZXR1cm4gdHlwZW9mIG9iaiA9PT0gXCJvYmplY3RcIiB8fCB0eXBlb2Ygb2JqID09PSBcImZ1bmN0aW9uXCIgP1xuXHRcdGNsYXNzMnR5cGVbIHRvU3RyaW5nLmNhbGwoIG9iaiApIF0gfHwgXCJvYmplY3RcIiA6XG5cdFx0dHlwZW9mIG9iajtcbn1cbi8qIGdsb2JhbCBTeW1ib2wgKi9cbi8vIERlZmluaW5nIHRoaXMgZ2xvYmFsIGluIC5lc2xpbnRyYy5qc29uIHdvdWxkIGNyZWF0ZSBhIGRhbmdlciBvZiB1c2luZyB0aGUgZ2xvYmFsXG4vLyB1bmd1YXJkZWQgaW4gYW5vdGhlciBwbGFjZSwgaXQgc2VlbXMgc2FmZXIgdG8gZGVmaW5lIGdsb2JhbCBvbmx5IGZvciB0aGlzIG1vZHVsZVxuXG5cblxudmFyXG5cdHZlcnNpb24gPSBcIjMuNS4xXCIsXG5cblx0Ly8gRGVmaW5lIGEgbG9jYWwgY29weSBvZiBqUXVlcnlcblx0alF1ZXJ5ID0gZnVuY3Rpb24oIHNlbGVjdG9yLCBjb250ZXh0ICkge1xuXG5cdFx0Ly8gVGhlIGpRdWVyeSBvYmplY3QgaXMgYWN0dWFsbHkganVzdCB0aGUgaW5pdCBjb25zdHJ1Y3RvciAnZW5oYW5jZWQnXG5cdFx0Ly8gTmVlZCBpbml0IGlmIGpRdWVyeSBpcyBjYWxsZWQgKGp1c3QgYWxsb3cgZXJyb3IgdG8gYmUgdGhyb3duIGlmIG5vdCBpbmNsdWRlZClcblx0XHRyZXR1cm4gbmV3IGpRdWVyeS5mbi5pbml0KCBzZWxlY3RvciwgY29udGV4dCApO1xuXHR9O1xuXG5qUXVlcnkuZm4gPSBqUXVlcnkucHJvdG90eXBlID0ge1xuXG5cdC8vIFRoZSBjdXJyZW50IHZlcnNpb24gb2YgalF1ZXJ5IGJlaW5nIHVzZWRcblx0anF1ZXJ5OiB2ZXJzaW9uLFxuXG5cdGNvbnN0cnVjdG9yOiBqUXVlcnksXG5cblx0Ly8gVGhlIGRlZmF1bHQgbGVuZ3RoIG9mIGEgalF1ZXJ5IG9iamVjdCBpcyAwXG5cdGxlbmd0aDogMCxcblxuXHR0b0FycmF5OiBmdW5jdGlvbigpIHtcblx0XHRyZXR1cm4gc2xpY2UuY2FsbCggdGhpcyApO1xuXHR9LFxuXG5cdC8vIEdldCB0aGUgTnRoIGVsZW1lbnQgaW4gdGhlIG1hdGNoZWQgZWxlbWVudCBzZXQgT1Jcblx0Ly8gR2V0IHRoZSB3aG9sZSBtYXRjaGVkIGVsZW1lbnQgc2V0IGFzIGEgY2xlYW4gYXJyYXlcblx0Z2V0OiBmdW5jdGlvbiggbnVtICkge1xuXG5cdFx0Ly8gUmV0dXJuIGFsbCB0aGUgZWxlbWVudHMgaW4gYSBjbGVhbiBhcnJheVxuXHRcdGlmICggbnVtID09IG51bGwgKSB7XG5cdFx0XHRyZXR1cm4gc2xpY2UuY2FsbCggdGhpcyApO1xuXHRcdH1cblxuXHRcdC8vIFJldHVybiBqdXN0IHRoZSBvbmUgZWxlbWVudCBmcm9tIHRoZSBzZXRcblx0XHRyZXR1cm4gbnVtIDwgMCA/IHRoaXNbIG51bSArIHRoaXMubGVuZ3RoIF0gOiB0aGlzWyBudW0gXTtcblx0fSxcblxuXHQvLyBUYWtlIGFuIGFycmF5IG9mIGVsZW1lbnRzIGFuZCBwdXNoIGl0IG9udG8gdGhlIHN0YWNrXG5cdC8vIChyZXR1cm5pbmcgdGhlIG5ldyBtYXRjaGVkIGVsZW1lbnQgc2V0KVxuXHRwdXNoU3RhY2s6IGZ1bmN0aW9uKCBlbGVtcyApIHtcblxuXHRcdC8vIEJ1aWxkIGEgbmV3IGpRdWVyeSBtYXRjaGVkIGVsZW1lbnQgc2V0XG5cdFx0dmFyIHJldCA9IGpRdWVyeS5tZXJnZSggdGhpcy5jb25zdHJ1Y3RvcigpLCBlbGVtcyApO1xuXG5cdFx0Ly8gQWRkIHRoZSBvbGQgb2JqZWN0IG9udG8gdGhlIHN0YWNrIChhcyBhIHJlZmVyZW5jZSlcblx0XHRyZXQucHJldk9iamVjdCA9IHRoaXM7XG5cblx0XHQvLyBSZXR1cm4gdGhlIG5ld2x5LWZvcm1lZCBlbGVtZW50IHNldFxuXHRcdHJldHVybiByZXQ7XG5cdH0sXG5cblx0Ly8gRXhlY3V0ZSBhIGNhbGxiYWNrIGZvciBldmVyeSBlbGVtZW50IGluIHRoZSBtYXRjaGVkIHNldC5cblx0ZWFjaDogZnVuY3Rpb24oIGNhbGxiYWNrICkge1xuXHRcdHJldHVybiBqUXVlcnkuZWFjaCggdGhpcywgY2FsbGJhY2sgKTtcblx0fSxcblxuXHRtYXA6IGZ1bmN0aW9uKCBjYWxsYmFjayApIHtcblx0XHRyZXR1cm4gdGhpcy5wdXNoU3RhY2soIGpRdWVyeS5tYXAoIHRoaXMsIGZ1bmN0aW9uKCBlbGVtLCBpICkge1xuXHRcdFx0cmV0dXJuIGNhbGxiYWNrLmNhbGwoIGVsZW0sIGksIGVsZW0gKTtcblx0XHR9ICkgKTtcblx0fSxcblxuXHRzbGljZTogZnVuY3Rpb24oKSB7XG5cdFx0cmV0dXJuIHRoaXMucHVzaFN0YWNrKCBzbGljZS5hcHBseSggdGhpcywgYXJndW1lbnRzICkgKTtcblx0fSxcblxuXHRmaXJzdDogZnVuY3Rpb24oKSB7XG5cdFx0cmV0dXJuIHRoaXMuZXEoIDAgKTtcblx0fSxcblxuXHRsYXN0OiBmdW5jdGlvbigpIHtcblx0XHRyZXR1cm4gdGhpcy5lcSggLTEgKTtcblx0fSxcblxuXHRldmVuOiBmdW5jdGlvbigpIHtcblx0XHRyZXR1cm4gdGhpcy5wdXNoU3RhY2soIGpRdWVyeS5ncmVwKCB0aGlzLCBmdW5jdGlvbiggX2VsZW0sIGkgKSB7XG5cdFx0XHRyZXR1cm4gKCBpICsgMSApICUgMjtcblx0XHR9ICkgKTtcblx0fSxcblxuXHRvZGQ6IGZ1bmN0aW9uKCkge1xuXHRcdHJldHVybiB0aGlzLnB1c2hTdGFjayggalF1ZXJ5LmdyZXAoIHRoaXMsIGZ1bmN0aW9uKCBfZWxlbSwgaSApIHtcblx0XHRcdHJldHVybiBpICUgMjtcblx0XHR9ICkgKTtcblx0fSxcblxuXHRlcTogZnVuY3Rpb24oIGkgKSB7XG5cdFx0dmFyIGxlbiA9IHRoaXMubGVuZ3RoLFxuXHRcdFx0aiA9ICtpICsgKCBpIDwgMCA/IGxlbiA6IDAgKTtcblx0XHRyZXR1cm4gdGhpcy5wdXNoU3RhY2soIGogPj0gMCAmJiBqIDwgbGVuID8gWyB0aGlzWyBqIF0gXSA6IFtdICk7XG5cdH0sXG5cblx0ZW5kOiBmdW5jdGlvbigpIHtcblx0XHRyZXR1cm4gdGhpcy5wcmV2T2JqZWN0IHx8IHRoaXMuY29uc3RydWN0b3IoKTtcblx0fSxcblxuXHQvLyBGb3IgaW50ZXJuYWwgdXNlIG9ubHkuXG5cdC8vIEJlaGF2ZXMgbGlrZSBhbiBBcnJheSdzIG1ldGhvZCwgbm90IGxpa2UgYSBqUXVlcnkgbWV0aG9kLlxuXHRwdXNoOiBwdXNoLFxuXHRzb3J0OiBhcnIuc29ydCxcblx0c3BsaWNlOiBhcnIuc3BsaWNlXG59O1xuXG5qUXVlcnkuZXh0ZW5kID0galF1ZXJ5LmZuLmV4dGVuZCA9IGZ1bmN0aW9uKCkge1xuXHR2YXIgb3B0aW9ucywgbmFtZSwgc3JjLCBjb3B5LCBjb3B5SXNBcnJheSwgY2xvbmUsXG5cdFx0dGFyZ2V0ID0gYXJndW1lbnRzWyAwIF0gfHwge30sXG5cdFx0aSA9IDEsXG5cdFx0bGVuZ3RoID0gYXJndW1lbnRzLmxlbmd0aCxcblx0XHRkZWVwID0gZmFsc2U7XG5cblx0Ly8gSGFuZGxlIGEgZGVlcCBjb3B5IHNpdHVhdGlvblxuXHRpZiAoIHR5cGVvZiB0YXJnZXQgPT09IFwiYm9vbGVhblwiICkge1xuXHRcdGRlZXAgPSB0YXJnZXQ7XG5cblx0XHQvLyBTa2lwIHRoZSBib29sZWFuIGFuZCB0aGUgdGFyZ2V0XG5cdFx0dGFyZ2V0ID0gYXJndW1lbnRzWyBpIF0gfHwge307XG5cdFx0aSsrO1xuXHR9XG5cblx0Ly8gSGFuZGxlIGNhc2Ugd2hlbiB0YXJnZXQgaXMgYSBzdHJpbmcgb3Igc29tZXRoaW5nIChwb3NzaWJsZSBpbiBkZWVwIGNvcHkpXG5cdGlmICggdHlwZW9mIHRhcmdldCAhPT0gXCJvYmplY3RcIiAmJiAhaXNGdW5jdGlvbiggdGFyZ2V0ICkgKSB7XG5cdFx0dGFyZ2V0ID0ge307XG5cdH1cblxuXHQvLyBFeHRlbmQgalF1ZXJ5IGl0c2VsZiBpZiBvbmx5IG9uZSBhcmd1bWVudCBpcyBwYXNzZWRcblx0aWYgKCBpID09PSBsZW5ndGggKSB7XG5cdFx0dGFyZ2V0ID0gdGhpcztcblx0XHRpLS07XG5cdH1cblxuXHRmb3IgKCA7IGkgPCBsZW5ndGg7IGkrKyApIHtcblxuXHRcdC8vIE9ubHkgZGVhbCB3aXRoIG5vbi1udWxsL3VuZGVmaW5lZCB2YWx1ZXNcblx0XHRpZiAoICggb3B0aW9ucyA9IGFyZ3VtZW50c1sgaSBdICkgIT0gbnVsbCApIHtcblxuXHRcdFx0Ly8gRXh0ZW5kIHRoZSBiYXNlIG9iamVjdFxuXHRcdFx0Zm9yICggbmFtZSBpbiBvcHRpb25zICkge1xuXHRcdFx0XHRjb3B5ID0gb3B0aW9uc1sgbmFtZSBdO1xuXG5cdFx0XHRcdC8vIFByZXZlbnQgT2JqZWN0LnByb3RvdHlwZSBwb2xsdXRpb25cblx0XHRcdFx0Ly8gUHJldmVudCBuZXZlci1lbmRpbmcgbG9vcFxuXHRcdFx0XHRpZiAoIG5hbWUgPT09IFwiX19wcm90b19fXCIgfHwgdGFyZ2V0ID09PSBjb3B5ICkge1xuXHRcdFx0XHRcdGNvbnRpbnVlO1xuXHRcdFx0XHR9XG5cblx0XHRcdFx0Ly8gUmVjdXJzZSBpZiB3ZSdyZSBtZXJnaW5nIHBsYWluIG9iamVjdHMgb3IgYXJyYXlzXG5cdFx0XHRcdGlmICggZGVlcCAmJiBjb3B5ICYmICggalF1ZXJ5LmlzUGxhaW5PYmplY3QoIGNvcHkgKSB8fFxuXHRcdFx0XHRcdCggY29weUlzQXJyYXkgPSBBcnJheS5pc0FycmF5KCBjb3B5ICkgKSApICkge1xuXHRcdFx0XHRcdHNyYyA9IHRhcmdldFsgbmFtZSBdO1xuXG5cdFx0XHRcdFx0Ly8gRW5zdXJlIHByb3BlciB0eXBlIGZvciB0aGUgc291cmNlIHZhbHVlXG5cdFx0XHRcdFx0aWYgKCBjb3B5SXNBcnJheSAmJiAhQXJyYXkuaXNBcnJheSggc3JjICkgKSB7XG5cdFx0XHRcdFx0XHRjbG9uZSA9IFtdO1xuXHRcdFx0XHRcdH0gZWxzZSBpZiAoICFjb3B5SXNBcnJheSAmJiAhalF1ZXJ5LmlzUGxhaW5PYmplY3QoIHNyYyApICkge1xuXHRcdFx0XHRcdFx0Y2xvbmUgPSB7fTtcblx0XHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdFx0Y2xvbmUgPSBzcmM7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHRcdGNvcHlJc0FycmF5ID0gZmFsc2U7XG5cblx0XHRcdFx0XHQvLyBOZXZlciBtb3ZlIG9yaWdpbmFsIG9iamVjdHMsIGNsb25lIHRoZW1cblx0XHRcdFx0XHR0YXJnZXRbIG5hbWUgXSA9IGpRdWVyeS5leHRlbmQoIGRlZXAsIGNsb25lLCBjb3B5ICk7XG5cblx0XHRcdFx0Ly8gRG9uJ3QgYnJpbmcgaW4gdW5kZWZpbmVkIHZhbHVlc1xuXHRcdFx0XHR9IGVsc2UgaWYgKCBjb3B5ICE9PSB1bmRlZmluZWQgKSB7XG5cdFx0XHRcdFx0dGFyZ2V0WyBuYW1lIF0gPSBjb3B5O1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fVxuXHR9XG5cblx0Ly8gUmV0dXJuIHRoZSBtb2RpZmllZCBvYmplY3Rcblx0cmV0dXJuIHRhcmdldDtcbn07XG5cbmpRdWVyeS5leHRlbmQoIHtcblxuXHQvLyBVbmlxdWUgZm9yIGVhY2ggY29weSBvZiBqUXVlcnkgb24gdGhlIHBhZ2Vcblx0ZXhwYW5kbzogXCJqUXVlcnlcIiArICggdmVyc2lvbiArIE1hdGgucmFuZG9tKCkgKS5yZXBsYWNlKCAvXFxEL2csIFwiXCIgKSxcblxuXHQvLyBBc3N1bWUgalF1ZXJ5IGlzIHJlYWR5IHdpdGhvdXQgdGhlIHJlYWR5IG1vZHVsZVxuXHRpc1JlYWR5OiB0cnVlLFxuXG5cdGVycm9yOiBmdW5jdGlvbiggbXNnICkge1xuXHRcdHRocm93IG5ldyBFcnJvciggbXNnICk7XG5cdH0sXG5cblx0bm9vcDogZnVuY3Rpb24oKSB7fSxcblxuXHRpc1BsYWluT2JqZWN0OiBmdW5jdGlvbiggb2JqICkge1xuXHRcdHZhciBwcm90bywgQ3RvcjtcblxuXHRcdC8vIERldGVjdCBvYnZpb3VzIG5lZ2F0aXZlc1xuXHRcdC8vIFVzZSB0b1N0cmluZyBpbnN0ZWFkIG9mIGpRdWVyeS50eXBlIHRvIGNhdGNoIGhvc3Qgb2JqZWN0c1xuXHRcdGlmICggIW9iaiB8fCB0b1N0cmluZy5jYWxsKCBvYmogKSAhPT0gXCJbb2JqZWN0IE9iamVjdF1cIiApIHtcblx0XHRcdHJldHVybiBmYWxzZTtcblx0XHR9XG5cblx0XHRwcm90byA9IGdldFByb3RvKCBvYmogKTtcblxuXHRcdC8vIE9iamVjdHMgd2l0aCBubyBwcm90b3R5cGUgKGUuZy4sIGBPYmplY3QuY3JlYXRlKCBudWxsIClgKSBhcmUgcGxhaW5cblx0XHRpZiAoICFwcm90byApIHtcblx0XHRcdHJldHVybiB0cnVlO1xuXHRcdH1cblxuXHRcdC8vIE9iamVjdHMgd2l0aCBwcm90b3R5cGUgYXJlIHBsYWluIGlmZiB0aGV5IHdlcmUgY29uc3RydWN0ZWQgYnkgYSBnbG9iYWwgT2JqZWN0IGZ1bmN0aW9uXG5cdFx0Q3RvciA9IGhhc093bi5jYWxsKCBwcm90bywgXCJjb25zdHJ1Y3RvclwiICkgJiYgcHJvdG8uY29uc3RydWN0b3I7XG5cdFx0cmV0dXJuIHR5cGVvZiBDdG9yID09PSBcImZ1bmN0aW9uXCIgJiYgZm5Ub1N0cmluZy5jYWxsKCBDdG9yICkgPT09IE9iamVjdEZ1bmN0aW9uU3RyaW5nO1xuXHR9LFxuXG5cdGlzRW1wdHlPYmplY3Q6IGZ1bmN0aW9uKCBvYmogKSB7XG5cdFx0dmFyIG5hbWU7XG5cblx0XHRmb3IgKCBuYW1lIGluIG9iaiApIHtcblx0XHRcdHJldHVybiBmYWxzZTtcblx0XHR9XG5cdFx0cmV0dXJuIHRydWU7XG5cdH0sXG5cblx0Ly8gRXZhbHVhdGVzIGEgc2NyaXB0IGluIGEgcHJvdmlkZWQgY29udGV4dDsgZmFsbHMgYmFjayB0byB0aGUgZ2xvYmFsIG9uZVxuXHQvLyBpZiBub3Qgc3BlY2lmaWVkLlxuXHRnbG9iYWxFdmFsOiBmdW5jdGlvbiggY29kZSwgb3B0aW9ucywgZG9jICkge1xuXHRcdERPTUV2YWwoIGNvZGUsIHsgbm9uY2U6IG9wdGlvbnMgJiYgb3B0aW9ucy5ub25jZSB9LCBkb2MgKTtcblx0fSxcblxuXHRlYWNoOiBmdW5jdGlvbiggb2JqLCBjYWxsYmFjayApIHtcblx0XHR2YXIgbGVuZ3RoLCBpID0gMDtcblxuXHRcdGlmICggaXNBcnJheUxpa2UoIG9iaiApICkge1xuXHRcdFx0bGVuZ3RoID0gb2JqLmxlbmd0aDtcblx0XHRcdGZvciAoIDsgaSA8IGxlbmd0aDsgaSsrICkge1xuXHRcdFx0XHRpZiAoIGNhbGxiYWNrLmNhbGwoIG9ialsgaSBdLCBpLCBvYmpbIGkgXSApID09PSBmYWxzZSApIHtcblx0XHRcdFx0XHRicmVhaztcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH0gZWxzZSB7XG5cdFx0XHRmb3IgKCBpIGluIG9iaiApIHtcblx0XHRcdFx0aWYgKCBjYWxsYmFjay5jYWxsKCBvYmpbIGkgXSwgaSwgb2JqWyBpIF0gKSA9PT0gZmFsc2UgKSB7XG5cdFx0XHRcdFx0YnJlYWs7XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9XG5cblx0XHRyZXR1cm4gb2JqO1xuXHR9LFxuXG5cdC8vIHJlc3VsdHMgaXMgZm9yIGludGVybmFsIHVzYWdlIG9ubHlcblx0bWFrZUFycmF5OiBmdW5jdGlvbiggYXJyLCByZXN1bHRzICkge1xuXHRcdHZhciByZXQgPSByZXN1bHRzIHx8IFtdO1xuXG5cdFx0aWYgKCBhcnIgIT0gbnVsbCApIHtcblx0XHRcdGlmICggaXNBcnJheUxpa2UoIE9iamVjdCggYXJyICkgKSApIHtcblx0XHRcdFx0alF1ZXJ5Lm1lcmdlKCByZXQsXG5cdFx0XHRcdFx0dHlwZW9mIGFyciA9PT0gXCJzdHJpbmdcIiA/XG5cdFx0XHRcdFx0WyBhcnIgXSA6IGFyclxuXHRcdFx0XHQpO1xuXHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0cHVzaC5jYWxsKCByZXQsIGFyciApO1xuXHRcdFx0fVxuXHRcdH1cblxuXHRcdHJldHVybiByZXQ7XG5cdH0sXG5cblx0aW5BcnJheTogZnVuY3Rpb24oIGVsZW0sIGFyciwgaSApIHtcblx0XHRyZXR1cm4gYXJyID09IG51bGwgPyAtMSA6IGluZGV4T2YuY2FsbCggYXJyLCBlbGVtLCBpICk7XG5cdH0sXG5cblx0Ly8gU3VwcG9ydDogQW5kcm9pZCA8PTQuMCBvbmx5LCBQaGFudG9tSlMgMSBvbmx5XG5cdC8vIHB1c2guYXBwbHkoXywgYXJyYXlsaWtlKSB0aHJvd3Mgb24gYW5jaWVudCBXZWJLaXRcblx0bWVyZ2U6IGZ1bmN0aW9uKCBmaXJzdCwgc2Vjb25kICkge1xuXHRcdHZhciBsZW4gPSArc2Vjb25kLmxlbmd0aCxcblx0XHRcdGogPSAwLFxuXHRcdFx0aSA9IGZpcnN0Lmxlbmd0aDtcblxuXHRcdGZvciAoIDsgaiA8IGxlbjsgaisrICkge1xuXHRcdFx0Zmlyc3RbIGkrKyBdID0gc2Vjb25kWyBqIF07XG5cdFx0fVxuXG5cdFx0Zmlyc3QubGVuZ3RoID0gaTtcblxuXHRcdHJldHVybiBmaXJzdDtcblx0fSxcblxuXHRncmVwOiBmdW5jdGlvbiggZWxlbXMsIGNhbGxiYWNrLCBpbnZlcnQgKSB7XG5cdFx0dmFyIGNhbGxiYWNrSW52ZXJzZSxcblx0XHRcdG1hdGNoZXMgPSBbXSxcblx0XHRcdGkgPSAwLFxuXHRcdFx0bGVuZ3RoID0gZWxlbXMubGVuZ3RoLFxuXHRcdFx0Y2FsbGJhY2tFeHBlY3QgPSAhaW52ZXJ0O1xuXG5cdFx0Ly8gR28gdGhyb3VnaCB0aGUgYXJyYXksIG9ubHkgc2F2aW5nIHRoZSBpdGVtc1xuXHRcdC8vIHRoYXQgcGFzcyB0aGUgdmFsaWRhdG9yIGZ1bmN0aW9uXG5cdFx0Zm9yICggOyBpIDwgbGVuZ3RoOyBpKysgKSB7XG5cdFx0XHRjYWxsYmFja0ludmVyc2UgPSAhY2FsbGJhY2soIGVsZW1zWyBpIF0sIGkgKTtcblx0XHRcdGlmICggY2FsbGJhY2tJbnZlcnNlICE9PSBjYWxsYmFja0V4cGVjdCApIHtcblx0XHRcdFx0bWF0Y2hlcy5wdXNoKCBlbGVtc1sgaSBdICk7XG5cdFx0XHR9XG5cdFx0fVxuXG5cdFx0cmV0dXJuIG1hdGNoZXM7XG5cdH0sXG5cblx0Ly8gYXJnIGlzIGZvciBpbnRlcm5hbCB1c2FnZSBvbmx5XG5cdG1hcDogZnVuY3Rpb24oIGVsZW1zLCBjYWxsYmFjaywgYXJnICkge1xuXHRcdHZhciBsZW5ndGgsIHZhbHVlLFxuXHRcdFx0aSA9IDAsXG5cdFx0XHRyZXQgPSBbXTtcblxuXHRcdC8vIEdvIHRocm91Z2ggdGhlIGFycmF5LCB0cmFuc2xhdGluZyBlYWNoIG9mIHRoZSBpdGVtcyB0byB0aGVpciBuZXcgdmFsdWVzXG5cdFx0aWYgKCBpc0FycmF5TGlrZSggZWxlbXMgKSApIHtcblx0XHRcdGxlbmd0aCA9IGVsZW1zLmxlbmd0aDtcblx0XHRcdGZvciAoIDsgaSA8IGxlbmd0aDsgaSsrICkge1xuXHRcdFx0XHR2YWx1ZSA9IGNhbGxiYWNrKCBlbGVtc1sgaSBdLCBpLCBhcmcgKTtcblxuXHRcdFx0XHRpZiAoIHZhbHVlICE9IG51bGwgKSB7XG5cdFx0XHRcdFx0cmV0LnB1c2goIHZhbHVlICk7XG5cdFx0XHRcdH1cblx0XHRcdH1cblxuXHRcdC8vIEdvIHRocm91Z2ggZXZlcnkga2V5IG9uIHRoZSBvYmplY3QsXG5cdFx0fSBlbHNlIHtcblx0XHRcdGZvciAoIGkgaW4gZWxlbXMgKSB7XG5cdFx0XHRcdHZhbHVlID0gY2FsbGJhY2soIGVsZW1zWyBpIF0sIGksIGFyZyApO1xuXG5cdFx0XHRcdGlmICggdmFsdWUgIT0gbnVsbCApIHtcblx0XHRcdFx0XHRyZXQucHVzaCggdmFsdWUgKTtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH1cblxuXHRcdC8vIEZsYXR0ZW4gYW55IG5lc3RlZCBhcnJheXNcblx0XHRyZXR1cm4gZmxhdCggcmV0ICk7XG5cdH0sXG5cblx0Ly8gQSBnbG9iYWwgR1VJRCBjb3VudGVyIGZvciBvYmplY3RzXG5cdGd1aWQ6IDEsXG5cblx0Ly8galF1ZXJ5LnN1cHBvcnQgaXMgbm90IHVzZWQgaW4gQ29yZSBidXQgb3RoZXIgcHJvamVjdHMgYXR0YWNoIHRoZWlyXG5cdC8vIHByb3BlcnRpZXMgdG8gaXQgc28gaXQgbmVlZHMgdG8gZXhpc3QuXG5cdHN1cHBvcnQ6IHN1cHBvcnRcbn0gKTtcblxuaWYgKCB0eXBlb2YgU3ltYm9sID09PSBcImZ1bmN0aW9uXCIgKSB7XG5cdGpRdWVyeS5mblsgU3ltYm9sLml0ZXJhdG9yIF0gPSBhcnJbIFN5bWJvbC5pdGVyYXRvciBdO1xufVxuXG4vLyBQb3B1bGF0ZSB0aGUgY2xhc3MydHlwZSBtYXBcbmpRdWVyeS5lYWNoKCBcIkJvb2xlYW4gTnVtYmVyIFN0cmluZyBGdW5jdGlvbiBBcnJheSBEYXRlIFJlZ0V4cCBPYmplY3QgRXJyb3IgU3ltYm9sXCIuc3BsaXQoIFwiIFwiICksXG5mdW5jdGlvbiggX2ksIG5hbWUgKSB7XG5cdGNsYXNzMnR5cGVbIFwiW29iamVjdCBcIiArIG5hbWUgKyBcIl1cIiBdID0gbmFtZS50b0xvd2VyQ2FzZSgpO1xufSApO1xuXG5mdW5jdGlvbiBpc0FycmF5TGlrZSggb2JqICkge1xuXG5cdC8vIFN1cHBvcnQ6IHJlYWwgaU9TIDguMiBvbmx5IChub3QgcmVwcm9kdWNpYmxlIGluIHNpbXVsYXRvcilcblx0Ly8gYGluYCBjaGVjayB1c2VkIHRvIHByZXZlbnQgSklUIGVycm9yIChnaC0yMTQ1KVxuXHQvLyBoYXNPd24gaXNuJ3QgdXNlZCBoZXJlIGR1ZSB0byBmYWxzZSBuZWdhdGl2ZXNcblx0Ly8gcmVnYXJkaW5nIE5vZGVsaXN0IGxlbmd0aCBpbiBJRVxuXHR2YXIgbGVuZ3RoID0gISFvYmogJiYgXCJsZW5ndGhcIiBpbiBvYmogJiYgb2JqLmxlbmd0aCxcblx0XHR0eXBlID0gdG9UeXBlKCBvYmogKTtcblxuXHRpZiAoIGlzRnVuY3Rpb24oIG9iaiApIHx8IGlzV2luZG93KCBvYmogKSApIHtcblx0XHRyZXR1cm4gZmFsc2U7XG5cdH1cblxuXHRyZXR1cm4gdHlwZSA9PT0gXCJhcnJheVwiIHx8IGxlbmd0aCA9PT0gMCB8fFxuXHRcdHR5cGVvZiBsZW5ndGggPT09IFwibnVtYmVyXCIgJiYgbGVuZ3RoID4gMCAmJiAoIGxlbmd0aCAtIDEgKSBpbiBvYmo7XG59XG52YXIgU2l6emxlID1cbi8qIVxuICogU2l6emxlIENTUyBTZWxlY3RvciBFbmdpbmUgdjIuMy41XG4gKiBodHRwczovL3NpenpsZWpzLmNvbS9cbiAqXG4gKiBDb3B5cmlnaHQgSlMgRm91bmRhdGlvbiBhbmQgb3RoZXIgY29udHJpYnV0b3JzXG4gKiBSZWxlYXNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2VcbiAqIGh0dHBzOi8vanMuZm91bmRhdGlvbi9cbiAqXG4gKiBEYXRlOiAyMDIwLTAzLTE0XG4gKi9cbiggZnVuY3Rpb24oIHdpbmRvdyApIHtcbnZhciBpLFxuXHRzdXBwb3J0LFxuXHRFeHByLFxuXHRnZXRUZXh0LFxuXHRpc1hNTCxcblx0dG9rZW5pemUsXG5cdGNvbXBpbGUsXG5cdHNlbGVjdCxcblx0b3V0ZXJtb3N0Q29udGV4dCxcblx0c29ydElucHV0LFxuXHRoYXNEdXBsaWNhdGUsXG5cblx0Ly8gTG9jYWwgZG9jdW1lbnQgdmFyc1xuXHRzZXREb2N1bWVudCxcblx0ZG9jdW1lbnQsXG5cdGRvY0VsZW0sXG5cdGRvY3VtZW50SXNIVE1MLFxuXHRyYnVnZ3lRU0EsXG5cdHJidWdneU1hdGNoZXMsXG5cdG1hdGNoZXMsXG5cdGNvbnRhaW5zLFxuXG5cdC8vIEluc3RhbmNlLXNwZWNpZmljIGRhdGFcblx0ZXhwYW5kbyA9IFwic2l6emxlXCIgKyAxICogbmV3IERhdGUoKSxcblx0cHJlZmVycmVkRG9jID0gd2luZG93LmRvY3VtZW50LFxuXHRkaXJydW5zID0gMCxcblx0ZG9uZSA9IDAsXG5cdGNsYXNzQ2FjaGUgPSBjcmVhdGVDYWNoZSgpLFxuXHR0b2tlbkNhY2hlID0gY3JlYXRlQ2FjaGUoKSxcblx0Y29tcGlsZXJDYWNoZSA9IGNyZWF0ZUNhY2hlKCksXG5cdG5vbm5hdGl2ZVNlbGVjdG9yQ2FjaGUgPSBjcmVhdGVDYWNoZSgpLFxuXHRzb3J0T3JkZXIgPSBmdW5jdGlvbiggYSwgYiApIHtcblx0XHRpZiAoIGEgPT09IGIgKSB7XG5cdFx0XHRoYXNEdXBsaWNhdGUgPSB0cnVlO1xuXHRcdH1cblx0XHRyZXR1cm4gMDtcblx0fSxcblxuXHQvLyBJbnN0YW5jZSBtZXRob2RzXG5cdGhhc093biA9ICgge30gKS5oYXNPd25Qcm9wZXJ0eSxcblx0YXJyID0gW10sXG5cdHBvcCA9IGFyci5wb3AsXG5cdHB1c2hOYXRpdmUgPSBhcnIucHVzaCxcblx0cHVzaCA9IGFyci5wdXNoLFxuXHRzbGljZSA9IGFyci5zbGljZSxcblxuXHQvLyBVc2UgYSBzdHJpcHBlZC1kb3duIGluZGV4T2YgYXMgaXQncyBmYXN0ZXIgdGhhbiBuYXRpdmVcblx0Ly8gaHR0cHM6Ly9qc3BlcmYuY29tL3Rob3ItaW5kZXhvZi12cy1mb3IvNVxuXHRpbmRleE9mID0gZnVuY3Rpb24oIGxpc3QsIGVsZW0gKSB7XG5cdFx0dmFyIGkgPSAwLFxuXHRcdFx0bGVuID0gbGlzdC5sZW5ndGg7XG5cdFx0Zm9yICggOyBpIDwgbGVuOyBpKysgKSB7XG5cdFx0XHRpZiAoIGxpc3RbIGkgXSA9PT0gZWxlbSApIHtcblx0XHRcdFx0cmV0dXJuIGk7XG5cdFx0XHR9XG5cdFx0fVxuXHRcdHJldHVybiAtMTtcblx0fSxcblxuXHRib29sZWFucyA9IFwiY2hlY2tlZHxzZWxlY3RlZHxhc3luY3xhdXRvZm9jdXN8YXV0b3BsYXl8Y29udHJvbHN8ZGVmZXJ8ZGlzYWJsZWR8aGlkZGVufFwiICtcblx0XHRcImlzbWFwfGxvb3B8bXVsdGlwbGV8b3BlbnxyZWFkb25seXxyZXF1aXJlZHxzY29wZWRcIixcblxuXHQvLyBSZWd1bGFyIGV4cHJlc3Npb25zXG5cblx0Ly8gaHR0cDovL3d3dy53My5vcmcvVFIvY3NzMy1zZWxlY3RvcnMvI3doaXRlc3BhY2Vcblx0d2hpdGVzcGFjZSA9IFwiW1xcXFx4MjBcXFxcdFxcXFxyXFxcXG5cXFxcZl1cIixcblxuXHQvLyBodHRwczovL3d3dy53My5vcmcvVFIvY3NzLXN5bnRheC0zLyNpZGVudC10b2tlbi1kaWFncmFtXG5cdGlkZW50aWZpZXIgPSBcIig/OlxcXFxcXFxcW1xcXFxkYS1mQS1GXXsxLDZ9XCIgKyB3aGl0ZXNwYWNlICtcblx0XHRcIj98XFxcXFxcXFxbXlxcXFxyXFxcXG5cXFxcZl18W1xcXFx3LV18W15cXDAtXFxcXHg3Zl0pK1wiLFxuXG5cdC8vIEF0dHJpYnV0ZSBzZWxlY3RvcnM6IGh0dHA6Ly93d3cudzMub3JnL1RSL3NlbGVjdG9ycy8jYXR0cmlidXRlLXNlbGVjdG9yc1xuXHRhdHRyaWJ1dGVzID0gXCJcXFxcW1wiICsgd2hpdGVzcGFjZSArIFwiKihcIiArIGlkZW50aWZpZXIgKyBcIikoPzpcIiArIHdoaXRlc3BhY2UgK1xuXG5cdFx0Ly8gT3BlcmF0b3IgKGNhcHR1cmUgMilcblx0XHRcIiooWypeJHwhfl0/PSlcIiArIHdoaXRlc3BhY2UgK1xuXG5cdFx0Ly8gXCJBdHRyaWJ1dGUgdmFsdWVzIG11c3QgYmUgQ1NTIGlkZW50aWZpZXJzIFtjYXB0dXJlIDVdXG5cdFx0Ly8gb3Igc3RyaW5ncyBbY2FwdHVyZSAzIG9yIGNhcHR1cmUgNF1cIlxuXHRcdFwiKig/OicoKD86XFxcXFxcXFwufFteXFxcXFxcXFwnXSkqKSd8XFxcIigoPzpcXFxcXFxcXC58W15cXFxcXFxcXFxcXCJdKSopXFxcInwoXCIgKyBpZGVudGlmaWVyICsgXCIpKXwpXCIgK1xuXHRcdHdoaXRlc3BhY2UgKyBcIipcXFxcXVwiLFxuXG5cdHBzZXVkb3MgPSBcIjooXCIgKyBpZGVudGlmaWVyICsgXCIpKD86XFxcXCgoXCIgK1xuXG5cdFx0Ly8gVG8gcmVkdWNlIHRoZSBudW1iZXIgb2Ygc2VsZWN0b3JzIG5lZWRpbmcgdG9rZW5pemUgaW4gdGhlIHByZUZpbHRlciwgcHJlZmVyIGFyZ3VtZW50czpcblx0XHQvLyAxLiBxdW90ZWQgKGNhcHR1cmUgMzsgY2FwdHVyZSA0IG9yIGNhcHR1cmUgNSlcblx0XHRcIignKCg/OlxcXFxcXFxcLnxbXlxcXFxcXFxcJ10pKiknfFxcXCIoKD86XFxcXFxcXFwufFteXFxcXFxcXFxcXFwiXSkqKVxcXCIpfFwiICtcblxuXHRcdC8vIDIuIHNpbXBsZSAoY2FwdHVyZSA2KVxuXHRcdFwiKCg/OlxcXFxcXFxcLnxbXlxcXFxcXFxcKClbXFxcXF1dfFwiICsgYXR0cmlidXRlcyArIFwiKSopfFwiICtcblxuXHRcdC8vIDMuIGFueXRoaW5nIGVsc2UgKGNhcHR1cmUgMilcblx0XHRcIi4qXCIgK1xuXHRcdFwiKVxcXFwpfClcIixcblxuXHQvLyBMZWFkaW5nIGFuZCBub24tZXNjYXBlZCB0cmFpbGluZyB3aGl0ZXNwYWNlLCBjYXB0dXJpbmcgc29tZSBub24td2hpdGVzcGFjZSBjaGFyYWN0ZXJzIHByZWNlZGluZyB0aGUgbGF0dGVyXG5cdHJ3aGl0ZXNwYWNlID0gbmV3IFJlZ0V4cCggd2hpdGVzcGFjZSArIFwiK1wiLCBcImdcIiApLFxuXHRydHJpbSA9IG5ldyBSZWdFeHAoIFwiXlwiICsgd2hpdGVzcGFjZSArIFwiK3woKD86XnxbXlxcXFxcXFxcXSkoPzpcXFxcXFxcXC4pKilcIiArXG5cdFx0d2hpdGVzcGFjZSArIFwiKyRcIiwgXCJnXCIgKSxcblxuXHRyY29tbWEgPSBuZXcgUmVnRXhwKCBcIl5cIiArIHdoaXRlc3BhY2UgKyBcIiosXCIgKyB3aGl0ZXNwYWNlICsgXCIqXCIgKSxcblx0cmNvbWJpbmF0b3JzID0gbmV3IFJlZ0V4cCggXCJeXCIgKyB3aGl0ZXNwYWNlICsgXCIqKFs+K35dfFwiICsgd2hpdGVzcGFjZSArIFwiKVwiICsgd2hpdGVzcGFjZSArXG5cdFx0XCIqXCIgKSxcblx0cmRlc2NlbmQgPSBuZXcgUmVnRXhwKCB3aGl0ZXNwYWNlICsgXCJ8PlwiICksXG5cblx0cnBzZXVkbyA9IG5ldyBSZWdFeHAoIHBzZXVkb3MgKSxcblx0cmlkZW50aWZpZXIgPSBuZXcgUmVnRXhwKCBcIl5cIiArIGlkZW50aWZpZXIgKyBcIiRcIiApLFxuXG5cdG1hdGNoRXhwciA9IHtcblx0XHRcIklEXCI6IG5ldyBSZWdFeHAoIFwiXiMoXCIgKyBpZGVudGlmaWVyICsgXCIpXCIgKSxcblx0XHRcIkNMQVNTXCI6IG5ldyBSZWdFeHAoIFwiXlxcXFwuKFwiICsgaWRlbnRpZmllciArIFwiKVwiICksXG5cdFx0XCJUQUdcIjogbmV3IFJlZ0V4cCggXCJeKFwiICsgaWRlbnRpZmllciArIFwifFsqXSlcIiApLFxuXHRcdFwiQVRUUlwiOiBuZXcgUmVnRXhwKCBcIl5cIiArIGF0dHJpYnV0ZXMgKSxcblx0XHRcIlBTRVVET1wiOiBuZXcgUmVnRXhwKCBcIl5cIiArIHBzZXVkb3MgKSxcblx0XHRcIkNISUxEXCI6IG5ldyBSZWdFeHAoIFwiXjoob25seXxmaXJzdHxsYXN0fG50aHxudGgtbGFzdCktKGNoaWxkfG9mLXR5cGUpKD86XFxcXChcIiArXG5cdFx0XHR3aGl0ZXNwYWNlICsgXCIqKGV2ZW58b2RkfCgoWystXXwpKFxcXFxkKilufClcIiArIHdoaXRlc3BhY2UgKyBcIiooPzooWystXXwpXCIgK1xuXHRcdFx0d2hpdGVzcGFjZSArIFwiKihcXFxcZCspfCkpXCIgKyB3aGl0ZXNwYWNlICsgXCIqXFxcXCl8KVwiLCBcImlcIiApLFxuXHRcdFwiYm9vbFwiOiBuZXcgUmVnRXhwKCBcIl4oPzpcIiArIGJvb2xlYW5zICsgXCIpJFwiLCBcImlcIiApLFxuXG5cdFx0Ly8gRm9yIHVzZSBpbiBsaWJyYXJpZXMgaW1wbGVtZW50aW5nIC5pcygpXG5cdFx0Ly8gV2UgdXNlIHRoaXMgZm9yIFBPUyBtYXRjaGluZyBpbiBgc2VsZWN0YFxuXHRcdFwibmVlZHNDb250ZXh0XCI6IG5ldyBSZWdFeHAoIFwiXlwiICsgd2hpdGVzcGFjZSArXG5cdFx0XHRcIipbPit+XXw6KGV2ZW58b2RkfGVxfGd0fGx0fG50aHxmaXJzdHxsYXN0KSg/OlxcXFwoXCIgKyB3aGl0ZXNwYWNlICtcblx0XHRcdFwiKigoPzotXFxcXGQpP1xcXFxkKilcIiArIHdoaXRlc3BhY2UgKyBcIipcXFxcKXwpKD89W14tXXwkKVwiLCBcImlcIiApXG5cdH0sXG5cblx0cmh0bWwgPSAvSFRNTCQvaSxcblx0cmlucHV0cyA9IC9eKD86aW5wdXR8c2VsZWN0fHRleHRhcmVhfGJ1dHRvbikkL2ksXG5cdHJoZWFkZXIgPSAvXmhcXGQkL2ksXG5cblx0cm5hdGl2ZSA9IC9eW157XStcXHtcXHMqXFxbbmF0aXZlIFxcdy8sXG5cblx0Ly8gRWFzaWx5LXBhcnNlYWJsZS9yZXRyaWV2YWJsZSBJRCBvciBUQUcgb3IgQ0xBU1Mgc2VsZWN0b3JzXG5cdHJxdWlja0V4cHIgPSAvXig/OiMoW1xcdy1dKyl8KFxcdyspfFxcLihbXFx3LV0rKSkkLyxcblxuXHRyc2libGluZyA9IC9bK35dLyxcblxuXHQvLyBDU1MgZXNjYXBlc1xuXHQvLyBodHRwOi8vd3d3LnczLm9yZy9UUi9DU1MyMS9zeW5kYXRhLmh0bWwjZXNjYXBlZC1jaGFyYWN0ZXJzXG5cdHJ1bmVzY2FwZSA9IG5ldyBSZWdFeHAoIFwiXFxcXFxcXFxbXFxcXGRhLWZBLUZdezEsNn1cIiArIHdoaXRlc3BhY2UgKyBcIj98XFxcXFxcXFwoW15cXFxcclxcXFxuXFxcXGZdKVwiLCBcImdcIiApLFxuXHRmdW5lc2NhcGUgPSBmdW5jdGlvbiggZXNjYXBlLCBub25IZXggKSB7XG5cdFx0dmFyIGhpZ2ggPSBcIjB4XCIgKyBlc2NhcGUuc2xpY2UoIDEgKSAtIDB4MTAwMDA7XG5cblx0XHRyZXR1cm4gbm9uSGV4ID9cblxuXHRcdFx0Ly8gU3RyaXAgdGhlIGJhY2tzbGFzaCBwcmVmaXggZnJvbSBhIG5vbi1oZXggZXNjYXBlIHNlcXVlbmNlXG5cdFx0XHRub25IZXggOlxuXG5cdFx0XHQvLyBSZXBsYWNlIGEgaGV4YWRlY2ltYWwgZXNjYXBlIHNlcXVlbmNlIHdpdGggdGhlIGVuY29kZWQgVW5pY29kZSBjb2RlIHBvaW50XG5cdFx0XHQvLyBTdXBwb3J0OiBJRSA8PTExK1xuXHRcdFx0Ly8gRm9yIHZhbHVlcyBvdXRzaWRlIHRoZSBCYXNpYyBNdWx0aWxpbmd1YWwgUGxhbmUgKEJNUCksIG1hbnVhbGx5IGNvbnN0cnVjdCBhXG5cdFx0XHQvLyBzdXJyb2dhdGUgcGFpclxuXHRcdFx0aGlnaCA8IDAgP1xuXHRcdFx0XHRTdHJpbmcuZnJvbUNoYXJDb2RlKCBoaWdoICsgMHgxMDAwMCApIDpcblx0XHRcdFx0U3RyaW5nLmZyb21DaGFyQ29kZSggaGlnaCA+PiAxMCB8IDB4RDgwMCwgaGlnaCAmIDB4M0ZGIHwgMHhEQzAwICk7XG5cdH0sXG5cblx0Ly8gQ1NTIHN0cmluZy9pZGVudGlmaWVyIHNlcmlhbGl6YXRpb25cblx0Ly8gaHR0cHM6Ly9kcmFmdHMuY3Nzd2cub3JnL2Nzc29tLyNjb21tb24tc2VyaWFsaXppbmctaWRpb21zXG5cdHJjc3Nlc2NhcGUgPSAvKFtcXDAtXFx4MWZcXHg3Zl18Xi0/XFxkKXxeLSR8W15cXDAtXFx4MWZcXHg3Zi1cXHVGRkZGXFx3LV0vZyxcblx0ZmNzc2VzY2FwZSA9IGZ1bmN0aW9uKCBjaCwgYXNDb2RlUG9pbnQgKSB7XG5cdFx0aWYgKCBhc0NvZGVQb2ludCApIHtcblxuXHRcdFx0Ly8gVSswMDAwIE5VTEwgYmVjb21lcyBVK0ZGRkQgUkVQTEFDRU1FTlQgQ0hBUkFDVEVSXG5cdFx0XHRpZiAoIGNoID09PSBcIlxcMFwiICkge1xuXHRcdFx0XHRyZXR1cm4gXCJcXHVGRkZEXCI7XG5cdFx0XHR9XG5cblx0XHRcdC8vIENvbnRyb2wgY2hhcmFjdGVycyBhbmQgKGRlcGVuZGVudCB1cG9uIHBvc2l0aW9uKSBudW1iZXJzIGdldCBlc2NhcGVkIGFzIGNvZGUgcG9pbnRzXG5cdFx0XHRyZXR1cm4gY2guc2xpY2UoIDAsIC0xICkgKyBcIlxcXFxcIiArXG5cdFx0XHRcdGNoLmNoYXJDb2RlQXQoIGNoLmxlbmd0aCAtIDEgKS50b1N0cmluZyggMTYgKSArIFwiIFwiO1xuXHRcdH1cblxuXHRcdC8vIE90aGVyIHBvdGVudGlhbGx5LXNwZWNpYWwgQVNDSUkgY2hhcmFjdGVycyBnZXQgYmFja3NsYXNoLWVzY2FwZWRcblx0XHRyZXR1cm4gXCJcXFxcXCIgKyBjaDtcblx0fSxcblxuXHQvLyBVc2VkIGZvciBpZnJhbWVzXG5cdC8vIFNlZSBzZXREb2N1bWVudCgpXG5cdC8vIFJlbW92aW5nIHRoZSBmdW5jdGlvbiB3cmFwcGVyIGNhdXNlcyBhIFwiUGVybWlzc2lvbiBEZW5pZWRcIlxuXHQvLyBlcnJvciBpbiBJRVxuXHR1bmxvYWRIYW5kbGVyID0gZnVuY3Rpb24oKSB7XG5cdFx0c2V0RG9jdW1lbnQoKTtcblx0fSxcblxuXHRpbkRpc2FibGVkRmllbGRzZXQgPSBhZGRDb21iaW5hdG9yKFxuXHRcdGZ1bmN0aW9uKCBlbGVtICkge1xuXHRcdFx0cmV0dXJuIGVsZW0uZGlzYWJsZWQgPT09IHRydWUgJiYgZWxlbS5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpID09PSBcImZpZWxkc2V0XCI7XG5cdFx0fSxcblx0XHR7IGRpcjogXCJwYXJlbnROb2RlXCIsIG5leHQ6IFwibGVnZW5kXCIgfVxuXHQpO1xuXG4vLyBPcHRpbWl6ZSBmb3IgcHVzaC5hcHBseSggXywgTm9kZUxpc3QgKVxudHJ5IHtcblx0cHVzaC5hcHBseShcblx0XHQoIGFyciA9IHNsaWNlLmNhbGwoIHByZWZlcnJlZERvYy5jaGlsZE5vZGVzICkgKSxcblx0XHRwcmVmZXJyZWREb2MuY2hpbGROb2Rlc1xuXHQpO1xuXG5cdC8vIFN1cHBvcnQ6IEFuZHJvaWQ8NC4wXG5cdC8vIERldGVjdCBzaWxlbnRseSBmYWlsaW5nIHB1c2guYXBwbHlcblx0Ly8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXVudXNlZC1leHByZXNzaW9uc1xuXHRhcnJbIHByZWZlcnJlZERvYy5jaGlsZE5vZGVzLmxlbmd0aCBdLm5vZGVUeXBlO1xufSBjYXRjaCAoIGUgKSB7XG5cdHB1c2ggPSB7IGFwcGx5OiBhcnIubGVuZ3RoID9cblxuXHRcdC8vIExldmVyYWdlIHNsaWNlIGlmIHBvc3NpYmxlXG5cdFx0ZnVuY3Rpb24oIHRhcmdldCwgZWxzICkge1xuXHRcdFx0cHVzaE5hdGl2ZS5hcHBseSggdGFyZ2V0LCBzbGljZS5jYWxsKCBlbHMgKSApO1xuXHRcdH0gOlxuXG5cdFx0Ly8gU3VwcG9ydDogSUU8OVxuXHRcdC8vIE90aGVyd2lzZSBhcHBlbmQgZGlyZWN0bHlcblx0XHRmdW5jdGlvbiggdGFyZ2V0LCBlbHMgKSB7XG5cdFx0XHR2YXIgaiA9IHRhcmdldC5sZW5ndGgsXG5cdFx0XHRcdGkgPSAwO1xuXG5cdFx0XHQvLyBDYW4ndCB0cnVzdCBOb2RlTGlzdC5sZW5ndGhcblx0XHRcdHdoaWxlICggKCB0YXJnZXRbIGorKyBdID0gZWxzWyBpKysgXSApICkge31cblx0XHRcdHRhcmdldC5sZW5ndGggPSBqIC0gMTtcblx0XHR9XG5cdH07XG59XG5cbmZ1bmN0aW9uIFNpenpsZSggc2VsZWN0b3IsIGNvbnRleHQsIHJlc3VsdHMsIHNlZWQgKSB7XG5cdHZhciBtLCBpLCBlbGVtLCBuaWQsIG1hdGNoLCBncm91cHMsIG5ld1NlbGVjdG9yLFxuXHRcdG5ld0NvbnRleHQgPSBjb250ZXh0ICYmIGNvbnRleHQub3duZXJEb2N1bWVudCxcblxuXHRcdC8vIG5vZGVUeXBlIGRlZmF1bHRzIHRvIDksIHNpbmNlIGNvbnRleHQgZGVmYXVsdHMgdG8gZG9jdW1lbnRcblx0XHRub2RlVHlwZSA9IGNvbnRleHQgPyBjb250ZXh0Lm5vZGVUeXBlIDogOTtcblxuXHRyZXN1bHRzID0gcmVzdWx0cyB8fCBbXTtcblxuXHQvLyBSZXR1cm4gZWFybHkgZnJvbSBjYWxscyB3aXRoIGludmFsaWQgc2VsZWN0b3Igb3IgY29udGV4dFxuXHRpZiAoIHR5cGVvZiBzZWxlY3RvciAhPT0gXCJzdHJpbmdcIiB8fCAhc2VsZWN0b3IgfHxcblx0XHRub2RlVHlwZSAhPT0gMSAmJiBub2RlVHlwZSAhPT0gOSAmJiBub2RlVHlwZSAhPT0gMTEgKSB7XG5cblx0XHRyZXR1cm4gcmVzdWx0cztcblx0fVxuXG5cdC8vIFRyeSB0byBzaG9ydGN1dCBmaW5kIG9wZXJhdGlvbnMgKGFzIG9wcG9zZWQgdG8gZmlsdGVycykgaW4gSFRNTCBkb2N1bWVudHNcblx0aWYgKCAhc2VlZCApIHtcblx0XHRzZXREb2N1bWVudCggY29udGV4dCApO1xuXHRcdGNvbnRleHQgPSBjb250ZXh0IHx8IGRvY3VtZW50O1xuXG5cdFx0aWYgKCBkb2N1bWVudElzSFRNTCApIHtcblxuXHRcdFx0Ly8gSWYgdGhlIHNlbGVjdG9yIGlzIHN1ZmZpY2llbnRseSBzaW1wbGUsIHRyeSB1c2luZyBhIFwiZ2V0KkJ5KlwiIERPTSBtZXRob2Rcblx0XHRcdC8vIChleGNlcHRpbmcgRG9jdW1lbnRGcmFnbWVudCBjb250ZXh0LCB3aGVyZSB0aGUgbWV0aG9kcyBkb24ndCBleGlzdClcblx0XHRcdGlmICggbm9kZVR5cGUgIT09IDExICYmICggbWF0Y2ggPSBycXVpY2tFeHByLmV4ZWMoIHNlbGVjdG9yICkgKSApIHtcblxuXHRcdFx0XHQvLyBJRCBzZWxlY3RvclxuXHRcdFx0XHRpZiAoICggbSA9IG1hdGNoWyAxIF0gKSApIHtcblxuXHRcdFx0XHRcdC8vIERvY3VtZW50IGNvbnRleHRcblx0XHRcdFx0XHRpZiAoIG5vZGVUeXBlID09PSA5ICkge1xuXHRcdFx0XHRcdFx0aWYgKCAoIGVsZW0gPSBjb250ZXh0LmdldEVsZW1lbnRCeUlkKCBtICkgKSApIHtcblxuXHRcdFx0XHRcdFx0XHQvLyBTdXBwb3J0OiBJRSwgT3BlcmEsIFdlYmtpdFxuXHRcdFx0XHRcdFx0XHQvLyBUT0RPOiBpZGVudGlmeSB2ZXJzaW9uc1xuXHRcdFx0XHRcdFx0XHQvLyBnZXRFbGVtZW50QnlJZCBjYW4gbWF0Y2ggZWxlbWVudHMgYnkgbmFtZSBpbnN0ZWFkIG9mIElEXG5cdFx0XHRcdFx0XHRcdGlmICggZWxlbS5pZCA9PT0gbSApIHtcblx0XHRcdFx0XHRcdFx0XHRyZXN1bHRzLnB1c2goIGVsZW0gKTtcblx0XHRcdFx0XHRcdFx0XHRyZXR1cm4gcmVzdWx0cztcblx0XHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHRcdFx0cmV0dXJuIHJlc3VsdHM7XG5cdFx0XHRcdFx0XHR9XG5cblx0XHRcdFx0XHQvLyBFbGVtZW50IGNvbnRleHRcblx0XHRcdFx0XHR9IGVsc2Uge1xuXG5cdFx0XHRcdFx0XHQvLyBTdXBwb3J0OiBJRSwgT3BlcmEsIFdlYmtpdFxuXHRcdFx0XHRcdFx0Ly8gVE9ETzogaWRlbnRpZnkgdmVyc2lvbnNcblx0XHRcdFx0XHRcdC8vIGdldEVsZW1lbnRCeUlkIGNhbiBtYXRjaCBlbGVtZW50cyBieSBuYW1lIGluc3RlYWQgb2YgSURcblx0XHRcdFx0XHRcdGlmICggbmV3Q29udGV4dCAmJiAoIGVsZW0gPSBuZXdDb250ZXh0LmdldEVsZW1lbnRCeUlkKCBtICkgKSAmJlxuXHRcdFx0XHRcdFx0XHRjb250YWlucyggY29udGV4dCwgZWxlbSApICYmXG5cdFx0XHRcdFx0XHRcdGVsZW0uaWQgPT09IG0gKSB7XG5cblx0XHRcdFx0XHRcdFx0cmVzdWx0cy5wdXNoKCBlbGVtICk7XG5cdFx0XHRcdFx0XHRcdHJldHVybiByZXN1bHRzO1xuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdH1cblxuXHRcdFx0XHQvLyBUeXBlIHNlbGVjdG9yXG5cdFx0XHRcdH0gZWxzZSBpZiAoIG1hdGNoWyAyIF0gKSB7XG5cdFx0XHRcdFx0cHVzaC5hcHBseSggcmVzdWx0cywgY29udGV4dC5nZXRFbGVtZW50c0J5VGFnTmFtZSggc2VsZWN0b3IgKSApO1xuXHRcdFx0XHRcdHJldHVybiByZXN1bHRzO1xuXG5cdFx0XHRcdC8vIENsYXNzIHNlbGVjdG9yXG5cdFx0XHRcdH0gZWxzZSBpZiAoICggbSA9IG1hdGNoWyAzIF0gKSAmJiBzdXBwb3J0LmdldEVsZW1lbnRzQnlDbGFzc05hbWUgJiZcblx0XHRcdFx0XHRjb250ZXh0LmdldEVsZW1lbnRzQnlDbGFzc05hbWUgKSB7XG5cblx0XHRcdFx0XHRwdXNoLmFwcGx5KCByZXN1bHRzLCBjb250ZXh0LmdldEVsZW1lbnRzQnlDbGFzc05hbWUoIG0gKSApO1xuXHRcdFx0XHRcdHJldHVybiByZXN1bHRzO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cblx0XHRcdC8vIFRha2UgYWR2YW50YWdlIG9mIHF1ZXJ5U2VsZWN0b3JBbGxcblx0XHRcdGlmICggc3VwcG9ydC5xc2EgJiZcblx0XHRcdFx0IW5vbm5hdGl2ZVNlbGVjdG9yQ2FjaGVbIHNlbGVjdG9yICsgXCIgXCIgXSAmJlxuXHRcdFx0XHQoICFyYnVnZ3lRU0EgfHwgIXJidWdneVFTQS50ZXN0KCBzZWxlY3RvciApICkgJiZcblxuXHRcdFx0XHQvLyBTdXBwb3J0OiBJRSA4IG9ubHlcblx0XHRcdFx0Ly8gRXhjbHVkZSBvYmplY3QgZWxlbWVudHNcblx0XHRcdFx0KCBub2RlVHlwZSAhPT0gMSB8fCBjb250ZXh0Lm5vZGVOYW1lLnRvTG93ZXJDYXNlKCkgIT09IFwib2JqZWN0XCIgKSApIHtcblxuXHRcdFx0XHRuZXdTZWxlY3RvciA9IHNlbGVjdG9yO1xuXHRcdFx0XHRuZXdDb250ZXh0ID0gY29udGV4dDtcblxuXHRcdFx0XHQvLyBxU0EgY29uc2lkZXJzIGVsZW1lbnRzIG91dHNpZGUgYSBzY29waW5nIHJvb3Qgd2hlbiBldmFsdWF0aW5nIGNoaWxkIG9yXG5cdFx0XHRcdC8vIGRlc2NlbmRhbnQgY29tYmluYXRvcnMsIHdoaWNoIGlzIG5vdCB3aGF0IHdlIHdhbnQuXG5cdFx0XHRcdC8vIEluIHN1Y2ggY2FzZXMsIHdlIHdvcmsgYXJvdW5kIHRoZSBiZWhhdmlvciBieSBwcmVmaXhpbmcgZXZlcnkgc2VsZWN0b3IgaW4gdGhlXG5cdFx0XHRcdC8vIGxpc3Qgd2l0aCBhbiBJRCBzZWxlY3RvciByZWZlcmVuY2luZyB0aGUgc2NvcGUgY29udGV4dC5cblx0XHRcdFx0Ly8gVGhlIHRlY2huaXF1ZSBoYXMgdG8gYmUgdXNlZCBhcyB3ZWxsIHdoZW4gYSBsZWFkaW5nIGNvbWJpbmF0b3IgaXMgdXNlZFxuXHRcdFx0XHQvLyBhcyBzdWNoIHNlbGVjdG9ycyBhcmUgbm90IHJlY29nbml6ZWQgYnkgcXVlcnlTZWxlY3RvckFsbC5cblx0XHRcdFx0Ly8gVGhhbmtzIHRvIEFuZHJldyBEdXBvbnQgZm9yIHRoaXMgdGVjaG5pcXVlLlxuXHRcdFx0XHRpZiAoIG5vZGVUeXBlID09PSAxICYmXG5cdFx0XHRcdFx0KCByZGVzY2VuZC50ZXN0KCBzZWxlY3RvciApIHx8IHJjb21iaW5hdG9ycy50ZXN0KCBzZWxlY3RvciApICkgKSB7XG5cblx0XHRcdFx0XHQvLyBFeHBhbmQgY29udGV4dCBmb3Igc2libGluZyBzZWxlY3RvcnNcblx0XHRcdFx0XHRuZXdDb250ZXh0ID0gcnNpYmxpbmcudGVzdCggc2VsZWN0b3IgKSAmJiB0ZXN0Q29udGV4dCggY29udGV4dC5wYXJlbnROb2RlICkgfHxcblx0XHRcdFx0XHRcdGNvbnRleHQ7XG5cblx0XHRcdFx0XHQvLyBXZSBjYW4gdXNlIDpzY29wZSBpbnN0ZWFkIG9mIHRoZSBJRCBoYWNrIGlmIHRoZSBicm93c2VyXG5cdFx0XHRcdFx0Ly8gc3VwcG9ydHMgaXQgJiBpZiB3ZSdyZSBub3QgY2hhbmdpbmcgdGhlIGNvbnRleHQuXG5cdFx0XHRcdFx0aWYgKCBuZXdDb250ZXh0ICE9PSBjb250ZXh0IHx8ICFzdXBwb3J0LnNjb3BlICkge1xuXG5cdFx0XHRcdFx0XHQvLyBDYXB0dXJlIHRoZSBjb250ZXh0IElELCBzZXR0aW5nIGl0IGZpcnN0IGlmIG5lY2Vzc2FyeVxuXHRcdFx0XHRcdFx0aWYgKCAoIG5pZCA9IGNvbnRleHQuZ2V0QXR0cmlidXRlKCBcImlkXCIgKSApICkge1xuXHRcdFx0XHRcdFx0XHRuaWQgPSBuaWQucmVwbGFjZSggcmNzc2VzY2FwZSwgZmNzc2VzY2FwZSApO1xuXHRcdFx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHRcdFx0Y29udGV4dC5zZXRBdHRyaWJ1dGUoIFwiaWRcIiwgKCBuaWQgPSBleHBhbmRvICkgKTtcblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHR9XG5cblx0XHRcdFx0XHQvLyBQcmVmaXggZXZlcnkgc2VsZWN0b3IgaW4gdGhlIGxpc3Rcblx0XHRcdFx0XHRncm91cHMgPSB0b2tlbml6ZSggc2VsZWN0b3IgKTtcblx0XHRcdFx0XHRpID0gZ3JvdXBzLmxlbmd0aDtcblx0XHRcdFx0XHR3aGlsZSAoIGktLSApIHtcblx0XHRcdFx0XHRcdGdyb3Vwc1sgaSBdID0gKCBuaWQgPyBcIiNcIiArIG5pZCA6IFwiOnNjb3BlXCIgKSArIFwiIFwiICtcblx0XHRcdFx0XHRcdFx0dG9TZWxlY3RvciggZ3JvdXBzWyBpIF0gKTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0bmV3U2VsZWN0b3IgPSBncm91cHMuam9pbiggXCIsXCIgKTtcblx0XHRcdFx0fVxuXG5cdFx0XHRcdHRyeSB7XG5cdFx0XHRcdFx0cHVzaC5hcHBseSggcmVzdWx0cyxcblx0XHRcdFx0XHRcdG5ld0NvbnRleHQucXVlcnlTZWxlY3RvckFsbCggbmV3U2VsZWN0b3IgKVxuXHRcdFx0XHRcdCk7XG5cdFx0XHRcdFx0cmV0dXJuIHJlc3VsdHM7XG5cdFx0XHRcdH0gY2F0Y2ggKCBxc2FFcnJvciApIHtcblx0XHRcdFx0XHRub25uYXRpdmVTZWxlY3RvckNhY2hlKCBzZWxlY3RvciwgdHJ1ZSApO1xuXHRcdFx0XHR9IGZpbmFsbHkge1xuXHRcdFx0XHRcdGlmICggbmlkID09PSBleHBhbmRvICkge1xuXHRcdFx0XHRcdFx0Y29udGV4dC5yZW1vdmVBdHRyaWJ1dGUoIFwiaWRcIiApO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH1cblx0fVxuXG5cdC8vIEFsbCBvdGhlcnNcblx0cmV0dXJuIHNlbGVjdCggc2VsZWN0b3IucmVwbGFjZSggcnRyaW0sIFwiJDFcIiApLCBjb250ZXh0LCByZXN1bHRzLCBzZWVkICk7XG59XG5cbi8qKlxuICogQ3JlYXRlIGtleS12YWx1ZSBjYWNoZXMgb2YgbGltaXRlZCBzaXplXG4gKiBAcmV0dXJucyB7ZnVuY3Rpb24oc3RyaW5nLCBvYmplY3QpfSBSZXR1cm5zIHRoZSBPYmplY3QgZGF0YSBhZnRlciBzdG9yaW5nIGl0IG9uIGl0c2VsZiB3aXRoXG4gKlx0cHJvcGVydHkgbmFtZSB0aGUgKHNwYWNlLXN1ZmZpeGVkKSBzdHJpbmcgYW5kIChpZiB0aGUgY2FjaGUgaXMgbGFyZ2VyIHRoYW4gRXhwci5jYWNoZUxlbmd0aClcbiAqXHRkZWxldGluZyB0aGUgb2xkZXN0IGVudHJ5XG4gKi9cbmZ1bmN0aW9uIGNyZWF0ZUNhY2hlKCkge1xuXHR2YXIga2V5cyA9IFtdO1xuXG5cdGZ1bmN0aW9uIGNhY2hlKCBrZXksIHZhbHVlICkge1xuXG5cdFx0Ly8gVXNlIChrZXkgKyBcIiBcIikgdG8gYXZvaWQgY29sbGlzaW9uIHdpdGggbmF0aXZlIHByb3RvdHlwZSBwcm9wZXJ0aWVzIChzZWUgSXNzdWUgIzE1Nylcblx0XHRpZiAoIGtleXMucHVzaCgga2V5ICsgXCIgXCIgKSA+IEV4cHIuY2FjaGVMZW5ndGggKSB7XG5cblx0XHRcdC8vIE9ubHkga2VlcCB0aGUgbW9zdCByZWNlbnQgZW50cmllc1xuXHRcdFx0ZGVsZXRlIGNhY2hlWyBrZXlzLnNoaWZ0KCkgXTtcblx0XHR9XG5cdFx0cmV0dXJuICggY2FjaGVbIGtleSArIFwiIFwiIF0gPSB2YWx1ZSApO1xuXHR9XG5cdHJldHVybiBjYWNoZTtcbn1cblxuLyoqXG4gKiBNYXJrIGEgZnVuY3Rpb24gZm9yIHNwZWNpYWwgdXNlIGJ5IFNpenpsZVxuICogQHBhcmFtIHtGdW5jdGlvbn0gZm4gVGhlIGZ1bmN0aW9uIHRvIG1hcmtcbiAqL1xuZnVuY3Rpb24gbWFya0Z1bmN0aW9uKCBmbiApIHtcblx0Zm5bIGV4cGFuZG8gXSA9IHRydWU7XG5cdHJldHVybiBmbjtcbn1cblxuLyoqXG4gKiBTdXBwb3J0IHRlc3RpbmcgdXNpbmcgYW4gZWxlbWVudFxuICogQHBhcmFtIHtGdW5jdGlvbn0gZm4gUGFzc2VkIHRoZSBjcmVhdGVkIGVsZW1lbnQgYW5kIHJldHVybnMgYSBib29sZWFuIHJlc3VsdFxuICovXG5mdW5jdGlvbiBhc3NlcnQoIGZuICkge1xuXHR2YXIgZWwgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCBcImZpZWxkc2V0XCIgKTtcblxuXHR0cnkge1xuXHRcdHJldHVybiAhIWZuKCBlbCApO1xuXHR9IGNhdGNoICggZSApIHtcblx0XHRyZXR1cm4gZmFsc2U7XG5cdH0gZmluYWxseSB7XG5cblx0XHQvLyBSZW1vdmUgZnJvbSBpdHMgcGFyZW50IGJ5IGRlZmF1bHRcblx0XHRpZiAoIGVsLnBhcmVudE5vZGUgKSB7XG5cdFx0XHRlbC5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKCBlbCApO1xuXHRcdH1cblxuXHRcdC8vIHJlbGVhc2UgbWVtb3J5IGluIElFXG5cdFx0ZWwgPSBudWxsO1xuXHR9XG59XG5cbi8qKlxuICogQWRkcyB0aGUgc2FtZSBoYW5kbGVyIGZvciBhbGwgb2YgdGhlIHNwZWNpZmllZCBhdHRyc1xuICogQHBhcmFtIHtTdHJpbmd9IGF0dHJzIFBpcGUtc2VwYXJhdGVkIGxpc3Qgb2YgYXR0cmlidXRlc1xuICogQHBhcmFtIHtGdW5jdGlvbn0gaGFuZGxlciBUaGUgbWV0aG9kIHRoYXQgd2lsbCBiZSBhcHBsaWVkXG4gKi9cbmZ1bmN0aW9uIGFkZEhhbmRsZSggYXR0cnMsIGhhbmRsZXIgKSB7XG5cdHZhciBhcnIgPSBhdHRycy5zcGxpdCggXCJ8XCIgKSxcblx0XHRpID0gYXJyLmxlbmd0aDtcblxuXHR3aGlsZSAoIGktLSApIHtcblx0XHRFeHByLmF0dHJIYW5kbGVbIGFyclsgaSBdIF0gPSBoYW5kbGVyO1xuXHR9XG59XG5cbi8qKlxuICogQ2hlY2tzIGRvY3VtZW50IG9yZGVyIG9mIHR3byBzaWJsaW5nc1xuICogQHBhcmFtIHtFbGVtZW50fSBhXG4gKiBAcGFyYW0ge0VsZW1lbnR9IGJcbiAqIEByZXR1cm5zIHtOdW1iZXJ9IFJldHVybnMgbGVzcyB0aGFuIDAgaWYgYSBwcmVjZWRlcyBiLCBncmVhdGVyIHRoYW4gMCBpZiBhIGZvbGxvd3MgYlxuICovXG5mdW5jdGlvbiBzaWJsaW5nQ2hlY2soIGEsIGIgKSB7XG5cdHZhciBjdXIgPSBiICYmIGEsXG5cdFx0ZGlmZiA9IGN1ciAmJiBhLm5vZGVUeXBlID09PSAxICYmIGIubm9kZVR5cGUgPT09IDEgJiZcblx0XHRcdGEuc291cmNlSW5kZXggLSBiLnNvdXJjZUluZGV4O1xuXG5cdC8vIFVzZSBJRSBzb3VyY2VJbmRleCBpZiBhdmFpbGFibGUgb24gYm90aCBub2Rlc1xuXHRpZiAoIGRpZmYgKSB7XG5cdFx0cmV0dXJuIGRpZmY7XG5cdH1cblxuXHQvLyBDaGVjayBpZiBiIGZvbGxvd3MgYVxuXHRpZiAoIGN1ciApIHtcblx0XHR3aGlsZSAoICggY3VyID0gY3VyLm5leHRTaWJsaW5nICkgKSB7XG5cdFx0XHRpZiAoIGN1ciA9PT0gYiApIHtcblx0XHRcdFx0cmV0dXJuIC0xO1xuXHRcdFx0fVxuXHRcdH1cblx0fVxuXG5cdHJldHVybiBhID8gMSA6IC0xO1xufVxuXG4vKipcbiAqIFJldHVybnMgYSBmdW5jdGlvbiB0byB1c2UgaW4gcHNldWRvcyBmb3IgaW5wdXQgdHlwZXNcbiAqIEBwYXJhbSB7U3RyaW5nfSB0eXBlXG4gKi9cbmZ1bmN0aW9uIGNyZWF0ZUlucHV0UHNldWRvKCB0eXBlICkge1xuXHRyZXR1cm4gZnVuY3Rpb24oIGVsZW0gKSB7XG5cdFx0dmFyIG5hbWUgPSBlbGVtLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCk7XG5cdFx0cmV0dXJuIG5hbWUgPT09IFwiaW5wdXRcIiAmJiBlbGVtLnR5cGUgPT09IHR5cGU7XG5cdH07XG59XG5cbi8qKlxuICogUmV0dXJucyBhIGZ1bmN0aW9uIHRvIHVzZSBpbiBwc2V1ZG9zIGZvciBidXR0b25zXG4gKiBAcGFyYW0ge1N0cmluZ30gdHlwZVxuICovXG5mdW5jdGlvbiBjcmVhdGVCdXR0b25Qc2V1ZG8oIHR5cGUgKSB7XG5cdHJldHVybiBmdW5jdGlvbiggZWxlbSApIHtcblx0XHR2YXIgbmFtZSA9IGVsZW0ubm9kZU5hbWUudG9Mb3dlckNhc2UoKTtcblx0XHRyZXR1cm4gKCBuYW1lID09PSBcImlucHV0XCIgfHwgbmFtZSA9PT0gXCJidXR0b25cIiApICYmIGVsZW0udHlwZSA9PT0gdHlwZTtcblx0fTtcbn1cblxuLyoqXG4gKiBSZXR1cm5zIGEgZnVuY3Rpb24gdG8gdXNlIGluIHBzZXVkb3MgZm9yIDplbmFibGVkLzpkaXNhYmxlZFxuICogQHBhcmFtIHtCb29sZWFufSBkaXNhYmxlZCB0cnVlIGZvciA6ZGlzYWJsZWQ7IGZhbHNlIGZvciA6ZW5hYmxlZFxuICovXG5mdW5jdGlvbiBjcmVhdGVEaXNhYmxlZFBzZXVkbyggZGlzYWJsZWQgKSB7XG5cblx0Ly8gS25vd24gOmRpc2FibGVkIGZhbHNlIHBvc2l0aXZlczogZmllbGRzZXRbZGlzYWJsZWRdID4gbGVnZW5kOm50aC1vZi10eXBlKG4rMikgOmNhbi1kaXNhYmxlXG5cdHJldHVybiBmdW5jdGlvbiggZWxlbSApIHtcblxuXHRcdC8vIE9ubHkgY2VydGFpbiBlbGVtZW50cyBjYW4gbWF0Y2ggOmVuYWJsZWQgb3IgOmRpc2FibGVkXG5cdFx0Ly8gaHR0cHM6Ly9odG1sLnNwZWMud2hhdHdnLm9yZy9tdWx0aXBhZ2Uvc2NyaXB0aW5nLmh0bWwjc2VsZWN0b3ItZW5hYmxlZFxuXHRcdC8vIGh0dHBzOi8vaHRtbC5zcGVjLndoYXR3Zy5vcmcvbXVsdGlwYWdlL3NjcmlwdGluZy5odG1sI3NlbGVjdG9yLWRpc2FibGVkXG5cdFx0aWYgKCBcImZvcm1cIiBpbiBlbGVtICkge1xuXG5cdFx0XHQvLyBDaGVjayBmb3IgaW5oZXJpdGVkIGRpc2FibGVkbmVzcyBvbiByZWxldmFudCBub24tZGlzYWJsZWQgZWxlbWVudHM6XG5cdFx0XHQvLyAqIGxpc3RlZCBmb3JtLWFzc29jaWF0ZWQgZWxlbWVudHMgaW4gYSBkaXNhYmxlZCBmaWVsZHNldFxuXHRcdFx0Ly8gICBodHRwczovL2h0bWwuc3BlYy53aGF0d2cub3JnL211bHRpcGFnZS9mb3Jtcy5odG1sI2NhdGVnb3J5LWxpc3RlZFxuXHRcdFx0Ly8gICBodHRwczovL2h0bWwuc3BlYy53aGF0d2cub3JnL211bHRpcGFnZS9mb3Jtcy5odG1sI2NvbmNlcHQtZmUtZGlzYWJsZWRcblx0XHRcdC8vICogb3B0aW9uIGVsZW1lbnRzIGluIGEgZGlzYWJsZWQgb3B0Z3JvdXBcblx0XHRcdC8vICAgaHR0cHM6Ly9odG1sLnNwZWMud2hhdHdnLm9yZy9tdWx0aXBhZ2UvZm9ybXMuaHRtbCNjb25jZXB0LW9wdGlvbi1kaXNhYmxlZFxuXHRcdFx0Ly8gQWxsIHN1Y2ggZWxlbWVudHMgaGF2ZSBhIFwiZm9ybVwiIHByb3BlcnR5LlxuXHRcdFx0aWYgKCBlbGVtLnBhcmVudE5vZGUgJiYgZWxlbS5kaXNhYmxlZCA9PT0gZmFsc2UgKSB7XG5cblx0XHRcdFx0Ly8gT3B0aW9uIGVsZW1lbnRzIGRlZmVyIHRvIGEgcGFyZW50IG9wdGdyb3VwIGlmIHByZXNlbnRcblx0XHRcdFx0aWYgKCBcImxhYmVsXCIgaW4gZWxlbSApIHtcblx0XHRcdFx0XHRpZiAoIFwibGFiZWxcIiBpbiBlbGVtLnBhcmVudE5vZGUgKSB7XG5cdFx0XHRcdFx0XHRyZXR1cm4gZWxlbS5wYXJlbnROb2RlLmRpc2FibGVkID09PSBkaXNhYmxlZDtcblx0XHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdFx0cmV0dXJuIGVsZW0uZGlzYWJsZWQgPT09IGRpc2FibGVkO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXG5cdFx0XHRcdC8vIFN1cHBvcnQ6IElFIDYgLSAxMVxuXHRcdFx0XHQvLyBVc2UgdGhlIGlzRGlzYWJsZWQgc2hvcnRjdXQgcHJvcGVydHkgdG8gY2hlY2sgZm9yIGRpc2FibGVkIGZpZWxkc2V0IGFuY2VzdG9yc1xuXHRcdFx0XHRyZXR1cm4gZWxlbS5pc0Rpc2FibGVkID09PSBkaXNhYmxlZCB8fFxuXG5cdFx0XHRcdFx0Ly8gV2hlcmUgdGhlcmUgaXMgbm8gaXNEaXNhYmxlZCwgY2hlY2sgbWFudWFsbHlcblx0XHRcdFx0XHQvKiBqc2hpbnQgLVcwMTggKi9cblx0XHRcdFx0XHRlbGVtLmlzRGlzYWJsZWQgIT09ICFkaXNhYmxlZCAmJlxuXHRcdFx0XHRcdGluRGlzYWJsZWRGaWVsZHNldCggZWxlbSApID09PSBkaXNhYmxlZDtcblx0XHRcdH1cblxuXHRcdFx0cmV0dXJuIGVsZW0uZGlzYWJsZWQgPT09IGRpc2FibGVkO1xuXG5cdFx0Ly8gVHJ5IHRvIHdpbm5vdyBvdXQgZWxlbWVudHMgdGhhdCBjYW4ndCBiZSBkaXNhYmxlZCBiZWZvcmUgdHJ1c3RpbmcgdGhlIGRpc2FibGVkIHByb3BlcnR5LlxuXHRcdC8vIFNvbWUgdmljdGltcyBnZXQgY2F1Z2h0IGluIG91ciBuZXQgKGxhYmVsLCBsZWdlbmQsIG1lbnUsIHRyYWNrKSwgYnV0IGl0IHNob3VsZG4ndFxuXHRcdC8vIGV2ZW4gZXhpc3Qgb24gdGhlbSwgbGV0IGFsb25lIGhhdmUgYSBib29sZWFuIHZhbHVlLlxuXHRcdH0gZWxzZSBpZiAoIFwibGFiZWxcIiBpbiBlbGVtICkge1xuXHRcdFx0cmV0dXJuIGVsZW0uZGlzYWJsZWQgPT09IGRpc2FibGVkO1xuXHRcdH1cblxuXHRcdC8vIFJlbWFpbmluZyBlbGVtZW50cyBhcmUgbmVpdGhlciA6ZW5hYmxlZCBub3IgOmRpc2FibGVkXG5cdFx0cmV0dXJuIGZhbHNlO1xuXHR9O1xufVxuXG4vKipcbiAqIFJldHVybnMgYSBmdW5jdGlvbiB0byB1c2UgaW4gcHNldWRvcyBmb3IgcG9zaXRpb25hbHNcbiAqIEBwYXJhbSB7RnVuY3Rpb259IGZuXG4gKi9cbmZ1bmN0aW9uIGNyZWF0ZVBvc2l0aW9uYWxQc2V1ZG8oIGZuICkge1xuXHRyZXR1cm4gbWFya0Z1bmN0aW9uKCBmdW5jdGlvbiggYXJndW1lbnQgKSB7XG5cdFx0YXJndW1lbnQgPSArYXJndW1lbnQ7XG5cdFx0cmV0dXJuIG1hcmtGdW5jdGlvbiggZnVuY3Rpb24oIHNlZWQsIG1hdGNoZXMgKSB7XG5cdFx0XHR2YXIgaixcblx0XHRcdFx0bWF0Y2hJbmRleGVzID0gZm4oIFtdLCBzZWVkLmxlbmd0aCwgYXJndW1lbnQgKSxcblx0XHRcdFx0aSA9IG1hdGNoSW5kZXhlcy5sZW5ndGg7XG5cblx0XHRcdC8vIE1hdGNoIGVsZW1lbnRzIGZvdW5kIGF0IHRoZSBzcGVjaWZpZWQgaW5kZXhlc1xuXHRcdFx0d2hpbGUgKCBpLS0gKSB7XG5cdFx0XHRcdGlmICggc2VlZFsgKCBqID0gbWF0Y2hJbmRleGVzWyBpIF0gKSBdICkge1xuXHRcdFx0XHRcdHNlZWRbIGogXSA9ICEoIG1hdGNoZXNbIGogXSA9IHNlZWRbIGogXSApO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fSApO1xuXHR9ICk7XG59XG5cbi8qKlxuICogQ2hlY2tzIGEgbm9kZSBmb3IgdmFsaWRpdHkgYXMgYSBTaXp6bGUgY29udGV4dFxuICogQHBhcmFtIHtFbGVtZW50fE9iamVjdD19IGNvbnRleHRcbiAqIEByZXR1cm5zIHtFbGVtZW50fE9iamVjdHxCb29sZWFufSBUaGUgaW5wdXQgbm9kZSBpZiBhY2NlcHRhYmxlLCBvdGhlcndpc2UgYSBmYWxzeSB2YWx1ZVxuICovXG5mdW5jdGlvbiB0ZXN0Q29udGV4dCggY29udGV4dCApIHtcblx0cmV0dXJuIGNvbnRleHQgJiYgdHlwZW9mIGNvbnRleHQuZ2V0RWxlbWVudHNCeVRhZ05hbWUgIT09IFwidW5kZWZpbmVkXCIgJiYgY29udGV4dDtcbn1cblxuLy8gRXhwb3NlIHN1cHBvcnQgdmFycyBmb3IgY29udmVuaWVuY2VcbnN1cHBvcnQgPSBTaXp6bGUuc3VwcG9ydCA9IHt9O1xuXG4vKipcbiAqIERldGVjdHMgWE1MIG5vZGVzXG4gKiBAcGFyYW0ge0VsZW1lbnR8T2JqZWN0fSBlbGVtIEFuIGVsZW1lbnQgb3IgYSBkb2N1bWVudFxuICogQHJldHVybnMge0Jvb2xlYW59IFRydWUgaWZmIGVsZW0gaXMgYSBub24tSFRNTCBYTUwgbm9kZVxuICovXG5pc1hNTCA9IFNpenpsZS5pc1hNTCA9IGZ1bmN0aW9uKCBlbGVtICkge1xuXHR2YXIgbmFtZXNwYWNlID0gZWxlbS5uYW1lc3BhY2VVUkksXG5cdFx0ZG9jRWxlbSA9ICggZWxlbS5vd25lckRvY3VtZW50IHx8IGVsZW0gKS5kb2N1bWVudEVsZW1lbnQ7XG5cblx0Ly8gU3VwcG9ydDogSUUgPD04XG5cdC8vIEFzc3VtZSBIVE1MIHdoZW4gZG9jdW1lbnRFbGVtZW50IGRvZXNuJ3QgeWV0IGV4aXN0LCBzdWNoIGFzIGluc2lkZSBsb2FkaW5nIGlmcmFtZXNcblx0Ly8gaHR0cHM6Ly9idWdzLmpxdWVyeS5jb20vdGlja2V0LzQ4MzNcblx0cmV0dXJuICFyaHRtbC50ZXN0KCBuYW1lc3BhY2UgfHwgZG9jRWxlbSAmJiBkb2NFbGVtLm5vZGVOYW1lIHx8IFwiSFRNTFwiICk7XG59O1xuXG4vKipcbiAqIFNldHMgZG9jdW1lbnQtcmVsYXRlZCB2YXJpYWJsZXMgb25jZSBiYXNlZCBvbiB0aGUgY3VycmVudCBkb2N1bWVudFxuICogQHBhcmFtIHtFbGVtZW50fE9iamVjdH0gW2RvY10gQW4gZWxlbWVudCBvciBkb2N1bWVudCBvYmplY3QgdG8gdXNlIHRvIHNldCB0aGUgZG9jdW1lbnRcbiAqIEByZXR1cm5zIHtPYmplY3R9IFJldHVybnMgdGhlIGN1cnJlbnQgZG9jdW1lbnRcbiAqL1xuc2V0RG9jdW1lbnQgPSBTaXp6bGUuc2V0RG9jdW1lbnQgPSBmdW5jdGlvbiggbm9kZSApIHtcblx0dmFyIGhhc0NvbXBhcmUsIHN1YldpbmRvdyxcblx0XHRkb2MgPSBub2RlID8gbm9kZS5vd25lckRvY3VtZW50IHx8IG5vZGUgOiBwcmVmZXJyZWREb2M7XG5cblx0Ly8gUmV0dXJuIGVhcmx5IGlmIGRvYyBpcyBpbnZhbGlkIG9yIGFscmVhZHkgc2VsZWN0ZWRcblx0Ly8gU3VwcG9ydDogSUUgMTErLCBFZGdlIDE3IC0gMTgrXG5cdC8vIElFL0VkZ2Ugc29tZXRpbWVzIHRocm93IGEgXCJQZXJtaXNzaW9uIGRlbmllZFwiIGVycm9yIHdoZW4gc3RyaWN0LWNvbXBhcmluZ1xuXHQvLyB0d28gZG9jdW1lbnRzOyBzaGFsbG93IGNvbXBhcmlzb25zIHdvcmsuXG5cdC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBlcWVxZXFcblx0aWYgKCBkb2MgPT0gZG9jdW1lbnQgfHwgZG9jLm5vZGVUeXBlICE9PSA5IHx8ICFkb2MuZG9jdW1lbnRFbGVtZW50ICkge1xuXHRcdHJldHVybiBkb2N1bWVudDtcblx0fVxuXG5cdC8vIFVwZGF0ZSBnbG9iYWwgdmFyaWFibGVzXG5cdGRvY3VtZW50ID0gZG9jO1xuXHRkb2NFbGVtID0gZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50O1xuXHRkb2N1bWVudElzSFRNTCA9ICFpc1hNTCggZG9jdW1lbnQgKTtcblxuXHQvLyBTdXBwb3J0OiBJRSA5IC0gMTErLCBFZGdlIDEyIC0gMTgrXG5cdC8vIEFjY2Vzc2luZyBpZnJhbWUgZG9jdW1lbnRzIGFmdGVyIHVubG9hZCB0aHJvd3MgXCJwZXJtaXNzaW9uIGRlbmllZFwiIGVycm9ycyAoalF1ZXJ5ICMxMzkzNilcblx0Ly8gU3VwcG9ydDogSUUgMTErLCBFZGdlIDE3IC0gMTgrXG5cdC8vIElFL0VkZ2Ugc29tZXRpbWVzIHRocm93IGEgXCJQZXJtaXNzaW9uIGRlbmllZFwiIGVycm9yIHdoZW4gc3RyaWN0LWNvbXBhcmluZ1xuXHQvLyB0d28gZG9jdW1lbnRzOyBzaGFsbG93IGNvbXBhcmlzb25zIHdvcmsuXG5cdC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBlcWVxZXFcblx0aWYgKCBwcmVmZXJyZWREb2MgIT0gZG9jdW1lbnQgJiZcblx0XHQoIHN1YldpbmRvdyA9IGRvY3VtZW50LmRlZmF1bHRWaWV3ICkgJiYgc3ViV2luZG93LnRvcCAhPT0gc3ViV2luZG93ICkge1xuXG5cdFx0Ly8gU3VwcG9ydDogSUUgMTEsIEVkZ2Vcblx0XHRpZiAoIHN1YldpbmRvdy5hZGRFdmVudExpc3RlbmVyICkge1xuXHRcdFx0c3ViV2luZG93LmFkZEV2ZW50TGlzdGVuZXIoIFwidW5sb2FkXCIsIHVubG9hZEhhbmRsZXIsIGZhbHNlICk7XG5cblx0XHQvLyBTdXBwb3J0OiBJRSA5IC0gMTAgb25seVxuXHRcdH0gZWxzZSBpZiAoIHN1YldpbmRvdy5hdHRhY2hFdmVudCApIHtcblx0XHRcdHN1YldpbmRvdy5hdHRhY2hFdmVudCggXCJvbnVubG9hZFwiLCB1bmxvYWRIYW5kbGVyICk7XG5cdFx0fVxuXHR9XG5cblx0Ly8gU3VwcG9ydDogSUUgOCAtIDExKywgRWRnZSAxMiAtIDE4KywgQ2hyb21lIDw9MTYgLSAyNSBvbmx5LCBGaXJlZm94IDw9My42IC0gMzEgb25seSxcblx0Ly8gU2FmYXJpIDQgLSA1IG9ubHksIE9wZXJhIDw9MTEuNiAtIDEyLnggb25seVxuXHQvLyBJRS9FZGdlICYgb2xkZXIgYnJvd3NlcnMgZG9uJ3Qgc3VwcG9ydCB0aGUgOnNjb3BlIHBzZXVkby1jbGFzcy5cblx0Ly8gU3VwcG9ydDogU2FmYXJpIDYuMCBvbmx5XG5cdC8vIFNhZmFyaSA2LjAgc3VwcG9ydHMgOnNjb3BlIGJ1dCBpdCdzIGFuIGFsaWFzIG9mIDpyb290IHRoZXJlLlxuXHRzdXBwb3J0LnNjb3BlID0gYXNzZXJ0KCBmdW5jdGlvbiggZWwgKSB7XG5cdFx0ZG9jRWxlbS5hcHBlbmRDaGlsZCggZWwgKS5hcHBlbmRDaGlsZCggZG9jdW1lbnQuY3JlYXRlRWxlbWVudCggXCJkaXZcIiApICk7XG5cdFx0cmV0dXJuIHR5cGVvZiBlbC5xdWVyeVNlbGVjdG9yQWxsICE9PSBcInVuZGVmaW5lZFwiICYmXG5cdFx0XHQhZWwucXVlcnlTZWxlY3RvckFsbCggXCI6c2NvcGUgZmllbGRzZXQgZGl2XCIgKS5sZW5ndGg7XG5cdH0gKTtcblxuXHQvKiBBdHRyaWJ1dGVzXG5cdC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gKi9cblxuXHQvLyBTdXBwb3J0OiBJRTw4XG5cdC8vIFZlcmlmeSB0aGF0IGdldEF0dHJpYnV0ZSByZWFsbHkgcmV0dXJucyBhdHRyaWJ1dGVzIGFuZCBub3QgcHJvcGVydGllc1xuXHQvLyAoZXhjZXB0aW5nIElFOCBib29sZWFucylcblx0c3VwcG9ydC5hdHRyaWJ1dGVzID0gYXNzZXJ0KCBmdW5jdGlvbiggZWwgKSB7XG5cdFx0ZWwuY2xhc3NOYW1lID0gXCJpXCI7XG5cdFx0cmV0dXJuICFlbC5nZXRBdHRyaWJ1dGUoIFwiY2xhc3NOYW1lXCIgKTtcblx0fSApO1xuXG5cdC8qIGdldEVsZW1lbnQocylCeSpcblx0LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSAqL1xuXG5cdC8vIENoZWNrIGlmIGdldEVsZW1lbnRzQnlUYWdOYW1lKFwiKlwiKSByZXR1cm5zIG9ubHkgZWxlbWVudHNcblx0c3VwcG9ydC5nZXRFbGVtZW50c0J5VGFnTmFtZSA9IGFzc2VydCggZnVuY3Rpb24oIGVsICkge1xuXHRcdGVsLmFwcGVuZENoaWxkKCBkb2N1bWVudC5jcmVhdGVDb21tZW50KCBcIlwiICkgKTtcblx0XHRyZXR1cm4gIWVsLmdldEVsZW1lbnRzQnlUYWdOYW1lKCBcIipcIiApLmxlbmd0aDtcblx0fSApO1xuXG5cdC8vIFN1cHBvcnQ6IElFPDlcblx0c3VwcG9ydC5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lID0gcm5hdGl2ZS50ZXN0KCBkb2N1bWVudC5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lICk7XG5cblx0Ly8gU3VwcG9ydDogSUU8MTBcblx0Ly8gQ2hlY2sgaWYgZ2V0RWxlbWVudEJ5SWQgcmV0dXJucyBlbGVtZW50cyBieSBuYW1lXG5cdC8vIFRoZSBicm9rZW4gZ2V0RWxlbWVudEJ5SWQgbWV0aG9kcyBkb24ndCBwaWNrIHVwIHByb2dyYW1tYXRpY2FsbHktc2V0IG5hbWVzLFxuXHQvLyBzbyB1c2UgYSByb3VuZGFib3V0IGdldEVsZW1lbnRzQnlOYW1lIHRlc3Rcblx0c3VwcG9ydC5nZXRCeUlkID0gYXNzZXJ0KCBmdW5jdGlvbiggZWwgKSB7XG5cdFx0ZG9jRWxlbS5hcHBlbmRDaGlsZCggZWwgKS5pZCA9IGV4cGFuZG87XG5cdFx0cmV0dXJuICFkb2N1bWVudC5nZXRFbGVtZW50c0J5TmFtZSB8fCAhZG9jdW1lbnQuZ2V0RWxlbWVudHNCeU5hbWUoIGV4cGFuZG8gKS5sZW5ndGg7XG5cdH0gKTtcblxuXHQvLyBJRCBmaWx0ZXIgYW5kIGZpbmRcblx0aWYgKCBzdXBwb3J0LmdldEJ5SWQgKSB7XG5cdFx0RXhwci5maWx0ZXJbIFwiSURcIiBdID0gZnVuY3Rpb24oIGlkICkge1xuXHRcdFx0dmFyIGF0dHJJZCA9IGlkLnJlcGxhY2UoIHJ1bmVzY2FwZSwgZnVuZXNjYXBlICk7XG5cdFx0XHRyZXR1cm4gZnVuY3Rpb24oIGVsZW0gKSB7XG5cdFx0XHRcdHJldHVybiBlbGVtLmdldEF0dHJpYnV0ZSggXCJpZFwiICkgPT09IGF0dHJJZDtcblx0XHRcdH07XG5cdFx0fTtcblx0XHRFeHByLmZpbmRbIFwiSURcIiBdID0gZnVuY3Rpb24oIGlkLCBjb250ZXh0ICkge1xuXHRcdFx0aWYgKCB0eXBlb2YgY29udGV4dC5nZXRFbGVtZW50QnlJZCAhPT0gXCJ1bmRlZmluZWRcIiAmJiBkb2N1bWVudElzSFRNTCApIHtcblx0XHRcdFx0dmFyIGVsZW0gPSBjb250ZXh0LmdldEVsZW1lbnRCeUlkKCBpZCApO1xuXHRcdFx0XHRyZXR1cm4gZWxlbSA/IFsgZWxlbSBdIDogW107XG5cdFx0XHR9XG5cdFx0fTtcblx0fSBlbHNlIHtcblx0XHRFeHByLmZpbHRlclsgXCJJRFwiIF0gPSAgZnVuY3Rpb24oIGlkICkge1xuXHRcdFx0dmFyIGF0dHJJZCA9IGlkLnJlcGxhY2UoIHJ1bmVzY2FwZSwgZnVuZXNjYXBlICk7XG5cdFx0XHRyZXR1cm4gZnVuY3Rpb24oIGVsZW0gKSB7XG5cdFx0XHRcdHZhciBub2RlID0gdHlwZW9mIGVsZW0uZ2V0QXR0cmlidXRlTm9kZSAhPT0gXCJ1bmRlZmluZWRcIiAmJlxuXHRcdFx0XHRcdGVsZW0uZ2V0QXR0cmlidXRlTm9kZSggXCJpZFwiICk7XG5cdFx0XHRcdHJldHVybiBub2RlICYmIG5vZGUudmFsdWUgPT09IGF0dHJJZDtcblx0XHRcdH07XG5cdFx0fTtcblxuXHRcdC8vIFN1cHBvcnQ6IElFIDYgLSA3IG9ubHlcblx0XHQvLyBnZXRFbGVtZW50QnlJZCBpcyBub3QgcmVsaWFibGUgYXMgYSBmaW5kIHNob3J0Y3V0XG5cdFx0RXhwci5maW5kWyBcIklEXCIgXSA9IGZ1bmN0aW9uKCBpZCwgY29udGV4dCApIHtcblx0XHRcdGlmICggdHlwZW9mIGNvbnRleHQuZ2V0RWxlbWVudEJ5SWQgIT09IFwidW5kZWZpbmVkXCIgJiYgZG9jdW1lbnRJc0hUTUwgKSB7XG5cdFx0XHRcdHZhciBub2RlLCBpLCBlbGVtcyxcblx0XHRcdFx0XHRlbGVtID0gY29udGV4dC5nZXRFbGVtZW50QnlJZCggaWQgKTtcblxuXHRcdFx0XHRpZiAoIGVsZW0gKSB7XG5cblx0XHRcdFx0XHQvLyBWZXJpZnkgdGhlIGlkIGF0dHJpYnV0ZVxuXHRcdFx0XHRcdG5vZGUgPSBlbGVtLmdldEF0dHJpYnV0ZU5vZGUoIFwiaWRcIiApO1xuXHRcdFx0XHRcdGlmICggbm9kZSAmJiBub2RlLnZhbHVlID09PSBpZCApIHtcblx0XHRcdFx0XHRcdHJldHVybiBbIGVsZW0gXTtcblx0XHRcdFx0XHR9XG5cblx0XHRcdFx0XHQvLyBGYWxsIGJhY2sgb24gZ2V0RWxlbWVudHNCeU5hbWVcblx0XHRcdFx0XHRlbGVtcyA9IGNvbnRleHQuZ2V0RWxlbWVudHNCeU5hbWUoIGlkICk7XG5cdFx0XHRcdFx0aSA9IDA7XG5cdFx0XHRcdFx0d2hpbGUgKCAoIGVsZW0gPSBlbGVtc1sgaSsrIF0gKSApIHtcblx0XHRcdFx0XHRcdG5vZGUgPSBlbGVtLmdldEF0dHJpYnV0ZU5vZGUoIFwiaWRcIiApO1xuXHRcdFx0XHRcdFx0aWYgKCBub2RlICYmIG5vZGUudmFsdWUgPT09IGlkICkge1xuXHRcdFx0XHRcdFx0XHRyZXR1cm4gWyBlbGVtIF07XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cblx0XHRcdFx0cmV0dXJuIFtdO1xuXHRcdFx0fVxuXHRcdH07XG5cdH1cblxuXHQvLyBUYWdcblx0RXhwci5maW5kWyBcIlRBR1wiIF0gPSBzdXBwb3J0LmdldEVsZW1lbnRzQnlUYWdOYW1lID9cblx0XHRmdW5jdGlvbiggdGFnLCBjb250ZXh0ICkge1xuXHRcdFx0aWYgKCB0eXBlb2YgY29udGV4dC5nZXRFbGVtZW50c0J5VGFnTmFtZSAhPT0gXCJ1bmRlZmluZWRcIiApIHtcblx0XHRcdFx0cmV0dXJuIGNvbnRleHQuZ2V0RWxlbWVudHNCeVRhZ05hbWUoIHRhZyApO1xuXG5cdFx0XHQvLyBEb2N1bWVudEZyYWdtZW50IG5vZGVzIGRvbid0IGhhdmUgZ0VCVE5cblx0XHRcdH0gZWxzZSBpZiAoIHN1cHBvcnQucXNhICkge1xuXHRcdFx0XHRyZXR1cm4gY29udGV4dC5xdWVyeVNlbGVjdG9yQWxsKCB0YWcgKTtcblx0XHRcdH1cblx0XHR9IDpcblxuXHRcdGZ1bmN0aW9uKCB0YWcsIGNvbnRleHQgKSB7XG5cdFx0XHR2YXIgZWxlbSxcblx0XHRcdFx0dG1wID0gW10sXG5cdFx0XHRcdGkgPSAwLFxuXG5cdFx0XHRcdC8vIEJ5IGhhcHB5IGNvaW5jaWRlbmNlLCBhIChicm9rZW4pIGdFQlROIGFwcGVhcnMgb24gRG9jdW1lbnRGcmFnbWVudCBub2RlcyB0b29cblx0XHRcdFx0cmVzdWx0cyA9IGNvbnRleHQuZ2V0RWxlbWVudHNCeVRhZ05hbWUoIHRhZyApO1xuXG5cdFx0XHQvLyBGaWx0ZXIgb3V0IHBvc3NpYmxlIGNvbW1lbnRzXG5cdFx0XHRpZiAoIHRhZyA9PT0gXCIqXCIgKSB7XG5cdFx0XHRcdHdoaWxlICggKCBlbGVtID0gcmVzdWx0c1sgaSsrIF0gKSApIHtcblx0XHRcdFx0XHRpZiAoIGVsZW0ubm9kZVR5cGUgPT09IDEgKSB7XG5cdFx0XHRcdFx0XHR0bXAucHVzaCggZWxlbSApO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXG5cdFx0XHRcdHJldHVybiB0bXA7XG5cdFx0XHR9XG5cdFx0XHRyZXR1cm4gcmVzdWx0cztcblx0XHR9O1xuXG5cdC8vIENsYXNzXG5cdEV4cHIuZmluZFsgXCJDTEFTU1wiIF0gPSBzdXBwb3J0LmdldEVsZW1lbnRzQnlDbGFzc05hbWUgJiYgZnVuY3Rpb24oIGNsYXNzTmFtZSwgY29udGV4dCApIHtcblx0XHRpZiAoIHR5cGVvZiBjb250ZXh0LmdldEVsZW1lbnRzQnlDbGFzc05hbWUgIT09IFwidW5kZWZpbmVkXCIgJiYgZG9jdW1lbnRJc0hUTUwgKSB7XG5cdFx0XHRyZXR1cm4gY29udGV4dC5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lKCBjbGFzc05hbWUgKTtcblx0XHR9XG5cdH07XG5cblx0LyogUVNBL21hdGNoZXNTZWxlY3RvclxuXHQtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tICovXG5cblx0Ly8gUVNBIGFuZCBtYXRjaGVzU2VsZWN0b3Igc3VwcG9ydFxuXG5cdC8vIG1hdGNoZXNTZWxlY3Rvcig6YWN0aXZlKSByZXBvcnRzIGZhbHNlIHdoZW4gdHJ1ZSAoSUU5L09wZXJhIDExLjUpXG5cdHJidWdneU1hdGNoZXMgPSBbXTtcblxuXHQvLyBxU2EoOmZvY3VzKSByZXBvcnRzIGZhbHNlIHdoZW4gdHJ1ZSAoQ2hyb21lIDIxKVxuXHQvLyBXZSBhbGxvdyB0aGlzIGJlY2F1c2Ugb2YgYSBidWcgaW4gSUU4LzkgdGhhdCB0aHJvd3MgYW4gZXJyb3Jcblx0Ly8gd2hlbmV2ZXIgYGRvY3VtZW50LmFjdGl2ZUVsZW1lbnRgIGlzIGFjY2Vzc2VkIG9uIGFuIGlmcmFtZVxuXHQvLyBTbywgd2UgYWxsb3cgOmZvY3VzIHRvIHBhc3MgdGhyb3VnaCBRU0EgYWxsIHRoZSB0aW1lIHRvIGF2b2lkIHRoZSBJRSBlcnJvclxuXHQvLyBTZWUgaHR0cHM6Ly9idWdzLmpxdWVyeS5jb20vdGlja2V0LzEzMzc4XG5cdHJidWdneVFTQSA9IFtdO1xuXG5cdGlmICggKCBzdXBwb3J0LnFzYSA9IHJuYXRpdmUudGVzdCggZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCApICkgKSB7XG5cblx0XHQvLyBCdWlsZCBRU0EgcmVnZXhcblx0XHQvLyBSZWdleCBzdHJhdGVneSBhZG9wdGVkIGZyb20gRGllZ28gUGVyaW5pXG5cdFx0YXNzZXJ0KCBmdW5jdGlvbiggZWwgKSB7XG5cblx0XHRcdHZhciBpbnB1dDtcblxuXHRcdFx0Ly8gU2VsZWN0IGlzIHNldCB0byBlbXB0eSBzdHJpbmcgb24gcHVycG9zZVxuXHRcdFx0Ly8gVGhpcyBpcyB0byB0ZXN0IElFJ3MgdHJlYXRtZW50IG9mIG5vdCBleHBsaWNpdGx5XG5cdFx0XHQvLyBzZXR0aW5nIGEgYm9vbGVhbiBjb250ZW50IGF0dHJpYnV0ZSxcblx0XHRcdC8vIHNpbmNlIGl0cyBwcmVzZW5jZSBzaG91bGQgYmUgZW5vdWdoXG5cdFx0XHQvLyBodHRwczovL2J1Z3MuanF1ZXJ5LmNvbS90aWNrZXQvMTIzNTlcblx0XHRcdGRvY0VsZW0uYXBwZW5kQ2hpbGQoIGVsICkuaW5uZXJIVE1MID0gXCI8YSBpZD0nXCIgKyBleHBhbmRvICsgXCInPjwvYT5cIiArXG5cdFx0XHRcdFwiPHNlbGVjdCBpZD0nXCIgKyBleHBhbmRvICsgXCItXFxyXFxcXCcgbXNhbGxvd2NhcHR1cmU9Jyc+XCIgK1xuXHRcdFx0XHRcIjxvcHRpb24gc2VsZWN0ZWQ9Jyc+PC9vcHRpb24+PC9zZWxlY3Q+XCI7XG5cblx0XHRcdC8vIFN1cHBvcnQ6IElFOCwgT3BlcmEgMTEtMTIuMTZcblx0XHRcdC8vIE5vdGhpbmcgc2hvdWxkIGJlIHNlbGVjdGVkIHdoZW4gZW1wdHkgc3RyaW5ncyBmb2xsb3cgXj0gb3IgJD0gb3IgKj1cblx0XHRcdC8vIFRoZSB0ZXN0IGF0dHJpYnV0ZSBtdXN0IGJlIHVua25vd24gaW4gT3BlcmEgYnV0IFwic2FmZVwiIGZvciBXaW5SVFxuXHRcdFx0Ly8gaHR0cHM6Ly9tc2RuLm1pY3Jvc29mdC5jb20vZW4tdXMvbGlicmFyeS9pZS9oaDQ2NTM4OC5hc3B4I2F0dHJpYnV0ZV9zZWN0aW9uXG5cdFx0XHRpZiAoIGVsLnF1ZXJ5U2VsZWN0b3JBbGwoIFwiW21zYWxsb3djYXB0dXJlXj0nJ11cIiApLmxlbmd0aCApIHtcblx0XHRcdFx0cmJ1Z2d5UVNBLnB1c2goIFwiWypeJF09XCIgKyB3aGl0ZXNwYWNlICsgXCIqKD86Jyd8XFxcIlxcXCIpXCIgKTtcblx0XHRcdH1cblxuXHRcdFx0Ly8gU3VwcG9ydDogSUU4XG5cdFx0XHQvLyBCb29sZWFuIGF0dHJpYnV0ZXMgYW5kIFwidmFsdWVcIiBhcmUgbm90IHRyZWF0ZWQgY29ycmVjdGx5XG5cdFx0XHRpZiAoICFlbC5xdWVyeVNlbGVjdG9yQWxsKCBcIltzZWxlY3RlZF1cIiApLmxlbmd0aCApIHtcblx0XHRcdFx0cmJ1Z2d5UVNBLnB1c2goIFwiXFxcXFtcIiArIHdoaXRlc3BhY2UgKyBcIiooPzp2YWx1ZXxcIiArIGJvb2xlYW5zICsgXCIpXCIgKTtcblx0XHRcdH1cblxuXHRcdFx0Ly8gU3VwcG9ydDogQ2hyb21lPDI5LCBBbmRyb2lkPDQuNCwgU2FmYXJpPDcuMCssIGlPUzw3LjArLCBQaGFudG9tSlM8MS45LjgrXG5cdFx0XHRpZiAoICFlbC5xdWVyeVNlbGVjdG9yQWxsKCBcIltpZH49XCIgKyBleHBhbmRvICsgXCItXVwiICkubGVuZ3RoICkge1xuXHRcdFx0XHRyYnVnZ3lRU0EucHVzaCggXCJ+PVwiICk7XG5cdFx0XHR9XG5cblx0XHRcdC8vIFN1cHBvcnQ6IElFIDExKywgRWRnZSAxNSAtIDE4K1xuXHRcdFx0Ly8gSUUgMTEvRWRnZSBkb24ndCBmaW5kIGVsZW1lbnRzIG9uIGEgYFtuYW1lPScnXWAgcXVlcnkgaW4gc29tZSBjYXNlcy5cblx0XHRcdC8vIEFkZGluZyBhIHRlbXBvcmFyeSBhdHRyaWJ1dGUgdG8gdGhlIGRvY3VtZW50IGJlZm9yZSB0aGUgc2VsZWN0aW9uIHdvcmtzXG5cdFx0XHQvLyBhcm91bmQgdGhlIGlzc3VlLlxuXHRcdFx0Ly8gSW50ZXJlc3RpbmdseSwgSUUgMTAgJiBvbGRlciBkb24ndCBzZWVtIHRvIGhhdmUgdGhlIGlzc3VlLlxuXHRcdFx0aW5wdXQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCBcImlucHV0XCIgKTtcblx0XHRcdGlucHV0LnNldEF0dHJpYnV0ZSggXCJuYW1lXCIsIFwiXCIgKTtcblx0XHRcdGVsLmFwcGVuZENoaWxkKCBpbnB1dCApO1xuXHRcdFx0aWYgKCAhZWwucXVlcnlTZWxlY3RvckFsbCggXCJbbmFtZT0nJ11cIiApLmxlbmd0aCApIHtcblx0XHRcdFx0cmJ1Z2d5UVNBLnB1c2goIFwiXFxcXFtcIiArIHdoaXRlc3BhY2UgKyBcIipuYW1lXCIgKyB3aGl0ZXNwYWNlICsgXCIqPVwiICtcblx0XHRcdFx0XHR3aGl0ZXNwYWNlICsgXCIqKD86Jyd8XFxcIlxcXCIpXCIgKTtcblx0XHRcdH1cblxuXHRcdFx0Ly8gV2Via2l0L09wZXJhIC0gOmNoZWNrZWQgc2hvdWxkIHJldHVybiBzZWxlY3RlZCBvcHRpb24gZWxlbWVudHNcblx0XHRcdC8vIGh0dHA6Ly93d3cudzMub3JnL1RSLzIwMTEvUkVDLWNzczMtc2VsZWN0b3JzLTIwMTEwOTI5LyNjaGVja2VkXG5cdFx0XHQvLyBJRTggdGhyb3dzIGVycm9yIGhlcmUgYW5kIHdpbGwgbm90IHNlZSBsYXRlciB0ZXN0c1xuXHRcdFx0aWYgKCAhZWwucXVlcnlTZWxlY3RvckFsbCggXCI6Y2hlY2tlZFwiICkubGVuZ3RoICkge1xuXHRcdFx0XHRyYnVnZ3lRU0EucHVzaCggXCI6Y2hlY2tlZFwiICk7XG5cdFx0XHR9XG5cblx0XHRcdC8vIFN1cHBvcnQ6IFNhZmFyaSA4KywgaU9TIDgrXG5cdFx0XHQvLyBodHRwczovL2J1Z3Mud2Via2l0Lm9yZy9zaG93X2J1Zy5jZ2k/aWQ9MTM2ODUxXG5cdFx0XHQvLyBJbi1wYWdlIGBzZWxlY3RvciNpZCBzaWJsaW5nLWNvbWJpbmF0b3Igc2VsZWN0b3JgIGZhaWxzXG5cdFx0XHRpZiAoICFlbC5xdWVyeVNlbGVjdG9yQWxsKCBcImEjXCIgKyBleHBhbmRvICsgXCIrKlwiICkubGVuZ3RoICkge1xuXHRcdFx0XHRyYnVnZ3lRU0EucHVzaCggXCIuIy4rWyt+XVwiICk7XG5cdFx0XHR9XG5cblx0XHRcdC8vIFN1cHBvcnQ6IEZpcmVmb3ggPD0zLjYgLSA1IG9ubHlcblx0XHRcdC8vIE9sZCBGaXJlZm94IGRvZXNuJ3QgdGhyb3cgb24gYSBiYWRseS1lc2NhcGVkIGlkZW50aWZpZXIuXG5cdFx0XHRlbC5xdWVyeVNlbGVjdG9yQWxsKCBcIlxcXFxcXGZcIiApO1xuXHRcdFx0cmJ1Z2d5UVNBLnB1c2goIFwiW1xcXFxyXFxcXG5cXFxcZl1cIiApO1xuXHRcdH0gKTtcblxuXHRcdGFzc2VydCggZnVuY3Rpb24oIGVsICkge1xuXHRcdFx0ZWwuaW5uZXJIVE1MID0gXCI8YSBocmVmPScnIGRpc2FibGVkPSdkaXNhYmxlZCc+PC9hPlwiICtcblx0XHRcdFx0XCI8c2VsZWN0IGRpc2FibGVkPSdkaXNhYmxlZCc+PG9wdGlvbi8+PC9zZWxlY3Q+XCI7XG5cblx0XHRcdC8vIFN1cHBvcnQ6IFdpbmRvd3MgOCBOYXRpdmUgQXBwc1xuXHRcdFx0Ly8gVGhlIHR5cGUgYW5kIG5hbWUgYXR0cmlidXRlcyBhcmUgcmVzdHJpY3RlZCBkdXJpbmcgLmlubmVySFRNTCBhc3NpZ25tZW50XG5cdFx0XHR2YXIgaW5wdXQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCBcImlucHV0XCIgKTtcblx0XHRcdGlucHV0LnNldEF0dHJpYnV0ZSggXCJ0eXBlXCIsIFwiaGlkZGVuXCIgKTtcblx0XHRcdGVsLmFwcGVuZENoaWxkKCBpbnB1dCApLnNldEF0dHJpYnV0ZSggXCJuYW1lXCIsIFwiRFwiICk7XG5cblx0XHRcdC8vIFN1cHBvcnQ6IElFOFxuXHRcdFx0Ly8gRW5mb3JjZSBjYXNlLXNlbnNpdGl2aXR5IG9mIG5hbWUgYXR0cmlidXRlXG5cdFx0XHRpZiAoIGVsLnF1ZXJ5U2VsZWN0b3JBbGwoIFwiW25hbWU9ZF1cIiApLmxlbmd0aCApIHtcblx0XHRcdFx0cmJ1Z2d5UVNBLnB1c2goIFwibmFtZVwiICsgd2hpdGVzcGFjZSArIFwiKlsqXiR8IX5dPz1cIiApO1xuXHRcdFx0fVxuXG5cdFx0XHQvLyBGRiAzLjUgLSA6ZW5hYmxlZC86ZGlzYWJsZWQgYW5kIGhpZGRlbiBlbGVtZW50cyAoaGlkZGVuIGVsZW1lbnRzIGFyZSBzdGlsbCBlbmFibGVkKVxuXHRcdFx0Ly8gSUU4IHRocm93cyBlcnJvciBoZXJlIGFuZCB3aWxsIG5vdCBzZWUgbGF0ZXIgdGVzdHNcblx0XHRcdGlmICggZWwucXVlcnlTZWxlY3RvckFsbCggXCI6ZW5hYmxlZFwiICkubGVuZ3RoICE9PSAyICkge1xuXHRcdFx0XHRyYnVnZ3lRU0EucHVzaCggXCI6ZW5hYmxlZFwiLCBcIjpkaXNhYmxlZFwiICk7XG5cdFx0XHR9XG5cblx0XHRcdC8vIFN1cHBvcnQ6IElFOS0xMStcblx0XHRcdC8vIElFJ3MgOmRpc2FibGVkIHNlbGVjdG9yIGRvZXMgbm90IHBpY2sgdXAgdGhlIGNoaWxkcmVuIG9mIGRpc2FibGVkIGZpZWxkc2V0c1xuXHRcdFx0ZG9jRWxlbS5hcHBlbmRDaGlsZCggZWwgKS5kaXNhYmxlZCA9IHRydWU7XG5cdFx0XHRpZiAoIGVsLnF1ZXJ5U2VsZWN0b3JBbGwoIFwiOmRpc2FibGVkXCIgKS5sZW5ndGggIT09IDIgKSB7XG5cdFx0XHRcdHJidWdneVFTQS5wdXNoKCBcIjplbmFibGVkXCIsIFwiOmRpc2FibGVkXCIgKTtcblx0XHRcdH1cblxuXHRcdFx0Ly8gU3VwcG9ydDogT3BlcmEgMTAgLSAxMSBvbmx5XG5cdFx0XHQvLyBPcGVyYSAxMC0xMSBkb2VzIG5vdCB0aHJvdyBvbiBwb3N0LWNvbW1hIGludmFsaWQgcHNldWRvc1xuXHRcdFx0ZWwucXVlcnlTZWxlY3RvckFsbCggXCIqLDp4XCIgKTtcblx0XHRcdHJidWdneVFTQS5wdXNoKCBcIiwuKjpcIiApO1xuXHRcdH0gKTtcblx0fVxuXG5cdGlmICggKCBzdXBwb3J0Lm1hdGNoZXNTZWxlY3RvciA9IHJuYXRpdmUudGVzdCggKCBtYXRjaGVzID0gZG9jRWxlbS5tYXRjaGVzIHx8XG5cdFx0ZG9jRWxlbS53ZWJraXRNYXRjaGVzU2VsZWN0b3IgfHxcblx0XHRkb2NFbGVtLm1vek1hdGNoZXNTZWxlY3RvciB8fFxuXHRcdGRvY0VsZW0ub01hdGNoZXNTZWxlY3RvciB8fFxuXHRcdGRvY0VsZW0ubXNNYXRjaGVzU2VsZWN0b3IgKSApICkgKSB7XG5cblx0XHRhc3NlcnQoIGZ1bmN0aW9uKCBlbCApIHtcblxuXHRcdFx0Ly8gQ2hlY2sgdG8gc2VlIGlmIGl0J3MgcG9zc2libGUgdG8gZG8gbWF0Y2hlc1NlbGVjdG9yXG5cdFx0XHQvLyBvbiBhIGRpc2Nvbm5lY3RlZCBub2RlIChJRSA5KVxuXHRcdFx0c3VwcG9ydC5kaXNjb25uZWN0ZWRNYXRjaCA9IG1hdGNoZXMuY2FsbCggZWwsIFwiKlwiICk7XG5cblx0XHRcdC8vIFRoaXMgc2hvdWxkIGZhaWwgd2l0aCBhbiBleGNlcHRpb25cblx0XHRcdC8vIEdlY2tvIGRvZXMgbm90IGVycm9yLCByZXR1cm5zIGZhbHNlIGluc3RlYWRcblx0XHRcdG1hdGNoZXMuY2FsbCggZWwsIFwiW3MhPScnXTp4XCIgKTtcblx0XHRcdHJidWdneU1hdGNoZXMucHVzaCggXCIhPVwiLCBwc2V1ZG9zICk7XG5cdFx0fSApO1xuXHR9XG5cblx0cmJ1Z2d5UVNBID0gcmJ1Z2d5UVNBLmxlbmd0aCAmJiBuZXcgUmVnRXhwKCByYnVnZ3lRU0Euam9pbiggXCJ8XCIgKSApO1xuXHRyYnVnZ3lNYXRjaGVzID0gcmJ1Z2d5TWF0Y2hlcy5sZW5ndGggJiYgbmV3IFJlZ0V4cCggcmJ1Z2d5TWF0Y2hlcy5qb2luKCBcInxcIiApICk7XG5cblx0LyogQ29udGFpbnNcblx0LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSAqL1xuXHRoYXNDb21wYXJlID0gcm5hdGl2ZS50ZXN0KCBkb2NFbGVtLmNvbXBhcmVEb2N1bWVudFBvc2l0aW9uICk7XG5cblx0Ly8gRWxlbWVudCBjb250YWlucyBhbm90aGVyXG5cdC8vIFB1cnBvc2VmdWxseSBzZWxmLWV4Y2x1c2l2ZVxuXHQvLyBBcyBpbiwgYW4gZWxlbWVudCBkb2VzIG5vdCBjb250YWluIGl0c2VsZlxuXHRjb250YWlucyA9IGhhc0NvbXBhcmUgfHwgcm5hdGl2ZS50ZXN0KCBkb2NFbGVtLmNvbnRhaW5zICkgP1xuXHRcdGZ1bmN0aW9uKCBhLCBiICkge1xuXHRcdFx0dmFyIGFkb3duID0gYS5ub2RlVHlwZSA9PT0gOSA/IGEuZG9jdW1lbnRFbGVtZW50IDogYSxcblx0XHRcdFx0YnVwID0gYiAmJiBiLnBhcmVudE5vZGU7XG5cdFx0XHRyZXR1cm4gYSA9PT0gYnVwIHx8ICEhKCBidXAgJiYgYnVwLm5vZGVUeXBlID09PSAxICYmIChcblx0XHRcdFx0YWRvd24uY29udGFpbnMgP1xuXHRcdFx0XHRcdGFkb3duLmNvbnRhaW5zKCBidXAgKSA6XG5cdFx0XHRcdFx0YS5jb21wYXJlRG9jdW1lbnRQb3NpdGlvbiAmJiBhLmNvbXBhcmVEb2N1bWVudFBvc2l0aW9uKCBidXAgKSAmIDE2XG5cdFx0XHQpICk7XG5cdFx0fSA6XG5cdFx0ZnVuY3Rpb24oIGEsIGIgKSB7XG5cdFx0XHRpZiAoIGIgKSB7XG5cdFx0XHRcdHdoaWxlICggKCBiID0gYi5wYXJlbnROb2RlICkgKSB7XG5cdFx0XHRcdFx0aWYgKCBiID09PSBhICkge1xuXHRcdFx0XHRcdFx0cmV0dXJuIHRydWU7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0XHRyZXR1cm4gZmFsc2U7XG5cdFx0fTtcblxuXHQvKiBTb3J0aW5nXG5cdC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gKi9cblxuXHQvLyBEb2N1bWVudCBvcmRlciBzb3J0aW5nXG5cdHNvcnRPcmRlciA9IGhhc0NvbXBhcmUgP1xuXHRmdW5jdGlvbiggYSwgYiApIHtcblxuXHRcdC8vIEZsYWcgZm9yIGR1cGxpY2F0ZSByZW1vdmFsXG5cdFx0aWYgKCBhID09PSBiICkge1xuXHRcdFx0aGFzRHVwbGljYXRlID0gdHJ1ZTtcblx0XHRcdHJldHVybiAwO1xuXHRcdH1cblxuXHRcdC8vIFNvcnQgb24gbWV0aG9kIGV4aXN0ZW5jZSBpZiBvbmx5IG9uZSBpbnB1dCBoYXMgY29tcGFyZURvY3VtZW50UG9zaXRpb25cblx0XHR2YXIgY29tcGFyZSA9ICFhLmNvbXBhcmVEb2N1bWVudFBvc2l0aW9uIC0gIWIuY29tcGFyZURvY3VtZW50UG9zaXRpb247XG5cdFx0aWYgKCBjb21wYXJlICkge1xuXHRcdFx0cmV0dXJuIGNvbXBhcmU7XG5cdFx0fVxuXG5cdFx0Ly8gQ2FsY3VsYXRlIHBvc2l0aW9uIGlmIGJvdGggaW5wdXRzIGJlbG9uZyB0byB0aGUgc2FtZSBkb2N1bWVudFxuXHRcdC8vIFN1cHBvcnQ6IElFIDExKywgRWRnZSAxNyAtIDE4K1xuXHRcdC8vIElFL0VkZ2Ugc29tZXRpbWVzIHRocm93IGEgXCJQZXJtaXNzaW9uIGRlbmllZFwiIGVycm9yIHdoZW4gc3RyaWN0LWNvbXBhcmluZ1xuXHRcdC8vIHR3byBkb2N1bWVudHM7IHNoYWxsb3cgY29tcGFyaXNvbnMgd29yay5cblx0XHQvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgZXFlcWVxXG5cdFx0Y29tcGFyZSA9ICggYS5vd25lckRvY3VtZW50IHx8IGEgKSA9PSAoIGIub3duZXJEb2N1bWVudCB8fCBiICkgP1xuXHRcdFx0YS5jb21wYXJlRG9jdW1lbnRQb3NpdGlvbiggYiApIDpcblxuXHRcdFx0Ly8gT3RoZXJ3aXNlIHdlIGtub3cgdGhleSBhcmUgZGlzY29ubmVjdGVkXG5cdFx0XHQxO1xuXG5cdFx0Ly8gRGlzY29ubmVjdGVkIG5vZGVzXG5cdFx0aWYgKCBjb21wYXJlICYgMSB8fFxuXHRcdFx0KCAhc3VwcG9ydC5zb3J0RGV0YWNoZWQgJiYgYi5jb21wYXJlRG9jdW1lbnRQb3NpdGlvbiggYSApID09PSBjb21wYXJlICkgKSB7XG5cblx0XHRcdC8vIENob29zZSB0aGUgZmlyc3QgZWxlbWVudCB0aGF0IGlzIHJlbGF0ZWQgdG8gb3VyIHByZWZlcnJlZCBkb2N1bWVudFxuXHRcdFx0Ly8gU3VwcG9ydDogSUUgMTErLCBFZGdlIDE3IC0gMTgrXG5cdFx0XHQvLyBJRS9FZGdlIHNvbWV0aW1lcyB0aHJvdyBhIFwiUGVybWlzc2lvbiBkZW5pZWRcIiBlcnJvciB3aGVuIHN0cmljdC1jb21wYXJpbmdcblx0XHRcdC8vIHR3byBkb2N1bWVudHM7IHNoYWxsb3cgY29tcGFyaXNvbnMgd29yay5cblx0XHRcdC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBlcWVxZXFcblx0XHRcdGlmICggYSA9PSBkb2N1bWVudCB8fCBhLm93bmVyRG9jdW1lbnQgPT0gcHJlZmVycmVkRG9jICYmXG5cdFx0XHRcdGNvbnRhaW5zKCBwcmVmZXJyZWREb2MsIGEgKSApIHtcblx0XHRcdFx0cmV0dXJuIC0xO1xuXHRcdFx0fVxuXG5cdFx0XHQvLyBTdXBwb3J0OiBJRSAxMSssIEVkZ2UgMTcgLSAxOCtcblx0XHRcdC8vIElFL0VkZ2Ugc29tZXRpbWVzIHRocm93IGEgXCJQZXJtaXNzaW9uIGRlbmllZFwiIGVycm9yIHdoZW4gc3RyaWN0LWNvbXBhcmluZ1xuXHRcdFx0Ly8gdHdvIGRvY3VtZW50czsgc2hhbGxvdyBjb21wYXJpc29ucyB3b3JrLlxuXHRcdFx0Ly8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGVxZXFlcVxuXHRcdFx0aWYgKCBiID09IGRvY3VtZW50IHx8IGIub3duZXJEb2N1bWVudCA9PSBwcmVmZXJyZWREb2MgJiZcblx0XHRcdFx0Y29udGFpbnMoIHByZWZlcnJlZERvYywgYiApICkge1xuXHRcdFx0XHRyZXR1cm4gMTtcblx0XHRcdH1cblxuXHRcdFx0Ly8gTWFpbnRhaW4gb3JpZ2luYWwgb3JkZXJcblx0XHRcdHJldHVybiBzb3J0SW5wdXQgP1xuXHRcdFx0XHQoIGluZGV4T2YoIHNvcnRJbnB1dCwgYSApIC0gaW5kZXhPZiggc29ydElucHV0LCBiICkgKSA6XG5cdFx0XHRcdDA7XG5cdFx0fVxuXG5cdFx0cmV0dXJuIGNvbXBhcmUgJiA0ID8gLTEgOiAxO1xuXHR9IDpcblx0ZnVuY3Rpb24oIGEsIGIgKSB7XG5cblx0XHQvLyBFeGl0IGVhcmx5IGlmIHRoZSBub2RlcyBhcmUgaWRlbnRpY2FsXG5cdFx0aWYgKCBhID09PSBiICkge1xuXHRcdFx0aGFzRHVwbGljYXRlID0gdHJ1ZTtcblx0XHRcdHJldHVybiAwO1xuXHRcdH1cblxuXHRcdHZhciBjdXIsXG5cdFx0XHRpID0gMCxcblx0XHRcdGF1cCA9IGEucGFyZW50Tm9kZSxcblx0XHRcdGJ1cCA9IGIucGFyZW50Tm9kZSxcblx0XHRcdGFwID0gWyBhIF0sXG5cdFx0XHRicCA9IFsgYiBdO1xuXG5cdFx0Ly8gUGFyZW50bGVzcyBub2RlcyBhcmUgZWl0aGVyIGRvY3VtZW50cyBvciBkaXNjb25uZWN0ZWRcblx0XHRpZiAoICFhdXAgfHwgIWJ1cCApIHtcblxuXHRcdFx0Ly8gU3VwcG9ydDogSUUgMTErLCBFZGdlIDE3IC0gMTgrXG5cdFx0XHQvLyBJRS9FZGdlIHNvbWV0aW1lcyB0aHJvdyBhIFwiUGVybWlzc2lvbiBkZW5pZWRcIiBlcnJvciB3aGVuIHN0cmljdC1jb21wYXJpbmdcblx0XHRcdC8vIHR3byBkb2N1bWVudHM7IHNoYWxsb3cgY29tcGFyaXNvbnMgd29yay5cblx0XHRcdC8qIGVzbGludC1kaXNhYmxlIGVxZXFlcSAqL1xuXHRcdFx0cmV0dXJuIGEgPT0gZG9jdW1lbnQgPyAtMSA6XG5cdFx0XHRcdGIgPT0gZG9jdW1lbnQgPyAxIDpcblx0XHRcdFx0LyogZXNsaW50LWVuYWJsZSBlcWVxZXEgKi9cblx0XHRcdFx0YXVwID8gLTEgOlxuXHRcdFx0XHRidXAgPyAxIDpcblx0XHRcdFx0c29ydElucHV0ID9cblx0XHRcdFx0KCBpbmRleE9mKCBzb3J0SW5wdXQsIGEgKSAtIGluZGV4T2YoIHNvcnRJbnB1dCwgYiApICkgOlxuXHRcdFx0XHQwO1xuXG5cdFx0Ly8gSWYgdGhlIG5vZGVzIGFyZSBzaWJsaW5ncywgd2UgY2FuIGRvIGEgcXVpY2sgY2hlY2tcblx0XHR9IGVsc2UgaWYgKCBhdXAgPT09IGJ1cCApIHtcblx0XHRcdHJldHVybiBzaWJsaW5nQ2hlY2soIGEsIGIgKTtcblx0XHR9XG5cblx0XHQvLyBPdGhlcndpc2Ugd2UgbmVlZCBmdWxsIGxpc3RzIG9mIHRoZWlyIGFuY2VzdG9ycyBmb3IgY29tcGFyaXNvblxuXHRcdGN1ciA9IGE7XG5cdFx0d2hpbGUgKCAoIGN1ciA9IGN1ci5wYXJlbnROb2RlICkgKSB7XG5cdFx0XHRhcC51bnNoaWZ0KCBjdXIgKTtcblx0XHR9XG5cdFx0Y3VyID0gYjtcblx0XHR3aGlsZSAoICggY3VyID0gY3VyLnBhcmVudE5vZGUgKSApIHtcblx0XHRcdGJwLnVuc2hpZnQoIGN1ciApO1xuXHRcdH1cblxuXHRcdC8vIFdhbGsgZG93biB0aGUgdHJlZSBsb29raW5nIGZvciBhIGRpc2NyZXBhbmN5XG5cdFx0d2hpbGUgKCBhcFsgaSBdID09PSBicFsgaSBdICkge1xuXHRcdFx0aSsrO1xuXHRcdH1cblxuXHRcdHJldHVybiBpID9cblxuXHRcdFx0Ly8gRG8gYSBzaWJsaW5nIGNoZWNrIGlmIHRoZSBub2RlcyBoYXZlIGEgY29tbW9uIGFuY2VzdG9yXG5cdFx0XHRzaWJsaW5nQ2hlY2soIGFwWyBpIF0sIGJwWyBpIF0gKSA6XG5cblx0XHRcdC8vIE90aGVyd2lzZSBub2RlcyBpbiBvdXIgZG9jdW1lbnQgc29ydCBmaXJzdFxuXHRcdFx0Ly8gU3VwcG9ydDogSUUgMTErLCBFZGdlIDE3IC0gMTgrXG5cdFx0XHQvLyBJRS9FZGdlIHNvbWV0aW1lcyB0aHJvdyBhIFwiUGVybWlzc2lvbiBkZW5pZWRcIiBlcnJvciB3aGVuIHN0cmljdC1jb21wYXJpbmdcblx0XHRcdC8vIHR3byBkb2N1bWVudHM7IHNoYWxsb3cgY29tcGFyaXNvbnMgd29yay5cblx0XHRcdC8qIGVzbGludC1kaXNhYmxlIGVxZXFlcSAqL1xuXHRcdFx0YXBbIGkgXSA9PSBwcmVmZXJyZWREb2MgPyAtMSA6XG5cdFx0XHRicFsgaSBdID09IHByZWZlcnJlZERvYyA/IDEgOlxuXHRcdFx0LyogZXNsaW50LWVuYWJsZSBlcWVxZXEgKi9cblx0XHRcdDA7XG5cdH07XG5cblx0cmV0dXJuIGRvY3VtZW50O1xufTtcblxuU2l6emxlLm1hdGNoZXMgPSBmdW5jdGlvbiggZXhwciwgZWxlbWVudHMgKSB7XG5cdHJldHVybiBTaXp6bGUoIGV4cHIsIG51bGwsIG51bGwsIGVsZW1lbnRzICk7XG59O1xuXG5TaXp6bGUubWF0Y2hlc1NlbGVjdG9yID0gZnVuY3Rpb24oIGVsZW0sIGV4cHIgKSB7XG5cdHNldERvY3VtZW50KCBlbGVtICk7XG5cblx0aWYgKCBzdXBwb3J0Lm1hdGNoZXNTZWxlY3RvciAmJiBkb2N1bWVudElzSFRNTCAmJlxuXHRcdCFub25uYXRpdmVTZWxlY3RvckNhY2hlWyBleHByICsgXCIgXCIgXSAmJlxuXHRcdCggIXJidWdneU1hdGNoZXMgfHwgIXJidWdneU1hdGNoZXMudGVzdCggZXhwciApICkgJiZcblx0XHQoICFyYnVnZ3lRU0EgICAgIHx8ICFyYnVnZ3lRU0EudGVzdCggZXhwciApICkgKSB7XG5cblx0XHR0cnkge1xuXHRcdFx0dmFyIHJldCA9IG1hdGNoZXMuY2FsbCggZWxlbSwgZXhwciApO1xuXG5cdFx0XHQvLyBJRSA5J3MgbWF0Y2hlc1NlbGVjdG9yIHJldHVybnMgZmFsc2Ugb24gZGlzY29ubmVjdGVkIG5vZGVzXG5cdFx0XHRpZiAoIHJldCB8fCBzdXBwb3J0LmRpc2Nvbm5lY3RlZE1hdGNoIHx8XG5cblx0XHRcdFx0Ly8gQXMgd2VsbCwgZGlzY29ubmVjdGVkIG5vZGVzIGFyZSBzYWlkIHRvIGJlIGluIGEgZG9jdW1lbnRcblx0XHRcdFx0Ly8gZnJhZ21lbnQgaW4gSUUgOVxuXHRcdFx0XHRlbGVtLmRvY3VtZW50ICYmIGVsZW0uZG9jdW1lbnQubm9kZVR5cGUgIT09IDExICkge1xuXHRcdFx0XHRyZXR1cm4gcmV0O1xuXHRcdFx0fVxuXHRcdH0gY2F0Y2ggKCBlICkge1xuXHRcdFx0bm9ubmF0aXZlU2VsZWN0b3JDYWNoZSggZXhwciwgdHJ1ZSApO1xuXHRcdH1cblx0fVxuXG5cdHJldHVybiBTaXp6bGUoIGV4cHIsIGRvY3VtZW50LCBudWxsLCBbIGVsZW0gXSApLmxlbmd0aCA+IDA7XG59O1xuXG5TaXp6bGUuY29udGFpbnMgPSBmdW5jdGlvbiggY29udGV4dCwgZWxlbSApIHtcblxuXHQvLyBTZXQgZG9jdW1lbnQgdmFycyBpZiBuZWVkZWRcblx0Ly8gU3VwcG9ydDogSUUgMTErLCBFZGdlIDE3IC0gMTgrXG5cdC8vIElFL0VkZ2Ugc29tZXRpbWVzIHRocm93IGEgXCJQZXJtaXNzaW9uIGRlbmllZFwiIGVycm9yIHdoZW4gc3RyaWN0LWNvbXBhcmluZ1xuXHQvLyB0d28gZG9jdW1lbnRzOyBzaGFsbG93IGNvbXBhcmlzb25zIHdvcmsuXG5cdC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBlcWVxZXFcblx0aWYgKCAoIGNvbnRleHQub3duZXJEb2N1bWVudCB8fCBjb250ZXh0ICkgIT0gZG9jdW1lbnQgKSB7XG5cdFx0c2V0RG9jdW1lbnQoIGNvbnRleHQgKTtcblx0fVxuXHRyZXR1cm4gY29udGFpbnMoIGNvbnRleHQsIGVsZW0gKTtcbn07XG5cblNpenpsZS5hdHRyID0gZnVuY3Rpb24oIGVsZW0sIG5hbWUgKSB7XG5cblx0Ly8gU2V0IGRvY3VtZW50IHZhcnMgaWYgbmVlZGVkXG5cdC8vIFN1cHBvcnQ6IElFIDExKywgRWRnZSAxNyAtIDE4K1xuXHQvLyBJRS9FZGdlIHNvbWV0aW1lcyB0aHJvdyBhIFwiUGVybWlzc2lvbiBkZW5pZWRcIiBlcnJvciB3aGVuIHN0cmljdC1jb21wYXJpbmdcblx0Ly8gdHdvIGRvY3VtZW50czsgc2hhbGxvdyBjb21wYXJpc29ucyB3b3JrLlxuXHQvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgZXFlcWVxXG5cdGlmICggKCBlbGVtLm93bmVyRG9jdW1lbnQgfHwgZWxlbSApICE9IGRvY3VtZW50ICkge1xuXHRcdHNldERvY3VtZW50KCBlbGVtICk7XG5cdH1cblxuXHR2YXIgZm4gPSBFeHByLmF0dHJIYW5kbGVbIG5hbWUudG9Mb3dlckNhc2UoKSBdLFxuXG5cdFx0Ly8gRG9uJ3QgZ2V0IGZvb2xlZCBieSBPYmplY3QucHJvdG90eXBlIHByb3BlcnRpZXMgKGpRdWVyeSAjMTM4MDcpXG5cdFx0dmFsID0gZm4gJiYgaGFzT3duLmNhbGwoIEV4cHIuYXR0ckhhbmRsZSwgbmFtZS50b0xvd2VyQ2FzZSgpICkgP1xuXHRcdFx0Zm4oIGVsZW0sIG5hbWUsICFkb2N1bWVudElzSFRNTCApIDpcblx0XHRcdHVuZGVmaW5lZDtcblxuXHRyZXR1cm4gdmFsICE9PSB1bmRlZmluZWQgP1xuXHRcdHZhbCA6XG5cdFx0c3VwcG9ydC5hdHRyaWJ1dGVzIHx8ICFkb2N1bWVudElzSFRNTCA/XG5cdFx0XHRlbGVtLmdldEF0dHJpYnV0ZSggbmFtZSApIDpcblx0XHRcdCggdmFsID0gZWxlbS5nZXRBdHRyaWJ1dGVOb2RlKCBuYW1lICkgKSAmJiB2YWwuc3BlY2lmaWVkID9cblx0XHRcdFx0dmFsLnZhbHVlIDpcblx0XHRcdFx0bnVsbDtcbn07XG5cblNpenpsZS5lc2NhcGUgPSBmdW5jdGlvbiggc2VsICkge1xuXHRyZXR1cm4gKCBzZWwgKyBcIlwiICkucmVwbGFjZSggcmNzc2VzY2FwZSwgZmNzc2VzY2FwZSApO1xufTtcblxuU2l6emxlLmVycm9yID0gZnVuY3Rpb24oIG1zZyApIHtcblx0dGhyb3cgbmV3IEVycm9yKCBcIlN5bnRheCBlcnJvciwgdW5yZWNvZ25pemVkIGV4cHJlc3Npb246IFwiICsgbXNnICk7XG59O1xuXG4vKipcbiAqIERvY3VtZW50IHNvcnRpbmcgYW5kIHJlbW92aW5nIGR1cGxpY2F0ZXNcbiAqIEBwYXJhbSB7QXJyYXlMaWtlfSByZXN1bHRzXG4gKi9cblNpenpsZS51bmlxdWVTb3J0ID0gZnVuY3Rpb24oIHJlc3VsdHMgKSB7XG5cdHZhciBlbGVtLFxuXHRcdGR1cGxpY2F0ZXMgPSBbXSxcblx0XHRqID0gMCxcblx0XHRpID0gMDtcblxuXHQvLyBVbmxlc3Mgd2UgKmtub3cqIHdlIGNhbiBkZXRlY3QgZHVwbGljYXRlcywgYXNzdW1lIHRoZWlyIHByZXNlbmNlXG5cdGhhc0R1cGxpY2F0ZSA9ICFzdXBwb3J0LmRldGVjdER1cGxpY2F0ZXM7XG5cdHNvcnRJbnB1dCA9ICFzdXBwb3J0LnNvcnRTdGFibGUgJiYgcmVzdWx0cy5zbGljZSggMCApO1xuXHRyZXN1bHRzLnNvcnQoIHNvcnRPcmRlciApO1xuXG5cdGlmICggaGFzRHVwbGljYXRlICkge1xuXHRcdHdoaWxlICggKCBlbGVtID0gcmVzdWx0c1sgaSsrIF0gKSApIHtcblx0XHRcdGlmICggZWxlbSA9PT0gcmVzdWx0c1sgaSBdICkge1xuXHRcdFx0XHRqID0gZHVwbGljYXRlcy5wdXNoKCBpICk7XG5cdFx0XHR9XG5cdFx0fVxuXHRcdHdoaWxlICggai0tICkge1xuXHRcdFx0cmVzdWx0cy5zcGxpY2UoIGR1cGxpY2F0ZXNbIGogXSwgMSApO1xuXHRcdH1cblx0fVxuXG5cdC8vIENsZWFyIGlucHV0IGFmdGVyIHNvcnRpbmcgdG8gcmVsZWFzZSBvYmplY3RzXG5cdC8vIFNlZSBodHRwczovL2dpdGh1Yi5jb20vanF1ZXJ5L3NpenpsZS9wdWxsLzIyNVxuXHRzb3J0SW5wdXQgPSBudWxsO1xuXG5cdHJldHVybiByZXN1bHRzO1xufTtcblxuLyoqXG4gKiBVdGlsaXR5IGZ1bmN0aW9uIGZvciByZXRyaWV2aW5nIHRoZSB0ZXh0IHZhbHVlIG9mIGFuIGFycmF5IG9mIERPTSBub2Rlc1xuICogQHBhcmFtIHtBcnJheXxFbGVtZW50fSBlbGVtXG4gKi9cbmdldFRleHQgPSBTaXp6bGUuZ2V0VGV4dCA9IGZ1bmN0aW9uKCBlbGVtICkge1xuXHR2YXIgbm9kZSxcblx0XHRyZXQgPSBcIlwiLFxuXHRcdGkgPSAwLFxuXHRcdG5vZGVUeXBlID0gZWxlbS5ub2RlVHlwZTtcblxuXHRpZiAoICFub2RlVHlwZSApIHtcblxuXHRcdC8vIElmIG5vIG5vZGVUeXBlLCB0aGlzIGlzIGV4cGVjdGVkIHRvIGJlIGFuIGFycmF5XG5cdFx0d2hpbGUgKCAoIG5vZGUgPSBlbGVtWyBpKysgXSApICkge1xuXG5cdFx0XHQvLyBEbyBub3QgdHJhdmVyc2UgY29tbWVudCBub2Rlc1xuXHRcdFx0cmV0ICs9IGdldFRleHQoIG5vZGUgKTtcblx0XHR9XG5cdH0gZWxzZSBpZiAoIG5vZGVUeXBlID09PSAxIHx8IG5vZGVUeXBlID09PSA5IHx8IG5vZGVUeXBlID09PSAxMSApIHtcblxuXHRcdC8vIFVzZSB0ZXh0Q29udGVudCBmb3IgZWxlbWVudHNcblx0XHQvLyBpbm5lclRleHQgdXNhZ2UgcmVtb3ZlZCBmb3IgY29uc2lzdGVuY3kgb2YgbmV3IGxpbmVzIChqUXVlcnkgIzExMTUzKVxuXHRcdGlmICggdHlwZW9mIGVsZW0udGV4dENvbnRlbnQgPT09IFwic3RyaW5nXCIgKSB7XG5cdFx0XHRyZXR1cm4gZWxlbS50ZXh0Q29udGVudDtcblx0XHR9IGVsc2Uge1xuXG5cdFx0XHQvLyBUcmF2ZXJzZSBpdHMgY2hpbGRyZW5cblx0XHRcdGZvciAoIGVsZW0gPSBlbGVtLmZpcnN0Q2hpbGQ7IGVsZW07IGVsZW0gPSBlbGVtLm5leHRTaWJsaW5nICkge1xuXHRcdFx0XHRyZXQgKz0gZ2V0VGV4dCggZWxlbSApO1xuXHRcdFx0fVxuXHRcdH1cblx0fSBlbHNlIGlmICggbm9kZVR5cGUgPT09IDMgfHwgbm9kZVR5cGUgPT09IDQgKSB7XG5cdFx0cmV0dXJuIGVsZW0ubm9kZVZhbHVlO1xuXHR9XG5cblx0Ly8gRG8gbm90IGluY2x1ZGUgY29tbWVudCBvciBwcm9jZXNzaW5nIGluc3RydWN0aW9uIG5vZGVzXG5cblx0cmV0dXJuIHJldDtcbn07XG5cbkV4cHIgPSBTaXp6bGUuc2VsZWN0b3JzID0ge1xuXG5cdC8vIENhbiBiZSBhZGp1c3RlZCBieSB0aGUgdXNlclxuXHRjYWNoZUxlbmd0aDogNTAsXG5cblx0Y3JlYXRlUHNldWRvOiBtYXJrRnVuY3Rpb24sXG5cblx0bWF0Y2g6IG1hdGNoRXhwcixcblxuXHRhdHRySGFuZGxlOiB7fSxcblxuXHRmaW5kOiB7fSxcblxuXHRyZWxhdGl2ZToge1xuXHRcdFwiPlwiOiB7IGRpcjogXCJwYXJlbnROb2RlXCIsIGZpcnN0OiB0cnVlIH0sXG5cdFx0XCIgXCI6IHsgZGlyOiBcInBhcmVudE5vZGVcIiB9LFxuXHRcdFwiK1wiOiB7IGRpcjogXCJwcmV2aW91c1NpYmxpbmdcIiwgZmlyc3Q6IHRydWUgfSxcblx0XHRcIn5cIjogeyBkaXI6IFwicHJldmlvdXNTaWJsaW5nXCIgfVxuXHR9LFxuXG5cdHByZUZpbHRlcjoge1xuXHRcdFwiQVRUUlwiOiBmdW5jdGlvbiggbWF0Y2ggKSB7XG5cdFx0XHRtYXRjaFsgMSBdID0gbWF0Y2hbIDEgXS5yZXBsYWNlKCBydW5lc2NhcGUsIGZ1bmVzY2FwZSApO1xuXG5cdFx0XHQvLyBNb3ZlIHRoZSBnaXZlbiB2YWx1ZSB0byBtYXRjaFszXSB3aGV0aGVyIHF1b3RlZCBvciB1bnF1b3RlZFxuXHRcdFx0bWF0Y2hbIDMgXSA9ICggbWF0Y2hbIDMgXSB8fCBtYXRjaFsgNCBdIHx8XG5cdFx0XHRcdG1hdGNoWyA1IF0gfHwgXCJcIiApLnJlcGxhY2UoIHJ1bmVzY2FwZSwgZnVuZXNjYXBlICk7XG5cblx0XHRcdGlmICggbWF0Y2hbIDIgXSA9PT0gXCJ+PVwiICkge1xuXHRcdFx0XHRtYXRjaFsgMyBdID0gXCIgXCIgKyBtYXRjaFsgMyBdICsgXCIgXCI7XG5cdFx0XHR9XG5cblx0XHRcdHJldHVybiBtYXRjaC5zbGljZSggMCwgNCApO1xuXHRcdH0sXG5cblx0XHRcIkNISUxEXCI6IGZ1bmN0aW9uKCBtYXRjaCApIHtcblxuXHRcdFx0LyogbWF0Y2hlcyBmcm9tIG1hdGNoRXhwcltcIkNISUxEXCJdXG5cdFx0XHRcdDEgdHlwZSAob25seXxudGh8Li4uKVxuXHRcdFx0XHQyIHdoYXQgKGNoaWxkfG9mLXR5cGUpXG5cdFx0XHRcdDMgYXJndW1lbnQgKGV2ZW58b2RkfFxcZCp8XFxkKm4oWystXVxcZCspP3wuLi4pXG5cdFx0XHRcdDQgeG4tY29tcG9uZW50IG9mIHhuK3kgYXJndW1lbnQgKFsrLV0/XFxkKm58KVxuXHRcdFx0XHQ1IHNpZ24gb2YgeG4tY29tcG9uZW50XG5cdFx0XHRcdDYgeCBvZiB4bi1jb21wb25lbnRcblx0XHRcdFx0NyBzaWduIG9mIHktY29tcG9uZW50XG5cdFx0XHRcdDggeSBvZiB5LWNvbXBvbmVudFxuXHRcdFx0Ki9cblx0XHRcdG1hdGNoWyAxIF0gPSBtYXRjaFsgMSBdLnRvTG93ZXJDYXNlKCk7XG5cblx0XHRcdGlmICggbWF0Y2hbIDEgXS5zbGljZSggMCwgMyApID09PSBcIm50aFwiICkge1xuXG5cdFx0XHRcdC8vIG50aC0qIHJlcXVpcmVzIGFyZ3VtZW50XG5cdFx0XHRcdGlmICggIW1hdGNoWyAzIF0gKSB7XG5cdFx0XHRcdFx0U2l6emxlLmVycm9yKCBtYXRjaFsgMCBdICk7XG5cdFx0XHRcdH1cblxuXHRcdFx0XHQvLyBudW1lcmljIHggYW5kIHkgcGFyYW1ldGVycyBmb3IgRXhwci5maWx0ZXIuQ0hJTERcblx0XHRcdFx0Ly8gcmVtZW1iZXIgdGhhdCBmYWxzZS90cnVlIGNhc3QgcmVzcGVjdGl2ZWx5IHRvIDAvMVxuXHRcdFx0XHRtYXRjaFsgNCBdID0gKyggbWF0Y2hbIDQgXSA/XG5cdFx0XHRcdFx0bWF0Y2hbIDUgXSArICggbWF0Y2hbIDYgXSB8fCAxICkgOlxuXHRcdFx0XHRcdDIgKiAoIG1hdGNoWyAzIF0gPT09IFwiZXZlblwiIHx8IG1hdGNoWyAzIF0gPT09IFwib2RkXCIgKSApO1xuXHRcdFx0XHRtYXRjaFsgNSBdID0gKyggKCBtYXRjaFsgNyBdICsgbWF0Y2hbIDggXSApIHx8IG1hdGNoWyAzIF0gPT09IFwib2RkXCIgKTtcblxuXHRcdFx0XHQvLyBvdGhlciB0eXBlcyBwcm9oaWJpdCBhcmd1bWVudHNcblx0XHRcdH0gZWxzZSBpZiAoIG1hdGNoWyAzIF0gKSB7XG5cdFx0XHRcdFNpenpsZS5lcnJvciggbWF0Y2hbIDAgXSApO1xuXHRcdFx0fVxuXG5cdFx0XHRyZXR1cm4gbWF0Y2g7XG5cdFx0fSxcblxuXHRcdFwiUFNFVURPXCI6IGZ1bmN0aW9uKCBtYXRjaCApIHtcblx0XHRcdHZhciBleGNlc3MsXG5cdFx0XHRcdHVucXVvdGVkID0gIW1hdGNoWyA2IF0gJiYgbWF0Y2hbIDIgXTtcblxuXHRcdFx0aWYgKCBtYXRjaEV4cHJbIFwiQ0hJTERcIiBdLnRlc3QoIG1hdGNoWyAwIF0gKSApIHtcblx0XHRcdFx0cmV0dXJuIG51bGw7XG5cdFx0XHR9XG5cblx0XHRcdC8vIEFjY2VwdCBxdW90ZWQgYXJndW1lbnRzIGFzLWlzXG5cdFx0XHRpZiAoIG1hdGNoWyAzIF0gKSB7XG5cdFx0XHRcdG1hdGNoWyAyIF0gPSBtYXRjaFsgNCBdIHx8IG1hdGNoWyA1IF0gfHwgXCJcIjtcblxuXHRcdFx0Ly8gU3RyaXAgZXhjZXNzIGNoYXJhY3RlcnMgZnJvbSB1bnF1b3RlZCBhcmd1bWVudHNcblx0XHRcdH0gZWxzZSBpZiAoIHVucXVvdGVkICYmIHJwc2V1ZG8udGVzdCggdW5xdW90ZWQgKSAmJlxuXG5cdFx0XHRcdC8vIEdldCBleGNlc3MgZnJvbSB0b2tlbml6ZSAocmVjdXJzaXZlbHkpXG5cdFx0XHRcdCggZXhjZXNzID0gdG9rZW5pemUoIHVucXVvdGVkLCB0cnVlICkgKSAmJlxuXG5cdFx0XHRcdC8vIGFkdmFuY2UgdG8gdGhlIG5leHQgY2xvc2luZyBwYXJlbnRoZXNpc1xuXHRcdFx0XHQoIGV4Y2VzcyA9IHVucXVvdGVkLmluZGV4T2YoIFwiKVwiLCB1bnF1b3RlZC5sZW5ndGggLSBleGNlc3MgKSAtIHVucXVvdGVkLmxlbmd0aCApICkge1xuXG5cdFx0XHRcdC8vIGV4Y2VzcyBpcyBhIG5lZ2F0aXZlIGluZGV4XG5cdFx0XHRcdG1hdGNoWyAwIF0gPSBtYXRjaFsgMCBdLnNsaWNlKCAwLCBleGNlc3MgKTtcblx0XHRcdFx0bWF0Y2hbIDIgXSA9IHVucXVvdGVkLnNsaWNlKCAwLCBleGNlc3MgKTtcblx0XHRcdH1cblxuXHRcdFx0Ly8gUmV0dXJuIG9ubHkgY2FwdHVyZXMgbmVlZGVkIGJ5IHRoZSBwc2V1ZG8gZmlsdGVyIG1ldGhvZCAodHlwZSBhbmQgYXJndW1lbnQpXG5cdFx0XHRyZXR1cm4gbWF0Y2guc2xpY2UoIDAsIDMgKTtcblx0XHR9XG5cdH0sXG5cblx0ZmlsdGVyOiB7XG5cblx0XHRcIlRBR1wiOiBmdW5jdGlvbiggbm9kZU5hbWVTZWxlY3RvciApIHtcblx0XHRcdHZhciBub2RlTmFtZSA9IG5vZGVOYW1lU2VsZWN0b3IucmVwbGFjZSggcnVuZXNjYXBlLCBmdW5lc2NhcGUgKS50b0xvd2VyQ2FzZSgpO1xuXHRcdFx0cmV0dXJuIG5vZGVOYW1lU2VsZWN0b3IgPT09IFwiKlwiID9cblx0XHRcdFx0ZnVuY3Rpb24oKSB7XG5cdFx0XHRcdFx0cmV0dXJuIHRydWU7XG5cdFx0XHRcdH0gOlxuXHRcdFx0XHRmdW5jdGlvbiggZWxlbSApIHtcblx0XHRcdFx0XHRyZXR1cm4gZWxlbS5ub2RlTmFtZSAmJiBlbGVtLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCkgPT09IG5vZGVOYW1lO1xuXHRcdFx0XHR9O1xuXHRcdH0sXG5cblx0XHRcIkNMQVNTXCI6IGZ1bmN0aW9uKCBjbGFzc05hbWUgKSB7XG5cdFx0XHR2YXIgcGF0dGVybiA9IGNsYXNzQ2FjaGVbIGNsYXNzTmFtZSArIFwiIFwiIF07XG5cblx0XHRcdHJldHVybiBwYXR0ZXJuIHx8XG5cdFx0XHRcdCggcGF0dGVybiA9IG5ldyBSZWdFeHAoIFwiKF58XCIgKyB3aGl0ZXNwYWNlICtcblx0XHRcdFx0XHRcIilcIiArIGNsYXNzTmFtZSArIFwiKFwiICsgd2hpdGVzcGFjZSArIFwifCQpXCIgKSApICYmIGNsYXNzQ2FjaGUoXG5cdFx0XHRcdFx0XHRjbGFzc05hbWUsIGZ1bmN0aW9uKCBlbGVtICkge1xuXHRcdFx0XHRcdFx0XHRyZXR1cm4gcGF0dGVybi50ZXN0KFxuXHRcdFx0XHRcdFx0XHRcdHR5cGVvZiBlbGVtLmNsYXNzTmFtZSA9PT0gXCJzdHJpbmdcIiAmJiBlbGVtLmNsYXNzTmFtZSB8fFxuXHRcdFx0XHRcdFx0XHRcdHR5cGVvZiBlbGVtLmdldEF0dHJpYnV0ZSAhPT0gXCJ1bmRlZmluZWRcIiAmJlxuXHRcdFx0XHRcdFx0XHRcdFx0ZWxlbS5nZXRBdHRyaWJ1dGUoIFwiY2xhc3NcIiApIHx8XG5cdFx0XHRcdFx0XHRcdFx0XCJcIlxuXHRcdFx0XHRcdFx0XHQpO1xuXHRcdFx0XHR9ICk7XG5cdFx0fSxcblxuXHRcdFwiQVRUUlwiOiBmdW5jdGlvbiggbmFtZSwgb3BlcmF0b3IsIGNoZWNrICkge1xuXHRcdFx0cmV0dXJuIGZ1bmN0aW9uKCBlbGVtICkge1xuXHRcdFx0XHR2YXIgcmVzdWx0ID0gU2l6emxlLmF0dHIoIGVsZW0sIG5hbWUgKTtcblxuXHRcdFx0XHRpZiAoIHJlc3VsdCA9PSBudWxsICkge1xuXHRcdFx0XHRcdHJldHVybiBvcGVyYXRvciA9PT0gXCIhPVwiO1xuXHRcdFx0XHR9XG5cdFx0XHRcdGlmICggIW9wZXJhdG9yICkge1xuXHRcdFx0XHRcdHJldHVybiB0cnVlO1xuXHRcdFx0XHR9XG5cblx0XHRcdFx0cmVzdWx0ICs9IFwiXCI7XG5cblx0XHRcdFx0LyogZXNsaW50LWRpc2FibGUgbWF4LWxlbiAqL1xuXG5cdFx0XHRcdHJldHVybiBvcGVyYXRvciA9PT0gXCI9XCIgPyByZXN1bHQgPT09IGNoZWNrIDpcblx0XHRcdFx0XHRvcGVyYXRvciA9PT0gXCIhPVwiID8gcmVzdWx0ICE9PSBjaGVjayA6XG5cdFx0XHRcdFx0b3BlcmF0b3IgPT09IFwiXj1cIiA/IGNoZWNrICYmIHJlc3VsdC5pbmRleE9mKCBjaGVjayApID09PSAwIDpcblx0XHRcdFx0XHRvcGVyYXRvciA9PT0gXCIqPVwiID8gY2hlY2sgJiYgcmVzdWx0LmluZGV4T2YoIGNoZWNrICkgPiAtMSA6XG5cdFx0XHRcdFx0b3BlcmF0b3IgPT09IFwiJD1cIiA/IGNoZWNrICYmIHJlc3VsdC5zbGljZSggLWNoZWNrLmxlbmd0aCApID09PSBjaGVjayA6XG5cdFx0XHRcdFx0b3BlcmF0b3IgPT09IFwifj1cIiA/ICggXCIgXCIgKyByZXN1bHQucmVwbGFjZSggcndoaXRlc3BhY2UsIFwiIFwiICkgKyBcIiBcIiApLmluZGV4T2YoIGNoZWNrICkgPiAtMSA6XG5cdFx0XHRcdFx0b3BlcmF0b3IgPT09IFwifD1cIiA/IHJlc3VsdCA9PT0gY2hlY2sgfHwgcmVzdWx0LnNsaWNlKCAwLCBjaGVjay5sZW5ndGggKyAxICkgPT09IGNoZWNrICsgXCItXCIgOlxuXHRcdFx0XHRcdGZhbHNlO1xuXHRcdFx0XHQvKiBlc2xpbnQtZW5hYmxlIG1heC1sZW4gKi9cblxuXHRcdFx0fTtcblx0XHR9LFxuXG5cdFx0XCJDSElMRFwiOiBmdW5jdGlvbiggdHlwZSwgd2hhdCwgX2FyZ3VtZW50LCBmaXJzdCwgbGFzdCApIHtcblx0XHRcdHZhciBzaW1wbGUgPSB0eXBlLnNsaWNlKCAwLCAzICkgIT09IFwibnRoXCIsXG5cdFx0XHRcdGZvcndhcmQgPSB0eXBlLnNsaWNlKCAtNCApICE9PSBcImxhc3RcIixcblx0XHRcdFx0b2ZUeXBlID0gd2hhdCA9PT0gXCJvZi10eXBlXCI7XG5cblx0XHRcdHJldHVybiBmaXJzdCA9PT0gMSAmJiBsYXN0ID09PSAwID9cblxuXHRcdFx0XHQvLyBTaG9ydGN1dCBmb3IgOm50aC0qKG4pXG5cdFx0XHRcdGZ1bmN0aW9uKCBlbGVtICkge1xuXHRcdFx0XHRcdHJldHVybiAhIWVsZW0ucGFyZW50Tm9kZTtcblx0XHRcdFx0fSA6XG5cblx0XHRcdFx0ZnVuY3Rpb24oIGVsZW0sIF9jb250ZXh0LCB4bWwgKSB7XG5cdFx0XHRcdFx0dmFyIGNhY2hlLCB1bmlxdWVDYWNoZSwgb3V0ZXJDYWNoZSwgbm9kZSwgbm9kZUluZGV4LCBzdGFydCxcblx0XHRcdFx0XHRcdGRpciA9IHNpbXBsZSAhPT0gZm9yd2FyZCA/IFwibmV4dFNpYmxpbmdcIiA6IFwicHJldmlvdXNTaWJsaW5nXCIsXG5cdFx0XHRcdFx0XHRwYXJlbnQgPSBlbGVtLnBhcmVudE5vZGUsXG5cdFx0XHRcdFx0XHRuYW1lID0gb2ZUeXBlICYmIGVsZW0ubm9kZU5hbWUudG9Mb3dlckNhc2UoKSxcblx0XHRcdFx0XHRcdHVzZUNhY2hlID0gIXhtbCAmJiAhb2ZUeXBlLFxuXHRcdFx0XHRcdFx0ZGlmZiA9IGZhbHNlO1xuXG5cdFx0XHRcdFx0aWYgKCBwYXJlbnQgKSB7XG5cblx0XHRcdFx0XHRcdC8vIDooZmlyc3R8bGFzdHxvbmx5KS0oY2hpbGR8b2YtdHlwZSlcblx0XHRcdFx0XHRcdGlmICggc2ltcGxlICkge1xuXHRcdFx0XHRcdFx0XHR3aGlsZSAoIGRpciApIHtcblx0XHRcdFx0XHRcdFx0XHRub2RlID0gZWxlbTtcblx0XHRcdFx0XHRcdFx0XHR3aGlsZSAoICggbm9kZSA9IG5vZGVbIGRpciBdICkgKSB7XG5cdFx0XHRcdFx0XHRcdFx0XHRpZiAoIG9mVHlwZSA/XG5cdFx0XHRcdFx0XHRcdFx0XHRcdG5vZGUubm9kZU5hbWUudG9Mb3dlckNhc2UoKSA9PT0gbmFtZSA6XG5cdFx0XHRcdFx0XHRcdFx0XHRcdG5vZGUubm9kZVR5cGUgPT09IDEgKSB7XG5cblx0XHRcdFx0XHRcdFx0XHRcdFx0cmV0dXJuIGZhbHNlO1xuXHRcdFx0XHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0XHRcdH1cblxuXHRcdFx0XHRcdFx0XHRcdC8vIFJldmVyc2UgZGlyZWN0aW9uIGZvciA6b25seS0qIChpZiB3ZSBoYXZlbid0IHlldCBkb25lIHNvKVxuXHRcdFx0XHRcdFx0XHRcdHN0YXJ0ID0gZGlyID0gdHlwZSA9PT0gXCJvbmx5XCIgJiYgIXN0YXJ0ICYmIFwibmV4dFNpYmxpbmdcIjtcblx0XHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0XHRyZXR1cm4gdHJ1ZTtcblx0XHRcdFx0XHRcdH1cblxuXHRcdFx0XHRcdFx0c3RhcnQgPSBbIGZvcndhcmQgPyBwYXJlbnQuZmlyc3RDaGlsZCA6IHBhcmVudC5sYXN0Q2hpbGQgXTtcblxuXHRcdFx0XHRcdFx0Ly8gbm9uLXhtbCA6bnRoLWNoaWxkKC4uLikgc3RvcmVzIGNhY2hlIGRhdGEgb24gYHBhcmVudGBcblx0XHRcdFx0XHRcdGlmICggZm9yd2FyZCAmJiB1c2VDYWNoZSApIHtcblxuXHRcdFx0XHRcdFx0XHQvLyBTZWVrIGBlbGVtYCBmcm9tIGEgcHJldmlvdXNseS1jYWNoZWQgaW5kZXhcblxuXHRcdFx0XHRcdFx0XHQvLyAuLi5pbiBhIGd6aXAtZnJpZW5kbHkgd2F5XG5cdFx0XHRcdFx0XHRcdG5vZGUgPSBwYXJlbnQ7XG5cdFx0XHRcdFx0XHRcdG91dGVyQ2FjaGUgPSBub2RlWyBleHBhbmRvIF0gfHwgKCBub2RlWyBleHBhbmRvIF0gPSB7fSApO1xuXG5cdFx0XHRcdFx0XHRcdC8vIFN1cHBvcnQ6IElFIDw5IG9ubHlcblx0XHRcdFx0XHRcdFx0Ly8gRGVmZW5kIGFnYWluc3QgY2xvbmVkIGF0dHJvcGVydGllcyAoalF1ZXJ5IGdoLTE3MDkpXG5cdFx0XHRcdFx0XHRcdHVuaXF1ZUNhY2hlID0gb3V0ZXJDYWNoZVsgbm9kZS51bmlxdWVJRCBdIHx8XG5cdFx0XHRcdFx0XHRcdFx0KCBvdXRlckNhY2hlWyBub2RlLnVuaXF1ZUlEIF0gPSB7fSApO1xuXG5cdFx0XHRcdFx0XHRcdGNhY2hlID0gdW5pcXVlQ2FjaGVbIHR5cGUgXSB8fCBbXTtcblx0XHRcdFx0XHRcdFx0bm9kZUluZGV4ID0gY2FjaGVbIDAgXSA9PT0gZGlycnVucyAmJiBjYWNoZVsgMSBdO1xuXHRcdFx0XHRcdFx0XHRkaWZmID0gbm9kZUluZGV4ICYmIGNhY2hlWyAyIF07XG5cdFx0XHRcdFx0XHRcdG5vZGUgPSBub2RlSW5kZXggJiYgcGFyZW50LmNoaWxkTm9kZXNbIG5vZGVJbmRleCBdO1xuXG5cdFx0XHRcdFx0XHRcdHdoaWxlICggKCBub2RlID0gKytub2RlSW5kZXggJiYgbm9kZSAmJiBub2RlWyBkaXIgXSB8fFxuXG5cdFx0XHRcdFx0XHRcdFx0Ly8gRmFsbGJhY2sgdG8gc2Vla2luZyBgZWxlbWAgZnJvbSB0aGUgc3RhcnRcblx0XHRcdFx0XHRcdFx0XHQoIGRpZmYgPSBub2RlSW5kZXggPSAwICkgfHwgc3RhcnQucG9wKCkgKSApIHtcblxuXHRcdFx0XHRcdFx0XHRcdC8vIFdoZW4gZm91bmQsIGNhY2hlIGluZGV4ZXMgb24gYHBhcmVudGAgYW5kIGJyZWFrXG5cdFx0XHRcdFx0XHRcdFx0aWYgKCBub2RlLm5vZGVUeXBlID09PSAxICYmICsrZGlmZiAmJiBub2RlID09PSBlbGVtICkge1xuXHRcdFx0XHRcdFx0XHRcdFx0dW5pcXVlQ2FjaGVbIHR5cGUgXSA9IFsgZGlycnVucywgbm9kZUluZGV4LCBkaWZmIF07XG5cdFx0XHRcdFx0XHRcdFx0XHRicmVhaztcblx0XHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHRcdH1cblxuXHRcdFx0XHRcdFx0fSBlbHNlIHtcblxuXHRcdFx0XHRcdFx0XHQvLyBVc2UgcHJldmlvdXNseS1jYWNoZWQgZWxlbWVudCBpbmRleCBpZiBhdmFpbGFibGVcblx0XHRcdFx0XHRcdFx0aWYgKCB1c2VDYWNoZSApIHtcblxuXHRcdFx0XHRcdFx0XHRcdC8vIC4uLmluIGEgZ3ppcC1mcmllbmRseSB3YXlcblx0XHRcdFx0XHRcdFx0XHRub2RlID0gZWxlbTtcblx0XHRcdFx0XHRcdFx0XHRvdXRlckNhY2hlID0gbm9kZVsgZXhwYW5kbyBdIHx8ICggbm9kZVsgZXhwYW5kbyBdID0ge30gKTtcblxuXHRcdFx0XHRcdFx0XHRcdC8vIFN1cHBvcnQ6IElFIDw5IG9ubHlcblx0XHRcdFx0XHRcdFx0XHQvLyBEZWZlbmQgYWdhaW5zdCBjbG9uZWQgYXR0cm9wZXJ0aWVzIChqUXVlcnkgZ2gtMTcwOSlcblx0XHRcdFx0XHRcdFx0XHR1bmlxdWVDYWNoZSA9IG91dGVyQ2FjaGVbIG5vZGUudW5pcXVlSUQgXSB8fFxuXHRcdFx0XHRcdFx0XHRcdFx0KCBvdXRlckNhY2hlWyBub2RlLnVuaXF1ZUlEIF0gPSB7fSApO1xuXG5cdFx0XHRcdFx0XHRcdFx0Y2FjaGUgPSB1bmlxdWVDYWNoZVsgdHlwZSBdIHx8IFtdO1xuXHRcdFx0XHRcdFx0XHRcdG5vZGVJbmRleCA9IGNhY2hlWyAwIF0gPT09IGRpcnJ1bnMgJiYgY2FjaGVbIDEgXTtcblx0XHRcdFx0XHRcdFx0XHRkaWZmID0gbm9kZUluZGV4O1xuXHRcdFx0XHRcdFx0XHR9XG5cblx0XHRcdFx0XHRcdFx0Ly8geG1sIDpudGgtY2hpbGQoLi4uKVxuXHRcdFx0XHRcdFx0XHQvLyBvciA6bnRoLWxhc3QtY2hpbGQoLi4uKSBvciA6bnRoKC1sYXN0KT8tb2YtdHlwZSguLi4pXG5cdFx0XHRcdFx0XHRcdGlmICggZGlmZiA9PT0gZmFsc2UgKSB7XG5cblx0XHRcdFx0XHRcdFx0XHQvLyBVc2UgdGhlIHNhbWUgbG9vcCBhcyBhYm92ZSB0byBzZWVrIGBlbGVtYCBmcm9tIHRoZSBzdGFydFxuXHRcdFx0XHRcdFx0XHRcdHdoaWxlICggKCBub2RlID0gKytub2RlSW5kZXggJiYgbm9kZSAmJiBub2RlWyBkaXIgXSB8fFxuXHRcdFx0XHRcdFx0XHRcdFx0KCBkaWZmID0gbm9kZUluZGV4ID0gMCApIHx8IHN0YXJ0LnBvcCgpICkgKSB7XG5cblx0XHRcdFx0XHRcdFx0XHRcdGlmICggKCBvZlR5cGUgP1xuXHRcdFx0XHRcdFx0XHRcdFx0XHRub2RlLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCkgPT09IG5hbWUgOlxuXHRcdFx0XHRcdFx0XHRcdFx0XHRub2RlLm5vZGVUeXBlID09PSAxICkgJiZcblx0XHRcdFx0XHRcdFx0XHRcdFx0KytkaWZmICkge1xuXG5cdFx0XHRcdFx0XHRcdFx0XHRcdC8vIENhY2hlIHRoZSBpbmRleCBvZiBlYWNoIGVuY291bnRlcmVkIGVsZW1lbnRcblx0XHRcdFx0XHRcdFx0XHRcdFx0aWYgKCB1c2VDYWNoZSApIHtcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHRvdXRlckNhY2hlID0gbm9kZVsgZXhwYW5kbyBdIHx8XG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHQoIG5vZGVbIGV4cGFuZG8gXSA9IHt9ICk7XG5cblx0XHRcdFx0XHRcdFx0XHRcdFx0XHQvLyBTdXBwb3J0OiBJRSA8OSBvbmx5XG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0Ly8gRGVmZW5kIGFnYWluc3QgY2xvbmVkIGF0dHJvcGVydGllcyAoalF1ZXJ5IGdoLTE3MDkpXG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0dW5pcXVlQ2FjaGUgPSBvdXRlckNhY2hlWyBub2RlLnVuaXF1ZUlEIF0gfHxcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdCggb3V0ZXJDYWNoZVsgbm9kZS51bmlxdWVJRCBdID0ge30gKTtcblxuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdHVuaXF1ZUNhY2hlWyB0eXBlIF0gPSBbIGRpcnJ1bnMsIGRpZmYgXTtcblx0XHRcdFx0XHRcdFx0XHRcdFx0fVxuXG5cdFx0XHRcdFx0XHRcdFx0XHRcdGlmICggbm9kZSA9PT0gZWxlbSApIHtcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHRicmVhaztcblx0XHRcdFx0XHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0fVxuXG5cdFx0XHRcdFx0XHQvLyBJbmNvcnBvcmF0ZSB0aGUgb2Zmc2V0LCB0aGVuIGNoZWNrIGFnYWluc3QgY3ljbGUgc2l6ZVxuXHRcdFx0XHRcdFx0ZGlmZiAtPSBsYXN0O1xuXHRcdFx0XHRcdFx0cmV0dXJuIGRpZmYgPT09IGZpcnN0IHx8ICggZGlmZiAlIGZpcnN0ID09PSAwICYmIGRpZmYgLyBmaXJzdCA+PSAwICk7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9O1xuXHRcdH0sXG5cblx0XHRcIlBTRVVET1wiOiBmdW5jdGlvbiggcHNldWRvLCBhcmd1bWVudCApIHtcblxuXHRcdFx0Ly8gcHNldWRvLWNsYXNzIG5hbWVzIGFyZSBjYXNlLWluc2Vuc2l0aXZlXG5cdFx0XHQvLyBodHRwOi8vd3d3LnczLm9yZy9UUi9zZWxlY3RvcnMvI3BzZXVkby1jbGFzc2VzXG5cdFx0XHQvLyBQcmlvcml0aXplIGJ5IGNhc2Ugc2Vuc2l0aXZpdHkgaW4gY2FzZSBjdXN0b20gcHNldWRvcyBhcmUgYWRkZWQgd2l0aCB1cHBlcmNhc2UgbGV0dGVyc1xuXHRcdFx0Ly8gUmVtZW1iZXIgdGhhdCBzZXRGaWx0ZXJzIGluaGVyaXRzIGZyb20gcHNldWRvc1xuXHRcdFx0dmFyIGFyZ3MsXG5cdFx0XHRcdGZuID0gRXhwci5wc2V1ZG9zWyBwc2V1ZG8gXSB8fCBFeHByLnNldEZpbHRlcnNbIHBzZXVkby50b0xvd2VyQ2FzZSgpIF0gfHxcblx0XHRcdFx0XHRTaXp6bGUuZXJyb3IoIFwidW5zdXBwb3J0ZWQgcHNldWRvOiBcIiArIHBzZXVkbyApO1xuXG5cdFx0XHQvLyBUaGUgdXNlciBtYXkgdXNlIGNyZWF0ZVBzZXVkbyB0byBpbmRpY2F0ZSB0aGF0XG5cdFx0XHQvLyBhcmd1bWVudHMgYXJlIG5lZWRlZCB0byBjcmVhdGUgdGhlIGZpbHRlciBmdW5jdGlvblxuXHRcdFx0Ly8ganVzdCBhcyBTaXp6bGUgZG9lc1xuXHRcdFx0aWYgKCBmblsgZXhwYW5kbyBdICkge1xuXHRcdFx0XHRyZXR1cm4gZm4oIGFyZ3VtZW50ICk7XG5cdFx0XHR9XG5cblx0XHRcdC8vIEJ1dCBtYWludGFpbiBzdXBwb3J0IGZvciBvbGQgc2lnbmF0dXJlc1xuXHRcdFx0aWYgKCBmbi5sZW5ndGggPiAxICkge1xuXHRcdFx0XHRhcmdzID0gWyBwc2V1ZG8sIHBzZXVkbywgXCJcIiwgYXJndW1lbnQgXTtcblx0XHRcdFx0cmV0dXJuIEV4cHIuc2V0RmlsdGVycy5oYXNPd25Qcm9wZXJ0eSggcHNldWRvLnRvTG93ZXJDYXNlKCkgKSA/XG5cdFx0XHRcdFx0bWFya0Z1bmN0aW9uKCBmdW5jdGlvbiggc2VlZCwgbWF0Y2hlcyApIHtcblx0XHRcdFx0XHRcdHZhciBpZHgsXG5cdFx0XHRcdFx0XHRcdG1hdGNoZWQgPSBmbiggc2VlZCwgYXJndW1lbnQgKSxcblx0XHRcdFx0XHRcdFx0aSA9IG1hdGNoZWQubGVuZ3RoO1xuXHRcdFx0XHRcdFx0d2hpbGUgKCBpLS0gKSB7XG5cdFx0XHRcdFx0XHRcdGlkeCA9IGluZGV4T2YoIHNlZWQsIG1hdGNoZWRbIGkgXSApO1xuXHRcdFx0XHRcdFx0XHRzZWVkWyBpZHggXSA9ICEoIG1hdGNoZXNbIGlkeCBdID0gbWF0Y2hlZFsgaSBdICk7XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0fSApIDpcblx0XHRcdFx0XHRmdW5jdGlvbiggZWxlbSApIHtcblx0XHRcdFx0XHRcdHJldHVybiBmbiggZWxlbSwgMCwgYXJncyApO1xuXHRcdFx0XHRcdH07XG5cdFx0XHR9XG5cblx0XHRcdHJldHVybiBmbjtcblx0XHR9XG5cdH0sXG5cblx0cHNldWRvczoge1xuXG5cdFx0Ly8gUG90ZW50aWFsbHkgY29tcGxleCBwc2V1ZG9zXG5cdFx0XCJub3RcIjogbWFya0Z1bmN0aW9uKCBmdW5jdGlvbiggc2VsZWN0b3IgKSB7XG5cblx0XHRcdC8vIFRyaW0gdGhlIHNlbGVjdG9yIHBhc3NlZCB0byBjb21waWxlXG5cdFx0XHQvLyB0byBhdm9pZCB0cmVhdGluZyBsZWFkaW5nIGFuZCB0cmFpbGluZ1xuXHRcdFx0Ly8gc3BhY2VzIGFzIGNvbWJpbmF0b3JzXG5cdFx0XHR2YXIgaW5wdXQgPSBbXSxcblx0XHRcdFx0cmVzdWx0cyA9IFtdLFxuXHRcdFx0XHRtYXRjaGVyID0gY29tcGlsZSggc2VsZWN0b3IucmVwbGFjZSggcnRyaW0sIFwiJDFcIiApICk7XG5cblx0XHRcdHJldHVybiBtYXRjaGVyWyBleHBhbmRvIF0gP1xuXHRcdFx0XHRtYXJrRnVuY3Rpb24oIGZ1bmN0aW9uKCBzZWVkLCBtYXRjaGVzLCBfY29udGV4dCwgeG1sICkge1xuXHRcdFx0XHRcdHZhciBlbGVtLFxuXHRcdFx0XHRcdFx0dW5tYXRjaGVkID0gbWF0Y2hlciggc2VlZCwgbnVsbCwgeG1sLCBbXSApLFxuXHRcdFx0XHRcdFx0aSA9IHNlZWQubGVuZ3RoO1xuXG5cdFx0XHRcdFx0Ly8gTWF0Y2ggZWxlbWVudHMgdW5tYXRjaGVkIGJ5IGBtYXRjaGVyYFxuXHRcdFx0XHRcdHdoaWxlICggaS0tICkge1xuXHRcdFx0XHRcdFx0aWYgKCAoIGVsZW0gPSB1bm1hdGNoZWRbIGkgXSApICkge1xuXHRcdFx0XHRcdFx0XHRzZWVkWyBpIF0gPSAhKCBtYXRjaGVzWyBpIF0gPSBlbGVtICk7XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9ICkgOlxuXHRcdFx0XHRmdW5jdGlvbiggZWxlbSwgX2NvbnRleHQsIHhtbCApIHtcblx0XHRcdFx0XHRpbnB1dFsgMCBdID0gZWxlbTtcblx0XHRcdFx0XHRtYXRjaGVyKCBpbnB1dCwgbnVsbCwgeG1sLCByZXN1bHRzICk7XG5cblx0XHRcdFx0XHQvLyBEb24ndCBrZWVwIHRoZSBlbGVtZW50IChpc3N1ZSAjMjk5KVxuXHRcdFx0XHRcdGlucHV0WyAwIF0gPSBudWxsO1xuXHRcdFx0XHRcdHJldHVybiAhcmVzdWx0cy5wb3AoKTtcblx0XHRcdFx0fTtcblx0XHR9ICksXG5cblx0XHRcImhhc1wiOiBtYXJrRnVuY3Rpb24oIGZ1bmN0aW9uKCBzZWxlY3RvciApIHtcblx0XHRcdHJldHVybiBmdW5jdGlvbiggZWxlbSApIHtcblx0XHRcdFx0cmV0dXJuIFNpenpsZSggc2VsZWN0b3IsIGVsZW0gKS5sZW5ndGggPiAwO1xuXHRcdFx0fTtcblx0XHR9ICksXG5cblx0XHRcImNvbnRhaW5zXCI6IG1hcmtGdW5jdGlvbiggZnVuY3Rpb24oIHRleHQgKSB7XG5cdFx0XHR0ZXh0ID0gdGV4dC5yZXBsYWNlKCBydW5lc2NhcGUsIGZ1bmVzY2FwZSApO1xuXHRcdFx0cmV0dXJuIGZ1bmN0aW9uKCBlbGVtICkge1xuXHRcdFx0XHRyZXR1cm4gKCBlbGVtLnRleHRDb250ZW50IHx8IGdldFRleHQoIGVsZW0gKSApLmluZGV4T2YoIHRleHQgKSA+IC0xO1xuXHRcdFx0fTtcblx0XHR9ICksXG5cblx0XHQvLyBcIldoZXRoZXIgYW4gZWxlbWVudCBpcyByZXByZXNlbnRlZCBieSBhIDpsYW5nKCkgc2VsZWN0b3Jcblx0XHQvLyBpcyBiYXNlZCBzb2xlbHkgb24gdGhlIGVsZW1lbnQncyBsYW5ndWFnZSB2YWx1ZVxuXHRcdC8vIGJlaW5nIGVxdWFsIHRvIHRoZSBpZGVudGlmaWVyIEMsXG5cdFx0Ly8gb3IgYmVnaW5uaW5nIHdpdGggdGhlIGlkZW50aWZpZXIgQyBpbW1lZGlhdGVseSBmb2xsb3dlZCBieSBcIi1cIi5cblx0XHQvLyBUaGUgbWF0Y2hpbmcgb2YgQyBhZ2FpbnN0IHRoZSBlbGVtZW50J3MgbGFuZ3VhZ2UgdmFsdWUgaXMgcGVyZm9ybWVkIGNhc2UtaW5zZW5zaXRpdmVseS5cblx0XHQvLyBUaGUgaWRlbnRpZmllciBDIGRvZXMgbm90IGhhdmUgdG8gYmUgYSB2YWxpZCBsYW5ndWFnZSBuYW1lLlwiXG5cdFx0Ly8gaHR0cDovL3d3dy53My5vcmcvVFIvc2VsZWN0b3JzLyNsYW5nLXBzZXVkb1xuXHRcdFwibGFuZ1wiOiBtYXJrRnVuY3Rpb24oIGZ1bmN0aW9uKCBsYW5nICkge1xuXG5cdFx0XHQvLyBsYW5nIHZhbHVlIG11c3QgYmUgYSB2YWxpZCBpZGVudGlmaWVyXG5cdFx0XHRpZiAoICFyaWRlbnRpZmllci50ZXN0KCBsYW5nIHx8IFwiXCIgKSApIHtcblx0XHRcdFx0U2l6emxlLmVycm9yKCBcInVuc3VwcG9ydGVkIGxhbmc6IFwiICsgbGFuZyApO1xuXHRcdFx0fVxuXHRcdFx0bGFuZyA9IGxhbmcucmVwbGFjZSggcnVuZXNjYXBlLCBmdW5lc2NhcGUgKS50b0xvd2VyQ2FzZSgpO1xuXHRcdFx0cmV0dXJuIGZ1bmN0aW9uKCBlbGVtICkge1xuXHRcdFx0XHR2YXIgZWxlbUxhbmc7XG5cdFx0XHRcdGRvIHtcblx0XHRcdFx0XHRpZiAoICggZWxlbUxhbmcgPSBkb2N1bWVudElzSFRNTCA/XG5cdFx0XHRcdFx0XHRlbGVtLmxhbmcgOlxuXHRcdFx0XHRcdFx0ZWxlbS5nZXRBdHRyaWJ1dGUoIFwieG1sOmxhbmdcIiApIHx8IGVsZW0uZ2V0QXR0cmlidXRlKCBcImxhbmdcIiApICkgKSB7XG5cblx0XHRcdFx0XHRcdGVsZW1MYW5nID0gZWxlbUxhbmcudG9Mb3dlckNhc2UoKTtcblx0XHRcdFx0XHRcdHJldHVybiBlbGVtTGFuZyA9PT0gbGFuZyB8fCBlbGVtTGFuZy5pbmRleE9mKCBsYW5nICsgXCItXCIgKSA9PT0gMDtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH0gd2hpbGUgKCAoIGVsZW0gPSBlbGVtLnBhcmVudE5vZGUgKSAmJiBlbGVtLm5vZGVUeXBlID09PSAxICk7XG5cdFx0XHRcdHJldHVybiBmYWxzZTtcblx0XHRcdH07XG5cdFx0fSApLFxuXG5cdFx0Ly8gTWlzY2VsbGFuZW91c1xuXHRcdFwidGFyZ2V0XCI6IGZ1bmN0aW9uKCBlbGVtICkge1xuXHRcdFx0dmFyIGhhc2ggPSB3aW5kb3cubG9jYXRpb24gJiYgd2luZG93LmxvY2F0aW9uLmhhc2g7XG5cdFx0XHRyZXR1cm4gaGFzaCAmJiBoYXNoLnNsaWNlKCAxICkgPT09IGVsZW0uaWQ7XG5cdFx0fSxcblxuXHRcdFwicm9vdFwiOiBmdW5jdGlvbiggZWxlbSApIHtcblx0XHRcdHJldHVybiBlbGVtID09PSBkb2NFbGVtO1xuXHRcdH0sXG5cblx0XHRcImZvY3VzXCI6IGZ1bmN0aW9uKCBlbGVtICkge1xuXHRcdFx0cmV0dXJuIGVsZW0gPT09IGRvY3VtZW50LmFjdGl2ZUVsZW1lbnQgJiZcblx0XHRcdFx0KCAhZG9jdW1lbnQuaGFzRm9jdXMgfHwgZG9jdW1lbnQuaGFzRm9jdXMoKSApICYmXG5cdFx0XHRcdCEhKCBlbGVtLnR5cGUgfHwgZWxlbS5ocmVmIHx8IH5lbGVtLnRhYkluZGV4ICk7XG5cdFx0fSxcblxuXHRcdC8vIEJvb2xlYW4gcHJvcGVydGllc1xuXHRcdFwiZW5hYmxlZFwiOiBjcmVhdGVEaXNhYmxlZFBzZXVkbyggZmFsc2UgKSxcblx0XHRcImRpc2FibGVkXCI6IGNyZWF0ZURpc2FibGVkUHNldWRvKCB0cnVlICksXG5cblx0XHRcImNoZWNrZWRcIjogZnVuY3Rpb24oIGVsZW0gKSB7XG5cblx0XHRcdC8vIEluIENTUzMsIDpjaGVja2VkIHNob3VsZCByZXR1cm4gYm90aCBjaGVja2VkIGFuZCBzZWxlY3RlZCBlbGVtZW50c1xuXHRcdFx0Ly8gaHR0cDovL3d3dy53My5vcmcvVFIvMjAxMS9SRUMtY3NzMy1zZWxlY3RvcnMtMjAxMTA5MjkvI2NoZWNrZWRcblx0XHRcdHZhciBub2RlTmFtZSA9IGVsZW0ubm9kZU5hbWUudG9Mb3dlckNhc2UoKTtcblx0XHRcdHJldHVybiAoIG5vZGVOYW1lID09PSBcImlucHV0XCIgJiYgISFlbGVtLmNoZWNrZWQgKSB8fFxuXHRcdFx0XHQoIG5vZGVOYW1lID09PSBcIm9wdGlvblwiICYmICEhZWxlbS5zZWxlY3RlZCApO1xuXHRcdH0sXG5cblx0XHRcInNlbGVjdGVkXCI6IGZ1bmN0aW9uKCBlbGVtICkge1xuXG5cdFx0XHQvLyBBY2Nlc3NpbmcgdGhpcyBwcm9wZXJ0eSBtYWtlcyBzZWxlY3RlZC1ieS1kZWZhdWx0XG5cdFx0XHQvLyBvcHRpb25zIGluIFNhZmFyaSB3b3JrIHByb3Blcmx5XG5cdFx0XHRpZiAoIGVsZW0ucGFyZW50Tm9kZSApIHtcblx0XHRcdFx0Ly8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXVudXNlZC1leHByZXNzaW9uc1xuXHRcdFx0XHRlbGVtLnBhcmVudE5vZGUuc2VsZWN0ZWRJbmRleDtcblx0XHRcdH1cblxuXHRcdFx0cmV0dXJuIGVsZW0uc2VsZWN0ZWQgPT09IHRydWU7XG5cdFx0fSxcblxuXHRcdC8vIENvbnRlbnRzXG5cdFx0XCJlbXB0eVwiOiBmdW5jdGlvbiggZWxlbSApIHtcblxuXHRcdFx0Ly8gaHR0cDovL3d3dy53My5vcmcvVFIvc2VsZWN0b3JzLyNlbXB0eS1wc2V1ZG9cblx0XHRcdC8vIDplbXB0eSBpcyBuZWdhdGVkIGJ5IGVsZW1lbnQgKDEpIG9yIGNvbnRlbnQgbm9kZXMgKHRleHQ6IDM7IGNkYXRhOiA0OyBlbnRpdHkgcmVmOiA1KSxcblx0XHRcdC8vICAgYnV0IG5vdCBieSBvdGhlcnMgKGNvbW1lbnQ6IDg7IHByb2Nlc3NpbmcgaW5zdHJ1Y3Rpb246IDc7IGV0Yy4pXG5cdFx0XHQvLyBub2RlVHlwZSA8IDYgd29ya3MgYmVjYXVzZSBhdHRyaWJ1dGVzICgyKSBkbyBub3QgYXBwZWFyIGFzIGNoaWxkcmVuXG5cdFx0XHRmb3IgKCBlbGVtID0gZWxlbS5maXJzdENoaWxkOyBlbGVtOyBlbGVtID0gZWxlbS5uZXh0U2libGluZyApIHtcblx0XHRcdFx0aWYgKCBlbGVtLm5vZGVUeXBlIDwgNiApIHtcblx0XHRcdFx0XHRyZXR1cm4gZmFsc2U7XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHRcdHJldHVybiB0cnVlO1xuXHRcdH0sXG5cblx0XHRcInBhcmVudFwiOiBmdW5jdGlvbiggZWxlbSApIHtcblx0XHRcdHJldHVybiAhRXhwci5wc2V1ZG9zWyBcImVtcHR5XCIgXSggZWxlbSApO1xuXHRcdH0sXG5cblx0XHQvLyBFbGVtZW50L2lucHV0IHR5cGVzXG5cdFx0XCJoZWFkZXJcIjogZnVuY3Rpb24oIGVsZW0gKSB7XG5cdFx0XHRyZXR1cm4gcmhlYWRlci50ZXN0KCBlbGVtLm5vZGVOYW1lICk7XG5cdFx0fSxcblxuXHRcdFwiaW5wdXRcIjogZnVuY3Rpb24oIGVsZW0gKSB7XG5cdFx0XHRyZXR1cm4gcmlucHV0cy50ZXN0KCBlbGVtLm5vZGVOYW1lICk7XG5cdFx0fSxcblxuXHRcdFwiYnV0dG9uXCI6IGZ1bmN0aW9uKCBlbGVtICkge1xuXHRcdFx0dmFyIG5hbWUgPSBlbGVtLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCk7XG5cdFx0XHRyZXR1cm4gbmFtZSA9PT0gXCJpbnB1dFwiICYmIGVsZW0udHlwZSA9PT0gXCJidXR0b25cIiB8fCBuYW1lID09PSBcImJ1dHRvblwiO1xuXHRcdH0sXG5cblx0XHRcInRleHRcIjogZnVuY3Rpb24oIGVsZW0gKSB7XG5cdFx0XHR2YXIgYXR0cjtcblx0XHRcdHJldHVybiBlbGVtLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCkgPT09IFwiaW5wdXRcIiAmJlxuXHRcdFx0XHRlbGVtLnR5cGUgPT09IFwidGV4dFwiICYmXG5cblx0XHRcdFx0Ly8gU3VwcG9ydDogSUU8OFxuXHRcdFx0XHQvLyBOZXcgSFRNTDUgYXR0cmlidXRlIHZhbHVlcyAoZS5nLiwgXCJzZWFyY2hcIikgYXBwZWFyIHdpdGggZWxlbS50eXBlID09PSBcInRleHRcIlxuXHRcdFx0XHQoICggYXR0ciA9IGVsZW0uZ2V0QXR0cmlidXRlKCBcInR5cGVcIiApICkgPT0gbnVsbCB8fFxuXHRcdFx0XHRcdGF0dHIudG9Mb3dlckNhc2UoKSA9PT0gXCJ0ZXh0XCIgKTtcblx0XHR9LFxuXG5cdFx0Ly8gUG9zaXRpb24taW4tY29sbGVjdGlvblxuXHRcdFwiZmlyc3RcIjogY3JlYXRlUG9zaXRpb25hbFBzZXVkbyggZnVuY3Rpb24oKSB7XG5cdFx0XHRyZXR1cm4gWyAwIF07XG5cdFx0fSApLFxuXG5cdFx0XCJsYXN0XCI6IGNyZWF0ZVBvc2l0aW9uYWxQc2V1ZG8oIGZ1bmN0aW9uKCBfbWF0Y2hJbmRleGVzLCBsZW5ndGggKSB7XG5cdFx0XHRyZXR1cm4gWyBsZW5ndGggLSAxIF07XG5cdFx0fSApLFxuXG5cdFx0XCJlcVwiOiBjcmVhdGVQb3NpdGlvbmFsUHNldWRvKCBmdW5jdGlvbiggX21hdGNoSW5kZXhlcywgbGVuZ3RoLCBhcmd1bWVudCApIHtcblx0XHRcdHJldHVybiBbIGFyZ3VtZW50IDwgMCA/IGFyZ3VtZW50ICsgbGVuZ3RoIDogYXJndW1lbnQgXTtcblx0XHR9ICksXG5cblx0XHRcImV2ZW5cIjogY3JlYXRlUG9zaXRpb25hbFBzZXVkbyggZnVuY3Rpb24oIG1hdGNoSW5kZXhlcywgbGVuZ3RoICkge1xuXHRcdFx0dmFyIGkgPSAwO1xuXHRcdFx0Zm9yICggOyBpIDwgbGVuZ3RoOyBpICs9IDIgKSB7XG5cdFx0XHRcdG1hdGNoSW5kZXhlcy5wdXNoKCBpICk7XG5cdFx0XHR9XG5cdFx0XHRyZXR1cm4gbWF0Y2hJbmRleGVzO1xuXHRcdH0gKSxcblxuXHRcdFwib2RkXCI6IGNyZWF0ZVBvc2l0aW9uYWxQc2V1ZG8oIGZ1bmN0aW9uKCBtYXRjaEluZGV4ZXMsIGxlbmd0aCApIHtcblx0XHRcdHZhciBpID0gMTtcblx0XHRcdGZvciAoIDsgaSA8IGxlbmd0aDsgaSArPSAyICkge1xuXHRcdFx0XHRtYXRjaEluZGV4ZXMucHVzaCggaSApO1xuXHRcdFx0fVxuXHRcdFx0cmV0dXJuIG1hdGNoSW5kZXhlcztcblx0XHR9ICksXG5cblx0XHRcImx0XCI6IGNyZWF0ZVBvc2l0aW9uYWxQc2V1ZG8oIGZ1bmN0aW9uKCBtYXRjaEluZGV4ZXMsIGxlbmd0aCwgYXJndW1lbnQgKSB7XG5cdFx0XHR2YXIgaSA9IGFyZ3VtZW50IDwgMCA/XG5cdFx0XHRcdGFyZ3VtZW50ICsgbGVuZ3RoIDpcblx0XHRcdFx0YXJndW1lbnQgPiBsZW5ndGggP1xuXHRcdFx0XHRcdGxlbmd0aCA6XG5cdFx0XHRcdFx0YXJndW1lbnQ7XG5cdFx0XHRmb3IgKCA7IC0taSA+PSAwOyApIHtcblx0XHRcdFx0bWF0Y2hJbmRleGVzLnB1c2goIGkgKTtcblx0XHRcdH1cblx0XHRcdHJldHVybiBtYXRjaEluZGV4ZXM7XG5cdFx0fSApLFxuXG5cdFx0XCJndFwiOiBjcmVhdGVQb3NpdGlvbmFsUHNldWRvKCBmdW5jdGlvbiggbWF0Y2hJbmRleGVzLCBsZW5ndGgsIGFyZ3VtZW50ICkge1xuXHRcdFx0dmFyIGkgPSBhcmd1bWVudCA8IDAgPyBhcmd1bWVudCArIGxlbmd0aCA6IGFyZ3VtZW50O1xuXHRcdFx0Zm9yICggOyArK2kgPCBsZW5ndGg7ICkge1xuXHRcdFx0XHRtYXRjaEluZGV4ZXMucHVzaCggaSApO1xuXHRcdFx0fVxuXHRcdFx0cmV0dXJuIG1hdGNoSW5kZXhlcztcblx0XHR9IClcblx0fVxufTtcblxuRXhwci5wc2V1ZG9zWyBcIm50aFwiIF0gPSBFeHByLnBzZXVkb3NbIFwiZXFcIiBdO1xuXG4vLyBBZGQgYnV0dG9uL2lucHV0IHR5cGUgcHNldWRvc1xuZm9yICggaSBpbiB7IHJhZGlvOiB0cnVlLCBjaGVja2JveDogdHJ1ZSwgZmlsZTogdHJ1ZSwgcGFzc3dvcmQ6IHRydWUsIGltYWdlOiB0cnVlIH0gKSB7XG5cdEV4cHIucHNldWRvc1sgaSBdID0gY3JlYXRlSW5wdXRQc2V1ZG8oIGkgKTtcbn1cbmZvciAoIGkgaW4geyBzdWJtaXQ6IHRydWUsIHJlc2V0OiB0cnVlIH0gKSB7XG5cdEV4cHIucHNldWRvc1sgaSBdID0gY3JlYXRlQnV0dG9uUHNldWRvKCBpICk7XG59XG5cbi8vIEVhc3kgQVBJIGZvciBjcmVhdGluZyBuZXcgc2V0RmlsdGVyc1xuZnVuY3Rpb24gc2V0RmlsdGVycygpIHt9XG5zZXRGaWx0ZXJzLnByb3RvdHlwZSA9IEV4cHIuZmlsdGVycyA9IEV4cHIucHNldWRvcztcbkV4cHIuc2V0RmlsdGVycyA9IG5ldyBzZXRGaWx0ZXJzKCk7XG5cbnRva2VuaXplID0gU2l6emxlLnRva2VuaXplID0gZnVuY3Rpb24oIHNlbGVjdG9yLCBwYXJzZU9ubHkgKSB7XG5cdHZhciBtYXRjaGVkLCBtYXRjaCwgdG9rZW5zLCB0eXBlLFxuXHRcdHNvRmFyLCBncm91cHMsIHByZUZpbHRlcnMsXG5cdFx0Y2FjaGVkID0gdG9rZW5DYWNoZVsgc2VsZWN0b3IgKyBcIiBcIiBdO1xuXG5cdGlmICggY2FjaGVkICkge1xuXHRcdHJldHVybiBwYXJzZU9ubHkgPyAwIDogY2FjaGVkLnNsaWNlKCAwICk7XG5cdH1cblxuXHRzb0ZhciA9IHNlbGVjdG9yO1xuXHRncm91cHMgPSBbXTtcblx0cHJlRmlsdGVycyA9IEV4cHIucHJlRmlsdGVyO1xuXG5cdHdoaWxlICggc29GYXIgKSB7XG5cblx0XHQvLyBDb21tYSBhbmQgZmlyc3QgcnVuXG5cdFx0aWYgKCAhbWF0Y2hlZCB8fCAoIG1hdGNoID0gcmNvbW1hLmV4ZWMoIHNvRmFyICkgKSApIHtcblx0XHRcdGlmICggbWF0Y2ggKSB7XG5cblx0XHRcdFx0Ly8gRG9uJ3QgY29uc3VtZSB0cmFpbGluZyBjb21tYXMgYXMgdmFsaWRcblx0XHRcdFx0c29GYXIgPSBzb0Zhci5zbGljZSggbWF0Y2hbIDAgXS5sZW5ndGggKSB8fCBzb0Zhcjtcblx0XHRcdH1cblx0XHRcdGdyb3Vwcy5wdXNoKCAoIHRva2VucyA9IFtdICkgKTtcblx0XHR9XG5cblx0XHRtYXRjaGVkID0gZmFsc2U7XG5cblx0XHQvLyBDb21iaW5hdG9yc1xuXHRcdGlmICggKCBtYXRjaCA9IHJjb21iaW5hdG9ycy5leGVjKCBzb0ZhciApICkgKSB7XG5cdFx0XHRtYXRjaGVkID0gbWF0Y2guc2hpZnQoKTtcblx0XHRcdHRva2Vucy5wdXNoKCB7XG5cdFx0XHRcdHZhbHVlOiBtYXRjaGVkLFxuXG5cdFx0XHRcdC8vIENhc3QgZGVzY2VuZGFudCBjb21iaW5hdG9ycyB0byBzcGFjZVxuXHRcdFx0XHR0eXBlOiBtYXRjaFsgMCBdLnJlcGxhY2UoIHJ0cmltLCBcIiBcIiApXG5cdFx0XHR9ICk7XG5cdFx0XHRzb0ZhciA9IHNvRmFyLnNsaWNlKCBtYXRjaGVkLmxlbmd0aCApO1xuXHRcdH1cblxuXHRcdC8vIEZpbHRlcnNcblx0XHRmb3IgKCB0eXBlIGluIEV4cHIuZmlsdGVyICkge1xuXHRcdFx0aWYgKCAoIG1hdGNoID0gbWF0Y2hFeHByWyB0eXBlIF0uZXhlYyggc29GYXIgKSApICYmICggIXByZUZpbHRlcnNbIHR5cGUgXSB8fFxuXHRcdFx0XHQoIG1hdGNoID0gcHJlRmlsdGVyc1sgdHlwZSBdKCBtYXRjaCApICkgKSApIHtcblx0XHRcdFx0bWF0Y2hlZCA9IG1hdGNoLnNoaWZ0KCk7XG5cdFx0XHRcdHRva2Vucy5wdXNoKCB7XG5cdFx0XHRcdFx0dmFsdWU6IG1hdGNoZWQsXG5cdFx0XHRcdFx0dHlwZTogdHlwZSxcblx0XHRcdFx0XHRtYXRjaGVzOiBtYXRjaFxuXHRcdFx0XHR9ICk7XG5cdFx0XHRcdHNvRmFyID0gc29GYXIuc2xpY2UoIG1hdGNoZWQubGVuZ3RoICk7XG5cdFx0XHR9XG5cdFx0fVxuXG5cdFx0aWYgKCAhbWF0Y2hlZCApIHtcblx0XHRcdGJyZWFrO1xuXHRcdH1cblx0fVxuXG5cdC8vIFJldHVybiB0aGUgbGVuZ3RoIG9mIHRoZSBpbnZhbGlkIGV4Y2Vzc1xuXHQvLyBpZiB3ZSdyZSBqdXN0IHBhcnNpbmdcblx0Ly8gT3RoZXJ3aXNlLCB0aHJvdyBhbiBlcnJvciBvciByZXR1cm4gdG9rZW5zXG5cdHJldHVybiBwYXJzZU9ubHkgP1xuXHRcdHNvRmFyLmxlbmd0aCA6XG5cdFx0c29GYXIgP1xuXHRcdFx0U2l6emxlLmVycm9yKCBzZWxlY3RvciApIDpcblxuXHRcdFx0Ly8gQ2FjaGUgdGhlIHRva2Vuc1xuXHRcdFx0dG9rZW5DYWNoZSggc2VsZWN0b3IsIGdyb3VwcyApLnNsaWNlKCAwICk7XG59O1xuXG5mdW5jdGlvbiB0b1NlbGVjdG9yKCB0b2tlbnMgKSB7XG5cdHZhciBpID0gMCxcblx0XHRsZW4gPSB0b2tlbnMubGVuZ3RoLFxuXHRcdHNlbGVjdG9yID0gXCJcIjtcblx0Zm9yICggOyBpIDwgbGVuOyBpKysgKSB7XG5cdFx0c2VsZWN0b3IgKz0gdG9rZW5zWyBpIF0udmFsdWU7XG5cdH1cblx0cmV0dXJuIHNlbGVjdG9yO1xufVxuXG5mdW5jdGlvbiBhZGRDb21iaW5hdG9yKCBtYXRjaGVyLCBjb21iaW5hdG9yLCBiYXNlICkge1xuXHR2YXIgZGlyID0gY29tYmluYXRvci5kaXIsXG5cdFx0c2tpcCA9IGNvbWJpbmF0b3IubmV4dCxcblx0XHRrZXkgPSBza2lwIHx8IGRpcixcblx0XHRjaGVja05vbkVsZW1lbnRzID0gYmFzZSAmJiBrZXkgPT09IFwicGFyZW50Tm9kZVwiLFxuXHRcdGRvbmVOYW1lID0gZG9uZSsrO1xuXG5cdHJldHVybiBjb21iaW5hdG9yLmZpcnN0ID9cblxuXHRcdC8vIENoZWNrIGFnYWluc3QgY2xvc2VzdCBhbmNlc3Rvci9wcmVjZWRpbmcgZWxlbWVudFxuXHRcdGZ1bmN0aW9uKCBlbGVtLCBjb250ZXh0LCB4bWwgKSB7XG5cdFx0XHR3aGlsZSAoICggZWxlbSA9IGVsZW1bIGRpciBdICkgKSB7XG5cdFx0XHRcdGlmICggZWxlbS5ub2RlVHlwZSA9PT0gMSB8fCBjaGVja05vbkVsZW1lbnRzICkge1xuXHRcdFx0XHRcdHJldHVybiBtYXRjaGVyKCBlbGVtLCBjb250ZXh0LCB4bWwgKTtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdFx0cmV0dXJuIGZhbHNlO1xuXHRcdH0gOlxuXG5cdFx0Ly8gQ2hlY2sgYWdhaW5zdCBhbGwgYW5jZXN0b3IvcHJlY2VkaW5nIGVsZW1lbnRzXG5cdFx0ZnVuY3Rpb24oIGVsZW0sIGNvbnRleHQsIHhtbCApIHtcblx0XHRcdHZhciBvbGRDYWNoZSwgdW5pcXVlQ2FjaGUsIG91dGVyQ2FjaGUsXG5cdFx0XHRcdG5ld0NhY2hlID0gWyBkaXJydW5zLCBkb25lTmFtZSBdO1xuXG5cdFx0XHQvLyBXZSBjYW4ndCBzZXQgYXJiaXRyYXJ5IGRhdGEgb24gWE1MIG5vZGVzLCBzbyB0aGV5IGRvbid0IGJlbmVmaXQgZnJvbSBjb21iaW5hdG9yIGNhY2hpbmdcblx0XHRcdGlmICggeG1sICkge1xuXHRcdFx0XHR3aGlsZSAoICggZWxlbSA9IGVsZW1bIGRpciBdICkgKSB7XG5cdFx0XHRcdFx0aWYgKCBlbGVtLm5vZGVUeXBlID09PSAxIHx8IGNoZWNrTm9uRWxlbWVudHMgKSB7XG5cdFx0XHRcdFx0XHRpZiAoIG1hdGNoZXIoIGVsZW0sIGNvbnRleHQsIHhtbCApICkge1xuXHRcdFx0XHRcdFx0XHRyZXR1cm4gdHJ1ZTtcblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdHdoaWxlICggKCBlbGVtID0gZWxlbVsgZGlyIF0gKSApIHtcblx0XHRcdFx0XHRpZiAoIGVsZW0ubm9kZVR5cGUgPT09IDEgfHwgY2hlY2tOb25FbGVtZW50cyApIHtcblx0XHRcdFx0XHRcdG91dGVyQ2FjaGUgPSBlbGVtWyBleHBhbmRvIF0gfHwgKCBlbGVtWyBleHBhbmRvIF0gPSB7fSApO1xuXG5cdFx0XHRcdFx0XHQvLyBTdXBwb3J0OiBJRSA8OSBvbmx5XG5cdFx0XHRcdFx0XHQvLyBEZWZlbmQgYWdhaW5zdCBjbG9uZWQgYXR0cm9wZXJ0aWVzIChqUXVlcnkgZ2gtMTcwOSlcblx0XHRcdFx0XHRcdHVuaXF1ZUNhY2hlID0gb3V0ZXJDYWNoZVsgZWxlbS51bmlxdWVJRCBdIHx8XG5cdFx0XHRcdFx0XHRcdCggb3V0ZXJDYWNoZVsgZWxlbS51bmlxdWVJRCBdID0ge30gKTtcblxuXHRcdFx0XHRcdFx0aWYgKCBza2lwICYmIHNraXAgPT09IGVsZW0ubm9kZU5hbWUudG9Mb3dlckNhc2UoKSApIHtcblx0XHRcdFx0XHRcdFx0ZWxlbSA9IGVsZW1bIGRpciBdIHx8IGVsZW07XG5cdFx0XHRcdFx0XHR9IGVsc2UgaWYgKCAoIG9sZENhY2hlID0gdW5pcXVlQ2FjaGVbIGtleSBdICkgJiZcblx0XHRcdFx0XHRcdFx0b2xkQ2FjaGVbIDAgXSA9PT0gZGlycnVucyAmJiBvbGRDYWNoZVsgMSBdID09PSBkb25lTmFtZSApIHtcblxuXHRcdFx0XHRcdFx0XHQvLyBBc3NpZ24gdG8gbmV3Q2FjaGUgc28gcmVzdWx0cyBiYWNrLXByb3BhZ2F0ZSB0byBwcmV2aW91cyBlbGVtZW50c1xuXHRcdFx0XHRcdFx0XHRyZXR1cm4gKCBuZXdDYWNoZVsgMiBdID0gb2xkQ2FjaGVbIDIgXSApO1xuXHRcdFx0XHRcdFx0fSBlbHNlIHtcblxuXHRcdFx0XHRcdFx0XHQvLyBSZXVzZSBuZXdjYWNoZSBzbyByZXN1bHRzIGJhY2stcHJvcGFnYXRlIHRvIHByZXZpb3VzIGVsZW1lbnRzXG5cdFx0XHRcdFx0XHRcdHVuaXF1ZUNhY2hlWyBrZXkgXSA9IG5ld0NhY2hlO1xuXG5cdFx0XHRcdFx0XHRcdC8vIEEgbWF0Y2ggbWVhbnMgd2UncmUgZG9uZTsgYSBmYWlsIG1lYW5zIHdlIGhhdmUgdG8ga2VlcCBjaGVja2luZ1xuXHRcdFx0XHRcdFx0XHRpZiAoICggbmV3Q2FjaGVbIDIgXSA9IG1hdGNoZXIoIGVsZW0sIGNvbnRleHQsIHhtbCApICkgKSB7XG5cdFx0XHRcdFx0XHRcdFx0cmV0dXJuIHRydWU7XG5cdFx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHRcdHJldHVybiBmYWxzZTtcblx0XHR9O1xufVxuXG5mdW5jdGlvbiBlbGVtZW50TWF0Y2hlciggbWF0Y2hlcnMgKSB7XG5cdHJldHVybiBtYXRjaGVycy5sZW5ndGggPiAxID9cblx0XHRmdW5jdGlvbiggZWxlbSwgY29udGV4dCwgeG1sICkge1xuXHRcdFx0dmFyIGkgPSBtYXRjaGVycy5sZW5ndGg7XG5cdFx0XHR3aGlsZSAoIGktLSApIHtcblx0XHRcdFx0aWYgKCAhbWF0Y2hlcnNbIGkgXSggZWxlbSwgY29udGV4dCwgeG1sICkgKSB7XG5cdFx0XHRcdFx0cmV0dXJuIGZhbHNlO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0XHRyZXR1cm4gdHJ1ZTtcblx0XHR9IDpcblx0XHRtYXRjaGVyc1sgMCBdO1xufVxuXG5mdW5jdGlvbiBtdWx0aXBsZUNvbnRleHRzKCBzZWxlY3RvciwgY29udGV4dHMsIHJlc3VsdHMgKSB7XG5cdHZhciBpID0gMCxcblx0XHRsZW4gPSBjb250ZXh0cy5sZW5ndGg7XG5cdGZvciAoIDsgaSA8IGxlbjsgaSsrICkge1xuXHRcdFNpenpsZSggc2VsZWN0b3IsIGNvbnRleHRzWyBpIF0sIHJlc3VsdHMgKTtcblx0fVxuXHRyZXR1cm4gcmVzdWx0cztcbn1cblxuZnVuY3Rpb24gY29uZGVuc2UoIHVubWF0Y2hlZCwgbWFwLCBmaWx0ZXIsIGNvbnRleHQsIHhtbCApIHtcblx0dmFyIGVsZW0sXG5cdFx0bmV3VW5tYXRjaGVkID0gW10sXG5cdFx0aSA9IDAsXG5cdFx0bGVuID0gdW5tYXRjaGVkLmxlbmd0aCxcblx0XHRtYXBwZWQgPSBtYXAgIT0gbnVsbDtcblxuXHRmb3IgKCA7IGkgPCBsZW47IGkrKyApIHtcblx0XHRpZiAoICggZWxlbSA9IHVubWF0Y2hlZFsgaSBdICkgKSB7XG5cdFx0XHRpZiAoICFmaWx0ZXIgfHwgZmlsdGVyKCBlbGVtLCBjb250ZXh0LCB4bWwgKSApIHtcblx0XHRcdFx0bmV3VW5tYXRjaGVkLnB1c2goIGVsZW0gKTtcblx0XHRcdFx0aWYgKCBtYXBwZWQgKSB7XG5cdFx0XHRcdFx0bWFwLnB1c2goIGkgKTtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH1cblx0fVxuXG5cdHJldHVybiBuZXdVbm1hdGNoZWQ7XG59XG5cbmZ1bmN0aW9uIHNldE1hdGNoZXIoIHByZUZpbHRlciwgc2VsZWN0b3IsIG1hdGNoZXIsIHBvc3RGaWx0ZXIsIHBvc3RGaW5kZXIsIHBvc3RTZWxlY3RvciApIHtcblx0aWYgKCBwb3N0RmlsdGVyICYmICFwb3N0RmlsdGVyWyBleHBhbmRvIF0gKSB7XG5cdFx0cG9zdEZpbHRlciA9IHNldE1hdGNoZXIoIHBvc3RGaWx0ZXIgKTtcblx0fVxuXHRpZiAoIHBvc3RGaW5kZXIgJiYgIXBvc3RGaW5kZXJbIGV4cGFuZG8gXSApIHtcblx0XHRwb3N0RmluZGVyID0gc2V0TWF0Y2hlciggcG9zdEZpbmRlciwgcG9zdFNlbGVjdG9yICk7XG5cdH1cblx0cmV0dXJuIG1hcmtGdW5jdGlvbiggZnVuY3Rpb24oIHNlZWQsIHJlc3VsdHMsIGNvbnRleHQsIHhtbCApIHtcblx0XHR2YXIgdGVtcCwgaSwgZWxlbSxcblx0XHRcdHByZU1hcCA9IFtdLFxuXHRcdFx0cG9zdE1hcCA9IFtdLFxuXHRcdFx0cHJlZXhpc3RpbmcgPSByZXN1bHRzLmxlbmd0aCxcblxuXHRcdFx0Ly8gR2V0IGluaXRpYWwgZWxlbWVudHMgZnJvbSBzZWVkIG9yIGNvbnRleHRcblx0XHRcdGVsZW1zID0gc2VlZCB8fCBtdWx0aXBsZUNvbnRleHRzKFxuXHRcdFx0XHRzZWxlY3RvciB8fCBcIipcIixcblx0XHRcdFx0Y29udGV4dC5ub2RlVHlwZSA/IFsgY29udGV4dCBdIDogY29udGV4dCxcblx0XHRcdFx0W11cblx0XHRcdCksXG5cblx0XHRcdC8vIFByZWZpbHRlciB0byBnZXQgbWF0Y2hlciBpbnB1dCwgcHJlc2VydmluZyBhIG1hcCBmb3Igc2VlZC1yZXN1bHRzIHN5bmNocm9uaXphdGlvblxuXHRcdFx0bWF0Y2hlckluID0gcHJlRmlsdGVyICYmICggc2VlZCB8fCAhc2VsZWN0b3IgKSA/XG5cdFx0XHRcdGNvbmRlbnNlKCBlbGVtcywgcHJlTWFwLCBwcmVGaWx0ZXIsIGNvbnRleHQsIHhtbCApIDpcblx0XHRcdFx0ZWxlbXMsXG5cblx0XHRcdG1hdGNoZXJPdXQgPSBtYXRjaGVyID9cblxuXHRcdFx0XHQvLyBJZiB3ZSBoYXZlIGEgcG9zdEZpbmRlciwgb3IgZmlsdGVyZWQgc2VlZCwgb3Igbm9uLXNlZWQgcG9zdEZpbHRlciBvciBwcmVleGlzdGluZyByZXN1bHRzLFxuXHRcdFx0XHRwb3N0RmluZGVyIHx8ICggc2VlZCA/IHByZUZpbHRlciA6IHByZWV4aXN0aW5nIHx8IHBvc3RGaWx0ZXIgKSA/XG5cblx0XHRcdFx0XHQvLyAuLi5pbnRlcm1lZGlhdGUgcHJvY2Vzc2luZyBpcyBuZWNlc3Nhcnlcblx0XHRcdFx0XHRbXSA6XG5cblx0XHRcdFx0XHQvLyAuLi5vdGhlcndpc2UgdXNlIHJlc3VsdHMgZGlyZWN0bHlcblx0XHRcdFx0XHRyZXN1bHRzIDpcblx0XHRcdFx0bWF0Y2hlckluO1xuXG5cdFx0Ly8gRmluZCBwcmltYXJ5IG1hdGNoZXNcblx0XHRpZiAoIG1hdGNoZXIgKSB7XG5cdFx0XHRtYXRjaGVyKCBtYXRjaGVySW4sIG1hdGNoZXJPdXQsIGNvbnRleHQsIHhtbCApO1xuXHRcdH1cblxuXHRcdC8vIEFwcGx5IHBvc3RGaWx0ZXJcblx0XHRpZiAoIHBvc3RGaWx0ZXIgKSB7XG5cdFx0XHR0ZW1wID0gY29uZGVuc2UoIG1hdGNoZXJPdXQsIHBvc3RNYXAgKTtcblx0XHRcdHBvc3RGaWx0ZXIoIHRlbXAsIFtdLCBjb250ZXh0LCB4bWwgKTtcblxuXHRcdFx0Ly8gVW4tbWF0Y2ggZmFpbGluZyBlbGVtZW50cyBieSBtb3ZpbmcgdGhlbSBiYWNrIHRvIG1hdGNoZXJJblxuXHRcdFx0aSA9IHRlbXAubGVuZ3RoO1xuXHRcdFx0d2hpbGUgKCBpLS0gKSB7XG5cdFx0XHRcdGlmICggKCBlbGVtID0gdGVtcFsgaSBdICkgKSB7XG5cdFx0XHRcdFx0bWF0Y2hlck91dFsgcG9zdE1hcFsgaSBdIF0gPSAhKCBtYXRjaGVySW5bIHBvc3RNYXBbIGkgXSBdID0gZWxlbSApO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fVxuXG5cdFx0aWYgKCBzZWVkICkge1xuXHRcdFx0aWYgKCBwb3N0RmluZGVyIHx8IHByZUZpbHRlciApIHtcblx0XHRcdFx0aWYgKCBwb3N0RmluZGVyICkge1xuXG5cdFx0XHRcdFx0Ly8gR2V0IHRoZSBmaW5hbCBtYXRjaGVyT3V0IGJ5IGNvbmRlbnNpbmcgdGhpcyBpbnRlcm1lZGlhdGUgaW50byBwb3N0RmluZGVyIGNvbnRleHRzXG5cdFx0XHRcdFx0dGVtcCA9IFtdO1xuXHRcdFx0XHRcdGkgPSBtYXRjaGVyT3V0Lmxlbmd0aDtcblx0XHRcdFx0XHR3aGlsZSAoIGktLSApIHtcblx0XHRcdFx0XHRcdGlmICggKCBlbGVtID0gbWF0Y2hlck91dFsgaSBdICkgKSB7XG5cblx0XHRcdFx0XHRcdFx0Ly8gUmVzdG9yZSBtYXRjaGVySW4gc2luY2UgZWxlbSBpcyBub3QgeWV0IGEgZmluYWwgbWF0Y2hcblx0XHRcdFx0XHRcdFx0dGVtcC5wdXNoKCAoIG1hdGNoZXJJblsgaSBdID0gZWxlbSApICk7XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHRcdHBvc3RGaW5kZXIoIG51bGwsICggbWF0Y2hlck91dCA9IFtdICksIHRlbXAsIHhtbCApO1xuXHRcdFx0XHR9XG5cblx0XHRcdFx0Ly8gTW92ZSBtYXRjaGVkIGVsZW1lbnRzIGZyb20gc2VlZCB0byByZXN1bHRzIHRvIGtlZXAgdGhlbSBzeW5jaHJvbml6ZWRcblx0XHRcdFx0aSA9IG1hdGNoZXJPdXQubGVuZ3RoO1xuXHRcdFx0XHR3aGlsZSAoIGktLSApIHtcblx0XHRcdFx0XHRpZiAoICggZWxlbSA9IG1hdGNoZXJPdXRbIGkgXSApICYmXG5cdFx0XHRcdFx0XHQoIHRlbXAgPSBwb3N0RmluZGVyID8gaW5kZXhPZiggc2VlZCwgZWxlbSApIDogcHJlTWFwWyBpIF0gKSA+IC0xICkge1xuXG5cdFx0XHRcdFx0XHRzZWVkWyB0ZW1wIF0gPSAhKCByZXN1bHRzWyB0ZW1wIF0gPSBlbGVtICk7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHR9XG5cblx0XHQvLyBBZGQgZWxlbWVudHMgdG8gcmVzdWx0cywgdGhyb3VnaCBwb3N0RmluZGVyIGlmIGRlZmluZWRcblx0XHR9IGVsc2Uge1xuXHRcdFx0bWF0Y2hlck91dCA9IGNvbmRlbnNlKFxuXHRcdFx0XHRtYXRjaGVyT3V0ID09PSByZXN1bHRzID9cblx0XHRcdFx0XHRtYXRjaGVyT3V0LnNwbGljZSggcHJlZXhpc3RpbmcsIG1hdGNoZXJPdXQubGVuZ3RoICkgOlxuXHRcdFx0XHRcdG1hdGNoZXJPdXRcblx0XHRcdCk7XG5cdFx0XHRpZiAoIHBvc3RGaW5kZXIgKSB7XG5cdFx0XHRcdHBvc3RGaW5kZXIoIG51bGwsIHJlc3VsdHMsIG1hdGNoZXJPdXQsIHhtbCApO1xuXHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0cHVzaC5hcHBseSggcmVzdWx0cywgbWF0Y2hlck91dCApO1xuXHRcdFx0fVxuXHRcdH1cblx0fSApO1xufVxuXG5mdW5jdGlvbiBtYXRjaGVyRnJvbVRva2VucyggdG9rZW5zICkge1xuXHR2YXIgY2hlY2tDb250ZXh0LCBtYXRjaGVyLCBqLFxuXHRcdGxlbiA9IHRva2Vucy5sZW5ndGgsXG5cdFx0bGVhZGluZ1JlbGF0aXZlID0gRXhwci5yZWxhdGl2ZVsgdG9rZW5zWyAwIF0udHlwZSBdLFxuXHRcdGltcGxpY2l0UmVsYXRpdmUgPSBsZWFkaW5nUmVsYXRpdmUgfHwgRXhwci5yZWxhdGl2ZVsgXCIgXCIgXSxcblx0XHRpID0gbGVhZGluZ1JlbGF0aXZlID8gMSA6IDAsXG5cblx0XHQvLyBUaGUgZm91bmRhdGlvbmFsIG1hdGNoZXIgZW5zdXJlcyB0aGF0IGVsZW1lbnRzIGFyZSByZWFjaGFibGUgZnJvbSB0b3AtbGV2ZWwgY29udGV4dChzKVxuXHRcdG1hdGNoQ29udGV4dCA9IGFkZENvbWJpbmF0b3IoIGZ1bmN0aW9uKCBlbGVtICkge1xuXHRcdFx0cmV0dXJuIGVsZW0gPT09IGNoZWNrQ29udGV4dDtcblx0XHR9LCBpbXBsaWNpdFJlbGF0aXZlLCB0cnVlICksXG5cdFx0bWF0Y2hBbnlDb250ZXh0ID0gYWRkQ29tYmluYXRvciggZnVuY3Rpb24oIGVsZW0gKSB7XG5cdFx0XHRyZXR1cm4gaW5kZXhPZiggY2hlY2tDb250ZXh0LCBlbGVtICkgPiAtMTtcblx0XHR9LCBpbXBsaWNpdFJlbGF0aXZlLCB0cnVlICksXG5cdFx0bWF0Y2hlcnMgPSBbIGZ1bmN0aW9uKCBlbGVtLCBjb250ZXh0LCB4bWwgKSB7XG5cdFx0XHR2YXIgcmV0ID0gKCAhbGVhZGluZ1JlbGF0aXZlICYmICggeG1sIHx8IGNvbnRleHQgIT09IG91dGVybW9zdENvbnRleHQgKSApIHx8IChcblx0XHRcdFx0KCBjaGVja0NvbnRleHQgPSBjb250ZXh0ICkubm9kZVR5cGUgP1xuXHRcdFx0XHRcdG1hdGNoQ29udGV4dCggZWxlbSwgY29udGV4dCwgeG1sICkgOlxuXHRcdFx0XHRcdG1hdGNoQW55Q29udGV4dCggZWxlbSwgY29udGV4dCwgeG1sICkgKTtcblxuXHRcdFx0Ly8gQXZvaWQgaGFuZ2luZyBvbnRvIGVsZW1lbnQgKGlzc3VlICMyOTkpXG5cdFx0XHRjaGVja0NvbnRleHQgPSBudWxsO1xuXHRcdFx0cmV0dXJuIHJldDtcblx0XHR9IF07XG5cblx0Zm9yICggOyBpIDwgbGVuOyBpKysgKSB7XG5cdFx0aWYgKCAoIG1hdGNoZXIgPSBFeHByLnJlbGF0aXZlWyB0b2tlbnNbIGkgXS50eXBlIF0gKSApIHtcblx0XHRcdG1hdGNoZXJzID0gWyBhZGRDb21iaW5hdG9yKCBlbGVtZW50TWF0Y2hlciggbWF0Y2hlcnMgKSwgbWF0Y2hlciApIF07XG5cdFx0fSBlbHNlIHtcblx0XHRcdG1hdGNoZXIgPSBFeHByLmZpbHRlclsgdG9rZW5zWyBpIF0udHlwZSBdLmFwcGx5KCBudWxsLCB0b2tlbnNbIGkgXS5tYXRjaGVzICk7XG5cblx0XHRcdC8vIFJldHVybiBzcGVjaWFsIHVwb24gc2VlaW5nIGEgcG9zaXRpb25hbCBtYXRjaGVyXG5cdFx0XHRpZiAoIG1hdGNoZXJbIGV4cGFuZG8gXSApIHtcblxuXHRcdFx0XHQvLyBGaW5kIHRoZSBuZXh0IHJlbGF0aXZlIG9wZXJhdG9yIChpZiBhbnkpIGZvciBwcm9wZXIgaGFuZGxpbmdcblx0XHRcdFx0aiA9ICsraTtcblx0XHRcdFx0Zm9yICggOyBqIDwgbGVuOyBqKysgKSB7XG5cdFx0XHRcdFx0aWYgKCBFeHByLnJlbGF0aXZlWyB0b2tlbnNbIGogXS50eXBlIF0gKSB7XG5cdFx0XHRcdFx0XHRicmVhaztcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblx0XHRcdFx0cmV0dXJuIHNldE1hdGNoZXIoXG5cdFx0XHRcdFx0aSA+IDEgJiYgZWxlbWVudE1hdGNoZXIoIG1hdGNoZXJzICksXG5cdFx0XHRcdFx0aSA+IDEgJiYgdG9TZWxlY3RvcihcblxuXHRcdFx0XHRcdC8vIElmIHRoZSBwcmVjZWRpbmcgdG9rZW4gd2FzIGEgZGVzY2VuZGFudCBjb21iaW5hdG9yLCBpbnNlcnQgYW4gaW1wbGljaXQgYW55LWVsZW1lbnQgYCpgXG5cdFx0XHRcdFx0dG9rZW5zXG5cdFx0XHRcdFx0XHQuc2xpY2UoIDAsIGkgLSAxIClcblx0XHRcdFx0XHRcdC5jb25jYXQoIHsgdmFsdWU6IHRva2Vuc1sgaSAtIDIgXS50eXBlID09PSBcIiBcIiA/IFwiKlwiIDogXCJcIiB9IClcblx0XHRcdFx0XHQpLnJlcGxhY2UoIHJ0cmltLCBcIiQxXCIgKSxcblx0XHRcdFx0XHRtYXRjaGVyLFxuXHRcdFx0XHRcdGkgPCBqICYmIG1hdGNoZXJGcm9tVG9rZW5zKCB0b2tlbnMuc2xpY2UoIGksIGogKSApLFxuXHRcdFx0XHRcdGogPCBsZW4gJiYgbWF0Y2hlckZyb21Ub2tlbnMoICggdG9rZW5zID0gdG9rZW5zLnNsaWNlKCBqICkgKSApLFxuXHRcdFx0XHRcdGogPCBsZW4gJiYgdG9TZWxlY3RvciggdG9rZW5zIClcblx0XHRcdFx0KTtcblx0XHRcdH1cblx0XHRcdG1hdGNoZXJzLnB1c2goIG1hdGNoZXIgKTtcblx0XHR9XG5cdH1cblxuXHRyZXR1cm4gZWxlbWVudE1hdGNoZXIoIG1hdGNoZXJzICk7XG59XG5cbmZ1bmN0aW9uIG1hdGNoZXJGcm9tR3JvdXBNYXRjaGVycyggZWxlbWVudE1hdGNoZXJzLCBzZXRNYXRjaGVycyApIHtcblx0dmFyIGJ5U2V0ID0gc2V0TWF0Y2hlcnMubGVuZ3RoID4gMCxcblx0XHRieUVsZW1lbnQgPSBlbGVtZW50TWF0Y2hlcnMubGVuZ3RoID4gMCxcblx0XHRzdXBlck1hdGNoZXIgPSBmdW5jdGlvbiggc2VlZCwgY29udGV4dCwgeG1sLCByZXN1bHRzLCBvdXRlcm1vc3QgKSB7XG5cdFx0XHR2YXIgZWxlbSwgaiwgbWF0Y2hlcixcblx0XHRcdFx0bWF0Y2hlZENvdW50ID0gMCxcblx0XHRcdFx0aSA9IFwiMFwiLFxuXHRcdFx0XHR1bm1hdGNoZWQgPSBzZWVkICYmIFtdLFxuXHRcdFx0XHRzZXRNYXRjaGVkID0gW10sXG5cdFx0XHRcdGNvbnRleHRCYWNrdXAgPSBvdXRlcm1vc3RDb250ZXh0LFxuXG5cdFx0XHRcdC8vIFdlIG11c3QgYWx3YXlzIGhhdmUgZWl0aGVyIHNlZWQgZWxlbWVudHMgb3Igb3V0ZXJtb3N0IGNvbnRleHRcblx0XHRcdFx0ZWxlbXMgPSBzZWVkIHx8IGJ5RWxlbWVudCAmJiBFeHByLmZpbmRbIFwiVEFHXCIgXSggXCIqXCIsIG91dGVybW9zdCApLFxuXG5cdFx0XHRcdC8vIFVzZSBpbnRlZ2VyIGRpcnJ1bnMgaWZmIHRoaXMgaXMgdGhlIG91dGVybW9zdCBtYXRjaGVyXG5cdFx0XHRcdGRpcnJ1bnNVbmlxdWUgPSAoIGRpcnJ1bnMgKz0gY29udGV4dEJhY2t1cCA9PSBudWxsID8gMSA6IE1hdGgucmFuZG9tKCkgfHwgMC4xICksXG5cdFx0XHRcdGxlbiA9IGVsZW1zLmxlbmd0aDtcblxuXHRcdFx0aWYgKCBvdXRlcm1vc3QgKSB7XG5cblx0XHRcdFx0Ly8gU3VwcG9ydDogSUUgMTErLCBFZGdlIDE3IC0gMTgrXG5cdFx0XHRcdC8vIElFL0VkZ2Ugc29tZXRpbWVzIHRocm93IGEgXCJQZXJtaXNzaW9uIGRlbmllZFwiIGVycm9yIHdoZW4gc3RyaWN0LWNvbXBhcmluZ1xuXHRcdFx0XHQvLyB0d28gZG9jdW1lbnRzOyBzaGFsbG93IGNvbXBhcmlzb25zIHdvcmsuXG5cdFx0XHRcdC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBlcWVxZXFcblx0XHRcdFx0b3V0ZXJtb3N0Q29udGV4dCA9IGNvbnRleHQgPT0gZG9jdW1lbnQgfHwgY29udGV4dCB8fCBvdXRlcm1vc3Q7XG5cdFx0XHR9XG5cblx0XHRcdC8vIEFkZCBlbGVtZW50cyBwYXNzaW5nIGVsZW1lbnRNYXRjaGVycyBkaXJlY3RseSB0byByZXN1bHRzXG5cdFx0XHQvLyBTdXBwb3J0OiBJRTw5LCBTYWZhcmlcblx0XHRcdC8vIFRvbGVyYXRlIE5vZGVMaXN0IHByb3BlcnRpZXMgKElFOiBcImxlbmd0aFwiOyBTYWZhcmk6IDxudW1iZXI+KSBtYXRjaGluZyBlbGVtZW50cyBieSBpZFxuXHRcdFx0Zm9yICggOyBpICE9PSBsZW4gJiYgKCBlbGVtID0gZWxlbXNbIGkgXSApICE9IG51bGw7IGkrKyApIHtcblx0XHRcdFx0aWYgKCBieUVsZW1lbnQgJiYgZWxlbSApIHtcblx0XHRcdFx0XHRqID0gMDtcblxuXHRcdFx0XHRcdC8vIFN1cHBvcnQ6IElFIDExKywgRWRnZSAxNyAtIDE4K1xuXHRcdFx0XHRcdC8vIElFL0VkZ2Ugc29tZXRpbWVzIHRocm93IGEgXCJQZXJtaXNzaW9uIGRlbmllZFwiIGVycm9yIHdoZW4gc3RyaWN0LWNvbXBhcmluZ1xuXHRcdFx0XHRcdC8vIHR3byBkb2N1bWVudHM7IHNoYWxsb3cgY29tcGFyaXNvbnMgd29yay5cblx0XHRcdFx0XHQvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgZXFlcWVxXG5cdFx0XHRcdFx0aWYgKCAhY29udGV4dCAmJiBlbGVtLm93bmVyRG9jdW1lbnQgIT0gZG9jdW1lbnQgKSB7XG5cdFx0XHRcdFx0XHRzZXREb2N1bWVudCggZWxlbSApO1xuXHRcdFx0XHRcdFx0eG1sID0gIWRvY3VtZW50SXNIVE1MO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0XHR3aGlsZSAoICggbWF0Y2hlciA9IGVsZW1lbnRNYXRjaGVyc1sgaisrIF0gKSApIHtcblx0XHRcdFx0XHRcdGlmICggbWF0Y2hlciggZWxlbSwgY29udGV4dCB8fCBkb2N1bWVudCwgeG1sICkgKSB7XG5cdFx0XHRcdFx0XHRcdHJlc3VsdHMucHVzaCggZWxlbSApO1xuXHRcdFx0XHRcdFx0XHRicmVhaztcblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0aWYgKCBvdXRlcm1vc3QgKSB7XG5cdFx0XHRcdFx0XHRkaXJydW5zID0gZGlycnVuc1VuaXF1ZTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblxuXHRcdFx0XHQvLyBUcmFjayB1bm1hdGNoZWQgZWxlbWVudHMgZm9yIHNldCBmaWx0ZXJzXG5cdFx0XHRcdGlmICggYnlTZXQgKSB7XG5cblx0XHRcdFx0XHQvLyBUaGV5IHdpbGwgaGF2ZSBnb25lIHRocm91Z2ggYWxsIHBvc3NpYmxlIG1hdGNoZXJzXG5cdFx0XHRcdFx0aWYgKCAoIGVsZW0gPSAhbWF0Y2hlciAmJiBlbGVtICkgKSB7XG5cdFx0XHRcdFx0XHRtYXRjaGVkQ291bnQtLTtcblx0XHRcdFx0XHR9XG5cblx0XHRcdFx0XHQvLyBMZW5ndGhlbiB0aGUgYXJyYXkgZm9yIGV2ZXJ5IGVsZW1lbnQsIG1hdGNoZWQgb3Igbm90XG5cdFx0XHRcdFx0aWYgKCBzZWVkICkge1xuXHRcdFx0XHRcdFx0dW5tYXRjaGVkLnB1c2goIGVsZW0gKTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblx0XHRcdH1cblxuXHRcdFx0Ly8gYGlgIGlzIG5vdyB0aGUgY291bnQgb2YgZWxlbWVudHMgdmlzaXRlZCBhYm92ZSwgYW5kIGFkZGluZyBpdCB0byBgbWF0Y2hlZENvdW50YFxuXHRcdFx0Ly8gbWFrZXMgdGhlIGxhdHRlciBub25uZWdhdGl2ZS5cblx0XHRcdG1hdGNoZWRDb3VudCArPSBpO1xuXG5cdFx0XHQvLyBBcHBseSBzZXQgZmlsdGVycyB0byB1bm1hdGNoZWQgZWxlbWVudHNcblx0XHRcdC8vIE5PVEU6IFRoaXMgY2FuIGJlIHNraXBwZWQgaWYgdGhlcmUgYXJlIG5vIHVubWF0Y2hlZCBlbGVtZW50cyAoaS5lLiwgYG1hdGNoZWRDb3VudGBcblx0XHRcdC8vIGVxdWFscyBgaWApLCB1bmxlc3Mgd2UgZGlkbid0IHZpc2l0IF9hbnlfIGVsZW1lbnRzIGluIHRoZSBhYm92ZSBsb29wIGJlY2F1c2Ugd2UgaGF2ZVxuXHRcdFx0Ly8gbm8gZWxlbWVudCBtYXRjaGVycyBhbmQgbm8gc2VlZC5cblx0XHRcdC8vIEluY3JlbWVudGluZyBhbiBpbml0aWFsbHktc3RyaW5nIFwiMFwiIGBpYCBhbGxvd3MgYGlgIHRvIHJlbWFpbiBhIHN0cmluZyBvbmx5IGluIHRoYXRcblx0XHRcdC8vIGNhc2UsIHdoaWNoIHdpbGwgcmVzdWx0IGluIGEgXCIwMFwiIGBtYXRjaGVkQ291bnRgIHRoYXQgZGlmZmVycyBmcm9tIGBpYCBidXQgaXMgYWxzb1xuXHRcdFx0Ly8gbnVtZXJpY2FsbHkgemVyby5cblx0XHRcdGlmICggYnlTZXQgJiYgaSAhPT0gbWF0Y2hlZENvdW50ICkge1xuXHRcdFx0XHRqID0gMDtcblx0XHRcdFx0d2hpbGUgKCAoIG1hdGNoZXIgPSBzZXRNYXRjaGVyc1sgaisrIF0gKSApIHtcblx0XHRcdFx0XHRtYXRjaGVyKCB1bm1hdGNoZWQsIHNldE1hdGNoZWQsIGNvbnRleHQsIHhtbCApO1xuXHRcdFx0XHR9XG5cblx0XHRcdFx0aWYgKCBzZWVkICkge1xuXG5cdFx0XHRcdFx0Ly8gUmVpbnRlZ3JhdGUgZWxlbWVudCBtYXRjaGVzIHRvIGVsaW1pbmF0ZSB0aGUgbmVlZCBmb3Igc29ydGluZ1xuXHRcdFx0XHRcdGlmICggbWF0Y2hlZENvdW50ID4gMCApIHtcblx0XHRcdFx0XHRcdHdoaWxlICggaS0tICkge1xuXHRcdFx0XHRcdFx0XHRpZiAoICEoIHVubWF0Y2hlZFsgaSBdIHx8IHNldE1hdGNoZWRbIGkgXSApICkge1xuXHRcdFx0XHRcdFx0XHRcdHNldE1hdGNoZWRbIGkgXSA9IHBvcC5jYWxsKCByZXN1bHRzICk7XG5cdFx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHR9XG5cblx0XHRcdFx0XHQvLyBEaXNjYXJkIGluZGV4IHBsYWNlaG9sZGVyIHZhbHVlcyB0byBnZXQgb25seSBhY3R1YWwgbWF0Y2hlc1xuXHRcdFx0XHRcdHNldE1hdGNoZWQgPSBjb25kZW5zZSggc2V0TWF0Y2hlZCApO1xuXHRcdFx0XHR9XG5cblx0XHRcdFx0Ly8gQWRkIG1hdGNoZXMgdG8gcmVzdWx0c1xuXHRcdFx0XHRwdXNoLmFwcGx5KCByZXN1bHRzLCBzZXRNYXRjaGVkICk7XG5cblx0XHRcdFx0Ly8gU2VlZGxlc3Mgc2V0IG1hdGNoZXMgc3VjY2VlZGluZyBtdWx0aXBsZSBzdWNjZXNzZnVsIG1hdGNoZXJzIHN0aXB1bGF0ZSBzb3J0aW5nXG5cdFx0XHRcdGlmICggb3V0ZXJtb3N0ICYmICFzZWVkICYmIHNldE1hdGNoZWQubGVuZ3RoID4gMCAmJlxuXHRcdFx0XHRcdCggbWF0Y2hlZENvdW50ICsgc2V0TWF0Y2hlcnMubGVuZ3RoICkgPiAxICkge1xuXG5cdFx0XHRcdFx0U2l6emxlLnVuaXF1ZVNvcnQoIHJlc3VsdHMgKTtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXG5cdFx0XHQvLyBPdmVycmlkZSBtYW5pcHVsYXRpb24gb2YgZ2xvYmFscyBieSBuZXN0ZWQgbWF0Y2hlcnNcblx0XHRcdGlmICggb3V0ZXJtb3N0ICkge1xuXHRcdFx0XHRkaXJydW5zID0gZGlycnVuc1VuaXF1ZTtcblx0XHRcdFx0b3V0ZXJtb3N0Q29udGV4dCA9IGNvbnRleHRCYWNrdXA7XG5cdFx0XHR9XG5cblx0XHRcdHJldHVybiB1bm1hdGNoZWQ7XG5cdFx0fTtcblxuXHRyZXR1cm4gYnlTZXQgP1xuXHRcdG1hcmtGdW5jdGlvbiggc3VwZXJNYXRjaGVyICkgOlxuXHRcdHN1cGVyTWF0Y2hlcjtcbn1cblxuY29tcGlsZSA9IFNpenpsZS5jb21waWxlID0gZnVuY3Rpb24oIHNlbGVjdG9yLCBtYXRjaCAvKiBJbnRlcm5hbCBVc2UgT25seSAqLyApIHtcblx0dmFyIGksXG5cdFx0c2V0TWF0Y2hlcnMgPSBbXSxcblx0XHRlbGVtZW50TWF0Y2hlcnMgPSBbXSxcblx0XHRjYWNoZWQgPSBjb21waWxlckNhY2hlWyBzZWxlY3RvciArIFwiIFwiIF07XG5cblx0aWYgKCAhY2FjaGVkICkge1xuXG5cdFx0Ly8gR2VuZXJhdGUgYSBmdW5jdGlvbiBvZiByZWN1cnNpdmUgZnVuY3Rpb25zIHRoYXQgY2FuIGJlIHVzZWQgdG8gY2hlY2sgZWFjaCBlbGVtZW50XG5cdFx0aWYgKCAhbWF0Y2ggKSB7XG5cdFx0XHRtYXRjaCA9IHRva2VuaXplKCBzZWxlY3RvciApO1xuXHRcdH1cblx0XHRpID0gbWF0Y2gubGVuZ3RoO1xuXHRcdHdoaWxlICggaS0tICkge1xuXHRcdFx0Y2FjaGVkID0gbWF0Y2hlckZyb21Ub2tlbnMoIG1hdGNoWyBpIF0gKTtcblx0XHRcdGlmICggY2FjaGVkWyBleHBhbmRvIF0gKSB7XG5cdFx0XHRcdHNldE1hdGNoZXJzLnB1c2goIGNhY2hlZCApO1xuXHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0ZWxlbWVudE1hdGNoZXJzLnB1c2goIGNhY2hlZCApO1xuXHRcdFx0fVxuXHRcdH1cblxuXHRcdC8vIENhY2hlIHRoZSBjb21waWxlZCBmdW5jdGlvblxuXHRcdGNhY2hlZCA9IGNvbXBpbGVyQ2FjaGUoXG5cdFx0XHRzZWxlY3Rvcixcblx0XHRcdG1hdGNoZXJGcm9tR3JvdXBNYXRjaGVycyggZWxlbWVudE1hdGNoZXJzLCBzZXRNYXRjaGVycyApXG5cdFx0KTtcblxuXHRcdC8vIFNhdmUgc2VsZWN0b3IgYW5kIHRva2VuaXphdGlvblxuXHRcdGNhY2hlZC5zZWxlY3RvciA9IHNlbGVjdG9yO1xuXHR9XG5cdHJldHVybiBjYWNoZWQ7XG59O1xuXG4vKipcbiAqIEEgbG93LWxldmVsIHNlbGVjdGlvbiBmdW5jdGlvbiB0aGF0IHdvcmtzIHdpdGggU2l6emxlJ3MgY29tcGlsZWRcbiAqICBzZWxlY3RvciBmdW5jdGlvbnNcbiAqIEBwYXJhbSB7U3RyaW5nfEZ1bmN0aW9ufSBzZWxlY3RvciBBIHNlbGVjdG9yIG9yIGEgcHJlLWNvbXBpbGVkXG4gKiAgc2VsZWN0b3IgZnVuY3Rpb24gYnVpbHQgd2l0aCBTaXp6bGUuY29tcGlsZVxuICogQHBhcmFtIHtFbGVtZW50fSBjb250ZXh0XG4gKiBAcGFyYW0ge0FycmF5fSBbcmVzdWx0c11cbiAqIEBwYXJhbSB7QXJyYXl9IFtzZWVkXSBBIHNldCBvZiBlbGVtZW50cyB0byBtYXRjaCBhZ2FpbnN0XG4gKi9cbnNlbGVjdCA9IFNpenpsZS5zZWxlY3QgPSBmdW5jdGlvbiggc2VsZWN0b3IsIGNvbnRleHQsIHJlc3VsdHMsIHNlZWQgKSB7XG5cdHZhciBpLCB0b2tlbnMsIHRva2VuLCB0eXBlLCBmaW5kLFxuXHRcdGNvbXBpbGVkID0gdHlwZW9mIHNlbGVjdG9yID09PSBcImZ1bmN0aW9uXCIgJiYgc2VsZWN0b3IsXG5cdFx0bWF0Y2ggPSAhc2VlZCAmJiB0b2tlbml6ZSggKCBzZWxlY3RvciA9IGNvbXBpbGVkLnNlbGVjdG9yIHx8IHNlbGVjdG9yICkgKTtcblxuXHRyZXN1bHRzID0gcmVzdWx0cyB8fCBbXTtcblxuXHQvLyBUcnkgdG8gbWluaW1pemUgb3BlcmF0aW9ucyBpZiB0aGVyZSBpcyBvbmx5IG9uZSBzZWxlY3RvciBpbiB0aGUgbGlzdCBhbmQgbm8gc2VlZFxuXHQvLyAodGhlIGxhdHRlciBvZiB3aGljaCBndWFyYW50ZWVzIHVzIGNvbnRleHQpXG5cdGlmICggbWF0Y2gubGVuZ3RoID09PSAxICkge1xuXG5cdFx0Ly8gUmVkdWNlIGNvbnRleHQgaWYgdGhlIGxlYWRpbmcgY29tcG91bmQgc2VsZWN0b3IgaXMgYW4gSURcblx0XHR0b2tlbnMgPSBtYXRjaFsgMCBdID0gbWF0Y2hbIDAgXS5zbGljZSggMCApO1xuXHRcdGlmICggdG9rZW5zLmxlbmd0aCA+IDIgJiYgKCB0b2tlbiA9IHRva2Vuc1sgMCBdICkudHlwZSA9PT0gXCJJRFwiICYmXG5cdFx0XHRjb250ZXh0Lm5vZGVUeXBlID09PSA5ICYmIGRvY3VtZW50SXNIVE1MICYmIEV4cHIucmVsYXRpdmVbIHRva2Vuc1sgMSBdLnR5cGUgXSApIHtcblxuXHRcdFx0Y29udGV4dCA9ICggRXhwci5maW5kWyBcIklEXCIgXSggdG9rZW4ubWF0Y2hlc1sgMCBdXG5cdFx0XHRcdC5yZXBsYWNlKCBydW5lc2NhcGUsIGZ1bmVzY2FwZSApLCBjb250ZXh0ICkgfHwgW10gKVsgMCBdO1xuXHRcdFx0aWYgKCAhY29udGV4dCApIHtcblx0XHRcdFx0cmV0dXJuIHJlc3VsdHM7XG5cblx0XHRcdC8vIFByZWNvbXBpbGVkIG1hdGNoZXJzIHdpbGwgc3RpbGwgdmVyaWZ5IGFuY2VzdHJ5LCBzbyBzdGVwIHVwIGEgbGV2ZWxcblx0XHRcdH0gZWxzZSBpZiAoIGNvbXBpbGVkICkge1xuXHRcdFx0XHRjb250ZXh0ID0gY29udGV4dC5wYXJlbnROb2RlO1xuXHRcdFx0fVxuXG5cdFx0XHRzZWxlY3RvciA9IHNlbGVjdG9yLnNsaWNlKCB0b2tlbnMuc2hpZnQoKS52YWx1ZS5sZW5ndGggKTtcblx0XHR9XG5cblx0XHQvLyBGZXRjaCBhIHNlZWQgc2V0IGZvciByaWdodC10by1sZWZ0IG1hdGNoaW5nXG5cdFx0aSA9IG1hdGNoRXhwclsgXCJuZWVkc0NvbnRleHRcIiBdLnRlc3QoIHNlbGVjdG9yICkgPyAwIDogdG9rZW5zLmxlbmd0aDtcblx0XHR3aGlsZSAoIGktLSApIHtcblx0XHRcdHRva2VuID0gdG9rZW5zWyBpIF07XG5cblx0XHRcdC8vIEFib3J0IGlmIHdlIGhpdCBhIGNvbWJpbmF0b3Jcblx0XHRcdGlmICggRXhwci5yZWxhdGl2ZVsgKCB0eXBlID0gdG9rZW4udHlwZSApIF0gKSB7XG5cdFx0XHRcdGJyZWFrO1xuXHRcdFx0fVxuXHRcdFx0aWYgKCAoIGZpbmQgPSBFeHByLmZpbmRbIHR5cGUgXSApICkge1xuXG5cdFx0XHRcdC8vIFNlYXJjaCwgZXhwYW5kaW5nIGNvbnRleHQgZm9yIGxlYWRpbmcgc2libGluZyBjb21iaW5hdG9yc1xuXHRcdFx0XHRpZiAoICggc2VlZCA9IGZpbmQoXG5cdFx0XHRcdFx0dG9rZW4ubWF0Y2hlc1sgMCBdLnJlcGxhY2UoIHJ1bmVzY2FwZSwgZnVuZXNjYXBlICksXG5cdFx0XHRcdFx0cnNpYmxpbmcudGVzdCggdG9rZW5zWyAwIF0udHlwZSApICYmIHRlc3RDb250ZXh0KCBjb250ZXh0LnBhcmVudE5vZGUgKSB8fFxuXHRcdFx0XHRcdFx0Y29udGV4dFxuXHRcdFx0XHQpICkgKSB7XG5cblx0XHRcdFx0XHQvLyBJZiBzZWVkIGlzIGVtcHR5IG9yIG5vIHRva2VucyByZW1haW4sIHdlIGNhbiByZXR1cm4gZWFybHlcblx0XHRcdFx0XHR0b2tlbnMuc3BsaWNlKCBpLCAxICk7XG5cdFx0XHRcdFx0c2VsZWN0b3IgPSBzZWVkLmxlbmd0aCAmJiB0b1NlbGVjdG9yKCB0b2tlbnMgKTtcblx0XHRcdFx0XHRpZiAoICFzZWxlY3RvciApIHtcblx0XHRcdFx0XHRcdHB1c2guYXBwbHkoIHJlc3VsdHMsIHNlZWQgKTtcblx0XHRcdFx0XHRcdHJldHVybiByZXN1bHRzO1xuXHRcdFx0XHRcdH1cblxuXHRcdFx0XHRcdGJyZWFrO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fVxuXHR9XG5cblx0Ly8gQ29tcGlsZSBhbmQgZXhlY3V0ZSBhIGZpbHRlcmluZyBmdW5jdGlvbiBpZiBvbmUgaXMgbm90IHByb3ZpZGVkXG5cdC8vIFByb3ZpZGUgYG1hdGNoYCB0byBhdm9pZCByZXRva2VuaXphdGlvbiBpZiB3ZSBtb2RpZmllZCB0aGUgc2VsZWN0b3IgYWJvdmVcblx0KCBjb21waWxlZCB8fCBjb21waWxlKCBzZWxlY3RvciwgbWF0Y2ggKSApKFxuXHRcdHNlZWQsXG5cdFx0Y29udGV4dCxcblx0XHQhZG9jdW1lbnRJc0hUTUwsXG5cdFx0cmVzdWx0cyxcblx0XHQhY29udGV4dCB8fCByc2libGluZy50ZXN0KCBzZWxlY3RvciApICYmIHRlc3RDb250ZXh0KCBjb250ZXh0LnBhcmVudE5vZGUgKSB8fCBjb250ZXh0XG5cdCk7XG5cdHJldHVybiByZXN1bHRzO1xufTtcblxuLy8gT25lLXRpbWUgYXNzaWdubWVudHNcblxuLy8gU29ydCBzdGFiaWxpdHlcbnN1cHBvcnQuc29ydFN0YWJsZSA9IGV4cGFuZG8uc3BsaXQoIFwiXCIgKS5zb3J0KCBzb3J0T3JkZXIgKS5qb2luKCBcIlwiICkgPT09IGV4cGFuZG87XG5cbi8vIFN1cHBvcnQ6IENocm9tZSAxNC0zNStcbi8vIEFsd2F5cyBhc3N1bWUgZHVwbGljYXRlcyBpZiB0aGV5IGFyZW4ndCBwYXNzZWQgdG8gdGhlIGNvbXBhcmlzb24gZnVuY3Rpb25cbnN1cHBvcnQuZGV0ZWN0RHVwbGljYXRlcyA9ICEhaGFzRHVwbGljYXRlO1xuXG4vLyBJbml0aWFsaXplIGFnYWluc3QgdGhlIGRlZmF1bHQgZG9jdW1lbnRcbnNldERvY3VtZW50KCk7XG5cbi8vIFN1cHBvcnQ6IFdlYmtpdDw1MzcuMzIgLSBTYWZhcmkgNi4wLjMvQ2hyb21lIDI1IChmaXhlZCBpbiBDaHJvbWUgMjcpXG4vLyBEZXRhY2hlZCBub2RlcyBjb25mb3VuZGluZ2x5IGZvbGxvdyAqZWFjaCBvdGhlcipcbnN1cHBvcnQuc29ydERldGFjaGVkID0gYXNzZXJ0KCBmdW5jdGlvbiggZWwgKSB7XG5cblx0Ly8gU2hvdWxkIHJldHVybiAxLCBidXQgcmV0dXJucyA0IChmb2xsb3dpbmcpXG5cdHJldHVybiBlbC5jb21wYXJlRG9jdW1lbnRQb3NpdGlvbiggZG9jdW1lbnQuY3JlYXRlRWxlbWVudCggXCJmaWVsZHNldFwiICkgKSAmIDE7XG59ICk7XG5cbi8vIFN1cHBvcnQ6IElFPDhcbi8vIFByZXZlbnQgYXR0cmlidXRlL3Byb3BlcnR5IFwiaW50ZXJwb2xhdGlvblwiXG4vLyBodHRwczovL21zZG4ubWljcm9zb2Z0LmNvbS9lbi11cy9saWJyYXJ5L21zNTM2NDI5JTI4VlMuODUlMjkuYXNweFxuaWYgKCAhYXNzZXJ0KCBmdW5jdGlvbiggZWwgKSB7XG5cdGVsLmlubmVySFRNTCA9IFwiPGEgaHJlZj0nIyc+PC9hPlwiO1xuXHRyZXR1cm4gZWwuZmlyc3RDaGlsZC5nZXRBdHRyaWJ1dGUoIFwiaHJlZlwiICkgPT09IFwiI1wiO1xufSApICkge1xuXHRhZGRIYW5kbGUoIFwidHlwZXxocmVmfGhlaWdodHx3aWR0aFwiLCBmdW5jdGlvbiggZWxlbSwgbmFtZSwgaXNYTUwgKSB7XG5cdFx0aWYgKCAhaXNYTUwgKSB7XG5cdFx0XHRyZXR1cm4gZWxlbS5nZXRBdHRyaWJ1dGUoIG5hbWUsIG5hbWUudG9Mb3dlckNhc2UoKSA9PT0gXCJ0eXBlXCIgPyAxIDogMiApO1xuXHRcdH1cblx0fSApO1xufVxuXG4vLyBTdXBwb3J0OiBJRTw5XG4vLyBVc2UgZGVmYXVsdFZhbHVlIGluIHBsYWNlIG9mIGdldEF0dHJpYnV0ZShcInZhbHVlXCIpXG5pZiAoICFzdXBwb3J0LmF0dHJpYnV0ZXMgfHwgIWFzc2VydCggZnVuY3Rpb24oIGVsICkge1xuXHRlbC5pbm5lckhUTUwgPSBcIjxpbnB1dC8+XCI7XG5cdGVsLmZpcnN0Q2hpbGQuc2V0QXR0cmlidXRlKCBcInZhbHVlXCIsIFwiXCIgKTtcblx0cmV0dXJuIGVsLmZpcnN0Q2hpbGQuZ2V0QXR0cmlidXRlKCBcInZhbHVlXCIgKSA9PT0gXCJcIjtcbn0gKSApIHtcblx0YWRkSGFuZGxlKCBcInZhbHVlXCIsIGZ1bmN0aW9uKCBlbGVtLCBfbmFtZSwgaXNYTUwgKSB7XG5cdFx0aWYgKCAhaXNYTUwgJiYgZWxlbS5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpID09PSBcImlucHV0XCIgKSB7XG5cdFx0XHRyZXR1cm4gZWxlbS5kZWZhdWx0VmFsdWU7XG5cdFx0fVxuXHR9ICk7XG59XG5cbi8vIFN1cHBvcnQ6IElFPDlcbi8vIFVzZSBnZXRBdHRyaWJ1dGVOb2RlIHRvIGZldGNoIGJvb2xlYW5zIHdoZW4gZ2V0QXR0cmlidXRlIGxpZXNcbmlmICggIWFzc2VydCggZnVuY3Rpb24oIGVsICkge1xuXHRyZXR1cm4gZWwuZ2V0QXR0cmlidXRlKCBcImRpc2FibGVkXCIgKSA9PSBudWxsO1xufSApICkge1xuXHRhZGRIYW5kbGUoIGJvb2xlYW5zLCBmdW5jdGlvbiggZWxlbSwgbmFtZSwgaXNYTUwgKSB7XG5cdFx0dmFyIHZhbDtcblx0XHRpZiAoICFpc1hNTCApIHtcblx0XHRcdHJldHVybiBlbGVtWyBuYW1lIF0gPT09IHRydWUgPyBuYW1lLnRvTG93ZXJDYXNlKCkgOlxuXHRcdFx0XHQoIHZhbCA9IGVsZW0uZ2V0QXR0cmlidXRlTm9kZSggbmFtZSApICkgJiYgdmFsLnNwZWNpZmllZCA/XG5cdFx0XHRcdFx0dmFsLnZhbHVlIDpcblx0XHRcdFx0XHRudWxsO1xuXHRcdH1cblx0fSApO1xufVxuXG5yZXR1cm4gU2l6emxlO1xuXG59ICkoIHdpbmRvdyApO1xuXG5cblxualF1ZXJ5LmZpbmQgPSBTaXp6bGU7XG5qUXVlcnkuZXhwciA9IFNpenpsZS5zZWxlY3RvcnM7XG5cbi8vIERlcHJlY2F0ZWRcbmpRdWVyeS5leHByWyBcIjpcIiBdID0galF1ZXJ5LmV4cHIucHNldWRvcztcbmpRdWVyeS51bmlxdWVTb3J0ID0galF1ZXJ5LnVuaXF1ZSA9IFNpenpsZS51bmlxdWVTb3J0O1xualF1ZXJ5LnRleHQgPSBTaXp6bGUuZ2V0VGV4dDtcbmpRdWVyeS5pc1hNTERvYyA9IFNpenpsZS5pc1hNTDtcbmpRdWVyeS5jb250YWlucyA9IFNpenpsZS5jb250YWlucztcbmpRdWVyeS5lc2NhcGVTZWxlY3RvciA9IFNpenpsZS5lc2NhcGU7XG5cblxuXG5cbnZhciBkaXIgPSBmdW5jdGlvbiggZWxlbSwgZGlyLCB1bnRpbCApIHtcblx0dmFyIG1hdGNoZWQgPSBbXSxcblx0XHR0cnVuY2F0ZSA9IHVudGlsICE9PSB1bmRlZmluZWQ7XG5cblx0d2hpbGUgKCAoIGVsZW0gPSBlbGVtWyBkaXIgXSApICYmIGVsZW0ubm9kZVR5cGUgIT09IDkgKSB7XG5cdFx0aWYgKCBlbGVtLm5vZGVUeXBlID09PSAxICkge1xuXHRcdFx0aWYgKCB0cnVuY2F0ZSAmJiBqUXVlcnkoIGVsZW0gKS5pcyggdW50aWwgKSApIHtcblx0XHRcdFx0YnJlYWs7XG5cdFx0XHR9XG5cdFx0XHRtYXRjaGVkLnB1c2goIGVsZW0gKTtcblx0XHR9XG5cdH1cblx0cmV0dXJuIG1hdGNoZWQ7XG59O1xuXG5cbnZhciBzaWJsaW5ncyA9IGZ1bmN0aW9uKCBuLCBlbGVtICkge1xuXHR2YXIgbWF0Y2hlZCA9IFtdO1xuXG5cdGZvciAoIDsgbjsgbiA9IG4ubmV4dFNpYmxpbmcgKSB7XG5cdFx0aWYgKCBuLm5vZGVUeXBlID09PSAxICYmIG4gIT09IGVsZW0gKSB7XG5cdFx0XHRtYXRjaGVkLnB1c2goIG4gKTtcblx0XHR9XG5cdH1cblxuXHRyZXR1cm4gbWF0Y2hlZDtcbn07XG5cblxudmFyIHJuZWVkc0NvbnRleHQgPSBqUXVlcnkuZXhwci5tYXRjaC5uZWVkc0NvbnRleHQ7XG5cblxuXG5mdW5jdGlvbiBub2RlTmFtZSggZWxlbSwgbmFtZSApIHtcblxuICByZXR1cm4gZWxlbS5ub2RlTmFtZSAmJiBlbGVtLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCkgPT09IG5hbWUudG9Mb3dlckNhc2UoKTtcblxufTtcbnZhciByc2luZ2xlVGFnID0gKCAvXjwoW2Etel1bXlxcL1xcMD46XFx4MjBcXHRcXHJcXG5cXGZdKilbXFx4MjBcXHRcXHJcXG5cXGZdKlxcLz8+KD86PFxcL1xcMT58KSQvaSApO1xuXG5cblxuLy8gSW1wbGVtZW50IHRoZSBpZGVudGljYWwgZnVuY3Rpb25hbGl0eSBmb3IgZmlsdGVyIGFuZCBub3RcbmZ1bmN0aW9uIHdpbm5vdyggZWxlbWVudHMsIHF1YWxpZmllciwgbm90ICkge1xuXHRpZiAoIGlzRnVuY3Rpb24oIHF1YWxpZmllciApICkge1xuXHRcdHJldHVybiBqUXVlcnkuZ3JlcCggZWxlbWVudHMsIGZ1bmN0aW9uKCBlbGVtLCBpICkge1xuXHRcdFx0cmV0dXJuICEhcXVhbGlmaWVyLmNhbGwoIGVsZW0sIGksIGVsZW0gKSAhPT0gbm90O1xuXHRcdH0gKTtcblx0fVxuXG5cdC8vIFNpbmdsZSBlbGVtZW50XG5cdGlmICggcXVhbGlmaWVyLm5vZGVUeXBlICkge1xuXHRcdHJldHVybiBqUXVlcnkuZ3JlcCggZWxlbWVudHMsIGZ1bmN0aW9uKCBlbGVtICkge1xuXHRcdFx0cmV0dXJuICggZWxlbSA9PT0gcXVhbGlmaWVyICkgIT09IG5vdDtcblx0XHR9ICk7XG5cdH1cblxuXHQvLyBBcnJheWxpa2Ugb2YgZWxlbWVudHMgKGpRdWVyeSwgYXJndW1lbnRzLCBBcnJheSlcblx0aWYgKCB0eXBlb2YgcXVhbGlmaWVyICE9PSBcInN0cmluZ1wiICkge1xuXHRcdHJldHVybiBqUXVlcnkuZ3JlcCggZWxlbWVudHMsIGZ1bmN0aW9uKCBlbGVtICkge1xuXHRcdFx0cmV0dXJuICggaW5kZXhPZi5jYWxsKCBxdWFsaWZpZXIsIGVsZW0gKSA+IC0xICkgIT09IG5vdDtcblx0XHR9ICk7XG5cdH1cblxuXHQvLyBGaWx0ZXJlZCBkaXJlY3RseSBmb3IgYm90aCBzaW1wbGUgYW5kIGNvbXBsZXggc2VsZWN0b3JzXG5cdHJldHVybiBqUXVlcnkuZmlsdGVyKCBxdWFsaWZpZXIsIGVsZW1lbnRzLCBub3QgKTtcbn1cblxualF1ZXJ5LmZpbHRlciA9IGZ1bmN0aW9uKCBleHByLCBlbGVtcywgbm90ICkge1xuXHR2YXIgZWxlbSA9IGVsZW1zWyAwIF07XG5cblx0aWYgKCBub3QgKSB7XG5cdFx0ZXhwciA9IFwiOm5vdChcIiArIGV4cHIgKyBcIilcIjtcblx0fVxuXG5cdGlmICggZWxlbXMubGVuZ3RoID09PSAxICYmIGVsZW0ubm9kZVR5cGUgPT09IDEgKSB7XG5cdFx0cmV0dXJuIGpRdWVyeS5maW5kLm1hdGNoZXNTZWxlY3RvciggZWxlbSwgZXhwciApID8gWyBlbGVtIF0gOiBbXTtcblx0fVxuXG5cdHJldHVybiBqUXVlcnkuZmluZC5tYXRjaGVzKCBleHByLCBqUXVlcnkuZ3JlcCggZWxlbXMsIGZ1bmN0aW9uKCBlbGVtICkge1xuXHRcdHJldHVybiBlbGVtLm5vZGVUeXBlID09PSAxO1xuXHR9ICkgKTtcbn07XG5cbmpRdWVyeS5mbi5leHRlbmQoIHtcblx0ZmluZDogZnVuY3Rpb24oIHNlbGVjdG9yICkge1xuXHRcdHZhciBpLCByZXQsXG5cdFx0XHRsZW4gPSB0aGlzLmxlbmd0aCxcblx0XHRcdHNlbGYgPSB0aGlzO1xuXG5cdFx0aWYgKCB0eXBlb2Ygc2VsZWN0b3IgIT09IFwic3RyaW5nXCIgKSB7XG5cdFx0XHRyZXR1cm4gdGhpcy5wdXNoU3RhY2soIGpRdWVyeSggc2VsZWN0b3IgKS5maWx0ZXIoIGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRmb3IgKCBpID0gMDsgaSA8IGxlbjsgaSsrICkge1xuXHRcdFx0XHRcdGlmICggalF1ZXJ5LmNvbnRhaW5zKCBzZWxmWyBpIF0sIHRoaXMgKSApIHtcblx0XHRcdFx0XHRcdHJldHVybiB0cnVlO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXHRcdFx0fSApICk7XG5cdFx0fVxuXG5cdFx0cmV0ID0gdGhpcy5wdXNoU3RhY2soIFtdICk7XG5cblx0XHRmb3IgKCBpID0gMDsgaSA8IGxlbjsgaSsrICkge1xuXHRcdFx0alF1ZXJ5LmZpbmQoIHNlbGVjdG9yLCBzZWxmWyBpIF0sIHJldCApO1xuXHRcdH1cblxuXHRcdHJldHVybiBsZW4gPiAxID8galF1ZXJ5LnVuaXF1ZVNvcnQoIHJldCApIDogcmV0O1xuXHR9LFxuXHRmaWx0ZXI6IGZ1bmN0aW9uKCBzZWxlY3RvciApIHtcblx0XHRyZXR1cm4gdGhpcy5wdXNoU3RhY2soIHdpbm5vdyggdGhpcywgc2VsZWN0b3IgfHwgW10sIGZhbHNlICkgKTtcblx0fSxcblx0bm90OiBmdW5jdGlvbiggc2VsZWN0b3IgKSB7XG5cdFx0cmV0dXJuIHRoaXMucHVzaFN0YWNrKCB3aW5ub3coIHRoaXMsIHNlbGVjdG9yIHx8IFtdLCB0cnVlICkgKTtcblx0fSxcblx0aXM6IGZ1bmN0aW9uKCBzZWxlY3RvciApIHtcblx0XHRyZXR1cm4gISF3aW5ub3coXG5cdFx0XHR0aGlzLFxuXG5cdFx0XHQvLyBJZiB0aGlzIGlzIGEgcG9zaXRpb25hbC9yZWxhdGl2ZSBzZWxlY3RvciwgY2hlY2sgbWVtYmVyc2hpcCBpbiB0aGUgcmV0dXJuZWQgc2V0XG5cdFx0XHQvLyBzbyAkKFwicDpmaXJzdFwiKS5pcyhcInA6bGFzdFwiKSB3b24ndCByZXR1cm4gdHJ1ZSBmb3IgYSBkb2Mgd2l0aCB0d28gXCJwXCIuXG5cdFx0XHR0eXBlb2Ygc2VsZWN0b3IgPT09IFwic3RyaW5nXCIgJiYgcm5lZWRzQ29udGV4dC50ZXN0KCBzZWxlY3RvciApID9cblx0XHRcdFx0alF1ZXJ5KCBzZWxlY3RvciApIDpcblx0XHRcdFx0c2VsZWN0b3IgfHwgW10sXG5cdFx0XHRmYWxzZVxuXHRcdCkubGVuZ3RoO1xuXHR9XG59ICk7XG5cblxuLy8gSW5pdGlhbGl6ZSBhIGpRdWVyeSBvYmplY3RcblxuXG4vLyBBIGNlbnRyYWwgcmVmZXJlbmNlIHRvIHRoZSByb290IGpRdWVyeShkb2N1bWVudClcbnZhciByb290alF1ZXJ5LFxuXG5cdC8vIEEgc2ltcGxlIHdheSB0byBjaGVjayBmb3IgSFRNTCBzdHJpbmdzXG5cdC8vIFByaW9yaXRpemUgI2lkIG92ZXIgPHRhZz4gdG8gYXZvaWQgWFNTIHZpYSBsb2NhdGlvbi5oYXNoICgjOTUyMSlcblx0Ly8gU3RyaWN0IEhUTUwgcmVjb2duaXRpb24gKCMxMTI5MDogbXVzdCBzdGFydCB3aXRoIDwpXG5cdC8vIFNob3J0Y3V0IHNpbXBsZSAjaWQgY2FzZSBmb3Igc3BlZWRcblx0cnF1aWNrRXhwciA9IC9eKD86XFxzKig8W1xcd1xcV10rPilbXj5dKnwjKFtcXHctXSspKSQvLFxuXG5cdGluaXQgPSBqUXVlcnkuZm4uaW5pdCA9IGZ1bmN0aW9uKCBzZWxlY3RvciwgY29udGV4dCwgcm9vdCApIHtcblx0XHR2YXIgbWF0Y2gsIGVsZW07XG5cblx0XHQvLyBIQU5ETEU6ICQoXCJcIiksICQobnVsbCksICQodW5kZWZpbmVkKSwgJChmYWxzZSlcblx0XHRpZiAoICFzZWxlY3RvciApIHtcblx0XHRcdHJldHVybiB0aGlzO1xuXHRcdH1cblxuXHRcdC8vIE1ldGhvZCBpbml0KCkgYWNjZXB0cyBhbiBhbHRlcm5hdGUgcm9vdGpRdWVyeVxuXHRcdC8vIHNvIG1pZ3JhdGUgY2FuIHN1cHBvcnQgalF1ZXJ5LnN1YiAoZ2gtMjEwMSlcblx0XHRyb290ID0gcm9vdCB8fCByb290alF1ZXJ5O1xuXG5cdFx0Ly8gSGFuZGxlIEhUTUwgc3RyaW5nc1xuXHRcdGlmICggdHlwZW9mIHNlbGVjdG9yID09PSBcInN0cmluZ1wiICkge1xuXHRcdFx0aWYgKCBzZWxlY3RvclsgMCBdID09PSBcIjxcIiAmJlxuXHRcdFx0XHRzZWxlY3Rvclsgc2VsZWN0b3IubGVuZ3RoIC0gMSBdID09PSBcIj5cIiAmJlxuXHRcdFx0XHRzZWxlY3Rvci5sZW5ndGggPj0gMyApIHtcblxuXHRcdFx0XHQvLyBBc3N1bWUgdGhhdCBzdHJpbmdzIHRoYXQgc3RhcnQgYW5kIGVuZCB3aXRoIDw+IGFyZSBIVE1MIGFuZCBza2lwIHRoZSByZWdleCBjaGVja1xuXHRcdFx0XHRtYXRjaCA9IFsgbnVsbCwgc2VsZWN0b3IsIG51bGwgXTtcblxuXHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0bWF0Y2ggPSBycXVpY2tFeHByLmV4ZWMoIHNlbGVjdG9yICk7XG5cdFx0XHR9XG5cblx0XHRcdC8vIE1hdGNoIGh0bWwgb3IgbWFrZSBzdXJlIG5vIGNvbnRleHQgaXMgc3BlY2lmaWVkIGZvciAjaWRcblx0XHRcdGlmICggbWF0Y2ggJiYgKCBtYXRjaFsgMSBdIHx8ICFjb250ZXh0ICkgKSB7XG5cblx0XHRcdFx0Ly8gSEFORExFOiAkKGh0bWwpIC0+ICQoYXJyYXkpXG5cdFx0XHRcdGlmICggbWF0Y2hbIDEgXSApIHtcblx0XHRcdFx0XHRjb250ZXh0ID0gY29udGV4dCBpbnN0YW5jZW9mIGpRdWVyeSA/IGNvbnRleHRbIDAgXSA6IGNvbnRleHQ7XG5cblx0XHRcdFx0XHQvLyBPcHRpb24gdG8gcnVuIHNjcmlwdHMgaXMgdHJ1ZSBmb3IgYmFjay1jb21wYXRcblx0XHRcdFx0XHQvLyBJbnRlbnRpb25hbGx5IGxldCB0aGUgZXJyb3IgYmUgdGhyb3duIGlmIHBhcnNlSFRNTCBpcyBub3QgcHJlc2VudFxuXHRcdFx0XHRcdGpRdWVyeS5tZXJnZSggdGhpcywgalF1ZXJ5LnBhcnNlSFRNTChcblx0XHRcdFx0XHRcdG1hdGNoWyAxIF0sXG5cdFx0XHRcdFx0XHRjb250ZXh0ICYmIGNvbnRleHQubm9kZVR5cGUgPyBjb250ZXh0Lm93bmVyRG9jdW1lbnQgfHwgY29udGV4dCA6IGRvY3VtZW50LFxuXHRcdFx0XHRcdFx0dHJ1ZVxuXHRcdFx0XHRcdCkgKTtcblxuXHRcdFx0XHRcdC8vIEhBTkRMRTogJChodG1sLCBwcm9wcylcblx0XHRcdFx0XHRpZiAoIHJzaW5nbGVUYWcudGVzdCggbWF0Y2hbIDEgXSApICYmIGpRdWVyeS5pc1BsYWluT2JqZWN0KCBjb250ZXh0ICkgKSB7XG5cdFx0XHRcdFx0XHRmb3IgKCBtYXRjaCBpbiBjb250ZXh0ICkge1xuXG5cdFx0XHRcdFx0XHRcdC8vIFByb3BlcnRpZXMgb2YgY29udGV4dCBhcmUgY2FsbGVkIGFzIG1ldGhvZHMgaWYgcG9zc2libGVcblx0XHRcdFx0XHRcdFx0aWYgKCBpc0Z1bmN0aW9uKCB0aGlzWyBtYXRjaCBdICkgKSB7XG5cdFx0XHRcdFx0XHRcdFx0dGhpc1sgbWF0Y2ggXSggY29udGV4dFsgbWF0Y2ggXSApO1xuXG5cdFx0XHRcdFx0XHRcdC8vIC4uLmFuZCBvdGhlcndpc2Ugc2V0IGFzIGF0dHJpYnV0ZXNcblx0XHRcdFx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHRcdFx0XHR0aGlzLmF0dHIoIG1hdGNoLCBjb250ZXh0WyBtYXRjaCBdICk7XG5cdFx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHR9XG5cblx0XHRcdFx0XHRyZXR1cm4gdGhpcztcblxuXHRcdFx0XHQvLyBIQU5ETEU6ICQoI2lkKVxuXHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdGVsZW0gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCggbWF0Y2hbIDIgXSApO1xuXG5cdFx0XHRcdFx0aWYgKCBlbGVtICkge1xuXG5cdFx0XHRcdFx0XHQvLyBJbmplY3QgdGhlIGVsZW1lbnQgZGlyZWN0bHkgaW50byB0aGUgalF1ZXJ5IG9iamVjdFxuXHRcdFx0XHRcdFx0dGhpc1sgMCBdID0gZWxlbTtcblx0XHRcdFx0XHRcdHRoaXMubGVuZ3RoID0gMTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0cmV0dXJuIHRoaXM7XG5cdFx0XHRcdH1cblxuXHRcdFx0Ly8gSEFORExFOiAkKGV4cHIsICQoLi4uKSlcblx0XHRcdH0gZWxzZSBpZiAoICFjb250ZXh0IHx8IGNvbnRleHQuanF1ZXJ5ICkge1xuXHRcdFx0XHRyZXR1cm4gKCBjb250ZXh0IHx8IHJvb3QgKS5maW5kKCBzZWxlY3RvciApO1xuXG5cdFx0XHQvLyBIQU5ETEU6ICQoZXhwciwgY29udGV4dClcblx0XHRcdC8vICh3aGljaCBpcyBqdXN0IGVxdWl2YWxlbnQgdG86ICQoY29udGV4dCkuZmluZChleHByKVxuXHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0cmV0dXJuIHRoaXMuY29uc3RydWN0b3IoIGNvbnRleHQgKS5maW5kKCBzZWxlY3RvciApO1xuXHRcdFx0fVxuXG5cdFx0Ly8gSEFORExFOiAkKERPTUVsZW1lbnQpXG5cdFx0fSBlbHNlIGlmICggc2VsZWN0b3Iubm9kZVR5cGUgKSB7XG5cdFx0XHR0aGlzWyAwIF0gPSBzZWxlY3Rvcjtcblx0XHRcdHRoaXMubGVuZ3RoID0gMTtcblx0XHRcdHJldHVybiB0aGlzO1xuXG5cdFx0Ly8gSEFORExFOiAkKGZ1bmN0aW9uKVxuXHRcdC8vIFNob3J0Y3V0IGZvciBkb2N1bWVudCByZWFkeVxuXHRcdH0gZWxzZSBpZiAoIGlzRnVuY3Rpb24oIHNlbGVjdG9yICkgKSB7XG5cdFx0XHRyZXR1cm4gcm9vdC5yZWFkeSAhPT0gdW5kZWZpbmVkID9cblx0XHRcdFx0cm9vdC5yZWFkeSggc2VsZWN0b3IgKSA6XG5cblx0XHRcdFx0Ly8gRXhlY3V0ZSBpbW1lZGlhdGVseSBpZiByZWFkeSBpcyBub3QgcHJlc2VudFxuXHRcdFx0XHRzZWxlY3RvciggalF1ZXJ5ICk7XG5cdFx0fVxuXG5cdFx0cmV0dXJuIGpRdWVyeS5tYWtlQXJyYXkoIHNlbGVjdG9yLCB0aGlzICk7XG5cdH07XG5cbi8vIEdpdmUgdGhlIGluaXQgZnVuY3Rpb24gdGhlIGpRdWVyeSBwcm90b3R5cGUgZm9yIGxhdGVyIGluc3RhbnRpYXRpb25cbmluaXQucHJvdG90eXBlID0galF1ZXJ5LmZuO1xuXG4vLyBJbml0aWFsaXplIGNlbnRyYWwgcmVmZXJlbmNlXG5yb290alF1ZXJ5ID0galF1ZXJ5KCBkb2N1bWVudCApO1xuXG5cbnZhciBycGFyZW50c3ByZXYgPSAvXig/OnBhcmVudHN8cHJldig/OlVudGlsfEFsbCkpLyxcblxuXHQvLyBNZXRob2RzIGd1YXJhbnRlZWQgdG8gcHJvZHVjZSBhIHVuaXF1ZSBzZXQgd2hlbiBzdGFydGluZyBmcm9tIGEgdW5pcXVlIHNldFxuXHRndWFyYW50ZWVkVW5pcXVlID0ge1xuXHRcdGNoaWxkcmVuOiB0cnVlLFxuXHRcdGNvbnRlbnRzOiB0cnVlLFxuXHRcdG5leHQ6IHRydWUsXG5cdFx0cHJldjogdHJ1ZVxuXHR9O1xuXG5qUXVlcnkuZm4uZXh0ZW5kKCB7XG5cdGhhczogZnVuY3Rpb24oIHRhcmdldCApIHtcblx0XHR2YXIgdGFyZ2V0cyA9IGpRdWVyeSggdGFyZ2V0LCB0aGlzICksXG5cdFx0XHRsID0gdGFyZ2V0cy5sZW5ndGg7XG5cblx0XHRyZXR1cm4gdGhpcy5maWx0ZXIoIGZ1bmN0aW9uKCkge1xuXHRcdFx0dmFyIGkgPSAwO1xuXHRcdFx0Zm9yICggOyBpIDwgbDsgaSsrICkge1xuXHRcdFx0XHRpZiAoIGpRdWVyeS5jb250YWlucyggdGhpcywgdGFyZ2V0c1sgaSBdICkgKSB7XG5cdFx0XHRcdFx0cmV0dXJuIHRydWU7XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9ICk7XG5cdH0sXG5cblx0Y2xvc2VzdDogZnVuY3Rpb24oIHNlbGVjdG9ycywgY29udGV4dCApIHtcblx0XHR2YXIgY3VyLFxuXHRcdFx0aSA9IDAsXG5cdFx0XHRsID0gdGhpcy5sZW5ndGgsXG5cdFx0XHRtYXRjaGVkID0gW10sXG5cdFx0XHR0YXJnZXRzID0gdHlwZW9mIHNlbGVjdG9ycyAhPT0gXCJzdHJpbmdcIiAmJiBqUXVlcnkoIHNlbGVjdG9ycyApO1xuXG5cdFx0Ly8gUG9zaXRpb25hbCBzZWxlY3RvcnMgbmV2ZXIgbWF0Y2gsIHNpbmNlIHRoZXJlJ3Mgbm8gX3NlbGVjdGlvbl8gY29udGV4dFxuXHRcdGlmICggIXJuZWVkc0NvbnRleHQudGVzdCggc2VsZWN0b3JzICkgKSB7XG5cdFx0XHRmb3IgKCA7IGkgPCBsOyBpKysgKSB7XG5cdFx0XHRcdGZvciAoIGN1ciA9IHRoaXNbIGkgXTsgY3VyICYmIGN1ciAhPT0gY29udGV4dDsgY3VyID0gY3VyLnBhcmVudE5vZGUgKSB7XG5cblx0XHRcdFx0XHQvLyBBbHdheXMgc2tpcCBkb2N1bWVudCBmcmFnbWVudHNcblx0XHRcdFx0XHRpZiAoIGN1ci5ub2RlVHlwZSA8IDExICYmICggdGFyZ2V0cyA/XG5cdFx0XHRcdFx0XHR0YXJnZXRzLmluZGV4KCBjdXIgKSA+IC0xIDpcblxuXHRcdFx0XHRcdFx0Ly8gRG9uJ3QgcGFzcyBub24tZWxlbWVudHMgdG8gU2l6emxlXG5cdFx0XHRcdFx0XHRjdXIubm9kZVR5cGUgPT09IDEgJiZcblx0XHRcdFx0XHRcdFx0alF1ZXJ5LmZpbmQubWF0Y2hlc1NlbGVjdG9yKCBjdXIsIHNlbGVjdG9ycyApICkgKSB7XG5cblx0XHRcdFx0XHRcdG1hdGNoZWQucHVzaCggY3VyICk7XG5cdFx0XHRcdFx0XHRicmVhaztcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9XG5cblx0XHRyZXR1cm4gdGhpcy5wdXNoU3RhY2soIG1hdGNoZWQubGVuZ3RoID4gMSA/IGpRdWVyeS51bmlxdWVTb3J0KCBtYXRjaGVkICkgOiBtYXRjaGVkICk7XG5cdH0sXG5cblx0Ly8gRGV0ZXJtaW5lIHRoZSBwb3NpdGlvbiBvZiBhbiBlbGVtZW50IHdpdGhpbiB0aGUgc2V0XG5cdGluZGV4OiBmdW5jdGlvbiggZWxlbSApIHtcblxuXHRcdC8vIE5vIGFyZ3VtZW50LCByZXR1cm4gaW5kZXggaW4gcGFyZW50XG5cdFx0aWYgKCAhZWxlbSApIHtcblx0XHRcdHJldHVybiAoIHRoaXNbIDAgXSAmJiB0aGlzWyAwIF0ucGFyZW50Tm9kZSApID8gdGhpcy5maXJzdCgpLnByZXZBbGwoKS5sZW5ndGggOiAtMTtcblx0XHR9XG5cblx0XHQvLyBJbmRleCBpbiBzZWxlY3RvclxuXHRcdGlmICggdHlwZW9mIGVsZW0gPT09IFwic3RyaW5nXCIgKSB7XG5cdFx0XHRyZXR1cm4gaW5kZXhPZi5jYWxsKCBqUXVlcnkoIGVsZW0gKSwgdGhpc1sgMCBdICk7XG5cdFx0fVxuXG5cdFx0Ly8gTG9jYXRlIHRoZSBwb3NpdGlvbiBvZiB0aGUgZGVzaXJlZCBlbGVtZW50XG5cdFx0cmV0dXJuIGluZGV4T2YuY2FsbCggdGhpcyxcblxuXHRcdFx0Ly8gSWYgaXQgcmVjZWl2ZXMgYSBqUXVlcnkgb2JqZWN0LCB0aGUgZmlyc3QgZWxlbWVudCBpcyB1c2VkXG5cdFx0XHRlbGVtLmpxdWVyeSA/IGVsZW1bIDAgXSA6IGVsZW1cblx0XHQpO1xuXHR9LFxuXG5cdGFkZDogZnVuY3Rpb24oIHNlbGVjdG9yLCBjb250ZXh0ICkge1xuXHRcdHJldHVybiB0aGlzLnB1c2hTdGFjayhcblx0XHRcdGpRdWVyeS51bmlxdWVTb3J0KFxuXHRcdFx0XHRqUXVlcnkubWVyZ2UoIHRoaXMuZ2V0KCksIGpRdWVyeSggc2VsZWN0b3IsIGNvbnRleHQgKSApXG5cdFx0XHQpXG5cdFx0KTtcblx0fSxcblxuXHRhZGRCYWNrOiBmdW5jdGlvbiggc2VsZWN0b3IgKSB7XG5cdFx0cmV0dXJuIHRoaXMuYWRkKCBzZWxlY3RvciA9PSBudWxsID9cblx0XHRcdHRoaXMucHJldk9iamVjdCA6IHRoaXMucHJldk9iamVjdC5maWx0ZXIoIHNlbGVjdG9yIClcblx0XHQpO1xuXHR9XG59ICk7XG5cbmZ1bmN0aW9uIHNpYmxpbmcoIGN1ciwgZGlyICkge1xuXHR3aGlsZSAoICggY3VyID0gY3VyWyBkaXIgXSApICYmIGN1ci5ub2RlVHlwZSAhPT0gMSApIHt9XG5cdHJldHVybiBjdXI7XG59XG5cbmpRdWVyeS5lYWNoKCB7XG5cdHBhcmVudDogZnVuY3Rpb24oIGVsZW0gKSB7XG5cdFx0dmFyIHBhcmVudCA9IGVsZW0ucGFyZW50Tm9kZTtcblx0XHRyZXR1cm4gcGFyZW50ICYmIHBhcmVudC5ub2RlVHlwZSAhPT0gMTEgPyBwYXJlbnQgOiBudWxsO1xuXHR9LFxuXHRwYXJlbnRzOiBmdW5jdGlvbiggZWxlbSApIHtcblx0XHRyZXR1cm4gZGlyKCBlbGVtLCBcInBhcmVudE5vZGVcIiApO1xuXHR9LFxuXHRwYXJlbnRzVW50aWw6IGZ1bmN0aW9uKCBlbGVtLCBfaSwgdW50aWwgKSB7XG5cdFx0cmV0dXJuIGRpciggZWxlbSwgXCJwYXJlbnROb2RlXCIsIHVudGlsICk7XG5cdH0sXG5cdG5leHQ6IGZ1bmN0aW9uKCBlbGVtICkge1xuXHRcdHJldHVybiBzaWJsaW5nKCBlbGVtLCBcIm5leHRTaWJsaW5nXCIgKTtcblx0fSxcblx0cHJldjogZnVuY3Rpb24oIGVsZW0gKSB7XG5cdFx0cmV0dXJuIHNpYmxpbmcoIGVsZW0sIFwicHJldmlvdXNTaWJsaW5nXCIgKTtcblx0fSxcblx0bmV4dEFsbDogZnVuY3Rpb24oIGVsZW0gKSB7XG5cdFx0cmV0dXJuIGRpciggZWxlbSwgXCJuZXh0U2libGluZ1wiICk7XG5cdH0sXG5cdHByZXZBbGw6IGZ1bmN0aW9uKCBlbGVtICkge1xuXHRcdHJldHVybiBkaXIoIGVsZW0sIFwicHJldmlvdXNTaWJsaW5nXCIgKTtcblx0fSxcblx0bmV4dFVudGlsOiBmdW5jdGlvbiggZWxlbSwgX2ksIHVudGlsICkge1xuXHRcdHJldHVybiBkaXIoIGVsZW0sIFwibmV4dFNpYmxpbmdcIiwgdW50aWwgKTtcblx0fSxcblx0cHJldlVudGlsOiBmdW5jdGlvbiggZWxlbSwgX2ksIHVudGlsICkge1xuXHRcdHJldHVybiBkaXIoIGVsZW0sIFwicHJldmlvdXNTaWJsaW5nXCIsIHVudGlsICk7XG5cdH0sXG5cdHNpYmxpbmdzOiBmdW5jdGlvbiggZWxlbSApIHtcblx0XHRyZXR1cm4gc2libGluZ3MoICggZWxlbS5wYXJlbnROb2RlIHx8IHt9ICkuZmlyc3RDaGlsZCwgZWxlbSApO1xuXHR9LFxuXHRjaGlsZHJlbjogZnVuY3Rpb24oIGVsZW0gKSB7XG5cdFx0cmV0dXJuIHNpYmxpbmdzKCBlbGVtLmZpcnN0Q2hpbGQgKTtcblx0fSxcblx0Y29udGVudHM6IGZ1bmN0aW9uKCBlbGVtICkge1xuXHRcdGlmICggZWxlbS5jb250ZW50RG9jdW1lbnQgIT0gbnVsbCAmJlxuXG5cdFx0XHQvLyBTdXBwb3J0OiBJRSAxMStcblx0XHRcdC8vIDxvYmplY3Q+IGVsZW1lbnRzIHdpdGggbm8gYGRhdGFgIGF0dHJpYnV0ZSBoYXMgYW4gb2JqZWN0XG5cdFx0XHQvLyBgY29udGVudERvY3VtZW50YCB3aXRoIGEgYG51bGxgIHByb3RvdHlwZS5cblx0XHRcdGdldFByb3RvKCBlbGVtLmNvbnRlbnREb2N1bWVudCApICkge1xuXG5cdFx0XHRyZXR1cm4gZWxlbS5jb250ZW50RG9jdW1lbnQ7XG5cdFx0fVxuXG5cdFx0Ly8gU3VwcG9ydDogSUUgOSAtIDExIG9ubHksIGlPUyA3IG9ubHksIEFuZHJvaWQgQnJvd3NlciA8PTQuMyBvbmx5XG5cdFx0Ly8gVHJlYXQgdGhlIHRlbXBsYXRlIGVsZW1lbnQgYXMgYSByZWd1bGFyIG9uZSBpbiBicm93c2VycyB0aGF0XG5cdFx0Ly8gZG9uJ3Qgc3VwcG9ydCBpdC5cblx0XHRpZiAoIG5vZGVOYW1lKCBlbGVtLCBcInRlbXBsYXRlXCIgKSApIHtcblx0XHRcdGVsZW0gPSBlbGVtLmNvbnRlbnQgfHwgZWxlbTtcblx0XHR9XG5cblx0XHRyZXR1cm4galF1ZXJ5Lm1lcmdlKCBbXSwgZWxlbS5jaGlsZE5vZGVzICk7XG5cdH1cbn0sIGZ1bmN0aW9uKCBuYW1lLCBmbiApIHtcblx0alF1ZXJ5LmZuWyBuYW1lIF0gPSBmdW5jdGlvbiggdW50aWwsIHNlbGVjdG9yICkge1xuXHRcdHZhciBtYXRjaGVkID0galF1ZXJ5Lm1hcCggdGhpcywgZm4sIHVudGlsICk7XG5cblx0XHRpZiAoIG5hbWUuc2xpY2UoIC01ICkgIT09IFwiVW50aWxcIiApIHtcblx0XHRcdHNlbGVjdG9yID0gdW50aWw7XG5cdFx0fVxuXG5cdFx0aWYgKCBzZWxlY3RvciAmJiB0eXBlb2Ygc2VsZWN0b3IgPT09IFwic3RyaW5nXCIgKSB7XG5cdFx0XHRtYXRjaGVkID0galF1ZXJ5LmZpbHRlciggc2VsZWN0b3IsIG1hdGNoZWQgKTtcblx0XHR9XG5cblx0XHRpZiAoIHRoaXMubGVuZ3RoID4gMSApIHtcblxuXHRcdFx0Ly8gUmVtb3ZlIGR1cGxpY2F0ZXNcblx0XHRcdGlmICggIWd1YXJhbnRlZWRVbmlxdWVbIG5hbWUgXSApIHtcblx0XHRcdFx0alF1ZXJ5LnVuaXF1ZVNvcnQoIG1hdGNoZWQgKTtcblx0XHRcdH1cblxuXHRcdFx0Ly8gUmV2ZXJzZSBvcmRlciBmb3IgcGFyZW50cyogYW5kIHByZXYtZGVyaXZhdGl2ZXNcblx0XHRcdGlmICggcnBhcmVudHNwcmV2LnRlc3QoIG5hbWUgKSApIHtcblx0XHRcdFx0bWF0Y2hlZC5yZXZlcnNlKCk7XG5cdFx0XHR9XG5cdFx0fVxuXG5cdFx0cmV0dXJuIHRoaXMucHVzaFN0YWNrKCBtYXRjaGVkICk7XG5cdH07XG59ICk7XG52YXIgcm5vdGh0bWx3aGl0ZSA9ICggL1teXFx4MjBcXHRcXHJcXG5cXGZdKy9nICk7XG5cblxuXG4vLyBDb252ZXJ0IFN0cmluZy1mb3JtYXR0ZWQgb3B0aW9ucyBpbnRvIE9iamVjdC1mb3JtYXR0ZWQgb25lc1xuZnVuY3Rpb24gY3JlYXRlT3B0aW9ucyggb3B0aW9ucyApIHtcblx0dmFyIG9iamVjdCA9IHt9O1xuXHRqUXVlcnkuZWFjaCggb3B0aW9ucy5tYXRjaCggcm5vdGh0bWx3aGl0ZSApIHx8IFtdLCBmdW5jdGlvbiggXywgZmxhZyApIHtcblx0XHRvYmplY3RbIGZsYWcgXSA9IHRydWU7XG5cdH0gKTtcblx0cmV0dXJuIG9iamVjdDtcbn1cblxuLypcbiAqIENyZWF0ZSBhIGNhbGxiYWNrIGxpc3QgdXNpbmcgdGhlIGZvbGxvd2luZyBwYXJhbWV0ZXJzOlxuICpcbiAqXHRvcHRpb25zOiBhbiBvcHRpb25hbCBsaXN0IG9mIHNwYWNlLXNlcGFyYXRlZCBvcHRpb25zIHRoYXQgd2lsbCBjaGFuZ2UgaG93XG4gKlx0XHRcdHRoZSBjYWxsYmFjayBsaXN0IGJlaGF2ZXMgb3IgYSBtb3JlIHRyYWRpdGlvbmFsIG9wdGlvbiBvYmplY3RcbiAqXG4gKiBCeSBkZWZhdWx0IGEgY2FsbGJhY2sgbGlzdCB3aWxsIGFjdCBsaWtlIGFuIGV2ZW50IGNhbGxiYWNrIGxpc3QgYW5kIGNhbiBiZVxuICogXCJmaXJlZFwiIG11bHRpcGxlIHRpbWVzLlxuICpcbiAqIFBvc3NpYmxlIG9wdGlvbnM6XG4gKlxuICpcdG9uY2U6XHRcdFx0d2lsbCBlbnN1cmUgdGhlIGNhbGxiYWNrIGxpc3QgY2FuIG9ubHkgYmUgZmlyZWQgb25jZSAobGlrZSBhIERlZmVycmVkKVxuICpcbiAqXHRtZW1vcnk6XHRcdFx0d2lsbCBrZWVwIHRyYWNrIG9mIHByZXZpb3VzIHZhbHVlcyBhbmQgd2lsbCBjYWxsIGFueSBjYWxsYmFjayBhZGRlZFxuICpcdFx0XHRcdFx0YWZ0ZXIgdGhlIGxpc3QgaGFzIGJlZW4gZmlyZWQgcmlnaHQgYXdheSB3aXRoIHRoZSBsYXRlc3QgXCJtZW1vcml6ZWRcIlxuICpcdFx0XHRcdFx0dmFsdWVzIChsaWtlIGEgRGVmZXJyZWQpXG4gKlxuICpcdHVuaXF1ZTpcdFx0XHR3aWxsIGVuc3VyZSBhIGNhbGxiYWNrIGNhbiBvbmx5IGJlIGFkZGVkIG9uY2UgKG5vIGR1cGxpY2F0ZSBpbiB0aGUgbGlzdClcbiAqXG4gKlx0c3RvcE9uRmFsc2U6XHRpbnRlcnJ1cHQgY2FsbGluZ3Mgd2hlbiBhIGNhbGxiYWNrIHJldHVybnMgZmFsc2VcbiAqXG4gKi9cbmpRdWVyeS5DYWxsYmFja3MgPSBmdW5jdGlvbiggb3B0aW9ucyApIHtcblxuXHQvLyBDb252ZXJ0IG9wdGlvbnMgZnJvbSBTdHJpbmctZm9ybWF0dGVkIHRvIE9iamVjdC1mb3JtYXR0ZWQgaWYgbmVlZGVkXG5cdC8vICh3ZSBjaGVjayBpbiBjYWNoZSBmaXJzdClcblx0b3B0aW9ucyA9IHR5cGVvZiBvcHRpb25zID09PSBcInN0cmluZ1wiID9cblx0XHRjcmVhdGVPcHRpb25zKCBvcHRpb25zICkgOlxuXHRcdGpRdWVyeS5leHRlbmQoIHt9LCBvcHRpb25zICk7XG5cblx0dmFyIC8vIEZsYWcgdG8ga25vdyBpZiBsaXN0IGlzIGN1cnJlbnRseSBmaXJpbmdcblx0XHRmaXJpbmcsXG5cblx0XHQvLyBMYXN0IGZpcmUgdmFsdWUgZm9yIG5vbi1mb3JnZXR0YWJsZSBsaXN0c1xuXHRcdG1lbW9yeSxcblxuXHRcdC8vIEZsYWcgdG8ga25vdyBpZiBsaXN0IHdhcyBhbHJlYWR5IGZpcmVkXG5cdFx0ZmlyZWQsXG5cblx0XHQvLyBGbGFnIHRvIHByZXZlbnQgZmlyaW5nXG5cdFx0bG9ja2VkLFxuXG5cdFx0Ly8gQWN0dWFsIGNhbGxiYWNrIGxpc3Rcblx0XHRsaXN0ID0gW10sXG5cblx0XHQvLyBRdWV1ZSBvZiBleGVjdXRpb24gZGF0YSBmb3IgcmVwZWF0YWJsZSBsaXN0c1xuXHRcdHF1ZXVlID0gW10sXG5cblx0XHQvLyBJbmRleCBvZiBjdXJyZW50bHkgZmlyaW5nIGNhbGxiYWNrIChtb2RpZmllZCBieSBhZGQvcmVtb3ZlIGFzIG5lZWRlZClcblx0XHRmaXJpbmdJbmRleCA9IC0xLFxuXG5cdFx0Ly8gRmlyZSBjYWxsYmFja3Ncblx0XHRmaXJlID0gZnVuY3Rpb24oKSB7XG5cblx0XHRcdC8vIEVuZm9yY2Ugc2luZ2xlLWZpcmluZ1xuXHRcdFx0bG9ja2VkID0gbG9ja2VkIHx8IG9wdGlvbnMub25jZTtcblxuXHRcdFx0Ly8gRXhlY3V0ZSBjYWxsYmFja3MgZm9yIGFsbCBwZW5kaW5nIGV4ZWN1dGlvbnMsXG5cdFx0XHQvLyByZXNwZWN0aW5nIGZpcmluZ0luZGV4IG92ZXJyaWRlcyBhbmQgcnVudGltZSBjaGFuZ2VzXG5cdFx0XHRmaXJlZCA9IGZpcmluZyA9IHRydWU7XG5cdFx0XHRmb3IgKCA7IHF1ZXVlLmxlbmd0aDsgZmlyaW5nSW5kZXggPSAtMSApIHtcblx0XHRcdFx0bWVtb3J5ID0gcXVldWUuc2hpZnQoKTtcblx0XHRcdFx0d2hpbGUgKCArK2ZpcmluZ0luZGV4IDwgbGlzdC5sZW5ndGggKSB7XG5cblx0XHRcdFx0XHQvLyBSdW4gY2FsbGJhY2sgYW5kIGNoZWNrIGZvciBlYXJseSB0ZXJtaW5hdGlvblxuXHRcdFx0XHRcdGlmICggbGlzdFsgZmlyaW5nSW5kZXggXS5hcHBseSggbWVtb3J5WyAwIF0sIG1lbW9yeVsgMSBdICkgPT09IGZhbHNlICYmXG5cdFx0XHRcdFx0XHRvcHRpb25zLnN0b3BPbkZhbHNlICkge1xuXG5cdFx0XHRcdFx0XHQvLyBKdW1wIHRvIGVuZCBhbmQgZm9yZ2V0IHRoZSBkYXRhIHNvIC5hZGQgZG9lc24ndCByZS1maXJlXG5cdFx0XHRcdFx0XHRmaXJpbmdJbmRleCA9IGxpc3QubGVuZ3RoO1xuXHRcdFx0XHRcdFx0bWVtb3J5ID0gZmFsc2U7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHR9XG5cblx0XHRcdC8vIEZvcmdldCB0aGUgZGF0YSBpZiB3ZSdyZSBkb25lIHdpdGggaXRcblx0XHRcdGlmICggIW9wdGlvbnMubWVtb3J5ICkge1xuXHRcdFx0XHRtZW1vcnkgPSBmYWxzZTtcblx0XHRcdH1cblxuXHRcdFx0ZmlyaW5nID0gZmFsc2U7XG5cblx0XHRcdC8vIENsZWFuIHVwIGlmIHdlJ3JlIGRvbmUgZmlyaW5nIGZvciBnb29kXG5cdFx0XHRpZiAoIGxvY2tlZCApIHtcblxuXHRcdFx0XHQvLyBLZWVwIGFuIGVtcHR5IGxpc3QgaWYgd2UgaGF2ZSBkYXRhIGZvciBmdXR1cmUgYWRkIGNhbGxzXG5cdFx0XHRcdGlmICggbWVtb3J5ICkge1xuXHRcdFx0XHRcdGxpc3QgPSBbXTtcblxuXHRcdFx0XHQvLyBPdGhlcndpc2UsIHRoaXMgb2JqZWN0IGlzIHNwZW50XG5cdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0bGlzdCA9IFwiXCI7XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9LFxuXG5cdFx0Ly8gQWN0dWFsIENhbGxiYWNrcyBvYmplY3Rcblx0XHRzZWxmID0ge1xuXG5cdFx0XHQvLyBBZGQgYSBjYWxsYmFjayBvciBhIGNvbGxlY3Rpb24gb2YgY2FsbGJhY2tzIHRvIHRoZSBsaXN0XG5cdFx0XHRhZGQ6IGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRpZiAoIGxpc3QgKSB7XG5cblx0XHRcdFx0XHQvLyBJZiB3ZSBoYXZlIG1lbW9yeSBmcm9tIGEgcGFzdCBydW4sIHdlIHNob3VsZCBmaXJlIGFmdGVyIGFkZGluZ1xuXHRcdFx0XHRcdGlmICggbWVtb3J5ICYmICFmaXJpbmcgKSB7XG5cdFx0XHRcdFx0XHRmaXJpbmdJbmRleCA9IGxpc3QubGVuZ3RoIC0gMTtcblx0XHRcdFx0XHRcdHF1ZXVlLnB1c2goIG1lbW9yeSApO1xuXHRcdFx0XHRcdH1cblxuXHRcdFx0XHRcdCggZnVuY3Rpb24gYWRkKCBhcmdzICkge1xuXHRcdFx0XHRcdFx0alF1ZXJ5LmVhY2goIGFyZ3MsIGZ1bmN0aW9uKCBfLCBhcmcgKSB7XG5cdFx0XHRcdFx0XHRcdGlmICggaXNGdW5jdGlvbiggYXJnICkgKSB7XG5cdFx0XHRcdFx0XHRcdFx0aWYgKCAhb3B0aW9ucy51bmlxdWUgfHwgIXNlbGYuaGFzKCBhcmcgKSApIHtcblx0XHRcdFx0XHRcdFx0XHRcdGxpc3QucHVzaCggYXJnICk7XG5cdFx0XHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0XHR9IGVsc2UgaWYgKCBhcmcgJiYgYXJnLmxlbmd0aCAmJiB0b1R5cGUoIGFyZyApICE9PSBcInN0cmluZ1wiICkge1xuXG5cdFx0XHRcdFx0XHRcdFx0Ly8gSW5zcGVjdCByZWN1cnNpdmVseVxuXHRcdFx0XHRcdFx0XHRcdGFkZCggYXJnICk7XG5cdFx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdH0gKTtcblx0XHRcdFx0XHR9ICkoIGFyZ3VtZW50cyApO1xuXG5cdFx0XHRcdFx0aWYgKCBtZW1vcnkgJiYgIWZpcmluZyApIHtcblx0XHRcdFx0XHRcdGZpcmUoKTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblx0XHRcdFx0cmV0dXJuIHRoaXM7XG5cdFx0XHR9LFxuXG5cdFx0XHQvLyBSZW1vdmUgYSBjYWxsYmFjayBmcm9tIHRoZSBsaXN0XG5cdFx0XHRyZW1vdmU6IGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRqUXVlcnkuZWFjaCggYXJndW1lbnRzLCBmdW5jdGlvbiggXywgYXJnICkge1xuXHRcdFx0XHRcdHZhciBpbmRleDtcblx0XHRcdFx0XHR3aGlsZSAoICggaW5kZXggPSBqUXVlcnkuaW5BcnJheSggYXJnLCBsaXN0LCBpbmRleCApICkgPiAtMSApIHtcblx0XHRcdFx0XHRcdGxpc3Quc3BsaWNlKCBpbmRleCwgMSApO1xuXG5cdFx0XHRcdFx0XHQvLyBIYW5kbGUgZmlyaW5nIGluZGV4ZXNcblx0XHRcdFx0XHRcdGlmICggaW5kZXggPD0gZmlyaW5nSW5kZXggKSB7XG5cdFx0XHRcdFx0XHRcdGZpcmluZ0luZGV4LS07XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9ICk7XG5cdFx0XHRcdHJldHVybiB0aGlzO1xuXHRcdFx0fSxcblxuXHRcdFx0Ly8gQ2hlY2sgaWYgYSBnaXZlbiBjYWxsYmFjayBpcyBpbiB0aGUgbGlzdC5cblx0XHRcdC8vIElmIG5vIGFyZ3VtZW50IGlzIGdpdmVuLCByZXR1cm4gd2hldGhlciBvciBub3QgbGlzdCBoYXMgY2FsbGJhY2tzIGF0dGFjaGVkLlxuXHRcdFx0aGFzOiBmdW5jdGlvbiggZm4gKSB7XG5cdFx0XHRcdHJldHVybiBmbiA/XG5cdFx0XHRcdFx0alF1ZXJ5LmluQXJyYXkoIGZuLCBsaXN0ICkgPiAtMSA6XG5cdFx0XHRcdFx0bGlzdC5sZW5ndGggPiAwO1xuXHRcdFx0fSxcblxuXHRcdFx0Ly8gUmVtb3ZlIGFsbCBjYWxsYmFja3MgZnJvbSB0aGUgbGlzdFxuXHRcdFx0ZW1wdHk6IGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRpZiAoIGxpc3QgKSB7XG5cdFx0XHRcdFx0bGlzdCA9IFtdO1xuXHRcdFx0XHR9XG5cdFx0XHRcdHJldHVybiB0aGlzO1xuXHRcdFx0fSxcblxuXHRcdFx0Ly8gRGlzYWJsZSAuZmlyZSBhbmQgLmFkZFxuXHRcdFx0Ly8gQWJvcnQgYW55IGN1cnJlbnQvcGVuZGluZyBleGVjdXRpb25zXG5cdFx0XHQvLyBDbGVhciBhbGwgY2FsbGJhY2tzIGFuZCB2YWx1ZXNcblx0XHRcdGRpc2FibGU6IGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRsb2NrZWQgPSBxdWV1ZSA9IFtdO1xuXHRcdFx0XHRsaXN0ID0gbWVtb3J5ID0gXCJcIjtcblx0XHRcdFx0cmV0dXJuIHRoaXM7XG5cdFx0XHR9LFxuXHRcdFx0ZGlzYWJsZWQ6IGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRyZXR1cm4gIWxpc3Q7XG5cdFx0XHR9LFxuXG5cdFx0XHQvLyBEaXNhYmxlIC5maXJlXG5cdFx0XHQvLyBBbHNvIGRpc2FibGUgLmFkZCB1bmxlc3Mgd2UgaGF2ZSBtZW1vcnkgKHNpbmNlIGl0IHdvdWxkIGhhdmUgbm8gZWZmZWN0KVxuXHRcdFx0Ly8gQWJvcnQgYW55IHBlbmRpbmcgZXhlY3V0aW9uc1xuXHRcdFx0bG9jazogZnVuY3Rpb24oKSB7XG5cdFx0XHRcdGxvY2tlZCA9IHF1ZXVlID0gW107XG5cdFx0XHRcdGlmICggIW1lbW9yeSAmJiAhZmlyaW5nICkge1xuXHRcdFx0XHRcdGxpc3QgPSBtZW1vcnkgPSBcIlwiO1xuXHRcdFx0XHR9XG5cdFx0XHRcdHJldHVybiB0aGlzO1xuXHRcdFx0fSxcblx0XHRcdGxvY2tlZDogZnVuY3Rpb24oKSB7XG5cdFx0XHRcdHJldHVybiAhIWxvY2tlZDtcblx0XHRcdH0sXG5cblx0XHRcdC8vIENhbGwgYWxsIGNhbGxiYWNrcyB3aXRoIHRoZSBnaXZlbiBjb250ZXh0IGFuZCBhcmd1bWVudHNcblx0XHRcdGZpcmVXaXRoOiBmdW5jdGlvbiggY29udGV4dCwgYXJncyApIHtcblx0XHRcdFx0aWYgKCAhbG9ja2VkICkge1xuXHRcdFx0XHRcdGFyZ3MgPSBhcmdzIHx8IFtdO1xuXHRcdFx0XHRcdGFyZ3MgPSBbIGNvbnRleHQsIGFyZ3Muc2xpY2UgPyBhcmdzLnNsaWNlKCkgOiBhcmdzIF07XG5cdFx0XHRcdFx0cXVldWUucHVzaCggYXJncyApO1xuXHRcdFx0XHRcdGlmICggIWZpcmluZyApIHtcblx0XHRcdFx0XHRcdGZpcmUoKTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblx0XHRcdFx0cmV0dXJuIHRoaXM7XG5cdFx0XHR9LFxuXG5cdFx0XHQvLyBDYWxsIGFsbCB0aGUgY2FsbGJhY2tzIHdpdGggdGhlIGdpdmVuIGFyZ3VtZW50c1xuXHRcdFx0ZmlyZTogZnVuY3Rpb24oKSB7XG5cdFx0XHRcdHNlbGYuZmlyZVdpdGgoIHRoaXMsIGFyZ3VtZW50cyApO1xuXHRcdFx0XHRyZXR1cm4gdGhpcztcblx0XHRcdH0sXG5cblx0XHRcdC8vIFRvIGtub3cgaWYgdGhlIGNhbGxiYWNrcyBoYXZlIGFscmVhZHkgYmVlbiBjYWxsZWQgYXQgbGVhc3Qgb25jZVxuXHRcdFx0ZmlyZWQ6IGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRyZXR1cm4gISFmaXJlZDtcblx0XHRcdH1cblx0XHR9O1xuXG5cdHJldHVybiBzZWxmO1xufTtcblxuXG5mdW5jdGlvbiBJZGVudGl0eSggdiApIHtcblx0cmV0dXJuIHY7XG59XG5mdW5jdGlvbiBUaHJvd2VyKCBleCApIHtcblx0dGhyb3cgZXg7XG59XG5cbmZ1bmN0aW9uIGFkb3B0VmFsdWUoIHZhbHVlLCByZXNvbHZlLCByZWplY3QsIG5vVmFsdWUgKSB7XG5cdHZhciBtZXRob2Q7XG5cblx0dHJ5IHtcblxuXHRcdC8vIENoZWNrIGZvciBwcm9taXNlIGFzcGVjdCBmaXJzdCB0byBwcml2aWxlZ2Ugc3luY2hyb25vdXMgYmVoYXZpb3Jcblx0XHRpZiAoIHZhbHVlICYmIGlzRnVuY3Rpb24oICggbWV0aG9kID0gdmFsdWUucHJvbWlzZSApICkgKSB7XG5cdFx0XHRtZXRob2QuY2FsbCggdmFsdWUgKS5kb25lKCByZXNvbHZlICkuZmFpbCggcmVqZWN0ICk7XG5cblx0XHQvLyBPdGhlciB0aGVuYWJsZXNcblx0XHR9IGVsc2UgaWYgKCB2YWx1ZSAmJiBpc0Z1bmN0aW9uKCAoIG1ldGhvZCA9IHZhbHVlLnRoZW4gKSApICkge1xuXHRcdFx0bWV0aG9kLmNhbGwoIHZhbHVlLCByZXNvbHZlLCByZWplY3QgKTtcblxuXHRcdC8vIE90aGVyIG5vbi10aGVuYWJsZXNcblx0XHR9IGVsc2Uge1xuXG5cdFx0XHQvLyBDb250cm9sIGByZXNvbHZlYCBhcmd1bWVudHMgYnkgbGV0dGluZyBBcnJheSNzbGljZSBjYXN0IGJvb2xlYW4gYG5vVmFsdWVgIHRvIGludGVnZXI6XG5cdFx0XHQvLyAqIGZhbHNlOiBbIHZhbHVlIF0uc2xpY2UoIDAgKSA9PiByZXNvbHZlKCB2YWx1ZSApXG5cdFx0XHQvLyAqIHRydWU6IFsgdmFsdWUgXS5zbGljZSggMSApID0+IHJlc29sdmUoKVxuXHRcdFx0cmVzb2x2ZS5hcHBseSggdW5kZWZpbmVkLCBbIHZhbHVlIF0uc2xpY2UoIG5vVmFsdWUgKSApO1xuXHRcdH1cblxuXHQvLyBGb3IgUHJvbWlzZXMvQSssIGNvbnZlcnQgZXhjZXB0aW9ucyBpbnRvIHJlamVjdGlvbnNcblx0Ly8gU2luY2UgalF1ZXJ5LndoZW4gZG9lc24ndCB1bndyYXAgdGhlbmFibGVzLCB3ZSBjYW4gc2tpcCB0aGUgZXh0cmEgY2hlY2tzIGFwcGVhcmluZyBpblxuXHQvLyBEZWZlcnJlZCN0aGVuIHRvIGNvbmRpdGlvbmFsbHkgc3VwcHJlc3MgcmVqZWN0aW9uLlxuXHR9IGNhdGNoICggdmFsdWUgKSB7XG5cblx0XHQvLyBTdXBwb3J0OiBBbmRyb2lkIDQuMCBvbmx5XG5cdFx0Ly8gU3RyaWN0IG1vZGUgZnVuY3Rpb25zIGludm9rZWQgd2l0aG91dCAuY2FsbC8uYXBwbHkgZ2V0IGdsb2JhbC1vYmplY3QgY29udGV4dFxuXHRcdHJlamVjdC5hcHBseSggdW5kZWZpbmVkLCBbIHZhbHVlIF0gKTtcblx0fVxufVxuXG5qUXVlcnkuZXh0ZW5kKCB7XG5cblx0RGVmZXJyZWQ6IGZ1bmN0aW9uKCBmdW5jICkge1xuXHRcdHZhciB0dXBsZXMgPSBbXG5cblx0XHRcdFx0Ly8gYWN0aW9uLCBhZGQgbGlzdGVuZXIsIGNhbGxiYWNrcyxcblx0XHRcdFx0Ly8gLi4uIC50aGVuIGhhbmRsZXJzLCBhcmd1bWVudCBpbmRleCwgW2ZpbmFsIHN0YXRlXVxuXHRcdFx0XHRbIFwibm90aWZ5XCIsIFwicHJvZ3Jlc3NcIiwgalF1ZXJ5LkNhbGxiYWNrcyggXCJtZW1vcnlcIiApLFxuXHRcdFx0XHRcdGpRdWVyeS5DYWxsYmFja3MoIFwibWVtb3J5XCIgKSwgMiBdLFxuXHRcdFx0XHRbIFwicmVzb2x2ZVwiLCBcImRvbmVcIiwgalF1ZXJ5LkNhbGxiYWNrcyggXCJvbmNlIG1lbW9yeVwiICksXG5cdFx0XHRcdFx0alF1ZXJ5LkNhbGxiYWNrcyggXCJvbmNlIG1lbW9yeVwiICksIDAsIFwicmVzb2x2ZWRcIiBdLFxuXHRcdFx0XHRbIFwicmVqZWN0XCIsIFwiZmFpbFwiLCBqUXVlcnkuQ2FsbGJhY2tzKCBcIm9uY2UgbWVtb3J5XCIgKSxcblx0XHRcdFx0XHRqUXVlcnkuQ2FsbGJhY2tzKCBcIm9uY2UgbWVtb3J5XCIgKSwgMSwgXCJyZWplY3RlZFwiIF1cblx0XHRcdF0sXG5cdFx0XHRzdGF0ZSA9IFwicGVuZGluZ1wiLFxuXHRcdFx0cHJvbWlzZSA9IHtcblx0XHRcdFx0c3RhdGU6IGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRcdHJldHVybiBzdGF0ZTtcblx0XHRcdFx0fSxcblx0XHRcdFx0YWx3YXlzOiBmdW5jdGlvbigpIHtcblx0XHRcdFx0XHRkZWZlcnJlZC5kb25lKCBhcmd1bWVudHMgKS5mYWlsKCBhcmd1bWVudHMgKTtcblx0XHRcdFx0XHRyZXR1cm4gdGhpcztcblx0XHRcdFx0fSxcblx0XHRcdFx0XCJjYXRjaFwiOiBmdW5jdGlvbiggZm4gKSB7XG5cdFx0XHRcdFx0cmV0dXJuIHByb21pc2UudGhlbiggbnVsbCwgZm4gKTtcblx0XHRcdFx0fSxcblxuXHRcdFx0XHQvLyBLZWVwIHBpcGUgZm9yIGJhY2stY29tcGF0XG5cdFx0XHRcdHBpcGU6IGZ1bmN0aW9uKCAvKiBmbkRvbmUsIGZuRmFpbCwgZm5Qcm9ncmVzcyAqLyApIHtcblx0XHRcdFx0XHR2YXIgZm5zID0gYXJndW1lbnRzO1xuXG5cdFx0XHRcdFx0cmV0dXJuIGpRdWVyeS5EZWZlcnJlZCggZnVuY3Rpb24oIG5ld0RlZmVyICkge1xuXHRcdFx0XHRcdFx0alF1ZXJ5LmVhY2goIHR1cGxlcywgZnVuY3Rpb24oIF9pLCB0dXBsZSApIHtcblxuXHRcdFx0XHRcdFx0XHQvLyBNYXAgdHVwbGVzIChwcm9ncmVzcywgZG9uZSwgZmFpbCkgdG8gYXJndW1lbnRzIChkb25lLCBmYWlsLCBwcm9ncmVzcylcblx0XHRcdFx0XHRcdFx0dmFyIGZuID0gaXNGdW5jdGlvbiggZm5zWyB0dXBsZVsgNCBdIF0gKSAmJiBmbnNbIHR1cGxlWyA0IF0gXTtcblxuXHRcdFx0XHRcdFx0XHQvLyBkZWZlcnJlZC5wcm9ncmVzcyhmdW5jdGlvbigpIHsgYmluZCB0byBuZXdEZWZlciBvciBuZXdEZWZlci5ub3RpZnkgfSlcblx0XHRcdFx0XHRcdFx0Ly8gZGVmZXJyZWQuZG9uZShmdW5jdGlvbigpIHsgYmluZCB0byBuZXdEZWZlciBvciBuZXdEZWZlci5yZXNvbHZlIH0pXG5cdFx0XHRcdFx0XHRcdC8vIGRlZmVycmVkLmZhaWwoZnVuY3Rpb24oKSB7IGJpbmQgdG8gbmV3RGVmZXIgb3IgbmV3RGVmZXIucmVqZWN0IH0pXG5cdFx0XHRcdFx0XHRcdGRlZmVycmVkWyB0dXBsZVsgMSBdIF0oIGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRcdFx0XHRcdHZhciByZXR1cm5lZCA9IGZuICYmIGZuLmFwcGx5KCB0aGlzLCBhcmd1bWVudHMgKTtcblx0XHRcdFx0XHRcdFx0XHRpZiAoIHJldHVybmVkICYmIGlzRnVuY3Rpb24oIHJldHVybmVkLnByb21pc2UgKSApIHtcblx0XHRcdFx0XHRcdFx0XHRcdHJldHVybmVkLnByb21pc2UoKVxuXHRcdFx0XHRcdFx0XHRcdFx0XHQucHJvZ3Jlc3MoIG5ld0RlZmVyLm5vdGlmeSApXG5cdFx0XHRcdFx0XHRcdFx0XHRcdC5kb25lKCBuZXdEZWZlci5yZXNvbHZlIClcblx0XHRcdFx0XHRcdFx0XHRcdFx0LmZhaWwoIG5ld0RlZmVyLnJlamVjdCApO1xuXHRcdFx0XHRcdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0XHRcdFx0XHRuZXdEZWZlclsgdHVwbGVbIDAgXSArIFwiV2l0aFwiIF0oXG5cdFx0XHRcdFx0XHRcdFx0XHRcdHRoaXMsXG5cdFx0XHRcdFx0XHRcdFx0XHRcdGZuID8gWyByZXR1cm5lZCBdIDogYXJndW1lbnRzXG5cdFx0XHRcdFx0XHRcdFx0XHQpO1xuXHRcdFx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdFx0fSApO1xuXHRcdFx0XHRcdFx0fSApO1xuXHRcdFx0XHRcdFx0Zm5zID0gbnVsbDtcblx0XHRcdFx0XHR9ICkucHJvbWlzZSgpO1xuXHRcdFx0XHR9LFxuXHRcdFx0XHR0aGVuOiBmdW5jdGlvbiggb25GdWxmaWxsZWQsIG9uUmVqZWN0ZWQsIG9uUHJvZ3Jlc3MgKSB7XG5cdFx0XHRcdFx0dmFyIG1heERlcHRoID0gMDtcblx0XHRcdFx0XHRmdW5jdGlvbiByZXNvbHZlKCBkZXB0aCwgZGVmZXJyZWQsIGhhbmRsZXIsIHNwZWNpYWwgKSB7XG5cdFx0XHRcdFx0XHRyZXR1cm4gZnVuY3Rpb24oKSB7XG5cdFx0XHRcdFx0XHRcdHZhciB0aGF0ID0gdGhpcyxcblx0XHRcdFx0XHRcdFx0XHRhcmdzID0gYXJndW1lbnRzLFxuXHRcdFx0XHRcdFx0XHRcdG1pZ2h0VGhyb3cgPSBmdW5jdGlvbigpIHtcblx0XHRcdFx0XHRcdFx0XHRcdHZhciByZXR1cm5lZCwgdGhlbjtcblxuXHRcdFx0XHRcdFx0XHRcdFx0Ly8gU3VwcG9ydDogUHJvbWlzZXMvQSsgc2VjdGlvbiAyLjMuMy4zLjNcblx0XHRcdFx0XHRcdFx0XHRcdC8vIGh0dHBzOi8vcHJvbWlzZXNhcGx1cy5jb20vI3BvaW50LTU5XG5cdFx0XHRcdFx0XHRcdFx0XHQvLyBJZ25vcmUgZG91YmxlLXJlc29sdXRpb24gYXR0ZW1wdHNcblx0XHRcdFx0XHRcdFx0XHRcdGlmICggZGVwdGggPCBtYXhEZXB0aCApIHtcblx0XHRcdFx0XHRcdFx0XHRcdFx0cmV0dXJuO1xuXHRcdFx0XHRcdFx0XHRcdFx0fVxuXG5cdFx0XHRcdFx0XHRcdFx0XHRyZXR1cm5lZCA9IGhhbmRsZXIuYXBwbHkoIHRoYXQsIGFyZ3MgKTtcblxuXHRcdFx0XHRcdFx0XHRcdFx0Ly8gU3VwcG9ydDogUHJvbWlzZXMvQSsgc2VjdGlvbiAyLjMuMVxuXHRcdFx0XHRcdFx0XHRcdFx0Ly8gaHR0cHM6Ly9wcm9taXNlc2FwbHVzLmNvbS8jcG9pbnQtNDhcblx0XHRcdFx0XHRcdFx0XHRcdGlmICggcmV0dXJuZWQgPT09IGRlZmVycmVkLnByb21pc2UoKSApIHtcblx0XHRcdFx0XHRcdFx0XHRcdFx0dGhyb3cgbmV3IFR5cGVFcnJvciggXCJUaGVuYWJsZSBzZWxmLXJlc29sdXRpb25cIiApO1xuXHRcdFx0XHRcdFx0XHRcdFx0fVxuXG5cdFx0XHRcdFx0XHRcdFx0XHQvLyBTdXBwb3J0OiBQcm9taXNlcy9BKyBzZWN0aW9ucyAyLjMuMy4xLCAzLjVcblx0XHRcdFx0XHRcdFx0XHRcdC8vIGh0dHBzOi8vcHJvbWlzZXNhcGx1cy5jb20vI3BvaW50LTU0XG5cdFx0XHRcdFx0XHRcdFx0XHQvLyBodHRwczovL3Byb21pc2VzYXBsdXMuY29tLyNwb2ludC03NVxuXHRcdFx0XHRcdFx0XHRcdFx0Ly8gUmV0cmlldmUgYHRoZW5gIG9ubHkgb25jZVxuXHRcdFx0XHRcdFx0XHRcdFx0dGhlbiA9IHJldHVybmVkICYmXG5cblx0XHRcdFx0XHRcdFx0XHRcdFx0Ly8gU3VwcG9ydDogUHJvbWlzZXMvQSsgc2VjdGlvbiAyLjMuNFxuXHRcdFx0XHRcdFx0XHRcdFx0XHQvLyBodHRwczovL3Byb21pc2VzYXBsdXMuY29tLyNwb2ludC02NFxuXHRcdFx0XHRcdFx0XHRcdFx0XHQvLyBPbmx5IGNoZWNrIG9iamVjdHMgYW5kIGZ1bmN0aW9ucyBmb3IgdGhlbmFiaWxpdHlcblx0XHRcdFx0XHRcdFx0XHRcdFx0KCB0eXBlb2YgcmV0dXJuZWQgPT09IFwib2JqZWN0XCIgfHxcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHR0eXBlb2YgcmV0dXJuZWQgPT09IFwiZnVuY3Rpb25cIiApICYmXG5cdFx0XHRcdFx0XHRcdFx0XHRcdHJldHVybmVkLnRoZW47XG5cblx0XHRcdFx0XHRcdFx0XHRcdC8vIEhhbmRsZSBhIHJldHVybmVkIHRoZW5hYmxlXG5cdFx0XHRcdFx0XHRcdFx0XHRpZiAoIGlzRnVuY3Rpb24oIHRoZW4gKSApIHtcblxuXHRcdFx0XHRcdFx0XHRcdFx0XHQvLyBTcGVjaWFsIHByb2Nlc3NvcnMgKG5vdGlmeSkganVzdCB3YWl0IGZvciByZXNvbHV0aW9uXG5cdFx0XHRcdFx0XHRcdFx0XHRcdGlmICggc3BlY2lhbCApIHtcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHR0aGVuLmNhbGwoXG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHRyZXR1cm5lZCxcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdHJlc29sdmUoIG1heERlcHRoLCBkZWZlcnJlZCwgSWRlbnRpdHksIHNwZWNpYWwgKSxcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdHJlc29sdmUoIG1heERlcHRoLCBkZWZlcnJlZCwgVGhyb3dlciwgc3BlY2lhbCApXG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0KTtcblxuXHRcdFx0XHRcdFx0XHRcdFx0XHQvLyBOb3JtYWwgcHJvY2Vzc29ycyAocmVzb2x2ZSkgYWxzbyBob29rIGludG8gcHJvZ3Jlc3Ncblx0XHRcdFx0XHRcdFx0XHRcdFx0fSBlbHNlIHtcblxuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdC8vIC4uLmFuZCBkaXNyZWdhcmQgb2xkZXIgcmVzb2x1dGlvbiB2YWx1ZXNcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHRtYXhEZXB0aCsrO1xuXG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0dGhlbi5jYWxsKFxuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0cmV0dXJuZWQsXG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHRyZXNvbHZlKCBtYXhEZXB0aCwgZGVmZXJyZWQsIElkZW50aXR5LCBzcGVjaWFsICksXG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHRyZXNvbHZlKCBtYXhEZXB0aCwgZGVmZXJyZWQsIFRocm93ZXIsIHNwZWNpYWwgKSxcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdHJlc29sdmUoIG1heERlcHRoLCBkZWZlcnJlZCwgSWRlbnRpdHksXG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdGRlZmVycmVkLm5vdGlmeVdpdGggKVxuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdCk7XG5cdFx0XHRcdFx0XHRcdFx0XHRcdH1cblxuXHRcdFx0XHRcdFx0XHRcdFx0Ly8gSGFuZGxlIGFsbCBvdGhlciByZXR1cm5lZCB2YWx1ZXNcblx0XHRcdFx0XHRcdFx0XHRcdH0gZWxzZSB7XG5cblx0XHRcdFx0XHRcdFx0XHRcdFx0Ly8gT25seSBzdWJzdGl0dXRlIGhhbmRsZXJzIHBhc3Mgb24gY29udGV4dFxuXHRcdFx0XHRcdFx0XHRcdFx0XHQvLyBhbmQgbXVsdGlwbGUgdmFsdWVzIChub24tc3BlYyBiZWhhdmlvcilcblx0XHRcdFx0XHRcdFx0XHRcdFx0aWYgKCBoYW5kbGVyICE9PSBJZGVudGl0eSApIHtcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHR0aGF0ID0gdW5kZWZpbmVkO1xuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdGFyZ3MgPSBbIHJldHVybmVkIF07XG5cdFx0XHRcdFx0XHRcdFx0XHRcdH1cblxuXHRcdFx0XHRcdFx0XHRcdFx0XHQvLyBQcm9jZXNzIHRoZSB2YWx1ZShzKVxuXHRcdFx0XHRcdFx0XHRcdFx0XHQvLyBEZWZhdWx0IHByb2Nlc3MgaXMgcmVzb2x2ZVxuXHRcdFx0XHRcdFx0XHRcdFx0XHQoIHNwZWNpYWwgfHwgZGVmZXJyZWQucmVzb2x2ZVdpdGggKSggdGhhdCwgYXJncyApO1xuXHRcdFx0XHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0XHRcdH0sXG5cblx0XHRcdFx0XHRcdFx0XHQvLyBPbmx5IG5vcm1hbCBwcm9jZXNzb3JzIChyZXNvbHZlKSBjYXRjaCBhbmQgcmVqZWN0IGV4Y2VwdGlvbnNcblx0XHRcdFx0XHRcdFx0XHRwcm9jZXNzID0gc3BlY2lhbCA/XG5cdFx0XHRcdFx0XHRcdFx0XHRtaWdodFRocm93IDpcblx0XHRcdFx0XHRcdFx0XHRcdGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRcdFx0XHRcdFx0XHR0cnkge1xuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdG1pZ2h0VGhyb3coKTtcblx0XHRcdFx0XHRcdFx0XHRcdFx0fSBjYXRjaCAoIGUgKSB7XG5cblx0XHRcdFx0XHRcdFx0XHRcdFx0XHRpZiAoIGpRdWVyeS5EZWZlcnJlZC5leGNlcHRpb25Ib29rICkge1xuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0alF1ZXJ5LkRlZmVycmVkLmV4Y2VwdGlvbkhvb2soIGUsXG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdHByb2Nlc3Muc3RhY2tUcmFjZSApO1xuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdH1cblxuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdC8vIFN1cHBvcnQ6IFByb21pc2VzL0ErIHNlY3Rpb24gMi4zLjMuMy40LjFcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHQvLyBodHRwczovL3Byb21pc2VzYXBsdXMuY29tLyNwb2ludC02MVxuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdC8vIElnbm9yZSBwb3N0LXJlc29sdXRpb24gZXhjZXB0aW9uc1xuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdGlmICggZGVwdGggKyAxID49IG1heERlcHRoICkge1xuXG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHQvLyBPbmx5IHN1YnN0aXR1dGUgaGFuZGxlcnMgcGFzcyBvbiBjb250ZXh0XG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHQvLyBhbmQgbXVsdGlwbGUgdmFsdWVzIChub24tc3BlYyBiZWhhdmlvcilcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdGlmICggaGFuZGxlciAhPT0gVGhyb3dlciApIHtcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0dGhhdCA9IHVuZGVmaW5lZDtcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0YXJncyA9IFsgZSBdO1xuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0fVxuXG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHRkZWZlcnJlZC5yZWplY3RXaXRoKCB0aGF0LCBhcmdzICk7XG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHRcdFx0XHR9O1xuXG5cdFx0XHRcdFx0XHRcdC8vIFN1cHBvcnQ6IFByb21pc2VzL0ErIHNlY3Rpb24gMi4zLjMuMy4xXG5cdFx0XHRcdFx0XHRcdC8vIGh0dHBzOi8vcHJvbWlzZXNhcGx1cy5jb20vI3BvaW50LTU3XG5cdFx0XHRcdFx0XHRcdC8vIFJlLXJlc29sdmUgcHJvbWlzZXMgaW1tZWRpYXRlbHkgdG8gZG9kZ2UgZmFsc2UgcmVqZWN0aW9uIGZyb21cblx0XHRcdFx0XHRcdFx0Ly8gc3Vic2VxdWVudCBlcnJvcnNcblx0XHRcdFx0XHRcdFx0aWYgKCBkZXB0aCApIHtcblx0XHRcdFx0XHRcdFx0XHRwcm9jZXNzKCk7XG5cdFx0XHRcdFx0XHRcdH0gZWxzZSB7XG5cblx0XHRcdFx0XHRcdFx0XHQvLyBDYWxsIGFuIG9wdGlvbmFsIGhvb2sgdG8gcmVjb3JkIHRoZSBzdGFjaywgaW4gY2FzZSBvZiBleGNlcHRpb25cblx0XHRcdFx0XHRcdFx0XHQvLyBzaW5jZSBpdCdzIG90aGVyd2lzZSBsb3N0IHdoZW4gZXhlY3V0aW9uIGdvZXMgYXN5bmNcblx0XHRcdFx0XHRcdFx0XHRpZiAoIGpRdWVyeS5EZWZlcnJlZC5nZXRTdGFja0hvb2sgKSB7XG5cdFx0XHRcdFx0XHRcdFx0XHRwcm9jZXNzLnN0YWNrVHJhY2UgPSBqUXVlcnkuRGVmZXJyZWQuZ2V0U3RhY2tIb29rKCk7XG5cdFx0XHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0XHRcdHdpbmRvdy5zZXRUaW1lb3V0KCBwcm9jZXNzICk7XG5cdFx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdH07XG5cdFx0XHRcdFx0fVxuXG5cdFx0XHRcdFx0cmV0dXJuIGpRdWVyeS5EZWZlcnJlZCggZnVuY3Rpb24oIG5ld0RlZmVyICkge1xuXG5cdFx0XHRcdFx0XHQvLyBwcm9ncmVzc19oYW5kbGVycy5hZGQoIC4uLiApXG5cdFx0XHRcdFx0XHR0dXBsZXNbIDAgXVsgMyBdLmFkZChcblx0XHRcdFx0XHRcdFx0cmVzb2x2ZShcblx0XHRcdFx0XHRcdFx0XHQwLFxuXHRcdFx0XHRcdFx0XHRcdG5ld0RlZmVyLFxuXHRcdFx0XHRcdFx0XHRcdGlzRnVuY3Rpb24oIG9uUHJvZ3Jlc3MgKSA/XG5cdFx0XHRcdFx0XHRcdFx0XHRvblByb2dyZXNzIDpcblx0XHRcdFx0XHRcdFx0XHRcdElkZW50aXR5LFxuXHRcdFx0XHRcdFx0XHRcdG5ld0RlZmVyLm5vdGlmeVdpdGhcblx0XHRcdFx0XHRcdFx0KVxuXHRcdFx0XHRcdFx0KTtcblxuXHRcdFx0XHRcdFx0Ly8gZnVsZmlsbGVkX2hhbmRsZXJzLmFkZCggLi4uIClcblx0XHRcdFx0XHRcdHR1cGxlc1sgMSBdWyAzIF0uYWRkKFxuXHRcdFx0XHRcdFx0XHRyZXNvbHZlKFxuXHRcdFx0XHRcdFx0XHRcdDAsXG5cdFx0XHRcdFx0XHRcdFx0bmV3RGVmZXIsXG5cdFx0XHRcdFx0XHRcdFx0aXNGdW5jdGlvbiggb25GdWxmaWxsZWQgKSA/XG5cdFx0XHRcdFx0XHRcdFx0XHRvbkZ1bGZpbGxlZCA6XG5cdFx0XHRcdFx0XHRcdFx0XHRJZGVudGl0eVxuXHRcdFx0XHRcdFx0XHQpXG5cdFx0XHRcdFx0XHQpO1xuXG5cdFx0XHRcdFx0XHQvLyByZWplY3RlZF9oYW5kbGVycy5hZGQoIC4uLiApXG5cdFx0XHRcdFx0XHR0dXBsZXNbIDIgXVsgMyBdLmFkZChcblx0XHRcdFx0XHRcdFx0cmVzb2x2ZShcblx0XHRcdFx0XHRcdFx0XHQwLFxuXHRcdFx0XHRcdFx0XHRcdG5ld0RlZmVyLFxuXHRcdFx0XHRcdFx0XHRcdGlzRnVuY3Rpb24oIG9uUmVqZWN0ZWQgKSA/XG5cdFx0XHRcdFx0XHRcdFx0XHRvblJlamVjdGVkIDpcblx0XHRcdFx0XHRcdFx0XHRcdFRocm93ZXJcblx0XHRcdFx0XHRcdFx0KVxuXHRcdFx0XHRcdFx0KTtcblx0XHRcdFx0XHR9ICkucHJvbWlzZSgpO1xuXHRcdFx0XHR9LFxuXG5cdFx0XHRcdC8vIEdldCBhIHByb21pc2UgZm9yIHRoaXMgZGVmZXJyZWRcblx0XHRcdFx0Ly8gSWYgb2JqIGlzIHByb3ZpZGVkLCB0aGUgcHJvbWlzZSBhc3BlY3QgaXMgYWRkZWQgdG8gdGhlIG9iamVjdFxuXHRcdFx0XHRwcm9taXNlOiBmdW5jdGlvbiggb2JqICkge1xuXHRcdFx0XHRcdHJldHVybiBvYmogIT0gbnVsbCA/IGpRdWVyeS5leHRlbmQoIG9iaiwgcHJvbWlzZSApIDogcHJvbWlzZTtcblx0XHRcdFx0fVxuXHRcdFx0fSxcblx0XHRcdGRlZmVycmVkID0ge307XG5cblx0XHQvLyBBZGQgbGlzdC1zcGVjaWZpYyBtZXRob2RzXG5cdFx0alF1ZXJ5LmVhY2goIHR1cGxlcywgZnVuY3Rpb24oIGksIHR1cGxlICkge1xuXHRcdFx0dmFyIGxpc3QgPSB0dXBsZVsgMiBdLFxuXHRcdFx0XHRzdGF0ZVN0cmluZyA9IHR1cGxlWyA1IF07XG5cblx0XHRcdC8vIHByb21pc2UucHJvZ3Jlc3MgPSBsaXN0LmFkZFxuXHRcdFx0Ly8gcHJvbWlzZS5kb25lID0gbGlzdC5hZGRcblx0XHRcdC8vIHByb21pc2UuZmFpbCA9IGxpc3QuYWRkXG5cdFx0XHRwcm9taXNlWyB0dXBsZVsgMSBdIF0gPSBsaXN0LmFkZDtcblxuXHRcdFx0Ly8gSGFuZGxlIHN0YXRlXG5cdFx0XHRpZiAoIHN0YXRlU3RyaW5nICkge1xuXHRcdFx0XHRsaXN0LmFkZChcblx0XHRcdFx0XHRmdW5jdGlvbigpIHtcblxuXHRcdFx0XHRcdFx0Ly8gc3RhdGUgPSBcInJlc29sdmVkXCIgKGkuZS4sIGZ1bGZpbGxlZClcblx0XHRcdFx0XHRcdC8vIHN0YXRlID0gXCJyZWplY3RlZFwiXG5cdFx0XHRcdFx0XHRzdGF0ZSA9IHN0YXRlU3RyaW5nO1xuXHRcdFx0XHRcdH0sXG5cblx0XHRcdFx0XHQvLyByZWplY3RlZF9jYWxsYmFja3MuZGlzYWJsZVxuXHRcdFx0XHRcdC8vIGZ1bGZpbGxlZF9jYWxsYmFja3MuZGlzYWJsZVxuXHRcdFx0XHRcdHR1cGxlc1sgMyAtIGkgXVsgMiBdLmRpc2FibGUsXG5cblx0XHRcdFx0XHQvLyByZWplY3RlZF9oYW5kbGVycy5kaXNhYmxlXG5cdFx0XHRcdFx0Ly8gZnVsZmlsbGVkX2hhbmRsZXJzLmRpc2FibGVcblx0XHRcdFx0XHR0dXBsZXNbIDMgLSBpIF1bIDMgXS5kaXNhYmxlLFxuXG5cdFx0XHRcdFx0Ly8gcHJvZ3Jlc3NfY2FsbGJhY2tzLmxvY2tcblx0XHRcdFx0XHR0dXBsZXNbIDAgXVsgMiBdLmxvY2ssXG5cblx0XHRcdFx0XHQvLyBwcm9ncmVzc19oYW5kbGVycy5sb2NrXG5cdFx0XHRcdFx0dHVwbGVzWyAwIF1bIDMgXS5sb2NrXG5cdFx0XHRcdCk7XG5cdFx0XHR9XG5cblx0XHRcdC8vIHByb2dyZXNzX2hhbmRsZXJzLmZpcmVcblx0XHRcdC8vIGZ1bGZpbGxlZF9oYW5kbGVycy5maXJlXG5cdFx0XHQvLyByZWplY3RlZF9oYW5kbGVycy5maXJlXG5cdFx0XHRsaXN0LmFkZCggdHVwbGVbIDMgXS5maXJlICk7XG5cblx0XHRcdC8vIGRlZmVycmVkLm5vdGlmeSA9IGZ1bmN0aW9uKCkgeyBkZWZlcnJlZC5ub3RpZnlXaXRoKC4uLikgfVxuXHRcdFx0Ly8gZGVmZXJyZWQucmVzb2x2ZSA9IGZ1bmN0aW9uKCkgeyBkZWZlcnJlZC5yZXNvbHZlV2l0aCguLi4pIH1cblx0XHRcdC8vIGRlZmVycmVkLnJlamVjdCA9IGZ1bmN0aW9uKCkgeyBkZWZlcnJlZC5yZWplY3RXaXRoKC4uLikgfVxuXHRcdFx0ZGVmZXJyZWRbIHR1cGxlWyAwIF0gXSA9IGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRkZWZlcnJlZFsgdHVwbGVbIDAgXSArIFwiV2l0aFwiIF0oIHRoaXMgPT09IGRlZmVycmVkID8gdW5kZWZpbmVkIDogdGhpcywgYXJndW1lbnRzICk7XG5cdFx0XHRcdHJldHVybiB0aGlzO1xuXHRcdFx0fTtcblxuXHRcdFx0Ly8gZGVmZXJyZWQubm90aWZ5V2l0aCA9IGxpc3QuZmlyZVdpdGhcblx0XHRcdC8vIGRlZmVycmVkLnJlc29sdmVXaXRoID0gbGlzdC5maXJlV2l0aFxuXHRcdFx0Ly8gZGVmZXJyZWQucmVqZWN0V2l0aCA9IGxpc3QuZmlyZVdpdGhcblx0XHRcdGRlZmVycmVkWyB0dXBsZVsgMCBdICsgXCJXaXRoXCIgXSA9IGxpc3QuZmlyZVdpdGg7XG5cdFx0fSApO1xuXG5cdFx0Ly8gTWFrZSB0aGUgZGVmZXJyZWQgYSBwcm9taXNlXG5cdFx0cHJvbWlzZS5wcm9taXNlKCBkZWZlcnJlZCApO1xuXG5cdFx0Ly8gQ2FsbCBnaXZlbiBmdW5jIGlmIGFueVxuXHRcdGlmICggZnVuYyApIHtcblx0XHRcdGZ1bmMuY2FsbCggZGVmZXJyZWQsIGRlZmVycmVkICk7XG5cdFx0fVxuXG5cdFx0Ly8gQWxsIGRvbmUhXG5cdFx0cmV0dXJuIGRlZmVycmVkO1xuXHR9LFxuXG5cdC8vIERlZmVycmVkIGhlbHBlclxuXHR3aGVuOiBmdW5jdGlvbiggc2luZ2xlVmFsdWUgKSB7XG5cdFx0dmFyXG5cblx0XHRcdC8vIGNvdW50IG9mIHVuY29tcGxldGVkIHN1Ym9yZGluYXRlc1xuXHRcdFx0cmVtYWluaW5nID0gYXJndW1lbnRzLmxlbmd0aCxcblxuXHRcdFx0Ly8gY291bnQgb2YgdW5wcm9jZXNzZWQgYXJndW1lbnRzXG5cdFx0XHRpID0gcmVtYWluaW5nLFxuXG5cdFx0XHQvLyBzdWJvcmRpbmF0ZSBmdWxmaWxsbWVudCBkYXRhXG5cdFx0XHRyZXNvbHZlQ29udGV4dHMgPSBBcnJheSggaSApLFxuXHRcdFx0cmVzb2x2ZVZhbHVlcyA9IHNsaWNlLmNhbGwoIGFyZ3VtZW50cyApLFxuXG5cdFx0XHQvLyB0aGUgbWFzdGVyIERlZmVycmVkXG5cdFx0XHRtYXN0ZXIgPSBqUXVlcnkuRGVmZXJyZWQoKSxcblxuXHRcdFx0Ly8gc3Vib3JkaW5hdGUgY2FsbGJhY2sgZmFjdG9yeVxuXHRcdFx0dXBkYXRlRnVuYyA9IGZ1bmN0aW9uKCBpICkge1xuXHRcdFx0XHRyZXR1cm4gZnVuY3Rpb24oIHZhbHVlICkge1xuXHRcdFx0XHRcdHJlc29sdmVDb250ZXh0c1sgaSBdID0gdGhpcztcblx0XHRcdFx0XHRyZXNvbHZlVmFsdWVzWyBpIF0gPSBhcmd1bWVudHMubGVuZ3RoID4gMSA/IHNsaWNlLmNhbGwoIGFyZ3VtZW50cyApIDogdmFsdWU7XG5cdFx0XHRcdFx0aWYgKCAhKCAtLXJlbWFpbmluZyApICkge1xuXHRcdFx0XHRcdFx0bWFzdGVyLnJlc29sdmVXaXRoKCByZXNvbHZlQ29udGV4dHMsIHJlc29sdmVWYWx1ZXMgKTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH07XG5cdFx0XHR9O1xuXG5cdFx0Ly8gU2luZ2xlLSBhbmQgZW1wdHkgYXJndW1lbnRzIGFyZSBhZG9wdGVkIGxpa2UgUHJvbWlzZS5yZXNvbHZlXG5cdFx0aWYgKCByZW1haW5pbmcgPD0gMSApIHtcblx0XHRcdGFkb3B0VmFsdWUoIHNpbmdsZVZhbHVlLCBtYXN0ZXIuZG9uZSggdXBkYXRlRnVuYyggaSApICkucmVzb2x2ZSwgbWFzdGVyLnJlamVjdCxcblx0XHRcdFx0IXJlbWFpbmluZyApO1xuXG5cdFx0XHQvLyBVc2UgLnRoZW4oKSB0byB1bndyYXAgc2Vjb25kYXJ5IHRoZW5hYmxlcyAoY2YuIGdoLTMwMDApXG5cdFx0XHRpZiAoIG1hc3Rlci5zdGF0ZSgpID09PSBcInBlbmRpbmdcIiB8fFxuXHRcdFx0XHRpc0Z1bmN0aW9uKCByZXNvbHZlVmFsdWVzWyBpIF0gJiYgcmVzb2x2ZVZhbHVlc1sgaSBdLnRoZW4gKSApIHtcblxuXHRcdFx0XHRyZXR1cm4gbWFzdGVyLnRoZW4oKTtcblx0XHRcdH1cblx0XHR9XG5cblx0XHQvLyBNdWx0aXBsZSBhcmd1bWVudHMgYXJlIGFnZ3JlZ2F0ZWQgbGlrZSBQcm9taXNlLmFsbCBhcnJheSBlbGVtZW50c1xuXHRcdHdoaWxlICggaS0tICkge1xuXHRcdFx0YWRvcHRWYWx1ZSggcmVzb2x2ZVZhbHVlc1sgaSBdLCB1cGRhdGVGdW5jKCBpICksIG1hc3Rlci5yZWplY3QgKTtcblx0XHR9XG5cblx0XHRyZXR1cm4gbWFzdGVyLnByb21pc2UoKTtcblx0fVxufSApO1xuXG5cbi8vIFRoZXNlIHVzdWFsbHkgaW5kaWNhdGUgYSBwcm9ncmFtbWVyIG1pc3Rha2UgZHVyaW5nIGRldmVsb3BtZW50LFxuLy8gd2FybiBhYm91dCB0aGVtIEFTQVAgcmF0aGVyIHRoYW4gc3dhbGxvd2luZyB0aGVtIGJ5IGRlZmF1bHQuXG52YXIgcmVycm9yTmFtZXMgPSAvXihFdmFsfEludGVybmFsfFJhbmdlfFJlZmVyZW5jZXxTeW50YXh8VHlwZXxVUkkpRXJyb3IkLztcblxualF1ZXJ5LkRlZmVycmVkLmV4Y2VwdGlvbkhvb2sgPSBmdW5jdGlvbiggZXJyb3IsIHN0YWNrICkge1xuXG5cdC8vIFN1cHBvcnQ6IElFIDggLSA5IG9ubHlcblx0Ly8gQ29uc29sZSBleGlzdHMgd2hlbiBkZXYgdG9vbHMgYXJlIG9wZW4sIHdoaWNoIGNhbiBoYXBwZW4gYXQgYW55IHRpbWVcblx0aWYgKCB3aW5kb3cuY29uc29sZSAmJiB3aW5kb3cuY29uc29sZS53YXJuICYmIGVycm9yICYmIHJlcnJvck5hbWVzLnRlc3QoIGVycm9yLm5hbWUgKSApIHtcblx0XHR3aW5kb3cuY29uc29sZS53YXJuKCBcImpRdWVyeS5EZWZlcnJlZCBleGNlcHRpb246IFwiICsgZXJyb3IubWVzc2FnZSwgZXJyb3Iuc3RhY2ssIHN0YWNrICk7XG5cdH1cbn07XG5cblxuXG5cbmpRdWVyeS5yZWFkeUV4Y2VwdGlvbiA9IGZ1bmN0aW9uKCBlcnJvciApIHtcblx0d2luZG93LnNldFRpbWVvdXQoIGZ1bmN0aW9uKCkge1xuXHRcdHRocm93IGVycm9yO1xuXHR9ICk7XG59O1xuXG5cblxuXG4vLyBUaGUgZGVmZXJyZWQgdXNlZCBvbiBET00gcmVhZHlcbnZhciByZWFkeUxpc3QgPSBqUXVlcnkuRGVmZXJyZWQoKTtcblxualF1ZXJ5LmZuLnJlYWR5ID0gZnVuY3Rpb24oIGZuICkge1xuXG5cdHJlYWR5TGlzdFxuXHRcdC50aGVuKCBmbiApXG5cblx0XHQvLyBXcmFwIGpRdWVyeS5yZWFkeUV4Y2VwdGlvbiBpbiBhIGZ1bmN0aW9uIHNvIHRoYXQgdGhlIGxvb2t1cFxuXHRcdC8vIGhhcHBlbnMgYXQgdGhlIHRpbWUgb2YgZXJyb3IgaGFuZGxpbmcgaW5zdGVhZCBvZiBjYWxsYmFja1xuXHRcdC8vIHJlZ2lzdHJhdGlvbi5cblx0XHQuY2F0Y2goIGZ1bmN0aW9uKCBlcnJvciApIHtcblx0XHRcdGpRdWVyeS5yZWFkeUV4Y2VwdGlvbiggZXJyb3IgKTtcblx0XHR9ICk7XG5cblx0cmV0dXJuIHRoaXM7XG59O1xuXG5qUXVlcnkuZXh0ZW5kKCB7XG5cblx0Ly8gSXMgdGhlIERPTSByZWFkeSB0byBiZSB1c2VkPyBTZXQgdG8gdHJ1ZSBvbmNlIGl0IG9jY3Vycy5cblx0aXNSZWFkeTogZmFsc2UsXG5cblx0Ly8gQSBjb3VudGVyIHRvIHRyYWNrIGhvdyBtYW55IGl0ZW1zIHRvIHdhaXQgZm9yIGJlZm9yZVxuXHQvLyB0aGUgcmVhZHkgZXZlbnQgZmlyZXMuIFNlZSAjNjc4MVxuXHRyZWFkeVdhaXQ6IDEsXG5cblx0Ly8gSGFuZGxlIHdoZW4gdGhlIERPTSBpcyByZWFkeVxuXHRyZWFkeTogZnVuY3Rpb24oIHdhaXQgKSB7XG5cblx0XHQvLyBBYm9ydCBpZiB0aGVyZSBhcmUgcGVuZGluZyBob2xkcyBvciB3ZSdyZSBhbHJlYWR5IHJlYWR5XG5cdFx0aWYgKCB3YWl0ID09PSB0cnVlID8gLS1qUXVlcnkucmVhZHlXYWl0IDogalF1ZXJ5LmlzUmVhZHkgKSB7XG5cdFx0XHRyZXR1cm47XG5cdFx0fVxuXG5cdFx0Ly8gUmVtZW1iZXIgdGhhdCB0aGUgRE9NIGlzIHJlYWR5XG5cdFx0alF1ZXJ5LmlzUmVhZHkgPSB0cnVlO1xuXG5cdFx0Ly8gSWYgYSBub3JtYWwgRE9NIFJlYWR5IGV2ZW50IGZpcmVkLCBkZWNyZW1lbnQsIGFuZCB3YWl0IGlmIG5lZWQgYmVcblx0XHRpZiAoIHdhaXQgIT09IHRydWUgJiYgLS1qUXVlcnkucmVhZHlXYWl0ID4gMCApIHtcblx0XHRcdHJldHVybjtcblx0XHR9XG5cblx0XHQvLyBJZiB0aGVyZSBhcmUgZnVuY3Rpb25zIGJvdW5kLCB0byBleGVjdXRlXG5cdFx0cmVhZHlMaXN0LnJlc29sdmVXaXRoKCBkb2N1bWVudCwgWyBqUXVlcnkgXSApO1xuXHR9XG59ICk7XG5cbmpRdWVyeS5yZWFkeS50aGVuID0gcmVhZHlMaXN0LnRoZW47XG5cbi8vIFRoZSByZWFkeSBldmVudCBoYW5kbGVyIGFuZCBzZWxmIGNsZWFudXAgbWV0aG9kXG5mdW5jdGlvbiBjb21wbGV0ZWQoKSB7XG5cdGRvY3VtZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIoIFwiRE9NQ29udGVudExvYWRlZFwiLCBjb21wbGV0ZWQgKTtcblx0d2luZG93LnJlbW92ZUV2ZW50TGlzdGVuZXIoIFwibG9hZFwiLCBjb21wbGV0ZWQgKTtcblx0alF1ZXJ5LnJlYWR5KCk7XG59XG5cbi8vIENhdGNoIGNhc2VzIHdoZXJlICQoZG9jdW1lbnQpLnJlYWR5KCkgaXMgY2FsbGVkXG4vLyBhZnRlciB0aGUgYnJvd3NlciBldmVudCBoYXMgYWxyZWFkeSBvY2N1cnJlZC5cbi8vIFN1cHBvcnQ6IElFIDw9OSAtIDEwIG9ubHlcbi8vIE9sZGVyIElFIHNvbWV0aW1lcyBzaWduYWxzIFwiaW50ZXJhY3RpdmVcIiB0b28gc29vblxuaWYgKCBkb2N1bWVudC5yZWFkeVN0YXRlID09PSBcImNvbXBsZXRlXCIgfHxcblx0KCBkb2N1bWVudC5yZWFkeVN0YXRlICE9PSBcImxvYWRpbmdcIiAmJiAhZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LmRvU2Nyb2xsICkgKSB7XG5cblx0Ly8gSGFuZGxlIGl0IGFzeW5jaHJvbm91c2x5IHRvIGFsbG93IHNjcmlwdHMgdGhlIG9wcG9ydHVuaXR5IHRvIGRlbGF5IHJlYWR5XG5cdHdpbmRvdy5zZXRUaW1lb3V0KCBqUXVlcnkucmVhZHkgKTtcblxufSBlbHNlIHtcblxuXHQvLyBVc2UgdGhlIGhhbmR5IGV2ZW50IGNhbGxiYWNrXG5cdGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoIFwiRE9NQ29udGVudExvYWRlZFwiLCBjb21wbGV0ZWQgKTtcblxuXHQvLyBBIGZhbGxiYWNrIHRvIHdpbmRvdy5vbmxvYWQsIHRoYXQgd2lsbCBhbHdheXMgd29ya1xuXHR3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lciggXCJsb2FkXCIsIGNvbXBsZXRlZCApO1xufVxuXG5cblxuXG4vLyBNdWx0aWZ1bmN0aW9uYWwgbWV0aG9kIHRvIGdldCBhbmQgc2V0IHZhbHVlcyBvZiBhIGNvbGxlY3Rpb25cbi8vIFRoZSB2YWx1ZS9zIGNhbiBvcHRpb25hbGx5IGJlIGV4ZWN1dGVkIGlmIGl0J3MgYSBmdW5jdGlvblxudmFyIGFjY2VzcyA9IGZ1bmN0aW9uKCBlbGVtcywgZm4sIGtleSwgdmFsdWUsIGNoYWluYWJsZSwgZW1wdHlHZXQsIHJhdyApIHtcblx0dmFyIGkgPSAwLFxuXHRcdGxlbiA9IGVsZW1zLmxlbmd0aCxcblx0XHRidWxrID0ga2V5ID09IG51bGw7XG5cblx0Ly8gU2V0cyBtYW55IHZhbHVlc1xuXHRpZiAoIHRvVHlwZSgga2V5ICkgPT09IFwib2JqZWN0XCIgKSB7XG5cdFx0Y2hhaW5hYmxlID0gdHJ1ZTtcblx0XHRmb3IgKCBpIGluIGtleSApIHtcblx0XHRcdGFjY2VzcyggZWxlbXMsIGZuLCBpLCBrZXlbIGkgXSwgdHJ1ZSwgZW1wdHlHZXQsIHJhdyApO1xuXHRcdH1cblxuXHQvLyBTZXRzIG9uZSB2YWx1ZVxuXHR9IGVsc2UgaWYgKCB2YWx1ZSAhPT0gdW5kZWZpbmVkICkge1xuXHRcdGNoYWluYWJsZSA9IHRydWU7XG5cblx0XHRpZiAoICFpc0Z1bmN0aW9uKCB2YWx1ZSApICkge1xuXHRcdFx0cmF3ID0gdHJ1ZTtcblx0XHR9XG5cblx0XHRpZiAoIGJ1bGsgKSB7XG5cblx0XHRcdC8vIEJ1bGsgb3BlcmF0aW9ucyBydW4gYWdhaW5zdCB0aGUgZW50aXJlIHNldFxuXHRcdFx0aWYgKCByYXcgKSB7XG5cdFx0XHRcdGZuLmNhbGwoIGVsZW1zLCB2YWx1ZSApO1xuXHRcdFx0XHRmbiA9IG51bGw7XG5cblx0XHRcdC8vIC4uLmV4Y2VwdCB3aGVuIGV4ZWN1dGluZyBmdW5jdGlvbiB2YWx1ZXNcblx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdGJ1bGsgPSBmbjtcblx0XHRcdFx0Zm4gPSBmdW5jdGlvbiggZWxlbSwgX2tleSwgdmFsdWUgKSB7XG5cdFx0XHRcdFx0cmV0dXJuIGJ1bGsuY2FsbCggalF1ZXJ5KCBlbGVtICksIHZhbHVlICk7XG5cdFx0XHRcdH07XG5cdFx0XHR9XG5cdFx0fVxuXG5cdFx0aWYgKCBmbiApIHtcblx0XHRcdGZvciAoIDsgaSA8IGxlbjsgaSsrICkge1xuXHRcdFx0XHRmbihcblx0XHRcdFx0XHRlbGVtc1sgaSBdLCBrZXksIHJhdyA/XG5cdFx0XHRcdFx0dmFsdWUgOlxuXHRcdFx0XHRcdHZhbHVlLmNhbGwoIGVsZW1zWyBpIF0sIGksIGZuKCBlbGVtc1sgaSBdLCBrZXkgKSApXG5cdFx0XHRcdCk7XG5cdFx0XHR9XG5cdFx0fVxuXHR9XG5cblx0aWYgKCBjaGFpbmFibGUgKSB7XG5cdFx0cmV0dXJuIGVsZW1zO1xuXHR9XG5cblx0Ly8gR2V0c1xuXHRpZiAoIGJ1bGsgKSB7XG5cdFx0cmV0dXJuIGZuLmNhbGwoIGVsZW1zICk7XG5cdH1cblxuXHRyZXR1cm4gbGVuID8gZm4oIGVsZW1zWyAwIF0sIGtleSApIDogZW1wdHlHZXQ7XG59O1xuXG5cbi8vIE1hdGNoZXMgZGFzaGVkIHN0cmluZyBmb3IgY2FtZWxpemluZ1xudmFyIHJtc1ByZWZpeCA9IC9eLW1zLS8sXG5cdHJkYXNoQWxwaGEgPSAvLShbYS16XSkvZztcblxuLy8gVXNlZCBieSBjYW1lbENhc2UgYXMgY2FsbGJhY2sgdG8gcmVwbGFjZSgpXG5mdW5jdGlvbiBmY2FtZWxDYXNlKCBfYWxsLCBsZXR0ZXIgKSB7XG5cdHJldHVybiBsZXR0ZXIudG9VcHBlckNhc2UoKTtcbn1cblxuLy8gQ29udmVydCBkYXNoZWQgdG8gY2FtZWxDYXNlOyB1c2VkIGJ5IHRoZSBjc3MgYW5kIGRhdGEgbW9kdWxlc1xuLy8gU3VwcG9ydDogSUUgPD05IC0gMTEsIEVkZ2UgMTIgLSAxNVxuLy8gTWljcm9zb2Z0IGZvcmdvdCB0byBodW1wIHRoZWlyIHZlbmRvciBwcmVmaXggKCM5NTcyKVxuZnVuY3Rpb24gY2FtZWxDYXNlKCBzdHJpbmcgKSB7XG5cdHJldHVybiBzdHJpbmcucmVwbGFjZSggcm1zUHJlZml4LCBcIm1zLVwiICkucmVwbGFjZSggcmRhc2hBbHBoYSwgZmNhbWVsQ2FzZSApO1xufVxudmFyIGFjY2VwdERhdGEgPSBmdW5jdGlvbiggb3duZXIgKSB7XG5cblx0Ly8gQWNjZXB0cyBvbmx5OlxuXHQvLyAgLSBOb2RlXG5cdC8vICAgIC0gTm9kZS5FTEVNRU5UX05PREVcblx0Ly8gICAgLSBOb2RlLkRPQ1VNRU5UX05PREVcblx0Ly8gIC0gT2JqZWN0XG5cdC8vICAgIC0gQW55XG5cdHJldHVybiBvd25lci5ub2RlVHlwZSA9PT0gMSB8fCBvd25lci5ub2RlVHlwZSA9PT0gOSB8fCAhKCArb3duZXIubm9kZVR5cGUgKTtcbn07XG5cblxuXG5cbmZ1bmN0aW9uIERhdGEoKSB7XG5cdHRoaXMuZXhwYW5kbyA9IGpRdWVyeS5leHBhbmRvICsgRGF0YS51aWQrKztcbn1cblxuRGF0YS51aWQgPSAxO1xuXG5EYXRhLnByb3RvdHlwZSA9IHtcblxuXHRjYWNoZTogZnVuY3Rpb24oIG93bmVyICkge1xuXG5cdFx0Ly8gQ2hlY2sgaWYgdGhlIG93bmVyIG9iamVjdCBhbHJlYWR5IGhhcyBhIGNhY2hlXG5cdFx0dmFyIHZhbHVlID0gb3duZXJbIHRoaXMuZXhwYW5kbyBdO1xuXG5cdFx0Ly8gSWYgbm90LCBjcmVhdGUgb25lXG5cdFx0aWYgKCAhdmFsdWUgKSB7XG5cdFx0XHR2YWx1ZSA9IHt9O1xuXG5cdFx0XHQvLyBXZSBjYW4gYWNjZXB0IGRhdGEgZm9yIG5vbi1lbGVtZW50IG5vZGVzIGluIG1vZGVybiBicm93c2Vycyxcblx0XHRcdC8vIGJ1dCB3ZSBzaG91bGQgbm90LCBzZWUgIzgzMzUuXG5cdFx0XHQvLyBBbHdheXMgcmV0dXJuIGFuIGVtcHR5IG9iamVjdC5cblx0XHRcdGlmICggYWNjZXB0RGF0YSggb3duZXIgKSApIHtcblxuXHRcdFx0XHQvLyBJZiBpdCBpcyBhIG5vZGUgdW5saWtlbHkgdG8gYmUgc3RyaW5naWZ5LWVkIG9yIGxvb3BlZCBvdmVyXG5cdFx0XHRcdC8vIHVzZSBwbGFpbiBhc3NpZ25tZW50XG5cdFx0XHRcdGlmICggb3duZXIubm9kZVR5cGUgKSB7XG5cdFx0XHRcdFx0b3duZXJbIHRoaXMuZXhwYW5kbyBdID0gdmFsdWU7XG5cblx0XHRcdFx0Ly8gT3RoZXJ3aXNlIHNlY3VyZSBpdCBpbiBhIG5vbi1lbnVtZXJhYmxlIHByb3BlcnR5XG5cdFx0XHRcdC8vIGNvbmZpZ3VyYWJsZSBtdXN0IGJlIHRydWUgdG8gYWxsb3cgdGhlIHByb3BlcnR5IHRvIGJlXG5cdFx0XHRcdC8vIGRlbGV0ZWQgd2hlbiBkYXRhIGlzIHJlbW92ZWRcblx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoIG93bmVyLCB0aGlzLmV4cGFuZG8sIHtcblx0XHRcdFx0XHRcdHZhbHVlOiB2YWx1ZSxcblx0XHRcdFx0XHRcdGNvbmZpZ3VyYWJsZTogdHJ1ZVxuXHRcdFx0XHRcdH0gKTtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH1cblxuXHRcdHJldHVybiB2YWx1ZTtcblx0fSxcblx0c2V0OiBmdW5jdGlvbiggb3duZXIsIGRhdGEsIHZhbHVlICkge1xuXHRcdHZhciBwcm9wLFxuXHRcdFx0Y2FjaGUgPSB0aGlzLmNhY2hlKCBvd25lciApO1xuXG5cdFx0Ly8gSGFuZGxlOiBbIG93bmVyLCBrZXksIHZhbHVlIF0gYXJnc1xuXHRcdC8vIEFsd2F5cyB1c2UgY2FtZWxDYXNlIGtleSAoZ2gtMjI1Nylcblx0XHRpZiAoIHR5cGVvZiBkYXRhID09PSBcInN0cmluZ1wiICkge1xuXHRcdFx0Y2FjaGVbIGNhbWVsQ2FzZSggZGF0YSApIF0gPSB2YWx1ZTtcblxuXHRcdC8vIEhhbmRsZTogWyBvd25lciwgeyBwcm9wZXJ0aWVzIH0gXSBhcmdzXG5cdFx0fSBlbHNlIHtcblxuXHRcdFx0Ly8gQ29weSB0aGUgcHJvcGVydGllcyBvbmUtYnktb25lIHRvIHRoZSBjYWNoZSBvYmplY3Rcblx0XHRcdGZvciAoIHByb3AgaW4gZGF0YSApIHtcblx0XHRcdFx0Y2FjaGVbIGNhbWVsQ2FzZSggcHJvcCApIF0gPSBkYXRhWyBwcm9wIF07XG5cdFx0XHR9XG5cdFx0fVxuXHRcdHJldHVybiBjYWNoZTtcblx0fSxcblx0Z2V0OiBmdW5jdGlvbiggb3duZXIsIGtleSApIHtcblx0XHRyZXR1cm4ga2V5ID09PSB1bmRlZmluZWQgP1xuXHRcdFx0dGhpcy5jYWNoZSggb3duZXIgKSA6XG5cblx0XHRcdC8vIEFsd2F5cyB1c2UgY2FtZWxDYXNlIGtleSAoZ2gtMjI1Nylcblx0XHRcdG93bmVyWyB0aGlzLmV4cGFuZG8gXSAmJiBvd25lclsgdGhpcy5leHBhbmRvIF1bIGNhbWVsQ2FzZSgga2V5ICkgXTtcblx0fSxcblx0YWNjZXNzOiBmdW5jdGlvbiggb3duZXIsIGtleSwgdmFsdWUgKSB7XG5cblx0XHQvLyBJbiBjYXNlcyB3aGVyZSBlaXRoZXI6XG5cdFx0Ly9cblx0XHQvLyAgIDEuIE5vIGtleSB3YXMgc3BlY2lmaWVkXG5cdFx0Ly8gICAyLiBBIHN0cmluZyBrZXkgd2FzIHNwZWNpZmllZCwgYnV0IG5vIHZhbHVlIHByb3ZpZGVkXG5cdFx0Ly9cblx0XHQvLyBUYWtlIHRoZSBcInJlYWRcIiBwYXRoIGFuZCBhbGxvdyB0aGUgZ2V0IG1ldGhvZCB0byBkZXRlcm1pbmVcblx0XHQvLyB3aGljaCB2YWx1ZSB0byByZXR1cm4sIHJlc3BlY3RpdmVseSBlaXRoZXI6XG5cdFx0Ly9cblx0XHQvLyAgIDEuIFRoZSBlbnRpcmUgY2FjaGUgb2JqZWN0XG5cdFx0Ly8gICAyLiBUaGUgZGF0YSBzdG9yZWQgYXQgdGhlIGtleVxuXHRcdC8vXG5cdFx0aWYgKCBrZXkgPT09IHVuZGVmaW5lZCB8fFxuXHRcdFx0XHQoICgga2V5ICYmIHR5cGVvZiBrZXkgPT09IFwic3RyaW5nXCIgKSAmJiB2YWx1ZSA9PT0gdW5kZWZpbmVkICkgKSB7XG5cblx0XHRcdHJldHVybiB0aGlzLmdldCggb3duZXIsIGtleSApO1xuXHRcdH1cblxuXHRcdC8vIFdoZW4gdGhlIGtleSBpcyBub3QgYSBzdHJpbmcsIG9yIGJvdGggYSBrZXkgYW5kIHZhbHVlXG5cdFx0Ly8gYXJlIHNwZWNpZmllZCwgc2V0IG9yIGV4dGVuZCAoZXhpc3Rpbmcgb2JqZWN0cykgd2l0aCBlaXRoZXI6XG5cdFx0Ly9cblx0XHQvLyAgIDEuIEFuIG9iamVjdCBvZiBwcm9wZXJ0aWVzXG5cdFx0Ly8gICAyLiBBIGtleSBhbmQgdmFsdWVcblx0XHQvL1xuXHRcdHRoaXMuc2V0KCBvd25lciwga2V5LCB2YWx1ZSApO1xuXG5cdFx0Ly8gU2luY2UgdGhlIFwic2V0XCIgcGF0aCBjYW4gaGF2ZSB0d28gcG9zc2libGUgZW50cnkgcG9pbnRzXG5cdFx0Ly8gcmV0dXJuIHRoZSBleHBlY3RlZCBkYXRhIGJhc2VkIG9uIHdoaWNoIHBhdGggd2FzIHRha2VuWypdXG5cdFx0cmV0dXJuIHZhbHVlICE9PSB1bmRlZmluZWQgPyB2YWx1ZSA6IGtleTtcblx0fSxcblx0cmVtb3ZlOiBmdW5jdGlvbiggb3duZXIsIGtleSApIHtcblx0XHR2YXIgaSxcblx0XHRcdGNhY2hlID0gb3duZXJbIHRoaXMuZXhwYW5kbyBdO1xuXG5cdFx0aWYgKCBjYWNoZSA9PT0gdW5kZWZpbmVkICkge1xuXHRcdFx0cmV0dXJuO1xuXHRcdH1cblxuXHRcdGlmICgga2V5ICE9PSB1bmRlZmluZWQgKSB7XG5cblx0XHRcdC8vIFN1cHBvcnQgYXJyYXkgb3Igc3BhY2Ugc2VwYXJhdGVkIHN0cmluZyBvZiBrZXlzXG5cdFx0XHRpZiAoIEFycmF5LmlzQXJyYXkoIGtleSApICkge1xuXG5cdFx0XHRcdC8vIElmIGtleSBpcyBhbiBhcnJheSBvZiBrZXlzLi4uXG5cdFx0XHRcdC8vIFdlIGFsd2F5cyBzZXQgY2FtZWxDYXNlIGtleXMsIHNvIHJlbW92ZSB0aGF0LlxuXHRcdFx0XHRrZXkgPSBrZXkubWFwKCBjYW1lbENhc2UgKTtcblx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdGtleSA9IGNhbWVsQ2FzZSgga2V5ICk7XG5cblx0XHRcdFx0Ly8gSWYgYSBrZXkgd2l0aCB0aGUgc3BhY2VzIGV4aXN0cywgdXNlIGl0LlxuXHRcdFx0XHQvLyBPdGhlcndpc2UsIGNyZWF0ZSBhbiBhcnJheSBieSBtYXRjaGluZyBub24td2hpdGVzcGFjZVxuXHRcdFx0XHRrZXkgPSBrZXkgaW4gY2FjaGUgP1xuXHRcdFx0XHRcdFsga2V5IF0gOlxuXHRcdFx0XHRcdCgga2V5Lm1hdGNoKCBybm90aHRtbHdoaXRlICkgfHwgW10gKTtcblx0XHRcdH1cblxuXHRcdFx0aSA9IGtleS5sZW5ndGg7XG5cblx0XHRcdHdoaWxlICggaS0tICkge1xuXHRcdFx0XHRkZWxldGUgY2FjaGVbIGtleVsgaSBdIF07XG5cdFx0XHR9XG5cdFx0fVxuXG5cdFx0Ly8gUmVtb3ZlIHRoZSBleHBhbmRvIGlmIHRoZXJlJ3Mgbm8gbW9yZSBkYXRhXG5cdFx0aWYgKCBrZXkgPT09IHVuZGVmaW5lZCB8fCBqUXVlcnkuaXNFbXB0eU9iamVjdCggY2FjaGUgKSApIHtcblxuXHRcdFx0Ly8gU3VwcG9ydDogQ2hyb21lIDw9MzUgLSA0NVxuXHRcdFx0Ly8gV2Via2l0ICYgQmxpbmsgcGVyZm9ybWFuY2Ugc3VmZmVycyB3aGVuIGRlbGV0aW5nIHByb3BlcnRpZXNcblx0XHRcdC8vIGZyb20gRE9NIG5vZGVzLCBzbyBzZXQgdG8gdW5kZWZpbmVkIGluc3RlYWRcblx0XHRcdC8vIGh0dHBzOi8vYnVncy5jaHJvbWl1bS5vcmcvcC9jaHJvbWl1bS9pc3N1ZXMvZGV0YWlsP2lkPTM3ODYwNyAoYnVnIHJlc3RyaWN0ZWQpXG5cdFx0XHRpZiAoIG93bmVyLm5vZGVUeXBlICkge1xuXHRcdFx0XHRvd25lclsgdGhpcy5leHBhbmRvIF0gPSB1bmRlZmluZWQ7XG5cdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRkZWxldGUgb3duZXJbIHRoaXMuZXhwYW5kbyBdO1xuXHRcdFx0fVxuXHRcdH1cblx0fSxcblx0aGFzRGF0YTogZnVuY3Rpb24oIG93bmVyICkge1xuXHRcdHZhciBjYWNoZSA9IG93bmVyWyB0aGlzLmV4cGFuZG8gXTtcblx0XHRyZXR1cm4gY2FjaGUgIT09IHVuZGVmaW5lZCAmJiAhalF1ZXJ5LmlzRW1wdHlPYmplY3QoIGNhY2hlICk7XG5cdH1cbn07XG52YXIgZGF0YVByaXYgPSBuZXcgRGF0YSgpO1xuXG52YXIgZGF0YVVzZXIgPSBuZXcgRGF0YSgpO1xuXG5cblxuLy9cdEltcGxlbWVudGF0aW9uIFN1bW1hcnlcbi8vXG4vL1x0MS4gRW5mb3JjZSBBUEkgc3VyZmFjZSBhbmQgc2VtYW50aWMgY29tcGF0aWJpbGl0eSB3aXRoIDEuOS54IGJyYW5jaFxuLy9cdDIuIEltcHJvdmUgdGhlIG1vZHVsZSdzIG1haW50YWluYWJpbGl0eSBieSByZWR1Y2luZyB0aGUgc3RvcmFnZVxuLy9cdFx0cGF0aHMgdG8gYSBzaW5nbGUgbWVjaGFuaXNtLlxuLy9cdDMuIFVzZSB0aGUgc2FtZSBzaW5nbGUgbWVjaGFuaXNtIHRvIHN1cHBvcnQgXCJwcml2YXRlXCIgYW5kIFwidXNlclwiIGRhdGEuXG4vL1x0NC4gX05ldmVyXyBleHBvc2UgXCJwcml2YXRlXCIgZGF0YSB0byB1c2VyIGNvZGUgKFRPRE86IERyb3AgX2RhdGEsIF9yZW1vdmVEYXRhKVxuLy9cdDUuIEF2b2lkIGV4cG9zaW5nIGltcGxlbWVudGF0aW9uIGRldGFpbHMgb24gdXNlciBvYmplY3RzIChlZy4gZXhwYW5kbyBwcm9wZXJ0aWVzKVxuLy9cdDYuIFByb3ZpZGUgYSBjbGVhciBwYXRoIGZvciBpbXBsZW1lbnRhdGlvbiB1cGdyYWRlIHRvIFdlYWtNYXAgaW4gMjAxNFxuXG52YXIgcmJyYWNlID0gL14oPzpcXHtbXFx3XFxXXSpcXH18XFxbW1xcd1xcV10qXFxdKSQvLFxuXHRybXVsdGlEYXNoID0gL1tBLVpdL2c7XG5cbmZ1bmN0aW9uIGdldERhdGEoIGRhdGEgKSB7XG5cdGlmICggZGF0YSA9PT0gXCJ0cnVlXCIgKSB7XG5cdFx0cmV0dXJuIHRydWU7XG5cdH1cblxuXHRpZiAoIGRhdGEgPT09IFwiZmFsc2VcIiApIHtcblx0XHRyZXR1cm4gZmFsc2U7XG5cdH1cblxuXHRpZiAoIGRhdGEgPT09IFwibnVsbFwiICkge1xuXHRcdHJldHVybiBudWxsO1xuXHR9XG5cblx0Ly8gT25seSBjb252ZXJ0IHRvIGEgbnVtYmVyIGlmIGl0IGRvZXNuJ3QgY2hhbmdlIHRoZSBzdHJpbmdcblx0aWYgKCBkYXRhID09PSArZGF0YSArIFwiXCIgKSB7XG5cdFx0cmV0dXJuICtkYXRhO1xuXHR9XG5cblx0aWYgKCByYnJhY2UudGVzdCggZGF0YSApICkge1xuXHRcdHJldHVybiBKU09OLnBhcnNlKCBkYXRhICk7XG5cdH1cblxuXHRyZXR1cm4gZGF0YTtcbn1cblxuZnVuY3Rpb24gZGF0YUF0dHIoIGVsZW0sIGtleSwgZGF0YSApIHtcblx0dmFyIG5hbWU7XG5cblx0Ly8gSWYgbm90aGluZyB3YXMgZm91bmQgaW50ZXJuYWxseSwgdHJ5IHRvIGZldGNoIGFueVxuXHQvLyBkYXRhIGZyb20gdGhlIEhUTUw1IGRhdGEtKiBhdHRyaWJ1dGVcblx0aWYgKCBkYXRhID09PSB1bmRlZmluZWQgJiYgZWxlbS5ub2RlVHlwZSA9PT0gMSApIHtcblx0XHRuYW1lID0gXCJkYXRhLVwiICsga2V5LnJlcGxhY2UoIHJtdWx0aURhc2gsIFwiLSQmXCIgKS50b0xvd2VyQ2FzZSgpO1xuXHRcdGRhdGEgPSBlbGVtLmdldEF0dHJpYnV0ZSggbmFtZSApO1xuXG5cdFx0aWYgKCB0eXBlb2YgZGF0YSA9PT0gXCJzdHJpbmdcIiApIHtcblx0XHRcdHRyeSB7XG5cdFx0XHRcdGRhdGEgPSBnZXREYXRhKCBkYXRhICk7XG5cdFx0XHR9IGNhdGNoICggZSApIHt9XG5cblx0XHRcdC8vIE1ha2Ugc3VyZSB3ZSBzZXQgdGhlIGRhdGEgc28gaXQgaXNuJ3QgY2hhbmdlZCBsYXRlclxuXHRcdFx0ZGF0YVVzZXIuc2V0KCBlbGVtLCBrZXksIGRhdGEgKTtcblx0XHR9IGVsc2Uge1xuXHRcdFx0ZGF0YSA9IHVuZGVmaW5lZDtcblx0XHR9XG5cdH1cblx0cmV0dXJuIGRhdGE7XG59XG5cbmpRdWVyeS5leHRlbmQoIHtcblx0aGFzRGF0YTogZnVuY3Rpb24oIGVsZW0gKSB7XG5cdFx0cmV0dXJuIGRhdGFVc2VyLmhhc0RhdGEoIGVsZW0gKSB8fCBkYXRhUHJpdi5oYXNEYXRhKCBlbGVtICk7XG5cdH0sXG5cblx0ZGF0YTogZnVuY3Rpb24oIGVsZW0sIG5hbWUsIGRhdGEgKSB7XG5cdFx0cmV0dXJuIGRhdGFVc2VyLmFjY2VzcyggZWxlbSwgbmFtZSwgZGF0YSApO1xuXHR9LFxuXG5cdHJlbW92ZURhdGE6IGZ1bmN0aW9uKCBlbGVtLCBuYW1lICkge1xuXHRcdGRhdGFVc2VyLnJlbW92ZSggZWxlbSwgbmFtZSApO1xuXHR9LFxuXG5cdC8vIFRPRE86IE5vdyB0aGF0IGFsbCBjYWxscyB0byBfZGF0YSBhbmQgX3JlbW92ZURhdGEgaGF2ZSBiZWVuIHJlcGxhY2VkXG5cdC8vIHdpdGggZGlyZWN0IGNhbGxzIHRvIGRhdGFQcml2IG1ldGhvZHMsIHRoZXNlIGNhbiBiZSBkZXByZWNhdGVkLlxuXHRfZGF0YTogZnVuY3Rpb24oIGVsZW0sIG5hbWUsIGRhdGEgKSB7XG5cdFx0cmV0dXJuIGRhdGFQcml2LmFjY2VzcyggZWxlbSwgbmFtZSwgZGF0YSApO1xuXHR9LFxuXG5cdF9yZW1vdmVEYXRhOiBmdW5jdGlvbiggZWxlbSwgbmFtZSApIHtcblx0XHRkYXRhUHJpdi5yZW1vdmUoIGVsZW0sIG5hbWUgKTtcblx0fVxufSApO1xuXG5qUXVlcnkuZm4uZXh0ZW5kKCB7XG5cdGRhdGE6IGZ1bmN0aW9uKCBrZXksIHZhbHVlICkge1xuXHRcdHZhciBpLCBuYW1lLCBkYXRhLFxuXHRcdFx0ZWxlbSA9IHRoaXNbIDAgXSxcblx0XHRcdGF0dHJzID0gZWxlbSAmJiBlbGVtLmF0dHJpYnV0ZXM7XG5cblx0XHQvLyBHZXRzIGFsbCB2YWx1ZXNcblx0XHRpZiAoIGtleSA9PT0gdW5kZWZpbmVkICkge1xuXHRcdFx0aWYgKCB0aGlzLmxlbmd0aCApIHtcblx0XHRcdFx0ZGF0YSA9IGRhdGFVc2VyLmdldCggZWxlbSApO1xuXG5cdFx0XHRcdGlmICggZWxlbS5ub2RlVHlwZSA9PT0gMSAmJiAhZGF0YVByaXYuZ2V0KCBlbGVtLCBcImhhc0RhdGFBdHRyc1wiICkgKSB7XG5cdFx0XHRcdFx0aSA9IGF0dHJzLmxlbmd0aDtcblx0XHRcdFx0XHR3aGlsZSAoIGktLSApIHtcblxuXHRcdFx0XHRcdFx0Ly8gU3VwcG9ydDogSUUgMTEgb25seVxuXHRcdFx0XHRcdFx0Ly8gVGhlIGF0dHJzIGVsZW1lbnRzIGNhbiBiZSBudWxsICgjMTQ4OTQpXG5cdFx0XHRcdFx0XHRpZiAoIGF0dHJzWyBpIF0gKSB7XG5cdFx0XHRcdFx0XHRcdG5hbWUgPSBhdHRyc1sgaSBdLm5hbWU7XG5cdFx0XHRcdFx0XHRcdGlmICggbmFtZS5pbmRleE9mKCBcImRhdGEtXCIgKSA9PT0gMCApIHtcblx0XHRcdFx0XHRcdFx0XHRuYW1lID0gY2FtZWxDYXNlKCBuYW1lLnNsaWNlKCA1ICkgKTtcblx0XHRcdFx0XHRcdFx0XHRkYXRhQXR0ciggZWxlbSwgbmFtZSwgZGF0YVsgbmFtZSBdICk7XG5cdFx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0ZGF0YVByaXYuc2V0KCBlbGVtLCBcImhhc0RhdGFBdHRyc1wiLCB0cnVlICk7XG5cdFx0XHRcdH1cblx0XHRcdH1cblxuXHRcdFx0cmV0dXJuIGRhdGE7XG5cdFx0fVxuXG5cdFx0Ly8gU2V0cyBtdWx0aXBsZSB2YWx1ZXNcblx0XHRpZiAoIHR5cGVvZiBrZXkgPT09IFwib2JqZWN0XCIgKSB7XG5cdFx0XHRyZXR1cm4gdGhpcy5lYWNoKCBmdW5jdGlvbigpIHtcblx0XHRcdFx0ZGF0YVVzZXIuc2V0KCB0aGlzLCBrZXkgKTtcblx0XHRcdH0gKTtcblx0XHR9XG5cblx0XHRyZXR1cm4gYWNjZXNzKCB0aGlzLCBmdW5jdGlvbiggdmFsdWUgKSB7XG5cdFx0XHR2YXIgZGF0YTtcblxuXHRcdFx0Ly8gVGhlIGNhbGxpbmcgalF1ZXJ5IG9iamVjdCAoZWxlbWVudCBtYXRjaGVzKSBpcyBub3QgZW1wdHlcblx0XHRcdC8vIChhbmQgdGhlcmVmb3JlIGhhcyBhbiBlbGVtZW50IGFwcGVhcnMgYXQgdGhpc1sgMCBdKSBhbmQgdGhlXG5cdFx0XHQvLyBgdmFsdWVgIHBhcmFtZXRlciB3YXMgbm90IHVuZGVmaW5lZC4gQW4gZW1wdHkgalF1ZXJ5IG9iamVjdFxuXHRcdFx0Ly8gd2lsbCByZXN1bHQgaW4gYHVuZGVmaW5lZGAgZm9yIGVsZW0gPSB0aGlzWyAwIF0gd2hpY2ggd2lsbFxuXHRcdFx0Ly8gdGhyb3cgYW4gZXhjZXB0aW9uIGlmIGFuIGF0dGVtcHQgdG8gcmVhZCBhIGRhdGEgY2FjaGUgaXMgbWFkZS5cblx0XHRcdGlmICggZWxlbSAmJiB2YWx1ZSA9PT0gdW5kZWZpbmVkICkge1xuXG5cdFx0XHRcdC8vIEF0dGVtcHQgdG8gZ2V0IGRhdGEgZnJvbSB0aGUgY2FjaGVcblx0XHRcdFx0Ly8gVGhlIGtleSB3aWxsIGFsd2F5cyBiZSBjYW1lbENhc2VkIGluIERhdGFcblx0XHRcdFx0ZGF0YSA9IGRhdGFVc2VyLmdldCggZWxlbSwga2V5ICk7XG5cdFx0XHRcdGlmICggZGF0YSAhPT0gdW5kZWZpbmVkICkge1xuXHRcdFx0XHRcdHJldHVybiBkYXRhO1xuXHRcdFx0XHR9XG5cblx0XHRcdFx0Ly8gQXR0ZW1wdCB0byBcImRpc2NvdmVyXCIgdGhlIGRhdGEgaW5cblx0XHRcdFx0Ly8gSFRNTDUgY3VzdG9tIGRhdGEtKiBhdHRyc1xuXHRcdFx0XHRkYXRhID0gZGF0YUF0dHIoIGVsZW0sIGtleSApO1xuXHRcdFx0XHRpZiAoIGRhdGEgIT09IHVuZGVmaW5lZCApIHtcblx0XHRcdFx0XHRyZXR1cm4gZGF0YTtcblx0XHRcdFx0fVxuXG5cdFx0XHRcdC8vIFdlIHRyaWVkIHJlYWxseSBoYXJkLCBidXQgdGhlIGRhdGEgZG9lc24ndCBleGlzdC5cblx0XHRcdFx0cmV0dXJuO1xuXHRcdFx0fVxuXG5cdFx0XHQvLyBTZXQgdGhlIGRhdGEuLi5cblx0XHRcdHRoaXMuZWFjaCggZnVuY3Rpb24oKSB7XG5cblx0XHRcdFx0Ly8gV2UgYWx3YXlzIHN0b3JlIHRoZSBjYW1lbENhc2VkIGtleVxuXHRcdFx0XHRkYXRhVXNlci5zZXQoIHRoaXMsIGtleSwgdmFsdWUgKTtcblx0XHRcdH0gKTtcblx0XHR9LCBudWxsLCB2YWx1ZSwgYXJndW1lbnRzLmxlbmd0aCA+IDEsIG51bGwsIHRydWUgKTtcblx0fSxcblxuXHRyZW1vdmVEYXRhOiBmdW5jdGlvbigga2V5ICkge1xuXHRcdHJldHVybiB0aGlzLmVhY2goIGZ1bmN0aW9uKCkge1xuXHRcdFx0ZGF0YVVzZXIucmVtb3ZlKCB0aGlzLCBrZXkgKTtcblx0XHR9ICk7XG5cdH1cbn0gKTtcblxuXG5qUXVlcnkuZXh0ZW5kKCB7XG5cdHF1ZXVlOiBmdW5jdGlvbiggZWxlbSwgdHlwZSwgZGF0YSApIHtcblx0XHR2YXIgcXVldWU7XG5cblx0XHRpZiAoIGVsZW0gKSB7XG5cdFx0XHR0eXBlID0gKCB0eXBlIHx8IFwiZnhcIiApICsgXCJxdWV1ZVwiO1xuXHRcdFx0cXVldWUgPSBkYXRhUHJpdi5nZXQoIGVsZW0sIHR5cGUgKTtcblxuXHRcdFx0Ly8gU3BlZWQgdXAgZGVxdWV1ZSBieSBnZXR0aW5nIG91dCBxdWlja2x5IGlmIHRoaXMgaXMganVzdCBhIGxvb2t1cFxuXHRcdFx0aWYgKCBkYXRhICkge1xuXHRcdFx0XHRpZiAoICFxdWV1ZSB8fCBBcnJheS5pc0FycmF5KCBkYXRhICkgKSB7XG5cdFx0XHRcdFx0cXVldWUgPSBkYXRhUHJpdi5hY2Nlc3MoIGVsZW0sIHR5cGUsIGpRdWVyeS5tYWtlQXJyYXkoIGRhdGEgKSApO1xuXHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdHF1ZXVlLnB1c2goIGRhdGEgKTtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdFx0cmV0dXJuIHF1ZXVlIHx8IFtdO1xuXHRcdH1cblx0fSxcblxuXHRkZXF1ZXVlOiBmdW5jdGlvbiggZWxlbSwgdHlwZSApIHtcblx0XHR0eXBlID0gdHlwZSB8fCBcImZ4XCI7XG5cblx0XHR2YXIgcXVldWUgPSBqUXVlcnkucXVldWUoIGVsZW0sIHR5cGUgKSxcblx0XHRcdHN0YXJ0TGVuZ3RoID0gcXVldWUubGVuZ3RoLFxuXHRcdFx0Zm4gPSBxdWV1ZS5zaGlmdCgpLFxuXHRcdFx0aG9va3MgPSBqUXVlcnkuX3F1ZXVlSG9va3MoIGVsZW0sIHR5cGUgKSxcblx0XHRcdG5leHQgPSBmdW5jdGlvbigpIHtcblx0XHRcdFx0alF1ZXJ5LmRlcXVldWUoIGVsZW0sIHR5cGUgKTtcblx0XHRcdH07XG5cblx0XHQvLyBJZiB0aGUgZnggcXVldWUgaXMgZGVxdWV1ZWQsIGFsd2F5cyByZW1vdmUgdGhlIHByb2dyZXNzIHNlbnRpbmVsXG5cdFx0aWYgKCBmbiA9PT0gXCJpbnByb2dyZXNzXCIgKSB7XG5cdFx0XHRmbiA9IHF1ZXVlLnNoaWZ0KCk7XG5cdFx0XHRzdGFydExlbmd0aC0tO1xuXHRcdH1cblxuXHRcdGlmICggZm4gKSB7XG5cblx0XHRcdC8vIEFkZCBhIHByb2dyZXNzIHNlbnRpbmVsIHRvIHByZXZlbnQgdGhlIGZ4IHF1ZXVlIGZyb20gYmVpbmdcblx0XHRcdC8vIGF1dG9tYXRpY2FsbHkgZGVxdWV1ZWRcblx0XHRcdGlmICggdHlwZSA9PT0gXCJmeFwiICkge1xuXHRcdFx0XHRxdWV1ZS51bnNoaWZ0KCBcImlucHJvZ3Jlc3NcIiApO1xuXHRcdFx0fVxuXG5cdFx0XHQvLyBDbGVhciB1cCB0aGUgbGFzdCBxdWV1ZSBzdG9wIGZ1bmN0aW9uXG5cdFx0XHRkZWxldGUgaG9va3Muc3RvcDtcblx0XHRcdGZuLmNhbGwoIGVsZW0sIG5leHQsIGhvb2tzICk7XG5cdFx0fVxuXG5cdFx0aWYgKCAhc3RhcnRMZW5ndGggJiYgaG9va3MgKSB7XG5cdFx0XHRob29rcy5lbXB0eS5maXJlKCk7XG5cdFx0fVxuXHR9LFxuXG5cdC8vIE5vdCBwdWJsaWMgLSBnZW5lcmF0ZSBhIHF1ZXVlSG9va3Mgb2JqZWN0LCBvciByZXR1cm4gdGhlIGN1cnJlbnQgb25lXG5cdF9xdWV1ZUhvb2tzOiBmdW5jdGlvbiggZWxlbSwgdHlwZSApIHtcblx0XHR2YXIga2V5ID0gdHlwZSArIFwicXVldWVIb29rc1wiO1xuXHRcdHJldHVybiBkYXRhUHJpdi5nZXQoIGVsZW0sIGtleSApIHx8IGRhdGFQcml2LmFjY2VzcyggZWxlbSwga2V5LCB7XG5cdFx0XHRlbXB0eTogalF1ZXJ5LkNhbGxiYWNrcyggXCJvbmNlIG1lbW9yeVwiICkuYWRkKCBmdW5jdGlvbigpIHtcblx0XHRcdFx0ZGF0YVByaXYucmVtb3ZlKCBlbGVtLCBbIHR5cGUgKyBcInF1ZXVlXCIsIGtleSBdICk7XG5cdFx0XHR9IClcblx0XHR9ICk7XG5cdH1cbn0gKTtcblxualF1ZXJ5LmZuLmV4dGVuZCgge1xuXHRxdWV1ZTogZnVuY3Rpb24oIHR5cGUsIGRhdGEgKSB7XG5cdFx0dmFyIHNldHRlciA9IDI7XG5cblx0XHRpZiAoIHR5cGVvZiB0eXBlICE9PSBcInN0cmluZ1wiICkge1xuXHRcdFx0ZGF0YSA9IHR5cGU7XG5cdFx0XHR0eXBlID0gXCJmeFwiO1xuXHRcdFx0c2V0dGVyLS07XG5cdFx0fVxuXG5cdFx0aWYgKCBhcmd1bWVudHMubGVuZ3RoIDwgc2V0dGVyICkge1xuXHRcdFx0cmV0dXJuIGpRdWVyeS5xdWV1ZSggdGhpc1sgMCBdLCB0eXBlICk7XG5cdFx0fVxuXG5cdFx0cmV0dXJuIGRhdGEgPT09IHVuZGVmaW5lZCA/XG5cdFx0XHR0aGlzIDpcblx0XHRcdHRoaXMuZWFjaCggZnVuY3Rpb24oKSB7XG5cdFx0XHRcdHZhciBxdWV1ZSA9IGpRdWVyeS5xdWV1ZSggdGhpcywgdHlwZSwgZGF0YSApO1xuXG5cdFx0XHRcdC8vIEVuc3VyZSBhIGhvb2tzIGZvciB0aGlzIHF1ZXVlXG5cdFx0XHRcdGpRdWVyeS5fcXVldWVIb29rcyggdGhpcywgdHlwZSApO1xuXG5cdFx0XHRcdGlmICggdHlwZSA9PT0gXCJmeFwiICYmIHF1ZXVlWyAwIF0gIT09IFwiaW5wcm9ncmVzc1wiICkge1xuXHRcdFx0XHRcdGpRdWVyeS5kZXF1ZXVlKCB0aGlzLCB0eXBlICk7XG5cdFx0XHRcdH1cblx0XHRcdH0gKTtcblx0fSxcblx0ZGVxdWV1ZTogZnVuY3Rpb24oIHR5cGUgKSB7XG5cdFx0cmV0dXJuIHRoaXMuZWFjaCggZnVuY3Rpb24oKSB7XG5cdFx0XHRqUXVlcnkuZGVxdWV1ZSggdGhpcywgdHlwZSApO1xuXHRcdH0gKTtcblx0fSxcblx0Y2xlYXJRdWV1ZTogZnVuY3Rpb24oIHR5cGUgKSB7XG5cdFx0cmV0dXJuIHRoaXMucXVldWUoIHR5cGUgfHwgXCJmeFwiLCBbXSApO1xuXHR9LFxuXG5cdC8vIEdldCBhIHByb21pc2UgcmVzb2x2ZWQgd2hlbiBxdWV1ZXMgb2YgYSBjZXJ0YWluIHR5cGVcblx0Ly8gYXJlIGVtcHRpZWQgKGZ4IGlzIHRoZSB0eXBlIGJ5IGRlZmF1bHQpXG5cdHByb21pc2U6IGZ1bmN0aW9uKCB0eXBlLCBvYmogKSB7XG5cdFx0dmFyIHRtcCxcblx0XHRcdGNvdW50ID0gMSxcblx0XHRcdGRlZmVyID0galF1ZXJ5LkRlZmVycmVkKCksXG5cdFx0XHRlbGVtZW50cyA9IHRoaXMsXG5cdFx0XHRpID0gdGhpcy5sZW5ndGgsXG5cdFx0XHRyZXNvbHZlID0gZnVuY3Rpb24oKSB7XG5cdFx0XHRcdGlmICggISggLS1jb3VudCApICkge1xuXHRcdFx0XHRcdGRlZmVyLnJlc29sdmVXaXRoKCBlbGVtZW50cywgWyBlbGVtZW50cyBdICk7XG5cdFx0XHRcdH1cblx0XHRcdH07XG5cblx0XHRpZiAoIHR5cGVvZiB0eXBlICE9PSBcInN0cmluZ1wiICkge1xuXHRcdFx0b2JqID0gdHlwZTtcblx0XHRcdHR5cGUgPSB1bmRlZmluZWQ7XG5cdFx0fVxuXHRcdHR5cGUgPSB0eXBlIHx8IFwiZnhcIjtcblxuXHRcdHdoaWxlICggaS0tICkge1xuXHRcdFx0dG1wID0gZGF0YVByaXYuZ2V0KCBlbGVtZW50c1sgaSBdLCB0eXBlICsgXCJxdWV1ZUhvb2tzXCIgKTtcblx0XHRcdGlmICggdG1wICYmIHRtcC5lbXB0eSApIHtcblx0XHRcdFx0Y291bnQrKztcblx0XHRcdFx0dG1wLmVtcHR5LmFkZCggcmVzb2x2ZSApO1xuXHRcdFx0fVxuXHRcdH1cblx0XHRyZXNvbHZlKCk7XG5cdFx0cmV0dXJuIGRlZmVyLnByb21pc2UoIG9iaiApO1xuXHR9XG59ICk7XG52YXIgcG51bSA9ICggL1srLV0/KD86XFxkKlxcLnwpXFxkKyg/OltlRV1bKy1dP1xcZCt8KS8gKS5zb3VyY2U7XG5cbnZhciByY3NzTnVtID0gbmV3IFJlZ0V4cCggXCJeKD86KFsrLV0pPXwpKFwiICsgcG51bSArIFwiKShbYS16JV0qKSRcIiwgXCJpXCIgKTtcblxuXG52YXIgY3NzRXhwYW5kID0gWyBcIlRvcFwiLCBcIlJpZ2h0XCIsIFwiQm90dG9tXCIsIFwiTGVmdFwiIF07XG5cbnZhciBkb2N1bWVudEVsZW1lbnQgPSBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQ7XG5cblxuXG5cdHZhciBpc0F0dGFjaGVkID0gZnVuY3Rpb24oIGVsZW0gKSB7XG5cdFx0XHRyZXR1cm4galF1ZXJ5LmNvbnRhaW5zKCBlbGVtLm93bmVyRG9jdW1lbnQsIGVsZW0gKTtcblx0XHR9LFxuXHRcdGNvbXBvc2VkID0geyBjb21wb3NlZDogdHJ1ZSB9O1xuXG5cdC8vIFN1cHBvcnQ6IElFIDkgLSAxMSssIEVkZ2UgMTIgLSAxOCssIGlPUyAxMC4wIC0gMTAuMiBvbmx5XG5cdC8vIENoZWNrIGF0dGFjaG1lbnQgYWNyb3NzIHNoYWRvdyBET00gYm91bmRhcmllcyB3aGVuIHBvc3NpYmxlIChnaC0zNTA0KVxuXHQvLyBTdXBwb3J0OiBpT1MgMTAuMC0xMC4yIG9ubHlcblx0Ly8gRWFybHkgaU9TIDEwIHZlcnNpb25zIHN1cHBvcnQgYGF0dGFjaFNoYWRvd2AgYnV0IG5vdCBgZ2V0Um9vdE5vZGVgLFxuXHQvLyBsZWFkaW5nIHRvIGVycm9ycy4gV2UgbmVlZCB0byBjaGVjayBmb3IgYGdldFJvb3ROb2RlYC5cblx0aWYgKCBkb2N1bWVudEVsZW1lbnQuZ2V0Um9vdE5vZGUgKSB7XG5cdFx0aXNBdHRhY2hlZCA9IGZ1bmN0aW9uKCBlbGVtICkge1xuXHRcdFx0cmV0dXJuIGpRdWVyeS5jb250YWlucyggZWxlbS5vd25lckRvY3VtZW50LCBlbGVtICkgfHxcblx0XHRcdFx0ZWxlbS5nZXRSb290Tm9kZSggY29tcG9zZWQgKSA9PT0gZWxlbS5vd25lckRvY3VtZW50O1xuXHRcdH07XG5cdH1cbnZhciBpc0hpZGRlbldpdGhpblRyZWUgPSBmdW5jdGlvbiggZWxlbSwgZWwgKSB7XG5cblx0XHQvLyBpc0hpZGRlbldpdGhpblRyZWUgbWlnaHQgYmUgY2FsbGVkIGZyb20galF1ZXJ5I2ZpbHRlciBmdW5jdGlvbjtcblx0XHQvLyBpbiB0aGF0IGNhc2UsIGVsZW1lbnQgd2lsbCBiZSBzZWNvbmQgYXJndW1lbnRcblx0XHRlbGVtID0gZWwgfHwgZWxlbTtcblxuXHRcdC8vIElubGluZSBzdHlsZSB0cnVtcHMgYWxsXG5cdFx0cmV0dXJuIGVsZW0uc3R5bGUuZGlzcGxheSA9PT0gXCJub25lXCIgfHxcblx0XHRcdGVsZW0uc3R5bGUuZGlzcGxheSA9PT0gXCJcIiAmJlxuXG5cdFx0XHQvLyBPdGhlcndpc2UsIGNoZWNrIGNvbXB1dGVkIHN0eWxlXG5cdFx0XHQvLyBTdXBwb3J0OiBGaXJlZm94IDw9NDMgLSA0NVxuXHRcdFx0Ly8gRGlzY29ubmVjdGVkIGVsZW1lbnRzIGNhbiBoYXZlIGNvbXB1dGVkIGRpc3BsYXk6IG5vbmUsIHNvIGZpcnN0IGNvbmZpcm0gdGhhdCBlbGVtIGlzXG5cdFx0XHQvLyBpbiB0aGUgZG9jdW1lbnQuXG5cdFx0XHRpc0F0dGFjaGVkKCBlbGVtICkgJiZcblxuXHRcdFx0alF1ZXJ5LmNzcyggZWxlbSwgXCJkaXNwbGF5XCIgKSA9PT0gXCJub25lXCI7XG5cdH07XG5cblxuXG5mdW5jdGlvbiBhZGp1c3RDU1MoIGVsZW0sIHByb3AsIHZhbHVlUGFydHMsIHR3ZWVuICkge1xuXHR2YXIgYWRqdXN0ZWQsIHNjYWxlLFxuXHRcdG1heEl0ZXJhdGlvbnMgPSAyMCxcblx0XHRjdXJyZW50VmFsdWUgPSB0d2VlbiA/XG5cdFx0XHRmdW5jdGlvbigpIHtcblx0XHRcdFx0cmV0dXJuIHR3ZWVuLmN1cigpO1xuXHRcdFx0fSA6XG5cdFx0XHRmdW5jdGlvbigpIHtcblx0XHRcdFx0cmV0dXJuIGpRdWVyeS5jc3MoIGVsZW0sIHByb3AsIFwiXCIgKTtcblx0XHRcdH0sXG5cdFx0aW5pdGlhbCA9IGN1cnJlbnRWYWx1ZSgpLFxuXHRcdHVuaXQgPSB2YWx1ZVBhcnRzICYmIHZhbHVlUGFydHNbIDMgXSB8fCAoIGpRdWVyeS5jc3NOdW1iZXJbIHByb3AgXSA/IFwiXCIgOiBcInB4XCIgKSxcblxuXHRcdC8vIFN0YXJ0aW5nIHZhbHVlIGNvbXB1dGF0aW9uIGlzIHJlcXVpcmVkIGZvciBwb3RlbnRpYWwgdW5pdCBtaXNtYXRjaGVzXG5cdFx0aW5pdGlhbEluVW5pdCA9IGVsZW0ubm9kZVR5cGUgJiZcblx0XHRcdCggalF1ZXJ5LmNzc051bWJlclsgcHJvcCBdIHx8IHVuaXQgIT09IFwicHhcIiAmJiAraW5pdGlhbCApICYmXG5cdFx0XHRyY3NzTnVtLmV4ZWMoIGpRdWVyeS5jc3MoIGVsZW0sIHByb3AgKSApO1xuXG5cdGlmICggaW5pdGlhbEluVW5pdCAmJiBpbml0aWFsSW5Vbml0WyAzIF0gIT09IHVuaXQgKSB7XG5cblx0XHQvLyBTdXBwb3J0OiBGaXJlZm94IDw9NTRcblx0XHQvLyBIYWx2ZSB0aGUgaXRlcmF0aW9uIHRhcmdldCB2YWx1ZSB0byBwcmV2ZW50IGludGVyZmVyZW5jZSBmcm9tIENTUyB1cHBlciBib3VuZHMgKGdoLTIxNDQpXG5cdFx0aW5pdGlhbCA9IGluaXRpYWwgLyAyO1xuXG5cdFx0Ly8gVHJ1c3QgdW5pdHMgcmVwb3J0ZWQgYnkgalF1ZXJ5LmNzc1xuXHRcdHVuaXQgPSB1bml0IHx8IGluaXRpYWxJblVuaXRbIDMgXTtcblxuXHRcdC8vIEl0ZXJhdGl2ZWx5IGFwcHJveGltYXRlIGZyb20gYSBub256ZXJvIHN0YXJ0aW5nIHBvaW50XG5cdFx0aW5pdGlhbEluVW5pdCA9ICtpbml0aWFsIHx8IDE7XG5cblx0XHR3aGlsZSAoIG1heEl0ZXJhdGlvbnMtLSApIHtcblxuXHRcdFx0Ly8gRXZhbHVhdGUgYW5kIHVwZGF0ZSBvdXIgYmVzdCBndWVzcyAoZG91YmxpbmcgZ3Vlc3NlcyB0aGF0IHplcm8gb3V0KS5cblx0XHRcdC8vIEZpbmlzaCBpZiB0aGUgc2NhbGUgZXF1YWxzIG9yIGNyb3NzZXMgMSAobWFraW5nIHRoZSBvbGQqbmV3IHByb2R1Y3Qgbm9uLXBvc2l0aXZlKS5cblx0XHRcdGpRdWVyeS5zdHlsZSggZWxlbSwgcHJvcCwgaW5pdGlhbEluVW5pdCArIHVuaXQgKTtcblx0XHRcdGlmICggKCAxIC0gc2NhbGUgKSAqICggMSAtICggc2NhbGUgPSBjdXJyZW50VmFsdWUoKSAvIGluaXRpYWwgfHwgMC41ICkgKSA8PSAwICkge1xuXHRcdFx0XHRtYXhJdGVyYXRpb25zID0gMDtcblx0XHRcdH1cblx0XHRcdGluaXRpYWxJblVuaXQgPSBpbml0aWFsSW5Vbml0IC8gc2NhbGU7XG5cblx0XHR9XG5cblx0XHRpbml0aWFsSW5Vbml0ID0gaW5pdGlhbEluVW5pdCAqIDI7XG5cdFx0alF1ZXJ5LnN0eWxlKCBlbGVtLCBwcm9wLCBpbml0aWFsSW5Vbml0ICsgdW5pdCApO1xuXG5cdFx0Ly8gTWFrZSBzdXJlIHdlIHVwZGF0ZSB0aGUgdHdlZW4gcHJvcGVydGllcyBsYXRlciBvblxuXHRcdHZhbHVlUGFydHMgPSB2YWx1ZVBhcnRzIHx8IFtdO1xuXHR9XG5cblx0aWYgKCB2YWx1ZVBhcnRzICkge1xuXHRcdGluaXRpYWxJblVuaXQgPSAraW5pdGlhbEluVW5pdCB8fCAraW5pdGlhbCB8fCAwO1xuXG5cdFx0Ly8gQXBwbHkgcmVsYXRpdmUgb2Zmc2V0ICgrPS8tPSkgaWYgc3BlY2lmaWVkXG5cdFx0YWRqdXN0ZWQgPSB2YWx1ZVBhcnRzWyAxIF0gP1xuXHRcdFx0aW5pdGlhbEluVW5pdCArICggdmFsdWVQYXJ0c1sgMSBdICsgMSApICogdmFsdWVQYXJ0c1sgMiBdIDpcblx0XHRcdCt2YWx1ZVBhcnRzWyAyIF07XG5cdFx0aWYgKCB0d2VlbiApIHtcblx0XHRcdHR3ZWVuLnVuaXQgPSB1bml0O1xuXHRcdFx0dHdlZW4uc3RhcnQgPSBpbml0aWFsSW5Vbml0O1xuXHRcdFx0dHdlZW4uZW5kID0gYWRqdXN0ZWQ7XG5cdFx0fVxuXHR9XG5cdHJldHVybiBhZGp1c3RlZDtcbn1cblxuXG52YXIgZGVmYXVsdERpc3BsYXlNYXAgPSB7fTtcblxuZnVuY3Rpb24gZ2V0RGVmYXVsdERpc3BsYXkoIGVsZW0gKSB7XG5cdHZhciB0ZW1wLFxuXHRcdGRvYyA9IGVsZW0ub3duZXJEb2N1bWVudCxcblx0XHRub2RlTmFtZSA9IGVsZW0ubm9kZU5hbWUsXG5cdFx0ZGlzcGxheSA9IGRlZmF1bHREaXNwbGF5TWFwWyBub2RlTmFtZSBdO1xuXG5cdGlmICggZGlzcGxheSApIHtcblx0XHRyZXR1cm4gZGlzcGxheTtcblx0fVxuXG5cdHRlbXAgPSBkb2MuYm9keS5hcHBlbmRDaGlsZCggZG9jLmNyZWF0ZUVsZW1lbnQoIG5vZGVOYW1lICkgKTtcblx0ZGlzcGxheSA9IGpRdWVyeS5jc3MoIHRlbXAsIFwiZGlzcGxheVwiICk7XG5cblx0dGVtcC5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKCB0ZW1wICk7XG5cblx0aWYgKCBkaXNwbGF5ID09PSBcIm5vbmVcIiApIHtcblx0XHRkaXNwbGF5ID0gXCJibG9ja1wiO1xuXHR9XG5cdGRlZmF1bHREaXNwbGF5TWFwWyBub2RlTmFtZSBdID0gZGlzcGxheTtcblxuXHRyZXR1cm4gZGlzcGxheTtcbn1cblxuZnVuY3Rpb24gc2hvd0hpZGUoIGVsZW1lbnRzLCBzaG93ICkge1xuXHR2YXIgZGlzcGxheSwgZWxlbSxcblx0XHR2YWx1ZXMgPSBbXSxcblx0XHRpbmRleCA9IDAsXG5cdFx0bGVuZ3RoID0gZWxlbWVudHMubGVuZ3RoO1xuXG5cdC8vIERldGVybWluZSBuZXcgZGlzcGxheSB2YWx1ZSBmb3IgZWxlbWVudHMgdGhhdCBuZWVkIHRvIGNoYW5nZVxuXHRmb3IgKCA7IGluZGV4IDwgbGVuZ3RoOyBpbmRleCsrICkge1xuXHRcdGVsZW0gPSBlbGVtZW50c1sgaW5kZXggXTtcblx0XHRpZiAoICFlbGVtLnN0eWxlICkge1xuXHRcdFx0Y29udGludWU7XG5cdFx0fVxuXG5cdFx0ZGlzcGxheSA9IGVsZW0uc3R5bGUuZGlzcGxheTtcblx0XHRpZiAoIHNob3cgKSB7XG5cblx0XHRcdC8vIFNpbmNlIHdlIGZvcmNlIHZpc2liaWxpdHkgdXBvbiBjYXNjYWRlLWhpZGRlbiBlbGVtZW50cywgYW4gaW1tZWRpYXRlIChhbmQgc2xvdylcblx0XHRcdC8vIGNoZWNrIGlzIHJlcXVpcmVkIGluIHRoaXMgZmlyc3QgbG9vcCB1bmxlc3Mgd2UgaGF2ZSBhIG5vbmVtcHR5IGRpc3BsYXkgdmFsdWUgKGVpdGhlclxuXHRcdFx0Ly8gaW5saW5lIG9yIGFib3V0LXRvLWJlLXJlc3RvcmVkKVxuXHRcdFx0aWYgKCBkaXNwbGF5ID09PSBcIm5vbmVcIiApIHtcblx0XHRcdFx0dmFsdWVzWyBpbmRleCBdID0gZGF0YVByaXYuZ2V0KCBlbGVtLCBcImRpc3BsYXlcIiApIHx8IG51bGw7XG5cdFx0XHRcdGlmICggIXZhbHVlc1sgaW5kZXggXSApIHtcblx0XHRcdFx0XHRlbGVtLnN0eWxlLmRpc3BsYXkgPSBcIlwiO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0XHRpZiAoIGVsZW0uc3R5bGUuZGlzcGxheSA9PT0gXCJcIiAmJiBpc0hpZGRlbldpdGhpblRyZWUoIGVsZW0gKSApIHtcblx0XHRcdFx0dmFsdWVzWyBpbmRleCBdID0gZ2V0RGVmYXVsdERpc3BsYXkoIGVsZW0gKTtcblx0XHRcdH1cblx0XHR9IGVsc2Uge1xuXHRcdFx0aWYgKCBkaXNwbGF5ICE9PSBcIm5vbmVcIiApIHtcblx0XHRcdFx0dmFsdWVzWyBpbmRleCBdID0gXCJub25lXCI7XG5cblx0XHRcdFx0Ly8gUmVtZW1iZXIgd2hhdCB3ZSdyZSBvdmVyd3JpdGluZ1xuXHRcdFx0XHRkYXRhUHJpdi5zZXQoIGVsZW0sIFwiZGlzcGxheVwiLCBkaXNwbGF5ICk7XG5cdFx0XHR9XG5cdFx0fVxuXHR9XG5cblx0Ly8gU2V0IHRoZSBkaXNwbGF5IG9mIHRoZSBlbGVtZW50cyBpbiBhIHNlY29uZCBsb29wIHRvIGF2b2lkIGNvbnN0YW50IHJlZmxvd1xuXHRmb3IgKCBpbmRleCA9IDA7IGluZGV4IDwgbGVuZ3RoOyBpbmRleCsrICkge1xuXHRcdGlmICggdmFsdWVzWyBpbmRleCBdICE9IG51bGwgKSB7XG5cdFx0XHRlbGVtZW50c1sgaW5kZXggXS5zdHlsZS5kaXNwbGF5ID0gdmFsdWVzWyBpbmRleCBdO1xuXHRcdH1cblx0fVxuXG5cdHJldHVybiBlbGVtZW50cztcbn1cblxualF1ZXJ5LmZuLmV4dGVuZCgge1xuXHRzaG93OiBmdW5jdGlvbigpIHtcblx0XHRyZXR1cm4gc2hvd0hpZGUoIHRoaXMsIHRydWUgKTtcblx0fSxcblx0aGlkZTogZnVuY3Rpb24oKSB7XG5cdFx0cmV0dXJuIHNob3dIaWRlKCB0aGlzICk7XG5cdH0sXG5cdHRvZ2dsZTogZnVuY3Rpb24oIHN0YXRlICkge1xuXHRcdGlmICggdHlwZW9mIHN0YXRlID09PSBcImJvb2xlYW5cIiApIHtcblx0XHRcdHJldHVybiBzdGF0ZSA/IHRoaXMuc2hvdygpIDogdGhpcy5oaWRlKCk7XG5cdFx0fVxuXG5cdFx0cmV0dXJuIHRoaXMuZWFjaCggZnVuY3Rpb24oKSB7XG5cdFx0XHRpZiAoIGlzSGlkZGVuV2l0aGluVHJlZSggdGhpcyApICkge1xuXHRcdFx0XHRqUXVlcnkoIHRoaXMgKS5zaG93KCk7XG5cdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRqUXVlcnkoIHRoaXMgKS5oaWRlKCk7XG5cdFx0XHR9XG5cdFx0fSApO1xuXHR9XG59ICk7XG52YXIgcmNoZWNrYWJsZVR5cGUgPSAoIC9eKD86Y2hlY2tib3h8cmFkaW8pJC9pICk7XG5cbnZhciBydGFnTmFtZSA9ICggLzwoW2Etel1bXlxcL1xcMD5cXHgyMFxcdFxcclxcblxcZl0qKS9pICk7XG5cbnZhciByc2NyaXB0VHlwZSA9ICggL14kfF5tb2R1bGUkfFxcLyg/OmphdmF8ZWNtYSlzY3JpcHQvaSApO1xuXG5cblxuKCBmdW5jdGlvbigpIHtcblx0dmFyIGZyYWdtZW50ID0gZG9jdW1lbnQuY3JlYXRlRG9jdW1lbnRGcmFnbWVudCgpLFxuXHRcdGRpdiA9IGZyYWdtZW50LmFwcGVuZENoaWxkKCBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCBcImRpdlwiICkgKSxcblx0XHRpbnB1dCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoIFwiaW5wdXRcIiApO1xuXG5cdC8vIFN1cHBvcnQ6IEFuZHJvaWQgNC4wIC0gNC4zIG9ubHlcblx0Ly8gQ2hlY2sgc3RhdGUgbG9zdCBpZiB0aGUgbmFtZSBpcyBzZXQgKCMxMTIxNylcblx0Ly8gU3VwcG9ydDogV2luZG93cyBXZWIgQXBwcyAoV1dBKVxuXHQvLyBgbmFtZWAgYW5kIGB0eXBlYCBtdXN0IHVzZSAuc2V0QXR0cmlidXRlIGZvciBXV0EgKCMxNDkwMSlcblx0aW5wdXQuc2V0QXR0cmlidXRlKCBcInR5cGVcIiwgXCJyYWRpb1wiICk7XG5cdGlucHV0LnNldEF0dHJpYnV0ZSggXCJjaGVja2VkXCIsIFwiY2hlY2tlZFwiICk7XG5cdGlucHV0LnNldEF0dHJpYnV0ZSggXCJuYW1lXCIsIFwidFwiICk7XG5cblx0ZGl2LmFwcGVuZENoaWxkKCBpbnB1dCApO1xuXG5cdC8vIFN1cHBvcnQ6IEFuZHJvaWQgPD00LjEgb25seVxuXHQvLyBPbGRlciBXZWJLaXQgZG9lc24ndCBjbG9uZSBjaGVja2VkIHN0YXRlIGNvcnJlY3RseSBpbiBmcmFnbWVudHNcblx0c3VwcG9ydC5jaGVja0Nsb25lID0gZGl2LmNsb25lTm9kZSggdHJ1ZSApLmNsb25lTm9kZSggdHJ1ZSApLmxhc3RDaGlsZC5jaGVja2VkO1xuXG5cdC8vIFN1cHBvcnQ6IElFIDw9MTEgb25seVxuXHQvLyBNYWtlIHN1cmUgdGV4dGFyZWEgKGFuZCBjaGVja2JveCkgZGVmYXVsdFZhbHVlIGlzIHByb3Blcmx5IGNsb25lZFxuXHRkaXYuaW5uZXJIVE1MID0gXCI8dGV4dGFyZWE+eDwvdGV4dGFyZWE+XCI7XG5cdHN1cHBvcnQubm9DbG9uZUNoZWNrZWQgPSAhIWRpdi5jbG9uZU5vZGUoIHRydWUgKS5sYXN0Q2hpbGQuZGVmYXVsdFZhbHVlO1xuXG5cdC8vIFN1cHBvcnQ6IElFIDw9OSBvbmx5XG5cdC8vIElFIDw9OSByZXBsYWNlcyA8b3B0aW9uPiB0YWdzIHdpdGggdGhlaXIgY29udGVudHMgd2hlbiBpbnNlcnRlZCBvdXRzaWRlIG9mXG5cdC8vIHRoZSBzZWxlY3QgZWxlbWVudC5cblx0ZGl2LmlubmVySFRNTCA9IFwiPG9wdGlvbj48L29wdGlvbj5cIjtcblx0c3VwcG9ydC5vcHRpb24gPSAhIWRpdi5sYXN0Q2hpbGQ7XG59ICkoKTtcblxuXG4vLyBXZSBoYXZlIHRvIGNsb3NlIHRoZXNlIHRhZ3MgdG8gc3VwcG9ydCBYSFRNTCAoIzEzMjAwKVxudmFyIHdyYXBNYXAgPSB7XG5cblx0Ly8gWEhUTUwgcGFyc2VycyBkbyBub3QgbWFnaWNhbGx5IGluc2VydCBlbGVtZW50cyBpbiB0aGVcblx0Ly8gc2FtZSB3YXkgdGhhdCB0YWcgc291cCBwYXJzZXJzIGRvLiBTbyB3ZSBjYW5ub3Qgc2hvcnRlblxuXHQvLyB0aGlzIGJ5IG9taXR0aW5nIDx0Ym9keT4gb3Igb3RoZXIgcmVxdWlyZWQgZWxlbWVudHMuXG5cdHRoZWFkOiBbIDEsIFwiPHRhYmxlPlwiLCBcIjwvdGFibGU+XCIgXSxcblx0Y29sOiBbIDIsIFwiPHRhYmxlPjxjb2xncm91cD5cIiwgXCI8L2NvbGdyb3VwPjwvdGFibGU+XCIgXSxcblx0dHI6IFsgMiwgXCI8dGFibGU+PHRib2R5PlwiLCBcIjwvdGJvZHk+PC90YWJsZT5cIiBdLFxuXHR0ZDogWyAzLCBcIjx0YWJsZT48dGJvZHk+PHRyPlwiLCBcIjwvdHI+PC90Ym9keT48L3RhYmxlPlwiIF0sXG5cblx0X2RlZmF1bHQ6IFsgMCwgXCJcIiwgXCJcIiBdXG59O1xuXG53cmFwTWFwLnRib2R5ID0gd3JhcE1hcC50Zm9vdCA9IHdyYXBNYXAuY29sZ3JvdXAgPSB3cmFwTWFwLmNhcHRpb24gPSB3cmFwTWFwLnRoZWFkO1xud3JhcE1hcC50aCA9IHdyYXBNYXAudGQ7XG5cbi8vIFN1cHBvcnQ6IElFIDw9OSBvbmx5XG5pZiAoICFzdXBwb3J0Lm9wdGlvbiApIHtcblx0d3JhcE1hcC5vcHRncm91cCA9IHdyYXBNYXAub3B0aW9uID0gWyAxLCBcIjxzZWxlY3QgbXVsdGlwbGU9J211bHRpcGxlJz5cIiwgXCI8L3NlbGVjdD5cIiBdO1xufVxuXG5cbmZ1bmN0aW9uIGdldEFsbCggY29udGV4dCwgdGFnICkge1xuXG5cdC8vIFN1cHBvcnQ6IElFIDw9OSAtIDExIG9ubHlcblx0Ly8gVXNlIHR5cGVvZiB0byBhdm9pZCB6ZXJvLWFyZ3VtZW50IG1ldGhvZCBpbnZvY2F0aW9uIG9uIGhvc3Qgb2JqZWN0cyAoIzE1MTUxKVxuXHR2YXIgcmV0O1xuXG5cdGlmICggdHlwZW9mIGNvbnRleHQuZ2V0RWxlbWVudHNCeVRhZ05hbWUgIT09IFwidW5kZWZpbmVkXCIgKSB7XG5cdFx0cmV0ID0gY29udGV4dC5nZXRFbGVtZW50c0J5VGFnTmFtZSggdGFnIHx8IFwiKlwiICk7XG5cblx0fSBlbHNlIGlmICggdHlwZW9mIGNvbnRleHQucXVlcnlTZWxlY3RvckFsbCAhPT0gXCJ1bmRlZmluZWRcIiApIHtcblx0XHRyZXQgPSBjb250ZXh0LnF1ZXJ5U2VsZWN0b3JBbGwoIHRhZyB8fCBcIipcIiApO1xuXG5cdH0gZWxzZSB7XG5cdFx0cmV0ID0gW107XG5cdH1cblxuXHRpZiAoIHRhZyA9PT0gdW5kZWZpbmVkIHx8IHRhZyAmJiBub2RlTmFtZSggY29udGV4dCwgdGFnICkgKSB7XG5cdFx0cmV0dXJuIGpRdWVyeS5tZXJnZSggWyBjb250ZXh0IF0sIHJldCApO1xuXHR9XG5cblx0cmV0dXJuIHJldDtcbn1cblxuXG4vLyBNYXJrIHNjcmlwdHMgYXMgaGF2aW5nIGFscmVhZHkgYmVlbiBldmFsdWF0ZWRcbmZ1bmN0aW9uIHNldEdsb2JhbEV2YWwoIGVsZW1zLCByZWZFbGVtZW50cyApIHtcblx0dmFyIGkgPSAwLFxuXHRcdGwgPSBlbGVtcy5sZW5ndGg7XG5cblx0Zm9yICggOyBpIDwgbDsgaSsrICkge1xuXHRcdGRhdGFQcml2LnNldChcblx0XHRcdGVsZW1zWyBpIF0sXG5cdFx0XHRcImdsb2JhbEV2YWxcIixcblx0XHRcdCFyZWZFbGVtZW50cyB8fCBkYXRhUHJpdi5nZXQoIHJlZkVsZW1lbnRzWyBpIF0sIFwiZ2xvYmFsRXZhbFwiIClcblx0XHQpO1xuXHR9XG59XG5cblxudmFyIHJodG1sID0gLzx8JiM/XFx3KzsvO1xuXG5mdW5jdGlvbiBidWlsZEZyYWdtZW50KCBlbGVtcywgY29udGV4dCwgc2NyaXB0cywgc2VsZWN0aW9uLCBpZ25vcmVkICkge1xuXHR2YXIgZWxlbSwgdG1wLCB0YWcsIHdyYXAsIGF0dGFjaGVkLCBqLFxuXHRcdGZyYWdtZW50ID0gY29udGV4dC5jcmVhdGVEb2N1bWVudEZyYWdtZW50KCksXG5cdFx0bm9kZXMgPSBbXSxcblx0XHRpID0gMCxcblx0XHRsID0gZWxlbXMubGVuZ3RoO1xuXG5cdGZvciAoIDsgaSA8IGw7IGkrKyApIHtcblx0XHRlbGVtID0gZWxlbXNbIGkgXTtcblxuXHRcdGlmICggZWxlbSB8fCBlbGVtID09PSAwICkge1xuXG5cdFx0XHQvLyBBZGQgbm9kZXMgZGlyZWN0bHlcblx0XHRcdGlmICggdG9UeXBlKCBlbGVtICkgPT09IFwib2JqZWN0XCIgKSB7XG5cblx0XHRcdFx0Ly8gU3VwcG9ydDogQW5kcm9pZCA8PTQuMCBvbmx5LCBQaGFudG9tSlMgMSBvbmx5XG5cdFx0XHRcdC8vIHB1c2guYXBwbHkoXywgYXJyYXlsaWtlKSB0aHJvd3Mgb24gYW5jaWVudCBXZWJLaXRcblx0XHRcdFx0alF1ZXJ5Lm1lcmdlKCBub2RlcywgZWxlbS5ub2RlVHlwZSA/IFsgZWxlbSBdIDogZWxlbSApO1xuXG5cdFx0XHQvLyBDb252ZXJ0IG5vbi1odG1sIGludG8gYSB0ZXh0IG5vZGVcblx0XHRcdH0gZWxzZSBpZiAoICFyaHRtbC50ZXN0KCBlbGVtICkgKSB7XG5cdFx0XHRcdG5vZGVzLnB1c2goIGNvbnRleHQuY3JlYXRlVGV4dE5vZGUoIGVsZW0gKSApO1xuXG5cdFx0XHQvLyBDb252ZXJ0IGh0bWwgaW50byBET00gbm9kZXNcblx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdHRtcCA9IHRtcCB8fCBmcmFnbWVudC5hcHBlbmRDaGlsZCggY29udGV4dC5jcmVhdGVFbGVtZW50KCBcImRpdlwiICkgKTtcblxuXHRcdFx0XHQvLyBEZXNlcmlhbGl6ZSBhIHN0YW5kYXJkIHJlcHJlc2VudGF0aW9uXG5cdFx0XHRcdHRhZyA9ICggcnRhZ05hbWUuZXhlYyggZWxlbSApIHx8IFsgXCJcIiwgXCJcIiBdIClbIDEgXS50b0xvd2VyQ2FzZSgpO1xuXHRcdFx0XHR3cmFwID0gd3JhcE1hcFsgdGFnIF0gfHwgd3JhcE1hcC5fZGVmYXVsdDtcblx0XHRcdFx0dG1wLmlubmVySFRNTCA9IHdyYXBbIDEgXSArIGpRdWVyeS5odG1sUHJlZmlsdGVyKCBlbGVtICkgKyB3cmFwWyAyIF07XG5cblx0XHRcdFx0Ly8gRGVzY2VuZCB0aHJvdWdoIHdyYXBwZXJzIHRvIHRoZSByaWdodCBjb250ZW50XG5cdFx0XHRcdGogPSB3cmFwWyAwIF07XG5cdFx0XHRcdHdoaWxlICggai0tICkge1xuXHRcdFx0XHRcdHRtcCA9IHRtcC5sYXN0Q2hpbGQ7XG5cdFx0XHRcdH1cblxuXHRcdFx0XHQvLyBTdXBwb3J0OiBBbmRyb2lkIDw9NC4wIG9ubHksIFBoYW50b21KUyAxIG9ubHlcblx0XHRcdFx0Ly8gcHVzaC5hcHBseShfLCBhcnJheWxpa2UpIHRocm93cyBvbiBhbmNpZW50IFdlYktpdFxuXHRcdFx0XHRqUXVlcnkubWVyZ2UoIG5vZGVzLCB0bXAuY2hpbGROb2RlcyApO1xuXG5cdFx0XHRcdC8vIFJlbWVtYmVyIHRoZSB0b3AtbGV2ZWwgY29udGFpbmVyXG5cdFx0XHRcdHRtcCA9IGZyYWdtZW50LmZpcnN0Q2hpbGQ7XG5cblx0XHRcdFx0Ly8gRW5zdXJlIHRoZSBjcmVhdGVkIG5vZGVzIGFyZSBvcnBoYW5lZCAoIzEyMzkyKVxuXHRcdFx0XHR0bXAudGV4dENvbnRlbnQgPSBcIlwiO1xuXHRcdFx0fVxuXHRcdH1cblx0fVxuXG5cdC8vIFJlbW92ZSB3cmFwcGVyIGZyb20gZnJhZ21lbnRcblx0ZnJhZ21lbnQudGV4dENvbnRlbnQgPSBcIlwiO1xuXG5cdGkgPSAwO1xuXHR3aGlsZSAoICggZWxlbSA9IG5vZGVzWyBpKysgXSApICkge1xuXG5cdFx0Ly8gU2tpcCBlbGVtZW50cyBhbHJlYWR5IGluIHRoZSBjb250ZXh0IGNvbGxlY3Rpb24gKHRyYWMtNDA4Nylcblx0XHRpZiAoIHNlbGVjdGlvbiAmJiBqUXVlcnkuaW5BcnJheSggZWxlbSwgc2VsZWN0aW9uICkgPiAtMSApIHtcblx0XHRcdGlmICggaWdub3JlZCApIHtcblx0XHRcdFx0aWdub3JlZC5wdXNoKCBlbGVtICk7XG5cdFx0XHR9XG5cdFx0XHRjb250aW51ZTtcblx0XHR9XG5cblx0XHRhdHRhY2hlZCA9IGlzQXR0YWNoZWQoIGVsZW0gKTtcblxuXHRcdC8vIEFwcGVuZCB0byBmcmFnbWVudFxuXHRcdHRtcCA9IGdldEFsbCggZnJhZ21lbnQuYXBwZW5kQ2hpbGQoIGVsZW0gKSwgXCJzY3JpcHRcIiApO1xuXG5cdFx0Ly8gUHJlc2VydmUgc2NyaXB0IGV2YWx1YXRpb24gaGlzdG9yeVxuXHRcdGlmICggYXR0YWNoZWQgKSB7XG5cdFx0XHRzZXRHbG9iYWxFdmFsKCB0bXAgKTtcblx0XHR9XG5cblx0XHQvLyBDYXB0dXJlIGV4ZWN1dGFibGVzXG5cdFx0aWYgKCBzY3JpcHRzICkge1xuXHRcdFx0aiA9IDA7XG5cdFx0XHR3aGlsZSAoICggZWxlbSA9IHRtcFsgaisrIF0gKSApIHtcblx0XHRcdFx0aWYgKCByc2NyaXB0VHlwZS50ZXN0KCBlbGVtLnR5cGUgfHwgXCJcIiApICkge1xuXHRcdFx0XHRcdHNjcmlwdHMucHVzaCggZWxlbSApO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fVxuXHR9XG5cblx0cmV0dXJuIGZyYWdtZW50O1xufVxuXG5cbnZhclxuXHRya2V5RXZlbnQgPSAvXmtleS8sXG5cdHJtb3VzZUV2ZW50ID0gL14oPzptb3VzZXxwb2ludGVyfGNvbnRleHRtZW51fGRyYWd8ZHJvcCl8Y2xpY2svLFxuXHRydHlwZW5hbWVzcGFjZSA9IC9eKFteLl0qKSg/OlxcLiguKyl8KS87XG5cbmZ1bmN0aW9uIHJldHVyblRydWUoKSB7XG5cdHJldHVybiB0cnVlO1xufVxuXG5mdW5jdGlvbiByZXR1cm5GYWxzZSgpIHtcblx0cmV0dXJuIGZhbHNlO1xufVxuXG4vLyBTdXBwb3J0OiBJRSA8PTkgLSAxMStcbi8vIGZvY3VzKCkgYW5kIGJsdXIoKSBhcmUgYXN5bmNocm9ub3VzLCBleGNlcHQgd2hlbiB0aGV5IGFyZSBuby1vcC5cbi8vIFNvIGV4cGVjdCBmb2N1cyB0byBiZSBzeW5jaHJvbm91cyB3aGVuIHRoZSBlbGVtZW50IGlzIGFscmVhZHkgYWN0aXZlLFxuLy8gYW5kIGJsdXIgdG8gYmUgc3luY2hyb25vdXMgd2hlbiB0aGUgZWxlbWVudCBpcyBub3QgYWxyZWFkeSBhY3RpdmUuXG4vLyAoZm9jdXMgYW5kIGJsdXIgYXJlIGFsd2F5cyBzeW5jaHJvbm91cyBpbiBvdGhlciBzdXBwb3J0ZWQgYnJvd3NlcnMsXG4vLyB0aGlzIGp1c3QgZGVmaW5lcyB3aGVuIHdlIGNhbiBjb3VudCBvbiBpdCkuXG5mdW5jdGlvbiBleHBlY3RTeW5jKCBlbGVtLCB0eXBlICkge1xuXHRyZXR1cm4gKCBlbGVtID09PSBzYWZlQWN0aXZlRWxlbWVudCgpICkgPT09ICggdHlwZSA9PT0gXCJmb2N1c1wiICk7XG59XG5cbi8vIFN1cHBvcnQ6IElFIDw9OSBvbmx5XG4vLyBBY2Nlc3NpbmcgZG9jdW1lbnQuYWN0aXZlRWxlbWVudCBjYW4gdGhyb3cgdW5leHBlY3RlZGx5XG4vLyBodHRwczovL2J1Z3MuanF1ZXJ5LmNvbS90aWNrZXQvMTMzOTNcbmZ1bmN0aW9uIHNhZmVBY3RpdmVFbGVtZW50KCkge1xuXHR0cnkge1xuXHRcdHJldHVybiBkb2N1bWVudC5hY3RpdmVFbGVtZW50O1xuXHR9IGNhdGNoICggZXJyICkgeyB9XG59XG5cbmZ1bmN0aW9uIG9uKCBlbGVtLCB0eXBlcywgc2VsZWN0b3IsIGRhdGEsIGZuLCBvbmUgKSB7XG5cdHZhciBvcmlnRm4sIHR5cGU7XG5cblx0Ly8gVHlwZXMgY2FuIGJlIGEgbWFwIG9mIHR5cGVzL2hhbmRsZXJzXG5cdGlmICggdHlwZW9mIHR5cGVzID09PSBcIm9iamVjdFwiICkge1xuXG5cdFx0Ly8gKCB0eXBlcy1PYmplY3QsIHNlbGVjdG9yLCBkYXRhIClcblx0XHRpZiAoIHR5cGVvZiBzZWxlY3RvciAhPT0gXCJzdHJpbmdcIiApIHtcblxuXHRcdFx0Ly8gKCB0eXBlcy1PYmplY3QsIGRhdGEgKVxuXHRcdFx0ZGF0YSA9IGRhdGEgfHwgc2VsZWN0b3I7XG5cdFx0XHRzZWxlY3RvciA9IHVuZGVmaW5lZDtcblx0XHR9XG5cdFx0Zm9yICggdHlwZSBpbiB0eXBlcyApIHtcblx0XHRcdG9uKCBlbGVtLCB0eXBlLCBzZWxlY3RvciwgZGF0YSwgdHlwZXNbIHR5cGUgXSwgb25lICk7XG5cdFx0fVxuXHRcdHJldHVybiBlbGVtO1xuXHR9XG5cblx0aWYgKCBkYXRhID09IG51bGwgJiYgZm4gPT0gbnVsbCApIHtcblxuXHRcdC8vICggdHlwZXMsIGZuIClcblx0XHRmbiA9IHNlbGVjdG9yO1xuXHRcdGRhdGEgPSBzZWxlY3RvciA9IHVuZGVmaW5lZDtcblx0fSBlbHNlIGlmICggZm4gPT0gbnVsbCApIHtcblx0XHRpZiAoIHR5cGVvZiBzZWxlY3RvciA9PT0gXCJzdHJpbmdcIiApIHtcblxuXHRcdFx0Ly8gKCB0eXBlcywgc2VsZWN0b3IsIGZuIClcblx0XHRcdGZuID0gZGF0YTtcblx0XHRcdGRhdGEgPSB1bmRlZmluZWQ7XG5cdFx0fSBlbHNlIHtcblxuXHRcdFx0Ly8gKCB0eXBlcywgZGF0YSwgZm4gKVxuXHRcdFx0Zm4gPSBkYXRhO1xuXHRcdFx0ZGF0YSA9IHNlbGVjdG9yO1xuXHRcdFx0c2VsZWN0b3IgPSB1bmRlZmluZWQ7XG5cdFx0fVxuXHR9XG5cdGlmICggZm4gPT09IGZhbHNlICkge1xuXHRcdGZuID0gcmV0dXJuRmFsc2U7XG5cdH0gZWxzZSBpZiAoICFmbiApIHtcblx0XHRyZXR1cm4gZWxlbTtcblx0fVxuXG5cdGlmICggb25lID09PSAxICkge1xuXHRcdG9yaWdGbiA9IGZuO1xuXHRcdGZuID0gZnVuY3Rpb24oIGV2ZW50ICkge1xuXG5cdFx0XHQvLyBDYW4gdXNlIGFuIGVtcHR5IHNldCwgc2luY2UgZXZlbnQgY29udGFpbnMgdGhlIGluZm9cblx0XHRcdGpRdWVyeSgpLm9mZiggZXZlbnQgKTtcblx0XHRcdHJldHVybiBvcmlnRm4uYXBwbHkoIHRoaXMsIGFyZ3VtZW50cyApO1xuXHRcdH07XG5cblx0XHQvLyBVc2Ugc2FtZSBndWlkIHNvIGNhbGxlciBjYW4gcmVtb3ZlIHVzaW5nIG9yaWdGblxuXHRcdGZuLmd1aWQgPSBvcmlnRm4uZ3VpZCB8fCAoIG9yaWdGbi5ndWlkID0galF1ZXJ5Lmd1aWQrKyApO1xuXHR9XG5cdHJldHVybiBlbGVtLmVhY2goIGZ1bmN0aW9uKCkge1xuXHRcdGpRdWVyeS5ldmVudC5hZGQoIHRoaXMsIHR5cGVzLCBmbiwgZGF0YSwgc2VsZWN0b3IgKTtcblx0fSApO1xufVxuXG4vKlxuICogSGVscGVyIGZ1bmN0aW9ucyBmb3IgbWFuYWdpbmcgZXZlbnRzIC0tIG5vdCBwYXJ0IG9mIHRoZSBwdWJsaWMgaW50ZXJmYWNlLlxuICogUHJvcHMgdG8gRGVhbiBFZHdhcmRzJyBhZGRFdmVudCBsaWJyYXJ5IGZvciBtYW55IG9mIHRoZSBpZGVhcy5cbiAqL1xualF1ZXJ5LmV2ZW50ID0ge1xuXG5cdGdsb2JhbDoge30sXG5cblx0YWRkOiBmdW5jdGlvbiggZWxlbSwgdHlwZXMsIGhhbmRsZXIsIGRhdGEsIHNlbGVjdG9yICkge1xuXG5cdFx0dmFyIGhhbmRsZU9iakluLCBldmVudEhhbmRsZSwgdG1wLFxuXHRcdFx0ZXZlbnRzLCB0LCBoYW5kbGVPYmosXG5cdFx0XHRzcGVjaWFsLCBoYW5kbGVycywgdHlwZSwgbmFtZXNwYWNlcywgb3JpZ1R5cGUsXG5cdFx0XHRlbGVtRGF0YSA9IGRhdGFQcml2LmdldCggZWxlbSApO1xuXG5cdFx0Ly8gT25seSBhdHRhY2ggZXZlbnRzIHRvIG9iamVjdHMgdGhhdCBhY2NlcHQgZGF0YVxuXHRcdGlmICggIWFjY2VwdERhdGEoIGVsZW0gKSApIHtcblx0XHRcdHJldHVybjtcblx0XHR9XG5cblx0XHQvLyBDYWxsZXIgY2FuIHBhc3MgaW4gYW4gb2JqZWN0IG9mIGN1c3RvbSBkYXRhIGluIGxpZXUgb2YgdGhlIGhhbmRsZXJcblx0XHRpZiAoIGhhbmRsZXIuaGFuZGxlciApIHtcblx0XHRcdGhhbmRsZU9iakluID0gaGFuZGxlcjtcblx0XHRcdGhhbmRsZXIgPSBoYW5kbGVPYmpJbi5oYW5kbGVyO1xuXHRcdFx0c2VsZWN0b3IgPSBoYW5kbGVPYmpJbi5zZWxlY3Rvcjtcblx0XHR9XG5cblx0XHQvLyBFbnN1cmUgdGhhdCBpbnZhbGlkIHNlbGVjdG9ycyB0aHJvdyBleGNlcHRpb25zIGF0IGF0dGFjaCB0aW1lXG5cdFx0Ly8gRXZhbHVhdGUgYWdhaW5zdCBkb2N1bWVudEVsZW1lbnQgaW4gY2FzZSBlbGVtIGlzIGEgbm9uLWVsZW1lbnQgbm9kZSAoZS5nLiwgZG9jdW1lbnQpXG5cdFx0aWYgKCBzZWxlY3RvciApIHtcblx0XHRcdGpRdWVyeS5maW5kLm1hdGNoZXNTZWxlY3RvciggZG9jdW1lbnRFbGVtZW50LCBzZWxlY3RvciApO1xuXHRcdH1cblxuXHRcdC8vIE1ha2Ugc3VyZSB0aGF0IHRoZSBoYW5kbGVyIGhhcyBhIHVuaXF1ZSBJRCwgdXNlZCB0byBmaW5kL3JlbW92ZSBpdCBsYXRlclxuXHRcdGlmICggIWhhbmRsZXIuZ3VpZCApIHtcblx0XHRcdGhhbmRsZXIuZ3VpZCA9IGpRdWVyeS5ndWlkKys7XG5cdFx0fVxuXG5cdFx0Ly8gSW5pdCB0aGUgZWxlbWVudCdzIGV2ZW50IHN0cnVjdHVyZSBhbmQgbWFpbiBoYW5kbGVyLCBpZiB0aGlzIGlzIHRoZSBmaXJzdFxuXHRcdGlmICggISggZXZlbnRzID0gZWxlbURhdGEuZXZlbnRzICkgKSB7XG5cdFx0XHRldmVudHMgPSBlbGVtRGF0YS5ldmVudHMgPSBPYmplY3QuY3JlYXRlKCBudWxsICk7XG5cdFx0fVxuXHRcdGlmICggISggZXZlbnRIYW5kbGUgPSBlbGVtRGF0YS5oYW5kbGUgKSApIHtcblx0XHRcdGV2ZW50SGFuZGxlID0gZWxlbURhdGEuaGFuZGxlID0gZnVuY3Rpb24oIGUgKSB7XG5cblx0XHRcdFx0Ly8gRGlzY2FyZCB0aGUgc2Vjb25kIGV2ZW50IG9mIGEgalF1ZXJ5LmV2ZW50LnRyaWdnZXIoKSBhbmRcblx0XHRcdFx0Ly8gd2hlbiBhbiBldmVudCBpcyBjYWxsZWQgYWZ0ZXIgYSBwYWdlIGhhcyB1bmxvYWRlZFxuXHRcdFx0XHRyZXR1cm4gdHlwZW9mIGpRdWVyeSAhPT0gXCJ1bmRlZmluZWRcIiAmJiBqUXVlcnkuZXZlbnQudHJpZ2dlcmVkICE9PSBlLnR5cGUgP1xuXHRcdFx0XHRcdGpRdWVyeS5ldmVudC5kaXNwYXRjaC5hcHBseSggZWxlbSwgYXJndW1lbnRzICkgOiB1bmRlZmluZWQ7XG5cdFx0XHR9O1xuXHRcdH1cblxuXHRcdC8vIEhhbmRsZSBtdWx0aXBsZSBldmVudHMgc2VwYXJhdGVkIGJ5IGEgc3BhY2Vcblx0XHR0eXBlcyA9ICggdHlwZXMgfHwgXCJcIiApLm1hdGNoKCBybm90aHRtbHdoaXRlICkgfHwgWyBcIlwiIF07XG5cdFx0dCA9IHR5cGVzLmxlbmd0aDtcblx0XHR3aGlsZSAoIHQtLSApIHtcblx0XHRcdHRtcCA9IHJ0eXBlbmFtZXNwYWNlLmV4ZWMoIHR5cGVzWyB0IF0gKSB8fCBbXTtcblx0XHRcdHR5cGUgPSBvcmlnVHlwZSA9IHRtcFsgMSBdO1xuXHRcdFx0bmFtZXNwYWNlcyA9ICggdG1wWyAyIF0gfHwgXCJcIiApLnNwbGl0KCBcIi5cIiApLnNvcnQoKTtcblxuXHRcdFx0Ly8gVGhlcmUgKm11c3QqIGJlIGEgdHlwZSwgbm8gYXR0YWNoaW5nIG5hbWVzcGFjZS1vbmx5IGhhbmRsZXJzXG5cdFx0XHRpZiAoICF0eXBlICkge1xuXHRcdFx0XHRjb250aW51ZTtcblx0XHRcdH1cblxuXHRcdFx0Ly8gSWYgZXZlbnQgY2hhbmdlcyBpdHMgdHlwZSwgdXNlIHRoZSBzcGVjaWFsIGV2ZW50IGhhbmRsZXJzIGZvciB0aGUgY2hhbmdlZCB0eXBlXG5cdFx0XHRzcGVjaWFsID0galF1ZXJ5LmV2ZW50LnNwZWNpYWxbIHR5cGUgXSB8fCB7fTtcblxuXHRcdFx0Ly8gSWYgc2VsZWN0b3IgZGVmaW5lZCwgZGV0ZXJtaW5lIHNwZWNpYWwgZXZlbnQgYXBpIHR5cGUsIG90aGVyd2lzZSBnaXZlbiB0eXBlXG5cdFx0XHR0eXBlID0gKCBzZWxlY3RvciA/IHNwZWNpYWwuZGVsZWdhdGVUeXBlIDogc3BlY2lhbC5iaW5kVHlwZSApIHx8IHR5cGU7XG5cblx0XHRcdC8vIFVwZGF0ZSBzcGVjaWFsIGJhc2VkIG9uIG5ld2x5IHJlc2V0IHR5cGVcblx0XHRcdHNwZWNpYWwgPSBqUXVlcnkuZXZlbnQuc3BlY2lhbFsgdHlwZSBdIHx8IHt9O1xuXG5cdFx0XHQvLyBoYW5kbGVPYmogaXMgcGFzc2VkIHRvIGFsbCBldmVudCBoYW5kbGVyc1xuXHRcdFx0aGFuZGxlT2JqID0galF1ZXJ5LmV4dGVuZCgge1xuXHRcdFx0XHR0eXBlOiB0eXBlLFxuXHRcdFx0XHRvcmlnVHlwZTogb3JpZ1R5cGUsXG5cdFx0XHRcdGRhdGE6IGRhdGEsXG5cdFx0XHRcdGhhbmRsZXI6IGhhbmRsZXIsXG5cdFx0XHRcdGd1aWQ6IGhhbmRsZXIuZ3VpZCxcblx0XHRcdFx0c2VsZWN0b3I6IHNlbGVjdG9yLFxuXHRcdFx0XHRuZWVkc0NvbnRleHQ6IHNlbGVjdG9yICYmIGpRdWVyeS5leHByLm1hdGNoLm5lZWRzQ29udGV4dC50ZXN0KCBzZWxlY3RvciApLFxuXHRcdFx0XHRuYW1lc3BhY2U6IG5hbWVzcGFjZXMuam9pbiggXCIuXCIgKVxuXHRcdFx0fSwgaGFuZGxlT2JqSW4gKTtcblxuXHRcdFx0Ly8gSW5pdCB0aGUgZXZlbnQgaGFuZGxlciBxdWV1ZSBpZiB3ZSdyZSB0aGUgZmlyc3Rcblx0XHRcdGlmICggISggaGFuZGxlcnMgPSBldmVudHNbIHR5cGUgXSApICkge1xuXHRcdFx0XHRoYW5kbGVycyA9IGV2ZW50c1sgdHlwZSBdID0gW107XG5cdFx0XHRcdGhhbmRsZXJzLmRlbGVnYXRlQ291bnQgPSAwO1xuXG5cdFx0XHRcdC8vIE9ubHkgdXNlIGFkZEV2ZW50TGlzdGVuZXIgaWYgdGhlIHNwZWNpYWwgZXZlbnRzIGhhbmRsZXIgcmV0dXJucyBmYWxzZVxuXHRcdFx0XHRpZiAoICFzcGVjaWFsLnNldHVwIHx8XG5cdFx0XHRcdFx0c3BlY2lhbC5zZXR1cC5jYWxsKCBlbGVtLCBkYXRhLCBuYW1lc3BhY2VzLCBldmVudEhhbmRsZSApID09PSBmYWxzZSApIHtcblxuXHRcdFx0XHRcdGlmICggZWxlbS5hZGRFdmVudExpc3RlbmVyICkge1xuXHRcdFx0XHRcdFx0ZWxlbS5hZGRFdmVudExpc3RlbmVyKCB0eXBlLCBldmVudEhhbmRsZSApO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXHRcdFx0fVxuXG5cdFx0XHRpZiAoIHNwZWNpYWwuYWRkICkge1xuXHRcdFx0XHRzcGVjaWFsLmFkZC5jYWxsKCBlbGVtLCBoYW5kbGVPYmogKTtcblxuXHRcdFx0XHRpZiAoICFoYW5kbGVPYmouaGFuZGxlci5ndWlkICkge1xuXHRcdFx0XHRcdGhhbmRsZU9iai5oYW5kbGVyLmd1aWQgPSBoYW5kbGVyLmd1aWQ7XG5cdFx0XHRcdH1cblx0XHRcdH1cblxuXHRcdFx0Ly8gQWRkIHRvIHRoZSBlbGVtZW50J3MgaGFuZGxlciBsaXN0LCBkZWxlZ2F0ZXMgaW4gZnJvbnRcblx0XHRcdGlmICggc2VsZWN0b3IgKSB7XG5cdFx0XHRcdGhhbmRsZXJzLnNwbGljZSggaGFuZGxlcnMuZGVsZWdhdGVDb3VudCsrLCAwLCBoYW5kbGVPYmogKTtcblx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdGhhbmRsZXJzLnB1c2goIGhhbmRsZU9iaiApO1xuXHRcdFx0fVxuXG5cdFx0XHQvLyBLZWVwIHRyYWNrIG9mIHdoaWNoIGV2ZW50cyBoYXZlIGV2ZXIgYmVlbiB1c2VkLCBmb3IgZXZlbnQgb3B0aW1pemF0aW9uXG5cdFx0XHRqUXVlcnkuZXZlbnQuZ2xvYmFsWyB0eXBlIF0gPSB0cnVlO1xuXHRcdH1cblxuXHR9LFxuXG5cdC8vIERldGFjaCBhbiBldmVudCBvciBzZXQgb2YgZXZlbnRzIGZyb20gYW4gZWxlbWVudFxuXHRyZW1vdmU6IGZ1bmN0aW9uKCBlbGVtLCB0eXBlcywgaGFuZGxlciwgc2VsZWN0b3IsIG1hcHBlZFR5cGVzICkge1xuXG5cdFx0dmFyIGosIG9yaWdDb3VudCwgdG1wLFxuXHRcdFx0ZXZlbnRzLCB0LCBoYW5kbGVPYmosXG5cdFx0XHRzcGVjaWFsLCBoYW5kbGVycywgdHlwZSwgbmFtZXNwYWNlcywgb3JpZ1R5cGUsXG5cdFx0XHRlbGVtRGF0YSA9IGRhdGFQcml2Lmhhc0RhdGEoIGVsZW0gKSAmJiBkYXRhUHJpdi5nZXQoIGVsZW0gKTtcblxuXHRcdGlmICggIWVsZW1EYXRhIHx8ICEoIGV2ZW50cyA9IGVsZW1EYXRhLmV2ZW50cyApICkge1xuXHRcdFx0cmV0dXJuO1xuXHRcdH1cblxuXHRcdC8vIE9uY2UgZm9yIGVhY2ggdHlwZS5uYW1lc3BhY2UgaW4gdHlwZXM7IHR5cGUgbWF5IGJlIG9taXR0ZWRcblx0XHR0eXBlcyA9ICggdHlwZXMgfHwgXCJcIiApLm1hdGNoKCBybm90aHRtbHdoaXRlICkgfHwgWyBcIlwiIF07XG5cdFx0dCA9IHR5cGVzLmxlbmd0aDtcblx0XHR3aGlsZSAoIHQtLSApIHtcblx0XHRcdHRtcCA9IHJ0eXBlbmFtZXNwYWNlLmV4ZWMoIHR5cGVzWyB0IF0gKSB8fCBbXTtcblx0XHRcdHR5cGUgPSBvcmlnVHlwZSA9IHRtcFsgMSBdO1xuXHRcdFx0bmFtZXNwYWNlcyA9ICggdG1wWyAyIF0gfHwgXCJcIiApLnNwbGl0KCBcIi5cIiApLnNvcnQoKTtcblxuXHRcdFx0Ly8gVW5iaW5kIGFsbCBldmVudHMgKG9uIHRoaXMgbmFtZXNwYWNlLCBpZiBwcm92aWRlZCkgZm9yIHRoZSBlbGVtZW50XG5cdFx0XHRpZiAoICF0eXBlICkge1xuXHRcdFx0XHRmb3IgKCB0eXBlIGluIGV2ZW50cyApIHtcblx0XHRcdFx0XHRqUXVlcnkuZXZlbnQucmVtb3ZlKCBlbGVtLCB0eXBlICsgdHlwZXNbIHQgXSwgaGFuZGxlciwgc2VsZWN0b3IsIHRydWUgKTtcblx0XHRcdFx0fVxuXHRcdFx0XHRjb250aW51ZTtcblx0XHRcdH1cblxuXHRcdFx0c3BlY2lhbCA9IGpRdWVyeS5ldmVudC5zcGVjaWFsWyB0eXBlIF0gfHwge307XG5cdFx0XHR0eXBlID0gKCBzZWxlY3RvciA/IHNwZWNpYWwuZGVsZWdhdGVUeXBlIDogc3BlY2lhbC5iaW5kVHlwZSApIHx8IHR5cGU7XG5cdFx0XHRoYW5kbGVycyA9IGV2ZW50c1sgdHlwZSBdIHx8IFtdO1xuXHRcdFx0dG1wID0gdG1wWyAyIF0gJiZcblx0XHRcdFx0bmV3IFJlZ0V4cCggXCIoXnxcXFxcLilcIiArIG5hbWVzcGFjZXMuam9pbiggXCJcXFxcLig/Oi4qXFxcXC58KVwiICkgKyBcIihcXFxcLnwkKVwiICk7XG5cblx0XHRcdC8vIFJlbW92ZSBtYXRjaGluZyBldmVudHNcblx0XHRcdG9yaWdDb3VudCA9IGogPSBoYW5kbGVycy5sZW5ndGg7XG5cdFx0XHR3aGlsZSAoIGotLSApIHtcblx0XHRcdFx0aGFuZGxlT2JqID0gaGFuZGxlcnNbIGogXTtcblxuXHRcdFx0XHRpZiAoICggbWFwcGVkVHlwZXMgfHwgb3JpZ1R5cGUgPT09IGhhbmRsZU9iai5vcmlnVHlwZSApICYmXG5cdFx0XHRcdFx0KCAhaGFuZGxlciB8fCBoYW5kbGVyLmd1aWQgPT09IGhhbmRsZU9iai5ndWlkICkgJiZcblx0XHRcdFx0XHQoICF0bXAgfHwgdG1wLnRlc3QoIGhhbmRsZU9iai5uYW1lc3BhY2UgKSApICYmXG5cdFx0XHRcdFx0KCAhc2VsZWN0b3IgfHwgc2VsZWN0b3IgPT09IGhhbmRsZU9iai5zZWxlY3RvciB8fFxuXHRcdFx0XHRcdFx0c2VsZWN0b3IgPT09IFwiKipcIiAmJiBoYW5kbGVPYmouc2VsZWN0b3IgKSApIHtcblx0XHRcdFx0XHRoYW5kbGVycy5zcGxpY2UoIGosIDEgKTtcblxuXHRcdFx0XHRcdGlmICggaGFuZGxlT2JqLnNlbGVjdG9yICkge1xuXHRcdFx0XHRcdFx0aGFuZGxlcnMuZGVsZWdhdGVDb3VudC0tO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0XHRpZiAoIHNwZWNpYWwucmVtb3ZlICkge1xuXHRcdFx0XHRcdFx0c3BlY2lhbC5yZW1vdmUuY2FsbCggZWxlbSwgaGFuZGxlT2JqICk7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHR9XG5cblx0XHRcdC8vIFJlbW92ZSBnZW5lcmljIGV2ZW50IGhhbmRsZXIgaWYgd2UgcmVtb3ZlZCBzb21ldGhpbmcgYW5kIG5vIG1vcmUgaGFuZGxlcnMgZXhpc3Rcblx0XHRcdC8vIChhdm9pZHMgcG90ZW50aWFsIGZvciBlbmRsZXNzIHJlY3Vyc2lvbiBkdXJpbmcgcmVtb3ZhbCBvZiBzcGVjaWFsIGV2ZW50IGhhbmRsZXJzKVxuXHRcdFx0aWYgKCBvcmlnQ291bnQgJiYgIWhhbmRsZXJzLmxlbmd0aCApIHtcblx0XHRcdFx0aWYgKCAhc3BlY2lhbC50ZWFyZG93biB8fFxuXHRcdFx0XHRcdHNwZWNpYWwudGVhcmRvd24uY2FsbCggZWxlbSwgbmFtZXNwYWNlcywgZWxlbURhdGEuaGFuZGxlICkgPT09IGZhbHNlICkge1xuXG5cdFx0XHRcdFx0alF1ZXJ5LnJlbW92ZUV2ZW50KCBlbGVtLCB0eXBlLCBlbGVtRGF0YS5oYW5kbGUgKTtcblx0XHRcdFx0fVxuXG5cdFx0XHRcdGRlbGV0ZSBldmVudHNbIHR5cGUgXTtcblx0XHRcdH1cblx0XHR9XG5cblx0XHQvLyBSZW1vdmUgZGF0YSBhbmQgdGhlIGV4cGFuZG8gaWYgaXQncyBubyBsb25nZXIgdXNlZFxuXHRcdGlmICggalF1ZXJ5LmlzRW1wdHlPYmplY3QoIGV2ZW50cyApICkge1xuXHRcdFx0ZGF0YVByaXYucmVtb3ZlKCBlbGVtLCBcImhhbmRsZSBldmVudHNcIiApO1xuXHRcdH1cblx0fSxcblxuXHRkaXNwYXRjaDogZnVuY3Rpb24oIG5hdGl2ZUV2ZW50ICkge1xuXG5cdFx0dmFyIGksIGosIHJldCwgbWF0Y2hlZCwgaGFuZGxlT2JqLCBoYW5kbGVyUXVldWUsXG5cdFx0XHRhcmdzID0gbmV3IEFycmF5KCBhcmd1bWVudHMubGVuZ3RoICksXG5cblx0XHRcdC8vIE1ha2UgYSB3cml0YWJsZSBqUXVlcnkuRXZlbnQgZnJvbSB0aGUgbmF0aXZlIGV2ZW50IG9iamVjdFxuXHRcdFx0ZXZlbnQgPSBqUXVlcnkuZXZlbnQuZml4KCBuYXRpdmVFdmVudCApLFxuXG5cdFx0XHRoYW5kbGVycyA9IChcblx0XHRcdFx0XHRkYXRhUHJpdi5nZXQoIHRoaXMsIFwiZXZlbnRzXCIgKSB8fCBPYmplY3QuY3JlYXRlKCBudWxsIClcblx0XHRcdFx0KVsgZXZlbnQudHlwZSBdIHx8IFtdLFxuXHRcdFx0c3BlY2lhbCA9IGpRdWVyeS5ldmVudC5zcGVjaWFsWyBldmVudC50eXBlIF0gfHwge307XG5cblx0XHQvLyBVc2UgdGhlIGZpeC1lZCBqUXVlcnkuRXZlbnQgcmF0aGVyIHRoYW4gdGhlIChyZWFkLW9ubHkpIG5hdGl2ZSBldmVudFxuXHRcdGFyZ3NbIDAgXSA9IGV2ZW50O1xuXG5cdFx0Zm9yICggaSA9IDE7IGkgPCBhcmd1bWVudHMubGVuZ3RoOyBpKysgKSB7XG5cdFx0XHRhcmdzWyBpIF0gPSBhcmd1bWVudHNbIGkgXTtcblx0XHR9XG5cblx0XHRldmVudC5kZWxlZ2F0ZVRhcmdldCA9IHRoaXM7XG5cblx0XHQvLyBDYWxsIHRoZSBwcmVEaXNwYXRjaCBob29rIGZvciB0aGUgbWFwcGVkIHR5cGUsIGFuZCBsZXQgaXQgYmFpbCBpZiBkZXNpcmVkXG5cdFx0aWYgKCBzcGVjaWFsLnByZURpc3BhdGNoICYmIHNwZWNpYWwucHJlRGlzcGF0Y2guY2FsbCggdGhpcywgZXZlbnQgKSA9PT0gZmFsc2UgKSB7XG5cdFx0XHRyZXR1cm47XG5cdFx0fVxuXG5cdFx0Ly8gRGV0ZXJtaW5lIGhhbmRsZXJzXG5cdFx0aGFuZGxlclF1ZXVlID0galF1ZXJ5LmV2ZW50LmhhbmRsZXJzLmNhbGwoIHRoaXMsIGV2ZW50LCBoYW5kbGVycyApO1xuXG5cdFx0Ly8gUnVuIGRlbGVnYXRlcyBmaXJzdDsgdGhleSBtYXkgd2FudCB0byBzdG9wIHByb3BhZ2F0aW9uIGJlbmVhdGggdXNcblx0XHRpID0gMDtcblx0XHR3aGlsZSAoICggbWF0Y2hlZCA9IGhhbmRsZXJRdWV1ZVsgaSsrIF0gKSAmJiAhZXZlbnQuaXNQcm9wYWdhdGlvblN0b3BwZWQoKSApIHtcblx0XHRcdGV2ZW50LmN1cnJlbnRUYXJnZXQgPSBtYXRjaGVkLmVsZW07XG5cblx0XHRcdGogPSAwO1xuXHRcdFx0d2hpbGUgKCAoIGhhbmRsZU9iaiA9IG1hdGNoZWQuaGFuZGxlcnNbIGorKyBdICkgJiZcblx0XHRcdFx0IWV2ZW50LmlzSW1tZWRpYXRlUHJvcGFnYXRpb25TdG9wcGVkKCkgKSB7XG5cblx0XHRcdFx0Ly8gSWYgdGhlIGV2ZW50IGlzIG5hbWVzcGFjZWQsIHRoZW4gZWFjaCBoYW5kbGVyIGlzIG9ubHkgaW52b2tlZCBpZiBpdCBpc1xuXHRcdFx0XHQvLyBzcGVjaWFsbHkgdW5pdmVyc2FsIG9yIGl0cyBuYW1lc3BhY2VzIGFyZSBhIHN1cGVyc2V0IG9mIHRoZSBldmVudCdzLlxuXHRcdFx0XHRpZiAoICFldmVudC5ybmFtZXNwYWNlIHx8IGhhbmRsZU9iai5uYW1lc3BhY2UgPT09IGZhbHNlIHx8XG5cdFx0XHRcdFx0ZXZlbnQucm5hbWVzcGFjZS50ZXN0KCBoYW5kbGVPYmoubmFtZXNwYWNlICkgKSB7XG5cblx0XHRcdFx0XHRldmVudC5oYW5kbGVPYmogPSBoYW5kbGVPYmo7XG5cdFx0XHRcdFx0ZXZlbnQuZGF0YSA9IGhhbmRsZU9iai5kYXRhO1xuXG5cdFx0XHRcdFx0cmV0ID0gKCAoIGpRdWVyeS5ldmVudC5zcGVjaWFsWyBoYW5kbGVPYmoub3JpZ1R5cGUgXSB8fCB7fSApLmhhbmRsZSB8fFxuXHRcdFx0XHRcdFx0aGFuZGxlT2JqLmhhbmRsZXIgKS5hcHBseSggbWF0Y2hlZC5lbGVtLCBhcmdzICk7XG5cblx0XHRcdFx0XHRpZiAoIHJldCAhPT0gdW5kZWZpbmVkICkge1xuXHRcdFx0XHRcdFx0aWYgKCAoIGV2ZW50LnJlc3VsdCA9IHJldCApID09PSBmYWxzZSApIHtcblx0XHRcdFx0XHRcdFx0ZXZlbnQucHJldmVudERlZmF1bHQoKTtcblx0XHRcdFx0XHRcdFx0ZXZlbnQuc3RvcFByb3BhZ2F0aW9uKCk7XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fVxuXG5cdFx0Ly8gQ2FsbCB0aGUgcG9zdERpc3BhdGNoIGhvb2sgZm9yIHRoZSBtYXBwZWQgdHlwZVxuXHRcdGlmICggc3BlY2lhbC5wb3N0RGlzcGF0Y2ggKSB7XG5cdFx0XHRzcGVjaWFsLnBvc3REaXNwYXRjaC5jYWxsKCB0aGlzLCBldmVudCApO1xuXHRcdH1cblxuXHRcdHJldHVybiBldmVudC5yZXN1bHQ7XG5cdH0sXG5cblx0aGFuZGxlcnM6IGZ1bmN0aW9uKCBldmVudCwgaGFuZGxlcnMgKSB7XG5cdFx0dmFyIGksIGhhbmRsZU9iaiwgc2VsLCBtYXRjaGVkSGFuZGxlcnMsIG1hdGNoZWRTZWxlY3RvcnMsXG5cdFx0XHRoYW5kbGVyUXVldWUgPSBbXSxcblx0XHRcdGRlbGVnYXRlQ291bnQgPSBoYW5kbGVycy5kZWxlZ2F0ZUNvdW50LFxuXHRcdFx0Y3VyID0gZXZlbnQudGFyZ2V0O1xuXG5cdFx0Ly8gRmluZCBkZWxlZ2F0ZSBoYW5kbGVyc1xuXHRcdGlmICggZGVsZWdhdGVDb3VudCAmJlxuXG5cdFx0XHQvLyBTdXBwb3J0OiBJRSA8PTlcblx0XHRcdC8vIEJsYWNrLWhvbGUgU1ZHIDx1c2U+IGluc3RhbmNlIHRyZWVzICh0cmFjLTEzMTgwKVxuXHRcdFx0Y3VyLm5vZGVUeXBlICYmXG5cblx0XHRcdC8vIFN1cHBvcnQ6IEZpcmVmb3ggPD00MlxuXHRcdFx0Ly8gU3VwcHJlc3Mgc3BlYy12aW9sYXRpbmcgY2xpY2tzIGluZGljYXRpbmcgYSBub24tcHJpbWFyeSBwb2ludGVyIGJ1dHRvbiAodHJhYy0zODYxKVxuXHRcdFx0Ly8gaHR0cHM6Ly93d3cudzMub3JnL1RSL0RPTS1MZXZlbC0zLUV2ZW50cy8jZXZlbnQtdHlwZS1jbGlja1xuXHRcdFx0Ly8gU3VwcG9ydDogSUUgMTEgb25seVxuXHRcdFx0Ly8gLi4uYnV0IG5vdCBhcnJvdyBrZXkgXCJjbGlja3NcIiBvZiByYWRpbyBpbnB1dHMsIHdoaWNoIGNhbiBoYXZlIGBidXR0b25gIC0xIChnaC0yMzQzKVxuXHRcdFx0ISggZXZlbnQudHlwZSA9PT0gXCJjbGlja1wiICYmIGV2ZW50LmJ1dHRvbiA+PSAxICkgKSB7XG5cblx0XHRcdGZvciAoIDsgY3VyICE9PSB0aGlzOyBjdXIgPSBjdXIucGFyZW50Tm9kZSB8fCB0aGlzICkge1xuXG5cdFx0XHRcdC8vIERvbid0IGNoZWNrIG5vbi1lbGVtZW50cyAoIzEzMjA4KVxuXHRcdFx0XHQvLyBEb24ndCBwcm9jZXNzIGNsaWNrcyBvbiBkaXNhYmxlZCBlbGVtZW50cyAoIzY5MTEsICM4MTY1LCAjMTEzODIsICMxMTc2NClcblx0XHRcdFx0aWYgKCBjdXIubm9kZVR5cGUgPT09IDEgJiYgISggZXZlbnQudHlwZSA9PT0gXCJjbGlja1wiICYmIGN1ci5kaXNhYmxlZCA9PT0gdHJ1ZSApICkge1xuXHRcdFx0XHRcdG1hdGNoZWRIYW5kbGVycyA9IFtdO1xuXHRcdFx0XHRcdG1hdGNoZWRTZWxlY3RvcnMgPSB7fTtcblx0XHRcdFx0XHRmb3IgKCBpID0gMDsgaSA8IGRlbGVnYXRlQ291bnQ7IGkrKyApIHtcblx0XHRcdFx0XHRcdGhhbmRsZU9iaiA9IGhhbmRsZXJzWyBpIF07XG5cblx0XHRcdFx0XHRcdC8vIERvbid0IGNvbmZsaWN0IHdpdGggT2JqZWN0LnByb3RvdHlwZSBwcm9wZXJ0aWVzICgjMTMyMDMpXG5cdFx0XHRcdFx0XHRzZWwgPSBoYW5kbGVPYmouc2VsZWN0b3IgKyBcIiBcIjtcblxuXHRcdFx0XHRcdFx0aWYgKCBtYXRjaGVkU2VsZWN0b3JzWyBzZWwgXSA9PT0gdW5kZWZpbmVkICkge1xuXHRcdFx0XHRcdFx0XHRtYXRjaGVkU2VsZWN0b3JzWyBzZWwgXSA9IGhhbmRsZU9iai5uZWVkc0NvbnRleHQgP1xuXHRcdFx0XHRcdFx0XHRcdGpRdWVyeSggc2VsLCB0aGlzICkuaW5kZXgoIGN1ciApID4gLTEgOlxuXHRcdFx0XHRcdFx0XHRcdGpRdWVyeS5maW5kKCBzZWwsIHRoaXMsIG51bGwsIFsgY3VyIF0gKS5sZW5ndGg7XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHRpZiAoIG1hdGNoZWRTZWxlY3RvcnNbIHNlbCBdICkge1xuXHRcdFx0XHRcdFx0XHRtYXRjaGVkSGFuZGxlcnMucHVzaCggaGFuZGxlT2JqICk7XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHRcdGlmICggbWF0Y2hlZEhhbmRsZXJzLmxlbmd0aCApIHtcblx0XHRcdFx0XHRcdGhhbmRsZXJRdWV1ZS5wdXNoKCB7IGVsZW06IGN1ciwgaGFuZGxlcnM6IG1hdGNoZWRIYW5kbGVycyB9ICk7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fVxuXG5cdFx0Ly8gQWRkIHRoZSByZW1haW5pbmcgKGRpcmVjdGx5LWJvdW5kKSBoYW5kbGVyc1xuXHRcdGN1ciA9IHRoaXM7XG5cdFx0aWYgKCBkZWxlZ2F0ZUNvdW50IDwgaGFuZGxlcnMubGVuZ3RoICkge1xuXHRcdFx0aGFuZGxlclF1ZXVlLnB1c2goIHsgZWxlbTogY3VyLCBoYW5kbGVyczogaGFuZGxlcnMuc2xpY2UoIGRlbGVnYXRlQ291bnQgKSB9ICk7XG5cdFx0fVxuXG5cdFx0cmV0dXJuIGhhbmRsZXJRdWV1ZTtcblx0fSxcblxuXHRhZGRQcm9wOiBmdW5jdGlvbiggbmFtZSwgaG9vayApIHtcblx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoIGpRdWVyeS5FdmVudC5wcm90b3R5cGUsIG5hbWUsIHtcblx0XHRcdGVudW1lcmFibGU6IHRydWUsXG5cdFx0XHRjb25maWd1cmFibGU6IHRydWUsXG5cblx0XHRcdGdldDogaXNGdW5jdGlvbiggaG9vayApID9cblx0XHRcdFx0ZnVuY3Rpb24oKSB7XG5cdFx0XHRcdFx0aWYgKCB0aGlzLm9yaWdpbmFsRXZlbnQgKSB7XG5cdFx0XHRcdFx0XHRcdHJldHVybiBob29rKCB0aGlzLm9yaWdpbmFsRXZlbnQgKTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH0gOlxuXHRcdFx0XHRmdW5jdGlvbigpIHtcblx0XHRcdFx0XHRpZiAoIHRoaXMub3JpZ2luYWxFdmVudCApIHtcblx0XHRcdFx0XHRcdFx0cmV0dXJuIHRoaXMub3JpZ2luYWxFdmVudFsgbmFtZSBdO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fSxcblxuXHRcdFx0c2V0OiBmdW5jdGlvbiggdmFsdWUgKSB7XG5cdFx0XHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eSggdGhpcywgbmFtZSwge1xuXHRcdFx0XHRcdGVudW1lcmFibGU6IHRydWUsXG5cdFx0XHRcdFx0Y29uZmlndXJhYmxlOiB0cnVlLFxuXHRcdFx0XHRcdHdyaXRhYmxlOiB0cnVlLFxuXHRcdFx0XHRcdHZhbHVlOiB2YWx1ZVxuXHRcdFx0XHR9ICk7XG5cdFx0XHR9XG5cdFx0fSApO1xuXHR9LFxuXG5cdGZpeDogZnVuY3Rpb24oIG9yaWdpbmFsRXZlbnQgKSB7XG5cdFx0cmV0dXJuIG9yaWdpbmFsRXZlbnRbIGpRdWVyeS5leHBhbmRvIF0gP1xuXHRcdFx0b3JpZ2luYWxFdmVudCA6XG5cdFx0XHRuZXcgalF1ZXJ5LkV2ZW50KCBvcmlnaW5hbEV2ZW50ICk7XG5cdH0sXG5cblx0c3BlY2lhbDoge1xuXHRcdGxvYWQ6IHtcblxuXHRcdFx0Ly8gUHJldmVudCB0cmlnZ2VyZWQgaW1hZ2UubG9hZCBldmVudHMgZnJvbSBidWJibGluZyB0byB3aW5kb3cubG9hZFxuXHRcdFx0bm9CdWJibGU6IHRydWVcblx0XHR9LFxuXHRcdGNsaWNrOiB7XG5cblx0XHRcdC8vIFV0aWxpemUgbmF0aXZlIGV2ZW50IHRvIGVuc3VyZSBjb3JyZWN0IHN0YXRlIGZvciBjaGVja2FibGUgaW5wdXRzXG5cdFx0XHRzZXR1cDogZnVuY3Rpb24oIGRhdGEgKSB7XG5cblx0XHRcdFx0Ly8gRm9yIG11dHVhbCBjb21wcmVzc2liaWxpdHkgd2l0aCBfZGVmYXVsdCwgcmVwbGFjZSBgdGhpc2AgYWNjZXNzIHdpdGggYSBsb2NhbCB2YXIuXG5cdFx0XHRcdC8vIGB8fCBkYXRhYCBpcyBkZWFkIGNvZGUgbWVhbnQgb25seSB0byBwcmVzZXJ2ZSB0aGUgdmFyaWFibGUgdGhyb3VnaCBtaW5pZmljYXRpb24uXG5cdFx0XHRcdHZhciBlbCA9IHRoaXMgfHwgZGF0YTtcblxuXHRcdFx0XHQvLyBDbGFpbSB0aGUgZmlyc3QgaGFuZGxlclxuXHRcdFx0XHRpZiAoIHJjaGVja2FibGVUeXBlLnRlc3QoIGVsLnR5cGUgKSAmJlxuXHRcdFx0XHRcdGVsLmNsaWNrICYmIG5vZGVOYW1lKCBlbCwgXCJpbnB1dFwiICkgKSB7XG5cblx0XHRcdFx0XHQvLyBkYXRhUHJpdi5zZXQoIGVsLCBcImNsaWNrXCIsIC4uLiApXG5cdFx0XHRcdFx0bGV2ZXJhZ2VOYXRpdmUoIGVsLCBcImNsaWNrXCIsIHJldHVyblRydWUgKTtcblx0XHRcdFx0fVxuXG5cdFx0XHRcdC8vIFJldHVybiBmYWxzZSB0byBhbGxvdyBub3JtYWwgcHJvY2Vzc2luZyBpbiB0aGUgY2FsbGVyXG5cdFx0XHRcdHJldHVybiBmYWxzZTtcblx0XHRcdH0sXG5cdFx0XHR0cmlnZ2VyOiBmdW5jdGlvbiggZGF0YSApIHtcblxuXHRcdFx0XHQvLyBGb3IgbXV0dWFsIGNvbXByZXNzaWJpbGl0eSB3aXRoIF9kZWZhdWx0LCByZXBsYWNlIGB0aGlzYCBhY2Nlc3Mgd2l0aCBhIGxvY2FsIHZhci5cblx0XHRcdFx0Ly8gYHx8IGRhdGFgIGlzIGRlYWQgY29kZSBtZWFudCBvbmx5IHRvIHByZXNlcnZlIHRoZSB2YXJpYWJsZSB0aHJvdWdoIG1pbmlmaWNhdGlvbi5cblx0XHRcdFx0dmFyIGVsID0gdGhpcyB8fCBkYXRhO1xuXG5cdFx0XHRcdC8vIEZvcmNlIHNldHVwIGJlZm9yZSB0cmlnZ2VyaW5nIGEgY2xpY2tcblx0XHRcdFx0aWYgKCByY2hlY2thYmxlVHlwZS50ZXN0KCBlbC50eXBlICkgJiZcblx0XHRcdFx0XHRlbC5jbGljayAmJiBub2RlTmFtZSggZWwsIFwiaW5wdXRcIiApICkge1xuXG5cdFx0XHRcdFx0bGV2ZXJhZ2VOYXRpdmUoIGVsLCBcImNsaWNrXCIgKTtcblx0XHRcdFx0fVxuXG5cdFx0XHRcdC8vIFJldHVybiBub24tZmFsc2UgdG8gYWxsb3cgbm9ybWFsIGV2ZW50LXBhdGggcHJvcGFnYXRpb25cblx0XHRcdFx0cmV0dXJuIHRydWU7XG5cdFx0XHR9LFxuXG5cdFx0XHQvLyBGb3IgY3Jvc3MtYnJvd3NlciBjb25zaXN0ZW5jeSwgc3VwcHJlc3MgbmF0aXZlIC5jbGljaygpIG9uIGxpbmtzXG5cdFx0XHQvLyBBbHNvIHByZXZlbnQgaXQgaWYgd2UncmUgY3VycmVudGx5IGluc2lkZSBhIGxldmVyYWdlZCBuYXRpdmUtZXZlbnQgc3RhY2tcblx0XHRcdF9kZWZhdWx0OiBmdW5jdGlvbiggZXZlbnQgKSB7XG5cdFx0XHRcdHZhciB0YXJnZXQgPSBldmVudC50YXJnZXQ7XG5cdFx0XHRcdHJldHVybiByY2hlY2thYmxlVHlwZS50ZXN0KCB0YXJnZXQudHlwZSApICYmXG5cdFx0XHRcdFx0dGFyZ2V0LmNsaWNrICYmIG5vZGVOYW1lKCB0YXJnZXQsIFwiaW5wdXRcIiApICYmXG5cdFx0XHRcdFx0ZGF0YVByaXYuZ2V0KCB0YXJnZXQsIFwiY2xpY2tcIiApIHx8XG5cdFx0XHRcdFx0bm9kZU5hbWUoIHRhcmdldCwgXCJhXCIgKTtcblx0XHRcdH1cblx0XHR9LFxuXG5cdFx0YmVmb3JldW5sb2FkOiB7XG5cdFx0XHRwb3N0RGlzcGF0Y2g6IGZ1bmN0aW9uKCBldmVudCApIHtcblxuXHRcdFx0XHQvLyBTdXBwb3J0OiBGaXJlZm94IDIwK1xuXHRcdFx0XHQvLyBGaXJlZm94IGRvZXNuJ3QgYWxlcnQgaWYgdGhlIHJldHVyblZhbHVlIGZpZWxkIGlzIG5vdCBzZXQuXG5cdFx0XHRcdGlmICggZXZlbnQucmVzdWx0ICE9PSB1bmRlZmluZWQgJiYgZXZlbnQub3JpZ2luYWxFdmVudCApIHtcblx0XHRcdFx0XHRldmVudC5vcmlnaW5hbEV2ZW50LnJldHVyblZhbHVlID0gZXZlbnQucmVzdWx0O1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fVxuXHR9XG59O1xuXG4vLyBFbnN1cmUgdGhlIHByZXNlbmNlIG9mIGFuIGV2ZW50IGxpc3RlbmVyIHRoYXQgaGFuZGxlcyBtYW51YWxseS10cmlnZ2VyZWRcbi8vIHN5bnRoZXRpYyBldmVudHMgYnkgaW50ZXJydXB0aW5nIHByb2dyZXNzIHVudGlsIHJlaW52b2tlZCBpbiByZXNwb25zZSB0b1xuLy8gKm5hdGl2ZSogZXZlbnRzIHRoYXQgaXQgZmlyZXMgZGlyZWN0bHksIGVuc3VyaW5nIHRoYXQgc3RhdGUgY2hhbmdlcyBoYXZlXG4vLyBhbHJlYWR5IG9jY3VycmVkIGJlZm9yZSBvdGhlciBsaXN0ZW5lcnMgYXJlIGludm9rZWQuXG5mdW5jdGlvbiBsZXZlcmFnZU5hdGl2ZSggZWwsIHR5cGUsIGV4cGVjdFN5bmMgKSB7XG5cblx0Ly8gTWlzc2luZyBleHBlY3RTeW5jIGluZGljYXRlcyBhIHRyaWdnZXIgY2FsbCwgd2hpY2ggbXVzdCBmb3JjZSBzZXR1cCB0aHJvdWdoIGpRdWVyeS5ldmVudC5hZGRcblx0aWYgKCAhZXhwZWN0U3luYyApIHtcblx0XHRpZiAoIGRhdGFQcml2LmdldCggZWwsIHR5cGUgKSA9PT0gdW5kZWZpbmVkICkge1xuXHRcdFx0alF1ZXJ5LmV2ZW50LmFkZCggZWwsIHR5cGUsIHJldHVyblRydWUgKTtcblx0XHR9XG5cdFx0cmV0dXJuO1xuXHR9XG5cblx0Ly8gUmVnaXN0ZXIgdGhlIGNvbnRyb2xsZXIgYXMgYSBzcGVjaWFsIHVuaXZlcnNhbCBoYW5kbGVyIGZvciBhbGwgZXZlbnQgbmFtZXNwYWNlc1xuXHRkYXRhUHJpdi5zZXQoIGVsLCB0eXBlLCBmYWxzZSApO1xuXHRqUXVlcnkuZXZlbnQuYWRkKCBlbCwgdHlwZSwge1xuXHRcdG5hbWVzcGFjZTogZmFsc2UsXG5cdFx0aGFuZGxlcjogZnVuY3Rpb24oIGV2ZW50ICkge1xuXHRcdFx0dmFyIG5vdEFzeW5jLCByZXN1bHQsXG5cdFx0XHRcdHNhdmVkID0gZGF0YVByaXYuZ2V0KCB0aGlzLCB0eXBlICk7XG5cblx0XHRcdGlmICggKCBldmVudC5pc1RyaWdnZXIgJiAxICkgJiYgdGhpc1sgdHlwZSBdICkge1xuXG5cdFx0XHRcdC8vIEludGVycnVwdCBwcm9jZXNzaW5nIG9mIHRoZSBvdXRlciBzeW50aGV0aWMgLnRyaWdnZXIoKWVkIGV2ZW50XG5cdFx0XHRcdC8vIFNhdmVkIGRhdGEgc2hvdWxkIGJlIGZhbHNlIGluIHN1Y2ggY2FzZXMsIGJ1dCBtaWdodCBiZSBhIGxlZnRvdmVyIGNhcHR1cmUgb2JqZWN0XG5cdFx0XHRcdC8vIGZyb20gYW4gYXN5bmMgbmF0aXZlIGhhbmRsZXIgKGdoLTQzNTApXG5cdFx0XHRcdGlmICggIXNhdmVkLmxlbmd0aCApIHtcblxuXHRcdFx0XHRcdC8vIFN0b3JlIGFyZ3VtZW50cyBmb3IgdXNlIHdoZW4gaGFuZGxpbmcgdGhlIGlubmVyIG5hdGl2ZSBldmVudFxuXHRcdFx0XHRcdC8vIFRoZXJlIHdpbGwgYWx3YXlzIGJlIGF0IGxlYXN0IG9uZSBhcmd1bWVudCAoYW4gZXZlbnQgb2JqZWN0KSwgc28gdGhpcyBhcnJheVxuXHRcdFx0XHRcdC8vIHdpbGwgbm90IGJlIGNvbmZ1c2VkIHdpdGggYSBsZWZ0b3ZlciBjYXB0dXJlIG9iamVjdC5cblx0XHRcdFx0XHRzYXZlZCA9IHNsaWNlLmNhbGwoIGFyZ3VtZW50cyApO1xuXHRcdFx0XHRcdGRhdGFQcml2LnNldCggdGhpcywgdHlwZSwgc2F2ZWQgKTtcblxuXHRcdFx0XHRcdC8vIFRyaWdnZXIgdGhlIG5hdGl2ZSBldmVudCBhbmQgY2FwdHVyZSBpdHMgcmVzdWx0XG5cdFx0XHRcdFx0Ly8gU3VwcG9ydDogSUUgPD05IC0gMTErXG5cdFx0XHRcdFx0Ly8gZm9jdXMoKSBhbmQgYmx1cigpIGFyZSBhc3luY2hyb25vdXNcblx0XHRcdFx0XHRub3RBc3luYyA9IGV4cGVjdFN5bmMoIHRoaXMsIHR5cGUgKTtcblx0XHRcdFx0XHR0aGlzWyB0eXBlIF0oKTtcblx0XHRcdFx0XHRyZXN1bHQgPSBkYXRhUHJpdi5nZXQoIHRoaXMsIHR5cGUgKTtcblx0XHRcdFx0XHRpZiAoIHNhdmVkICE9PSByZXN1bHQgfHwgbm90QXN5bmMgKSB7XG5cdFx0XHRcdFx0XHRkYXRhUHJpdi5zZXQoIHRoaXMsIHR5cGUsIGZhbHNlICk7XG5cdFx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHRcdHJlc3VsdCA9IHt9O1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0XHRpZiAoIHNhdmVkICE9PSByZXN1bHQgKSB7XG5cblx0XHRcdFx0XHRcdC8vIENhbmNlbCB0aGUgb3V0ZXIgc3ludGhldGljIGV2ZW50XG5cdFx0XHRcdFx0XHRldmVudC5zdG9wSW1tZWRpYXRlUHJvcGFnYXRpb24oKTtcblx0XHRcdFx0XHRcdGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG5cdFx0XHRcdFx0XHRyZXR1cm4gcmVzdWx0LnZhbHVlO1xuXHRcdFx0XHRcdH1cblxuXHRcdFx0XHQvLyBJZiB0aGlzIGlzIGFuIGlubmVyIHN5bnRoZXRpYyBldmVudCBmb3IgYW4gZXZlbnQgd2l0aCBhIGJ1YmJsaW5nIHN1cnJvZ2F0ZVxuXHRcdFx0XHQvLyAoZm9jdXMgb3IgYmx1ciksIGFzc3VtZSB0aGF0IHRoZSBzdXJyb2dhdGUgYWxyZWFkeSBwcm9wYWdhdGVkIGZyb20gdHJpZ2dlcmluZyB0aGVcblx0XHRcdFx0Ly8gbmF0aXZlIGV2ZW50IGFuZCBwcmV2ZW50IHRoYXQgZnJvbSBoYXBwZW5pbmcgYWdhaW4gaGVyZS5cblx0XHRcdFx0Ly8gVGhpcyB0ZWNobmljYWxseSBnZXRzIHRoZSBvcmRlcmluZyB3cm9uZyB3LnIudC4gdG8gYC50cmlnZ2VyKClgIChpbiB3aGljaCB0aGVcblx0XHRcdFx0Ly8gYnViYmxpbmcgc3Vycm9nYXRlIHByb3BhZ2F0ZXMgKmFmdGVyKiB0aGUgbm9uLWJ1YmJsaW5nIGJhc2UpLCBidXQgdGhhdCBzZWVtc1xuXHRcdFx0XHQvLyBsZXNzIGJhZCB0aGFuIGR1cGxpY2F0aW9uLlxuXHRcdFx0XHR9IGVsc2UgaWYgKCAoIGpRdWVyeS5ldmVudC5zcGVjaWFsWyB0eXBlIF0gfHwge30gKS5kZWxlZ2F0ZVR5cGUgKSB7XG5cdFx0XHRcdFx0ZXZlbnQuc3RvcFByb3BhZ2F0aW9uKCk7XG5cdFx0XHRcdH1cblxuXHRcdFx0Ly8gSWYgdGhpcyBpcyBhIG5hdGl2ZSBldmVudCB0cmlnZ2VyZWQgYWJvdmUsIGV2ZXJ5dGhpbmcgaXMgbm93IGluIG9yZGVyXG5cdFx0XHQvLyBGaXJlIGFuIGlubmVyIHN5bnRoZXRpYyBldmVudCB3aXRoIHRoZSBvcmlnaW5hbCBhcmd1bWVudHNcblx0XHRcdH0gZWxzZSBpZiAoIHNhdmVkLmxlbmd0aCApIHtcblxuXHRcdFx0XHQvLyAuLi5hbmQgY2FwdHVyZSB0aGUgcmVzdWx0XG5cdFx0XHRcdGRhdGFQcml2LnNldCggdGhpcywgdHlwZSwge1xuXHRcdFx0XHRcdHZhbHVlOiBqUXVlcnkuZXZlbnQudHJpZ2dlcihcblxuXHRcdFx0XHRcdFx0Ly8gU3VwcG9ydDogSUUgPD05IC0gMTErXG5cdFx0XHRcdFx0XHQvLyBFeHRlbmQgd2l0aCB0aGUgcHJvdG90eXBlIHRvIHJlc2V0IHRoZSBhYm92ZSBzdG9wSW1tZWRpYXRlUHJvcGFnYXRpb24oKVxuXHRcdFx0XHRcdFx0alF1ZXJ5LmV4dGVuZCggc2F2ZWRbIDAgXSwgalF1ZXJ5LkV2ZW50LnByb3RvdHlwZSApLFxuXHRcdFx0XHRcdFx0c2F2ZWQuc2xpY2UoIDEgKSxcblx0XHRcdFx0XHRcdHRoaXNcblx0XHRcdFx0XHQpXG5cdFx0XHRcdH0gKTtcblxuXHRcdFx0XHQvLyBBYm9ydCBoYW5kbGluZyBvZiB0aGUgbmF0aXZlIGV2ZW50XG5cdFx0XHRcdGV2ZW50LnN0b3BJbW1lZGlhdGVQcm9wYWdhdGlvbigpO1xuXHRcdFx0fVxuXHRcdH1cblx0fSApO1xufVxuXG5qUXVlcnkucmVtb3ZlRXZlbnQgPSBmdW5jdGlvbiggZWxlbSwgdHlwZSwgaGFuZGxlICkge1xuXG5cdC8vIFRoaXMgXCJpZlwiIGlzIG5lZWRlZCBmb3IgcGxhaW4gb2JqZWN0c1xuXHRpZiAoIGVsZW0ucmVtb3ZlRXZlbnRMaXN0ZW5lciApIHtcblx0XHRlbGVtLnJlbW92ZUV2ZW50TGlzdGVuZXIoIHR5cGUsIGhhbmRsZSApO1xuXHR9XG59O1xuXG5qUXVlcnkuRXZlbnQgPSBmdW5jdGlvbiggc3JjLCBwcm9wcyApIHtcblxuXHQvLyBBbGxvdyBpbnN0YW50aWF0aW9uIHdpdGhvdXQgdGhlICduZXcnIGtleXdvcmRcblx0aWYgKCAhKCB0aGlzIGluc3RhbmNlb2YgalF1ZXJ5LkV2ZW50ICkgKSB7XG5cdFx0cmV0dXJuIG5ldyBqUXVlcnkuRXZlbnQoIHNyYywgcHJvcHMgKTtcblx0fVxuXG5cdC8vIEV2ZW50IG9iamVjdFxuXHRpZiAoIHNyYyAmJiBzcmMudHlwZSApIHtcblx0XHR0aGlzLm9yaWdpbmFsRXZlbnQgPSBzcmM7XG5cdFx0dGhpcy50eXBlID0gc3JjLnR5cGU7XG5cblx0XHQvLyBFdmVudHMgYnViYmxpbmcgdXAgdGhlIGRvY3VtZW50IG1heSBoYXZlIGJlZW4gbWFya2VkIGFzIHByZXZlbnRlZFxuXHRcdC8vIGJ5IGEgaGFuZGxlciBsb3dlciBkb3duIHRoZSB0cmVlOyByZWZsZWN0IHRoZSBjb3JyZWN0IHZhbHVlLlxuXHRcdHRoaXMuaXNEZWZhdWx0UHJldmVudGVkID0gc3JjLmRlZmF1bHRQcmV2ZW50ZWQgfHxcblx0XHRcdFx0c3JjLmRlZmF1bHRQcmV2ZW50ZWQgPT09IHVuZGVmaW5lZCAmJlxuXG5cdFx0XHRcdC8vIFN1cHBvcnQ6IEFuZHJvaWQgPD0yLjMgb25seVxuXHRcdFx0XHRzcmMucmV0dXJuVmFsdWUgPT09IGZhbHNlID9cblx0XHRcdHJldHVyblRydWUgOlxuXHRcdFx0cmV0dXJuRmFsc2U7XG5cblx0XHQvLyBDcmVhdGUgdGFyZ2V0IHByb3BlcnRpZXNcblx0XHQvLyBTdXBwb3J0OiBTYWZhcmkgPD02IC0gNyBvbmx5XG5cdFx0Ly8gVGFyZ2V0IHNob3VsZCBub3QgYmUgYSB0ZXh0IG5vZGUgKCM1MDQsICMxMzE0Mylcblx0XHR0aGlzLnRhcmdldCA9ICggc3JjLnRhcmdldCAmJiBzcmMudGFyZ2V0Lm5vZGVUeXBlID09PSAzICkgP1xuXHRcdFx0c3JjLnRhcmdldC5wYXJlbnROb2RlIDpcblx0XHRcdHNyYy50YXJnZXQ7XG5cblx0XHR0aGlzLmN1cnJlbnRUYXJnZXQgPSBzcmMuY3VycmVudFRhcmdldDtcblx0XHR0aGlzLnJlbGF0ZWRUYXJnZXQgPSBzcmMucmVsYXRlZFRhcmdldDtcblxuXHQvLyBFdmVudCB0eXBlXG5cdH0gZWxzZSB7XG5cdFx0dGhpcy50eXBlID0gc3JjO1xuXHR9XG5cblx0Ly8gUHV0IGV4cGxpY2l0bHkgcHJvdmlkZWQgcHJvcGVydGllcyBvbnRvIHRoZSBldmVudCBvYmplY3Rcblx0aWYgKCBwcm9wcyApIHtcblx0XHRqUXVlcnkuZXh0ZW5kKCB0aGlzLCBwcm9wcyApO1xuXHR9XG5cblx0Ly8gQ3JlYXRlIGEgdGltZXN0YW1wIGlmIGluY29taW5nIGV2ZW50IGRvZXNuJ3QgaGF2ZSBvbmVcblx0dGhpcy50aW1lU3RhbXAgPSBzcmMgJiYgc3JjLnRpbWVTdGFtcCB8fCBEYXRlLm5vdygpO1xuXG5cdC8vIE1hcmsgaXQgYXMgZml4ZWRcblx0dGhpc1sgalF1ZXJ5LmV4cGFuZG8gXSA9IHRydWU7XG59O1xuXG4vLyBqUXVlcnkuRXZlbnQgaXMgYmFzZWQgb24gRE9NMyBFdmVudHMgYXMgc3BlY2lmaWVkIGJ5IHRoZSBFQ01BU2NyaXB0IExhbmd1YWdlIEJpbmRpbmdcbi8vIGh0dHBzOi8vd3d3LnczLm9yZy9UUi8yMDAzL1dELURPTS1MZXZlbC0zLUV2ZW50cy0yMDAzMDMzMS9lY21hLXNjcmlwdC1iaW5kaW5nLmh0bWxcbmpRdWVyeS5FdmVudC5wcm90b3R5cGUgPSB7XG5cdGNvbnN0cnVjdG9yOiBqUXVlcnkuRXZlbnQsXG5cdGlzRGVmYXVsdFByZXZlbnRlZDogcmV0dXJuRmFsc2UsXG5cdGlzUHJvcGFnYXRpb25TdG9wcGVkOiByZXR1cm5GYWxzZSxcblx0aXNJbW1lZGlhdGVQcm9wYWdhdGlvblN0b3BwZWQ6IHJldHVybkZhbHNlLFxuXHRpc1NpbXVsYXRlZDogZmFsc2UsXG5cblx0cHJldmVudERlZmF1bHQ6IGZ1bmN0aW9uKCkge1xuXHRcdHZhciBlID0gdGhpcy5vcmlnaW5hbEV2ZW50O1xuXG5cdFx0dGhpcy5pc0RlZmF1bHRQcmV2ZW50ZWQgPSByZXR1cm5UcnVlO1xuXG5cdFx0aWYgKCBlICYmICF0aGlzLmlzU2ltdWxhdGVkICkge1xuXHRcdFx0ZS5wcmV2ZW50RGVmYXVsdCgpO1xuXHRcdH1cblx0fSxcblx0c3RvcFByb3BhZ2F0aW9uOiBmdW5jdGlvbigpIHtcblx0XHR2YXIgZSA9IHRoaXMub3JpZ2luYWxFdmVudDtcblxuXHRcdHRoaXMuaXNQcm9wYWdhdGlvblN0b3BwZWQgPSByZXR1cm5UcnVlO1xuXG5cdFx0aWYgKCBlICYmICF0aGlzLmlzU2ltdWxhdGVkICkge1xuXHRcdFx0ZS5zdG9wUHJvcGFnYXRpb24oKTtcblx0XHR9XG5cdH0sXG5cdHN0b3BJbW1lZGlhdGVQcm9wYWdhdGlvbjogZnVuY3Rpb24oKSB7XG5cdFx0dmFyIGUgPSB0aGlzLm9yaWdpbmFsRXZlbnQ7XG5cblx0XHR0aGlzLmlzSW1tZWRpYXRlUHJvcGFnYXRpb25TdG9wcGVkID0gcmV0dXJuVHJ1ZTtcblxuXHRcdGlmICggZSAmJiAhdGhpcy5pc1NpbXVsYXRlZCApIHtcblx0XHRcdGUuc3RvcEltbWVkaWF0ZVByb3BhZ2F0aW9uKCk7XG5cdFx0fVxuXG5cdFx0dGhpcy5zdG9wUHJvcGFnYXRpb24oKTtcblx0fVxufTtcblxuLy8gSW5jbHVkZXMgYWxsIGNvbW1vbiBldmVudCBwcm9wcyBpbmNsdWRpbmcgS2V5RXZlbnQgYW5kIE1vdXNlRXZlbnQgc3BlY2lmaWMgcHJvcHNcbmpRdWVyeS5lYWNoKCB7XG5cdGFsdEtleTogdHJ1ZSxcblx0YnViYmxlczogdHJ1ZSxcblx0Y2FuY2VsYWJsZTogdHJ1ZSxcblx0Y2hhbmdlZFRvdWNoZXM6IHRydWUsXG5cdGN0cmxLZXk6IHRydWUsXG5cdGRldGFpbDogdHJ1ZSxcblx0ZXZlbnRQaGFzZTogdHJ1ZSxcblx0bWV0YUtleTogdHJ1ZSxcblx0cGFnZVg6IHRydWUsXG5cdHBhZ2VZOiB0cnVlLFxuXHRzaGlmdEtleTogdHJ1ZSxcblx0dmlldzogdHJ1ZSxcblx0XCJjaGFyXCI6IHRydWUsXG5cdGNvZGU6IHRydWUsXG5cdGNoYXJDb2RlOiB0cnVlLFxuXHRrZXk6IHRydWUsXG5cdGtleUNvZGU6IHRydWUsXG5cdGJ1dHRvbjogdHJ1ZSxcblx0YnV0dG9uczogdHJ1ZSxcblx0Y2xpZW50WDogdHJ1ZSxcblx0Y2xpZW50WTogdHJ1ZSxcblx0b2Zmc2V0WDogdHJ1ZSxcblx0b2Zmc2V0WTogdHJ1ZSxcblx0cG9pbnRlcklkOiB0cnVlLFxuXHRwb2ludGVyVHlwZTogdHJ1ZSxcblx0c2NyZWVuWDogdHJ1ZSxcblx0c2NyZWVuWTogdHJ1ZSxcblx0dGFyZ2V0VG91Y2hlczogdHJ1ZSxcblx0dG9FbGVtZW50OiB0cnVlLFxuXHR0b3VjaGVzOiB0cnVlLFxuXG5cdHdoaWNoOiBmdW5jdGlvbiggZXZlbnQgKSB7XG5cdFx0dmFyIGJ1dHRvbiA9IGV2ZW50LmJ1dHRvbjtcblxuXHRcdC8vIEFkZCB3aGljaCBmb3Iga2V5IGV2ZW50c1xuXHRcdGlmICggZXZlbnQud2hpY2ggPT0gbnVsbCAmJiBya2V5RXZlbnQudGVzdCggZXZlbnQudHlwZSApICkge1xuXHRcdFx0cmV0dXJuIGV2ZW50LmNoYXJDb2RlICE9IG51bGwgPyBldmVudC5jaGFyQ29kZSA6IGV2ZW50LmtleUNvZGU7XG5cdFx0fVxuXG5cdFx0Ly8gQWRkIHdoaWNoIGZvciBjbGljazogMSA9PT0gbGVmdDsgMiA9PT0gbWlkZGxlOyAzID09PSByaWdodFxuXHRcdGlmICggIWV2ZW50LndoaWNoICYmIGJ1dHRvbiAhPT0gdW5kZWZpbmVkICYmIHJtb3VzZUV2ZW50LnRlc3QoIGV2ZW50LnR5cGUgKSApIHtcblx0XHRcdGlmICggYnV0dG9uICYgMSApIHtcblx0XHRcdFx0cmV0dXJuIDE7XG5cdFx0XHR9XG5cblx0XHRcdGlmICggYnV0dG9uICYgMiApIHtcblx0XHRcdFx0cmV0dXJuIDM7XG5cdFx0XHR9XG5cblx0XHRcdGlmICggYnV0dG9uICYgNCApIHtcblx0XHRcdFx0cmV0dXJuIDI7XG5cdFx0XHR9XG5cblx0XHRcdHJldHVybiAwO1xuXHRcdH1cblxuXHRcdHJldHVybiBldmVudC53aGljaDtcblx0fVxufSwgalF1ZXJ5LmV2ZW50LmFkZFByb3AgKTtcblxualF1ZXJ5LmVhY2goIHsgZm9jdXM6IFwiZm9jdXNpblwiLCBibHVyOiBcImZvY3Vzb3V0XCIgfSwgZnVuY3Rpb24oIHR5cGUsIGRlbGVnYXRlVHlwZSApIHtcblx0alF1ZXJ5LmV2ZW50LnNwZWNpYWxbIHR5cGUgXSA9IHtcblxuXHRcdC8vIFV0aWxpemUgbmF0aXZlIGV2ZW50IGlmIHBvc3NpYmxlIHNvIGJsdXIvZm9jdXMgc2VxdWVuY2UgaXMgY29ycmVjdFxuXHRcdHNldHVwOiBmdW5jdGlvbigpIHtcblxuXHRcdFx0Ly8gQ2xhaW0gdGhlIGZpcnN0IGhhbmRsZXJcblx0XHRcdC8vIGRhdGFQcml2LnNldCggdGhpcywgXCJmb2N1c1wiLCAuLi4gKVxuXHRcdFx0Ly8gZGF0YVByaXYuc2V0KCB0aGlzLCBcImJsdXJcIiwgLi4uIClcblx0XHRcdGxldmVyYWdlTmF0aXZlKCB0aGlzLCB0eXBlLCBleHBlY3RTeW5jICk7XG5cblx0XHRcdC8vIFJldHVybiBmYWxzZSB0byBhbGxvdyBub3JtYWwgcHJvY2Vzc2luZyBpbiB0aGUgY2FsbGVyXG5cdFx0XHRyZXR1cm4gZmFsc2U7XG5cdFx0fSxcblx0XHR0cmlnZ2VyOiBmdW5jdGlvbigpIHtcblxuXHRcdFx0Ly8gRm9yY2Ugc2V0dXAgYmVmb3JlIHRyaWdnZXJcblx0XHRcdGxldmVyYWdlTmF0aXZlKCB0aGlzLCB0eXBlICk7XG5cblx0XHRcdC8vIFJldHVybiBub24tZmFsc2UgdG8gYWxsb3cgbm9ybWFsIGV2ZW50LXBhdGggcHJvcGFnYXRpb25cblx0XHRcdHJldHVybiB0cnVlO1xuXHRcdH0sXG5cblx0XHRkZWxlZ2F0ZVR5cGU6IGRlbGVnYXRlVHlwZVxuXHR9O1xufSApO1xuXG4vLyBDcmVhdGUgbW91c2VlbnRlci9sZWF2ZSBldmVudHMgdXNpbmcgbW91c2VvdmVyL291dCBhbmQgZXZlbnQtdGltZSBjaGVja3Ncbi8vIHNvIHRoYXQgZXZlbnQgZGVsZWdhdGlvbiB3b3JrcyBpbiBqUXVlcnkuXG4vLyBEbyB0aGUgc2FtZSBmb3IgcG9pbnRlcmVudGVyL3BvaW50ZXJsZWF2ZSBhbmQgcG9pbnRlcm92ZXIvcG9pbnRlcm91dFxuLy9cbi8vIFN1cHBvcnQ6IFNhZmFyaSA3IG9ubHlcbi8vIFNhZmFyaSBzZW5kcyBtb3VzZWVudGVyIHRvbyBvZnRlbjsgc2VlOlxuLy8gaHR0cHM6Ly9idWdzLmNocm9taXVtLm9yZy9wL2Nocm9taXVtL2lzc3Vlcy9kZXRhaWw/aWQ9NDcwMjU4XG4vLyBmb3IgdGhlIGRlc2NyaXB0aW9uIG9mIHRoZSBidWcgKGl0IGV4aXN0ZWQgaW4gb2xkZXIgQ2hyb21lIHZlcnNpb25zIGFzIHdlbGwpLlxualF1ZXJ5LmVhY2goIHtcblx0bW91c2VlbnRlcjogXCJtb3VzZW92ZXJcIixcblx0bW91c2VsZWF2ZTogXCJtb3VzZW91dFwiLFxuXHRwb2ludGVyZW50ZXI6IFwicG9pbnRlcm92ZXJcIixcblx0cG9pbnRlcmxlYXZlOiBcInBvaW50ZXJvdXRcIlxufSwgZnVuY3Rpb24oIG9yaWcsIGZpeCApIHtcblx0alF1ZXJ5LmV2ZW50LnNwZWNpYWxbIG9yaWcgXSA9IHtcblx0XHRkZWxlZ2F0ZVR5cGU6IGZpeCxcblx0XHRiaW5kVHlwZTogZml4LFxuXG5cdFx0aGFuZGxlOiBmdW5jdGlvbiggZXZlbnQgKSB7XG5cdFx0XHR2YXIgcmV0LFxuXHRcdFx0XHR0YXJnZXQgPSB0aGlzLFxuXHRcdFx0XHRyZWxhdGVkID0gZXZlbnQucmVsYXRlZFRhcmdldCxcblx0XHRcdFx0aGFuZGxlT2JqID0gZXZlbnQuaGFuZGxlT2JqO1xuXG5cdFx0XHQvLyBGb3IgbW91c2VlbnRlci9sZWF2ZSBjYWxsIHRoZSBoYW5kbGVyIGlmIHJlbGF0ZWQgaXMgb3V0c2lkZSB0aGUgdGFyZ2V0LlxuXHRcdFx0Ly8gTkI6IE5vIHJlbGF0ZWRUYXJnZXQgaWYgdGhlIG1vdXNlIGxlZnQvZW50ZXJlZCB0aGUgYnJvd3NlciB3aW5kb3dcblx0XHRcdGlmICggIXJlbGF0ZWQgfHwgKCByZWxhdGVkICE9PSB0YXJnZXQgJiYgIWpRdWVyeS5jb250YWlucyggdGFyZ2V0LCByZWxhdGVkICkgKSApIHtcblx0XHRcdFx0ZXZlbnQudHlwZSA9IGhhbmRsZU9iai5vcmlnVHlwZTtcblx0XHRcdFx0cmV0ID0gaGFuZGxlT2JqLmhhbmRsZXIuYXBwbHkoIHRoaXMsIGFyZ3VtZW50cyApO1xuXHRcdFx0XHRldmVudC50eXBlID0gZml4O1xuXHRcdFx0fVxuXHRcdFx0cmV0dXJuIHJldDtcblx0XHR9XG5cdH07XG59ICk7XG5cbmpRdWVyeS5mbi5leHRlbmQoIHtcblxuXHRvbjogZnVuY3Rpb24oIHR5cGVzLCBzZWxlY3RvciwgZGF0YSwgZm4gKSB7XG5cdFx0cmV0dXJuIG9uKCB0aGlzLCB0eXBlcywgc2VsZWN0b3IsIGRhdGEsIGZuICk7XG5cdH0sXG5cdG9uZTogZnVuY3Rpb24oIHR5cGVzLCBzZWxlY3RvciwgZGF0YSwgZm4gKSB7XG5cdFx0cmV0dXJuIG9uKCB0aGlzLCB0eXBlcywgc2VsZWN0b3IsIGRhdGEsIGZuLCAxICk7XG5cdH0sXG5cdG9mZjogZnVuY3Rpb24oIHR5cGVzLCBzZWxlY3RvciwgZm4gKSB7XG5cdFx0dmFyIGhhbmRsZU9iaiwgdHlwZTtcblx0XHRpZiAoIHR5cGVzICYmIHR5cGVzLnByZXZlbnREZWZhdWx0ICYmIHR5cGVzLmhhbmRsZU9iaiApIHtcblxuXHRcdFx0Ly8gKCBldmVudCApICBkaXNwYXRjaGVkIGpRdWVyeS5FdmVudFxuXHRcdFx0aGFuZGxlT2JqID0gdHlwZXMuaGFuZGxlT2JqO1xuXHRcdFx0alF1ZXJ5KCB0eXBlcy5kZWxlZ2F0ZVRhcmdldCApLm9mZihcblx0XHRcdFx0aGFuZGxlT2JqLm5hbWVzcGFjZSA/XG5cdFx0XHRcdFx0aGFuZGxlT2JqLm9yaWdUeXBlICsgXCIuXCIgKyBoYW5kbGVPYmoubmFtZXNwYWNlIDpcblx0XHRcdFx0XHRoYW5kbGVPYmoub3JpZ1R5cGUsXG5cdFx0XHRcdGhhbmRsZU9iai5zZWxlY3Rvcixcblx0XHRcdFx0aGFuZGxlT2JqLmhhbmRsZXJcblx0XHRcdCk7XG5cdFx0XHRyZXR1cm4gdGhpcztcblx0XHR9XG5cdFx0aWYgKCB0eXBlb2YgdHlwZXMgPT09IFwib2JqZWN0XCIgKSB7XG5cblx0XHRcdC8vICggdHlwZXMtb2JqZWN0IFssIHNlbGVjdG9yXSApXG5cdFx0XHRmb3IgKCB0eXBlIGluIHR5cGVzICkge1xuXHRcdFx0XHR0aGlzLm9mZiggdHlwZSwgc2VsZWN0b3IsIHR5cGVzWyB0eXBlIF0gKTtcblx0XHRcdH1cblx0XHRcdHJldHVybiB0aGlzO1xuXHRcdH1cblx0XHRpZiAoIHNlbGVjdG9yID09PSBmYWxzZSB8fCB0eXBlb2Ygc2VsZWN0b3IgPT09IFwiZnVuY3Rpb25cIiApIHtcblxuXHRcdFx0Ly8gKCB0eXBlcyBbLCBmbl0gKVxuXHRcdFx0Zm4gPSBzZWxlY3Rvcjtcblx0XHRcdHNlbGVjdG9yID0gdW5kZWZpbmVkO1xuXHRcdH1cblx0XHRpZiAoIGZuID09PSBmYWxzZSApIHtcblx0XHRcdGZuID0gcmV0dXJuRmFsc2U7XG5cdFx0fVxuXHRcdHJldHVybiB0aGlzLmVhY2goIGZ1bmN0aW9uKCkge1xuXHRcdFx0alF1ZXJ5LmV2ZW50LnJlbW92ZSggdGhpcywgdHlwZXMsIGZuLCBzZWxlY3RvciApO1xuXHRcdH0gKTtcblx0fVxufSApO1xuXG5cbnZhclxuXG5cdC8vIFN1cHBvcnQ6IElFIDw9MTAgLSAxMSwgRWRnZSAxMiAtIDEzIG9ubHlcblx0Ly8gSW4gSUUvRWRnZSB1c2luZyByZWdleCBncm91cHMgaGVyZSBjYXVzZXMgc2V2ZXJlIHNsb3dkb3ducy5cblx0Ly8gU2VlIGh0dHBzOi8vY29ubmVjdC5taWNyb3NvZnQuY29tL0lFL2ZlZWRiYWNrL2RldGFpbHMvMTczNjUxMi9cblx0cm5vSW5uZXJodG1sID0gLzxzY3JpcHR8PHN0eWxlfDxsaW5rL2ksXG5cblx0Ly8gY2hlY2tlZD1cImNoZWNrZWRcIiBvciBjaGVja2VkXG5cdHJjaGVja2VkID0gL2NoZWNrZWRcXHMqKD86W149XXw9XFxzKi5jaGVja2VkLikvaSxcblx0cmNsZWFuU2NyaXB0ID0gL15cXHMqPCEoPzpcXFtDREFUQVxcW3wtLSl8KD86XFxdXFxdfC0tKT5cXHMqJC9nO1xuXG4vLyBQcmVmZXIgYSB0Ym9keSBvdmVyIGl0cyBwYXJlbnQgdGFibGUgZm9yIGNvbnRhaW5pbmcgbmV3IHJvd3NcbmZ1bmN0aW9uIG1hbmlwdWxhdGlvblRhcmdldCggZWxlbSwgY29udGVudCApIHtcblx0aWYgKCBub2RlTmFtZSggZWxlbSwgXCJ0YWJsZVwiICkgJiZcblx0XHRub2RlTmFtZSggY29udGVudC5ub2RlVHlwZSAhPT0gMTEgPyBjb250ZW50IDogY29udGVudC5maXJzdENoaWxkLCBcInRyXCIgKSApIHtcblxuXHRcdHJldHVybiBqUXVlcnkoIGVsZW0gKS5jaGlsZHJlbiggXCJ0Ym9keVwiIClbIDAgXSB8fCBlbGVtO1xuXHR9XG5cblx0cmV0dXJuIGVsZW07XG59XG5cbi8vIFJlcGxhY2UvcmVzdG9yZSB0aGUgdHlwZSBhdHRyaWJ1dGUgb2Ygc2NyaXB0IGVsZW1lbnRzIGZvciBzYWZlIERPTSBtYW5pcHVsYXRpb25cbmZ1bmN0aW9uIGRpc2FibGVTY3JpcHQoIGVsZW0gKSB7XG5cdGVsZW0udHlwZSA9ICggZWxlbS5nZXRBdHRyaWJ1dGUoIFwidHlwZVwiICkgIT09IG51bGwgKSArIFwiL1wiICsgZWxlbS50eXBlO1xuXHRyZXR1cm4gZWxlbTtcbn1cbmZ1bmN0aW9uIHJlc3RvcmVTY3JpcHQoIGVsZW0gKSB7XG5cdGlmICggKCBlbGVtLnR5cGUgfHwgXCJcIiApLnNsaWNlKCAwLCA1ICkgPT09IFwidHJ1ZS9cIiApIHtcblx0XHRlbGVtLnR5cGUgPSBlbGVtLnR5cGUuc2xpY2UoIDUgKTtcblx0fSBlbHNlIHtcblx0XHRlbGVtLnJlbW92ZUF0dHJpYnV0ZSggXCJ0eXBlXCIgKTtcblx0fVxuXG5cdHJldHVybiBlbGVtO1xufVxuXG5mdW5jdGlvbiBjbG9uZUNvcHlFdmVudCggc3JjLCBkZXN0ICkge1xuXHR2YXIgaSwgbCwgdHlwZSwgcGRhdGFPbGQsIHVkYXRhT2xkLCB1ZGF0YUN1ciwgZXZlbnRzO1xuXG5cdGlmICggZGVzdC5ub2RlVHlwZSAhPT0gMSApIHtcblx0XHRyZXR1cm47XG5cdH1cblxuXHQvLyAxLiBDb3B5IHByaXZhdGUgZGF0YTogZXZlbnRzLCBoYW5kbGVycywgZXRjLlxuXHRpZiAoIGRhdGFQcml2Lmhhc0RhdGEoIHNyYyApICkge1xuXHRcdHBkYXRhT2xkID0gZGF0YVByaXYuZ2V0KCBzcmMgKTtcblx0XHRldmVudHMgPSBwZGF0YU9sZC5ldmVudHM7XG5cblx0XHRpZiAoIGV2ZW50cyApIHtcblx0XHRcdGRhdGFQcml2LnJlbW92ZSggZGVzdCwgXCJoYW5kbGUgZXZlbnRzXCIgKTtcblxuXHRcdFx0Zm9yICggdHlwZSBpbiBldmVudHMgKSB7XG5cdFx0XHRcdGZvciAoIGkgPSAwLCBsID0gZXZlbnRzWyB0eXBlIF0ubGVuZ3RoOyBpIDwgbDsgaSsrICkge1xuXHRcdFx0XHRcdGpRdWVyeS5ldmVudC5hZGQoIGRlc3QsIHR5cGUsIGV2ZW50c1sgdHlwZSBdWyBpIF0gKTtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH1cblx0fVxuXG5cdC8vIDIuIENvcHkgdXNlciBkYXRhXG5cdGlmICggZGF0YVVzZXIuaGFzRGF0YSggc3JjICkgKSB7XG5cdFx0dWRhdGFPbGQgPSBkYXRhVXNlci5hY2Nlc3MoIHNyYyApO1xuXHRcdHVkYXRhQ3VyID0galF1ZXJ5LmV4dGVuZCgge30sIHVkYXRhT2xkICk7XG5cblx0XHRkYXRhVXNlci5zZXQoIGRlc3QsIHVkYXRhQ3VyICk7XG5cdH1cbn1cblxuLy8gRml4IElFIGJ1Z3MsIHNlZSBzdXBwb3J0IHRlc3RzXG5mdW5jdGlvbiBmaXhJbnB1dCggc3JjLCBkZXN0ICkge1xuXHR2YXIgbm9kZU5hbWUgPSBkZXN0Lm5vZGVOYW1lLnRvTG93ZXJDYXNlKCk7XG5cblx0Ly8gRmFpbHMgdG8gcGVyc2lzdCB0aGUgY2hlY2tlZCBzdGF0ZSBvZiBhIGNsb25lZCBjaGVja2JveCBvciByYWRpbyBidXR0b24uXG5cdGlmICggbm9kZU5hbWUgPT09IFwiaW5wdXRcIiAmJiByY2hlY2thYmxlVHlwZS50ZXN0KCBzcmMudHlwZSApICkge1xuXHRcdGRlc3QuY2hlY2tlZCA9IHNyYy5jaGVja2VkO1xuXG5cdC8vIEZhaWxzIHRvIHJldHVybiB0aGUgc2VsZWN0ZWQgb3B0aW9uIHRvIHRoZSBkZWZhdWx0IHNlbGVjdGVkIHN0YXRlIHdoZW4gY2xvbmluZyBvcHRpb25zXG5cdH0gZWxzZSBpZiAoIG5vZGVOYW1lID09PSBcImlucHV0XCIgfHwgbm9kZU5hbWUgPT09IFwidGV4dGFyZWFcIiApIHtcblx0XHRkZXN0LmRlZmF1bHRWYWx1ZSA9IHNyYy5kZWZhdWx0VmFsdWU7XG5cdH1cbn1cblxuZnVuY3Rpb24gZG9tTWFuaXAoIGNvbGxlY3Rpb24sIGFyZ3MsIGNhbGxiYWNrLCBpZ25vcmVkICkge1xuXG5cdC8vIEZsYXR0ZW4gYW55IG5lc3RlZCBhcnJheXNcblx0YXJncyA9IGZsYXQoIGFyZ3MgKTtcblxuXHR2YXIgZnJhZ21lbnQsIGZpcnN0LCBzY3JpcHRzLCBoYXNTY3JpcHRzLCBub2RlLCBkb2MsXG5cdFx0aSA9IDAsXG5cdFx0bCA9IGNvbGxlY3Rpb24ubGVuZ3RoLFxuXHRcdGlOb0Nsb25lID0gbCAtIDEsXG5cdFx0dmFsdWUgPSBhcmdzWyAwIF0sXG5cdFx0dmFsdWVJc0Z1bmN0aW9uID0gaXNGdW5jdGlvbiggdmFsdWUgKTtcblxuXHQvLyBXZSBjYW4ndCBjbG9uZU5vZGUgZnJhZ21lbnRzIHRoYXQgY29udGFpbiBjaGVja2VkLCBpbiBXZWJLaXRcblx0aWYgKCB2YWx1ZUlzRnVuY3Rpb24gfHxcblx0XHRcdCggbCA+IDEgJiYgdHlwZW9mIHZhbHVlID09PSBcInN0cmluZ1wiICYmXG5cdFx0XHRcdCFzdXBwb3J0LmNoZWNrQ2xvbmUgJiYgcmNoZWNrZWQudGVzdCggdmFsdWUgKSApICkge1xuXHRcdHJldHVybiBjb2xsZWN0aW9uLmVhY2goIGZ1bmN0aW9uKCBpbmRleCApIHtcblx0XHRcdHZhciBzZWxmID0gY29sbGVjdGlvbi5lcSggaW5kZXggKTtcblx0XHRcdGlmICggdmFsdWVJc0Z1bmN0aW9uICkge1xuXHRcdFx0XHRhcmdzWyAwIF0gPSB2YWx1ZS5jYWxsKCB0aGlzLCBpbmRleCwgc2VsZi5odG1sKCkgKTtcblx0XHRcdH1cblx0XHRcdGRvbU1hbmlwKCBzZWxmLCBhcmdzLCBjYWxsYmFjaywgaWdub3JlZCApO1xuXHRcdH0gKTtcblx0fVxuXG5cdGlmICggbCApIHtcblx0XHRmcmFnbWVudCA9IGJ1aWxkRnJhZ21lbnQoIGFyZ3MsIGNvbGxlY3Rpb25bIDAgXS5vd25lckRvY3VtZW50LCBmYWxzZSwgY29sbGVjdGlvbiwgaWdub3JlZCApO1xuXHRcdGZpcnN0ID0gZnJhZ21lbnQuZmlyc3RDaGlsZDtcblxuXHRcdGlmICggZnJhZ21lbnQuY2hpbGROb2Rlcy5sZW5ndGggPT09IDEgKSB7XG5cdFx0XHRmcmFnbWVudCA9IGZpcnN0O1xuXHRcdH1cblxuXHRcdC8vIFJlcXVpcmUgZWl0aGVyIG5ldyBjb250ZW50IG9yIGFuIGludGVyZXN0IGluIGlnbm9yZWQgZWxlbWVudHMgdG8gaW52b2tlIHRoZSBjYWxsYmFja1xuXHRcdGlmICggZmlyc3QgfHwgaWdub3JlZCApIHtcblx0XHRcdHNjcmlwdHMgPSBqUXVlcnkubWFwKCBnZXRBbGwoIGZyYWdtZW50LCBcInNjcmlwdFwiICksIGRpc2FibGVTY3JpcHQgKTtcblx0XHRcdGhhc1NjcmlwdHMgPSBzY3JpcHRzLmxlbmd0aDtcblxuXHRcdFx0Ly8gVXNlIHRoZSBvcmlnaW5hbCBmcmFnbWVudCBmb3IgdGhlIGxhc3QgaXRlbVxuXHRcdFx0Ly8gaW5zdGVhZCBvZiB0aGUgZmlyc3QgYmVjYXVzZSBpdCBjYW4gZW5kIHVwXG5cdFx0XHQvLyBiZWluZyBlbXB0aWVkIGluY29ycmVjdGx5IGluIGNlcnRhaW4gc2l0dWF0aW9ucyAoIzgwNzApLlxuXHRcdFx0Zm9yICggOyBpIDwgbDsgaSsrICkge1xuXHRcdFx0XHRub2RlID0gZnJhZ21lbnQ7XG5cblx0XHRcdFx0aWYgKCBpICE9PSBpTm9DbG9uZSApIHtcblx0XHRcdFx0XHRub2RlID0galF1ZXJ5LmNsb25lKCBub2RlLCB0cnVlLCB0cnVlICk7XG5cblx0XHRcdFx0XHQvLyBLZWVwIHJlZmVyZW5jZXMgdG8gY2xvbmVkIHNjcmlwdHMgZm9yIGxhdGVyIHJlc3RvcmF0aW9uXG5cdFx0XHRcdFx0aWYgKCBoYXNTY3JpcHRzICkge1xuXG5cdFx0XHRcdFx0XHQvLyBTdXBwb3J0OiBBbmRyb2lkIDw9NC4wIG9ubHksIFBoYW50b21KUyAxIG9ubHlcblx0XHRcdFx0XHRcdC8vIHB1c2guYXBwbHkoXywgYXJyYXlsaWtlKSB0aHJvd3Mgb24gYW5jaWVudCBXZWJLaXRcblx0XHRcdFx0XHRcdGpRdWVyeS5tZXJnZSggc2NyaXB0cywgZ2V0QWxsKCBub2RlLCBcInNjcmlwdFwiICkgKTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblxuXHRcdFx0XHRjYWxsYmFjay5jYWxsKCBjb2xsZWN0aW9uWyBpIF0sIG5vZGUsIGkgKTtcblx0XHRcdH1cblxuXHRcdFx0aWYgKCBoYXNTY3JpcHRzICkge1xuXHRcdFx0XHRkb2MgPSBzY3JpcHRzWyBzY3JpcHRzLmxlbmd0aCAtIDEgXS5vd25lckRvY3VtZW50O1xuXG5cdFx0XHRcdC8vIFJlZW5hYmxlIHNjcmlwdHNcblx0XHRcdFx0alF1ZXJ5Lm1hcCggc2NyaXB0cywgcmVzdG9yZVNjcmlwdCApO1xuXG5cdFx0XHRcdC8vIEV2YWx1YXRlIGV4ZWN1dGFibGUgc2NyaXB0cyBvbiBmaXJzdCBkb2N1bWVudCBpbnNlcnRpb25cblx0XHRcdFx0Zm9yICggaSA9IDA7IGkgPCBoYXNTY3JpcHRzOyBpKysgKSB7XG5cdFx0XHRcdFx0bm9kZSA9IHNjcmlwdHNbIGkgXTtcblx0XHRcdFx0XHRpZiAoIHJzY3JpcHRUeXBlLnRlc3QoIG5vZGUudHlwZSB8fCBcIlwiICkgJiZcblx0XHRcdFx0XHRcdCFkYXRhUHJpdi5hY2Nlc3MoIG5vZGUsIFwiZ2xvYmFsRXZhbFwiICkgJiZcblx0XHRcdFx0XHRcdGpRdWVyeS5jb250YWlucyggZG9jLCBub2RlICkgKSB7XG5cblx0XHRcdFx0XHRcdGlmICggbm9kZS5zcmMgJiYgKCBub2RlLnR5cGUgfHwgXCJcIiApLnRvTG93ZXJDYXNlKCkgICE9PSBcIm1vZHVsZVwiICkge1xuXG5cdFx0XHRcdFx0XHRcdC8vIE9wdGlvbmFsIEFKQVggZGVwZW5kZW5jeSwgYnV0IHdvbid0IHJ1biBzY3JpcHRzIGlmIG5vdCBwcmVzZW50XG5cdFx0XHRcdFx0XHRcdGlmICggalF1ZXJ5Ll9ldmFsVXJsICYmICFub2RlLm5vTW9kdWxlICkge1xuXHRcdFx0XHRcdFx0XHRcdGpRdWVyeS5fZXZhbFVybCggbm9kZS5zcmMsIHtcblx0XHRcdFx0XHRcdFx0XHRcdG5vbmNlOiBub2RlLm5vbmNlIHx8IG5vZGUuZ2V0QXR0cmlidXRlKCBcIm5vbmNlXCIgKVxuXHRcdFx0XHRcdFx0XHRcdH0sIGRvYyApO1xuXHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdFx0XHRET01FdmFsKCBub2RlLnRleHRDb250ZW50LnJlcGxhY2UoIHJjbGVhblNjcmlwdCwgXCJcIiApLCBub2RlLCBkb2MgKTtcblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9XG5cdH1cblxuXHRyZXR1cm4gY29sbGVjdGlvbjtcbn1cblxuZnVuY3Rpb24gcmVtb3ZlKCBlbGVtLCBzZWxlY3Rvciwga2VlcERhdGEgKSB7XG5cdHZhciBub2RlLFxuXHRcdG5vZGVzID0gc2VsZWN0b3IgPyBqUXVlcnkuZmlsdGVyKCBzZWxlY3RvciwgZWxlbSApIDogZWxlbSxcblx0XHRpID0gMDtcblxuXHRmb3IgKCA7ICggbm9kZSA9IG5vZGVzWyBpIF0gKSAhPSBudWxsOyBpKysgKSB7XG5cdFx0aWYgKCAha2VlcERhdGEgJiYgbm9kZS5ub2RlVHlwZSA9PT0gMSApIHtcblx0XHRcdGpRdWVyeS5jbGVhbkRhdGEoIGdldEFsbCggbm9kZSApICk7XG5cdFx0fVxuXG5cdFx0aWYgKCBub2RlLnBhcmVudE5vZGUgKSB7XG5cdFx0XHRpZiAoIGtlZXBEYXRhICYmIGlzQXR0YWNoZWQoIG5vZGUgKSApIHtcblx0XHRcdFx0c2V0R2xvYmFsRXZhbCggZ2V0QWxsKCBub2RlLCBcInNjcmlwdFwiICkgKTtcblx0XHRcdH1cblx0XHRcdG5vZGUucGFyZW50Tm9kZS5yZW1vdmVDaGlsZCggbm9kZSApO1xuXHRcdH1cblx0fVxuXG5cdHJldHVybiBlbGVtO1xufVxuXG5qUXVlcnkuZXh0ZW5kKCB7XG5cdGh0bWxQcmVmaWx0ZXI6IGZ1bmN0aW9uKCBodG1sICkge1xuXHRcdHJldHVybiBodG1sO1xuXHR9LFxuXG5cdGNsb25lOiBmdW5jdGlvbiggZWxlbSwgZGF0YUFuZEV2ZW50cywgZGVlcERhdGFBbmRFdmVudHMgKSB7XG5cdFx0dmFyIGksIGwsIHNyY0VsZW1lbnRzLCBkZXN0RWxlbWVudHMsXG5cdFx0XHRjbG9uZSA9IGVsZW0uY2xvbmVOb2RlKCB0cnVlICksXG5cdFx0XHRpblBhZ2UgPSBpc0F0dGFjaGVkKCBlbGVtICk7XG5cblx0XHQvLyBGaXggSUUgY2xvbmluZyBpc3N1ZXNcblx0XHRpZiAoICFzdXBwb3J0Lm5vQ2xvbmVDaGVja2VkICYmICggZWxlbS5ub2RlVHlwZSA9PT0gMSB8fCBlbGVtLm5vZGVUeXBlID09PSAxMSApICYmXG5cdFx0XHRcdCFqUXVlcnkuaXNYTUxEb2MoIGVsZW0gKSApIHtcblxuXHRcdFx0Ly8gV2UgZXNjaGV3IFNpenpsZSBoZXJlIGZvciBwZXJmb3JtYW5jZSByZWFzb25zOiBodHRwczovL2pzcGVyZi5jb20vZ2V0YWxsLXZzLXNpenpsZS8yXG5cdFx0XHRkZXN0RWxlbWVudHMgPSBnZXRBbGwoIGNsb25lICk7XG5cdFx0XHRzcmNFbGVtZW50cyA9IGdldEFsbCggZWxlbSApO1xuXG5cdFx0XHRmb3IgKCBpID0gMCwgbCA9IHNyY0VsZW1lbnRzLmxlbmd0aDsgaSA8IGw7IGkrKyApIHtcblx0XHRcdFx0Zml4SW5wdXQoIHNyY0VsZW1lbnRzWyBpIF0sIGRlc3RFbGVtZW50c1sgaSBdICk7XG5cdFx0XHR9XG5cdFx0fVxuXG5cdFx0Ly8gQ29weSB0aGUgZXZlbnRzIGZyb20gdGhlIG9yaWdpbmFsIHRvIHRoZSBjbG9uZVxuXHRcdGlmICggZGF0YUFuZEV2ZW50cyApIHtcblx0XHRcdGlmICggZGVlcERhdGFBbmRFdmVudHMgKSB7XG5cdFx0XHRcdHNyY0VsZW1lbnRzID0gc3JjRWxlbWVudHMgfHwgZ2V0QWxsKCBlbGVtICk7XG5cdFx0XHRcdGRlc3RFbGVtZW50cyA9IGRlc3RFbGVtZW50cyB8fCBnZXRBbGwoIGNsb25lICk7XG5cblx0XHRcdFx0Zm9yICggaSA9IDAsIGwgPSBzcmNFbGVtZW50cy5sZW5ndGg7IGkgPCBsOyBpKysgKSB7XG5cdFx0XHRcdFx0Y2xvbmVDb3B5RXZlbnQoIHNyY0VsZW1lbnRzWyBpIF0sIGRlc3RFbGVtZW50c1sgaSBdICk7XG5cdFx0XHRcdH1cblx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdGNsb25lQ29weUV2ZW50KCBlbGVtLCBjbG9uZSApO1xuXHRcdFx0fVxuXHRcdH1cblxuXHRcdC8vIFByZXNlcnZlIHNjcmlwdCBldmFsdWF0aW9uIGhpc3Rvcnlcblx0XHRkZXN0RWxlbWVudHMgPSBnZXRBbGwoIGNsb25lLCBcInNjcmlwdFwiICk7XG5cdFx0aWYgKCBkZXN0RWxlbWVudHMubGVuZ3RoID4gMCApIHtcblx0XHRcdHNldEdsb2JhbEV2YWwoIGRlc3RFbGVtZW50cywgIWluUGFnZSAmJiBnZXRBbGwoIGVsZW0sIFwic2NyaXB0XCIgKSApO1xuXHRcdH1cblxuXHRcdC8vIFJldHVybiB0aGUgY2xvbmVkIHNldFxuXHRcdHJldHVybiBjbG9uZTtcblx0fSxcblxuXHRjbGVhbkRhdGE6IGZ1bmN0aW9uKCBlbGVtcyApIHtcblx0XHR2YXIgZGF0YSwgZWxlbSwgdHlwZSxcblx0XHRcdHNwZWNpYWwgPSBqUXVlcnkuZXZlbnQuc3BlY2lhbCxcblx0XHRcdGkgPSAwO1xuXG5cdFx0Zm9yICggOyAoIGVsZW0gPSBlbGVtc1sgaSBdICkgIT09IHVuZGVmaW5lZDsgaSsrICkge1xuXHRcdFx0aWYgKCBhY2NlcHREYXRhKCBlbGVtICkgKSB7XG5cdFx0XHRcdGlmICggKCBkYXRhID0gZWxlbVsgZGF0YVByaXYuZXhwYW5kbyBdICkgKSB7XG5cdFx0XHRcdFx0aWYgKCBkYXRhLmV2ZW50cyApIHtcblx0XHRcdFx0XHRcdGZvciAoIHR5cGUgaW4gZGF0YS5ldmVudHMgKSB7XG5cdFx0XHRcdFx0XHRcdGlmICggc3BlY2lhbFsgdHlwZSBdICkge1xuXHRcdFx0XHRcdFx0XHRcdGpRdWVyeS5ldmVudC5yZW1vdmUoIGVsZW0sIHR5cGUgKTtcblxuXHRcdFx0XHRcdFx0XHQvLyBUaGlzIGlzIGEgc2hvcnRjdXQgdG8gYXZvaWQgalF1ZXJ5LmV2ZW50LnJlbW92ZSdzIG92ZXJoZWFkXG5cdFx0XHRcdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0XHRcdFx0alF1ZXJ5LnJlbW92ZUV2ZW50KCBlbGVtLCB0eXBlLCBkYXRhLmhhbmRsZSApO1xuXHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0fVxuXG5cdFx0XHRcdFx0Ly8gU3VwcG9ydDogQ2hyb21lIDw9MzUgLSA0NStcblx0XHRcdFx0XHQvLyBBc3NpZ24gdW5kZWZpbmVkIGluc3RlYWQgb2YgdXNpbmcgZGVsZXRlLCBzZWUgRGF0YSNyZW1vdmVcblx0XHRcdFx0XHRlbGVtWyBkYXRhUHJpdi5leHBhbmRvIF0gPSB1bmRlZmluZWQ7XG5cdFx0XHRcdH1cblx0XHRcdFx0aWYgKCBlbGVtWyBkYXRhVXNlci5leHBhbmRvIF0gKSB7XG5cblx0XHRcdFx0XHQvLyBTdXBwb3J0OiBDaHJvbWUgPD0zNSAtIDQ1K1xuXHRcdFx0XHRcdC8vIEFzc2lnbiB1bmRlZmluZWQgaW5zdGVhZCBvZiB1c2luZyBkZWxldGUsIHNlZSBEYXRhI3JlbW92ZVxuXHRcdFx0XHRcdGVsZW1bIGRhdGFVc2VyLmV4cGFuZG8gXSA9IHVuZGVmaW5lZDtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH1cblx0fVxufSApO1xuXG5qUXVlcnkuZm4uZXh0ZW5kKCB7XG5cdGRldGFjaDogZnVuY3Rpb24oIHNlbGVjdG9yICkge1xuXHRcdHJldHVybiByZW1vdmUoIHRoaXMsIHNlbGVjdG9yLCB0cnVlICk7XG5cdH0sXG5cblx0cmVtb3ZlOiBmdW5jdGlvbiggc2VsZWN0b3IgKSB7XG5cdFx0cmV0dXJuIHJlbW92ZSggdGhpcywgc2VsZWN0b3IgKTtcblx0fSxcblxuXHR0ZXh0OiBmdW5jdGlvbiggdmFsdWUgKSB7XG5cdFx0cmV0dXJuIGFjY2VzcyggdGhpcywgZnVuY3Rpb24oIHZhbHVlICkge1xuXHRcdFx0cmV0dXJuIHZhbHVlID09PSB1bmRlZmluZWQgP1xuXHRcdFx0XHRqUXVlcnkudGV4dCggdGhpcyApIDpcblx0XHRcdFx0dGhpcy5lbXB0eSgpLmVhY2goIGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRcdGlmICggdGhpcy5ub2RlVHlwZSA9PT0gMSB8fCB0aGlzLm5vZGVUeXBlID09PSAxMSB8fCB0aGlzLm5vZGVUeXBlID09PSA5ICkge1xuXHRcdFx0XHRcdFx0dGhpcy50ZXh0Q29udGVudCA9IHZhbHVlO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fSApO1xuXHRcdH0sIG51bGwsIHZhbHVlLCBhcmd1bWVudHMubGVuZ3RoICk7XG5cdH0sXG5cblx0YXBwZW5kOiBmdW5jdGlvbigpIHtcblx0XHRyZXR1cm4gZG9tTWFuaXAoIHRoaXMsIGFyZ3VtZW50cywgZnVuY3Rpb24oIGVsZW0gKSB7XG5cdFx0XHRpZiAoIHRoaXMubm9kZVR5cGUgPT09IDEgfHwgdGhpcy5ub2RlVHlwZSA9PT0gMTEgfHwgdGhpcy5ub2RlVHlwZSA9PT0gOSApIHtcblx0XHRcdFx0dmFyIHRhcmdldCA9IG1hbmlwdWxhdGlvblRhcmdldCggdGhpcywgZWxlbSApO1xuXHRcdFx0XHR0YXJnZXQuYXBwZW5kQ2hpbGQoIGVsZW0gKTtcblx0XHRcdH1cblx0XHR9ICk7XG5cdH0sXG5cblx0cHJlcGVuZDogZnVuY3Rpb24oKSB7XG5cdFx0cmV0dXJuIGRvbU1hbmlwKCB0aGlzLCBhcmd1bWVudHMsIGZ1bmN0aW9uKCBlbGVtICkge1xuXHRcdFx0aWYgKCB0aGlzLm5vZGVUeXBlID09PSAxIHx8IHRoaXMubm9kZVR5cGUgPT09IDExIHx8IHRoaXMubm9kZVR5cGUgPT09IDkgKSB7XG5cdFx0XHRcdHZhciB0YXJnZXQgPSBtYW5pcHVsYXRpb25UYXJnZXQoIHRoaXMsIGVsZW0gKTtcblx0XHRcdFx0dGFyZ2V0Lmluc2VydEJlZm9yZSggZWxlbSwgdGFyZ2V0LmZpcnN0Q2hpbGQgKTtcblx0XHRcdH1cblx0XHR9ICk7XG5cdH0sXG5cblx0YmVmb3JlOiBmdW5jdGlvbigpIHtcblx0XHRyZXR1cm4gZG9tTWFuaXAoIHRoaXMsIGFyZ3VtZW50cywgZnVuY3Rpb24oIGVsZW0gKSB7XG5cdFx0XHRpZiAoIHRoaXMucGFyZW50Tm9kZSApIHtcblx0XHRcdFx0dGhpcy5wYXJlbnROb2RlLmluc2VydEJlZm9yZSggZWxlbSwgdGhpcyApO1xuXHRcdFx0fVxuXHRcdH0gKTtcblx0fSxcblxuXHRhZnRlcjogZnVuY3Rpb24oKSB7XG5cdFx0cmV0dXJuIGRvbU1hbmlwKCB0aGlzLCBhcmd1bWVudHMsIGZ1bmN0aW9uKCBlbGVtICkge1xuXHRcdFx0aWYgKCB0aGlzLnBhcmVudE5vZGUgKSB7XG5cdFx0XHRcdHRoaXMucGFyZW50Tm9kZS5pbnNlcnRCZWZvcmUoIGVsZW0sIHRoaXMubmV4dFNpYmxpbmcgKTtcblx0XHRcdH1cblx0XHR9ICk7XG5cdH0sXG5cblx0ZW1wdHk6IGZ1bmN0aW9uKCkge1xuXHRcdHZhciBlbGVtLFxuXHRcdFx0aSA9IDA7XG5cblx0XHRmb3IgKCA7ICggZWxlbSA9IHRoaXNbIGkgXSApICE9IG51bGw7IGkrKyApIHtcblx0XHRcdGlmICggZWxlbS5ub2RlVHlwZSA9PT0gMSApIHtcblxuXHRcdFx0XHQvLyBQcmV2ZW50IG1lbW9yeSBsZWFrc1xuXHRcdFx0XHRqUXVlcnkuY2xlYW5EYXRhKCBnZXRBbGwoIGVsZW0sIGZhbHNlICkgKTtcblxuXHRcdFx0XHQvLyBSZW1vdmUgYW55IHJlbWFpbmluZyBub2Rlc1xuXHRcdFx0XHRlbGVtLnRleHRDb250ZW50ID0gXCJcIjtcblx0XHRcdH1cblx0XHR9XG5cblx0XHRyZXR1cm4gdGhpcztcblx0fSxcblxuXHRjbG9uZTogZnVuY3Rpb24oIGRhdGFBbmRFdmVudHMsIGRlZXBEYXRhQW5kRXZlbnRzICkge1xuXHRcdGRhdGFBbmRFdmVudHMgPSBkYXRhQW5kRXZlbnRzID09IG51bGwgPyBmYWxzZSA6IGRhdGFBbmRFdmVudHM7XG5cdFx0ZGVlcERhdGFBbmRFdmVudHMgPSBkZWVwRGF0YUFuZEV2ZW50cyA9PSBudWxsID8gZGF0YUFuZEV2ZW50cyA6IGRlZXBEYXRhQW5kRXZlbnRzO1xuXG5cdFx0cmV0dXJuIHRoaXMubWFwKCBmdW5jdGlvbigpIHtcblx0XHRcdHJldHVybiBqUXVlcnkuY2xvbmUoIHRoaXMsIGRhdGFBbmRFdmVudHMsIGRlZXBEYXRhQW5kRXZlbnRzICk7XG5cdFx0fSApO1xuXHR9LFxuXG5cdGh0bWw6IGZ1bmN0aW9uKCB2YWx1ZSApIHtcblx0XHRyZXR1cm4gYWNjZXNzKCB0aGlzLCBmdW5jdGlvbiggdmFsdWUgKSB7XG5cdFx0XHR2YXIgZWxlbSA9IHRoaXNbIDAgXSB8fCB7fSxcblx0XHRcdFx0aSA9IDAsXG5cdFx0XHRcdGwgPSB0aGlzLmxlbmd0aDtcblxuXHRcdFx0aWYgKCB2YWx1ZSA9PT0gdW5kZWZpbmVkICYmIGVsZW0ubm9kZVR5cGUgPT09IDEgKSB7XG5cdFx0XHRcdHJldHVybiBlbGVtLmlubmVySFRNTDtcblx0XHRcdH1cblxuXHRcdFx0Ly8gU2VlIGlmIHdlIGNhbiB0YWtlIGEgc2hvcnRjdXQgYW5kIGp1c3QgdXNlIGlubmVySFRNTFxuXHRcdFx0aWYgKCB0eXBlb2YgdmFsdWUgPT09IFwic3RyaW5nXCIgJiYgIXJub0lubmVyaHRtbC50ZXN0KCB2YWx1ZSApICYmXG5cdFx0XHRcdCF3cmFwTWFwWyAoIHJ0YWdOYW1lLmV4ZWMoIHZhbHVlICkgfHwgWyBcIlwiLCBcIlwiIF0gKVsgMSBdLnRvTG93ZXJDYXNlKCkgXSApIHtcblxuXHRcdFx0XHR2YWx1ZSA9IGpRdWVyeS5odG1sUHJlZmlsdGVyKCB2YWx1ZSApO1xuXG5cdFx0XHRcdHRyeSB7XG5cdFx0XHRcdFx0Zm9yICggOyBpIDwgbDsgaSsrICkge1xuXHRcdFx0XHRcdFx0ZWxlbSA9IHRoaXNbIGkgXSB8fCB7fTtcblxuXHRcdFx0XHRcdFx0Ly8gUmVtb3ZlIGVsZW1lbnQgbm9kZXMgYW5kIHByZXZlbnQgbWVtb3J5IGxlYWtzXG5cdFx0XHRcdFx0XHRpZiAoIGVsZW0ubm9kZVR5cGUgPT09IDEgKSB7XG5cdFx0XHRcdFx0XHRcdGpRdWVyeS5jbGVhbkRhdGEoIGdldEFsbCggZWxlbSwgZmFsc2UgKSApO1xuXHRcdFx0XHRcdFx0XHRlbGVtLmlubmVySFRNTCA9IHZhbHVlO1xuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdH1cblxuXHRcdFx0XHRcdGVsZW0gPSAwO1xuXG5cdFx0XHRcdC8vIElmIHVzaW5nIGlubmVySFRNTCB0aHJvd3MgYW4gZXhjZXB0aW9uLCB1c2UgdGhlIGZhbGxiYWNrIG1ldGhvZFxuXHRcdFx0XHR9IGNhdGNoICggZSApIHt9XG5cdFx0XHR9XG5cblx0XHRcdGlmICggZWxlbSApIHtcblx0XHRcdFx0dGhpcy5lbXB0eSgpLmFwcGVuZCggdmFsdWUgKTtcblx0XHRcdH1cblx0XHR9LCBudWxsLCB2YWx1ZSwgYXJndW1lbnRzLmxlbmd0aCApO1xuXHR9LFxuXG5cdHJlcGxhY2VXaXRoOiBmdW5jdGlvbigpIHtcblx0XHR2YXIgaWdub3JlZCA9IFtdO1xuXG5cdFx0Ly8gTWFrZSB0aGUgY2hhbmdlcywgcmVwbGFjaW5nIGVhY2ggbm9uLWlnbm9yZWQgY29udGV4dCBlbGVtZW50IHdpdGggdGhlIG5ldyBjb250ZW50XG5cdFx0cmV0dXJuIGRvbU1hbmlwKCB0aGlzLCBhcmd1bWVudHMsIGZ1bmN0aW9uKCBlbGVtICkge1xuXHRcdFx0dmFyIHBhcmVudCA9IHRoaXMucGFyZW50Tm9kZTtcblxuXHRcdFx0aWYgKCBqUXVlcnkuaW5BcnJheSggdGhpcywgaWdub3JlZCApIDwgMCApIHtcblx0XHRcdFx0alF1ZXJ5LmNsZWFuRGF0YSggZ2V0QWxsKCB0aGlzICkgKTtcblx0XHRcdFx0aWYgKCBwYXJlbnQgKSB7XG5cdFx0XHRcdFx0cGFyZW50LnJlcGxhY2VDaGlsZCggZWxlbSwgdGhpcyApO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cblx0XHQvLyBGb3JjZSBjYWxsYmFjayBpbnZvY2F0aW9uXG5cdFx0fSwgaWdub3JlZCApO1xuXHR9XG59ICk7XG5cbmpRdWVyeS5lYWNoKCB7XG5cdGFwcGVuZFRvOiBcImFwcGVuZFwiLFxuXHRwcmVwZW5kVG86IFwicHJlcGVuZFwiLFxuXHRpbnNlcnRCZWZvcmU6IFwiYmVmb3JlXCIsXG5cdGluc2VydEFmdGVyOiBcImFmdGVyXCIsXG5cdHJlcGxhY2VBbGw6IFwicmVwbGFjZVdpdGhcIlxufSwgZnVuY3Rpb24oIG5hbWUsIG9yaWdpbmFsICkge1xuXHRqUXVlcnkuZm5bIG5hbWUgXSA9IGZ1bmN0aW9uKCBzZWxlY3RvciApIHtcblx0XHR2YXIgZWxlbXMsXG5cdFx0XHRyZXQgPSBbXSxcblx0XHRcdGluc2VydCA9IGpRdWVyeSggc2VsZWN0b3IgKSxcblx0XHRcdGxhc3QgPSBpbnNlcnQubGVuZ3RoIC0gMSxcblx0XHRcdGkgPSAwO1xuXG5cdFx0Zm9yICggOyBpIDw9IGxhc3Q7IGkrKyApIHtcblx0XHRcdGVsZW1zID0gaSA9PT0gbGFzdCA/IHRoaXMgOiB0aGlzLmNsb25lKCB0cnVlICk7XG5cdFx0XHRqUXVlcnkoIGluc2VydFsgaSBdIClbIG9yaWdpbmFsIF0oIGVsZW1zICk7XG5cblx0XHRcdC8vIFN1cHBvcnQ6IEFuZHJvaWQgPD00LjAgb25seSwgUGhhbnRvbUpTIDEgb25seVxuXHRcdFx0Ly8gLmdldCgpIGJlY2F1c2UgcHVzaC5hcHBseShfLCBhcnJheWxpa2UpIHRocm93cyBvbiBhbmNpZW50IFdlYktpdFxuXHRcdFx0cHVzaC5hcHBseSggcmV0LCBlbGVtcy5nZXQoKSApO1xuXHRcdH1cblxuXHRcdHJldHVybiB0aGlzLnB1c2hTdGFjayggcmV0ICk7XG5cdH07XG59ICk7XG52YXIgcm51bW5vbnB4ID0gbmV3IFJlZ0V4cCggXCJeKFwiICsgcG51bSArIFwiKSg/IXB4KVthLXolXSskXCIsIFwiaVwiICk7XG5cbnZhciBnZXRTdHlsZXMgPSBmdW5jdGlvbiggZWxlbSApIHtcblxuXHRcdC8vIFN1cHBvcnQ6IElFIDw9MTEgb25seSwgRmlyZWZveCA8PTMwICgjMTUwOTgsICMxNDE1MClcblx0XHQvLyBJRSB0aHJvd3Mgb24gZWxlbWVudHMgY3JlYXRlZCBpbiBwb3B1cHNcblx0XHQvLyBGRiBtZWFud2hpbGUgdGhyb3dzIG9uIGZyYW1lIGVsZW1lbnRzIHRocm91Z2ggXCJkZWZhdWx0Vmlldy5nZXRDb21wdXRlZFN0eWxlXCJcblx0XHR2YXIgdmlldyA9IGVsZW0ub3duZXJEb2N1bWVudC5kZWZhdWx0VmlldztcblxuXHRcdGlmICggIXZpZXcgfHwgIXZpZXcub3BlbmVyICkge1xuXHRcdFx0dmlldyA9IHdpbmRvdztcblx0XHR9XG5cblx0XHRyZXR1cm4gdmlldy5nZXRDb21wdXRlZFN0eWxlKCBlbGVtICk7XG5cdH07XG5cbnZhciBzd2FwID0gZnVuY3Rpb24oIGVsZW0sIG9wdGlvbnMsIGNhbGxiYWNrICkge1xuXHR2YXIgcmV0LCBuYW1lLFxuXHRcdG9sZCA9IHt9O1xuXG5cdC8vIFJlbWVtYmVyIHRoZSBvbGQgdmFsdWVzLCBhbmQgaW5zZXJ0IHRoZSBuZXcgb25lc1xuXHRmb3IgKCBuYW1lIGluIG9wdGlvbnMgKSB7XG5cdFx0b2xkWyBuYW1lIF0gPSBlbGVtLnN0eWxlWyBuYW1lIF07XG5cdFx0ZWxlbS5zdHlsZVsgbmFtZSBdID0gb3B0aW9uc1sgbmFtZSBdO1xuXHR9XG5cblx0cmV0ID0gY2FsbGJhY2suY2FsbCggZWxlbSApO1xuXG5cdC8vIFJldmVydCB0aGUgb2xkIHZhbHVlc1xuXHRmb3IgKCBuYW1lIGluIG9wdGlvbnMgKSB7XG5cdFx0ZWxlbS5zdHlsZVsgbmFtZSBdID0gb2xkWyBuYW1lIF07XG5cdH1cblxuXHRyZXR1cm4gcmV0O1xufTtcblxuXG52YXIgcmJveFN0eWxlID0gbmV3IFJlZ0V4cCggY3NzRXhwYW5kLmpvaW4oIFwifFwiICksIFwiaVwiICk7XG5cblxuXG4oIGZ1bmN0aW9uKCkge1xuXG5cdC8vIEV4ZWN1dGluZyBib3RoIHBpeGVsUG9zaXRpb24gJiBib3hTaXppbmdSZWxpYWJsZSB0ZXN0cyByZXF1aXJlIG9ubHkgb25lIGxheW91dFxuXHQvLyBzbyB0aGV5J3JlIGV4ZWN1dGVkIGF0IHRoZSBzYW1lIHRpbWUgdG8gc2F2ZSB0aGUgc2Vjb25kIGNvbXB1dGF0aW9uLlxuXHRmdW5jdGlvbiBjb21wdXRlU3R5bGVUZXN0cygpIHtcblxuXHRcdC8vIFRoaXMgaXMgYSBzaW5nbGV0b24sIHdlIG5lZWQgdG8gZXhlY3V0ZSBpdCBvbmx5IG9uY2Vcblx0XHRpZiAoICFkaXYgKSB7XG5cdFx0XHRyZXR1cm47XG5cdFx0fVxuXG5cdFx0Y29udGFpbmVyLnN0eWxlLmNzc1RleHQgPSBcInBvc2l0aW9uOmFic29sdXRlO2xlZnQ6LTExMTExcHg7d2lkdGg6NjBweDtcIiArXG5cdFx0XHRcIm1hcmdpbi10b3A6MXB4O3BhZGRpbmc6MDtib3JkZXI6MFwiO1xuXHRcdGRpdi5zdHlsZS5jc3NUZXh0ID1cblx0XHRcdFwicG9zaXRpb246cmVsYXRpdmU7ZGlzcGxheTpibG9jaztib3gtc2l6aW5nOmJvcmRlci1ib3g7b3ZlcmZsb3c6c2Nyb2xsO1wiICtcblx0XHRcdFwibWFyZ2luOmF1dG87Ym9yZGVyOjFweDtwYWRkaW5nOjFweDtcIiArXG5cdFx0XHRcIndpZHRoOjYwJTt0b3A6MSVcIjtcblx0XHRkb2N1bWVudEVsZW1lbnQuYXBwZW5kQ2hpbGQoIGNvbnRhaW5lciApLmFwcGVuZENoaWxkKCBkaXYgKTtcblxuXHRcdHZhciBkaXZTdHlsZSA9IHdpbmRvdy5nZXRDb21wdXRlZFN0eWxlKCBkaXYgKTtcblx0XHRwaXhlbFBvc2l0aW9uVmFsID0gZGl2U3R5bGUudG9wICE9PSBcIjElXCI7XG5cblx0XHQvLyBTdXBwb3J0OiBBbmRyb2lkIDQuMCAtIDQuMyBvbmx5LCBGaXJlZm94IDw9MyAtIDQ0XG5cdFx0cmVsaWFibGVNYXJnaW5MZWZ0VmFsID0gcm91bmRQaXhlbE1lYXN1cmVzKCBkaXZTdHlsZS5tYXJnaW5MZWZ0ICkgPT09IDEyO1xuXG5cdFx0Ly8gU3VwcG9ydDogQW5kcm9pZCA0LjAgLSA0LjMgb25seSwgU2FmYXJpIDw9OS4xIC0gMTAuMSwgaU9TIDw9Ny4wIC0gOS4zXG5cdFx0Ly8gU29tZSBzdHlsZXMgY29tZSBiYWNrIHdpdGggcGVyY2VudGFnZSB2YWx1ZXMsIGV2ZW4gdGhvdWdoIHRoZXkgc2hvdWxkbid0XG5cdFx0ZGl2LnN0eWxlLnJpZ2h0ID0gXCI2MCVcIjtcblx0XHRwaXhlbEJveFN0eWxlc1ZhbCA9IHJvdW5kUGl4ZWxNZWFzdXJlcyggZGl2U3R5bGUucmlnaHQgKSA9PT0gMzY7XG5cblx0XHQvLyBTdXBwb3J0OiBJRSA5IC0gMTEgb25seVxuXHRcdC8vIERldGVjdCBtaXNyZXBvcnRpbmcgb2YgY29udGVudCBkaW1lbnNpb25zIGZvciBib3gtc2l6aW5nOmJvcmRlci1ib3ggZWxlbWVudHNcblx0XHRib3hTaXppbmdSZWxpYWJsZVZhbCA9IHJvdW5kUGl4ZWxNZWFzdXJlcyggZGl2U3R5bGUud2lkdGggKSA9PT0gMzY7XG5cblx0XHQvLyBTdXBwb3J0OiBJRSA5IG9ubHlcblx0XHQvLyBEZXRlY3Qgb3ZlcmZsb3c6c2Nyb2xsIHNjcmV3aW5lc3MgKGdoLTM2OTkpXG5cdFx0Ly8gU3VwcG9ydDogQ2hyb21lIDw9NjRcblx0XHQvLyBEb24ndCBnZXQgdHJpY2tlZCB3aGVuIHpvb20gYWZmZWN0cyBvZmZzZXRXaWR0aCAoZ2gtNDAyOSlcblx0XHRkaXYuc3R5bGUucG9zaXRpb24gPSBcImFic29sdXRlXCI7XG5cdFx0c2Nyb2xsYm94U2l6ZVZhbCA9IHJvdW5kUGl4ZWxNZWFzdXJlcyggZGl2Lm9mZnNldFdpZHRoIC8gMyApID09PSAxMjtcblxuXHRcdGRvY3VtZW50RWxlbWVudC5yZW1vdmVDaGlsZCggY29udGFpbmVyICk7XG5cblx0XHQvLyBOdWxsaWZ5IHRoZSBkaXYgc28gaXQgd291bGRuJ3QgYmUgc3RvcmVkIGluIHRoZSBtZW1vcnkgYW5kXG5cdFx0Ly8gaXQgd2lsbCBhbHNvIGJlIGEgc2lnbiB0aGF0IGNoZWNrcyBhbHJlYWR5IHBlcmZvcm1lZFxuXHRcdGRpdiA9IG51bGw7XG5cdH1cblxuXHRmdW5jdGlvbiByb3VuZFBpeGVsTWVhc3VyZXMoIG1lYXN1cmUgKSB7XG5cdFx0cmV0dXJuIE1hdGgucm91bmQoIHBhcnNlRmxvYXQoIG1lYXN1cmUgKSApO1xuXHR9XG5cblx0dmFyIHBpeGVsUG9zaXRpb25WYWwsIGJveFNpemluZ1JlbGlhYmxlVmFsLCBzY3JvbGxib3hTaXplVmFsLCBwaXhlbEJveFN0eWxlc1ZhbCxcblx0XHRyZWxpYWJsZVRyRGltZW5zaW9uc1ZhbCwgcmVsaWFibGVNYXJnaW5MZWZ0VmFsLFxuXHRcdGNvbnRhaW5lciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoIFwiZGl2XCIgKSxcblx0XHRkaXYgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCBcImRpdlwiICk7XG5cblx0Ly8gRmluaXNoIGVhcmx5IGluIGxpbWl0ZWQgKG5vbi1icm93c2VyKSBlbnZpcm9ubWVudHNcblx0aWYgKCAhZGl2LnN0eWxlICkge1xuXHRcdHJldHVybjtcblx0fVxuXG5cdC8vIFN1cHBvcnQ6IElFIDw9OSAtIDExIG9ubHlcblx0Ly8gU3R5bGUgb2YgY2xvbmVkIGVsZW1lbnQgYWZmZWN0cyBzb3VyY2UgZWxlbWVudCBjbG9uZWQgKCM4OTA4KVxuXHRkaXYuc3R5bGUuYmFja2dyb3VuZENsaXAgPSBcImNvbnRlbnQtYm94XCI7XG5cdGRpdi5jbG9uZU5vZGUoIHRydWUgKS5zdHlsZS5iYWNrZ3JvdW5kQ2xpcCA9IFwiXCI7XG5cdHN1cHBvcnQuY2xlYXJDbG9uZVN0eWxlID0gZGl2LnN0eWxlLmJhY2tncm91bmRDbGlwID09PSBcImNvbnRlbnQtYm94XCI7XG5cblx0alF1ZXJ5LmV4dGVuZCggc3VwcG9ydCwge1xuXHRcdGJveFNpemluZ1JlbGlhYmxlOiBmdW5jdGlvbigpIHtcblx0XHRcdGNvbXB1dGVTdHlsZVRlc3RzKCk7XG5cdFx0XHRyZXR1cm4gYm94U2l6aW5nUmVsaWFibGVWYWw7XG5cdFx0fSxcblx0XHRwaXhlbEJveFN0eWxlczogZnVuY3Rpb24oKSB7XG5cdFx0XHRjb21wdXRlU3R5bGVUZXN0cygpO1xuXHRcdFx0cmV0dXJuIHBpeGVsQm94U3R5bGVzVmFsO1xuXHRcdH0sXG5cdFx0cGl4ZWxQb3NpdGlvbjogZnVuY3Rpb24oKSB7XG5cdFx0XHRjb21wdXRlU3R5bGVUZXN0cygpO1xuXHRcdFx0cmV0dXJuIHBpeGVsUG9zaXRpb25WYWw7XG5cdFx0fSxcblx0XHRyZWxpYWJsZU1hcmdpbkxlZnQ6IGZ1bmN0aW9uKCkge1xuXHRcdFx0Y29tcHV0ZVN0eWxlVGVzdHMoKTtcblx0XHRcdHJldHVybiByZWxpYWJsZU1hcmdpbkxlZnRWYWw7XG5cdFx0fSxcblx0XHRzY3JvbGxib3hTaXplOiBmdW5jdGlvbigpIHtcblx0XHRcdGNvbXB1dGVTdHlsZVRlc3RzKCk7XG5cdFx0XHRyZXR1cm4gc2Nyb2xsYm94U2l6ZVZhbDtcblx0XHR9LFxuXG5cdFx0Ly8gU3VwcG9ydDogSUUgOSAtIDExKywgRWRnZSAxNSAtIDE4K1xuXHRcdC8vIElFL0VkZ2UgbWlzcmVwb3J0IGBnZXRDb21wdXRlZFN0eWxlYCBvZiB0YWJsZSByb3dzIHdpdGggd2lkdGgvaGVpZ2h0XG5cdFx0Ly8gc2V0IGluIENTUyB3aGlsZSBgb2Zmc2V0KmAgcHJvcGVydGllcyByZXBvcnQgY29ycmVjdCB2YWx1ZXMuXG5cdFx0Ly8gQmVoYXZpb3IgaW4gSUUgOSBpcyBtb3JlIHN1YnRsZSB0aGFuIGluIG5ld2VyIHZlcnNpb25zICYgaXQgcGFzc2VzXG5cdFx0Ly8gc29tZSB2ZXJzaW9ucyBvZiB0aGlzIHRlc3Q7IG1ha2Ugc3VyZSBub3QgdG8gbWFrZSBpdCBwYXNzIHRoZXJlIVxuXHRcdHJlbGlhYmxlVHJEaW1lbnNpb25zOiBmdW5jdGlvbigpIHtcblx0XHRcdHZhciB0YWJsZSwgdHIsIHRyQ2hpbGQsIHRyU3R5bGU7XG5cdFx0XHRpZiAoIHJlbGlhYmxlVHJEaW1lbnNpb25zVmFsID09IG51bGwgKSB7XG5cdFx0XHRcdHRhYmxlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCggXCJ0YWJsZVwiICk7XG5cdFx0XHRcdHRyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCggXCJ0clwiICk7XG5cdFx0XHRcdHRyQ2hpbGQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCBcImRpdlwiICk7XG5cblx0XHRcdFx0dGFibGUuc3R5bGUuY3NzVGV4dCA9IFwicG9zaXRpb246YWJzb2x1dGU7bGVmdDotMTExMTFweFwiO1xuXHRcdFx0XHR0ci5zdHlsZS5oZWlnaHQgPSBcIjFweFwiO1xuXHRcdFx0XHR0ckNoaWxkLnN0eWxlLmhlaWdodCA9IFwiOXB4XCI7XG5cblx0XHRcdFx0ZG9jdW1lbnRFbGVtZW50XG5cdFx0XHRcdFx0LmFwcGVuZENoaWxkKCB0YWJsZSApXG5cdFx0XHRcdFx0LmFwcGVuZENoaWxkKCB0ciApXG5cdFx0XHRcdFx0LmFwcGVuZENoaWxkKCB0ckNoaWxkICk7XG5cblx0XHRcdFx0dHJTdHlsZSA9IHdpbmRvdy5nZXRDb21wdXRlZFN0eWxlKCB0ciApO1xuXHRcdFx0XHRyZWxpYWJsZVRyRGltZW5zaW9uc1ZhbCA9IHBhcnNlSW50KCB0clN0eWxlLmhlaWdodCApID4gMztcblxuXHRcdFx0XHRkb2N1bWVudEVsZW1lbnQucmVtb3ZlQ2hpbGQoIHRhYmxlICk7XG5cdFx0XHR9XG5cdFx0XHRyZXR1cm4gcmVsaWFibGVUckRpbWVuc2lvbnNWYWw7XG5cdFx0fVxuXHR9ICk7XG59ICkoKTtcblxuXG5mdW5jdGlvbiBjdXJDU1MoIGVsZW0sIG5hbWUsIGNvbXB1dGVkICkge1xuXHR2YXIgd2lkdGgsIG1pbldpZHRoLCBtYXhXaWR0aCwgcmV0LFxuXG5cdFx0Ly8gU3VwcG9ydDogRmlyZWZveCA1MStcblx0XHQvLyBSZXRyaWV2aW5nIHN0eWxlIGJlZm9yZSBjb21wdXRlZCBzb21laG93XG5cdFx0Ly8gZml4ZXMgYW4gaXNzdWUgd2l0aCBnZXR0aW5nIHdyb25nIHZhbHVlc1xuXHRcdC8vIG9uIGRldGFjaGVkIGVsZW1lbnRzXG5cdFx0c3R5bGUgPSBlbGVtLnN0eWxlO1xuXG5cdGNvbXB1dGVkID0gY29tcHV0ZWQgfHwgZ2V0U3R5bGVzKCBlbGVtICk7XG5cblx0Ly8gZ2V0UHJvcGVydHlWYWx1ZSBpcyBuZWVkZWQgZm9yOlxuXHQvLyAgIC5jc3MoJ2ZpbHRlcicpIChJRSA5IG9ubHksICMxMjUzNylcblx0Ly8gICAuY3NzKCctLWN1c3RvbVByb3BlcnR5KSAoIzMxNDQpXG5cdGlmICggY29tcHV0ZWQgKSB7XG5cdFx0cmV0ID0gY29tcHV0ZWQuZ2V0UHJvcGVydHlWYWx1ZSggbmFtZSApIHx8IGNvbXB1dGVkWyBuYW1lIF07XG5cblx0XHRpZiAoIHJldCA9PT0gXCJcIiAmJiAhaXNBdHRhY2hlZCggZWxlbSApICkge1xuXHRcdFx0cmV0ID0galF1ZXJ5LnN0eWxlKCBlbGVtLCBuYW1lICk7XG5cdFx0fVxuXG5cdFx0Ly8gQSB0cmlidXRlIHRvIHRoZSBcImF3ZXNvbWUgaGFjayBieSBEZWFuIEVkd2FyZHNcIlxuXHRcdC8vIEFuZHJvaWQgQnJvd3NlciByZXR1cm5zIHBlcmNlbnRhZ2UgZm9yIHNvbWUgdmFsdWVzLFxuXHRcdC8vIGJ1dCB3aWR0aCBzZWVtcyB0byBiZSByZWxpYWJseSBwaXhlbHMuXG5cdFx0Ly8gVGhpcyBpcyBhZ2FpbnN0IHRoZSBDU1NPTSBkcmFmdCBzcGVjOlxuXHRcdC8vIGh0dHBzOi8vZHJhZnRzLmNzc3dnLm9yZy9jc3NvbS8jcmVzb2x2ZWQtdmFsdWVzXG5cdFx0aWYgKCAhc3VwcG9ydC5waXhlbEJveFN0eWxlcygpICYmIHJudW1ub25weC50ZXN0KCByZXQgKSAmJiByYm94U3R5bGUudGVzdCggbmFtZSApICkge1xuXG5cdFx0XHQvLyBSZW1lbWJlciB0aGUgb3JpZ2luYWwgdmFsdWVzXG5cdFx0XHR3aWR0aCA9IHN0eWxlLndpZHRoO1xuXHRcdFx0bWluV2lkdGggPSBzdHlsZS5taW5XaWR0aDtcblx0XHRcdG1heFdpZHRoID0gc3R5bGUubWF4V2lkdGg7XG5cblx0XHRcdC8vIFB1dCBpbiB0aGUgbmV3IHZhbHVlcyB0byBnZXQgYSBjb21wdXRlZCB2YWx1ZSBvdXRcblx0XHRcdHN0eWxlLm1pbldpZHRoID0gc3R5bGUubWF4V2lkdGggPSBzdHlsZS53aWR0aCA9IHJldDtcblx0XHRcdHJldCA9IGNvbXB1dGVkLndpZHRoO1xuXG5cdFx0XHQvLyBSZXZlcnQgdGhlIGNoYW5nZWQgdmFsdWVzXG5cdFx0XHRzdHlsZS53aWR0aCA9IHdpZHRoO1xuXHRcdFx0c3R5bGUubWluV2lkdGggPSBtaW5XaWR0aDtcblx0XHRcdHN0eWxlLm1heFdpZHRoID0gbWF4V2lkdGg7XG5cdFx0fVxuXHR9XG5cblx0cmV0dXJuIHJldCAhPT0gdW5kZWZpbmVkID9cblxuXHRcdC8vIFN1cHBvcnQ6IElFIDw9OSAtIDExIG9ubHlcblx0XHQvLyBJRSByZXR1cm5zIHpJbmRleCB2YWx1ZSBhcyBhbiBpbnRlZ2VyLlxuXHRcdHJldCArIFwiXCIgOlxuXHRcdHJldDtcbn1cblxuXG5mdW5jdGlvbiBhZGRHZXRIb29rSWYoIGNvbmRpdGlvbkZuLCBob29rRm4gKSB7XG5cblx0Ly8gRGVmaW5lIHRoZSBob29rLCB3ZSdsbCBjaGVjayBvbiB0aGUgZmlyc3QgcnVuIGlmIGl0J3MgcmVhbGx5IG5lZWRlZC5cblx0cmV0dXJuIHtcblx0XHRnZXQ6IGZ1bmN0aW9uKCkge1xuXHRcdFx0aWYgKCBjb25kaXRpb25GbigpICkge1xuXG5cdFx0XHRcdC8vIEhvb2sgbm90IG5lZWRlZCAob3IgaXQncyBub3QgcG9zc2libGUgdG8gdXNlIGl0IGR1ZVxuXHRcdFx0XHQvLyB0byBtaXNzaW5nIGRlcGVuZGVuY3kpLCByZW1vdmUgaXQuXG5cdFx0XHRcdGRlbGV0ZSB0aGlzLmdldDtcblx0XHRcdFx0cmV0dXJuO1xuXHRcdFx0fVxuXG5cdFx0XHQvLyBIb29rIG5lZWRlZDsgcmVkZWZpbmUgaXQgc28gdGhhdCB0aGUgc3VwcG9ydCB0ZXN0IGlzIG5vdCBleGVjdXRlZCBhZ2Fpbi5cblx0XHRcdHJldHVybiAoIHRoaXMuZ2V0ID0gaG9va0ZuICkuYXBwbHkoIHRoaXMsIGFyZ3VtZW50cyApO1xuXHRcdH1cblx0fTtcbn1cblxuXG52YXIgY3NzUHJlZml4ZXMgPSBbIFwiV2Via2l0XCIsIFwiTW96XCIsIFwibXNcIiBdLFxuXHRlbXB0eVN0eWxlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCggXCJkaXZcIiApLnN0eWxlLFxuXHR2ZW5kb3JQcm9wcyA9IHt9O1xuXG4vLyBSZXR1cm4gYSB2ZW5kb3ItcHJlZml4ZWQgcHJvcGVydHkgb3IgdW5kZWZpbmVkXG5mdW5jdGlvbiB2ZW5kb3JQcm9wTmFtZSggbmFtZSApIHtcblxuXHQvLyBDaGVjayBmb3IgdmVuZG9yIHByZWZpeGVkIG5hbWVzXG5cdHZhciBjYXBOYW1lID0gbmFtZVsgMCBdLnRvVXBwZXJDYXNlKCkgKyBuYW1lLnNsaWNlKCAxICksXG5cdFx0aSA9IGNzc1ByZWZpeGVzLmxlbmd0aDtcblxuXHR3aGlsZSAoIGktLSApIHtcblx0XHRuYW1lID0gY3NzUHJlZml4ZXNbIGkgXSArIGNhcE5hbWU7XG5cdFx0aWYgKCBuYW1lIGluIGVtcHR5U3R5bGUgKSB7XG5cdFx0XHRyZXR1cm4gbmFtZTtcblx0XHR9XG5cdH1cbn1cblxuLy8gUmV0dXJuIGEgcG90ZW50aWFsbHktbWFwcGVkIGpRdWVyeS5jc3NQcm9wcyBvciB2ZW5kb3IgcHJlZml4ZWQgcHJvcGVydHlcbmZ1bmN0aW9uIGZpbmFsUHJvcE5hbWUoIG5hbWUgKSB7XG5cdHZhciBmaW5hbCA9IGpRdWVyeS5jc3NQcm9wc1sgbmFtZSBdIHx8IHZlbmRvclByb3BzWyBuYW1lIF07XG5cblx0aWYgKCBmaW5hbCApIHtcblx0XHRyZXR1cm4gZmluYWw7XG5cdH1cblx0aWYgKCBuYW1lIGluIGVtcHR5U3R5bGUgKSB7XG5cdFx0cmV0dXJuIG5hbWU7XG5cdH1cblx0cmV0dXJuIHZlbmRvclByb3BzWyBuYW1lIF0gPSB2ZW5kb3JQcm9wTmFtZSggbmFtZSApIHx8IG5hbWU7XG59XG5cblxudmFyXG5cblx0Ly8gU3dhcHBhYmxlIGlmIGRpc3BsYXkgaXMgbm9uZSBvciBzdGFydHMgd2l0aCB0YWJsZVxuXHQvLyBleGNlcHQgXCJ0YWJsZVwiLCBcInRhYmxlLWNlbGxcIiwgb3IgXCJ0YWJsZS1jYXB0aW9uXCJcblx0Ly8gU2VlIGhlcmUgZm9yIGRpc3BsYXkgdmFsdWVzOiBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9lbi1VUy9kb2NzL0NTUy9kaXNwbGF5XG5cdHJkaXNwbGF5c3dhcCA9IC9eKG5vbmV8dGFibGUoPyEtY1tlYV0pLispLyxcblx0cmN1c3RvbVByb3AgPSAvXi0tLyxcblx0Y3NzU2hvdyA9IHsgcG9zaXRpb246IFwiYWJzb2x1dGVcIiwgdmlzaWJpbGl0eTogXCJoaWRkZW5cIiwgZGlzcGxheTogXCJibG9ja1wiIH0sXG5cdGNzc05vcm1hbFRyYW5zZm9ybSA9IHtcblx0XHRsZXR0ZXJTcGFjaW5nOiBcIjBcIixcblx0XHRmb250V2VpZ2h0OiBcIjQwMFwiXG5cdH07XG5cbmZ1bmN0aW9uIHNldFBvc2l0aXZlTnVtYmVyKCBfZWxlbSwgdmFsdWUsIHN1YnRyYWN0ICkge1xuXG5cdC8vIEFueSByZWxhdGl2ZSAoKy8tKSB2YWx1ZXMgaGF2ZSBhbHJlYWR5IGJlZW5cblx0Ly8gbm9ybWFsaXplZCBhdCB0aGlzIHBvaW50XG5cdHZhciBtYXRjaGVzID0gcmNzc051bS5leGVjKCB2YWx1ZSApO1xuXHRyZXR1cm4gbWF0Y2hlcyA/XG5cblx0XHQvLyBHdWFyZCBhZ2FpbnN0IHVuZGVmaW5lZCBcInN1YnRyYWN0XCIsIGUuZy4sIHdoZW4gdXNlZCBhcyBpbiBjc3NIb29rc1xuXHRcdE1hdGgubWF4KCAwLCBtYXRjaGVzWyAyIF0gLSAoIHN1YnRyYWN0IHx8IDAgKSApICsgKCBtYXRjaGVzWyAzIF0gfHwgXCJweFwiICkgOlxuXHRcdHZhbHVlO1xufVxuXG5mdW5jdGlvbiBib3hNb2RlbEFkanVzdG1lbnQoIGVsZW0sIGRpbWVuc2lvbiwgYm94LCBpc0JvcmRlckJveCwgc3R5bGVzLCBjb21wdXRlZFZhbCApIHtcblx0dmFyIGkgPSBkaW1lbnNpb24gPT09IFwid2lkdGhcIiA/IDEgOiAwLFxuXHRcdGV4dHJhID0gMCxcblx0XHRkZWx0YSA9IDA7XG5cblx0Ly8gQWRqdXN0bWVudCBtYXkgbm90IGJlIG5lY2Vzc2FyeVxuXHRpZiAoIGJveCA9PT0gKCBpc0JvcmRlckJveCA/IFwiYm9yZGVyXCIgOiBcImNvbnRlbnRcIiApICkge1xuXHRcdHJldHVybiAwO1xuXHR9XG5cblx0Zm9yICggOyBpIDwgNDsgaSArPSAyICkge1xuXG5cdFx0Ly8gQm90aCBib3ggbW9kZWxzIGV4Y2x1ZGUgbWFyZ2luXG5cdFx0aWYgKCBib3ggPT09IFwibWFyZ2luXCIgKSB7XG5cdFx0XHRkZWx0YSArPSBqUXVlcnkuY3NzKCBlbGVtLCBib3ggKyBjc3NFeHBhbmRbIGkgXSwgdHJ1ZSwgc3R5bGVzICk7XG5cdFx0fVxuXG5cdFx0Ly8gSWYgd2UgZ2V0IGhlcmUgd2l0aCBhIGNvbnRlbnQtYm94LCB3ZSdyZSBzZWVraW5nIFwicGFkZGluZ1wiIG9yIFwiYm9yZGVyXCIgb3IgXCJtYXJnaW5cIlxuXHRcdGlmICggIWlzQm9yZGVyQm94ICkge1xuXG5cdFx0XHQvLyBBZGQgcGFkZGluZ1xuXHRcdFx0ZGVsdGEgKz0galF1ZXJ5LmNzcyggZWxlbSwgXCJwYWRkaW5nXCIgKyBjc3NFeHBhbmRbIGkgXSwgdHJ1ZSwgc3R5bGVzICk7XG5cblx0XHRcdC8vIEZvciBcImJvcmRlclwiIG9yIFwibWFyZ2luXCIsIGFkZCBib3JkZXJcblx0XHRcdGlmICggYm94ICE9PSBcInBhZGRpbmdcIiApIHtcblx0XHRcdFx0ZGVsdGEgKz0galF1ZXJ5LmNzcyggZWxlbSwgXCJib3JkZXJcIiArIGNzc0V4cGFuZFsgaSBdICsgXCJXaWR0aFwiLCB0cnVlLCBzdHlsZXMgKTtcblxuXHRcdFx0Ly8gQnV0IHN0aWxsIGtlZXAgdHJhY2sgb2YgaXQgb3RoZXJ3aXNlXG5cdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRleHRyYSArPSBqUXVlcnkuY3NzKCBlbGVtLCBcImJvcmRlclwiICsgY3NzRXhwYW5kWyBpIF0gKyBcIldpZHRoXCIsIHRydWUsIHN0eWxlcyApO1xuXHRcdFx0fVxuXG5cdFx0Ly8gSWYgd2UgZ2V0IGhlcmUgd2l0aCBhIGJvcmRlci1ib3ggKGNvbnRlbnQgKyBwYWRkaW5nICsgYm9yZGVyKSwgd2UncmUgc2Vla2luZyBcImNvbnRlbnRcIiBvclxuXHRcdC8vIFwicGFkZGluZ1wiIG9yIFwibWFyZ2luXCJcblx0XHR9IGVsc2Uge1xuXG5cdFx0XHQvLyBGb3IgXCJjb250ZW50XCIsIHN1YnRyYWN0IHBhZGRpbmdcblx0XHRcdGlmICggYm94ID09PSBcImNvbnRlbnRcIiApIHtcblx0XHRcdFx0ZGVsdGEgLT0galF1ZXJ5LmNzcyggZWxlbSwgXCJwYWRkaW5nXCIgKyBjc3NFeHBhbmRbIGkgXSwgdHJ1ZSwgc3R5bGVzICk7XG5cdFx0XHR9XG5cblx0XHRcdC8vIEZvciBcImNvbnRlbnRcIiBvciBcInBhZGRpbmdcIiwgc3VidHJhY3QgYm9yZGVyXG5cdFx0XHRpZiAoIGJveCAhPT0gXCJtYXJnaW5cIiApIHtcblx0XHRcdFx0ZGVsdGEgLT0galF1ZXJ5LmNzcyggZWxlbSwgXCJib3JkZXJcIiArIGNzc0V4cGFuZFsgaSBdICsgXCJXaWR0aFwiLCB0cnVlLCBzdHlsZXMgKTtcblx0XHRcdH1cblx0XHR9XG5cdH1cblxuXHQvLyBBY2NvdW50IGZvciBwb3NpdGl2ZSBjb250ZW50LWJveCBzY3JvbGwgZ3V0dGVyIHdoZW4gcmVxdWVzdGVkIGJ5IHByb3ZpZGluZyBjb21wdXRlZFZhbFxuXHRpZiAoICFpc0JvcmRlckJveCAmJiBjb21wdXRlZFZhbCA+PSAwICkge1xuXG5cdFx0Ly8gb2Zmc2V0V2lkdGgvb2Zmc2V0SGVpZ2h0IGlzIGEgcm91bmRlZCBzdW0gb2YgY29udGVudCwgcGFkZGluZywgc2Nyb2xsIGd1dHRlciwgYW5kIGJvcmRlclxuXHRcdC8vIEFzc3VtaW5nIGludGVnZXIgc2Nyb2xsIGd1dHRlciwgc3VidHJhY3QgdGhlIHJlc3QgYW5kIHJvdW5kIGRvd25cblx0XHRkZWx0YSArPSBNYXRoLm1heCggMCwgTWF0aC5jZWlsKFxuXHRcdFx0ZWxlbVsgXCJvZmZzZXRcIiArIGRpbWVuc2lvblsgMCBdLnRvVXBwZXJDYXNlKCkgKyBkaW1lbnNpb24uc2xpY2UoIDEgKSBdIC1cblx0XHRcdGNvbXB1dGVkVmFsIC1cblx0XHRcdGRlbHRhIC1cblx0XHRcdGV4dHJhIC1cblx0XHRcdDAuNVxuXG5cdFx0Ly8gSWYgb2Zmc2V0V2lkdGgvb2Zmc2V0SGVpZ2h0IGlzIHVua25vd24sIHRoZW4gd2UgY2FuJ3QgZGV0ZXJtaW5lIGNvbnRlbnQtYm94IHNjcm9sbCBndXR0ZXJcblx0XHQvLyBVc2UgYW4gZXhwbGljaXQgemVybyB0byBhdm9pZCBOYU4gKGdoLTM5NjQpXG5cdFx0KSApIHx8IDA7XG5cdH1cblxuXHRyZXR1cm4gZGVsdGE7XG59XG5cbmZ1bmN0aW9uIGdldFdpZHRoT3JIZWlnaHQoIGVsZW0sIGRpbWVuc2lvbiwgZXh0cmEgKSB7XG5cblx0Ly8gU3RhcnQgd2l0aCBjb21wdXRlZCBzdHlsZVxuXHR2YXIgc3R5bGVzID0gZ2V0U3R5bGVzKCBlbGVtICksXG5cblx0XHQvLyBUbyBhdm9pZCBmb3JjaW5nIGEgcmVmbG93LCBvbmx5IGZldGNoIGJveFNpemluZyBpZiB3ZSBuZWVkIGl0IChnaC00MzIyKS5cblx0XHQvLyBGYWtlIGNvbnRlbnQtYm94IHVudGlsIHdlIGtub3cgaXQncyBuZWVkZWQgdG8ga25vdyB0aGUgdHJ1ZSB2YWx1ZS5cblx0XHRib3hTaXppbmdOZWVkZWQgPSAhc3VwcG9ydC5ib3hTaXppbmdSZWxpYWJsZSgpIHx8IGV4dHJhLFxuXHRcdGlzQm9yZGVyQm94ID0gYm94U2l6aW5nTmVlZGVkICYmXG5cdFx0XHRqUXVlcnkuY3NzKCBlbGVtLCBcImJveFNpemluZ1wiLCBmYWxzZSwgc3R5bGVzICkgPT09IFwiYm9yZGVyLWJveFwiLFxuXHRcdHZhbHVlSXNCb3JkZXJCb3ggPSBpc0JvcmRlckJveCxcblxuXHRcdHZhbCA9IGN1ckNTUyggZWxlbSwgZGltZW5zaW9uLCBzdHlsZXMgKSxcblx0XHRvZmZzZXRQcm9wID0gXCJvZmZzZXRcIiArIGRpbWVuc2lvblsgMCBdLnRvVXBwZXJDYXNlKCkgKyBkaW1lbnNpb24uc2xpY2UoIDEgKTtcblxuXHQvLyBTdXBwb3J0OiBGaXJlZm94IDw9NTRcblx0Ly8gUmV0dXJuIGEgY29uZm91bmRpbmcgbm9uLXBpeGVsIHZhbHVlIG9yIGZlaWduIGlnbm9yYW5jZSwgYXMgYXBwcm9wcmlhdGUuXG5cdGlmICggcm51bW5vbnB4LnRlc3QoIHZhbCApICkge1xuXHRcdGlmICggIWV4dHJhICkge1xuXHRcdFx0cmV0dXJuIHZhbDtcblx0XHR9XG5cdFx0dmFsID0gXCJhdXRvXCI7XG5cdH1cblxuXG5cdC8vIFN1cHBvcnQ6IElFIDkgLSAxMSBvbmx5XG5cdC8vIFVzZSBvZmZzZXRXaWR0aC9vZmZzZXRIZWlnaHQgZm9yIHdoZW4gYm94IHNpemluZyBpcyB1bnJlbGlhYmxlLlxuXHQvLyBJbiB0aG9zZSBjYXNlcywgdGhlIGNvbXB1dGVkIHZhbHVlIGNhbiBiZSB0cnVzdGVkIHRvIGJlIGJvcmRlci1ib3guXG5cdGlmICggKCAhc3VwcG9ydC5ib3hTaXppbmdSZWxpYWJsZSgpICYmIGlzQm9yZGVyQm94IHx8XG5cblx0XHQvLyBTdXBwb3J0OiBJRSAxMCAtIDExKywgRWRnZSAxNSAtIDE4K1xuXHRcdC8vIElFL0VkZ2UgbWlzcmVwb3J0IGBnZXRDb21wdXRlZFN0eWxlYCBvZiB0YWJsZSByb3dzIHdpdGggd2lkdGgvaGVpZ2h0XG5cdFx0Ly8gc2V0IGluIENTUyB3aGlsZSBgb2Zmc2V0KmAgcHJvcGVydGllcyByZXBvcnQgY29ycmVjdCB2YWx1ZXMuXG5cdFx0Ly8gSW50ZXJlc3RpbmdseSwgaW4gc29tZSBjYXNlcyBJRSA5IGRvZXNuJ3Qgc3VmZmVyIGZyb20gdGhpcyBpc3N1ZS5cblx0XHQhc3VwcG9ydC5yZWxpYWJsZVRyRGltZW5zaW9ucygpICYmIG5vZGVOYW1lKCBlbGVtLCBcInRyXCIgKSB8fFxuXG5cdFx0Ly8gRmFsbCBiYWNrIHRvIG9mZnNldFdpZHRoL29mZnNldEhlaWdodCB3aGVuIHZhbHVlIGlzIFwiYXV0b1wiXG5cdFx0Ly8gVGhpcyBoYXBwZW5zIGZvciBpbmxpbmUgZWxlbWVudHMgd2l0aCBubyBleHBsaWNpdCBzZXR0aW5nIChnaC0zNTcxKVxuXHRcdHZhbCA9PT0gXCJhdXRvXCIgfHxcblxuXHRcdC8vIFN1cHBvcnQ6IEFuZHJvaWQgPD00LjEgLSA0LjMgb25seVxuXHRcdC8vIEFsc28gdXNlIG9mZnNldFdpZHRoL29mZnNldEhlaWdodCBmb3IgbWlzcmVwb3J0ZWQgaW5saW5lIGRpbWVuc2lvbnMgKGdoLTM2MDIpXG5cdFx0IXBhcnNlRmxvYXQoIHZhbCApICYmIGpRdWVyeS5jc3MoIGVsZW0sIFwiZGlzcGxheVwiLCBmYWxzZSwgc3R5bGVzICkgPT09IFwiaW5saW5lXCIgKSAmJlxuXG5cdFx0Ly8gTWFrZSBzdXJlIHRoZSBlbGVtZW50IGlzIHZpc2libGUgJiBjb25uZWN0ZWRcblx0XHRlbGVtLmdldENsaWVudFJlY3RzKCkubGVuZ3RoICkge1xuXG5cdFx0aXNCb3JkZXJCb3ggPSBqUXVlcnkuY3NzKCBlbGVtLCBcImJveFNpemluZ1wiLCBmYWxzZSwgc3R5bGVzICkgPT09IFwiYm9yZGVyLWJveFwiO1xuXG5cdFx0Ly8gV2hlcmUgYXZhaWxhYmxlLCBvZmZzZXRXaWR0aC9vZmZzZXRIZWlnaHQgYXBwcm94aW1hdGUgYm9yZGVyIGJveCBkaW1lbnNpb25zLlxuXHRcdC8vIFdoZXJlIG5vdCBhdmFpbGFibGUgKGUuZy4sIFNWRyksIGFzc3VtZSB1bnJlbGlhYmxlIGJveC1zaXppbmcgYW5kIGludGVycHJldCB0aGVcblx0XHQvLyByZXRyaWV2ZWQgdmFsdWUgYXMgYSBjb250ZW50IGJveCBkaW1lbnNpb24uXG5cdFx0dmFsdWVJc0JvcmRlckJveCA9IG9mZnNldFByb3AgaW4gZWxlbTtcblx0XHRpZiAoIHZhbHVlSXNCb3JkZXJCb3ggKSB7XG5cdFx0XHR2YWwgPSBlbGVtWyBvZmZzZXRQcm9wIF07XG5cdFx0fVxuXHR9XG5cblx0Ly8gTm9ybWFsaXplIFwiXCIgYW5kIGF1dG9cblx0dmFsID0gcGFyc2VGbG9hdCggdmFsICkgfHwgMDtcblxuXHQvLyBBZGp1c3QgZm9yIHRoZSBlbGVtZW50J3MgYm94IG1vZGVsXG5cdHJldHVybiAoIHZhbCArXG5cdFx0Ym94TW9kZWxBZGp1c3RtZW50KFxuXHRcdFx0ZWxlbSxcblx0XHRcdGRpbWVuc2lvbixcblx0XHRcdGV4dHJhIHx8ICggaXNCb3JkZXJCb3ggPyBcImJvcmRlclwiIDogXCJjb250ZW50XCIgKSxcblx0XHRcdHZhbHVlSXNCb3JkZXJCb3gsXG5cdFx0XHRzdHlsZXMsXG5cblx0XHRcdC8vIFByb3ZpZGUgdGhlIGN1cnJlbnQgY29tcHV0ZWQgc2l6ZSB0byByZXF1ZXN0IHNjcm9sbCBndXR0ZXIgY2FsY3VsYXRpb24gKGdoLTM1ODkpXG5cdFx0XHR2YWxcblx0XHQpXG5cdCkgKyBcInB4XCI7XG59XG5cbmpRdWVyeS5leHRlbmQoIHtcblxuXHQvLyBBZGQgaW4gc3R5bGUgcHJvcGVydHkgaG9va3MgZm9yIG92ZXJyaWRpbmcgdGhlIGRlZmF1bHRcblx0Ly8gYmVoYXZpb3Igb2YgZ2V0dGluZyBhbmQgc2V0dGluZyBhIHN0eWxlIHByb3BlcnR5XG5cdGNzc0hvb2tzOiB7XG5cdFx0b3BhY2l0eToge1xuXHRcdFx0Z2V0OiBmdW5jdGlvbiggZWxlbSwgY29tcHV0ZWQgKSB7XG5cdFx0XHRcdGlmICggY29tcHV0ZWQgKSB7XG5cblx0XHRcdFx0XHQvLyBXZSBzaG91bGQgYWx3YXlzIGdldCBhIG51bWJlciBiYWNrIGZyb20gb3BhY2l0eVxuXHRcdFx0XHRcdHZhciByZXQgPSBjdXJDU1MoIGVsZW0sIFwib3BhY2l0eVwiICk7XG5cdFx0XHRcdFx0cmV0dXJuIHJldCA9PT0gXCJcIiA/IFwiMVwiIDogcmV0O1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fVxuXHR9LFxuXG5cdC8vIERvbid0IGF1dG9tYXRpY2FsbHkgYWRkIFwicHhcIiB0byB0aGVzZSBwb3NzaWJseS11bml0bGVzcyBwcm9wZXJ0aWVzXG5cdGNzc051bWJlcjoge1xuXHRcdFwiYW5pbWF0aW9uSXRlcmF0aW9uQ291bnRcIjogdHJ1ZSxcblx0XHRcImNvbHVtbkNvdW50XCI6IHRydWUsXG5cdFx0XCJmaWxsT3BhY2l0eVwiOiB0cnVlLFxuXHRcdFwiZmxleEdyb3dcIjogdHJ1ZSxcblx0XHRcImZsZXhTaHJpbmtcIjogdHJ1ZSxcblx0XHRcImZvbnRXZWlnaHRcIjogdHJ1ZSxcblx0XHRcImdyaWRBcmVhXCI6IHRydWUsXG5cdFx0XCJncmlkQ29sdW1uXCI6IHRydWUsXG5cdFx0XCJncmlkQ29sdW1uRW5kXCI6IHRydWUsXG5cdFx0XCJncmlkQ29sdW1uU3RhcnRcIjogdHJ1ZSxcblx0XHRcImdyaWRSb3dcIjogdHJ1ZSxcblx0XHRcImdyaWRSb3dFbmRcIjogdHJ1ZSxcblx0XHRcImdyaWRSb3dTdGFydFwiOiB0cnVlLFxuXHRcdFwibGluZUhlaWdodFwiOiB0cnVlLFxuXHRcdFwib3BhY2l0eVwiOiB0cnVlLFxuXHRcdFwib3JkZXJcIjogdHJ1ZSxcblx0XHRcIm9ycGhhbnNcIjogdHJ1ZSxcblx0XHRcIndpZG93c1wiOiB0cnVlLFxuXHRcdFwiekluZGV4XCI6IHRydWUsXG5cdFx0XCJ6b29tXCI6IHRydWVcblx0fSxcblxuXHQvLyBBZGQgaW4gcHJvcGVydGllcyB3aG9zZSBuYW1lcyB5b3Ugd2lzaCB0byBmaXggYmVmb3JlXG5cdC8vIHNldHRpbmcgb3IgZ2V0dGluZyB0aGUgdmFsdWVcblx0Y3NzUHJvcHM6IHt9LFxuXG5cdC8vIEdldCBhbmQgc2V0IHRoZSBzdHlsZSBwcm9wZXJ0eSBvbiBhIERPTSBOb2RlXG5cdHN0eWxlOiBmdW5jdGlvbiggZWxlbSwgbmFtZSwgdmFsdWUsIGV4dHJhICkge1xuXG5cdFx0Ly8gRG9uJ3Qgc2V0IHN0eWxlcyBvbiB0ZXh0IGFuZCBjb21tZW50IG5vZGVzXG5cdFx0aWYgKCAhZWxlbSB8fCBlbGVtLm5vZGVUeXBlID09PSAzIHx8IGVsZW0ubm9kZVR5cGUgPT09IDggfHwgIWVsZW0uc3R5bGUgKSB7XG5cdFx0XHRyZXR1cm47XG5cdFx0fVxuXG5cdFx0Ly8gTWFrZSBzdXJlIHRoYXQgd2UncmUgd29ya2luZyB3aXRoIHRoZSByaWdodCBuYW1lXG5cdFx0dmFyIHJldCwgdHlwZSwgaG9va3MsXG5cdFx0XHRvcmlnTmFtZSA9IGNhbWVsQ2FzZSggbmFtZSApLFxuXHRcdFx0aXNDdXN0b21Qcm9wID0gcmN1c3RvbVByb3AudGVzdCggbmFtZSApLFxuXHRcdFx0c3R5bGUgPSBlbGVtLnN0eWxlO1xuXG5cdFx0Ly8gTWFrZSBzdXJlIHRoYXQgd2UncmUgd29ya2luZyB3aXRoIHRoZSByaWdodCBuYW1lLiBXZSBkb24ndFxuXHRcdC8vIHdhbnQgdG8gcXVlcnkgdGhlIHZhbHVlIGlmIGl0IGlzIGEgQ1NTIGN1c3RvbSBwcm9wZXJ0eVxuXHRcdC8vIHNpbmNlIHRoZXkgYXJlIHVzZXItZGVmaW5lZC5cblx0XHRpZiAoICFpc0N1c3RvbVByb3AgKSB7XG5cdFx0XHRuYW1lID0gZmluYWxQcm9wTmFtZSggb3JpZ05hbWUgKTtcblx0XHR9XG5cblx0XHQvLyBHZXRzIGhvb2sgZm9yIHRoZSBwcmVmaXhlZCB2ZXJzaW9uLCB0aGVuIHVucHJlZml4ZWQgdmVyc2lvblxuXHRcdGhvb2tzID0galF1ZXJ5LmNzc0hvb2tzWyBuYW1lIF0gfHwgalF1ZXJ5LmNzc0hvb2tzWyBvcmlnTmFtZSBdO1xuXG5cdFx0Ly8gQ2hlY2sgaWYgd2UncmUgc2V0dGluZyBhIHZhbHVlXG5cdFx0aWYgKCB2YWx1ZSAhPT0gdW5kZWZpbmVkICkge1xuXHRcdFx0dHlwZSA9IHR5cGVvZiB2YWx1ZTtcblxuXHRcdFx0Ly8gQ29udmVydCBcIis9XCIgb3IgXCItPVwiIHRvIHJlbGF0aXZlIG51bWJlcnMgKCM3MzQ1KVxuXHRcdFx0aWYgKCB0eXBlID09PSBcInN0cmluZ1wiICYmICggcmV0ID0gcmNzc051bS5leGVjKCB2YWx1ZSApICkgJiYgcmV0WyAxIF0gKSB7XG5cdFx0XHRcdHZhbHVlID0gYWRqdXN0Q1NTKCBlbGVtLCBuYW1lLCByZXQgKTtcblxuXHRcdFx0XHQvLyBGaXhlcyBidWcgIzkyMzdcblx0XHRcdFx0dHlwZSA9IFwibnVtYmVyXCI7XG5cdFx0XHR9XG5cblx0XHRcdC8vIE1ha2Ugc3VyZSB0aGF0IG51bGwgYW5kIE5hTiB2YWx1ZXMgYXJlbid0IHNldCAoIzcxMTYpXG5cdFx0XHRpZiAoIHZhbHVlID09IG51bGwgfHwgdmFsdWUgIT09IHZhbHVlICkge1xuXHRcdFx0XHRyZXR1cm47XG5cdFx0XHR9XG5cblx0XHRcdC8vIElmIGEgbnVtYmVyIHdhcyBwYXNzZWQgaW4sIGFkZCB0aGUgdW5pdCAoZXhjZXB0IGZvciBjZXJ0YWluIENTUyBwcm9wZXJ0aWVzKVxuXHRcdFx0Ly8gVGhlIGlzQ3VzdG9tUHJvcCBjaGVjayBjYW4gYmUgcmVtb3ZlZCBpbiBqUXVlcnkgNC4wIHdoZW4gd2Ugb25seSBhdXRvLWFwcGVuZFxuXHRcdFx0Ly8gXCJweFwiIHRvIGEgZmV3IGhhcmRjb2RlZCB2YWx1ZXMuXG5cdFx0XHRpZiAoIHR5cGUgPT09IFwibnVtYmVyXCIgJiYgIWlzQ3VzdG9tUHJvcCApIHtcblx0XHRcdFx0dmFsdWUgKz0gcmV0ICYmIHJldFsgMyBdIHx8ICggalF1ZXJ5LmNzc051bWJlclsgb3JpZ05hbWUgXSA/IFwiXCIgOiBcInB4XCIgKTtcblx0XHRcdH1cblxuXHRcdFx0Ly8gYmFja2dyb3VuZC0qIHByb3BzIGFmZmVjdCBvcmlnaW5hbCBjbG9uZSdzIHZhbHVlc1xuXHRcdFx0aWYgKCAhc3VwcG9ydC5jbGVhckNsb25lU3R5bGUgJiYgdmFsdWUgPT09IFwiXCIgJiYgbmFtZS5pbmRleE9mKCBcImJhY2tncm91bmRcIiApID09PSAwICkge1xuXHRcdFx0XHRzdHlsZVsgbmFtZSBdID0gXCJpbmhlcml0XCI7XG5cdFx0XHR9XG5cblx0XHRcdC8vIElmIGEgaG9vayB3YXMgcHJvdmlkZWQsIHVzZSB0aGF0IHZhbHVlLCBvdGhlcndpc2UganVzdCBzZXQgdGhlIHNwZWNpZmllZCB2YWx1ZVxuXHRcdFx0aWYgKCAhaG9va3MgfHwgISggXCJzZXRcIiBpbiBob29rcyApIHx8XG5cdFx0XHRcdCggdmFsdWUgPSBob29rcy5zZXQoIGVsZW0sIHZhbHVlLCBleHRyYSApICkgIT09IHVuZGVmaW5lZCApIHtcblxuXHRcdFx0XHRpZiAoIGlzQ3VzdG9tUHJvcCApIHtcblx0XHRcdFx0XHRzdHlsZS5zZXRQcm9wZXJ0eSggbmFtZSwgdmFsdWUgKTtcblx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHRzdHlsZVsgbmFtZSBdID0gdmFsdWU7XG5cdFx0XHRcdH1cblx0XHRcdH1cblxuXHRcdH0gZWxzZSB7XG5cblx0XHRcdC8vIElmIGEgaG9vayB3YXMgcHJvdmlkZWQgZ2V0IHRoZSBub24tY29tcHV0ZWQgdmFsdWUgZnJvbSB0aGVyZVxuXHRcdFx0aWYgKCBob29rcyAmJiBcImdldFwiIGluIGhvb2tzICYmXG5cdFx0XHRcdCggcmV0ID0gaG9va3MuZ2V0KCBlbGVtLCBmYWxzZSwgZXh0cmEgKSApICE9PSB1bmRlZmluZWQgKSB7XG5cblx0XHRcdFx0cmV0dXJuIHJldDtcblx0XHRcdH1cblxuXHRcdFx0Ly8gT3RoZXJ3aXNlIGp1c3QgZ2V0IHRoZSB2YWx1ZSBmcm9tIHRoZSBzdHlsZSBvYmplY3Rcblx0XHRcdHJldHVybiBzdHlsZVsgbmFtZSBdO1xuXHRcdH1cblx0fSxcblxuXHRjc3M6IGZ1bmN0aW9uKCBlbGVtLCBuYW1lLCBleHRyYSwgc3R5bGVzICkge1xuXHRcdHZhciB2YWwsIG51bSwgaG9va3MsXG5cdFx0XHRvcmlnTmFtZSA9IGNhbWVsQ2FzZSggbmFtZSApLFxuXHRcdFx0aXNDdXN0b21Qcm9wID0gcmN1c3RvbVByb3AudGVzdCggbmFtZSApO1xuXG5cdFx0Ly8gTWFrZSBzdXJlIHRoYXQgd2UncmUgd29ya2luZyB3aXRoIHRoZSByaWdodCBuYW1lLiBXZSBkb24ndFxuXHRcdC8vIHdhbnQgdG8gbW9kaWZ5IHRoZSB2YWx1ZSBpZiBpdCBpcyBhIENTUyBjdXN0b20gcHJvcGVydHlcblx0XHQvLyBzaW5jZSB0aGV5IGFyZSB1c2VyLWRlZmluZWQuXG5cdFx0aWYgKCAhaXNDdXN0b21Qcm9wICkge1xuXHRcdFx0bmFtZSA9IGZpbmFsUHJvcE5hbWUoIG9yaWdOYW1lICk7XG5cdFx0fVxuXG5cdFx0Ly8gVHJ5IHByZWZpeGVkIG5hbWUgZm9sbG93ZWQgYnkgdGhlIHVucHJlZml4ZWQgbmFtZVxuXHRcdGhvb2tzID0galF1ZXJ5LmNzc0hvb2tzWyBuYW1lIF0gfHwgalF1ZXJ5LmNzc0hvb2tzWyBvcmlnTmFtZSBdO1xuXG5cdFx0Ly8gSWYgYSBob29rIHdhcyBwcm92aWRlZCBnZXQgdGhlIGNvbXB1dGVkIHZhbHVlIGZyb20gdGhlcmVcblx0XHRpZiAoIGhvb2tzICYmIFwiZ2V0XCIgaW4gaG9va3MgKSB7XG5cdFx0XHR2YWwgPSBob29rcy5nZXQoIGVsZW0sIHRydWUsIGV4dHJhICk7XG5cdFx0fVxuXG5cdFx0Ly8gT3RoZXJ3aXNlLCBpZiBhIHdheSB0byBnZXQgdGhlIGNvbXB1dGVkIHZhbHVlIGV4aXN0cywgdXNlIHRoYXRcblx0XHRpZiAoIHZhbCA9PT0gdW5kZWZpbmVkICkge1xuXHRcdFx0dmFsID0gY3VyQ1NTKCBlbGVtLCBuYW1lLCBzdHlsZXMgKTtcblx0XHR9XG5cblx0XHQvLyBDb252ZXJ0IFwibm9ybWFsXCIgdG8gY29tcHV0ZWQgdmFsdWVcblx0XHRpZiAoIHZhbCA9PT0gXCJub3JtYWxcIiAmJiBuYW1lIGluIGNzc05vcm1hbFRyYW5zZm9ybSApIHtcblx0XHRcdHZhbCA9IGNzc05vcm1hbFRyYW5zZm9ybVsgbmFtZSBdO1xuXHRcdH1cblxuXHRcdC8vIE1ha2UgbnVtZXJpYyBpZiBmb3JjZWQgb3IgYSBxdWFsaWZpZXIgd2FzIHByb3ZpZGVkIGFuZCB2YWwgbG9va3MgbnVtZXJpY1xuXHRcdGlmICggZXh0cmEgPT09IFwiXCIgfHwgZXh0cmEgKSB7XG5cdFx0XHRudW0gPSBwYXJzZUZsb2F0KCB2YWwgKTtcblx0XHRcdHJldHVybiBleHRyYSA9PT0gdHJ1ZSB8fCBpc0Zpbml0ZSggbnVtICkgPyBudW0gfHwgMCA6IHZhbDtcblx0XHR9XG5cblx0XHRyZXR1cm4gdmFsO1xuXHR9XG59ICk7XG5cbmpRdWVyeS5lYWNoKCBbIFwiaGVpZ2h0XCIsIFwid2lkdGhcIiBdLCBmdW5jdGlvbiggX2ksIGRpbWVuc2lvbiApIHtcblx0alF1ZXJ5LmNzc0hvb2tzWyBkaW1lbnNpb24gXSA9IHtcblx0XHRnZXQ6IGZ1bmN0aW9uKCBlbGVtLCBjb21wdXRlZCwgZXh0cmEgKSB7XG5cdFx0XHRpZiAoIGNvbXB1dGVkICkge1xuXG5cdFx0XHRcdC8vIENlcnRhaW4gZWxlbWVudHMgY2FuIGhhdmUgZGltZW5zaW9uIGluZm8gaWYgd2UgaW52aXNpYmx5IHNob3cgdGhlbVxuXHRcdFx0XHQvLyBidXQgaXQgbXVzdCBoYXZlIGEgY3VycmVudCBkaXNwbGF5IHN0eWxlIHRoYXQgd291bGQgYmVuZWZpdFxuXHRcdFx0XHRyZXR1cm4gcmRpc3BsYXlzd2FwLnRlc3QoIGpRdWVyeS5jc3MoIGVsZW0sIFwiZGlzcGxheVwiICkgKSAmJlxuXG5cdFx0XHRcdFx0Ly8gU3VwcG9ydDogU2FmYXJpIDgrXG5cdFx0XHRcdFx0Ly8gVGFibGUgY29sdW1ucyBpbiBTYWZhcmkgaGF2ZSBub24temVybyBvZmZzZXRXaWR0aCAmIHplcm9cblx0XHRcdFx0XHQvLyBnZXRCb3VuZGluZ0NsaWVudFJlY3QoKS53aWR0aCB1bmxlc3MgZGlzcGxheSBpcyBjaGFuZ2VkLlxuXHRcdFx0XHRcdC8vIFN1cHBvcnQ6IElFIDw9MTEgb25seVxuXHRcdFx0XHRcdC8vIFJ1bm5pbmcgZ2V0Qm91bmRpbmdDbGllbnRSZWN0IG9uIGEgZGlzY29ubmVjdGVkIG5vZGVcblx0XHRcdFx0XHQvLyBpbiBJRSB0aHJvd3MgYW4gZXJyb3IuXG5cdFx0XHRcdFx0KCAhZWxlbS5nZXRDbGllbnRSZWN0cygpLmxlbmd0aCB8fCAhZWxlbS5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKS53aWR0aCApID9cblx0XHRcdFx0XHRcdHN3YXAoIGVsZW0sIGNzc1Nob3csIGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRcdFx0XHRyZXR1cm4gZ2V0V2lkdGhPckhlaWdodCggZWxlbSwgZGltZW5zaW9uLCBleHRyYSApO1xuXHRcdFx0XHRcdFx0fSApIDpcblx0XHRcdFx0XHRcdGdldFdpZHRoT3JIZWlnaHQoIGVsZW0sIGRpbWVuc2lvbiwgZXh0cmEgKTtcblx0XHRcdH1cblx0XHR9LFxuXG5cdFx0c2V0OiBmdW5jdGlvbiggZWxlbSwgdmFsdWUsIGV4dHJhICkge1xuXHRcdFx0dmFyIG1hdGNoZXMsXG5cdFx0XHRcdHN0eWxlcyA9IGdldFN0eWxlcyggZWxlbSApLFxuXG5cdFx0XHRcdC8vIE9ubHkgcmVhZCBzdHlsZXMucG9zaXRpb24gaWYgdGhlIHRlc3QgaGFzIGEgY2hhbmNlIHRvIGZhaWxcblx0XHRcdFx0Ly8gdG8gYXZvaWQgZm9yY2luZyBhIHJlZmxvdy5cblx0XHRcdFx0c2Nyb2xsYm94U2l6ZUJ1Z2d5ID0gIXN1cHBvcnQuc2Nyb2xsYm94U2l6ZSgpICYmXG5cdFx0XHRcdFx0c3R5bGVzLnBvc2l0aW9uID09PSBcImFic29sdXRlXCIsXG5cblx0XHRcdFx0Ly8gVG8gYXZvaWQgZm9yY2luZyBhIHJlZmxvdywgb25seSBmZXRjaCBib3hTaXppbmcgaWYgd2UgbmVlZCBpdCAoZ2gtMzk5MSlcblx0XHRcdFx0Ym94U2l6aW5nTmVlZGVkID0gc2Nyb2xsYm94U2l6ZUJ1Z2d5IHx8IGV4dHJhLFxuXHRcdFx0XHRpc0JvcmRlckJveCA9IGJveFNpemluZ05lZWRlZCAmJlxuXHRcdFx0XHRcdGpRdWVyeS5jc3MoIGVsZW0sIFwiYm94U2l6aW5nXCIsIGZhbHNlLCBzdHlsZXMgKSA9PT0gXCJib3JkZXItYm94XCIsXG5cdFx0XHRcdHN1YnRyYWN0ID0gZXh0cmEgP1xuXHRcdFx0XHRcdGJveE1vZGVsQWRqdXN0bWVudChcblx0XHRcdFx0XHRcdGVsZW0sXG5cdFx0XHRcdFx0XHRkaW1lbnNpb24sXG5cdFx0XHRcdFx0XHRleHRyYSxcblx0XHRcdFx0XHRcdGlzQm9yZGVyQm94LFxuXHRcdFx0XHRcdFx0c3R5bGVzXG5cdFx0XHRcdFx0KSA6XG5cdFx0XHRcdFx0MDtcblxuXHRcdFx0Ly8gQWNjb3VudCBmb3IgdW5yZWxpYWJsZSBib3JkZXItYm94IGRpbWVuc2lvbnMgYnkgY29tcGFyaW5nIG9mZnNldCogdG8gY29tcHV0ZWQgYW5kXG5cdFx0XHQvLyBmYWtpbmcgYSBjb250ZW50LWJveCB0byBnZXQgYm9yZGVyIGFuZCBwYWRkaW5nIChnaC0zNjk5KVxuXHRcdFx0aWYgKCBpc0JvcmRlckJveCAmJiBzY3JvbGxib3hTaXplQnVnZ3kgKSB7XG5cdFx0XHRcdHN1YnRyYWN0IC09IE1hdGguY2VpbChcblx0XHRcdFx0XHRlbGVtWyBcIm9mZnNldFwiICsgZGltZW5zaW9uWyAwIF0udG9VcHBlckNhc2UoKSArIGRpbWVuc2lvbi5zbGljZSggMSApIF0gLVxuXHRcdFx0XHRcdHBhcnNlRmxvYXQoIHN0eWxlc1sgZGltZW5zaW9uIF0gKSAtXG5cdFx0XHRcdFx0Ym94TW9kZWxBZGp1c3RtZW50KCBlbGVtLCBkaW1lbnNpb24sIFwiYm9yZGVyXCIsIGZhbHNlLCBzdHlsZXMgKSAtXG5cdFx0XHRcdFx0MC41XG5cdFx0XHRcdCk7XG5cdFx0XHR9XG5cblx0XHRcdC8vIENvbnZlcnQgdG8gcGl4ZWxzIGlmIHZhbHVlIGFkanVzdG1lbnQgaXMgbmVlZGVkXG5cdFx0XHRpZiAoIHN1YnRyYWN0ICYmICggbWF0Y2hlcyA9IHJjc3NOdW0uZXhlYyggdmFsdWUgKSApICYmXG5cdFx0XHRcdCggbWF0Y2hlc1sgMyBdIHx8IFwicHhcIiApICE9PSBcInB4XCIgKSB7XG5cblx0XHRcdFx0ZWxlbS5zdHlsZVsgZGltZW5zaW9uIF0gPSB2YWx1ZTtcblx0XHRcdFx0dmFsdWUgPSBqUXVlcnkuY3NzKCBlbGVtLCBkaW1lbnNpb24gKTtcblx0XHRcdH1cblxuXHRcdFx0cmV0dXJuIHNldFBvc2l0aXZlTnVtYmVyKCBlbGVtLCB2YWx1ZSwgc3VidHJhY3QgKTtcblx0XHR9XG5cdH07XG59ICk7XG5cbmpRdWVyeS5jc3NIb29rcy5tYXJnaW5MZWZ0ID0gYWRkR2V0SG9va0lmKCBzdXBwb3J0LnJlbGlhYmxlTWFyZ2luTGVmdCxcblx0ZnVuY3Rpb24oIGVsZW0sIGNvbXB1dGVkICkge1xuXHRcdGlmICggY29tcHV0ZWQgKSB7XG5cdFx0XHRyZXR1cm4gKCBwYXJzZUZsb2F0KCBjdXJDU1MoIGVsZW0sIFwibWFyZ2luTGVmdFwiICkgKSB8fFxuXHRcdFx0XHRlbGVtLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpLmxlZnQgLVxuXHRcdFx0XHRcdHN3YXAoIGVsZW0sIHsgbWFyZ2luTGVmdDogMCB9LCBmdW5jdGlvbigpIHtcblx0XHRcdFx0XHRcdHJldHVybiBlbGVtLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpLmxlZnQ7XG5cdFx0XHRcdFx0fSApXG5cdFx0XHRcdCkgKyBcInB4XCI7XG5cdFx0fVxuXHR9XG4pO1xuXG4vLyBUaGVzZSBob29rcyBhcmUgdXNlZCBieSBhbmltYXRlIHRvIGV4cGFuZCBwcm9wZXJ0aWVzXG5qUXVlcnkuZWFjaCgge1xuXHRtYXJnaW46IFwiXCIsXG5cdHBhZGRpbmc6IFwiXCIsXG5cdGJvcmRlcjogXCJXaWR0aFwiXG59LCBmdW5jdGlvbiggcHJlZml4LCBzdWZmaXggKSB7XG5cdGpRdWVyeS5jc3NIb29rc1sgcHJlZml4ICsgc3VmZml4IF0gPSB7XG5cdFx0ZXhwYW5kOiBmdW5jdGlvbiggdmFsdWUgKSB7XG5cdFx0XHR2YXIgaSA9IDAsXG5cdFx0XHRcdGV4cGFuZGVkID0ge30sXG5cblx0XHRcdFx0Ly8gQXNzdW1lcyBhIHNpbmdsZSBudW1iZXIgaWYgbm90IGEgc3RyaW5nXG5cdFx0XHRcdHBhcnRzID0gdHlwZW9mIHZhbHVlID09PSBcInN0cmluZ1wiID8gdmFsdWUuc3BsaXQoIFwiIFwiICkgOiBbIHZhbHVlIF07XG5cblx0XHRcdGZvciAoIDsgaSA8IDQ7IGkrKyApIHtcblx0XHRcdFx0ZXhwYW5kZWRbIHByZWZpeCArIGNzc0V4cGFuZFsgaSBdICsgc3VmZml4IF0gPVxuXHRcdFx0XHRcdHBhcnRzWyBpIF0gfHwgcGFydHNbIGkgLSAyIF0gfHwgcGFydHNbIDAgXTtcblx0XHRcdH1cblxuXHRcdFx0cmV0dXJuIGV4cGFuZGVkO1xuXHRcdH1cblx0fTtcblxuXHRpZiAoIHByZWZpeCAhPT0gXCJtYXJnaW5cIiApIHtcblx0XHRqUXVlcnkuY3NzSG9va3NbIHByZWZpeCArIHN1ZmZpeCBdLnNldCA9IHNldFBvc2l0aXZlTnVtYmVyO1xuXHR9XG59ICk7XG5cbmpRdWVyeS5mbi5leHRlbmQoIHtcblx0Y3NzOiBmdW5jdGlvbiggbmFtZSwgdmFsdWUgKSB7XG5cdFx0cmV0dXJuIGFjY2VzcyggdGhpcywgZnVuY3Rpb24oIGVsZW0sIG5hbWUsIHZhbHVlICkge1xuXHRcdFx0dmFyIHN0eWxlcywgbGVuLFxuXHRcdFx0XHRtYXAgPSB7fSxcblx0XHRcdFx0aSA9IDA7XG5cblx0XHRcdGlmICggQXJyYXkuaXNBcnJheSggbmFtZSApICkge1xuXHRcdFx0XHRzdHlsZXMgPSBnZXRTdHlsZXMoIGVsZW0gKTtcblx0XHRcdFx0bGVuID0gbmFtZS5sZW5ndGg7XG5cblx0XHRcdFx0Zm9yICggOyBpIDwgbGVuOyBpKysgKSB7XG5cdFx0XHRcdFx0bWFwWyBuYW1lWyBpIF0gXSA9IGpRdWVyeS5jc3MoIGVsZW0sIG5hbWVbIGkgXSwgZmFsc2UsIHN0eWxlcyApO1xuXHRcdFx0XHR9XG5cblx0XHRcdFx0cmV0dXJuIG1hcDtcblx0XHRcdH1cblxuXHRcdFx0cmV0dXJuIHZhbHVlICE9PSB1bmRlZmluZWQgP1xuXHRcdFx0XHRqUXVlcnkuc3R5bGUoIGVsZW0sIG5hbWUsIHZhbHVlICkgOlxuXHRcdFx0XHRqUXVlcnkuY3NzKCBlbGVtLCBuYW1lICk7XG5cdFx0fSwgbmFtZSwgdmFsdWUsIGFyZ3VtZW50cy5sZW5ndGggPiAxICk7XG5cdH1cbn0gKTtcblxuXG5mdW5jdGlvbiBUd2VlbiggZWxlbSwgb3B0aW9ucywgcHJvcCwgZW5kLCBlYXNpbmcgKSB7XG5cdHJldHVybiBuZXcgVHdlZW4ucHJvdG90eXBlLmluaXQoIGVsZW0sIG9wdGlvbnMsIHByb3AsIGVuZCwgZWFzaW5nICk7XG59XG5qUXVlcnkuVHdlZW4gPSBUd2VlbjtcblxuVHdlZW4ucHJvdG90eXBlID0ge1xuXHRjb25zdHJ1Y3RvcjogVHdlZW4sXG5cdGluaXQ6IGZ1bmN0aW9uKCBlbGVtLCBvcHRpb25zLCBwcm9wLCBlbmQsIGVhc2luZywgdW5pdCApIHtcblx0XHR0aGlzLmVsZW0gPSBlbGVtO1xuXHRcdHRoaXMucHJvcCA9IHByb3A7XG5cdFx0dGhpcy5lYXNpbmcgPSBlYXNpbmcgfHwgalF1ZXJ5LmVhc2luZy5fZGVmYXVsdDtcblx0XHR0aGlzLm9wdGlvbnMgPSBvcHRpb25zO1xuXHRcdHRoaXMuc3RhcnQgPSB0aGlzLm5vdyA9IHRoaXMuY3VyKCk7XG5cdFx0dGhpcy5lbmQgPSBlbmQ7XG5cdFx0dGhpcy51bml0ID0gdW5pdCB8fCAoIGpRdWVyeS5jc3NOdW1iZXJbIHByb3AgXSA/IFwiXCIgOiBcInB4XCIgKTtcblx0fSxcblx0Y3VyOiBmdW5jdGlvbigpIHtcblx0XHR2YXIgaG9va3MgPSBUd2Vlbi5wcm9wSG9va3NbIHRoaXMucHJvcCBdO1xuXG5cdFx0cmV0dXJuIGhvb2tzICYmIGhvb2tzLmdldCA/XG5cdFx0XHRob29rcy5nZXQoIHRoaXMgKSA6XG5cdFx0XHRUd2Vlbi5wcm9wSG9va3MuX2RlZmF1bHQuZ2V0KCB0aGlzICk7XG5cdH0sXG5cdHJ1bjogZnVuY3Rpb24oIHBlcmNlbnQgKSB7XG5cdFx0dmFyIGVhc2VkLFxuXHRcdFx0aG9va3MgPSBUd2Vlbi5wcm9wSG9va3NbIHRoaXMucHJvcCBdO1xuXG5cdFx0aWYgKCB0aGlzLm9wdGlvbnMuZHVyYXRpb24gKSB7XG5cdFx0XHR0aGlzLnBvcyA9IGVhc2VkID0galF1ZXJ5LmVhc2luZ1sgdGhpcy5lYXNpbmcgXShcblx0XHRcdFx0cGVyY2VudCwgdGhpcy5vcHRpb25zLmR1cmF0aW9uICogcGVyY2VudCwgMCwgMSwgdGhpcy5vcHRpb25zLmR1cmF0aW9uXG5cdFx0XHQpO1xuXHRcdH0gZWxzZSB7XG5cdFx0XHR0aGlzLnBvcyA9IGVhc2VkID0gcGVyY2VudDtcblx0XHR9XG5cdFx0dGhpcy5ub3cgPSAoIHRoaXMuZW5kIC0gdGhpcy5zdGFydCApICogZWFzZWQgKyB0aGlzLnN0YXJ0O1xuXG5cdFx0aWYgKCB0aGlzLm9wdGlvbnMuc3RlcCApIHtcblx0XHRcdHRoaXMub3B0aW9ucy5zdGVwLmNhbGwoIHRoaXMuZWxlbSwgdGhpcy5ub3csIHRoaXMgKTtcblx0XHR9XG5cblx0XHRpZiAoIGhvb2tzICYmIGhvb2tzLnNldCApIHtcblx0XHRcdGhvb2tzLnNldCggdGhpcyApO1xuXHRcdH0gZWxzZSB7XG5cdFx0XHRUd2Vlbi5wcm9wSG9va3MuX2RlZmF1bHQuc2V0KCB0aGlzICk7XG5cdFx0fVxuXHRcdHJldHVybiB0aGlzO1xuXHR9XG59O1xuXG5Ud2Vlbi5wcm90b3R5cGUuaW5pdC5wcm90b3R5cGUgPSBUd2Vlbi5wcm90b3R5cGU7XG5cblR3ZWVuLnByb3BIb29rcyA9IHtcblx0X2RlZmF1bHQ6IHtcblx0XHRnZXQ6IGZ1bmN0aW9uKCB0d2VlbiApIHtcblx0XHRcdHZhciByZXN1bHQ7XG5cblx0XHRcdC8vIFVzZSBhIHByb3BlcnR5IG9uIHRoZSBlbGVtZW50IGRpcmVjdGx5IHdoZW4gaXQgaXMgbm90IGEgRE9NIGVsZW1lbnQsXG5cdFx0XHQvLyBvciB3aGVuIHRoZXJlIGlzIG5vIG1hdGNoaW5nIHN0eWxlIHByb3BlcnR5IHRoYXQgZXhpc3RzLlxuXHRcdFx0aWYgKCB0d2Vlbi5lbGVtLm5vZGVUeXBlICE9PSAxIHx8XG5cdFx0XHRcdHR3ZWVuLmVsZW1bIHR3ZWVuLnByb3AgXSAhPSBudWxsICYmIHR3ZWVuLmVsZW0uc3R5bGVbIHR3ZWVuLnByb3AgXSA9PSBudWxsICkge1xuXHRcdFx0XHRyZXR1cm4gdHdlZW4uZWxlbVsgdHdlZW4ucHJvcCBdO1xuXHRcdFx0fVxuXG5cdFx0XHQvLyBQYXNzaW5nIGFuIGVtcHR5IHN0cmluZyBhcyBhIDNyZCBwYXJhbWV0ZXIgdG8gLmNzcyB3aWxsIGF1dG9tYXRpY2FsbHlcblx0XHRcdC8vIGF0dGVtcHQgYSBwYXJzZUZsb2F0IGFuZCBmYWxsYmFjayB0byBhIHN0cmluZyBpZiB0aGUgcGFyc2UgZmFpbHMuXG5cdFx0XHQvLyBTaW1wbGUgdmFsdWVzIHN1Y2ggYXMgXCIxMHB4XCIgYXJlIHBhcnNlZCB0byBGbG9hdDtcblx0XHRcdC8vIGNvbXBsZXggdmFsdWVzIHN1Y2ggYXMgXCJyb3RhdGUoMXJhZClcIiBhcmUgcmV0dXJuZWQgYXMtaXMuXG5cdFx0XHRyZXN1bHQgPSBqUXVlcnkuY3NzKCB0d2Vlbi5lbGVtLCB0d2Vlbi5wcm9wLCBcIlwiICk7XG5cblx0XHRcdC8vIEVtcHR5IHN0cmluZ3MsIG51bGwsIHVuZGVmaW5lZCBhbmQgXCJhdXRvXCIgYXJlIGNvbnZlcnRlZCB0byAwLlxuXHRcdFx0cmV0dXJuICFyZXN1bHQgfHwgcmVzdWx0ID09PSBcImF1dG9cIiA/IDAgOiByZXN1bHQ7XG5cdFx0fSxcblx0XHRzZXQ6IGZ1bmN0aW9uKCB0d2VlbiApIHtcblxuXHRcdFx0Ly8gVXNlIHN0ZXAgaG9vayBmb3IgYmFjayBjb21wYXQuXG5cdFx0XHQvLyBVc2UgY3NzSG9vayBpZiBpdHMgdGhlcmUuXG5cdFx0XHQvLyBVc2UgLnN0eWxlIGlmIGF2YWlsYWJsZSBhbmQgdXNlIHBsYWluIHByb3BlcnRpZXMgd2hlcmUgYXZhaWxhYmxlLlxuXHRcdFx0aWYgKCBqUXVlcnkuZnguc3RlcFsgdHdlZW4ucHJvcCBdICkge1xuXHRcdFx0XHRqUXVlcnkuZnguc3RlcFsgdHdlZW4ucHJvcCBdKCB0d2VlbiApO1xuXHRcdFx0fSBlbHNlIGlmICggdHdlZW4uZWxlbS5ub2RlVHlwZSA9PT0gMSAmJiAoXG5cdFx0XHRcdFx0alF1ZXJ5LmNzc0hvb2tzWyB0d2Vlbi5wcm9wIF0gfHxcblx0XHRcdFx0XHR0d2Vlbi5lbGVtLnN0eWxlWyBmaW5hbFByb3BOYW1lKCB0d2Vlbi5wcm9wICkgXSAhPSBudWxsICkgKSB7XG5cdFx0XHRcdGpRdWVyeS5zdHlsZSggdHdlZW4uZWxlbSwgdHdlZW4ucHJvcCwgdHdlZW4ubm93ICsgdHdlZW4udW5pdCApO1xuXHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0dHdlZW4uZWxlbVsgdHdlZW4ucHJvcCBdID0gdHdlZW4ubm93O1xuXHRcdFx0fVxuXHRcdH1cblx0fVxufTtcblxuLy8gU3VwcG9ydDogSUUgPD05IG9ubHlcbi8vIFBhbmljIGJhc2VkIGFwcHJvYWNoIHRvIHNldHRpbmcgdGhpbmdzIG9uIGRpc2Nvbm5lY3RlZCBub2Rlc1xuVHdlZW4ucHJvcEhvb2tzLnNjcm9sbFRvcCA9IFR3ZWVuLnByb3BIb29rcy5zY3JvbGxMZWZ0ID0ge1xuXHRzZXQ6IGZ1bmN0aW9uKCB0d2VlbiApIHtcblx0XHRpZiAoIHR3ZWVuLmVsZW0ubm9kZVR5cGUgJiYgdHdlZW4uZWxlbS5wYXJlbnROb2RlICkge1xuXHRcdFx0dHdlZW4uZWxlbVsgdHdlZW4ucHJvcCBdID0gdHdlZW4ubm93O1xuXHRcdH1cblx0fVxufTtcblxualF1ZXJ5LmVhc2luZyA9IHtcblx0bGluZWFyOiBmdW5jdGlvbiggcCApIHtcblx0XHRyZXR1cm4gcDtcblx0fSxcblx0c3dpbmc6IGZ1bmN0aW9uKCBwICkge1xuXHRcdHJldHVybiAwLjUgLSBNYXRoLmNvcyggcCAqIE1hdGguUEkgKSAvIDI7XG5cdH0sXG5cdF9kZWZhdWx0OiBcInN3aW5nXCJcbn07XG5cbmpRdWVyeS5meCA9IFR3ZWVuLnByb3RvdHlwZS5pbml0O1xuXG4vLyBCYWNrIGNvbXBhdCA8MS44IGV4dGVuc2lvbiBwb2ludFxualF1ZXJ5LmZ4LnN0ZXAgPSB7fTtcblxuXG5cblxudmFyXG5cdGZ4Tm93LCBpblByb2dyZXNzLFxuXHRyZnh0eXBlcyA9IC9eKD86dG9nZ2xlfHNob3d8aGlkZSkkLyxcblx0cnJ1biA9IC9xdWV1ZUhvb2tzJC87XG5cbmZ1bmN0aW9uIHNjaGVkdWxlKCkge1xuXHRpZiAoIGluUHJvZ3Jlc3MgKSB7XG5cdFx0aWYgKCBkb2N1bWVudC5oaWRkZW4gPT09IGZhbHNlICYmIHdpbmRvdy5yZXF1ZXN0QW5pbWF0aW9uRnJhbWUgKSB7XG5cdFx0XHR3aW5kb3cucmVxdWVzdEFuaW1hdGlvbkZyYW1lKCBzY2hlZHVsZSApO1xuXHRcdH0gZWxzZSB7XG5cdFx0XHR3aW5kb3cuc2V0VGltZW91dCggc2NoZWR1bGUsIGpRdWVyeS5meC5pbnRlcnZhbCApO1xuXHRcdH1cblxuXHRcdGpRdWVyeS5meC50aWNrKCk7XG5cdH1cbn1cblxuLy8gQW5pbWF0aW9ucyBjcmVhdGVkIHN5bmNocm9ub3VzbHkgd2lsbCBydW4gc3luY2hyb25vdXNseVxuZnVuY3Rpb24gY3JlYXRlRnhOb3coKSB7XG5cdHdpbmRvdy5zZXRUaW1lb3V0KCBmdW5jdGlvbigpIHtcblx0XHRmeE5vdyA9IHVuZGVmaW5lZDtcblx0fSApO1xuXHRyZXR1cm4gKCBmeE5vdyA9IERhdGUubm93KCkgKTtcbn1cblxuLy8gR2VuZXJhdGUgcGFyYW1ldGVycyB0byBjcmVhdGUgYSBzdGFuZGFyZCBhbmltYXRpb25cbmZ1bmN0aW9uIGdlbkZ4KCB0eXBlLCBpbmNsdWRlV2lkdGggKSB7XG5cdHZhciB3aGljaCxcblx0XHRpID0gMCxcblx0XHRhdHRycyA9IHsgaGVpZ2h0OiB0eXBlIH07XG5cblx0Ly8gSWYgd2UgaW5jbHVkZSB3aWR0aCwgc3RlcCB2YWx1ZSBpcyAxIHRvIGRvIGFsbCBjc3NFeHBhbmQgdmFsdWVzLFxuXHQvLyBvdGhlcndpc2Ugc3RlcCB2YWx1ZSBpcyAyIHRvIHNraXAgb3ZlciBMZWZ0IGFuZCBSaWdodFxuXHRpbmNsdWRlV2lkdGggPSBpbmNsdWRlV2lkdGggPyAxIDogMDtcblx0Zm9yICggOyBpIDwgNDsgaSArPSAyIC0gaW5jbHVkZVdpZHRoICkge1xuXHRcdHdoaWNoID0gY3NzRXhwYW5kWyBpIF07XG5cdFx0YXR0cnNbIFwibWFyZ2luXCIgKyB3aGljaCBdID0gYXR0cnNbIFwicGFkZGluZ1wiICsgd2hpY2ggXSA9IHR5cGU7XG5cdH1cblxuXHRpZiAoIGluY2x1ZGVXaWR0aCApIHtcblx0XHRhdHRycy5vcGFjaXR5ID0gYXR0cnMud2lkdGggPSB0eXBlO1xuXHR9XG5cblx0cmV0dXJuIGF0dHJzO1xufVxuXG5mdW5jdGlvbiBjcmVhdGVUd2VlbiggdmFsdWUsIHByb3AsIGFuaW1hdGlvbiApIHtcblx0dmFyIHR3ZWVuLFxuXHRcdGNvbGxlY3Rpb24gPSAoIEFuaW1hdGlvbi50d2VlbmVyc1sgcHJvcCBdIHx8IFtdICkuY29uY2F0KCBBbmltYXRpb24udHdlZW5lcnNbIFwiKlwiIF0gKSxcblx0XHRpbmRleCA9IDAsXG5cdFx0bGVuZ3RoID0gY29sbGVjdGlvbi5sZW5ndGg7XG5cdGZvciAoIDsgaW5kZXggPCBsZW5ndGg7IGluZGV4KysgKSB7XG5cdFx0aWYgKCAoIHR3ZWVuID0gY29sbGVjdGlvblsgaW5kZXggXS5jYWxsKCBhbmltYXRpb24sIHByb3AsIHZhbHVlICkgKSApIHtcblxuXHRcdFx0Ly8gV2UncmUgZG9uZSB3aXRoIHRoaXMgcHJvcGVydHlcblx0XHRcdHJldHVybiB0d2Vlbjtcblx0XHR9XG5cdH1cbn1cblxuZnVuY3Rpb24gZGVmYXVsdFByZWZpbHRlciggZWxlbSwgcHJvcHMsIG9wdHMgKSB7XG5cdHZhciBwcm9wLCB2YWx1ZSwgdG9nZ2xlLCBob29rcywgb2xkZmlyZSwgcHJvcFR3ZWVuLCByZXN0b3JlRGlzcGxheSwgZGlzcGxheSxcblx0XHRpc0JveCA9IFwid2lkdGhcIiBpbiBwcm9wcyB8fCBcImhlaWdodFwiIGluIHByb3BzLFxuXHRcdGFuaW0gPSB0aGlzLFxuXHRcdG9yaWcgPSB7fSxcblx0XHRzdHlsZSA9IGVsZW0uc3R5bGUsXG5cdFx0aGlkZGVuID0gZWxlbS5ub2RlVHlwZSAmJiBpc0hpZGRlbldpdGhpblRyZWUoIGVsZW0gKSxcblx0XHRkYXRhU2hvdyA9IGRhdGFQcml2LmdldCggZWxlbSwgXCJmeHNob3dcIiApO1xuXG5cdC8vIFF1ZXVlLXNraXBwaW5nIGFuaW1hdGlvbnMgaGlqYWNrIHRoZSBmeCBob29rc1xuXHRpZiAoICFvcHRzLnF1ZXVlICkge1xuXHRcdGhvb2tzID0galF1ZXJ5Ll9xdWV1ZUhvb2tzKCBlbGVtLCBcImZ4XCIgKTtcblx0XHRpZiAoIGhvb2tzLnVucXVldWVkID09IG51bGwgKSB7XG5cdFx0XHRob29rcy51bnF1ZXVlZCA9IDA7XG5cdFx0XHRvbGRmaXJlID0gaG9va3MuZW1wdHkuZmlyZTtcblx0XHRcdGhvb2tzLmVtcHR5LmZpcmUgPSBmdW5jdGlvbigpIHtcblx0XHRcdFx0aWYgKCAhaG9va3MudW5xdWV1ZWQgKSB7XG5cdFx0XHRcdFx0b2xkZmlyZSgpO1xuXHRcdFx0XHR9XG5cdFx0XHR9O1xuXHRcdH1cblx0XHRob29rcy51bnF1ZXVlZCsrO1xuXG5cdFx0YW5pbS5hbHdheXMoIGZ1bmN0aW9uKCkge1xuXG5cdFx0XHQvLyBFbnN1cmUgdGhlIGNvbXBsZXRlIGhhbmRsZXIgaXMgY2FsbGVkIGJlZm9yZSB0aGlzIGNvbXBsZXRlc1xuXHRcdFx0YW5pbS5hbHdheXMoIGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRob29rcy51bnF1ZXVlZC0tO1xuXHRcdFx0XHRpZiAoICFqUXVlcnkucXVldWUoIGVsZW0sIFwiZnhcIiApLmxlbmd0aCApIHtcblx0XHRcdFx0XHRob29rcy5lbXB0eS5maXJlKCk7XG5cdFx0XHRcdH1cblx0XHRcdH0gKTtcblx0XHR9ICk7XG5cdH1cblxuXHQvLyBEZXRlY3Qgc2hvdy9oaWRlIGFuaW1hdGlvbnNcblx0Zm9yICggcHJvcCBpbiBwcm9wcyApIHtcblx0XHR2YWx1ZSA9IHByb3BzWyBwcm9wIF07XG5cdFx0aWYgKCByZnh0eXBlcy50ZXN0KCB2YWx1ZSApICkge1xuXHRcdFx0ZGVsZXRlIHByb3BzWyBwcm9wIF07XG5cdFx0XHR0b2dnbGUgPSB0b2dnbGUgfHwgdmFsdWUgPT09IFwidG9nZ2xlXCI7XG5cdFx0XHRpZiAoIHZhbHVlID09PSAoIGhpZGRlbiA/IFwiaGlkZVwiIDogXCJzaG93XCIgKSApIHtcblxuXHRcdFx0XHQvLyBQcmV0ZW5kIHRvIGJlIGhpZGRlbiBpZiB0aGlzIGlzIGEgXCJzaG93XCIgYW5kXG5cdFx0XHRcdC8vIHRoZXJlIGlzIHN0aWxsIGRhdGEgZnJvbSBhIHN0b3BwZWQgc2hvdy9oaWRlXG5cdFx0XHRcdGlmICggdmFsdWUgPT09IFwic2hvd1wiICYmIGRhdGFTaG93ICYmIGRhdGFTaG93WyBwcm9wIF0gIT09IHVuZGVmaW5lZCApIHtcblx0XHRcdFx0XHRoaWRkZW4gPSB0cnVlO1xuXG5cdFx0XHRcdC8vIElnbm9yZSBhbGwgb3RoZXIgbm8tb3Agc2hvdy9oaWRlIGRhdGFcblx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHRjb250aW51ZTtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdFx0b3JpZ1sgcHJvcCBdID0gZGF0YVNob3cgJiYgZGF0YVNob3dbIHByb3AgXSB8fCBqUXVlcnkuc3R5bGUoIGVsZW0sIHByb3AgKTtcblx0XHR9XG5cdH1cblxuXHQvLyBCYWlsIG91dCBpZiB0aGlzIGlzIGEgbm8tb3AgbGlrZSAuaGlkZSgpLmhpZGUoKVxuXHRwcm9wVHdlZW4gPSAhalF1ZXJ5LmlzRW1wdHlPYmplY3QoIHByb3BzICk7XG5cdGlmICggIXByb3BUd2VlbiAmJiBqUXVlcnkuaXNFbXB0eU9iamVjdCggb3JpZyApICkge1xuXHRcdHJldHVybjtcblx0fVxuXG5cdC8vIFJlc3RyaWN0IFwib3ZlcmZsb3dcIiBhbmQgXCJkaXNwbGF5XCIgc3R5bGVzIGR1cmluZyBib3ggYW5pbWF0aW9uc1xuXHRpZiAoIGlzQm94ICYmIGVsZW0ubm9kZVR5cGUgPT09IDEgKSB7XG5cblx0XHQvLyBTdXBwb3J0OiBJRSA8PTkgLSAxMSwgRWRnZSAxMiAtIDE1XG5cdFx0Ly8gUmVjb3JkIGFsbCAzIG92ZXJmbG93IGF0dHJpYnV0ZXMgYmVjYXVzZSBJRSBkb2VzIG5vdCBpbmZlciB0aGUgc2hvcnRoYW5kXG5cdFx0Ly8gZnJvbSBpZGVudGljYWxseS12YWx1ZWQgb3ZlcmZsb3dYIGFuZCBvdmVyZmxvd1kgYW5kIEVkZ2UganVzdCBtaXJyb3JzXG5cdFx0Ly8gdGhlIG92ZXJmbG93WCB2YWx1ZSB0aGVyZS5cblx0XHRvcHRzLm92ZXJmbG93ID0gWyBzdHlsZS5vdmVyZmxvdywgc3R5bGUub3ZlcmZsb3dYLCBzdHlsZS5vdmVyZmxvd1kgXTtcblxuXHRcdC8vIElkZW50aWZ5IGEgZGlzcGxheSB0eXBlLCBwcmVmZXJyaW5nIG9sZCBzaG93L2hpZGUgZGF0YSBvdmVyIHRoZSBDU1MgY2FzY2FkZVxuXHRcdHJlc3RvcmVEaXNwbGF5ID0gZGF0YVNob3cgJiYgZGF0YVNob3cuZGlzcGxheTtcblx0XHRpZiAoIHJlc3RvcmVEaXNwbGF5ID09IG51bGwgKSB7XG5cdFx0XHRyZXN0b3JlRGlzcGxheSA9IGRhdGFQcml2LmdldCggZWxlbSwgXCJkaXNwbGF5XCIgKTtcblx0XHR9XG5cdFx0ZGlzcGxheSA9IGpRdWVyeS5jc3MoIGVsZW0sIFwiZGlzcGxheVwiICk7XG5cdFx0aWYgKCBkaXNwbGF5ID09PSBcIm5vbmVcIiApIHtcblx0XHRcdGlmICggcmVzdG9yZURpc3BsYXkgKSB7XG5cdFx0XHRcdGRpc3BsYXkgPSByZXN0b3JlRGlzcGxheTtcblx0XHRcdH0gZWxzZSB7XG5cblx0XHRcdFx0Ly8gR2V0IG5vbmVtcHR5IHZhbHVlKHMpIGJ5IHRlbXBvcmFyaWx5IGZvcmNpbmcgdmlzaWJpbGl0eVxuXHRcdFx0XHRzaG93SGlkZSggWyBlbGVtIF0sIHRydWUgKTtcblx0XHRcdFx0cmVzdG9yZURpc3BsYXkgPSBlbGVtLnN0eWxlLmRpc3BsYXkgfHwgcmVzdG9yZURpc3BsYXk7XG5cdFx0XHRcdGRpc3BsYXkgPSBqUXVlcnkuY3NzKCBlbGVtLCBcImRpc3BsYXlcIiApO1xuXHRcdFx0XHRzaG93SGlkZSggWyBlbGVtIF0gKTtcblx0XHRcdH1cblx0XHR9XG5cblx0XHQvLyBBbmltYXRlIGlubGluZSBlbGVtZW50cyBhcyBpbmxpbmUtYmxvY2tcblx0XHRpZiAoIGRpc3BsYXkgPT09IFwiaW5saW5lXCIgfHwgZGlzcGxheSA9PT0gXCJpbmxpbmUtYmxvY2tcIiAmJiByZXN0b3JlRGlzcGxheSAhPSBudWxsICkge1xuXHRcdFx0aWYgKCBqUXVlcnkuY3NzKCBlbGVtLCBcImZsb2F0XCIgKSA9PT0gXCJub25lXCIgKSB7XG5cblx0XHRcdFx0Ly8gUmVzdG9yZSB0aGUgb3JpZ2luYWwgZGlzcGxheSB2YWx1ZSBhdCB0aGUgZW5kIG9mIHB1cmUgc2hvdy9oaWRlIGFuaW1hdGlvbnNcblx0XHRcdFx0aWYgKCAhcHJvcFR3ZWVuICkge1xuXHRcdFx0XHRcdGFuaW0uZG9uZSggZnVuY3Rpb24oKSB7XG5cdFx0XHRcdFx0XHRzdHlsZS5kaXNwbGF5ID0gcmVzdG9yZURpc3BsYXk7XG5cdFx0XHRcdFx0fSApO1xuXHRcdFx0XHRcdGlmICggcmVzdG9yZURpc3BsYXkgPT0gbnVsbCApIHtcblx0XHRcdFx0XHRcdGRpc3BsYXkgPSBzdHlsZS5kaXNwbGF5O1xuXHRcdFx0XHRcdFx0cmVzdG9yZURpc3BsYXkgPSBkaXNwbGF5ID09PSBcIm5vbmVcIiA/IFwiXCIgOiBkaXNwbGF5O1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXHRcdFx0XHRzdHlsZS5kaXNwbGF5ID0gXCJpbmxpbmUtYmxvY2tcIjtcblx0XHRcdH1cblx0XHR9XG5cdH1cblxuXHRpZiAoIG9wdHMub3ZlcmZsb3cgKSB7XG5cdFx0c3R5bGUub3ZlcmZsb3cgPSBcImhpZGRlblwiO1xuXHRcdGFuaW0uYWx3YXlzKCBmdW5jdGlvbigpIHtcblx0XHRcdHN0eWxlLm92ZXJmbG93ID0gb3B0cy5vdmVyZmxvd1sgMCBdO1xuXHRcdFx0c3R5bGUub3ZlcmZsb3dYID0gb3B0cy5vdmVyZmxvd1sgMSBdO1xuXHRcdFx0c3R5bGUub3ZlcmZsb3dZID0gb3B0cy5vdmVyZmxvd1sgMiBdO1xuXHRcdH0gKTtcblx0fVxuXG5cdC8vIEltcGxlbWVudCBzaG93L2hpZGUgYW5pbWF0aW9uc1xuXHRwcm9wVHdlZW4gPSBmYWxzZTtcblx0Zm9yICggcHJvcCBpbiBvcmlnICkge1xuXG5cdFx0Ly8gR2VuZXJhbCBzaG93L2hpZGUgc2V0dXAgZm9yIHRoaXMgZWxlbWVudCBhbmltYXRpb25cblx0XHRpZiAoICFwcm9wVHdlZW4gKSB7XG5cdFx0XHRpZiAoIGRhdGFTaG93ICkge1xuXHRcdFx0XHRpZiAoIFwiaGlkZGVuXCIgaW4gZGF0YVNob3cgKSB7XG5cdFx0XHRcdFx0aGlkZGVuID0gZGF0YVNob3cuaGlkZGVuO1xuXHRcdFx0XHR9XG5cdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRkYXRhU2hvdyA9IGRhdGFQcml2LmFjY2VzcyggZWxlbSwgXCJmeHNob3dcIiwgeyBkaXNwbGF5OiByZXN0b3JlRGlzcGxheSB9ICk7XG5cdFx0XHR9XG5cblx0XHRcdC8vIFN0b3JlIGhpZGRlbi92aXNpYmxlIGZvciB0b2dnbGUgc28gYC5zdG9wKCkudG9nZ2xlKClgIFwicmV2ZXJzZXNcIlxuXHRcdFx0aWYgKCB0b2dnbGUgKSB7XG5cdFx0XHRcdGRhdGFTaG93LmhpZGRlbiA9ICFoaWRkZW47XG5cdFx0XHR9XG5cblx0XHRcdC8vIFNob3cgZWxlbWVudHMgYmVmb3JlIGFuaW1hdGluZyB0aGVtXG5cdFx0XHRpZiAoIGhpZGRlbiApIHtcblx0XHRcdFx0c2hvd0hpZGUoIFsgZWxlbSBdLCB0cnVlICk7XG5cdFx0XHR9XG5cblx0XHRcdC8qIGVzbGludC1kaXNhYmxlIG5vLWxvb3AtZnVuYyAqL1xuXG5cdFx0XHRhbmltLmRvbmUoIGZ1bmN0aW9uKCkge1xuXG5cdFx0XHQvKiBlc2xpbnQtZW5hYmxlIG5vLWxvb3AtZnVuYyAqL1xuXG5cdFx0XHRcdC8vIFRoZSBmaW5hbCBzdGVwIG9mIGEgXCJoaWRlXCIgYW5pbWF0aW9uIGlzIGFjdHVhbGx5IGhpZGluZyB0aGUgZWxlbWVudFxuXHRcdFx0XHRpZiAoICFoaWRkZW4gKSB7XG5cdFx0XHRcdFx0c2hvd0hpZGUoIFsgZWxlbSBdICk7XG5cdFx0XHRcdH1cblx0XHRcdFx0ZGF0YVByaXYucmVtb3ZlKCBlbGVtLCBcImZ4c2hvd1wiICk7XG5cdFx0XHRcdGZvciAoIHByb3AgaW4gb3JpZyApIHtcblx0XHRcdFx0XHRqUXVlcnkuc3R5bGUoIGVsZW0sIHByb3AsIG9yaWdbIHByb3AgXSApO1xuXHRcdFx0XHR9XG5cdFx0XHR9ICk7XG5cdFx0fVxuXG5cdFx0Ly8gUGVyLXByb3BlcnR5IHNldHVwXG5cdFx0cHJvcFR3ZWVuID0gY3JlYXRlVHdlZW4oIGhpZGRlbiA/IGRhdGFTaG93WyBwcm9wIF0gOiAwLCBwcm9wLCBhbmltICk7XG5cdFx0aWYgKCAhKCBwcm9wIGluIGRhdGFTaG93ICkgKSB7XG5cdFx0XHRkYXRhU2hvd1sgcHJvcCBdID0gcHJvcFR3ZWVuLnN0YXJ0O1xuXHRcdFx0aWYgKCBoaWRkZW4gKSB7XG5cdFx0XHRcdHByb3BUd2Vlbi5lbmQgPSBwcm9wVHdlZW4uc3RhcnQ7XG5cdFx0XHRcdHByb3BUd2Vlbi5zdGFydCA9IDA7XG5cdFx0XHR9XG5cdFx0fVxuXHR9XG59XG5cbmZ1bmN0aW9uIHByb3BGaWx0ZXIoIHByb3BzLCBzcGVjaWFsRWFzaW5nICkge1xuXHR2YXIgaW5kZXgsIG5hbWUsIGVhc2luZywgdmFsdWUsIGhvb2tzO1xuXG5cdC8vIGNhbWVsQ2FzZSwgc3BlY2lhbEVhc2luZyBhbmQgZXhwYW5kIGNzc0hvb2sgcGFzc1xuXHRmb3IgKCBpbmRleCBpbiBwcm9wcyApIHtcblx0XHRuYW1lID0gY2FtZWxDYXNlKCBpbmRleCApO1xuXHRcdGVhc2luZyA9IHNwZWNpYWxFYXNpbmdbIG5hbWUgXTtcblx0XHR2YWx1ZSA9IHByb3BzWyBpbmRleCBdO1xuXHRcdGlmICggQXJyYXkuaXNBcnJheSggdmFsdWUgKSApIHtcblx0XHRcdGVhc2luZyA9IHZhbHVlWyAxIF07XG5cdFx0XHR2YWx1ZSA9IHByb3BzWyBpbmRleCBdID0gdmFsdWVbIDAgXTtcblx0XHR9XG5cblx0XHRpZiAoIGluZGV4ICE9PSBuYW1lICkge1xuXHRcdFx0cHJvcHNbIG5hbWUgXSA9IHZhbHVlO1xuXHRcdFx0ZGVsZXRlIHByb3BzWyBpbmRleCBdO1xuXHRcdH1cblxuXHRcdGhvb2tzID0galF1ZXJ5LmNzc0hvb2tzWyBuYW1lIF07XG5cdFx0aWYgKCBob29rcyAmJiBcImV4cGFuZFwiIGluIGhvb2tzICkge1xuXHRcdFx0dmFsdWUgPSBob29rcy5leHBhbmQoIHZhbHVlICk7XG5cdFx0XHRkZWxldGUgcHJvcHNbIG5hbWUgXTtcblxuXHRcdFx0Ly8gTm90IHF1aXRlICQuZXh0ZW5kLCB0aGlzIHdvbid0IG92ZXJ3cml0ZSBleGlzdGluZyBrZXlzLlxuXHRcdFx0Ly8gUmV1c2luZyAnaW5kZXgnIGJlY2F1c2Ugd2UgaGF2ZSB0aGUgY29ycmVjdCBcIm5hbWVcIlxuXHRcdFx0Zm9yICggaW5kZXggaW4gdmFsdWUgKSB7XG5cdFx0XHRcdGlmICggISggaW5kZXggaW4gcHJvcHMgKSApIHtcblx0XHRcdFx0XHRwcm9wc1sgaW5kZXggXSA9IHZhbHVlWyBpbmRleCBdO1xuXHRcdFx0XHRcdHNwZWNpYWxFYXNpbmdbIGluZGV4IF0gPSBlYXNpbmc7XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9IGVsc2Uge1xuXHRcdFx0c3BlY2lhbEVhc2luZ1sgbmFtZSBdID0gZWFzaW5nO1xuXHRcdH1cblx0fVxufVxuXG5mdW5jdGlvbiBBbmltYXRpb24oIGVsZW0sIHByb3BlcnRpZXMsIG9wdGlvbnMgKSB7XG5cdHZhciByZXN1bHQsXG5cdFx0c3RvcHBlZCxcblx0XHRpbmRleCA9IDAsXG5cdFx0bGVuZ3RoID0gQW5pbWF0aW9uLnByZWZpbHRlcnMubGVuZ3RoLFxuXHRcdGRlZmVycmVkID0galF1ZXJ5LkRlZmVycmVkKCkuYWx3YXlzKCBmdW5jdGlvbigpIHtcblxuXHRcdFx0Ly8gRG9uJ3QgbWF0Y2ggZWxlbSBpbiB0aGUgOmFuaW1hdGVkIHNlbGVjdG9yXG5cdFx0XHRkZWxldGUgdGljay5lbGVtO1xuXHRcdH0gKSxcblx0XHR0aWNrID0gZnVuY3Rpb24oKSB7XG5cdFx0XHRpZiAoIHN0b3BwZWQgKSB7XG5cdFx0XHRcdHJldHVybiBmYWxzZTtcblx0XHRcdH1cblx0XHRcdHZhciBjdXJyZW50VGltZSA9IGZ4Tm93IHx8IGNyZWF0ZUZ4Tm93KCksXG5cdFx0XHRcdHJlbWFpbmluZyA9IE1hdGgubWF4KCAwLCBhbmltYXRpb24uc3RhcnRUaW1lICsgYW5pbWF0aW9uLmR1cmF0aW9uIC0gY3VycmVudFRpbWUgKSxcblxuXHRcdFx0XHQvLyBTdXBwb3J0OiBBbmRyb2lkIDIuMyBvbmx5XG5cdFx0XHRcdC8vIEFyY2hhaWMgY3Jhc2ggYnVnIHdvbid0IGFsbG93IHVzIHRvIHVzZSBgMSAtICggMC41IHx8IDAgKWAgKCMxMjQ5Nylcblx0XHRcdFx0dGVtcCA9IHJlbWFpbmluZyAvIGFuaW1hdGlvbi5kdXJhdGlvbiB8fCAwLFxuXHRcdFx0XHRwZXJjZW50ID0gMSAtIHRlbXAsXG5cdFx0XHRcdGluZGV4ID0gMCxcblx0XHRcdFx0bGVuZ3RoID0gYW5pbWF0aW9uLnR3ZWVucy5sZW5ndGg7XG5cblx0XHRcdGZvciAoIDsgaW5kZXggPCBsZW5ndGg7IGluZGV4KysgKSB7XG5cdFx0XHRcdGFuaW1hdGlvbi50d2VlbnNbIGluZGV4IF0ucnVuKCBwZXJjZW50ICk7XG5cdFx0XHR9XG5cblx0XHRcdGRlZmVycmVkLm5vdGlmeVdpdGgoIGVsZW0sIFsgYW5pbWF0aW9uLCBwZXJjZW50LCByZW1haW5pbmcgXSApO1xuXG5cdFx0XHQvLyBJZiB0aGVyZSdzIG1vcmUgdG8gZG8sIHlpZWxkXG5cdFx0XHRpZiAoIHBlcmNlbnQgPCAxICYmIGxlbmd0aCApIHtcblx0XHRcdFx0cmV0dXJuIHJlbWFpbmluZztcblx0XHRcdH1cblxuXHRcdFx0Ly8gSWYgdGhpcyB3YXMgYW4gZW1wdHkgYW5pbWF0aW9uLCBzeW50aGVzaXplIGEgZmluYWwgcHJvZ3Jlc3Mgbm90aWZpY2F0aW9uXG5cdFx0XHRpZiAoICFsZW5ndGggKSB7XG5cdFx0XHRcdGRlZmVycmVkLm5vdGlmeVdpdGgoIGVsZW0sIFsgYW5pbWF0aW9uLCAxLCAwIF0gKTtcblx0XHRcdH1cblxuXHRcdFx0Ly8gUmVzb2x2ZSB0aGUgYW5pbWF0aW9uIGFuZCByZXBvcnQgaXRzIGNvbmNsdXNpb25cblx0XHRcdGRlZmVycmVkLnJlc29sdmVXaXRoKCBlbGVtLCBbIGFuaW1hdGlvbiBdICk7XG5cdFx0XHRyZXR1cm4gZmFsc2U7XG5cdFx0fSxcblx0XHRhbmltYXRpb24gPSBkZWZlcnJlZC5wcm9taXNlKCB7XG5cdFx0XHRlbGVtOiBlbGVtLFxuXHRcdFx0cHJvcHM6IGpRdWVyeS5leHRlbmQoIHt9LCBwcm9wZXJ0aWVzICksXG5cdFx0XHRvcHRzOiBqUXVlcnkuZXh0ZW5kKCB0cnVlLCB7XG5cdFx0XHRcdHNwZWNpYWxFYXNpbmc6IHt9LFxuXHRcdFx0XHRlYXNpbmc6IGpRdWVyeS5lYXNpbmcuX2RlZmF1bHRcblx0XHRcdH0sIG9wdGlvbnMgKSxcblx0XHRcdG9yaWdpbmFsUHJvcGVydGllczogcHJvcGVydGllcyxcblx0XHRcdG9yaWdpbmFsT3B0aW9uczogb3B0aW9ucyxcblx0XHRcdHN0YXJ0VGltZTogZnhOb3cgfHwgY3JlYXRlRnhOb3coKSxcblx0XHRcdGR1cmF0aW9uOiBvcHRpb25zLmR1cmF0aW9uLFxuXHRcdFx0dHdlZW5zOiBbXSxcblx0XHRcdGNyZWF0ZVR3ZWVuOiBmdW5jdGlvbiggcHJvcCwgZW5kICkge1xuXHRcdFx0XHR2YXIgdHdlZW4gPSBqUXVlcnkuVHdlZW4oIGVsZW0sIGFuaW1hdGlvbi5vcHRzLCBwcm9wLCBlbmQsXG5cdFx0XHRcdFx0XHRhbmltYXRpb24ub3B0cy5zcGVjaWFsRWFzaW5nWyBwcm9wIF0gfHwgYW5pbWF0aW9uLm9wdHMuZWFzaW5nICk7XG5cdFx0XHRcdGFuaW1hdGlvbi50d2VlbnMucHVzaCggdHdlZW4gKTtcblx0XHRcdFx0cmV0dXJuIHR3ZWVuO1xuXHRcdFx0fSxcblx0XHRcdHN0b3A6IGZ1bmN0aW9uKCBnb3RvRW5kICkge1xuXHRcdFx0XHR2YXIgaW5kZXggPSAwLFxuXG5cdFx0XHRcdFx0Ly8gSWYgd2UgYXJlIGdvaW5nIHRvIHRoZSBlbmQsIHdlIHdhbnQgdG8gcnVuIGFsbCB0aGUgdHdlZW5zXG5cdFx0XHRcdFx0Ly8gb3RoZXJ3aXNlIHdlIHNraXAgdGhpcyBwYXJ0XG5cdFx0XHRcdFx0bGVuZ3RoID0gZ290b0VuZCA/IGFuaW1hdGlvbi50d2VlbnMubGVuZ3RoIDogMDtcblx0XHRcdFx0aWYgKCBzdG9wcGVkICkge1xuXHRcdFx0XHRcdHJldHVybiB0aGlzO1xuXHRcdFx0XHR9XG5cdFx0XHRcdHN0b3BwZWQgPSB0cnVlO1xuXHRcdFx0XHRmb3IgKCA7IGluZGV4IDwgbGVuZ3RoOyBpbmRleCsrICkge1xuXHRcdFx0XHRcdGFuaW1hdGlvbi50d2VlbnNbIGluZGV4IF0ucnVuKCAxICk7XG5cdFx0XHRcdH1cblxuXHRcdFx0XHQvLyBSZXNvbHZlIHdoZW4gd2UgcGxheWVkIHRoZSBsYXN0IGZyYW1lOyBvdGhlcndpc2UsIHJlamVjdFxuXHRcdFx0XHRpZiAoIGdvdG9FbmQgKSB7XG5cdFx0XHRcdFx0ZGVmZXJyZWQubm90aWZ5V2l0aCggZWxlbSwgWyBhbmltYXRpb24sIDEsIDAgXSApO1xuXHRcdFx0XHRcdGRlZmVycmVkLnJlc29sdmVXaXRoKCBlbGVtLCBbIGFuaW1hdGlvbiwgZ290b0VuZCBdICk7XG5cdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0ZGVmZXJyZWQucmVqZWN0V2l0aCggZWxlbSwgWyBhbmltYXRpb24sIGdvdG9FbmQgXSApO1xuXHRcdFx0XHR9XG5cdFx0XHRcdHJldHVybiB0aGlzO1xuXHRcdFx0fVxuXHRcdH0gKSxcblx0XHRwcm9wcyA9IGFuaW1hdGlvbi5wcm9wcztcblxuXHRwcm9wRmlsdGVyKCBwcm9wcywgYW5pbWF0aW9uLm9wdHMuc3BlY2lhbEVhc2luZyApO1xuXG5cdGZvciAoIDsgaW5kZXggPCBsZW5ndGg7IGluZGV4KysgKSB7XG5cdFx0cmVzdWx0ID0gQW5pbWF0aW9uLnByZWZpbHRlcnNbIGluZGV4IF0uY2FsbCggYW5pbWF0aW9uLCBlbGVtLCBwcm9wcywgYW5pbWF0aW9uLm9wdHMgKTtcblx0XHRpZiAoIHJlc3VsdCApIHtcblx0XHRcdGlmICggaXNGdW5jdGlvbiggcmVzdWx0LnN0b3AgKSApIHtcblx0XHRcdFx0alF1ZXJ5Ll9xdWV1ZUhvb2tzKCBhbmltYXRpb24uZWxlbSwgYW5pbWF0aW9uLm9wdHMucXVldWUgKS5zdG9wID1cblx0XHRcdFx0XHRyZXN1bHQuc3RvcC5iaW5kKCByZXN1bHQgKTtcblx0XHRcdH1cblx0XHRcdHJldHVybiByZXN1bHQ7XG5cdFx0fVxuXHR9XG5cblx0alF1ZXJ5Lm1hcCggcHJvcHMsIGNyZWF0ZVR3ZWVuLCBhbmltYXRpb24gKTtcblxuXHRpZiAoIGlzRnVuY3Rpb24oIGFuaW1hdGlvbi5vcHRzLnN0YXJ0ICkgKSB7XG5cdFx0YW5pbWF0aW9uLm9wdHMuc3RhcnQuY2FsbCggZWxlbSwgYW5pbWF0aW9uICk7XG5cdH1cblxuXHQvLyBBdHRhY2ggY2FsbGJhY2tzIGZyb20gb3B0aW9uc1xuXHRhbmltYXRpb25cblx0XHQucHJvZ3Jlc3MoIGFuaW1hdGlvbi5vcHRzLnByb2dyZXNzIClcblx0XHQuZG9uZSggYW5pbWF0aW9uLm9wdHMuZG9uZSwgYW5pbWF0aW9uLm9wdHMuY29tcGxldGUgKVxuXHRcdC5mYWlsKCBhbmltYXRpb24ub3B0cy5mYWlsIClcblx0XHQuYWx3YXlzKCBhbmltYXRpb24ub3B0cy5hbHdheXMgKTtcblxuXHRqUXVlcnkuZngudGltZXIoXG5cdFx0alF1ZXJ5LmV4dGVuZCggdGljaywge1xuXHRcdFx0ZWxlbTogZWxlbSxcblx0XHRcdGFuaW06IGFuaW1hdGlvbixcblx0XHRcdHF1ZXVlOiBhbmltYXRpb24ub3B0cy5xdWV1ZVxuXHRcdH0gKVxuXHQpO1xuXG5cdHJldHVybiBhbmltYXRpb247XG59XG5cbmpRdWVyeS5BbmltYXRpb24gPSBqUXVlcnkuZXh0ZW5kKCBBbmltYXRpb24sIHtcblxuXHR0d2VlbmVyczoge1xuXHRcdFwiKlwiOiBbIGZ1bmN0aW9uKCBwcm9wLCB2YWx1ZSApIHtcblx0XHRcdHZhciB0d2VlbiA9IHRoaXMuY3JlYXRlVHdlZW4oIHByb3AsIHZhbHVlICk7XG5cdFx0XHRhZGp1c3RDU1MoIHR3ZWVuLmVsZW0sIHByb3AsIHJjc3NOdW0uZXhlYyggdmFsdWUgKSwgdHdlZW4gKTtcblx0XHRcdHJldHVybiB0d2Vlbjtcblx0XHR9IF1cblx0fSxcblxuXHR0d2VlbmVyOiBmdW5jdGlvbiggcHJvcHMsIGNhbGxiYWNrICkge1xuXHRcdGlmICggaXNGdW5jdGlvbiggcHJvcHMgKSApIHtcblx0XHRcdGNhbGxiYWNrID0gcHJvcHM7XG5cdFx0XHRwcm9wcyA9IFsgXCIqXCIgXTtcblx0XHR9IGVsc2Uge1xuXHRcdFx0cHJvcHMgPSBwcm9wcy5tYXRjaCggcm5vdGh0bWx3aGl0ZSApO1xuXHRcdH1cblxuXHRcdHZhciBwcm9wLFxuXHRcdFx0aW5kZXggPSAwLFxuXHRcdFx0bGVuZ3RoID0gcHJvcHMubGVuZ3RoO1xuXG5cdFx0Zm9yICggOyBpbmRleCA8IGxlbmd0aDsgaW5kZXgrKyApIHtcblx0XHRcdHByb3AgPSBwcm9wc1sgaW5kZXggXTtcblx0XHRcdEFuaW1hdGlvbi50d2VlbmVyc1sgcHJvcCBdID0gQW5pbWF0aW9uLnR3ZWVuZXJzWyBwcm9wIF0gfHwgW107XG5cdFx0XHRBbmltYXRpb24udHdlZW5lcnNbIHByb3AgXS51bnNoaWZ0KCBjYWxsYmFjayApO1xuXHRcdH1cblx0fSxcblxuXHRwcmVmaWx0ZXJzOiBbIGRlZmF1bHRQcmVmaWx0ZXIgXSxcblxuXHRwcmVmaWx0ZXI6IGZ1bmN0aW9uKCBjYWxsYmFjaywgcHJlcGVuZCApIHtcblx0XHRpZiAoIHByZXBlbmQgKSB7XG5cdFx0XHRBbmltYXRpb24ucHJlZmlsdGVycy51bnNoaWZ0KCBjYWxsYmFjayApO1xuXHRcdH0gZWxzZSB7XG5cdFx0XHRBbmltYXRpb24ucHJlZmlsdGVycy5wdXNoKCBjYWxsYmFjayApO1xuXHRcdH1cblx0fVxufSApO1xuXG5qUXVlcnkuc3BlZWQgPSBmdW5jdGlvbiggc3BlZWQsIGVhc2luZywgZm4gKSB7XG5cdHZhciBvcHQgPSBzcGVlZCAmJiB0eXBlb2Ygc3BlZWQgPT09IFwib2JqZWN0XCIgPyBqUXVlcnkuZXh0ZW5kKCB7fSwgc3BlZWQgKSA6IHtcblx0XHRjb21wbGV0ZTogZm4gfHwgIWZuICYmIGVhc2luZyB8fFxuXHRcdFx0aXNGdW5jdGlvbiggc3BlZWQgKSAmJiBzcGVlZCxcblx0XHRkdXJhdGlvbjogc3BlZWQsXG5cdFx0ZWFzaW5nOiBmbiAmJiBlYXNpbmcgfHwgZWFzaW5nICYmICFpc0Z1bmN0aW9uKCBlYXNpbmcgKSAmJiBlYXNpbmdcblx0fTtcblxuXHQvLyBHbyB0byB0aGUgZW5kIHN0YXRlIGlmIGZ4IGFyZSBvZmZcblx0aWYgKCBqUXVlcnkuZngub2ZmICkge1xuXHRcdG9wdC5kdXJhdGlvbiA9IDA7XG5cblx0fSBlbHNlIHtcblx0XHRpZiAoIHR5cGVvZiBvcHQuZHVyYXRpb24gIT09IFwibnVtYmVyXCIgKSB7XG5cdFx0XHRpZiAoIG9wdC5kdXJhdGlvbiBpbiBqUXVlcnkuZnguc3BlZWRzICkge1xuXHRcdFx0XHRvcHQuZHVyYXRpb24gPSBqUXVlcnkuZnguc3BlZWRzWyBvcHQuZHVyYXRpb24gXTtcblxuXHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0b3B0LmR1cmF0aW9uID0galF1ZXJ5LmZ4LnNwZWVkcy5fZGVmYXVsdDtcblx0XHRcdH1cblx0XHR9XG5cdH1cblxuXHQvLyBOb3JtYWxpemUgb3B0LnF1ZXVlIC0gdHJ1ZS91bmRlZmluZWQvbnVsbCAtPiBcImZ4XCJcblx0aWYgKCBvcHQucXVldWUgPT0gbnVsbCB8fCBvcHQucXVldWUgPT09IHRydWUgKSB7XG5cdFx0b3B0LnF1ZXVlID0gXCJmeFwiO1xuXHR9XG5cblx0Ly8gUXVldWVpbmdcblx0b3B0Lm9sZCA9IG9wdC5jb21wbGV0ZTtcblxuXHRvcHQuY29tcGxldGUgPSBmdW5jdGlvbigpIHtcblx0XHRpZiAoIGlzRnVuY3Rpb24oIG9wdC5vbGQgKSApIHtcblx0XHRcdG9wdC5vbGQuY2FsbCggdGhpcyApO1xuXHRcdH1cblxuXHRcdGlmICggb3B0LnF1ZXVlICkge1xuXHRcdFx0alF1ZXJ5LmRlcXVldWUoIHRoaXMsIG9wdC5xdWV1ZSApO1xuXHRcdH1cblx0fTtcblxuXHRyZXR1cm4gb3B0O1xufTtcblxualF1ZXJ5LmZuLmV4dGVuZCgge1xuXHRmYWRlVG86IGZ1bmN0aW9uKCBzcGVlZCwgdG8sIGVhc2luZywgY2FsbGJhY2sgKSB7XG5cblx0XHQvLyBTaG93IGFueSBoaWRkZW4gZWxlbWVudHMgYWZ0ZXIgc2V0dGluZyBvcGFjaXR5IHRvIDBcblx0XHRyZXR1cm4gdGhpcy5maWx0ZXIoIGlzSGlkZGVuV2l0aGluVHJlZSApLmNzcyggXCJvcGFjaXR5XCIsIDAgKS5zaG93KClcblxuXHRcdFx0Ly8gQW5pbWF0ZSB0byB0aGUgdmFsdWUgc3BlY2lmaWVkXG5cdFx0XHQuZW5kKCkuYW5pbWF0ZSggeyBvcGFjaXR5OiB0byB9LCBzcGVlZCwgZWFzaW5nLCBjYWxsYmFjayApO1xuXHR9LFxuXHRhbmltYXRlOiBmdW5jdGlvbiggcHJvcCwgc3BlZWQsIGVhc2luZywgY2FsbGJhY2sgKSB7XG5cdFx0dmFyIGVtcHR5ID0galF1ZXJ5LmlzRW1wdHlPYmplY3QoIHByb3AgKSxcblx0XHRcdG9wdGFsbCA9IGpRdWVyeS5zcGVlZCggc3BlZWQsIGVhc2luZywgY2FsbGJhY2sgKSxcblx0XHRcdGRvQW5pbWF0aW9uID0gZnVuY3Rpb24oKSB7XG5cblx0XHRcdFx0Ly8gT3BlcmF0ZSBvbiBhIGNvcHkgb2YgcHJvcCBzbyBwZXItcHJvcGVydHkgZWFzaW5nIHdvbid0IGJlIGxvc3Rcblx0XHRcdFx0dmFyIGFuaW0gPSBBbmltYXRpb24oIHRoaXMsIGpRdWVyeS5leHRlbmQoIHt9LCBwcm9wICksIG9wdGFsbCApO1xuXG5cdFx0XHRcdC8vIEVtcHR5IGFuaW1hdGlvbnMsIG9yIGZpbmlzaGluZyByZXNvbHZlcyBpbW1lZGlhdGVseVxuXHRcdFx0XHRpZiAoIGVtcHR5IHx8IGRhdGFQcml2LmdldCggdGhpcywgXCJmaW5pc2hcIiApICkge1xuXHRcdFx0XHRcdGFuaW0uc3RvcCggdHJ1ZSApO1xuXHRcdFx0XHR9XG5cdFx0XHR9O1xuXHRcdFx0ZG9BbmltYXRpb24uZmluaXNoID0gZG9BbmltYXRpb247XG5cblx0XHRyZXR1cm4gZW1wdHkgfHwgb3B0YWxsLnF1ZXVlID09PSBmYWxzZSA/XG5cdFx0XHR0aGlzLmVhY2goIGRvQW5pbWF0aW9uICkgOlxuXHRcdFx0dGhpcy5xdWV1ZSggb3B0YWxsLnF1ZXVlLCBkb0FuaW1hdGlvbiApO1xuXHR9LFxuXHRzdG9wOiBmdW5jdGlvbiggdHlwZSwgY2xlYXJRdWV1ZSwgZ290b0VuZCApIHtcblx0XHR2YXIgc3RvcFF1ZXVlID0gZnVuY3Rpb24oIGhvb2tzICkge1xuXHRcdFx0dmFyIHN0b3AgPSBob29rcy5zdG9wO1xuXHRcdFx0ZGVsZXRlIGhvb2tzLnN0b3A7XG5cdFx0XHRzdG9wKCBnb3RvRW5kICk7XG5cdFx0fTtcblxuXHRcdGlmICggdHlwZW9mIHR5cGUgIT09IFwic3RyaW5nXCIgKSB7XG5cdFx0XHRnb3RvRW5kID0gY2xlYXJRdWV1ZTtcblx0XHRcdGNsZWFyUXVldWUgPSB0eXBlO1xuXHRcdFx0dHlwZSA9IHVuZGVmaW5lZDtcblx0XHR9XG5cdFx0aWYgKCBjbGVhclF1ZXVlICkge1xuXHRcdFx0dGhpcy5xdWV1ZSggdHlwZSB8fCBcImZ4XCIsIFtdICk7XG5cdFx0fVxuXG5cdFx0cmV0dXJuIHRoaXMuZWFjaCggZnVuY3Rpb24oKSB7XG5cdFx0XHR2YXIgZGVxdWV1ZSA9IHRydWUsXG5cdFx0XHRcdGluZGV4ID0gdHlwZSAhPSBudWxsICYmIHR5cGUgKyBcInF1ZXVlSG9va3NcIixcblx0XHRcdFx0dGltZXJzID0galF1ZXJ5LnRpbWVycyxcblx0XHRcdFx0ZGF0YSA9IGRhdGFQcml2LmdldCggdGhpcyApO1xuXG5cdFx0XHRpZiAoIGluZGV4ICkge1xuXHRcdFx0XHRpZiAoIGRhdGFbIGluZGV4IF0gJiYgZGF0YVsgaW5kZXggXS5zdG9wICkge1xuXHRcdFx0XHRcdHN0b3BRdWV1ZSggZGF0YVsgaW5kZXggXSApO1xuXHRcdFx0XHR9XG5cdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRmb3IgKCBpbmRleCBpbiBkYXRhICkge1xuXHRcdFx0XHRcdGlmICggZGF0YVsgaW5kZXggXSAmJiBkYXRhWyBpbmRleCBdLnN0b3AgJiYgcnJ1bi50ZXN0KCBpbmRleCApICkge1xuXHRcdFx0XHRcdFx0c3RvcFF1ZXVlKCBkYXRhWyBpbmRleCBdICk7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHR9XG5cblx0XHRcdGZvciAoIGluZGV4ID0gdGltZXJzLmxlbmd0aDsgaW5kZXgtLTsgKSB7XG5cdFx0XHRcdGlmICggdGltZXJzWyBpbmRleCBdLmVsZW0gPT09IHRoaXMgJiZcblx0XHRcdFx0XHQoIHR5cGUgPT0gbnVsbCB8fCB0aW1lcnNbIGluZGV4IF0ucXVldWUgPT09IHR5cGUgKSApIHtcblxuXHRcdFx0XHRcdHRpbWVyc1sgaW5kZXggXS5hbmltLnN0b3AoIGdvdG9FbmQgKTtcblx0XHRcdFx0XHRkZXF1ZXVlID0gZmFsc2U7XG5cdFx0XHRcdFx0dGltZXJzLnNwbGljZSggaW5kZXgsIDEgKTtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXG5cdFx0XHQvLyBTdGFydCB0aGUgbmV4dCBpbiB0aGUgcXVldWUgaWYgdGhlIGxhc3Qgc3RlcCB3YXNuJ3QgZm9yY2VkLlxuXHRcdFx0Ly8gVGltZXJzIGN1cnJlbnRseSB3aWxsIGNhbGwgdGhlaXIgY29tcGxldGUgY2FsbGJhY2tzLCB3aGljaFxuXHRcdFx0Ly8gd2lsbCBkZXF1ZXVlIGJ1dCBvbmx5IGlmIHRoZXkgd2VyZSBnb3RvRW5kLlxuXHRcdFx0aWYgKCBkZXF1ZXVlIHx8ICFnb3RvRW5kICkge1xuXHRcdFx0XHRqUXVlcnkuZGVxdWV1ZSggdGhpcywgdHlwZSApO1xuXHRcdFx0fVxuXHRcdH0gKTtcblx0fSxcblx0ZmluaXNoOiBmdW5jdGlvbiggdHlwZSApIHtcblx0XHRpZiAoIHR5cGUgIT09IGZhbHNlICkge1xuXHRcdFx0dHlwZSA9IHR5cGUgfHwgXCJmeFwiO1xuXHRcdH1cblx0XHRyZXR1cm4gdGhpcy5lYWNoKCBmdW5jdGlvbigpIHtcblx0XHRcdHZhciBpbmRleCxcblx0XHRcdFx0ZGF0YSA9IGRhdGFQcml2LmdldCggdGhpcyApLFxuXHRcdFx0XHRxdWV1ZSA9IGRhdGFbIHR5cGUgKyBcInF1ZXVlXCIgXSxcblx0XHRcdFx0aG9va3MgPSBkYXRhWyB0eXBlICsgXCJxdWV1ZUhvb2tzXCIgXSxcblx0XHRcdFx0dGltZXJzID0galF1ZXJ5LnRpbWVycyxcblx0XHRcdFx0bGVuZ3RoID0gcXVldWUgPyBxdWV1ZS5sZW5ndGggOiAwO1xuXG5cdFx0XHQvLyBFbmFibGUgZmluaXNoaW5nIGZsYWcgb24gcHJpdmF0ZSBkYXRhXG5cdFx0XHRkYXRhLmZpbmlzaCA9IHRydWU7XG5cblx0XHRcdC8vIEVtcHR5IHRoZSBxdWV1ZSBmaXJzdFxuXHRcdFx0alF1ZXJ5LnF1ZXVlKCB0aGlzLCB0eXBlLCBbXSApO1xuXG5cdFx0XHRpZiAoIGhvb2tzICYmIGhvb2tzLnN0b3AgKSB7XG5cdFx0XHRcdGhvb2tzLnN0b3AuY2FsbCggdGhpcywgdHJ1ZSApO1xuXHRcdFx0fVxuXG5cdFx0XHQvLyBMb29rIGZvciBhbnkgYWN0aXZlIGFuaW1hdGlvbnMsIGFuZCBmaW5pc2ggdGhlbVxuXHRcdFx0Zm9yICggaW5kZXggPSB0aW1lcnMubGVuZ3RoOyBpbmRleC0tOyApIHtcblx0XHRcdFx0aWYgKCB0aW1lcnNbIGluZGV4IF0uZWxlbSA9PT0gdGhpcyAmJiB0aW1lcnNbIGluZGV4IF0ucXVldWUgPT09IHR5cGUgKSB7XG5cdFx0XHRcdFx0dGltZXJzWyBpbmRleCBdLmFuaW0uc3RvcCggdHJ1ZSApO1xuXHRcdFx0XHRcdHRpbWVycy5zcGxpY2UoIGluZGV4LCAxICk7XG5cdFx0XHRcdH1cblx0XHRcdH1cblxuXHRcdFx0Ly8gTG9vayBmb3IgYW55IGFuaW1hdGlvbnMgaW4gdGhlIG9sZCBxdWV1ZSBhbmQgZmluaXNoIHRoZW1cblx0XHRcdGZvciAoIGluZGV4ID0gMDsgaW5kZXggPCBsZW5ndGg7IGluZGV4KysgKSB7XG5cdFx0XHRcdGlmICggcXVldWVbIGluZGV4IF0gJiYgcXVldWVbIGluZGV4IF0uZmluaXNoICkge1xuXHRcdFx0XHRcdHF1ZXVlWyBpbmRleCBdLmZpbmlzaC5jYWxsKCB0aGlzICk7XG5cdFx0XHRcdH1cblx0XHRcdH1cblxuXHRcdFx0Ly8gVHVybiBvZmYgZmluaXNoaW5nIGZsYWdcblx0XHRcdGRlbGV0ZSBkYXRhLmZpbmlzaDtcblx0XHR9ICk7XG5cdH1cbn0gKTtcblxualF1ZXJ5LmVhY2goIFsgXCJ0b2dnbGVcIiwgXCJzaG93XCIsIFwiaGlkZVwiIF0sIGZ1bmN0aW9uKCBfaSwgbmFtZSApIHtcblx0dmFyIGNzc0ZuID0galF1ZXJ5LmZuWyBuYW1lIF07XG5cdGpRdWVyeS5mblsgbmFtZSBdID0gZnVuY3Rpb24oIHNwZWVkLCBlYXNpbmcsIGNhbGxiYWNrICkge1xuXHRcdHJldHVybiBzcGVlZCA9PSBudWxsIHx8IHR5cGVvZiBzcGVlZCA9PT0gXCJib29sZWFuXCIgP1xuXHRcdFx0Y3NzRm4uYXBwbHkoIHRoaXMsIGFyZ3VtZW50cyApIDpcblx0XHRcdHRoaXMuYW5pbWF0ZSggZ2VuRngoIG5hbWUsIHRydWUgKSwgc3BlZWQsIGVhc2luZywgY2FsbGJhY2sgKTtcblx0fTtcbn0gKTtcblxuLy8gR2VuZXJhdGUgc2hvcnRjdXRzIGZvciBjdXN0b20gYW5pbWF0aW9uc1xualF1ZXJ5LmVhY2goIHtcblx0c2xpZGVEb3duOiBnZW5GeCggXCJzaG93XCIgKSxcblx0c2xpZGVVcDogZ2VuRngoIFwiaGlkZVwiICksXG5cdHNsaWRlVG9nZ2xlOiBnZW5GeCggXCJ0b2dnbGVcIiApLFxuXHRmYWRlSW46IHsgb3BhY2l0eTogXCJzaG93XCIgfSxcblx0ZmFkZU91dDogeyBvcGFjaXR5OiBcImhpZGVcIiB9LFxuXHRmYWRlVG9nZ2xlOiB7IG9wYWNpdHk6IFwidG9nZ2xlXCIgfVxufSwgZnVuY3Rpb24oIG5hbWUsIHByb3BzICkge1xuXHRqUXVlcnkuZm5bIG5hbWUgXSA9IGZ1bmN0aW9uKCBzcGVlZCwgZWFzaW5nLCBjYWxsYmFjayApIHtcblx0XHRyZXR1cm4gdGhpcy5hbmltYXRlKCBwcm9wcywgc3BlZWQsIGVhc2luZywgY2FsbGJhY2sgKTtcblx0fTtcbn0gKTtcblxualF1ZXJ5LnRpbWVycyA9IFtdO1xualF1ZXJ5LmZ4LnRpY2sgPSBmdW5jdGlvbigpIHtcblx0dmFyIHRpbWVyLFxuXHRcdGkgPSAwLFxuXHRcdHRpbWVycyA9IGpRdWVyeS50aW1lcnM7XG5cblx0ZnhOb3cgPSBEYXRlLm5vdygpO1xuXG5cdGZvciAoIDsgaSA8IHRpbWVycy5sZW5ndGg7IGkrKyApIHtcblx0XHR0aW1lciA9IHRpbWVyc1sgaSBdO1xuXG5cdFx0Ly8gUnVuIHRoZSB0aW1lciBhbmQgc2FmZWx5IHJlbW92ZSBpdCB3aGVuIGRvbmUgKGFsbG93aW5nIGZvciBleHRlcm5hbCByZW1vdmFsKVxuXHRcdGlmICggIXRpbWVyKCkgJiYgdGltZXJzWyBpIF0gPT09IHRpbWVyICkge1xuXHRcdFx0dGltZXJzLnNwbGljZSggaS0tLCAxICk7XG5cdFx0fVxuXHR9XG5cblx0aWYgKCAhdGltZXJzLmxlbmd0aCApIHtcblx0XHRqUXVlcnkuZnguc3RvcCgpO1xuXHR9XG5cdGZ4Tm93ID0gdW5kZWZpbmVkO1xufTtcblxualF1ZXJ5LmZ4LnRpbWVyID0gZnVuY3Rpb24oIHRpbWVyICkge1xuXHRqUXVlcnkudGltZXJzLnB1c2goIHRpbWVyICk7XG5cdGpRdWVyeS5meC5zdGFydCgpO1xufTtcblxualF1ZXJ5LmZ4LmludGVydmFsID0gMTM7XG5qUXVlcnkuZnguc3RhcnQgPSBmdW5jdGlvbigpIHtcblx0aWYgKCBpblByb2dyZXNzICkge1xuXHRcdHJldHVybjtcblx0fVxuXG5cdGluUHJvZ3Jlc3MgPSB0cnVlO1xuXHRzY2hlZHVsZSgpO1xufTtcblxualF1ZXJ5LmZ4LnN0b3AgPSBmdW5jdGlvbigpIHtcblx0aW5Qcm9ncmVzcyA9IG51bGw7XG59O1xuXG5qUXVlcnkuZnguc3BlZWRzID0ge1xuXHRzbG93OiA2MDAsXG5cdGZhc3Q6IDIwMCxcblxuXHQvLyBEZWZhdWx0IHNwZWVkXG5cdF9kZWZhdWx0OiA0MDBcbn07XG5cblxuLy8gQmFzZWQgb2ZmIG9mIHRoZSBwbHVnaW4gYnkgQ2xpbnQgSGVsZmVycywgd2l0aCBwZXJtaXNzaW9uLlxuLy8gaHR0cHM6Ly93ZWIuYXJjaGl2ZS5vcmcvd2ViLzIwMTAwMzI0MDE0NzQ3L2h0dHA6Ly9ibGluZHNpZ25hbHMuY29tL2luZGV4LnBocC8yMDA5LzA3L2pxdWVyeS1kZWxheS9cbmpRdWVyeS5mbi5kZWxheSA9IGZ1bmN0aW9uKCB0aW1lLCB0eXBlICkge1xuXHR0aW1lID0galF1ZXJ5LmZ4ID8galF1ZXJ5LmZ4LnNwZWVkc1sgdGltZSBdIHx8IHRpbWUgOiB0aW1lO1xuXHR0eXBlID0gdHlwZSB8fCBcImZ4XCI7XG5cblx0cmV0dXJuIHRoaXMucXVldWUoIHR5cGUsIGZ1bmN0aW9uKCBuZXh0LCBob29rcyApIHtcblx0XHR2YXIgdGltZW91dCA9IHdpbmRvdy5zZXRUaW1lb3V0KCBuZXh0LCB0aW1lICk7XG5cdFx0aG9va3Muc3RvcCA9IGZ1bmN0aW9uKCkge1xuXHRcdFx0d2luZG93LmNsZWFyVGltZW91dCggdGltZW91dCApO1xuXHRcdH07XG5cdH0gKTtcbn07XG5cblxuKCBmdW5jdGlvbigpIHtcblx0dmFyIGlucHV0ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCggXCJpbnB1dFwiICksXG5cdFx0c2VsZWN0ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCggXCJzZWxlY3RcIiApLFxuXHRcdG9wdCA9IHNlbGVjdC5hcHBlbmRDaGlsZCggZG9jdW1lbnQuY3JlYXRlRWxlbWVudCggXCJvcHRpb25cIiApICk7XG5cblx0aW5wdXQudHlwZSA9IFwiY2hlY2tib3hcIjtcblxuXHQvLyBTdXBwb3J0OiBBbmRyb2lkIDw9NC4zIG9ubHlcblx0Ly8gRGVmYXVsdCB2YWx1ZSBmb3IgYSBjaGVja2JveCBzaG91bGQgYmUgXCJvblwiXG5cdHN1cHBvcnQuY2hlY2tPbiA9IGlucHV0LnZhbHVlICE9PSBcIlwiO1xuXG5cdC8vIFN1cHBvcnQ6IElFIDw9MTEgb25seVxuXHQvLyBNdXN0IGFjY2VzcyBzZWxlY3RlZEluZGV4IHRvIG1ha2UgZGVmYXVsdCBvcHRpb25zIHNlbGVjdFxuXHRzdXBwb3J0Lm9wdFNlbGVjdGVkID0gb3B0LnNlbGVjdGVkO1xuXG5cdC8vIFN1cHBvcnQ6IElFIDw9MTEgb25seVxuXHQvLyBBbiBpbnB1dCBsb3NlcyBpdHMgdmFsdWUgYWZ0ZXIgYmVjb21pbmcgYSByYWRpb1xuXHRpbnB1dCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoIFwiaW5wdXRcIiApO1xuXHRpbnB1dC52YWx1ZSA9IFwidFwiO1xuXHRpbnB1dC50eXBlID0gXCJyYWRpb1wiO1xuXHRzdXBwb3J0LnJhZGlvVmFsdWUgPSBpbnB1dC52YWx1ZSA9PT0gXCJ0XCI7XG59ICkoKTtcblxuXG52YXIgYm9vbEhvb2ssXG5cdGF0dHJIYW5kbGUgPSBqUXVlcnkuZXhwci5hdHRySGFuZGxlO1xuXG5qUXVlcnkuZm4uZXh0ZW5kKCB7XG5cdGF0dHI6IGZ1bmN0aW9uKCBuYW1lLCB2YWx1ZSApIHtcblx0XHRyZXR1cm4gYWNjZXNzKCB0aGlzLCBqUXVlcnkuYXR0ciwgbmFtZSwgdmFsdWUsIGFyZ3VtZW50cy5sZW5ndGggPiAxICk7XG5cdH0sXG5cblx0cmVtb3ZlQXR0cjogZnVuY3Rpb24oIG5hbWUgKSB7XG5cdFx0cmV0dXJuIHRoaXMuZWFjaCggZnVuY3Rpb24oKSB7XG5cdFx0XHRqUXVlcnkucmVtb3ZlQXR0ciggdGhpcywgbmFtZSApO1xuXHRcdH0gKTtcblx0fVxufSApO1xuXG5qUXVlcnkuZXh0ZW5kKCB7XG5cdGF0dHI6IGZ1bmN0aW9uKCBlbGVtLCBuYW1lLCB2YWx1ZSApIHtcblx0XHR2YXIgcmV0LCBob29rcyxcblx0XHRcdG5UeXBlID0gZWxlbS5ub2RlVHlwZTtcblxuXHRcdC8vIERvbid0IGdldC9zZXQgYXR0cmlidXRlcyBvbiB0ZXh0LCBjb21tZW50IGFuZCBhdHRyaWJ1dGUgbm9kZXNcblx0XHRpZiAoIG5UeXBlID09PSAzIHx8IG5UeXBlID09PSA4IHx8IG5UeXBlID09PSAyICkge1xuXHRcdFx0cmV0dXJuO1xuXHRcdH1cblxuXHRcdC8vIEZhbGxiYWNrIHRvIHByb3Agd2hlbiBhdHRyaWJ1dGVzIGFyZSBub3Qgc3VwcG9ydGVkXG5cdFx0aWYgKCB0eXBlb2YgZWxlbS5nZXRBdHRyaWJ1dGUgPT09IFwidW5kZWZpbmVkXCIgKSB7XG5cdFx0XHRyZXR1cm4galF1ZXJ5LnByb3AoIGVsZW0sIG5hbWUsIHZhbHVlICk7XG5cdFx0fVxuXG5cdFx0Ly8gQXR0cmlidXRlIGhvb2tzIGFyZSBkZXRlcm1pbmVkIGJ5IHRoZSBsb3dlcmNhc2UgdmVyc2lvblxuXHRcdC8vIEdyYWIgbmVjZXNzYXJ5IGhvb2sgaWYgb25lIGlzIGRlZmluZWRcblx0XHRpZiAoIG5UeXBlICE9PSAxIHx8ICFqUXVlcnkuaXNYTUxEb2MoIGVsZW0gKSApIHtcblx0XHRcdGhvb2tzID0galF1ZXJ5LmF0dHJIb29rc1sgbmFtZS50b0xvd2VyQ2FzZSgpIF0gfHxcblx0XHRcdFx0KCBqUXVlcnkuZXhwci5tYXRjaC5ib29sLnRlc3QoIG5hbWUgKSA/IGJvb2xIb29rIDogdW5kZWZpbmVkICk7XG5cdFx0fVxuXG5cdFx0aWYgKCB2YWx1ZSAhPT0gdW5kZWZpbmVkICkge1xuXHRcdFx0aWYgKCB2YWx1ZSA9PT0gbnVsbCApIHtcblx0XHRcdFx0alF1ZXJ5LnJlbW92ZUF0dHIoIGVsZW0sIG5hbWUgKTtcblx0XHRcdFx0cmV0dXJuO1xuXHRcdFx0fVxuXG5cdFx0XHRpZiAoIGhvb2tzICYmIFwic2V0XCIgaW4gaG9va3MgJiZcblx0XHRcdFx0KCByZXQgPSBob29rcy5zZXQoIGVsZW0sIHZhbHVlLCBuYW1lICkgKSAhPT0gdW5kZWZpbmVkICkge1xuXHRcdFx0XHRyZXR1cm4gcmV0O1xuXHRcdFx0fVxuXG5cdFx0XHRlbGVtLnNldEF0dHJpYnV0ZSggbmFtZSwgdmFsdWUgKyBcIlwiICk7XG5cdFx0XHRyZXR1cm4gdmFsdWU7XG5cdFx0fVxuXG5cdFx0aWYgKCBob29rcyAmJiBcImdldFwiIGluIGhvb2tzICYmICggcmV0ID0gaG9va3MuZ2V0KCBlbGVtLCBuYW1lICkgKSAhPT0gbnVsbCApIHtcblx0XHRcdHJldHVybiByZXQ7XG5cdFx0fVxuXG5cdFx0cmV0ID0galF1ZXJ5LmZpbmQuYXR0ciggZWxlbSwgbmFtZSApO1xuXG5cdFx0Ly8gTm9uLWV4aXN0ZW50IGF0dHJpYnV0ZXMgcmV0dXJuIG51bGwsIHdlIG5vcm1hbGl6ZSB0byB1bmRlZmluZWRcblx0XHRyZXR1cm4gcmV0ID09IG51bGwgPyB1bmRlZmluZWQgOiByZXQ7XG5cdH0sXG5cblx0YXR0ckhvb2tzOiB7XG5cdFx0dHlwZToge1xuXHRcdFx0c2V0OiBmdW5jdGlvbiggZWxlbSwgdmFsdWUgKSB7XG5cdFx0XHRcdGlmICggIXN1cHBvcnQucmFkaW9WYWx1ZSAmJiB2YWx1ZSA9PT0gXCJyYWRpb1wiICYmXG5cdFx0XHRcdFx0bm9kZU5hbWUoIGVsZW0sIFwiaW5wdXRcIiApICkge1xuXHRcdFx0XHRcdHZhciB2YWwgPSBlbGVtLnZhbHVlO1xuXHRcdFx0XHRcdGVsZW0uc2V0QXR0cmlidXRlKCBcInR5cGVcIiwgdmFsdWUgKTtcblx0XHRcdFx0XHRpZiAoIHZhbCApIHtcblx0XHRcdFx0XHRcdGVsZW0udmFsdWUgPSB2YWw7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHRcdHJldHVybiB2YWx1ZTtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH1cblx0fSxcblxuXHRyZW1vdmVBdHRyOiBmdW5jdGlvbiggZWxlbSwgdmFsdWUgKSB7XG5cdFx0dmFyIG5hbWUsXG5cdFx0XHRpID0gMCxcblxuXHRcdFx0Ly8gQXR0cmlidXRlIG5hbWVzIGNhbiBjb250YWluIG5vbi1IVE1MIHdoaXRlc3BhY2UgY2hhcmFjdGVyc1xuXHRcdFx0Ly8gaHR0cHM6Ly9odG1sLnNwZWMud2hhdHdnLm9yZy9tdWx0aXBhZ2Uvc3ludGF4Lmh0bWwjYXR0cmlidXRlcy0yXG5cdFx0XHRhdHRyTmFtZXMgPSB2YWx1ZSAmJiB2YWx1ZS5tYXRjaCggcm5vdGh0bWx3aGl0ZSApO1xuXG5cdFx0aWYgKCBhdHRyTmFtZXMgJiYgZWxlbS5ub2RlVHlwZSA9PT0gMSApIHtcblx0XHRcdHdoaWxlICggKCBuYW1lID0gYXR0ck5hbWVzWyBpKysgXSApICkge1xuXHRcdFx0XHRlbGVtLnJlbW92ZUF0dHJpYnV0ZSggbmFtZSApO1xuXHRcdFx0fVxuXHRcdH1cblx0fVxufSApO1xuXG4vLyBIb29rcyBmb3IgYm9vbGVhbiBhdHRyaWJ1dGVzXG5ib29sSG9vayA9IHtcblx0c2V0OiBmdW5jdGlvbiggZWxlbSwgdmFsdWUsIG5hbWUgKSB7XG5cdFx0aWYgKCB2YWx1ZSA9PT0gZmFsc2UgKSB7XG5cblx0XHRcdC8vIFJlbW92ZSBib29sZWFuIGF0dHJpYnV0ZXMgd2hlbiBzZXQgdG8gZmFsc2Vcblx0XHRcdGpRdWVyeS5yZW1vdmVBdHRyKCBlbGVtLCBuYW1lICk7XG5cdFx0fSBlbHNlIHtcblx0XHRcdGVsZW0uc2V0QXR0cmlidXRlKCBuYW1lLCBuYW1lICk7XG5cdFx0fVxuXHRcdHJldHVybiBuYW1lO1xuXHR9XG59O1xuXG5qUXVlcnkuZWFjaCggalF1ZXJ5LmV4cHIubWF0Y2guYm9vbC5zb3VyY2UubWF0Y2goIC9cXHcrL2cgKSwgZnVuY3Rpb24oIF9pLCBuYW1lICkge1xuXHR2YXIgZ2V0dGVyID0gYXR0ckhhbmRsZVsgbmFtZSBdIHx8IGpRdWVyeS5maW5kLmF0dHI7XG5cblx0YXR0ckhhbmRsZVsgbmFtZSBdID0gZnVuY3Rpb24oIGVsZW0sIG5hbWUsIGlzWE1MICkge1xuXHRcdHZhciByZXQsIGhhbmRsZSxcblx0XHRcdGxvd2VyY2FzZU5hbWUgPSBuYW1lLnRvTG93ZXJDYXNlKCk7XG5cblx0XHRpZiAoICFpc1hNTCApIHtcblxuXHRcdFx0Ly8gQXZvaWQgYW4gaW5maW5pdGUgbG9vcCBieSB0ZW1wb3JhcmlseSByZW1vdmluZyB0aGlzIGZ1bmN0aW9uIGZyb20gdGhlIGdldHRlclxuXHRcdFx0aGFuZGxlID0gYXR0ckhhbmRsZVsgbG93ZXJjYXNlTmFtZSBdO1xuXHRcdFx0YXR0ckhhbmRsZVsgbG93ZXJjYXNlTmFtZSBdID0gcmV0O1xuXHRcdFx0cmV0ID0gZ2V0dGVyKCBlbGVtLCBuYW1lLCBpc1hNTCApICE9IG51bGwgP1xuXHRcdFx0XHRsb3dlcmNhc2VOYW1lIDpcblx0XHRcdFx0bnVsbDtcblx0XHRcdGF0dHJIYW5kbGVbIGxvd2VyY2FzZU5hbWUgXSA9IGhhbmRsZTtcblx0XHR9XG5cdFx0cmV0dXJuIHJldDtcblx0fTtcbn0gKTtcblxuXG5cblxudmFyIHJmb2N1c2FibGUgPSAvXig/OmlucHV0fHNlbGVjdHx0ZXh0YXJlYXxidXR0b24pJC9pLFxuXHRyY2xpY2thYmxlID0gL14oPzphfGFyZWEpJC9pO1xuXG5qUXVlcnkuZm4uZXh0ZW5kKCB7XG5cdHByb3A6IGZ1bmN0aW9uKCBuYW1lLCB2YWx1ZSApIHtcblx0XHRyZXR1cm4gYWNjZXNzKCB0aGlzLCBqUXVlcnkucHJvcCwgbmFtZSwgdmFsdWUsIGFyZ3VtZW50cy5sZW5ndGggPiAxICk7XG5cdH0sXG5cblx0cmVtb3ZlUHJvcDogZnVuY3Rpb24oIG5hbWUgKSB7XG5cdFx0cmV0dXJuIHRoaXMuZWFjaCggZnVuY3Rpb24oKSB7XG5cdFx0XHRkZWxldGUgdGhpc1sgalF1ZXJ5LnByb3BGaXhbIG5hbWUgXSB8fCBuYW1lIF07XG5cdFx0fSApO1xuXHR9XG59ICk7XG5cbmpRdWVyeS5leHRlbmQoIHtcblx0cHJvcDogZnVuY3Rpb24oIGVsZW0sIG5hbWUsIHZhbHVlICkge1xuXHRcdHZhciByZXQsIGhvb2tzLFxuXHRcdFx0blR5cGUgPSBlbGVtLm5vZGVUeXBlO1xuXG5cdFx0Ly8gRG9uJ3QgZ2V0L3NldCBwcm9wZXJ0aWVzIG9uIHRleHQsIGNvbW1lbnQgYW5kIGF0dHJpYnV0ZSBub2Rlc1xuXHRcdGlmICggblR5cGUgPT09IDMgfHwgblR5cGUgPT09IDggfHwgblR5cGUgPT09IDIgKSB7XG5cdFx0XHRyZXR1cm47XG5cdFx0fVxuXG5cdFx0aWYgKCBuVHlwZSAhPT0gMSB8fCAhalF1ZXJ5LmlzWE1MRG9jKCBlbGVtICkgKSB7XG5cblx0XHRcdC8vIEZpeCBuYW1lIGFuZCBhdHRhY2ggaG9va3Ncblx0XHRcdG5hbWUgPSBqUXVlcnkucHJvcEZpeFsgbmFtZSBdIHx8IG5hbWU7XG5cdFx0XHRob29rcyA9IGpRdWVyeS5wcm9wSG9va3NbIG5hbWUgXTtcblx0XHR9XG5cblx0XHRpZiAoIHZhbHVlICE9PSB1bmRlZmluZWQgKSB7XG5cdFx0XHRpZiAoIGhvb2tzICYmIFwic2V0XCIgaW4gaG9va3MgJiZcblx0XHRcdFx0KCByZXQgPSBob29rcy5zZXQoIGVsZW0sIHZhbHVlLCBuYW1lICkgKSAhPT0gdW5kZWZpbmVkICkge1xuXHRcdFx0XHRyZXR1cm4gcmV0O1xuXHRcdFx0fVxuXG5cdFx0XHRyZXR1cm4gKCBlbGVtWyBuYW1lIF0gPSB2YWx1ZSApO1xuXHRcdH1cblxuXHRcdGlmICggaG9va3MgJiYgXCJnZXRcIiBpbiBob29rcyAmJiAoIHJldCA9IGhvb2tzLmdldCggZWxlbSwgbmFtZSApICkgIT09IG51bGwgKSB7XG5cdFx0XHRyZXR1cm4gcmV0O1xuXHRcdH1cblxuXHRcdHJldHVybiBlbGVtWyBuYW1lIF07XG5cdH0sXG5cblx0cHJvcEhvb2tzOiB7XG5cdFx0dGFiSW5kZXg6IHtcblx0XHRcdGdldDogZnVuY3Rpb24oIGVsZW0gKSB7XG5cblx0XHRcdFx0Ly8gU3VwcG9ydDogSUUgPD05IC0gMTEgb25seVxuXHRcdFx0XHQvLyBlbGVtLnRhYkluZGV4IGRvZXNuJ3QgYWx3YXlzIHJldHVybiB0aGVcblx0XHRcdFx0Ly8gY29ycmVjdCB2YWx1ZSB3aGVuIGl0IGhhc24ndCBiZWVuIGV4cGxpY2l0bHkgc2V0XG5cdFx0XHRcdC8vIGh0dHBzOi8vd2ViLmFyY2hpdmUub3JnL3dlYi8yMDE0MTExNjIzMzM0Ny9odHRwOi8vZmx1aWRwcm9qZWN0Lm9yZy9ibG9nLzIwMDgvMDEvMDkvZ2V0dGluZy1zZXR0aW5nLWFuZC1yZW1vdmluZy10YWJpbmRleC12YWx1ZXMtd2l0aC1qYXZhc2NyaXB0L1xuXHRcdFx0XHQvLyBVc2UgcHJvcGVyIGF0dHJpYnV0ZSByZXRyaWV2YWwoIzEyMDcyKVxuXHRcdFx0XHR2YXIgdGFiaW5kZXggPSBqUXVlcnkuZmluZC5hdHRyKCBlbGVtLCBcInRhYmluZGV4XCIgKTtcblxuXHRcdFx0XHRpZiAoIHRhYmluZGV4ICkge1xuXHRcdFx0XHRcdHJldHVybiBwYXJzZUludCggdGFiaW5kZXgsIDEwICk7XG5cdFx0XHRcdH1cblxuXHRcdFx0XHRpZiAoXG5cdFx0XHRcdFx0cmZvY3VzYWJsZS50ZXN0KCBlbGVtLm5vZGVOYW1lICkgfHxcblx0XHRcdFx0XHRyY2xpY2thYmxlLnRlc3QoIGVsZW0ubm9kZU5hbWUgKSAmJlxuXHRcdFx0XHRcdGVsZW0uaHJlZlxuXHRcdFx0XHQpIHtcblx0XHRcdFx0XHRyZXR1cm4gMDtcblx0XHRcdFx0fVxuXG5cdFx0XHRcdHJldHVybiAtMTtcblx0XHRcdH1cblx0XHR9XG5cdH0sXG5cblx0cHJvcEZpeDoge1xuXHRcdFwiZm9yXCI6IFwiaHRtbEZvclwiLFxuXHRcdFwiY2xhc3NcIjogXCJjbGFzc05hbWVcIlxuXHR9XG59ICk7XG5cbi8vIFN1cHBvcnQ6IElFIDw9MTEgb25seVxuLy8gQWNjZXNzaW5nIHRoZSBzZWxlY3RlZEluZGV4IHByb3BlcnR5XG4vLyBmb3JjZXMgdGhlIGJyb3dzZXIgdG8gcmVzcGVjdCBzZXR0aW5nIHNlbGVjdGVkXG4vLyBvbiB0aGUgb3B0aW9uXG4vLyBUaGUgZ2V0dGVyIGVuc3VyZXMgYSBkZWZhdWx0IG9wdGlvbiBpcyBzZWxlY3RlZFxuLy8gd2hlbiBpbiBhbiBvcHRncm91cFxuLy8gZXNsaW50IHJ1bGUgXCJuby11bnVzZWQtZXhwcmVzc2lvbnNcIiBpcyBkaXNhYmxlZCBmb3IgdGhpcyBjb2RlXG4vLyBzaW5jZSBpdCBjb25zaWRlcnMgc3VjaCBhY2Nlc3Npb25zIG5vb3BcbmlmICggIXN1cHBvcnQub3B0U2VsZWN0ZWQgKSB7XG5cdGpRdWVyeS5wcm9wSG9va3Muc2VsZWN0ZWQgPSB7XG5cdFx0Z2V0OiBmdW5jdGlvbiggZWxlbSApIHtcblxuXHRcdFx0LyogZXNsaW50IG5vLXVudXNlZC1leHByZXNzaW9uczogXCJvZmZcIiAqL1xuXG5cdFx0XHR2YXIgcGFyZW50ID0gZWxlbS5wYXJlbnROb2RlO1xuXHRcdFx0aWYgKCBwYXJlbnQgJiYgcGFyZW50LnBhcmVudE5vZGUgKSB7XG5cdFx0XHRcdHBhcmVudC5wYXJlbnROb2RlLnNlbGVjdGVkSW5kZXg7XG5cdFx0XHR9XG5cdFx0XHRyZXR1cm4gbnVsbDtcblx0XHR9LFxuXHRcdHNldDogZnVuY3Rpb24oIGVsZW0gKSB7XG5cblx0XHRcdC8qIGVzbGludCBuby11bnVzZWQtZXhwcmVzc2lvbnM6IFwib2ZmXCIgKi9cblxuXHRcdFx0dmFyIHBhcmVudCA9IGVsZW0ucGFyZW50Tm9kZTtcblx0XHRcdGlmICggcGFyZW50ICkge1xuXHRcdFx0XHRwYXJlbnQuc2VsZWN0ZWRJbmRleDtcblxuXHRcdFx0XHRpZiAoIHBhcmVudC5wYXJlbnROb2RlICkge1xuXHRcdFx0XHRcdHBhcmVudC5wYXJlbnROb2RlLnNlbGVjdGVkSW5kZXg7XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9XG5cdH07XG59XG5cbmpRdWVyeS5lYWNoKCBbXG5cdFwidGFiSW5kZXhcIixcblx0XCJyZWFkT25seVwiLFxuXHRcIm1heExlbmd0aFwiLFxuXHRcImNlbGxTcGFjaW5nXCIsXG5cdFwiY2VsbFBhZGRpbmdcIixcblx0XCJyb3dTcGFuXCIsXG5cdFwiY29sU3BhblwiLFxuXHRcInVzZU1hcFwiLFxuXHRcImZyYW1lQm9yZGVyXCIsXG5cdFwiY29udGVudEVkaXRhYmxlXCJcbl0sIGZ1bmN0aW9uKCkge1xuXHRqUXVlcnkucHJvcEZpeFsgdGhpcy50b0xvd2VyQ2FzZSgpIF0gPSB0aGlzO1xufSApO1xuXG5cblxuXG5cdC8vIFN0cmlwIGFuZCBjb2xsYXBzZSB3aGl0ZXNwYWNlIGFjY29yZGluZyB0byBIVE1MIHNwZWNcblx0Ly8gaHR0cHM6Ly9pbmZyYS5zcGVjLndoYXR3Zy5vcmcvI3N0cmlwLWFuZC1jb2xsYXBzZS1hc2NpaS13aGl0ZXNwYWNlXG5cdGZ1bmN0aW9uIHN0cmlwQW5kQ29sbGFwc2UoIHZhbHVlICkge1xuXHRcdHZhciB0b2tlbnMgPSB2YWx1ZS5tYXRjaCggcm5vdGh0bWx3aGl0ZSApIHx8IFtdO1xuXHRcdHJldHVybiB0b2tlbnMuam9pbiggXCIgXCIgKTtcblx0fVxuXG5cbmZ1bmN0aW9uIGdldENsYXNzKCBlbGVtICkge1xuXHRyZXR1cm4gZWxlbS5nZXRBdHRyaWJ1dGUgJiYgZWxlbS5nZXRBdHRyaWJ1dGUoIFwiY2xhc3NcIiApIHx8IFwiXCI7XG59XG5cbmZ1bmN0aW9uIGNsYXNzZXNUb0FycmF5KCB2YWx1ZSApIHtcblx0aWYgKCBBcnJheS5pc0FycmF5KCB2YWx1ZSApICkge1xuXHRcdHJldHVybiB2YWx1ZTtcblx0fVxuXHRpZiAoIHR5cGVvZiB2YWx1ZSA9PT0gXCJzdHJpbmdcIiApIHtcblx0XHRyZXR1cm4gdmFsdWUubWF0Y2goIHJub3RodG1sd2hpdGUgKSB8fCBbXTtcblx0fVxuXHRyZXR1cm4gW107XG59XG5cbmpRdWVyeS5mbi5leHRlbmQoIHtcblx0YWRkQ2xhc3M6IGZ1bmN0aW9uKCB2YWx1ZSApIHtcblx0XHR2YXIgY2xhc3NlcywgZWxlbSwgY3VyLCBjdXJWYWx1ZSwgY2xhenosIGosIGZpbmFsVmFsdWUsXG5cdFx0XHRpID0gMDtcblxuXHRcdGlmICggaXNGdW5jdGlvbiggdmFsdWUgKSApIHtcblx0XHRcdHJldHVybiB0aGlzLmVhY2goIGZ1bmN0aW9uKCBqICkge1xuXHRcdFx0XHRqUXVlcnkoIHRoaXMgKS5hZGRDbGFzcyggdmFsdWUuY2FsbCggdGhpcywgaiwgZ2V0Q2xhc3MoIHRoaXMgKSApICk7XG5cdFx0XHR9ICk7XG5cdFx0fVxuXG5cdFx0Y2xhc3NlcyA9IGNsYXNzZXNUb0FycmF5KCB2YWx1ZSApO1xuXG5cdFx0aWYgKCBjbGFzc2VzLmxlbmd0aCApIHtcblx0XHRcdHdoaWxlICggKCBlbGVtID0gdGhpc1sgaSsrIF0gKSApIHtcblx0XHRcdFx0Y3VyVmFsdWUgPSBnZXRDbGFzcyggZWxlbSApO1xuXHRcdFx0XHRjdXIgPSBlbGVtLm5vZGVUeXBlID09PSAxICYmICggXCIgXCIgKyBzdHJpcEFuZENvbGxhcHNlKCBjdXJWYWx1ZSApICsgXCIgXCIgKTtcblxuXHRcdFx0XHRpZiAoIGN1ciApIHtcblx0XHRcdFx0XHRqID0gMDtcblx0XHRcdFx0XHR3aGlsZSAoICggY2xhenogPSBjbGFzc2VzWyBqKysgXSApICkge1xuXHRcdFx0XHRcdFx0aWYgKCBjdXIuaW5kZXhPZiggXCIgXCIgKyBjbGF6eiArIFwiIFwiICkgPCAwICkge1xuXHRcdFx0XHRcdFx0XHRjdXIgKz0gY2xhenogKyBcIiBcIjtcblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHR9XG5cblx0XHRcdFx0XHQvLyBPbmx5IGFzc2lnbiBpZiBkaWZmZXJlbnQgdG8gYXZvaWQgdW5uZWVkZWQgcmVuZGVyaW5nLlxuXHRcdFx0XHRcdGZpbmFsVmFsdWUgPSBzdHJpcEFuZENvbGxhcHNlKCBjdXIgKTtcblx0XHRcdFx0XHRpZiAoIGN1clZhbHVlICE9PSBmaW5hbFZhbHVlICkge1xuXHRcdFx0XHRcdFx0ZWxlbS5zZXRBdHRyaWJ1dGUoIFwiY2xhc3NcIiwgZmluYWxWYWx1ZSApO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH1cblxuXHRcdHJldHVybiB0aGlzO1xuXHR9LFxuXG5cdHJlbW92ZUNsYXNzOiBmdW5jdGlvbiggdmFsdWUgKSB7XG5cdFx0dmFyIGNsYXNzZXMsIGVsZW0sIGN1ciwgY3VyVmFsdWUsIGNsYXp6LCBqLCBmaW5hbFZhbHVlLFxuXHRcdFx0aSA9IDA7XG5cblx0XHRpZiAoIGlzRnVuY3Rpb24oIHZhbHVlICkgKSB7XG5cdFx0XHRyZXR1cm4gdGhpcy5lYWNoKCBmdW5jdGlvbiggaiApIHtcblx0XHRcdFx0alF1ZXJ5KCB0aGlzICkucmVtb3ZlQ2xhc3MoIHZhbHVlLmNhbGwoIHRoaXMsIGosIGdldENsYXNzKCB0aGlzICkgKSApO1xuXHRcdFx0fSApO1xuXHRcdH1cblxuXHRcdGlmICggIWFyZ3VtZW50cy5sZW5ndGggKSB7XG5cdFx0XHRyZXR1cm4gdGhpcy5hdHRyKCBcImNsYXNzXCIsIFwiXCIgKTtcblx0XHR9XG5cblx0XHRjbGFzc2VzID0gY2xhc3Nlc1RvQXJyYXkoIHZhbHVlICk7XG5cblx0XHRpZiAoIGNsYXNzZXMubGVuZ3RoICkge1xuXHRcdFx0d2hpbGUgKCAoIGVsZW0gPSB0aGlzWyBpKysgXSApICkge1xuXHRcdFx0XHRjdXJWYWx1ZSA9IGdldENsYXNzKCBlbGVtICk7XG5cblx0XHRcdFx0Ly8gVGhpcyBleHByZXNzaW9uIGlzIGhlcmUgZm9yIGJldHRlciBjb21wcmVzc2liaWxpdHkgKHNlZSBhZGRDbGFzcylcblx0XHRcdFx0Y3VyID0gZWxlbS5ub2RlVHlwZSA9PT0gMSAmJiAoIFwiIFwiICsgc3RyaXBBbmRDb2xsYXBzZSggY3VyVmFsdWUgKSArIFwiIFwiICk7XG5cblx0XHRcdFx0aWYgKCBjdXIgKSB7XG5cdFx0XHRcdFx0aiA9IDA7XG5cdFx0XHRcdFx0d2hpbGUgKCAoIGNsYXp6ID0gY2xhc3Nlc1sgaisrIF0gKSApIHtcblxuXHRcdFx0XHRcdFx0Ly8gUmVtb3ZlICphbGwqIGluc3RhbmNlc1xuXHRcdFx0XHRcdFx0d2hpbGUgKCBjdXIuaW5kZXhPZiggXCIgXCIgKyBjbGF6eiArIFwiIFwiICkgPiAtMSApIHtcblx0XHRcdFx0XHRcdFx0Y3VyID0gY3VyLnJlcGxhY2UoIFwiIFwiICsgY2xhenogKyBcIiBcIiwgXCIgXCIgKTtcblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHR9XG5cblx0XHRcdFx0XHQvLyBPbmx5IGFzc2lnbiBpZiBkaWZmZXJlbnQgdG8gYXZvaWQgdW5uZWVkZWQgcmVuZGVyaW5nLlxuXHRcdFx0XHRcdGZpbmFsVmFsdWUgPSBzdHJpcEFuZENvbGxhcHNlKCBjdXIgKTtcblx0XHRcdFx0XHRpZiAoIGN1clZhbHVlICE9PSBmaW5hbFZhbHVlICkge1xuXHRcdFx0XHRcdFx0ZWxlbS5zZXRBdHRyaWJ1dGUoIFwiY2xhc3NcIiwgZmluYWxWYWx1ZSApO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH1cblxuXHRcdHJldHVybiB0aGlzO1xuXHR9LFxuXG5cdHRvZ2dsZUNsYXNzOiBmdW5jdGlvbiggdmFsdWUsIHN0YXRlVmFsICkge1xuXHRcdHZhciB0eXBlID0gdHlwZW9mIHZhbHVlLFxuXHRcdFx0aXNWYWxpZFZhbHVlID0gdHlwZSA9PT0gXCJzdHJpbmdcIiB8fCBBcnJheS5pc0FycmF5KCB2YWx1ZSApO1xuXG5cdFx0aWYgKCB0eXBlb2Ygc3RhdGVWYWwgPT09IFwiYm9vbGVhblwiICYmIGlzVmFsaWRWYWx1ZSApIHtcblx0XHRcdHJldHVybiBzdGF0ZVZhbCA/IHRoaXMuYWRkQ2xhc3MoIHZhbHVlICkgOiB0aGlzLnJlbW92ZUNsYXNzKCB2YWx1ZSApO1xuXHRcdH1cblxuXHRcdGlmICggaXNGdW5jdGlvbiggdmFsdWUgKSApIHtcblx0XHRcdHJldHVybiB0aGlzLmVhY2goIGZ1bmN0aW9uKCBpICkge1xuXHRcdFx0XHRqUXVlcnkoIHRoaXMgKS50b2dnbGVDbGFzcyhcblx0XHRcdFx0XHR2YWx1ZS5jYWxsKCB0aGlzLCBpLCBnZXRDbGFzcyggdGhpcyApLCBzdGF0ZVZhbCApLFxuXHRcdFx0XHRcdHN0YXRlVmFsXG5cdFx0XHRcdCk7XG5cdFx0XHR9ICk7XG5cdFx0fVxuXG5cdFx0cmV0dXJuIHRoaXMuZWFjaCggZnVuY3Rpb24oKSB7XG5cdFx0XHR2YXIgY2xhc3NOYW1lLCBpLCBzZWxmLCBjbGFzc05hbWVzO1xuXG5cdFx0XHRpZiAoIGlzVmFsaWRWYWx1ZSApIHtcblxuXHRcdFx0XHQvLyBUb2dnbGUgaW5kaXZpZHVhbCBjbGFzcyBuYW1lc1xuXHRcdFx0XHRpID0gMDtcblx0XHRcdFx0c2VsZiA9IGpRdWVyeSggdGhpcyApO1xuXHRcdFx0XHRjbGFzc05hbWVzID0gY2xhc3Nlc1RvQXJyYXkoIHZhbHVlICk7XG5cblx0XHRcdFx0d2hpbGUgKCAoIGNsYXNzTmFtZSA9IGNsYXNzTmFtZXNbIGkrKyBdICkgKSB7XG5cblx0XHRcdFx0XHQvLyBDaGVjayBlYWNoIGNsYXNzTmFtZSBnaXZlbiwgc3BhY2Ugc2VwYXJhdGVkIGxpc3Rcblx0XHRcdFx0XHRpZiAoIHNlbGYuaGFzQ2xhc3MoIGNsYXNzTmFtZSApICkge1xuXHRcdFx0XHRcdFx0c2VsZi5yZW1vdmVDbGFzcyggY2xhc3NOYW1lICk7XG5cdFx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHRcdHNlbGYuYWRkQ2xhc3MoIGNsYXNzTmFtZSApO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXG5cdFx0XHQvLyBUb2dnbGUgd2hvbGUgY2xhc3MgbmFtZVxuXHRcdFx0fSBlbHNlIGlmICggdmFsdWUgPT09IHVuZGVmaW5lZCB8fCB0eXBlID09PSBcImJvb2xlYW5cIiApIHtcblx0XHRcdFx0Y2xhc3NOYW1lID0gZ2V0Q2xhc3MoIHRoaXMgKTtcblx0XHRcdFx0aWYgKCBjbGFzc05hbWUgKSB7XG5cblx0XHRcdFx0XHQvLyBTdG9yZSBjbGFzc05hbWUgaWYgc2V0XG5cdFx0XHRcdFx0ZGF0YVByaXYuc2V0KCB0aGlzLCBcIl9fY2xhc3NOYW1lX19cIiwgY2xhc3NOYW1lICk7XG5cdFx0XHRcdH1cblxuXHRcdFx0XHQvLyBJZiB0aGUgZWxlbWVudCBoYXMgYSBjbGFzcyBuYW1lIG9yIGlmIHdlJ3JlIHBhc3NlZCBgZmFsc2VgLFxuXHRcdFx0XHQvLyB0aGVuIHJlbW92ZSB0aGUgd2hvbGUgY2xhc3NuYW1lIChpZiB0aGVyZSB3YXMgb25lLCB0aGUgYWJvdmUgc2F2ZWQgaXQpLlxuXHRcdFx0XHQvLyBPdGhlcndpc2UgYnJpbmcgYmFjayB3aGF0ZXZlciB3YXMgcHJldmlvdXNseSBzYXZlZCAoaWYgYW55dGhpbmcpLFxuXHRcdFx0XHQvLyBmYWxsaW5nIGJhY2sgdG8gdGhlIGVtcHR5IHN0cmluZyBpZiBub3RoaW5nIHdhcyBzdG9yZWQuXG5cdFx0XHRcdGlmICggdGhpcy5zZXRBdHRyaWJ1dGUgKSB7XG5cdFx0XHRcdFx0dGhpcy5zZXRBdHRyaWJ1dGUoIFwiY2xhc3NcIixcblx0XHRcdFx0XHRcdGNsYXNzTmFtZSB8fCB2YWx1ZSA9PT0gZmFsc2UgP1xuXHRcdFx0XHRcdFx0XCJcIiA6XG5cdFx0XHRcdFx0XHRkYXRhUHJpdi5nZXQoIHRoaXMsIFwiX19jbGFzc05hbWVfX1wiICkgfHwgXCJcIlxuXHRcdFx0XHRcdCk7XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9ICk7XG5cdH0sXG5cblx0aGFzQ2xhc3M6IGZ1bmN0aW9uKCBzZWxlY3RvciApIHtcblx0XHR2YXIgY2xhc3NOYW1lLCBlbGVtLFxuXHRcdFx0aSA9IDA7XG5cblx0XHRjbGFzc05hbWUgPSBcIiBcIiArIHNlbGVjdG9yICsgXCIgXCI7XG5cdFx0d2hpbGUgKCAoIGVsZW0gPSB0aGlzWyBpKysgXSApICkge1xuXHRcdFx0aWYgKCBlbGVtLm5vZGVUeXBlID09PSAxICYmXG5cdFx0XHRcdCggXCIgXCIgKyBzdHJpcEFuZENvbGxhcHNlKCBnZXRDbGFzcyggZWxlbSApICkgKyBcIiBcIiApLmluZGV4T2YoIGNsYXNzTmFtZSApID4gLTEgKSB7XG5cdFx0XHRcdFx0cmV0dXJuIHRydWU7XG5cdFx0XHR9XG5cdFx0fVxuXG5cdFx0cmV0dXJuIGZhbHNlO1xuXHR9XG59ICk7XG5cblxuXG5cbnZhciBycmV0dXJuID0gL1xcci9nO1xuXG5qUXVlcnkuZm4uZXh0ZW5kKCB7XG5cdHZhbDogZnVuY3Rpb24oIHZhbHVlICkge1xuXHRcdHZhciBob29rcywgcmV0LCB2YWx1ZUlzRnVuY3Rpb24sXG5cdFx0XHRlbGVtID0gdGhpc1sgMCBdO1xuXG5cdFx0aWYgKCAhYXJndW1lbnRzLmxlbmd0aCApIHtcblx0XHRcdGlmICggZWxlbSApIHtcblx0XHRcdFx0aG9va3MgPSBqUXVlcnkudmFsSG9va3NbIGVsZW0udHlwZSBdIHx8XG5cdFx0XHRcdFx0alF1ZXJ5LnZhbEhvb2tzWyBlbGVtLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCkgXTtcblxuXHRcdFx0XHRpZiAoIGhvb2tzICYmXG5cdFx0XHRcdFx0XCJnZXRcIiBpbiBob29rcyAmJlxuXHRcdFx0XHRcdCggcmV0ID0gaG9va3MuZ2V0KCBlbGVtLCBcInZhbHVlXCIgKSApICE9PSB1bmRlZmluZWRcblx0XHRcdFx0KSB7XG5cdFx0XHRcdFx0cmV0dXJuIHJldDtcblx0XHRcdFx0fVxuXG5cdFx0XHRcdHJldCA9IGVsZW0udmFsdWU7XG5cblx0XHRcdFx0Ly8gSGFuZGxlIG1vc3QgY29tbW9uIHN0cmluZyBjYXNlc1xuXHRcdFx0XHRpZiAoIHR5cGVvZiByZXQgPT09IFwic3RyaW5nXCIgKSB7XG5cdFx0XHRcdFx0cmV0dXJuIHJldC5yZXBsYWNlKCBycmV0dXJuLCBcIlwiICk7XG5cdFx0XHRcdH1cblxuXHRcdFx0XHQvLyBIYW5kbGUgY2FzZXMgd2hlcmUgdmFsdWUgaXMgbnVsbC91bmRlZiBvciBudW1iZXJcblx0XHRcdFx0cmV0dXJuIHJldCA9PSBudWxsID8gXCJcIiA6IHJldDtcblx0XHRcdH1cblxuXHRcdFx0cmV0dXJuO1xuXHRcdH1cblxuXHRcdHZhbHVlSXNGdW5jdGlvbiA9IGlzRnVuY3Rpb24oIHZhbHVlICk7XG5cblx0XHRyZXR1cm4gdGhpcy5lYWNoKCBmdW5jdGlvbiggaSApIHtcblx0XHRcdHZhciB2YWw7XG5cblx0XHRcdGlmICggdGhpcy5ub2RlVHlwZSAhPT0gMSApIHtcblx0XHRcdFx0cmV0dXJuO1xuXHRcdFx0fVxuXG5cdFx0XHRpZiAoIHZhbHVlSXNGdW5jdGlvbiApIHtcblx0XHRcdFx0dmFsID0gdmFsdWUuY2FsbCggdGhpcywgaSwgalF1ZXJ5KCB0aGlzICkudmFsKCkgKTtcblx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdHZhbCA9IHZhbHVlO1xuXHRcdFx0fVxuXG5cdFx0XHQvLyBUcmVhdCBudWxsL3VuZGVmaW5lZCBhcyBcIlwiOyBjb252ZXJ0IG51bWJlcnMgdG8gc3RyaW5nXG5cdFx0XHRpZiAoIHZhbCA9PSBudWxsICkge1xuXHRcdFx0XHR2YWwgPSBcIlwiO1xuXG5cdFx0XHR9IGVsc2UgaWYgKCB0eXBlb2YgdmFsID09PSBcIm51bWJlclwiICkge1xuXHRcdFx0XHR2YWwgKz0gXCJcIjtcblxuXHRcdFx0fSBlbHNlIGlmICggQXJyYXkuaXNBcnJheSggdmFsICkgKSB7XG5cdFx0XHRcdHZhbCA9IGpRdWVyeS5tYXAoIHZhbCwgZnVuY3Rpb24oIHZhbHVlICkge1xuXHRcdFx0XHRcdHJldHVybiB2YWx1ZSA9PSBudWxsID8gXCJcIiA6IHZhbHVlICsgXCJcIjtcblx0XHRcdFx0fSApO1xuXHRcdFx0fVxuXG5cdFx0XHRob29rcyA9IGpRdWVyeS52YWxIb29rc1sgdGhpcy50eXBlIF0gfHwgalF1ZXJ5LnZhbEhvb2tzWyB0aGlzLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCkgXTtcblxuXHRcdFx0Ly8gSWYgc2V0IHJldHVybnMgdW5kZWZpbmVkLCBmYWxsIGJhY2sgdG8gbm9ybWFsIHNldHRpbmdcblx0XHRcdGlmICggIWhvb2tzIHx8ICEoIFwic2V0XCIgaW4gaG9va3MgKSB8fCBob29rcy5zZXQoIHRoaXMsIHZhbCwgXCJ2YWx1ZVwiICkgPT09IHVuZGVmaW5lZCApIHtcblx0XHRcdFx0dGhpcy52YWx1ZSA9IHZhbDtcblx0XHRcdH1cblx0XHR9ICk7XG5cdH1cbn0gKTtcblxualF1ZXJ5LmV4dGVuZCgge1xuXHR2YWxIb29rczoge1xuXHRcdG9wdGlvbjoge1xuXHRcdFx0Z2V0OiBmdW5jdGlvbiggZWxlbSApIHtcblxuXHRcdFx0XHR2YXIgdmFsID0galF1ZXJ5LmZpbmQuYXR0ciggZWxlbSwgXCJ2YWx1ZVwiICk7XG5cdFx0XHRcdHJldHVybiB2YWwgIT0gbnVsbCA/XG5cdFx0XHRcdFx0dmFsIDpcblxuXHRcdFx0XHRcdC8vIFN1cHBvcnQ6IElFIDw9MTAgLSAxMSBvbmx5XG5cdFx0XHRcdFx0Ly8gb3B0aW9uLnRleHQgdGhyb3dzIGV4Y2VwdGlvbnMgKCMxNDY4NiwgIzE0ODU4KVxuXHRcdFx0XHRcdC8vIFN0cmlwIGFuZCBjb2xsYXBzZSB3aGl0ZXNwYWNlXG5cdFx0XHRcdFx0Ly8gaHR0cHM6Ly9odG1sLnNwZWMud2hhdHdnLm9yZy8jc3RyaXAtYW5kLWNvbGxhcHNlLXdoaXRlc3BhY2Vcblx0XHRcdFx0XHRzdHJpcEFuZENvbGxhcHNlKCBqUXVlcnkudGV4dCggZWxlbSApICk7XG5cdFx0XHR9XG5cdFx0fSxcblx0XHRzZWxlY3Q6IHtcblx0XHRcdGdldDogZnVuY3Rpb24oIGVsZW0gKSB7XG5cdFx0XHRcdHZhciB2YWx1ZSwgb3B0aW9uLCBpLFxuXHRcdFx0XHRcdG9wdGlvbnMgPSBlbGVtLm9wdGlvbnMsXG5cdFx0XHRcdFx0aW5kZXggPSBlbGVtLnNlbGVjdGVkSW5kZXgsXG5cdFx0XHRcdFx0b25lID0gZWxlbS50eXBlID09PSBcInNlbGVjdC1vbmVcIixcblx0XHRcdFx0XHR2YWx1ZXMgPSBvbmUgPyBudWxsIDogW10sXG5cdFx0XHRcdFx0bWF4ID0gb25lID8gaW5kZXggKyAxIDogb3B0aW9ucy5sZW5ndGg7XG5cblx0XHRcdFx0aWYgKCBpbmRleCA8IDAgKSB7XG5cdFx0XHRcdFx0aSA9IG1heDtcblxuXHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdGkgPSBvbmUgPyBpbmRleCA6IDA7XG5cdFx0XHRcdH1cblxuXHRcdFx0XHQvLyBMb29wIHRocm91Z2ggYWxsIHRoZSBzZWxlY3RlZCBvcHRpb25zXG5cdFx0XHRcdGZvciAoIDsgaSA8IG1heDsgaSsrICkge1xuXHRcdFx0XHRcdG9wdGlvbiA9IG9wdGlvbnNbIGkgXTtcblxuXHRcdFx0XHRcdC8vIFN1cHBvcnQ6IElFIDw9OSBvbmx5XG5cdFx0XHRcdFx0Ly8gSUU4LTkgZG9lc24ndCB1cGRhdGUgc2VsZWN0ZWQgYWZ0ZXIgZm9ybSByZXNldCAoIzI1NTEpXG5cdFx0XHRcdFx0aWYgKCAoIG9wdGlvbi5zZWxlY3RlZCB8fCBpID09PSBpbmRleCApICYmXG5cblx0XHRcdFx0XHRcdFx0Ly8gRG9uJ3QgcmV0dXJuIG9wdGlvbnMgdGhhdCBhcmUgZGlzYWJsZWQgb3IgaW4gYSBkaXNhYmxlZCBvcHRncm91cFxuXHRcdFx0XHRcdFx0XHQhb3B0aW9uLmRpc2FibGVkICYmXG5cdFx0XHRcdFx0XHRcdCggIW9wdGlvbi5wYXJlbnROb2RlLmRpc2FibGVkIHx8XG5cdFx0XHRcdFx0XHRcdFx0IW5vZGVOYW1lKCBvcHRpb24ucGFyZW50Tm9kZSwgXCJvcHRncm91cFwiICkgKSApIHtcblxuXHRcdFx0XHRcdFx0Ly8gR2V0IHRoZSBzcGVjaWZpYyB2YWx1ZSBmb3IgdGhlIG9wdGlvblxuXHRcdFx0XHRcdFx0dmFsdWUgPSBqUXVlcnkoIG9wdGlvbiApLnZhbCgpO1xuXG5cdFx0XHRcdFx0XHQvLyBXZSBkb24ndCBuZWVkIGFuIGFycmF5IGZvciBvbmUgc2VsZWN0c1xuXHRcdFx0XHRcdFx0aWYgKCBvbmUgKSB7XG5cdFx0XHRcdFx0XHRcdHJldHVybiB2YWx1ZTtcblx0XHRcdFx0XHRcdH1cblxuXHRcdFx0XHRcdFx0Ly8gTXVsdGktU2VsZWN0cyByZXR1cm4gYW4gYXJyYXlcblx0XHRcdFx0XHRcdHZhbHVlcy5wdXNoKCB2YWx1ZSApO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXG5cdFx0XHRcdHJldHVybiB2YWx1ZXM7XG5cdFx0XHR9LFxuXG5cdFx0XHRzZXQ6IGZ1bmN0aW9uKCBlbGVtLCB2YWx1ZSApIHtcblx0XHRcdFx0dmFyIG9wdGlvblNldCwgb3B0aW9uLFxuXHRcdFx0XHRcdG9wdGlvbnMgPSBlbGVtLm9wdGlvbnMsXG5cdFx0XHRcdFx0dmFsdWVzID0galF1ZXJ5Lm1ha2VBcnJheSggdmFsdWUgKSxcblx0XHRcdFx0XHRpID0gb3B0aW9ucy5sZW5ndGg7XG5cblx0XHRcdFx0d2hpbGUgKCBpLS0gKSB7XG5cdFx0XHRcdFx0b3B0aW9uID0gb3B0aW9uc1sgaSBdO1xuXG5cdFx0XHRcdFx0LyogZXNsaW50LWRpc2FibGUgbm8tY29uZC1hc3NpZ24gKi9cblxuXHRcdFx0XHRcdGlmICggb3B0aW9uLnNlbGVjdGVkID1cblx0XHRcdFx0XHRcdGpRdWVyeS5pbkFycmF5KCBqUXVlcnkudmFsSG9va3Mub3B0aW9uLmdldCggb3B0aW9uICksIHZhbHVlcyApID4gLTFcblx0XHRcdFx0XHQpIHtcblx0XHRcdFx0XHRcdG9wdGlvblNldCA9IHRydWU7XG5cdFx0XHRcdFx0fVxuXG5cdFx0XHRcdFx0LyogZXNsaW50LWVuYWJsZSBuby1jb25kLWFzc2lnbiAqL1xuXHRcdFx0XHR9XG5cblx0XHRcdFx0Ly8gRm9yY2UgYnJvd3NlcnMgdG8gYmVoYXZlIGNvbnNpc3RlbnRseSB3aGVuIG5vbi1tYXRjaGluZyB2YWx1ZSBpcyBzZXRcblx0XHRcdFx0aWYgKCAhb3B0aW9uU2V0ICkge1xuXHRcdFx0XHRcdGVsZW0uc2VsZWN0ZWRJbmRleCA9IC0xO1xuXHRcdFx0XHR9XG5cdFx0XHRcdHJldHVybiB2YWx1ZXM7XG5cdFx0XHR9XG5cdFx0fVxuXHR9XG59ICk7XG5cbi8vIFJhZGlvcyBhbmQgY2hlY2tib3hlcyBnZXR0ZXIvc2V0dGVyXG5qUXVlcnkuZWFjaCggWyBcInJhZGlvXCIsIFwiY2hlY2tib3hcIiBdLCBmdW5jdGlvbigpIHtcblx0alF1ZXJ5LnZhbEhvb2tzWyB0aGlzIF0gPSB7XG5cdFx0c2V0OiBmdW5jdGlvbiggZWxlbSwgdmFsdWUgKSB7XG5cdFx0XHRpZiAoIEFycmF5LmlzQXJyYXkoIHZhbHVlICkgKSB7XG5cdFx0XHRcdHJldHVybiAoIGVsZW0uY2hlY2tlZCA9IGpRdWVyeS5pbkFycmF5KCBqUXVlcnkoIGVsZW0gKS52YWwoKSwgdmFsdWUgKSA+IC0xICk7XG5cdFx0XHR9XG5cdFx0fVxuXHR9O1xuXHRpZiAoICFzdXBwb3J0LmNoZWNrT24gKSB7XG5cdFx0alF1ZXJ5LnZhbEhvb2tzWyB0aGlzIF0uZ2V0ID0gZnVuY3Rpb24oIGVsZW0gKSB7XG5cdFx0XHRyZXR1cm4gZWxlbS5nZXRBdHRyaWJ1dGUoIFwidmFsdWVcIiApID09PSBudWxsID8gXCJvblwiIDogZWxlbS52YWx1ZTtcblx0XHR9O1xuXHR9XG59ICk7XG5cblxuXG5cbi8vIFJldHVybiBqUXVlcnkgZm9yIGF0dHJpYnV0ZXMtb25seSBpbmNsdXNpb25cblxuXG5zdXBwb3J0LmZvY3VzaW4gPSBcIm9uZm9jdXNpblwiIGluIHdpbmRvdztcblxuXG52YXIgcmZvY3VzTW9ycGggPSAvXig/OmZvY3VzaW5mb2N1c3xmb2N1c291dGJsdXIpJC8sXG5cdHN0b3BQcm9wYWdhdGlvbkNhbGxiYWNrID0gZnVuY3Rpb24oIGUgKSB7XG5cdFx0ZS5zdG9wUHJvcGFnYXRpb24oKTtcblx0fTtcblxualF1ZXJ5LmV4dGVuZCggalF1ZXJ5LmV2ZW50LCB7XG5cblx0dHJpZ2dlcjogZnVuY3Rpb24oIGV2ZW50LCBkYXRhLCBlbGVtLCBvbmx5SGFuZGxlcnMgKSB7XG5cblx0XHR2YXIgaSwgY3VyLCB0bXAsIGJ1YmJsZVR5cGUsIG9udHlwZSwgaGFuZGxlLCBzcGVjaWFsLCBsYXN0RWxlbWVudCxcblx0XHRcdGV2ZW50UGF0aCA9IFsgZWxlbSB8fCBkb2N1bWVudCBdLFxuXHRcdFx0dHlwZSA9IGhhc093bi5jYWxsKCBldmVudCwgXCJ0eXBlXCIgKSA/IGV2ZW50LnR5cGUgOiBldmVudCxcblx0XHRcdG5hbWVzcGFjZXMgPSBoYXNPd24uY2FsbCggZXZlbnQsIFwibmFtZXNwYWNlXCIgKSA/IGV2ZW50Lm5hbWVzcGFjZS5zcGxpdCggXCIuXCIgKSA6IFtdO1xuXG5cdFx0Y3VyID0gbGFzdEVsZW1lbnQgPSB0bXAgPSBlbGVtID0gZWxlbSB8fCBkb2N1bWVudDtcblxuXHRcdC8vIERvbid0IGRvIGV2ZW50cyBvbiB0ZXh0IGFuZCBjb21tZW50IG5vZGVzXG5cdFx0aWYgKCBlbGVtLm5vZGVUeXBlID09PSAzIHx8IGVsZW0ubm9kZVR5cGUgPT09IDggKSB7XG5cdFx0XHRyZXR1cm47XG5cdFx0fVxuXG5cdFx0Ly8gZm9jdXMvYmx1ciBtb3JwaHMgdG8gZm9jdXNpbi9vdXQ7IGVuc3VyZSB3ZSdyZSBub3QgZmlyaW5nIHRoZW0gcmlnaHQgbm93XG5cdFx0aWYgKCByZm9jdXNNb3JwaC50ZXN0KCB0eXBlICsgalF1ZXJ5LmV2ZW50LnRyaWdnZXJlZCApICkge1xuXHRcdFx0cmV0dXJuO1xuXHRcdH1cblxuXHRcdGlmICggdHlwZS5pbmRleE9mKCBcIi5cIiApID4gLTEgKSB7XG5cblx0XHRcdC8vIE5hbWVzcGFjZWQgdHJpZ2dlcjsgY3JlYXRlIGEgcmVnZXhwIHRvIG1hdGNoIGV2ZW50IHR5cGUgaW4gaGFuZGxlKClcblx0XHRcdG5hbWVzcGFjZXMgPSB0eXBlLnNwbGl0KCBcIi5cIiApO1xuXHRcdFx0dHlwZSA9IG5hbWVzcGFjZXMuc2hpZnQoKTtcblx0XHRcdG5hbWVzcGFjZXMuc29ydCgpO1xuXHRcdH1cblx0XHRvbnR5cGUgPSB0eXBlLmluZGV4T2YoIFwiOlwiICkgPCAwICYmIFwib25cIiArIHR5cGU7XG5cblx0XHQvLyBDYWxsZXIgY2FuIHBhc3MgaW4gYSBqUXVlcnkuRXZlbnQgb2JqZWN0LCBPYmplY3QsIG9yIGp1c3QgYW4gZXZlbnQgdHlwZSBzdHJpbmdcblx0XHRldmVudCA9IGV2ZW50WyBqUXVlcnkuZXhwYW5kbyBdID9cblx0XHRcdGV2ZW50IDpcblx0XHRcdG5ldyBqUXVlcnkuRXZlbnQoIHR5cGUsIHR5cGVvZiBldmVudCA9PT0gXCJvYmplY3RcIiAmJiBldmVudCApO1xuXG5cdFx0Ly8gVHJpZ2dlciBiaXRtYXNrOiAmIDEgZm9yIG5hdGl2ZSBoYW5kbGVyczsgJiAyIGZvciBqUXVlcnkgKGFsd2F5cyB0cnVlKVxuXHRcdGV2ZW50LmlzVHJpZ2dlciA9IG9ubHlIYW5kbGVycyA/IDIgOiAzO1xuXHRcdGV2ZW50Lm5hbWVzcGFjZSA9IG5hbWVzcGFjZXMuam9pbiggXCIuXCIgKTtcblx0XHRldmVudC5ybmFtZXNwYWNlID0gZXZlbnQubmFtZXNwYWNlID9cblx0XHRcdG5ldyBSZWdFeHAoIFwiKF58XFxcXC4pXCIgKyBuYW1lc3BhY2VzLmpvaW4oIFwiXFxcXC4oPzouKlxcXFwufClcIiApICsgXCIoXFxcXC58JClcIiApIDpcblx0XHRcdG51bGw7XG5cblx0XHQvLyBDbGVhbiB1cCB0aGUgZXZlbnQgaW4gY2FzZSBpdCBpcyBiZWluZyByZXVzZWRcblx0XHRldmVudC5yZXN1bHQgPSB1bmRlZmluZWQ7XG5cdFx0aWYgKCAhZXZlbnQudGFyZ2V0ICkge1xuXHRcdFx0ZXZlbnQudGFyZ2V0ID0gZWxlbTtcblx0XHR9XG5cblx0XHQvLyBDbG9uZSBhbnkgaW5jb21pbmcgZGF0YSBhbmQgcHJlcGVuZCB0aGUgZXZlbnQsIGNyZWF0aW5nIHRoZSBoYW5kbGVyIGFyZyBsaXN0XG5cdFx0ZGF0YSA9IGRhdGEgPT0gbnVsbCA/XG5cdFx0XHRbIGV2ZW50IF0gOlxuXHRcdFx0alF1ZXJ5Lm1ha2VBcnJheSggZGF0YSwgWyBldmVudCBdICk7XG5cblx0XHQvLyBBbGxvdyBzcGVjaWFsIGV2ZW50cyB0byBkcmF3IG91dHNpZGUgdGhlIGxpbmVzXG5cdFx0c3BlY2lhbCA9IGpRdWVyeS5ldmVudC5zcGVjaWFsWyB0eXBlIF0gfHwge307XG5cdFx0aWYgKCAhb25seUhhbmRsZXJzICYmIHNwZWNpYWwudHJpZ2dlciAmJiBzcGVjaWFsLnRyaWdnZXIuYXBwbHkoIGVsZW0sIGRhdGEgKSA9PT0gZmFsc2UgKSB7XG5cdFx0XHRyZXR1cm47XG5cdFx0fVxuXG5cdFx0Ly8gRGV0ZXJtaW5lIGV2ZW50IHByb3BhZ2F0aW9uIHBhdGggaW4gYWR2YW5jZSwgcGVyIFczQyBldmVudHMgc3BlYyAoIzk5NTEpXG5cdFx0Ly8gQnViYmxlIHVwIHRvIGRvY3VtZW50LCB0aGVuIHRvIHdpbmRvdzsgd2F0Y2ggZm9yIGEgZ2xvYmFsIG93bmVyRG9jdW1lbnQgdmFyICgjOTcyNClcblx0XHRpZiAoICFvbmx5SGFuZGxlcnMgJiYgIXNwZWNpYWwubm9CdWJibGUgJiYgIWlzV2luZG93KCBlbGVtICkgKSB7XG5cblx0XHRcdGJ1YmJsZVR5cGUgPSBzcGVjaWFsLmRlbGVnYXRlVHlwZSB8fCB0eXBlO1xuXHRcdFx0aWYgKCAhcmZvY3VzTW9ycGgudGVzdCggYnViYmxlVHlwZSArIHR5cGUgKSApIHtcblx0XHRcdFx0Y3VyID0gY3VyLnBhcmVudE5vZGU7XG5cdFx0XHR9XG5cdFx0XHRmb3IgKCA7IGN1cjsgY3VyID0gY3VyLnBhcmVudE5vZGUgKSB7XG5cdFx0XHRcdGV2ZW50UGF0aC5wdXNoKCBjdXIgKTtcblx0XHRcdFx0dG1wID0gY3VyO1xuXHRcdFx0fVxuXG5cdFx0XHQvLyBPbmx5IGFkZCB3aW5kb3cgaWYgd2UgZ290IHRvIGRvY3VtZW50IChlLmcuLCBub3QgcGxhaW4gb2JqIG9yIGRldGFjaGVkIERPTSlcblx0XHRcdGlmICggdG1wID09PSAoIGVsZW0ub3duZXJEb2N1bWVudCB8fCBkb2N1bWVudCApICkge1xuXHRcdFx0XHRldmVudFBhdGgucHVzaCggdG1wLmRlZmF1bHRWaWV3IHx8IHRtcC5wYXJlbnRXaW5kb3cgfHwgd2luZG93ICk7XG5cdFx0XHR9XG5cdFx0fVxuXG5cdFx0Ly8gRmlyZSBoYW5kbGVycyBvbiB0aGUgZXZlbnQgcGF0aFxuXHRcdGkgPSAwO1xuXHRcdHdoaWxlICggKCBjdXIgPSBldmVudFBhdGhbIGkrKyBdICkgJiYgIWV2ZW50LmlzUHJvcGFnYXRpb25TdG9wcGVkKCkgKSB7XG5cdFx0XHRsYXN0RWxlbWVudCA9IGN1cjtcblx0XHRcdGV2ZW50LnR5cGUgPSBpID4gMSA/XG5cdFx0XHRcdGJ1YmJsZVR5cGUgOlxuXHRcdFx0XHRzcGVjaWFsLmJpbmRUeXBlIHx8IHR5cGU7XG5cblx0XHRcdC8vIGpRdWVyeSBoYW5kbGVyXG5cdFx0XHRoYW5kbGUgPSAoXG5cdFx0XHRcdFx0ZGF0YVByaXYuZ2V0KCBjdXIsIFwiZXZlbnRzXCIgKSB8fCBPYmplY3QuY3JlYXRlKCBudWxsIClcblx0XHRcdFx0KVsgZXZlbnQudHlwZSBdICYmXG5cdFx0XHRcdGRhdGFQcml2LmdldCggY3VyLCBcImhhbmRsZVwiICk7XG5cdFx0XHRpZiAoIGhhbmRsZSApIHtcblx0XHRcdFx0aGFuZGxlLmFwcGx5KCBjdXIsIGRhdGEgKTtcblx0XHRcdH1cblxuXHRcdFx0Ly8gTmF0aXZlIGhhbmRsZXJcblx0XHRcdGhhbmRsZSA9IG9udHlwZSAmJiBjdXJbIG9udHlwZSBdO1xuXHRcdFx0aWYgKCBoYW5kbGUgJiYgaGFuZGxlLmFwcGx5ICYmIGFjY2VwdERhdGEoIGN1ciApICkge1xuXHRcdFx0XHRldmVudC5yZXN1bHQgPSBoYW5kbGUuYXBwbHkoIGN1ciwgZGF0YSApO1xuXHRcdFx0XHRpZiAoIGV2ZW50LnJlc3VsdCA9PT0gZmFsc2UgKSB7XG5cdFx0XHRcdFx0ZXZlbnQucHJldmVudERlZmF1bHQoKTtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH1cblx0XHRldmVudC50eXBlID0gdHlwZTtcblxuXHRcdC8vIElmIG5vYm9keSBwcmV2ZW50ZWQgdGhlIGRlZmF1bHQgYWN0aW9uLCBkbyBpdCBub3dcblx0XHRpZiAoICFvbmx5SGFuZGxlcnMgJiYgIWV2ZW50LmlzRGVmYXVsdFByZXZlbnRlZCgpICkge1xuXG5cdFx0XHRpZiAoICggIXNwZWNpYWwuX2RlZmF1bHQgfHxcblx0XHRcdFx0c3BlY2lhbC5fZGVmYXVsdC5hcHBseSggZXZlbnRQYXRoLnBvcCgpLCBkYXRhICkgPT09IGZhbHNlICkgJiZcblx0XHRcdFx0YWNjZXB0RGF0YSggZWxlbSApICkge1xuXG5cdFx0XHRcdC8vIENhbGwgYSBuYXRpdmUgRE9NIG1ldGhvZCBvbiB0aGUgdGFyZ2V0IHdpdGggdGhlIHNhbWUgbmFtZSBhcyB0aGUgZXZlbnQuXG5cdFx0XHRcdC8vIERvbid0IGRvIGRlZmF1bHQgYWN0aW9ucyBvbiB3aW5kb3csIHRoYXQncyB3aGVyZSBnbG9iYWwgdmFyaWFibGVzIGJlICgjNjE3MClcblx0XHRcdFx0aWYgKCBvbnR5cGUgJiYgaXNGdW5jdGlvbiggZWxlbVsgdHlwZSBdICkgJiYgIWlzV2luZG93KCBlbGVtICkgKSB7XG5cblx0XHRcdFx0XHQvLyBEb24ndCByZS10cmlnZ2VyIGFuIG9uRk9PIGV2ZW50IHdoZW4gd2UgY2FsbCBpdHMgRk9PKCkgbWV0aG9kXG5cdFx0XHRcdFx0dG1wID0gZWxlbVsgb250eXBlIF07XG5cblx0XHRcdFx0XHRpZiAoIHRtcCApIHtcblx0XHRcdFx0XHRcdGVsZW1bIG9udHlwZSBdID0gbnVsbDtcblx0XHRcdFx0XHR9XG5cblx0XHRcdFx0XHQvLyBQcmV2ZW50IHJlLXRyaWdnZXJpbmcgb2YgdGhlIHNhbWUgZXZlbnQsIHNpbmNlIHdlIGFscmVhZHkgYnViYmxlZCBpdCBhYm92ZVxuXHRcdFx0XHRcdGpRdWVyeS5ldmVudC50cmlnZ2VyZWQgPSB0eXBlO1xuXG5cdFx0XHRcdFx0aWYgKCBldmVudC5pc1Byb3BhZ2F0aW9uU3RvcHBlZCgpICkge1xuXHRcdFx0XHRcdFx0bGFzdEVsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lciggdHlwZSwgc3RvcFByb3BhZ2F0aW9uQ2FsbGJhY2sgKTtcblx0XHRcdFx0XHR9XG5cblx0XHRcdFx0XHRlbGVtWyB0eXBlIF0oKTtcblxuXHRcdFx0XHRcdGlmICggZXZlbnQuaXNQcm9wYWdhdGlvblN0b3BwZWQoKSApIHtcblx0XHRcdFx0XHRcdGxhc3RFbGVtZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIoIHR5cGUsIHN0b3BQcm9wYWdhdGlvbkNhbGxiYWNrICk7XG5cdFx0XHRcdFx0fVxuXG5cdFx0XHRcdFx0alF1ZXJ5LmV2ZW50LnRyaWdnZXJlZCA9IHVuZGVmaW5lZDtcblxuXHRcdFx0XHRcdGlmICggdG1wICkge1xuXHRcdFx0XHRcdFx0ZWxlbVsgb250eXBlIF0gPSB0bXA7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fVxuXG5cdFx0cmV0dXJuIGV2ZW50LnJlc3VsdDtcblx0fSxcblxuXHQvLyBQaWdneWJhY2sgb24gYSBkb25vciBldmVudCB0byBzaW11bGF0ZSBhIGRpZmZlcmVudCBvbmVcblx0Ly8gVXNlZCBvbmx5IGZvciBgZm9jdXMoaW4gfCBvdXQpYCBldmVudHNcblx0c2ltdWxhdGU6IGZ1bmN0aW9uKCB0eXBlLCBlbGVtLCBldmVudCApIHtcblx0XHR2YXIgZSA9IGpRdWVyeS5leHRlbmQoXG5cdFx0XHRuZXcgalF1ZXJ5LkV2ZW50KCksXG5cdFx0XHRldmVudCxcblx0XHRcdHtcblx0XHRcdFx0dHlwZTogdHlwZSxcblx0XHRcdFx0aXNTaW11bGF0ZWQ6IHRydWVcblx0XHRcdH1cblx0XHQpO1xuXG5cdFx0alF1ZXJ5LmV2ZW50LnRyaWdnZXIoIGUsIG51bGwsIGVsZW0gKTtcblx0fVxuXG59ICk7XG5cbmpRdWVyeS5mbi5leHRlbmQoIHtcblxuXHR0cmlnZ2VyOiBmdW5jdGlvbiggdHlwZSwgZGF0YSApIHtcblx0XHRyZXR1cm4gdGhpcy5lYWNoKCBmdW5jdGlvbigpIHtcblx0XHRcdGpRdWVyeS5ldmVudC50cmlnZ2VyKCB0eXBlLCBkYXRhLCB0aGlzICk7XG5cdFx0fSApO1xuXHR9LFxuXHR0cmlnZ2VySGFuZGxlcjogZnVuY3Rpb24oIHR5cGUsIGRhdGEgKSB7XG5cdFx0dmFyIGVsZW0gPSB0aGlzWyAwIF07XG5cdFx0aWYgKCBlbGVtICkge1xuXHRcdFx0cmV0dXJuIGpRdWVyeS5ldmVudC50cmlnZ2VyKCB0eXBlLCBkYXRhLCBlbGVtLCB0cnVlICk7XG5cdFx0fVxuXHR9XG59ICk7XG5cblxuLy8gU3VwcG9ydDogRmlyZWZveCA8PTQ0XG4vLyBGaXJlZm94IGRvZXNuJ3QgaGF2ZSBmb2N1cyhpbiB8IG91dCkgZXZlbnRzXG4vLyBSZWxhdGVkIHRpY2tldCAtIGh0dHBzOi8vYnVnemlsbGEubW96aWxsYS5vcmcvc2hvd19idWcuY2dpP2lkPTY4Nzc4N1xuLy9cbi8vIFN1cHBvcnQ6IENocm9tZSA8PTQ4IC0gNDksIFNhZmFyaSA8PTkuMCAtIDkuMVxuLy8gZm9jdXMoaW4gfCBvdXQpIGV2ZW50cyBmaXJlIGFmdGVyIGZvY3VzICYgYmx1ciBldmVudHMsXG4vLyB3aGljaCBpcyBzcGVjIHZpb2xhdGlvbiAtIGh0dHA6Ly93d3cudzMub3JnL1RSL0RPTS1MZXZlbC0zLUV2ZW50cy8jZXZlbnRzLWZvY3VzZXZlbnQtZXZlbnQtb3JkZXJcbi8vIFJlbGF0ZWQgdGlja2V0IC0gaHR0cHM6Ly9idWdzLmNocm9taXVtLm9yZy9wL2Nocm9taXVtL2lzc3Vlcy9kZXRhaWw/aWQ9NDQ5ODU3XG5pZiAoICFzdXBwb3J0LmZvY3VzaW4gKSB7XG5cdGpRdWVyeS5lYWNoKCB7IGZvY3VzOiBcImZvY3VzaW5cIiwgYmx1cjogXCJmb2N1c291dFwiIH0sIGZ1bmN0aW9uKCBvcmlnLCBmaXggKSB7XG5cblx0XHQvLyBBdHRhY2ggYSBzaW5nbGUgY2FwdHVyaW5nIGhhbmRsZXIgb24gdGhlIGRvY3VtZW50IHdoaWxlIHNvbWVvbmUgd2FudHMgZm9jdXNpbi9mb2N1c291dFxuXHRcdHZhciBoYW5kbGVyID0gZnVuY3Rpb24oIGV2ZW50ICkge1xuXHRcdFx0alF1ZXJ5LmV2ZW50LnNpbXVsYXRlKCBmaXgsIGV2ZW50LnRhcmdldCwgalF1ZXJ5LmV2ZW50LmZpeCggZXZlbnQgKSApO1xuXHRcdH07XG5cblx0XHRqUXVlcnkuZXZlbnQuc3BlY2lhbFsgZml4IF0gPSB7XG5cdFx0XHRzZXR1cDogZnVuY3Rpb24oKSB7XG5cblx0XHRcdFx0Ly8gSGFuZGxlOiByZWd1bGFyIG5vZGVzICh2aWEgYHRoaXMub3duZXJEb2N1bWVudGApLCB3aW5kb3dcblx0XHRcdFx0Ly8gKHZpYSBgdGhpcy5kb2N1bWVudGApICYgZG9jdW1lbnQgKHZpYSBgdGhpc2ApLlxuXHRcdFx0XHR2YXIgZG9jID0gdGhpcy5vd25lckRvY3VtZW50IHx8IHRoaXMuZG9jdW1lbnQgfHwgdGhpcyxcblx0XHRcdFx0XHRhdHRhY2hlcyA9IGRhdGFQcml2LmFjY2VzcyggZG9jLCBmaXggKTtcblxuXHRcdFx0XHRpZiAoICFhdHRhY2hlcyApIHtcblx0XHRcdFx0XHRkb2MuYWRkRXZlbnRMaXN0ZW5lciggb3JpZywgaGFuZGxlciwgdHJ1ZSApO1xuXHRcdFx0XHR9XG5cdFx0XHRcdGRhdGFQcml2LmFjY2VzcyggZG9jLCBmaXgsICggYXR0YWNoZXMgfHwgMCApICsgMSApO1xuXHRcdFx0fSxcblx0XHRcdHRlYXJkb3duOiBmdW5jdGlvbigpIHtcblx0XHRcdFx0dmFyIGRvYyA9IHRoaXMub3duZXJEb2N1bWVudCB8fCB0aGlzLmRvY3VtZW50IHx8IHRoaXMsXG5cdFx0XHRcdFx0YXR0YWNoZXMgPSBkYXRhUHJpdi5hY2Nlc3MoIGRvYywgZml4ICkgLSAxO1xuXG5cdFx0XHRcdGlmICggIWF0dGFjaGVzICkge1xuXHRcdFx0XHRcdGRvYy5yZW1vdmVFdmVudExpc3RlbmVyKCBvcmlnLCBoYW5kbGVyLCB0cnVlICk7XG5cdFx0XHRcdFx0ZGF0YVByaXYucmVtb3ZlKCBkb2MsIGZpeCApO1xuXG5cdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0ZGF0YVByaXYuYWNjZXNzKCBkb2MsIGZpeCwgYXR0YWNoZXMgKTtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH07XG5cdH0gKTtcbn1cbnZhciBsb2NhdGlvbiA9IHdpbmRvdy5sb2NhdGlvbjtcblxudmFyIG5vbmNlID0geyBndWlkOiBEYXRlLm5vdygpIH07XG5cbnZhciBycXVlcnkgPSAoIC9cXD8vICk7XG5cblxuXG4vLyBDcm9zcy1icm93c2VyIHhtbCBwYXJzaW5nXG5qUXVlcnkucGFyc2VYTUwgPSBmdW5jdGlvbiggZGF0YSApIHtcblx0dmFyIHhtbDtcblx0aWYgKCAhZGF0YSB8fCB0eXBlb2YgZGF0YSAhPT0gXCJzdHJpbmdcIiApIHtcblx0XHRyZXR1cm4gbnVsbDtcblx0fVxuXG5cdC8vIFN1cHBvcnQ6IElFIDkgLSAxMSBvbmx5XG5cdC8vIElFIHRocm93cyBvbiBwYXJzZUZyb21TdHJpbmcgd2l0aCBpbnZhbGlkIGlucHV0LlxuXHR0cnkge1xuXHRcdHhtbCA9ICggbmV3IHdpbmRvdy5ET01QYXJzZXIoKSApLnBhcnNlRnJvbVN0cmluZyggZGF0YSwgXCJ0ZXh0L3htbFwiICk7XG5cdH0gY2F0Y2ggKCBlICkge1xuXHRcdHhtbCA9IHVuZGVmaW5lZDtcblx0fVxuXG5cdGlmICggIXhtbCB8fCB4bWwuZ2V0RWxlbWVudHNCeVRhZ05hbWUoIFwicGFyc2VyZXJyb3JcIiApLmxlbmd0aCApIHtcblx0XHRqUXVlcnkuZXJyb3IoIFwiSW52YWxpZCBYTUw6IFwiICsgZGF0YSApO1xuXHR9XG5cdHJldHVybiB4bWw7XG59O1xuXG5cbnZhclxuXHRyYnJhY2tldCA9IC9cXFtcXF0kLyxcblx0ckNSTEYgPSAvXFxyP1xcbi9nLFxuXHRyc3VibWl0dGVyVHlwZXMgPSAvXig/OnN1Ym1pdHxidXR0b258aW1hZ2V8cmVzZXR8ZmlsZSkkL2ksXG5cdHJzdWJtaXR0YWJsZSA9IC9eKD86aW5wdXR8c2VsZWN0fHRleHRhcmVhfGtleWdlbikvaTtcblxuZnVuY3Rpb24gYnVpbGRQYXJhbXMoIHByZWZpeCwgb2JqLCB0cmFkaXRpb25hbCwgYWRkICkge1xuXHR2YXIgbmFtZTtcblxuXHRpZiAoIEFycmF5LmlzQXJyYXkoIG9iaiApICkge1xuXG5cdFx0Ly8gU2VyaWFsaXplIGFycmF5IGl0ZW0uXG5cdFx0alF1ZXJ5LmVhY2goIG9iaiwgZnVuY3Rpb24oIGksIHYgKSB7XG5cdFx0XHRpZiAoIHRyYWRpdGlvbmFsIHx8IHJicmFja2V0LnRlc3QoIHByZWZpeCApICkge1xuXG5cdFx0XHRcdC8vIFRyZWF0IGVhY2ggYXJyYXkgaXRlbSBhcyBhIHNjYWxhci5cblx0XHRcdFx0YWRkKCBwcmVmaXgsIHYgKTtcblxuXHRcdFx0fSBlbHNlIHtcblxuXHRcdFx0XHQvLyBJdGVtIGlzIG5vbi1zY2FsYXIgKGFycmF5IG9yIG9iamVjdCksIGVuY29kZSBpdHMgbnVtZXJpYyBpbmRleC5cblx0XHRcdFx0YnVpbGRQYXJhbXMoXG5cdFx0XHRcdFx0cHJlZml4ICsgXCJbXCIgKyAoIHR5cGVvZiB2ID09PSBcIm9iamVjdFwiICYmIHYgIT0gbnVsbCA/IGkgOiBcIlwiICkgKyBcIl1cIixcblx0XHRcdFx0XHR2LFxuXHRcdFx0XHRcdHRyYWRpdGlvbmFsLFxuXHRcdFx0XHRcdGFkZFxuXHRcdFx0XHQpO1xuXHRcdFx0fVxuXHRcdH0gKTtcblxuXHR9IGVsc2UgaWYgKCAhdHJhZGl0aW9uYWwgJiYgdG9UeXBlKCBvYmogKSA9PT0gXCJvYmplY3RcIiApIHtcblxuXHRcdC8vIFNlcmlhbGl6ZSBvYmplY3QgaXRlbS5cblx0XHRmb3IgKCBuYW1lIGluIG9iaiApIHtcblx0XHRcdGJ1aWxkUGFyYW1zKCBwcmVmaXggKyBcIltcIiArIG5hbWUgKyBcIl1cIiwgb2JqWyBuYW1lIF0sIHRyYWRpdGlvbmFsLCBhZGQgKTtcblx0XHR9XG5cblx0fSBlbHNlIHtcblxuXHRcdC8vIFNlcmlhbGl6ZSBzY2FsYXIgaXRlbS5cblx0XHRhZGQoIHByZWZpeCwgb2JqICk7XG5cdH1cbn1cblxuLy8gU2VyaWFsaXplIGFuIGFycmF5IG9mIGZvcm0gZWxlbWVudHMgb3IgYSBzZXQgb2Zcbi8vIGtleS92YWx1ZXMgaW50byBhIHF1ZXJ5IHN0cmluZ1xualF1ZXJ5LnBhcmFtID0gZnVuY3Rpb24oIGEsIHRyYWRpdGlvbmFsICkge1xuXHR2YXIgcHJlZml4LFxuXHRcdHMgPSBbXSxcblx0XHRhZGQgPSBmdW5jdGlvbigga2V5LCB2YWx1ZU9yRnVuY3Rpb24gKSB7XG5cblx0XHRcdC8vIElmIHZhbHVlIGlzIGEgZnVuY3Rpb24sIGludm9rZSBpdCBhbmQgdXNlIGl0cyByZXR1cm4gdmFsdWVcblx0XHRcdHZhciB2YWx1ZSA9IGlzRnVuY3Rpb24oIHZhbHVlT3JGdW5jdGlvbiApID9cblx0XHRcdFx0dmFsdWVPckZ1bmN0aW9uKCkgOlxuXHRcdFx0XHR2YWx1ZU9yRnVuY3Rpb247XG5cblx0XHRcdHNbIHMubGVuZ3RoIF0gPSBlbmNvZGVVUklDb21wb25lbnQoIGtleSApICsgXCI9XCIgK1xuXHRcdFx0XHRlbmNvZGVVUklDb21wb25lbnQoIHZhbHVlID09IG51bGwgPyBcIlwiIDogdmFsdWUgKTtcblx0XHR9O1xuXG5cdGlmICggYSA9PSBudWxsICkge1xuXHRcdHJldHVybiBcIlwiO1xuXHR9XG5cblx0Ly8gSWYgYW4gYXJyYXkgd2FzIHBhc3NlZCBpbiwgYXNzdW1lIHRoYXQgaXQgaXMgYW4gYXJyYXkgb2YgZm9ybSBlbGVtZW50cy5cblx0aWYgKCBBcnJheS5pc0FycmF5KCBhICkgfHwgKCBhLmpxdWVyeSAmJiAhalF1ZXJ5LmlzUGxhaW5PYmplY3QoIGEgKSApICkge1xuXG5cdFx0Ly8gU2VyaWFsaXplIHRoZSBmb3JtIGVsZW1lbnRzXG5cdFx0alF1ZXJ5LmVhY2goIGEsIGZ1bmN0aW9uKCkge1xuXHRcdFx0YWRkKCB0aGlzLm5hbWUsIHRoaXMudmFsdWUgKTtcblx0XHR9ICk7XG5cblx0fSBlbHNlIHtcblxuXHRcdC8vIElmIHRyYWRpdGlvbmFsLCBlbmNvZGUgdGhlIFwib2xkXCIgd2F5ICh0aGUgd2F5IDEuMy4yIG9yIG9sZGVyXG5cdFx0Ly8gZGlkIGl0KSwgb3RoZXJ3aXNlIGVuY29kZSBwYXJhbXMgcmVjdXJzaXZlbHkuXG5cdFx0Zm9yICggcHJlZml4IGluIGEgKSB7XG5cdFx0XHRidWlsZFBhcmFtcyggcHJlZml4LCBhWyBwcmVmaXggXSwgdHJhZGl0aW9uYWwsIGFkZCApO1xuXHRcdH1cblx0fVxuXG5cdC8vIFJldHVybiB0aGUgcmVzdWx0aW5nIHNlcmlhbGl6YXRpb25cblx0cmV0dXJuIHMuam9pbiggXCImXCIgKTtcbn07XG5cbmpRdWVyeS5mbi5leHRlbmQoIHtcblx0c2VyaWFsaXplOiBmdW5jdGlvbigpIHtcblx0XHRyZXR1cm4galF1ZXJ5LnBhcmFtKCB0aGlzLnNlcmlhbGl6ZUFycmF5KCkgKTtcblx0fSxcblx0c2VyaWFsaXplQXJyYXk6IGZ1bmN0aW9uKCkge1xuXHRcdHJldHVybiB0aGlzLm1hcCggZnVuY3Rpb24oKSB7XG5cblx0XHRcdC8vIENhbiBhZGQgcHJvcEhvb2sgZm9yIFwiZWxlbWVudHNcIiB0byBmaWx0ZXIgb3IgYWRkIGZvcm0gZWxlbWVudHNcblx0XHRcdHZhciBlbGVtZW50cyA9IGpRdWVyeS5wcm9wKCB0aGlzLCBcImVsZW1lbnRzXCIgKTtcblx0XHRcdHJldHVybiBlbGVtZW50cyA/IGpRdWVyeS5tYWtlQXJyYXkoIGVsZW1lbnRzICkgOiB0aGlzO1xuXHRcdH0gKVxuXHRcdC5maWx0ZXIoIGZ1bmN0aW9uKCkge1xuXHRcdFx0dmFyIHR5cGUgPSB0aGlzLnR5cGU7XG5cblx0XHRcdC8vIFVzZSAuaXMoIFwiOmRpc2FibGVkXCIgKSBzbyB0aGF0IGZpZWxkc2V0W2Rpc2FibGVkXSB3b3Jrc1xuXHRcdFx0cmV0dXJuIHRoaXMubmFtZSAmJiAhalF1ZXJ5KCB0aGlzICkuaXMoIFwiOmRpc2FibGVkXCIgKSAmJlxuXHRcdFx0XHRyc3VibWl0dGFibGUudGVzdCggdGhpcy5ub2RlTmFtZSApICYmICFyc3VibWl0dGVyVHlwZXMudGVzdCggdHlwZSApICYmXG5cdFx0XHRcdCggdGhpcy5jaGVja2VkIHx8ICFyY2hlY2thYmxlVHlwZS50ZXN0KCB0eXBlICkgKTtcblx0XHR9IClcblx0XHQubWFwKCBmdW5jdGlvbiggX2ksIGVsZW0gKSB7XG5cdFx0XHR2YXIgdmFsID0galF1ZXJ5KCB0aGlzICkudmFsKCk7XG5cblx0XHRcdGlmICggdmFsID09IG51bGwgKSB7XG5cdFx0XHRcdHJldHVybiBudWxsO1xuXHRcdFx0fVxuXG5cdFx0XHRpZiAoIEFycmF5LmlzQXJyYXkoIHZhbCApICkge1xuXHRcdFx0XHRyZXR1cm4galF1ZXJ5Lm1hcCggdmFsLCBmdW5jdGlvbiggdmFsICkge1xuXHRcdFx0XHRcdHJldHVybiB7IG5hbWU6IGVsZW0ubmFtZSwgdmFsdWU6IHZhbC5yZXBsYWNlKCByQ1JMRiwgXCJcXHJcXG5cIiApIH07XG5cdFx0XHRcdH0gKTtcblx0XHRcdH1cblxuXHRcdFx0cmV0dXJuIHsgbmFtZTogZWxlbS5uYW1lLCB2YWx1ZTogdmFsLnJlcGxhY2UoIHJDUkxGLCBcIlxcclxcblwiICkgfTtcblx0XHR9ICkuZ2V0KCk7XG5cdH1cbn0gKTtcblxuXG52YXJcblx0cjIwID0gLyUyMC9nLFxuXHRyaGFzaCA9IC8jLiokLyxcblx0cmFudGlDYWNoZSA9IC8oWz8mXSlfPVteJl0qLyxcblx0cmhlYWRlcnMgPSAvXiguKj8pOlsgXFx0XSooW15cXHJcXG5dKikkL21nLFxuXG5cdC8vICM3NjUzLCAjODEyNSwgIzgxNTI6IGxvY2FsIHByb3RvY29sIGRldGVjdGlvblxuXHRybG9jYWxQcm90b2NvbCA9IC9eKD86YWJvdXR8YXBwfGFwcC1zdG9yYWdlfC4rLWV4dGVuc2lvbnxmaWxlfHJlc3x3aWRnZXQpOiQvLFxuXHRybm9Db250ZW50ID0gL14oPzpHRVR8SEVBRCkkLyxcblx0cnByb3RvY29sID0gL15cXC9cXC8vLFxuXG5cdC8qIFByZWZpbHRlcnNcblx0ICogMSkgVGhleSBhcmUgdXNlZnVsIHRvIGludHJvZHVjZSBjdXN0b20gZGF0YVR5cGVzIChzZWUgYWpheC9qc29ucC5qcyBmb3IgYW4gZXhhbXBsZSlcblx0ICogMikgVGhlc2UgYXJlIGNhbGxlZDpcblx0ICogICAgLSBCRUZPUkUgYXNraW5nIGZvciBhIHRyYW5zcG9ydFxuXHQgKiAgICAtIEFGVEVSIHBhcmFtIHNlcmlhbGl6YXRpb24gKHMuZGF0YSBpcyBhIHN0cmluZyBpZiBzLnByb2Nlc3NEYXRhIGlzIHRydWUpXG5cdCAqIDMpIGtleSBpcyB0aGUgZGF0YVR5cGVcblx0ICogNCkgdGhlIGNhdGNoYWxsIHN5bWJvbCBcIipcIiBjYW4gYmUgdXNlZFxuXHQgKiA1KSBleGVjdXRpb24gd2lsbCBzdGFydCB3aXRoIHRyYW5zcG9ydCBkYXRhVHlwZSBhbmQgVEhFTiBjb250aW51ZSBkb3duIHRvIFwiKlwiIGlmIG5lZWRlZFxuXHQgKi9cblx0cHJlZmlsdGVycyA9IHt9LFxuXG5cdC8qIFRyYW5zcG9ydHMgYmluZGluZ3Ncblx0ICogMSkga2V5IGlzIHRoZSBkYXRhVHlwZVxuXHQgKiAyKSB0aGUgY2F0Y2hhbGwgc3ltYm9sIFwiKlwiIGNhbiBiZSB1c2VkXG5cdCAqIDMpIHNlbGVjdGlvbiB3aWxsIHN0YXJ0IHdpdGggdHJhbnNwb3J0IGRhdGFUeXBlIGFuZCBUSEVOIGdvIHRvIFwiKlwiIGlmIG5lZWRlZFxuXHQgKi9cblx0dHJhbnNwb3J0cyA9IHt9LFxuXG5cdC8vIEF2b2lkIGNvbW1lbnQtcHJvbG9nIGNoYXIgc2VxdWVuY2UgKCMxMDA5OCk7IG11c3QgYXBwZWFzZSBsaW50IGFuZCBldmFkZSBjb21wcmVzc2lvblxuXHRhbGxUeXBlcyA9IFwiKi9cIi5jb25jYXQoIFwiKlwiICksXG5cblx0Ly8gQW5jaG9yIHRhZyBmb3IgcGFyc2luZyB0aGUgZG9jdW1lbnQgb3JpZ2luXG5cdG9yaWdpbkFuY2hvciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoIFwiYVwiICk7XG5cdG9yaWdpbkFuY2hvci5ocmVmID0gbG9jYXRpb24uaHJlZjtcblxuLy8gQmFzZSBcImNvbnN0cnVjdG9yXCIgZm9yIGpRdWVyeS5hamF4UHJlZmlsdGVyIGFuZCBqUXVlcnkuYWpheFRyYW5zcG9ydFxuZnVuY3Rpb24gYWRkVG9QcmVmaWx0ZXJzT3JUcmFuc3BvcnRzKCBzdHJ1Y3R1cmUgKSB7XG5cblx0Ly8gZGF0YVR5cGVFeHByZXNzaW9uIGlzIG9wdGlvbmFsIGFuZCBkZWZhdWx0cyB0byBcIipcIlxuXHRyZXR1cm4gZnVuY3Rpb24oIGRhdGFUeXBlRXhwcmVzc2lvbiwgZnVuYyApIHtcblxuXHRcdGlmICggdHlwZW9mIGRhdGFUeXBlRXhwcmVzc2lvbiAhPT0gXCJzdHJpbmdcIiApIHtcblx0XHRcdGZ1bmMgPSBkYXRhVHlwZUV4cHJlc3Npb247XG5cdFx0XHRkYXRhVHlwZUV4cHJlc3Npb24gPSBcIipcIjtcblx0XHR9XG5cblx0XHR2YXIgZGF0YVR5cGUsXG5cdFx0XHRpID0gMCxcblx0XHRcdGRhdGFUeXBlcyA9IGRhdGFUeXBlRXhwcmVzc2lvbi50b0xvd2VyQ2FzZSgpLm1hdGNoKCBybm90aHRtbHdoaXRlICkgfHwgW107XG5cblx0XHRpZiAoIGlzRnVuY3Rpb24oIGZ1bmMgKSApIHtcblxuXHRcdFx0Ly8gRm9yIGVhY2ggZGF0YVR5cGUgaW4gdGhlIGRhdGFUeXBlRXhwcmVzc2lvblxuXHRcdFx0d2hpbGUgKCAoIGRhdGFUeXBlID0gZGF0YVR5cGVzWyBpKysgXSApICkge1xuXG5cdFx0XHRcdC8vIFByZXBlbmQgaWYgcmVxdWVzdGVkXG5cdFx0XHRcdGlmICggZGF0YVR5cGVbIDAgXSA9PT0gXCIrXCIgKSB7XG5cdFx0XHRcdFx0ZGF0YVR5cGUgPSBkYXRhVHlwZS5zbGljZSggMSApIHx8IFwiKlwiO1xuXHRcdFx0XHRcdCggc3RydWN0dXJlWyBkYXRhVHlwZSBdID0gc3RydWN0dXJlWyBkYXRhVHlwZSBdIHx8IFtdICkudW5zaGlmdCggZnVuYyApO1xuXG5cdFx0XHRcdC8vIE90aGVyd2lzZSBhcHBlbmRcblx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHQoIHN0cnVjdHVyZVsgZGF0YVR5cGUgXSA9IHN0cnVjdHVyZVsgZGF0YVR5cGUgXSB8fCBbXSApLnB1c2goIGZ1bmMgKTtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH1cblx0fTtcbn1cblxuLy8gQmFzZSBpbnNwZWN0aW9uIGZ1bmN0aW9uIGZvciBwcmVmaWx0ZXJzIGFuZCB0cmFuc3BvcnRzXG5mdW5jdGlvbiBpbnNwZWN0UHJlZmlsdGVyc09yVHJhbnNwb3J0cyggc3RydWN0dXJlLCBvcHRpb25zLCBvcmlnaW5hbE9wdGlvbnMsIGpxWEhSICkge1xuXG5cdHZhciBpbnNwZWN0ZWQgPSB7fSxcblx0XHRzZWVraW5nVHJhbnNwb3J0ID0gKCBzdHJ1Y3R1cmUgPT09IHRyYW5zcG9ydHMgKTtcblxuXHRmdW5jdGlvbiBpbnNwZWN0KCBkYXRhVHlwZSApIHtcblx0XHR2YXIgc2VsZWN0ZWQ7XG5cdFx0aW5zcGVjdGVkWyBkYXRhVHlwZSBdID0gdHJ1ZTtcblx0XHRqUXVlcnkuZWFjaCggc3RydWN0dXJlWyBkYXRhVHlwZSBdIHx8IFtdLCBmdW5jdGlvbiggXywgcHJlZmlsdGVyT3JGYWN0b3J5ICkge1xuXHRcdFx0dmFyIGRhdGFUeXBlT3JUcmFuc3BvcnQgPSBwcmVmaWx0ZXJPckZhY3RvcnkoIG9wdGlvbnMsIG9yaWdpbmFsT3B0aW9ucywganFYSFIgKTtcblx0XHRcdGlmICggdHlwZW9mIGRhdGFUeXBlT3JUcmFuc3BvcnQgPT09IFwic3RyaW5nXCIgJiZcblx0XHRcdFx0IXNlZWtpbmdUcmFuc3BvcnQgJiYgIWluc3BlY3RlZFsgZGF0YVR5cGVPclRyYW5zcG9ydCBdICkge1xuXG5cdFx0XHRcdG9wdGlvbnMuZGF0YVR5cGVzLnVuc2hpZnQoIGRhdGFUeXBlT3JUcmFuc3BvcnQgKTtcblx0XHRcdFx0aW5zcGVjdCggZGF0YVR5cGVPclRyYW5zcG9ydCApO1xuXHRcdFx0XHRyZXR1cm4gZmFsc2U7XG5cdFx0XHR9IGVsc2UgaWYgKCBzZWVraW5nVHJhbnNwb3J0ICkge1xuXHRcdFx0XHRyZXR1cm4gISggc2VsZWN0ZWQgPSBkYXRhVHlwZU9yVHJhbnNwb3J0ICk7XG5cdFx0XHR9XG5cdFx0fSApO1xuXHRcdHJldHVybiBzZWxlY3RlZDtcblx0fVxuXG5cdHJldHVybiBpbnNwZWN0KCBvcHRpb25zLmRhdGFUeXBlc1sgMCBdICkgfHwgIWluc3BlY3RlZFsgXCIqXCIgXSAmJiBpbnNwZWN0KCBcIipcIiApO1xufVxuXG4vLyBBIHNwZWNpYWwgZXh0ZW5kIGZvciBhamF4IG9wdGlvbnNcbi8vIHRoYXQgdGFrZXMgXCJmbGF0XCIgb3B0aW9ucyAobm90IHRvIGJlIGRlZXAgZXh0ZW5kZWQpXG4vLyBGaXhlcyAjOTg4N1xuZnVuY3Rpb24gYWpheEV4dGVuZCggdGFyZ2V0LCBzcmMgKSB7XG5cdHZhciBrZXksIGRlZXAsXG5cdFx0ZmxhdE9wdGlvbnMgPSBqUXVlcnkuYWpheFNldHRpbmdzLmZsYXRPcHRpb25zIHx8IHt9O1xuXG5cdGZvciAoIGtleSBpbiBzcmMgKSB7XG5cdFx0aWYgKCBzcmNbIGtleSBdICE9PSB1bmRlZmluZWQgKSB7XG5cdFx0XHQoIGZsYXRPcHRpb25zWyBrZXkgXSA/IHRhcmdldCA6ICggZGVlcCB8fCAoIGRlZXAgPSB7fSApICkgKVsga2V5IF0gPSBzcmNbIGtleSBdO1xuXHRcdH1cblx0fVxuXHRpZiAoIGRlZXAgKSB7XG5cdFx0alF1ZXJ5LmV4dGVuZCggdHJ1ZSwgdGFyZ2V0LCBkZWVwICk7XG5cdH1cblxuXHRyZXR1cm4gdGFyZ2V0O1xufVxuXG4vKiBIYW5kbGVzIHJlc3BvbnNlcyB0byBhbiBhamF4IHJlcXVlc3Q6XG4gKiAtIGZpbmRzIHRoZSByaWdodCBkYXRhVHlwZSAobWVkaWF0ZXMgYmV0d2VlbiBjb250ZW50LXR5cGUgYW5kIGV4cGVjdGVkIGRhdGFUeXBlKVxuICogLSByZXR1cm5zIHRoZSBjb3JyZXNwb25kaW5nIHJlc3BvbnNlXG4gKi9cbmZ1bmN0aW9uIGFqYXhIYW5kbGVSZXNwb25zZXMoIHMsIGpxWEhSLCByZXNwb25zZXMgKSB7XG5cblx0dmFyIGN0LCB0eXBlLCBmaW5hbERhdGFUeXBlLCBmaXJzdERhdGFUeXBlLFxuXHRcdGNvbnRlbnRzID0gcy5jb250ZW50cyxcblx0XHRkYXRhVHlwZXMgPSBzLmRhdGFUeXBlcztcblxuXHQvLyBSZW1vdmUgYXV0byBkYXRhVHlwZSBhbmQgZ2V0IGNvbnRlbnQtdHlwZSBpbiB0aGUgcHJvY2Vzc1xuXHR3aGlsZSAoIGRhdGFUeXBlc1sgMCBdID09PSBcIipcIiApIHtcblx0XHRkYXRhVHlwZXMuc2hpZnQoKTtcblx0XHRpZiAoIGN0ID09PSB1bmRlZmluZWQgKSB7XG5cdFx0XHRjdCA9IHMubWltZVR5cGUgfHwganFYSFIuZ2V0UmVzcG9uc2VIZWFkZXIoIFwiQ29udGVudC1UeXBlXCIgKTtcblx0XHR9XG5cdH1cblxuXHQvLyBDaGVjayBpZiB3ZSdyZSBkZWFsaW5nIHdpdGggYSBrbm93biBjb250ZW50LXR5cGVcblx0aWYgKCBjdCApIHtcblx0XHRmb3IgKCB0eXBlIGluIGNvbnRlbnRzICkge1xuXHRcdFx0aWYgKCBjb250ZW50c1sgdHlwZSBdICYmIGNvbnRlbnRzWyB0eXBlIF0udGVzdCggY3QgKSApIHtcblx0XHRcdFx0ZGF0YVR5cGVzLnVuc2hpZnQoIHR5cGUgKTtcblx0XHRcdFx0YnJlYWs7XG5cdFx0XHR9XG5cdFx0fVxuXHR9XG5cblx0Ly8gQ2hlY2sgdG8gc2VlIGlmIHdlIGhhdmUgYSByZXNwb25zZSBmb3IgdGhlIGV4cGVjdGVkIGRhdGFUeXBlXG5cdGlmICggZGF0YVR5cGVzWyAwIF0gaW4gcmVzcG9uc2VzICkge1xuXHRcdGZpbmFsRGF0YVR5cGUgPSBkYXRhVHlwZXNbIDAgXTtcblx0fSBlbHNlIHtcblxuXHRcdC8vIFRyeSBjb252ZXJ0aWJsZSBkYXRhVHlwZXNcblx0XHRmb3IgKCB0eXBlIGluIHJlc3BvbnNlcyApIHtcblx0XHRcdGlmICggIWRhdGFUeXBlc1sgMCBdIHx8IHMuY29udmVydGVyc1sgdHlwZSArIFwiIFwiICsgZGF0YVR5cGVzWyAwIF0gXSApIHtcblx0XHRcdFx0ZmluYWxEYXRhVHlwZSA9IHR5cGU7XG5cdFx0XHRcdGJyZWFrO1xuXHRcdFx0fVxuXHRcdFx0aWYgKCAhZmlyc3REYXRhVHlwZSApIHtcblx0XHRcdFx0Zmlyc3REYXRhVHlwZSA9IHR5cGU7XG5cdFx0XHR9XG5cdFx0fVxuXG5cdFx0Ly8gT3IganVzdCB1c2UgZmlyc3Qgb25lXG5cdFx0ZmluYWxEYXRhVHlwZSA9IGZpbmFsRGF0YVR5cGUgfHwgZmlyc3REYXRhVHlwZTtcblx0fVxuXG5cdC8vIElmIHdlIGZvdW5kIGEgZGF0YVR5cGVcblx0Ly8gV2UgYWRkIHRoZSBkYXRhVHlwZSB0byB0aGUgbGlzdCBpZiBuZWVkZWRcblx0Ly8gYW5kIHJldHVybiB0aGUgY29ycmVzcG9uZGluZyByZXNwb25zZVxuXHRpZiAoIGZpbmFsRGF0YVR5cGUgKSB7XG5cdFx0aWYgKCBmaW5hbERhdGFUeXBlICE9PSBkYXRhVHlwZXNbIDAgXSApIHtcblx0XHRcdGRhdGFUeXBlcy51bnNoaWZ0KCBmaW5hbERhdGFUeXBlICk7XG5cdFx0fVxuXHRcdHJldHVybiByZXNwb25zZXNbIGZpbmFsRGF0YVR5cGUgXTtcblx0fVxufVxuXG4vKiBDaGFpbiBjb252ZXJzaW9ucyBnaXZlbiB0aGUgcmVxdWVzdCBhbmQgdGhlIG9yaWdpbmFsIHJlc3BvbnNlXG4gKiBBbHNvIHNldHMgdGhlIHJlc3BvbnNlWFhYIGZpZWxkcyBvbiB0aGUganFYSFIgaW5zdGFuY2VcbiAqL1xuZnVuY3Rpb24gYWpheENvbnZlcnQoIHMsIHJlc3BvbnNlLCBqcVhIUiwgaXNTdWNjZXNzICkge1xuXHR2YXIgY29udjIsIGN1cnJlbnQsIGNvbnYsIHRtcCwgcHJldixcblx0XHRjb252ZXJ0ZXJzID0ge30sXG5cblx0XHQvLyBXb3JrIHdpdGggYSBjb3B5IG9mIGRhdGFUeXBlcyBpbiBjYXNlIHdlIG5lZWQgdG8gbW9kaWZ5IGl0IGZvciBjb252ZXJzaW9uXG5cdFx0ZGF0YVR5cGVzID0gcy5kYXRhVHlwZXMuc2xpY2UoKTtcblxuXHQvLyBDcmVhdGUgY29udmVydGVycyBtYXAgd2l0aCBsb3dlcmNhc2VkIGtleXNcblx0aWYgKCBkYXRhVHlwZXNbIDEgXSApIHtcblx0XHRmb3IgKCBjb252IGluIHMuY29udmVydGVycyApIHtcblx0XHRcdGNvbnZlcnRlcnNbIGNvbnYudG9Mb3dlckNhc2UoKSBdID0gcy5jb252ZXJ0ZXJzWyBjb252IF07XG5cdFx0fVxuXHR9XG5cblx0Y3VycmVudCA9IGRhdGFUeXBlcy5zaGlmdCgpO1xuXG5cdC8vIENvbnZlcnQgdG8gZWFjaCBzZXF1ZW50aWFsIGRhdGFUeXBlXG5cdHdoaWxlICggY3VycmVudCApIHtcblxuXHRcdGlmICggcy5yZXNwb25zZUZpZWxkc1sgY3VycmVudCBdICkge1xuXHRcdFx0anFYSFJbIHMucmVzcG9uc2VGaWVsZHNbIGN1cnJlbnQgXSBdID0gcmVzcG9uc2U7XG5cdFx0fVxuXG5cdFx0Ly8gQXBwbHkgdGhlIGRhdGFGaWx0ZXIgaWYgcHJvdmlkZWRcblx0XHRpZiAoICFwcmV2ICYmIGlzU3VjY2VzcyAmJiBzLmRhdGFGaWx0ZXIgKSB7XG5cdFx0XHRyZXNwb25zZSA9IHMuZGF0YUZpbHRlciggcmVzcG9uc2UsIHMuZGF0YVR5cGUgKTtcblx0XHR9XG5cblx0XHRwcmV2ID0gY3VycmVudDtcblx0XHRjdXJyZW50ID0gZGF0YVR5cGVzLnNoaWZ0KCk7XG5cblx0XHRpZiAoIGN1cnJlbnQgKSB7XG5cblx0XHRcdC8vIFRoZXJlJ3Mgb25seSB3b3JrIHRvIGRvIGlmIGN1cnJlbnQgZGF0YVR5cGUgaXMgbm9uLWF1dG9cblx0XHRcdGlmICggY3VycmVudCA9PT0gXCIqXCIgKSB7XG5cblx0XHRcdFx0Y3VycmVudCA9IHByZXY7XG5cblx0XHRcdC8vIENvbnZlcnQgcmVzcG9uc2UgaWYgcHJldiBkYXRhVHlwZSBpcyBub24tYXV0byBhbmQgZGlmZmVycyBmcm9tIGN1cnJlbnRcblx0XHRcdH0gZWxzZSBpZiAoIHByZXYgIT09IFwiKlwiICYmIHByZXYgIT09IGN1cnJlbnQgKSB7XG5cblx0XHRcdFx0Ly8gU2VlayBhIGRpcmVjdCBjb252ZXJ0ZXJcblx0XHRcdFx0Y29udiA9IGNvbnZlcnRlcnNbIHByZXYgKyBcIiBcIiArIGN1cnJlbnQgXSB8fCBjb252ZXJ0ZXJzWyBcIiogXCIgKyBjdXJyZW50IF07XG5cblx0XHRcdFx0Ly8gSWYgbm9uZSBmb3VuZCwgc2VlayBhIHBhaXJcblx0XHRcdFx0aWYgKCAhY29udiApIHtcblx0XHRcdFx0XHRmb3IgKCBjb252MiBpbiBjb252ZXJ0ZXJzICkge1xuXG5cdFx0XHRcdFx0XHQvLyBJZiBjb252MiBvdXRwdXRzIGN1cnJlbnRcblx0XHRcdFx0XHRcdHRtcCA9IGNvbnYyLnNwbGl0KCBcIiBcIiApO1xuXHRcdFx0XHRcdFx0aWYgKCB0bXBbIDEgXSA9PT0gY3VycmVudCApIHtcblxuXHRcdFx0XHRcdFx0XHQvLyBJZiBwcmV2IGNhbiBiZSBjb252ZXJ0ZWQgdG8gYWNjZXB0ZWQgaW5wdXRcblx0XHRcdFx0XHRcdFx0Y29udiA9IGNvbnZlcnRlcnNbIHByZXYgKyBcIiBcIiArIHRtcFsgMCBdIF0gfHxcblx0XHRcdFx0XHRcdFx0XHRjb252ZXJ0ZXJzWyBcIiogXCIgKyB0bXBbIDAgXSBdO1xuXHRcdFx0XHRcdFx0XHRpZiAoIGNvbnYgKSB7XG5cblx0XHRcdFx0XHRcdFx0XHQvLyBDb25kZW5zZSBlcXVpdmFsZW5jZSBjb252ZXJ0ZXJzXG5cdFx0XHRcdFx0XHRcdFx0aWYgKCBjb252ID09PSB0cnVlICkge1xuXHRcdFx0XHRcdFx0XHRcdFx0Y29udiA9IGNvbnZlcnRlcnNbIGNvbnYyIF07XG5cblx0XHRcdFx0XHRcdFx0XHQvLyBPdGhlcndpc2UsIGluc2VydCB0aGUgaW50ZXJtZWRpYXRlIGRhdGFUeXBlXG5cdFx0XHRcdFx0XHRcdFx0fSBlbHNlIGlmICggY29udmVydGVyc1sgY29udjIgXSAhPT0gdHJ1ZSApIHtcblx0XHRcdFx0XHRcdFx0XHRcdGN1cnJlbnQgPSB0bXBbIDAgXTtcblx0XHRcdFx0XHRcdFx0XHRcdGRhdGFUeXBlcy51bnNoaWZ0KCB0bXBbIDEgXSApO1xuXHRcdFx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdFx0XHRicmVhaztcblx0XHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXG5cdFx0XHRcdC8vIEFwcGx5IGNvbnZlcnRlciAoaWYgbm90IGFuIGVxdWl2YWxlbmNlKVxuXHRcdFx0XHRpZiAoIGNvbnYgIT09IHRydWUgKSB7XG5cblx0XHRcdFx0XHQvLyBVbmxlc3MgZXJyb3JzIGFyZSBhbGxvd2VkIHRvIGJ1YmJsZSwgY2F0Y2ggYW5kIHJldHVybiB0aGVtXG5cdFx0XHRcdFx0aWYgKCBjb252ICYmIHMudGhyb3dzICkge1xuXHRcdFx0XHRcdFx0cmVzcG9uc2UgPSBjb252KCByZXNwb25zZSApO1xuXHRcdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0XHR0cnkge1xuXHRcdFx0XHRcdFx0XHRyZXNwb25zZSA9IGNvbnYoIHJlc3BvbnNlICk7XG5cdFx0XHRcdFx0XHR9IGNhdGNoICggZSApIHtcblx0XHRcdFx0XHRcdFx0cmV0dXJuIHtcblx0XHRcdFx0XHRcdFx0XHRzdGF0ZTogXCJwYXJzZXJlcnJvclwiLFxuXHRcdFx0XHRcdFx0XHRcdGVycm9yOiBjb252ID8gZSA6IFwiTm8gY29udmVyc2lvbiBmcm9tIFwiICsgcHJldiArIFwiIHRvIFwiICsgY3VycmVudFxuXHRcdFx0XHRcdFx0XHR9O1xuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH1cblx0fVxuXG5cdHJldHVybiB7IHN0YXRlOiBcInN1Y2Nlc3NcIiwgZGF0YTogcmVzcG9uc2UgfTtcbn1cblxualF1ZXJ5LmV4dGVuZCgge1xuXG5cdC8vIENvdW50ZXIgZm9yIGhvbGRpbmcgdGhlIG51bWJlciBvZiBhY3RpdmUgcXVlcmllc1xuXHRhY3RpdmU6IDAsXG5cblx0Ly8gTGFzdC1Nb2RpZmllZCBoZWFkZXIgY2FjaGUgZm9yIG5leHQgcmVxdWVzdFxuXHRsYXN0TW9kaWZpZWQ6IHt9LFxuXHRldGFnOiB7fSxcblxuXHRhamF4U2V0dGluZ3M6IHtcblx0XHR1cmw6IGxvY2F0aW9uLmhyZWYsXG5cdFx0dHlwZTogXCJHRVRcIixcblx0XHRpc0xvY2FsOiBybG9jYWxQcm90b2NvbC50ZXN0KCBsb2NhdGlvbi5wcm90b2NvbCApLFxuXHRcdGdsb2JhbDogdHJ1ZSxcblx0XHRwcm9jZXNzRGF0YTogdHJ1ZSxcblx0XHRhc3luYzogdHJ1ZSxcblx0XHRjb250ZW50VHlwZTogXCJhcHBsaWNhdGlvbi94LXd3dy1mb3JtLXVybGVuY29kZWQ7IGNoYXJzZXQ9VVRGLThcIixcblxuXHRcdC8qXG5cdFx0dGltZW91dDogMCxcblx0XHRkYXRhOiBudWxsLFxuXHRcdGRhdGFUeXBlOiBudWxsLFxuXHRcdHVzZXJuYW1lOiBudWxsLFxuXHRcdHBhc3N3b3JkOiBudWxsLFxuXHRcdGNhY2hlOiBudWxsLFxuXHRcdHRocm93czogZmFsc2UsXG5cdFx0dHJhZGl0aW9uYWw6IGZhbHNlLFxuXHRcdGhlYWRlcnM6IHt9LFxuXHRcdCovXG5cblx0XHRhY2NlcHRzOiB7XG5cdFx0XHRcIipcIjogYWxsVHlwZXMsXG5cdFx0XHR0ZXh0OiBcInRleHQvcGxhaW5cIixcblx0XHRcdGh0bWw6IFwidGV4dC9odG1sXCIsXG5cdFx0XHR4bWw6IFwiYXBwbGljYXRpb24veG1sLCB0ZXh0L3htbFwiLFxuXHRcdFx0anNvbjogXCJhcHBsaWNhdGlvbi9qc29uLCB0ZXh0L2phdmFzY3JpcHRcIlxuXHRcdH0sXG5cblx0XHRjb250ZW50czoge1xuXHRcdFx0eG1sOiAvXFxieG1sXFxiLyxcblx0XHRcdGh0bWw6IC9cXGJodG1sLyxcblx0XHRcdGpzb246IC9cXGJqc29uXFxiL1xuXHRcdH0sXG5cblx0XHRyZXNwb25zZUZpZWxkczoge1xuXHRcdFx0eG1sOiBcInJlc3BvbnNlWE1MXCIsXG5cdFx0XHR0ZXh0OiBcInJlc3BvbnNlVGV4dFwiLFxuXHRcdFx0anNvbjogXCJyZXNwb25zZUpTT05cIlxuXHRcdH0sXG5cblx0XHQvLyBEYXRhIGNvbnZlcnRlcnNcblx0XHQvLyBLZXlzIHNlcGFyYXRlIHNvdXJjZSAob3IgY2F0Y2hhbGwgXCIqXCIpIGFuZCBkZXN0aW5hdGlvbiB0eXBlcyB3aXRoIGEgc2luZ2xlIHNwYWNlXG5cdFx0Y29udmVydGVyczoge1xuXG5cdFx0XHQvLyBDb252ZXJ0IGFueXRoaW5nIHRvIHRleHRcblx0XHRcdFwiKiB0ZXh0XCI6IFN0cmluZyxcblxuXHRcdFx0Ly8gVGV4dCB0byBodG1sICh0cnVlID0gbm8gdHJhbnNmb3JtYXRpb24pXG5cdFx0XHRcInRleHQgaHRtbFwiOiB0cnVlLFxuXG5cdFx0XHQvLyBFdmFsdWF0ZSB0ZXh0IGFzIGEganNvbiBleHByZXNzaW9uXG5cdFx0XHRcInRleHQganNvblwiOiBKU09OLnBhcnNlLFxuXG5cdFx0XHQvLyBQYXJzZSB0ZXh0IGFzIHhtbFxuXHRcdFx0XCJ0ZXh0IHhtbFwiOiBqUXVlcnkucGFyc2VYTUxcblx0XHR9LFxuXG5cdFx0Ly8gRm9yIG9wdGlvbnMgdGhhdCBzaG91bGRuJ3QgYmUgZGVlcCBleHRlbmRlZDpcblx0XHQvLyB5b3UgY2FuIGFkZCB5b3VyIG93biBjdXN0b20gb3B0aW9ucyBoZXJlIGlmXG5cdFx0Ly8gYW5kIHdoZW4geW91IGNyZWF0ZSBvbmUgdGhhdCBzaG91bGRuJ3QgYmVcblx0XHQvLyBkZWVwIGV4dGVuZGVkIChzZWUgYWpheEV4dGVuZClcblx0XHRmbGF0T3B0aW9uczoge1xuXHRcdFx0dXJsOiB0cnVlLFxuXHRcdFx0Y29udGV4dDogdHJ1ZVxuXHRcdH1cblx0fSxcblxuXHQvLyBDcmVhdGVzIGEgZnVsbCBmbGVkZ2VkIHNldHRpbmdzIG9iamVjdCBpbnRvIHRhcmdldFxuXHQvLyB3aXRoIGJvdGggYWpheFNldHRpbmdzIGFuZCBzZXR0aW5ncyBmaWVsZHMuXG5cdC8vIElmIHRhcmdldCBpcyBvbWl0dGVkLCB3cml0ZXMgaW50byBhamF4U2V0dGluZ3MuXG5cdGFqYXhTZXR1cDogZnVuY3Rpb24oIHRhcmdldCwgc2V0dGluZ3MgKSB7XG5cdFx0cmV0dXJuIHNldHRpbmdzID9cblxuXHRcdFx0Ly8gQnVpbGRpbmcgYSBzZXR0aW5ncyBvYmplY3Rcblx0XHRcdGFqYXhFeHRlbmQoIGFqYXhFeHRlbmQoIHRhcmdldCwgalF1ZXJ5LmFqYXhTZXR0aW5ncyApLCBzZXR0aW5ncyApIDpcblxuXHRcdFx0Ly8gRXh0ZW5kaW5nIGFqYXhTZXR0aW5nc1xuXHRcdFx0YWpheEV4dGVuZCggalF1ZXJ5LmFqYXhTZXR0aW5ncywgdGFyZ2V0ICk7XG5cdH0sXG5cblx0YWpheFByZWZpbHRlcjogYWRkVG9QcmVmaWx0ZXJzT3JUcmFuc3BvcnRzKCBwcmVmaWx0ZXJzICksXG5cdGFqYXhUcmFuc3BvcnQ6IGFkZFRvUHJlZmlsdGVyc09yVHJhbnNwb3J0cyggdHJhbnNwb3J0cyApLFxuXG5cdC8vIE1haW4gbWV0aG9kXG5cdGFqYXg6IGZ1bmN0aW9uKCB1cmwsIG9wdGlvbnMgKSB7XG5cblx0XHQvLyBJZiB1cmwgaXMgYW4gb2JqZWN0LCBzaW11bGF0ZSBwcmUtMS41IHNpZ25hdHVyZVxuXHRcdGlmICggdHlwZW9mIHVybCA9PT0gXCJvYmplY3RcIiApIHtcblx0XHRcdG9wdGlvbnMgPSB1cmw7XG5cdFx0XHR1cmwgPSB1bmRlZmluZWQ7XG5cdFx0fVxuXG5cdFx0Ly8gRm9yY2Ugb3B0aW9ucyB0byBiZSBhbiBvYmplY3Rcblx0XHRvcHRpb25zID0gb3B0aW9ucyB8fCB7fTtcblxuXHRcdHZhciB0cmFuc3BvcnQsXG5cblx0XHRcdC8vIFVSTCB3aXRob3V0IGFudGktY2FjaGUgcGFyYW1cblx0XHRcdGNhY2hlVVJMLFxuXG5cdFx0XHQvLyBSZXNwb25zZSBoZWFkZXJzXG5cdFx0XHRyZXNwb25zZUhlYWRlcnNTdHJpbmcsXG5cdFx0XHRyZXNwb25zZUhlYWRlcnMsXG5cblx0XHRcdC8vIHRpbWVvdXQgaGFuZGxlXG5cdFx0XHR0aW1lb3V0VGltZXIsXG5cblx0XHRcdC8vIFVybCBjbGVhbnVwIHZhclxuXHRcdFx0dXJsQW5jaG9yLFxuXG5cdFx0XHQvLyBSZXF1ZXN0IHN0YXRlIChiZWNvbWVzIGZhbHNlIHVwb24gc2VuZCBhbmQgdHJ1ZSB1cG9uIGNvbXBsZXRpb24pXG5cdFx0XHRjb21wbGV0ZWQsXG5cblx0XHRcdC8vIFRvIGtub3cgaWYgZ2xvYmFsIGV2ZW50cyBhcmUgdG8gYmUgZGlzcGF0Y2hlZFxuXHRcdFx0ZmlyZUdsb2JhbHMsXG5cblx0XHRcdC8vIExvb3AgdmFyaWFibGVcblx0XHRcdGksXG5cblx0XHRcdC8vIHVuY2FjaGVkIHBhcnQgb2YgdGhlIHVybFxuXHRcdFx0dW5jYWNoZWQsXG5cblx0XHRcdC8vIENyZWF0ZSB0aGUgZmluYWwgb3B0aW9ucyBvYmplY3Rcblx0XHRcdHMgPSBqUXVlcnkuYWpheFNldHVwKCB7fSwgb3B0aW9ucyApLFxuXG5cdFx0XHQvLyBDYWxsYmFja3MgY29udGV4dFxuXHRcdFx0Y2FsbGJhY2tDb250ZXh0ID0gcy5jb250ZXh0IHx8IHMsXG5cblx0XHRcdC8vIENvbnRleHQgZm9yIGdsb2JhbCBldmVudHMgaXMgY2FsbGJhY2tDb250ZXh0IGlmIGl0IGlzIGEgRE9NIG5vZGUgb3IgalF1ZXJ5IGNvbGxlY3Rpb25cblx0XHRcdGdsb2JhbEV2ZW50Q29udGV4dCA9IHMuY29udGV4dCAmJlxuXHRcdFx0XHQoIGNhbGxiYWNrQ29udGV4dC5ub2RlVHlwZSB8fCBjYWxsYmFja0NvbnRleHQuanF1ZXJ5ICkgP1xuXHRcdFx0XHRcdGpRdWVyeSggY2FsbGJhY2tDb250ZXh0ICkgOlxuXHRcdFx0XHRcdGpRdWVyeS5ldmVudCxcblxuXHRcdFx0Ly8gRGVmZXJyZWRzXG5cdFx0XHRkZWZlcnJlZCA9IGpRdWVyeS5EZWZlcnJlZCgpLFxuXHRcdFx0Y29tcGxldGVEZWZlcnJlZCA9IGpRdWVyeS5DYWxsYmFja3MoIFwib25jZSBtZW1vcnlcIiApLFxuXG5cdFx0XHQvLyBTdGF0dXMtZGVwZW5kZW50IGNhbGxiYWNrc1xuXHRcdFx0c3RhdHVzQ29kZSA9IHMuc3RhdHVzQ29kZSB8fCB7fSxcblxuXHRcdFx0Ly8gSGVhZGVycyAodGhleSBhcmUgc2VudCBhbGwgYXQgb25jZSlcblx0XHRcdHJlcXVlc3RIZWFkZXJzID0ge30sXG5cdFx0XHRyZXF1ZXN0SGVhZGVyc05hbWVzID0ge30sXG5cblx0XHRcdC8vIERlZmF1bHQgYWJvcnQgbWVzc2FnZVxuXHRcdFx0c3RyQWJvcnQgPSBcImNhbmNlbGVkXCIsXG5cblx0XHRcdC8vIEZha2UgeGhyXG5cdFx0XHRqcVhIUiA9IHtcblx0XHRcdFx0cmVhZHlTdGF0ZTogMCxcblxuXHRcdFx0XHQvLyBCdWlsZHMgaGVhZGVycyBoYXNodGFibGUgaWYgbmVlZGVkXG5cdFx0XHRcdGdldFJlc3BvbnNlSGVhZGVyOiBmdW5jdGlvbigga2V5ICkge1xuXHRcdFx0XHRcdHZhciBtYXRjaDtcblx0XHRcdFx0XHRpZiAoIGNvbXBsZXRlZCApIHtcblx0XHRcdFx0XHRcdGlmICggIXJlc3BvbnNlSGVhZGVycyApIHtcblx0XHRcdFx0XHRcdFx0cmVzcG9uc2VIZWFkZXJzID0ge307XG5cdFx0XHRcdFx0XHRcdHdoaWxlICggKCBtYXRjaCA9IHJoZWFkZXJzLmV4ZWMoIHJlc3BvbnNlSGVhZGVyc1N0cmluZyApICkgKSB7XG5cdFx0XHRcdFx0XHRcdFx0cmVzcG9uc2VIZWFkZXJzWyBtYXRjaFsgMSBdLnRvTG93ZXJDYXNlKCkgKyBcIiBcIiBdID1cblx0XHRcdFx0XHRcdFx0XHRcdCggcmVzcG9uc2VIZWFkZXJzWyBtYXRjaFsgMSBdLnRvTG93ZXJDYXNlKCkgKyBcIiBcIiBdIHx8IFtdIClcblx0XHRcdFx0XHRcdFx0XHRcdFx0LmNvbmNhdCggbWF0Y2hbIDIgXSApO1xuXHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHRtYXRjaCA9IHJlc3BvbnNlSGVhZGVyc1sga2V5LnRvTG93ZXJDYXNlKCkgKyBcIiBcIiBdO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0XHRyZXR1cm4gbWF0Y2ggPT0gbnVsbCA/IG51bGwgOiBtYXRjaC5qb2luKCBcIiwgXCIgKTtcblx0XHRcdFx0fSxcblxuXHRcdFx0XHQvLyBSYXcgc3RyaW5nXG5cdFx0XHRcdGdldEFsbFJlc3BvbnNlSGVhZGVyczogZnVuY3Rpb24oKSB7XG5cdFx0XHRcdFx0cmV0dXJuIGNvbXBsZXRlZCA/IHJlc3BvbnNlSGVhZGVyc1N0cmluZyA6IG51bGw7XG5cdFx0XHRcdH0sXG5cblx0XHRcdFx0Ly8gQ2FjaGVzIHRoZSBoZWFkZXJcblx0XHRcdFx0c2V0UmVxdWVzdEhlYWRlcjogZnVuY3Rpb24oIG5hbWUsIHZhbHVlICkge1xuXHRcdFx0XHRcdGlmICggY29tcGxldGVkID09IG51bGwgKSB7XG5cdFx0XHRcdFx0XHRuYW1lID0gcmVxdWVzdEhlYWRlcnNOYW1lc1sgbmFtZS50b0xvd2VyQ2FzZSgpIF0gPVxuXHRcdFx0XHRcdFx0XHRyZXF1ZXN0SGVhZGVyc05hbWVzWyBuYW1lLnRvTG93ZXJDYXNlKCkgXSB8fCBuYW1lO1xuXHRcdFx0XHRcdFx0cmVxdWVzdEhlYWRlcnNbIG5hbWUgXSA9IHZhbHVlO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0XHRyZXR1cm4gdGhpcztcblx0XHRcdFx0fSxcblxuXHRcdFx0XHQvLyBPdmVycmlkZXMgcmVzcG9uc2UgY29udGVudC10eXBlIGhlYWRlclxuXHRcdFx0XHRvdmVycmlkZU1pbWVUeXBlOiBmdW5jdGlvbiggdHlwZSApIHtcblx0XHRcdFx0XHRpZiAoIGNvbXBsZXRlZCA9PSBudWxsICkge1xuXHRcdFx0XHRcdFx0cy5taW1lVHlwZSA9IHR5cGU7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHRcdHJldHVybiB0aGlzO1xuXHRcdFx0XHR9LFxuXG5cdFx0XHRcdC8vIFN0YXR1cy1kZXBlbmRlbnQgY2FsbGJhY2tzXG5cdFx0XHRcdHN0YXR1c0NvZGU6IGZ1bmN0aW9uKCBtYXAgKSB7XG5cdFx0XHRcdFx0dmFyIGNvZGU7XG5cdFx0XHRcdFx0aWYgKCBtYXAgKSB7XG5cdFx0XHRcdFx0XHRpZiAoIGNvbXBsZXRlZCApIHtcblxuXHRcdFx0XHRcdFx0XHQvLyBFeGVjdXRlIHRoZSBhcHByb3ByaWF0ZSBjYWxsYmFja3Ncblx0XHRcdFx0XHRcdFx0anFYSFIuYWx3YXlzKCBtYXBbIGpxWEhSLnN0YXR1cyBdICk7XG5cdFx0XHRcdFx0XHR9IGVsc2Uge1xuXG5cdFx0XHRcdFx0XHRcdC8vIExhenktYWRkIHRoZSBuZXcgY2FsbGJhY2tzIGluIGEgd2F5IHRoYXQgcHJlc2VydmVzIG9sZCBvbmVzXG5cdFx0XHRcdFx0XHRcdGZvciAoIGNvZGUgaW4gbWFwICkge1xuXHRcdFx0XHRcdFx0XHRcdHN0YXR1c0NvZGVbIGNvZGUgXSA9IFsgc3RhdHVzQ29kZVsgY29kZSBdLCBtYXBbIGNvZGUgXSBdO1xuXHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHRcdHJldHVybiB0aGlzO1xuXHRcdFx0XHR9LFxuXG5cdFx0XHRcdC8vIENhbmNlbCB0aGUgcmVxdWVzdFxuXHRcdFx0XHRhYm9ydDogZnVuY3Rpb24oIHN0YXR1c1RleHQgKSB7XG5cdFx0XHRcdFx0dmFyIGZpbmFsVGV4dCA9IHN0YXR1c1RleHQgfHwgc3RyQWJvcnQ7XG5cdFx0XHRcdFx0aWYgKCB0cmFuc3BvcnQgKSB7XG5cdFx0XHRcdFx0XHR0cmFuc3BvcnQuYWJvcnQoIGZpbmFsVGV4dCApO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0XHRkb25lKCAwLCBmaW5hbFRleHQgKTtcblx0XHRcdFx0XHRyZXR1cm4gdGhpcztcblx0XHRcdFx0fVxuXHRcdFx0fTtcblxuXHRcdC8vIEF0dGFjaCBkZWZlcnJlZHNcblx0XHRkZWZlcnJlZC5wcm9taXNlKCBqcVhIUiApO1xuXG5cdFx0Ly8gQWRkIHByb3RvY29sIGlmIG5vdCBwcm92aWRlZCAocHJlZmlsdGVycyBtaWdodCBleHBlY3QgaXQpXG5cdFx0Ly8gSGFuZGxlIGZhbHN5IHVybCBpbiB0aGUgc2V0dGluZ3Mgb2JqZWN0ICgjMTAwOTM6IGNvbnNpc3RlbmN5IHdpdGggb2xkIHNpZ25hdHVyZSlcblx0XHQvLyBXZSBhbHNvIHVzZSB0aGUgdXJsIHBhcmFtZXRlciBpZiBhdmFpbGFibGVcblx0XHRzLnVybCA9ICggKCB1cmwgfHwgcy51cmwgfHwgbG9jYXRpb24uaHJlZiApICsgXCJcIiApXG5cdFx0XHQucmVwbGFjZSggcnByb3RvY29sLCBsb2NhdGlvbi5wcm90b2NvbCArIFwiLy9cIiApO1xuXG5cdFx0Ly8gQWxpYXMgbWV0aG9kIG9wdGlvbiB0byB0eXBlIGFzIHBlciB0aWNrZXQgIzEyMDA0XG5cdFx0cy50eXBlID0gb3B0aW9ucy5tZXRob2QgfHwgb3B0aW9ucy50eXBlIHx8IHMubWV0aG9kIHx8IHMudHlwZTtcblxuXHRcdC8vIEV4dHJhY3QgZGF0YVR5cGVzIGxpc3Rcblx0XHRzLmRhdGFUeXBlcyA9ICggcy5kYXRhVHlwZSB8fCBcIipcIiApLnRvTG93ZXJDYXNlKCkubWF0Y2goIHJub3RodG1sd2hpdGUgKSB8fCBbIFwiXCIgXTtcblxuXHRcdC8vIEEgY3Jvc3MtZG9tYWluIHJlcXVlc3QgaXMgaW4gb3JkZXIgd2hlbiB0aGUgb3JpZ2luIGRvZXNuJ3QgbWF0Y2ggdGhlIGN1cnJlbnQgb3JpZ2luLlxuXHRcdGlmICggcy5jcm9zc0RvbWFpbiA9PSBudWxsICkge1xuXHRcdFx0dXJsQW5jaG9yID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCggXCJhXCIgKTtcblxuXHRcdFx0Ly8gU3VwcG9ydDogSUUgPD04IC0gMTEsIEVkZ2UgMTIgLSAxNVxuXHRcdFx0Ly8gSUUgdGhyb3dzIGV4Y2VwdGlvbiBvbiBhY2Nlc3NpbmcgdGhlIGhyZWYgcHJvcGVydHkgaWYgdXJsIGlzIG1hbGZvcm1lZCxcblx0XHRcdC8vIGUuZy4gaHR0cDovL2V4YW1wbGUuY29tOjgweC9cblx0XHRcdHRyeSB7XG5cdFx0XHRcdHVybEFuY2hvci5ocmVmID0gcy51cmw7XG5cblx0XHRcdFx0Ly8gU3VwcG9ydDogSUUgPD04IC0gMTEgb25seVxuXHRcdFx0XHQvLyBBbmNob3IncyBob3N0IHByb3BlcnR5IGlzbid0IGNvcnJlY3RseSBzZXQgd2hlbiBzLnVybCBpcyByZWxhdGl2ZVxuXHRcdFx0XHR1cmxBbmNob3IuaHJlZiA9IHVybEFuY2hvci5ocmVmO1xuXHRcdFx0XHRzLmNyb3NzRG9tYWluID0gb3JpZ2luQW5jaG9yLnByb3RvY29sICsgXCIvL1wiICsgb3JpZ2luQW5jaG9yLmhvc3QgIT09XG5cdFx0XHRcdFx0dXJsQW5jaG9yLnByb3RvY29sICsgXCIvL1wiICsgdXJsQW5jaG9yLmhvc3Q7XG5cdFx0XHR9IGNhdGNoICggZSApIHtcblxuXHRcdFx0XHQvLyBJZiB0aGVyZSBpcyBhbiBlcnJvciBwYXJzaW5nIHRoZSBVUkwsIGFzc3VtZSBpdCBpcyBjcm9zc0RvbWFpbixcblx0XHRcdFx0Ly8gaXQgY2FuIGJlIHJlamVjdGVkIGJ5IHRoZSB0cmFuc3BvcnQgaWYgaXQgaXMgaW52YWxpZFxuXHRcdFx0XHRzLmNyb3NzRG9tYWluID0gdHJ1ZTtcblx0XHRcdH1cblx0XHR9XG5cblx0XHQvLyBDb252ZXJ0IGRhdGEgaWYgbm90IGFscmVhZHkgYSBzdHJpbmdcblx0XHRpZiAoIHMuZGF0YSAmJiBzLnByb2Nlc3NEYXRhICYmIHR5cGVvZiBzLmRhdGEgIT09IFwic3RyaW5nXCIgKSB7XG5cdFx0XHRzLmRhdGEgPSBqUXVlcnkucGFyYW0oIHMuZGF0YSwgcy50cmFkaXRpb25hbCApO1xuXHRcdH1cblxuXHRcdC8vIEFwcGx5IHByZWZpbHRlcnNcblx0XHRpbnNwZWN0UHJlZmlsdGVyc09yVHJhbnNwb3J0cyggcHJlZmlsdGVycywgcywgb3B0aW9ucywganFYSFIgKTtcblxuXHRcdC8vIElmIHJlcXVlc3Qgd2FzIGFib3J0ZWQgaW5zaWRlIGEgcHJlZmlsdGVyLCBzdG9wIHRoZXJlXG5cdFx0aWYgKCBjb21wbGV0ZWQgKSB7XG5cdFx0XHRyZXR1cm4ganFYSFI7XG5cdFx0fVxuXG5cdFx0Ly8gV2UgY2FuIGZpcmUgZ2xvYmFsIGV2ZW50cyBhcyBvZiBub3cgaWYgYXNrZWQgdG9cblx0XHQvLyBEb24ndCBmaXJlIGV2ZW50cyBpZiBqUXVlcnkuZXZlbnQgaXMgdW5kZWZpbmVkIGluIGFuIEFNRC11c2FnZSBzY2VuYXJpbyAoIzE1MTE4KVxuXHRcdGZpcmVHbG9iYWxzID0galF1ZXJ5LmV2ZW50ICYmIHMuZ2xvYmFsO1xuXG5cdFx0Ly8gV2F0Y2ggZm9yIGEgbmV3IHNldCBvZiByZXF1ZXN0c1xuXHRcdGlmICggZmlyZUdsb2JhbHMgJiYgalF1ZXJ5LmFjdGl2ZSsrID09PSAwICkge1xuXHRcdFx0alF1ZXJ5LmV2ZW50LnRyaWdnZXIoIFwiYWpheFN0YXJ0XCIgKTtcblx0XHR9XG5cblx0XHQvLyBVcHBlcmNhc2UgdGhlIHR5cGVcblx0XHRzLnR5cGUgPSBzLnR5cGUudG9VcHBlckNhc2UoKTtcblxuXHRcdC8vIERldGVybWluZSBpZiByZXF1ZXN0IGhhcyBjb250ZW50XG5cdFx0cy5oYXNDb250ZW50ID0gIXJub0NvbnRlbnQudGVzdCggcy50eXBlICk7XG5cblx0XHQvLyBTYXZlIHRoZSBVUkwgaW4gY2FzZSB3ZSdyZSB0b3lpbmcgd2l0aCB0aGUgSWYtTW9kaWZpZWQtU2luY2Vcblx0XHQvLyBhbmQvb3IgSWYtTm9uZS1NYXRjaCBoZWFkZXIgbGF0ZXIgb25cblx0XHQvLyBSZW1vdmUgaGFzaCB0byBzaW1wbGlmeSB1cmwgbWFuaXB1bGF0aW9uXG5cdFx0Y2FjaGVVUkwgPSBzLnVybC5yZXBsYWNlKCByaGFzaCwgXCJcIiApO1xuXG5cdFx0Ly8gTW9yZSBvcHRpb25zIGhhbmRsaW5nIGZvciByZXF1ZXN0cyB3aXRoIG5vIGNvbnRlbnRcblx0XHRpZiAoICFzLmhhc0NvbnRlbnQgKSB7XG5cblx0XHRcdC8vIFJlbWVtYmVyIHRoZSBoYXNoIHNvIHdlIGNhbiBwdXQgaXQgYmFja1xuXHRcdFx0dW5jYWNoZWQgPSBzLnVybC5zbGljZSggY2FjaGVVUkwubGVuZ3RoICk7XG5cblx0XHRcdC8vIElmIGRhdGEgaXMgYXZhaWxhYmxlIGFuZCBzaG91bGQgYmUgcHJvY2Vzc2VkLCBhcHBlbmQgZGF0YSB0byB1cmxcblx0XHRcdGlmICggcy5kYXRhICYmICggcy5wcm9jZXNzRGF0YSB8fCB0eXBlb2Ygcy5kYXRhID09PSBcInN0cmluZ1wiICkgKSB7XG5cdFx0XHRcdGNhY2hlVVJMICs9ICggcnF1ZXJ5LnRlc3QoIGNhY2hlVVJMICkgPyBcIiZcIiA6IFwiP1wiICkgKyBzLmRhdGE7XG5cblx0XHRcdFx0Ly8gIzk2ODI6IHJlbW92ZSBkYXRhIHNvIHRoYXQgaXQncyBub3QgdXNlZCBpbiBhbiBldmVudHVhbCByZXRyeVxuXHRcdFx0XHRkZWxldGUgcy5kYXRhO1xuXHRcdFx0fVxuXG5cdFx0XHQvLyBBZGQgb3IgdXBkYXRlIGFudGktY2FjaGUgcGFyYW0gaWYgbmVlZGVkXG5cdFx0XHRpZiAoIHMuY2FjaGUgPT09IGZhbHNlICkge1xuXHRcdFx0XHRjYWNoZVVSTCA9IGNhY2hlVVJMLnJlcGxhY2UoIHJhbnRpQ2FjaGUsIFwiJDFcIiApO1xuXHRcdFx0XHR1bmNhY2hlZCA9ICggcnF1ZXJ5LnRlc3QoIGNhY2hlVVJMICkgPyBcIiZcIiA6IFwiP1wiICkgKyBcIl89XCIgKyAoIG5vbmNlLmd1aWQrKyApICtcblx0XHRcdFx0XHR1bmNhY2hlZDtcblx0XHRcdH1cblxuXHRcdFx0Ly8gUHV0IGhhc2ggYW5kIGFudGktY2FjaGUgb24gdGhlIFVSTCB0aGF0IHdpbGwgYmUgcmVxdWVzdGVkIChnaC0xNzMyKVxuXHRcdFx0cy51cmwgPSBjYWNoZVVSTCArIHVuY2FjaGVkO1xuXG5cdFx0Ly8gQ2hhbmdlICclMjAnIHRvICcrJyBpZiB0aGlzIGlzIGVuY29kZWQgZm9ybSBib2R5IGNvbnRlbnQgKGdoLTI2NTgpXG5cdFx0fSBlbHNlIGlmICggcy5kYXRhICYmIHMucHJvY2Vzc0RhdGEgJiZcblx0XHRcdCggcy5jb250ZW50VHlwZSB8fCBcIlwiICkuaW5kZXhPZiggXCJhcHBsaWNhdGlvbi94LXd3dy1mb3JtLXVybGVuY29kZWRcIiApID09PSAwICkge1xuXHRcdFx0cy5kYXRhID0gcy5kYXRhLnJlcGxhY2UoIHIyMCwgXCIrXCIgKTtcblx0XHR9XG5cblx0XHQvLyBTZXQgdGhlIElmLU1vZGlmaWVkLVNpbmNlIGFuZC9vciBJZi1Ob25lLU1hdGNoIGhlYWRlciwgaWYgaW4gaWZNb2RpZmllZCBtb2RlLlxuXHRcdGlmICggcy5pZk1vZGlmaWVkICkge1xuXHRcdFx0aWYgKCBqUXVlcnkubGFzdE1vZGlmaWVkWyBjYWNoZVVSTCBdICkge1xuXHRcdFx0XHRqcVhIUi5zZXRSZXF1ZXN0SGVhZGVyKCBcIklmLU1vZGlmaWVkLVNpbmNlXCIsIGpRdWVyeS5sYXN0TW9kaWZpZWRbIGNhY2hlVVJMIF0gKTtcblx0XHRcdH1cblx0XHRcdGlmICggalF1ZXJ5LmV0YWdbIGNhY2hlVVJMIF0gKSB7XG5cdFx0XHRcdGpxWEhSLnNldFJlcXVlc3RIZWFkZXIoIFwiSWYtTm9uZS1NYXRjaFwiLCBqUXVlcnkuZXRhZ1sgY2FjaGVVUkwgXSApO1xuXHRcdFx0fVxuXHRcdH1cblxuXHRcdC8vIFNldCB0aGUgY29ycmVjdCBoZWFkZXIsIGlmIGRhdGEgaXMgYmVpbmcgc2VudFxuXHRcdGlmICggcy5kYXRhICYmIHMuaGFzQ29udGVudCAmJiBzLmNvbnRlbnRUeXBlICE9PSBmYWxzZSB8fCBvcHRpb25zLmNvbnRlbnRUeXBlICkge1xuXHRcdFx0anFYSFIuc2V0UmVxdWVzdEhlYWRlciggXCJDb250ZW50LVR5cGVcIiwgcy5jb250ZW50VHlwZSApO1xuXHRcdH1cblxuXHRcdC8vIFNldCB0aGUgQWNjZXB0cyBoZWFkZXIgZm9yIHRoZSBzZXJ2ZXIsIGRlcGVuZGluZyBvbiB0aGUgZGF0YVR5cGVcblx0XHRqcVhIUi5zZXRSZXF1ZXN0SGVhZGVyKFxuXHRcdFx0XCJBY2NlcHRcIixcblx0XHRcdHMuZGF0YVR5cGVzWyAwIF0gJiYgcy5hY2NlcHRzWyBzLmRhdGFUeXBlc1sgMCBdIF0gP1xuXHRcdFx0XHRzLmFjY2VwdHNbIHMuZGF0YVR5cGVzWyAwIF0gXSArXG5cdFx0XHRcdFx0KCBzLmRhdGFUeXBlc1sgMCBdICE9PSBcIipcIiA/IFwiLCBcIiArIGFsbFR5cGVzICsgXCI7IHE9MC4wMVwiIDogXCJcIiApIDpcblx0XHRcdFx0cy5hY2NlcHRzWyBcIipcIiBdXG5cdFx0KTtcblxuXHRcdC8vIENoZWNrIGZvciBoZWFkZXJzIG9wdGlvblxuXHRcdGZvciAoIGkgaW4gcy5oZWFkZXJzICkge1xuXHRcdFx0anFYSFIuc2V0UmVxdWVzdEhlYWRlciggaSwgcy5oZWFkZXJzWyBpIF0gKTtcblx0XHR9XG5cblx0XHQvLyBBbGxvdyBjdXN0b20gaGVhZGVycy9taW1ldHlwZXMgYW5kIGVhcmx5IGFib3J0XG5cdFx0aWYgKCBzLmJlZm9yZVNlbmQgJiZcblx0XHRcdCggcy5iZWZvcmVTZW5kLmNhbGwoIGNhbGxiYWNrQ29udGV4dCwganFYSFIsIHMgKSA9PT0gZmFsc2UgfHwgY29tcGxldGVkICkgKSB7XG5cblx0XHRcdC8vIEFib3J0IGlmIG5vdCBkb25lIGFscmVhZHkgYW5kIHJldHVyblxuXHRcdFx0cmV0dXJuIGpxWEhSLmFib3J0KCk7XG5cdFx0fVxuXG5cdFx0Ly8gQWJvcnRpbmcgaXMgbm8gbG9uZ2VyIGEgY2FuY2VsbGF0aW9uXG5cdFx0c3RyQWJvcnQgPSBcImFib3J0XCI7XG5cblx0XHQvLyBJbnN0YWxsIGNhbGxiYWNrcyBvbiBkZWZlcnJlZHNcblx0XHRjb21wbGV0ZURlZmVycmVkLmFkZCggcy5jb21wbGV0ZSApO1xuXHRcdGpxWEhSLmRvbmUoIHMuc3VjY2VzcyApO1xuXHRcdGpxWEhSLmZhaWwoIHMuZXJyb3IgKTtcblxuXHRcdC8vIEdldCB0cmFuc3BvcnRcblx0XHR0cmFuc3BvcnQgPSBpbnNwZWN0UHJlZmlsdGVyc09yVHJhbnNwb3J0cyggdHJhbnNwb3J0cywgcywgb3B0aW9ucywganFYSFIgKTtcblxuXHRcdC8vIElmIG5vIHRyYW5zcG9ydCwgd2UgYXV0by1hYm9ydFxuXHRcdGlmICggIXRyYW5zcG9ydCApIHtcblx0XHRcdGRvbmUoIC0xLCBcIk5vIFRyYW5zcG9ydFwiICk7XG5cdFx0fSBlbHNlIHtcblx0XHRcdGpxWEhSLnJlYWR5U3RhdGUgPSAxO1xuXG5cdFx0XHQvLyBTZW5kIGdsb2JhbCBldmVudFxuXHRcdFx0aWYgKCBmaXJlR2xvYmFscyApIHtcblx0XHRcdFx0Z2xvYmFsRXZlbnRDb250ZXh0LnRyaWdnZXIoIFwiYWpheFNlbmRcIiwgWyBqcVhIUiwgcyBdICk7XG5cdFx0XHR9XG5cblx0XHRcdC8vIElmIHJlcXVlc3Qgd2FzIGFib3J0ZWQgaW5zaWRlIGFqYXhTZW5kLCBzdG9wIHRoZXJlXG5cdFx0XHRpZiAoIGNvbXBsZXRlZCApIHtcblx0XHRcdFx0cmV0dXJuIGpxWEhSO1xuXHRcdFx0fVxuXG5cdFx0XHQvLyBUaW1lb3V0XG5cdFx0XHRpZiAoIHMuYXN5bmMgJiYgcy50aW1lb3V0ID4gMCApIHtcblx0XHRcdFx0dGltZW91dFRpbWVyID0gd2luZG93LnNldFRpbWVvdXQoIGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRcdGpxWEhSLmFib3J0KCBcInRpbWVvdXRcIiApO1xuXHRcdFx0XHR9LCBzLnRpbWVvdXQgKTtcblx0XHRcdH1cblxuXHRcdFx0dHJ5IHtcblx0XHRcdFx0Y29tcGxldGVkID0gZmFsc2U7XG5cdFx0XHRcdHRyYW5zcG9ydC5zZW5kKCByZXF1ZXN0SGVhZGVycywgZG9uZSApO1xuXHRcdFx0fSBjYXRjaCAoIGUgKSB7XG5cblx0XHRcdFx0Ly8gUmV0aHJvdyBwb3N0LWNvbXBsZXRpb24gZXhjZXB0aW9uc1xuXHRcdFx0XHRpZiAoIGNvbXBsZXRlZCApIHtcblx0XHRcdFx0XHR0aHJvdyBlO1xuXHRcdFx0XHR9XG5cblx0XHRcdFx0Ly8gUHJvcGFnYXRlIG90aGVycyBhcyByZXN1bHRzXG5cdFx0XHRcdGRvbmUoIC0xLCBlICk7XG5cdFx0XHR9XG5cdFx0fVxuXG5cdFx0Ly8gQ2FsbGJhY2sgZm9yIHdoZW4gZXZlcnl0aGluZyBpcyBkb25lXG5cdFx0ZnVuY3Rpb24gZG9uZSggc3RhdHVzLCBuYXRpdmVTdGF0dXNUZXh0LCByZXNwb25zZXMsIGhlYWRlcnMgKSB7XG5cdFx0XHR2YXIgaXNTdWNjZXNzLCBzdWNjZXNzLCBlcnJvciwgcmVzcG9uc2UsIG1vZGlmaWVkLFxuXHRcdFx0XHRzdGF0dXNUZXh0ID0gbmF0aXZlU3RhdHVzVGV4dDtcblxuXHRcdFx0Ly8gSWdub3JlIHJlcGVhdCBpbnZvY2F0aW9uc1xuXHRcdFx0aWYgKCBjb21wbGV0ZWQgKSB7XG5cdFx0XHRcdHJldHVybjtcblx0XHRcdH1cblxuXHRcdFx0Y29tcGxldGVkID0gdHJ1ZTtcblxuXHRcdFx0Ly8gQ2xlYXIgdGltZW91dCBpZiBpdCBleGlzdHNcblx0XHRcdGlmICggdGltZW91dFRpbWVyICkge1xuXHRcdFx0XHR3aW5kb3cuY2xlYXJUaW1lb3V0KCB0aW1lb3V0VGltZXIgKTtcblx0XHRcdH1cblxuXHRcdFx0Ly8gRGVyZWZlcmVuY2UgdHJhbnNwb3J0IGZvciBlYXJseSBnYXJiYWdlIGNvbGxlY3Rpb25cblx0XHRcdC8vIChubyBtYXR0ZXIgaG93IGxvbmcgdGhlIGpxWEhSIG9iamVjdCB3aWxsIGJlIHVzZWQpXG5cdFx0XHR0cmFuc3BvcnQgPSB1bmRlZmluZWQ7XG5cblx0XHRcdC8vIENhY2hlIHJlc3BvbnNlIGhlYWRlcnNcblx0XHRcdHJlc3BvbnNlSGVhZGVyc1N0cmluZyA9IGhlYWRlcnMgfHwgXCJcIjtcblxuXHRcdFx0Ly8gU2V0IHJlYWR5U3RhdGVcblx0XHRcdGpxWEhSLnJlYWR5U3RhdGUgPSBzdGF0dXMgPiAwID8gNCA6IDA7XG5cblx0XHRcdC8vIERldGVybWluZSBpZiBzdWNjZXNzZnVsXG5cdFx0XHRpc1N1Y2Nlc3MgPSBzdGF0dXMgPj0gMjAwICYmIHN0YXR1cyA8IDMwMCB8fCBzdGF0dXMgPT09IDMwNDtcblxuXHRcdFx0Ly8gR2V0IHJlc3BvbnNlIGRhdGFcblx0XHRcdGlmICggcmVzcG9uc2VzICkge1xuXHRcdFx0XHRyZXNwb25zZSA9IGFqYXhIYW5kbGVSZXNwb25zZXMoIHMsIGpxWEhSLCByZXNwb25zZXMgKTtcblx0XHRcdH1cblxuXHRcdFx0Ly8gVXNlIGEgbm9vcCBjb252ZXJ0ZXIgZm9yIG1pc3Npbmcgc2NyaXB0XG5cdFx0XHRpZiAoICFpc1N1Y2Nlc3MgJiYgalF1ZXJ5LmluQXJyYXkoIFwic2NyaXB0XCIsIHMuZGF0YVR5cGVzICkgPiAtMSApIHtcblx0XHRcdFx0cy5jb252ZXJ0ZXJzWyBcInRleHQgc2NyaXB0XCIgXSA9IGZ1bmN0aW9uKCkge307XG5cdFx0XHR9XG5cblx0XHRcdC8vIENvbnZlcnQgbm8gbWF0dGVyIHdoYXQgKHRoYXQgd2F5IHJlc3BvbnNlWFhYIGZpZWxkcyBhcmUgYWx3YXlzIHNldClcblx0XHRcdHJlc3BvbnNlID0gYWpheENvbnZlcnQoIHMsIHJlc3BvbnNlLCBqcVhIUiwgaXNTdWNjZXNzICk7XG5cblx0XHRcdC8vIElmIHN1Y2Nlc3NmdWwsIGhhbmRsZSB0eXBlIGNoYWluaW5nXG5cdFx0XHRpZiAoIGlzU3VjY2VzcyApIHtcblxuXHRcdFx0XHQvLyBTZXQgdGhlIElmLU1vZGlmaWVkLVNpbmNlIGFuZC9vciBJZi1Ob25lLU1hdGNoIGhlYWRlciwgaWYgaW4gaWZNb2RpZmllZCBtb2RlLlxuXHRcdFx0XHRpZiAoIHMuaWZNb2RpZmllZCApIHtcblx0XHRcdFx0XHRtb2RpZmllZCA9IGpxWEhSLmdldFJlc3BvbnNlSGVhZGVyKCBcIkxhc3QtTW9kaWZpZWRcIiApO1xuXHRcdFx0XHRcdGlmICggbW9kaWZpZWQgKSB7XG5cdFx0XHRcdFx0XHRqUXVlcnkubGFzdE1vZGlmaWVkWyBjYWNoZVVSTCBdID0gbW9kaWZpZWQ7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHRcdG1vZGlmaWVkID0ganFYSFIuZ2V0UmVzcG9uc2VIZWFkZXIoIFwiZXRhZ1wiICk7XG5cdFx0XHRcdFx0aWYgKCBtb2RpZmllZCApIHtcblx0XHRcdFx0XHRcdGpRdWVyeS5ldGFnWyBjYWNoZVVSTCBdID0gbW9kaWZpZWQ7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cblx0XHRcdFx0Ly8gaWYgbm8gY29udGVudFxuXHRcdFx0XHRpZiAoIHN0YXR1cyA9PT0gMjA0IHx8IHMudHlwZSA9PT0gXCJIRUFEXCIgKSB7XG5cdFx0XHRcdFx0c3RhdHVzVGV4dCA9IFwibm9jb250ZW50XCI7XG5cblx0XHRcdFx0Ly8gaWYgbm90IG1vZGlmaWVkXG5cdFx0XHRcdH0gZWxzZSBpZiAoIHN0YXR1cyA9PT0gMzA0ICkge1xuXHRcdFx0XHRcdHN0YXR1c1RleHQgPSBcIm5vdG1vZGlmaWVkXCI7XG5cblx0XHRcdFx0Ly8gSWYgd2UgaGF2ZSBkYXRhLCBsZXQncyBjb252ZXJ0IGl0XG5cdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0c3RhdHVzVGV4dCA9IHJlc3BvbnNlLnN0YXRlO1xuXHRcdFx0XHRcdHN1Y2Nlc3MgPSByZXNwb25zZS5kYXRhO1xuXHRcdFx0XHRcdGVycm9yID0gcmVzcG9uc2UuZXJyb3I7XG5cdFx0XHRcdFx0aXNTdWNjZXNzID0gIWVycm9yO1xuXHRcdFx0XHR9XG5cdFx0XHR9IGVsc2Uge1xuXG5cdFx0XHRcdC8vIEV4dHJhY3QgZXJyb3IgZnJvbSBzdGF0dXNUZXh0IGFuZCBub3JtYWxpemUgZm9yIG5vbi1hYm9ydHNcblx0XHRcdFx0ZXJyb3IgPSBzdGF0dXNUZXh0O1xuXHRcdFx0XHRpZiAoIHN0YXR1cyB8fCAhc3RhdHVzVGV4dCApIHtcblx0XHRcdFx0XHRzdGF0dXNUZXh0ID0gXCJlcnJvclwiO1xuXHRcdFx0XHRcdGlmICggc3RhdHVzIDwgMCApIHtcblx0XHRcdFx0XHRcdHN0YXR1cyA9IDA7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHR9XG5cblx0XHRcdC8vIFNldCBkYXRhIGZvciB0aGUgZmFrZSB4aHIgb2JqZWN0XG5cdFx0XHRqcVhIUi5zdGF0dXMgPSBzdGF0dXM7XG5cdFx0XHRqcVhIUi5zdGF0dXNUZXh0ID0gKCBuYXRpdmVTdGF0dXNUZXh0IHx8IHN0YXR1c1RleHQgKSArIFwiXCI7XG5cblx0XHRcdC8vIFN1Y2Nlc3MvRXJyb3Jcblx0XHRcdGlmICggaXNTdWNjZXNzICkge1xuXHRcdFx0XHRkZWZlcnJlZC5yZXNvbHZlV2l0aCggY2FsbGJhY2tDb250ZXh0LCBbIHN1Y2Nlc3MsIHN0YXR1c1RleHQsIGpxWEhSIF0gKTtcblx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdGRlZmVycmVkLnJlamVjdFdpdGgoIGNhbGxiYWNrQ29udGV4dCwgWyBqcVhIUiwgc3RhdHVzVGV4dCwgZXJyb3IgXSApO1xuXHRcdFx0fVxuXG5cdFx0XHQvLyBTdGF0dXMtZGVwZW5kZW50IGNhbGxiYWNrc1xuXHRcdFx0anFYSFIuc3RhdHVzQ29kZSggc3RhdHVzQ29kZSApO1xuXHRcdFx0c3RhdHVzQ29kZSA9IHVuZGVmaW5lZDtcblxuXHRcdFx0aWYgKCBmaXJlR2xvYmFscyApIHtcblx0XHRcdFx0Z2xvYmFsRXZlbnRDb250ZXh0LnRyaWdnZXIoIGlzU3VjY2VzcyA/IFwiYWpheFN1Y2Nlc3NcIiA6IFwiYWpheEVycm9yXCIsXG5cdFx0XHRcdFx0WyBqcVhIUiwgcywgaXNTdWNjZXNzID8gc3VjY2VzcyA6IGVycm9yIF0gKTtcblx0XHRcdH1cblxuXHRcdFx0Ly8gQ29tcGxldGVcblx0XHRcdGNvbXBsZXRlRGVmZXJyZWQuZmlyZVdpdGgoIGNhbGxiYWNrQ29udGV4dCwgWyBqcVhIUiwgc3RhdHVzVGV4dCBdICk7XG5cblx0XHRcdGlmICggZmlyZUdsb2JhbHMgKSB7XG5cdFx0XHRcdGdsb2JhbEV2ZW50Q29udGV4dC50cmlnZ2VyKCBcImFqYXhDb21wbGV0ZVwiLCBbIGpxWEhSLCBzIF0gKTtcblxuXHRcdFx0XHQvLyBIYW5kbGUgdGhlIGdsb2JhbCBBSkFYIGNvdW50ZXJcblx0XHRcdFx0aWYgKCAhKCAtLWpRdWVyeS5hY3RpdmUgKSApIHtcblx0XHRcdFx0XHRqUXVlcnkuZXZlbnQudHJpZ2dlciggXCJhamF4U3RvcFwiICk7XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9XG5cblx0XHRyZXR1cm4ganFYSFI7XG5cdH0sXG5cblx0Z2V0SlNPTjogZnVuY3Rpb24oIHVybCwgZGF0YSwgY2FsbGJhY2sgKSB7XG5cdFx0cmV0dXJuIGpRdWVyeS5nZXQoIHVybCwgZGF0YSwgY2FsbGJhY2ssIFwianNvblwiICk7XG5cdH0sXG5cblx0Z2V0U2NyaXB0OiBmdW5jdGlvbiggdXJsLCBjYWxsYmFjayApIHtcblx0XHRyZXR1cm4galF1ZXJ5LmdldCggdXJsLCB1bmRlZmluZWQsIGNhbGxiYWNrLCBcInNjcmlwdFwiICk7XG5cdH1cbn0gKTtcblxualF1ZXJ5LmVhY2goIFsgXCJnZXRcIiwgXCJwb3N0XCIgXSwgZnVuY3Rpb24oIF9pLCBtZXRob2QgKSB7XG5cdGpRdWVyeVsgbWV0aG9kIF0gPSBmdW5jdGlvbiggdXJsLCBkYXRhLCBjYWxsYmFjaywgdHlwZSApIHtcblxuXHRcdC8vIFNoaWZ0IGFyZ3VtZW50cyBpZiBkYXRhIGFyZ3VtZW50IHdhcyBvbWl0dGVkXG5cdFx0aWYgKCBpc0Z1bmN0aW9uKCBkYXRhICkgKSB7XG5cdFx0XHR0eXBlID0gdHlwZSB8fCBjYWxsYmFjaztcblx0XHRcdGNhbGxiYWNrID0gZGF0YTtcblx0XHRcdGRhdGEgPSB1bmRlZmluZWQ7XG5cdFx0fVxuXG5cdFx0Ly8gVGhlIHVybCBjYW4gYmUgYW4gb3B0aW9ucyBvYmplY3QgKHdoaWNoIHRoZW4gbXVzdCBoYXZlIC51cmwpXG5cdFx0cmV0dXJuIGpRdWVyeS5hamF4KCBqUXVlcnkuZXh0ZW5kKCB7XG5cdFx0XHR1cmw6IHVybCxcblx0XHRcdHR5cGU6IG1ldGhvZCxcblx0XHRcdGRhdGFUeXBlOiB0eXBlLFxuXHRcdFx0ZGF0YTogZGF0YSxcblx0XHRcdHN1Y2Nlc3M6IGNhbGxiYWNrXG5cdFx0fSwgalF1ZXJ5LmlzUGxhaW5PYmplY3QoIHVybCApICYmIHVybCApICk7XG5cdH07XG59ICk7XG5cbmpRdWVyeS5hamF4UHJlZmlsdGVyKCBmdW5jdGlvbiggcyApIHtcblx0dmFyIGk7XG5cdGZvciAoIGkgaW4gcy5oZWFkZXJzICkge1xuXHRcdGlmICggaS50b0xvd2VyQ2FzZSgpID09PSBcImNvbnRlbnQtdHlwZVwiICkge1xuXHRcdFx0cy5jb250ZW50VHlwZSA9IHMuaGVhZGVyc1sgaSBdIHx8IFwiXCI7XG5cdFx0fVxuXHR9XG59ICk7XG5cblxualF1ZXJ5Ll9ldmFsVXJsID0gZnVuY3Rpb24oIHVybCwgb3B0aW9ucywgZG9jICkge1xuXHRyZXR1cm4galF1ZXJ5LmFqYXgoIHtcblx0XHR1cmw6IHVybCxcblxuXHRcdC8vIE1ha2UgdGhpcyBleHBsaWNpdCwgc2luY2UgdXNlciBjYW4gb3ZlcnJpZGUgdGhpcyB0aHJvdWdoIGFqYXhTZXR1cCAoIzExMjY0KVxuXHRcdHR5cGU6IFwiR0VUXCIsXG5cdFx0ZGF0YVR5cGU6IFwic2NyaXB0XCIsXG5cdFx0Y2FjaGU6IHRydWUsXG5cdFx0YXN5bmM6IGZhbHNlLFxuXHRcdGdsb2JhbDogZmFsc2UsXG5cblx0XHQvLyBPbmx5IGV2YWx1YXRlIHRoZSByZXNwb25zZSBpZiBpdCBpcyBzdWNjZXNzZnVsIChnaC00MTI2KVxuXHRcdC8vIGRhdGFGaWx0ZXIgaXMgbm90IGludm9rZWQgZm9yIGZhaWx1cmUgcmVzcG9uc2VzLCBzbyB1c2luZyBpdCBpbnN0ZWFkXG5cdFx0Ly8gb2YgdGhlIGRlZmF1bHQgY29udmVydGVyIGlzIGtsdWRneSBidXQgaXQgd29ya3MuXG5cdFx0Y29udmVydGVyczoge1xuXHRcdFx0XCJ0ZXh0IHNjcmlwdFwiOiBmdW5jdGlvbigpIHt9XG5cdFx0fSxcblx0XHRkYXRhRmlsdGVyOiBmdW5jdGlvbiggcmVzcG9uc2UgKSB7XG5cdFx0XHRqUXVlcnkuZ2xvYmFsRXZhbCggcmVzcG9uc2UsIG9wdGlvbnMsIGRvYyApO1xuXHRcdH1cblx0fSApO1xufTtcblxuXG5qUXVlcnkuZm4uZXh0ZW5kKCB7XG5cdHdyYXBBbGw6IGZ1bmN0aW9uKCBodG1sICkge1xuXHRcdHZhciB3cmFwO1xuXG5cdFx0aWYgKCB0aGlzWyAwIF0gKSB7XG5cdFx0XHRpZiAoIGlzRnVuY3Rpb24oIGh0bWwgKSApIHtcblx0XHRcdFx0aHRtbCA9IGh0bWwuY2FsbCggdGhpc1sgMCBdICk7XG5cdFx0XHR9XG5cblx0XHRcdC8vIFRoZSBlbGVtZW50cyB0byB3cmFwIHRoZSB0YXJnZXQgYXJvdW5kXG5cdFx0XHR3cmFwID0galF1ZXJ5KCBodG1sLCB0aGlzWyAwIF0ub3duZXJEb2N1bWVudCApLmVxKCAwICkuY2xvbmUoIHRydWUgKTtcblxuXHRcdFx0aWYgKCB0aGlzWyAwIF0ucGFyZW50Tm9kZSApIHtcblx0XHRcdFx0d3JhcC5pbnNlcnRCZWZvcmUoIHRoaXNbIDAgXSApO1xuXHRcdFx0fVxuXG5cdFx0XHR3cmFwLm1hcCggZnVuY3Rpb24oKSB7XG5cdFx0XHRcdHZhciBlbGVtID0gdGhpcztcblxuXHRcdFx0XHR3aGlsZSAoIGVsZW0uZmlyc3RFbGVtZW50Q2hpbGQgKSB7XG5cdFx0XHRcdFx0ZWxlbSA9IGVsZW0uZmlyc3RFbGVtZW50Q2hpbGQ7XG5cdFx0XHRcdH1cblxuXHRcdFx0XHRyZXR1cm4gZWxlbTtcblx0XHRcdH0gKS5hcHBlbmQoIHRoaXMgKTtcblx0XHR9XG5cblx0XHRyZXR1cm4gdGhpcztcblx0fSxcblxuXHR3cmFwSW5uZXI6IGZ1bmN0aW9uKCBodG1sICkge1xuXHRcdGlmICggaXNGdW5jdGlvbiggaHRtbCApICkge1xuXHRcdFx0cmV0dXJuIHRoaXMuZWFjaCggZnVuY3Rpb24oIGkgKSB7XG5cdFx0XHRcdGpRdWVyeSggdGhpcyApLndyYXBJbm5lciggaHRtbC5jYWxsKCB0aGlzLCBpICkgKTtcblx0XHRcdH0gKTtcblx0XHR9XG5cblx0XHRyZXR1cm4gdGhpcy5lYWNoKCBmdW5jdGlvbigpIHtcblx0XHRcdHZhciBzZWxmID0galF1ZXJ5KCB0aGlzICksXG5cdFx0XHRcdGNvbnRlbnRzID0gc2VsZi5jb250ZW50cygpO1xuXG5cdFx0XHRpZiAoIGNvbnRlbnRzLmxlbmd0aCApIHtcblx0XHRcdFx0Y29udGVudHMud3JhcEFsbCggaHRtbCApO1xuXG5cdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRzZWxmLmFwcGVuZCggaHRtbCApO1xuXHRcdFx0fVxuXHRcdH0gKTtcblx0fSxcblxuXHR3cmFwOiBmdW5jdGlvbiggaHRtbCApIHtcblx0XHR2YXIgaHRtbElzRnVuY3Rpb24gPSBpc0Z1bmN0aW9uKCBodG1sICk7XG5cblx0XHRyZXR1cm4gdGhpcy5lYWNoKCBmdW5jdGlvbiggaSApIHtcblx0XHRcdGpRdWVyeSggdGhpcyApLndyYXBBbGwoIGh0bWxJc0Z1bmN0aW9uID8gaHRtbC5jYWxsKCB0aGlzLCBpICkgOiBodG1sICk7XG5cdFx0fSApO1xuXHR9LFxuXG5cdHVud3JhcDogZnVuY3Rpb24oIHNlbGVjdG9yICkge1xuXHRcdHRoaXMucGFyZW50KCBzZWxlY3RvciApLm5vdCggXCJib2R5XCIgKS5lYWNoKCBmdW5jdGlvbigpIHtcblx0XHRcdGpRdWVyeSggdGhpcyApLnJlcGxhY2VXaXRoKCB0aGlzLmNoaWxkTm9kZXMgKTtcblx0XHR9ICk7XG5cdFx0cmV0dXJuIHRoaXM7XG5cdH1cbn0gKTtcblxuXG5qUXVlcnkuZXhwci5wc2V1ZG9zLmhpZGRlbiA9IGZ1bmN0aW9uKCBlbGVtICkge1xuXHRyZXR1cm4gIWpRdWVyeS5leHByLnBzZXVkb3MudmlzaWJsZSggZWxlbSApO1xufTtcbmpRdWVyeS5leHByLnBzZXVkb3MudmlzaWJsZSA9IGZ1bmN0aW9uKCBlbGVtICkge1xuXHRyZXR1cm4gISEoIGVsZW0ub2Zmc2V0V2lkdGggfHwgZWxlbS5vZmZzZXRIZWlnaHQgfHwgZWxlbS5nZXRDbGllbnRSZWN0cygpLmxlbmd0aCApO1xufTtcblxuXG5cblxualF1ZXJ5LmFqYXhTZXR0aW5ncy54aHIgPSBmdW5jdGlvbigpIHtcblx0dHJ5IHtcblx0XHRyZXR1cm4gbmV3IHdpbmRvdy5YTUxIdHRwUmVxdWVzdCgpO1xuXHR9IGNhdGNoICggZSApIHt9XG59O1xuXG52YXIgeGhyU3VjY2Vzc1N0YXR1cyA9IHtcblxuXHRcdC8vIEZpbGUgcHJvdG9jb2wgYWx3YXlzIHlpZWxkcyBzdGF0dXMgY29kZSAwLCBhc3N1bWUgMjAwXG5cdFx0MDogMjAwLFxuXG5cdFx0Ly8gU3VwcG9ydDogSUUgPD05IG9ubHlcblx0XHQvLyAjMTQ1MDogc29tZXRpbWVzIElFIHJldHVybnMgMTIyMyB3aGVuIGl0IHNob3VsZCBiZSAyMDRcblx0XHQxMjIzOiAyMDRcblx0fSxcblx0eGhyU3VwcG9ydGVkID0galF1ZXJ5LmFqYXhTZXR0aW5ncy54aHIoKTtcblxuc3VwcG9ydC5jb3JzID0gISF4aHJTdXBwb3J0ZWQgJiYgKCBcIndpdGhDcmVkZW50aWFsc1wiIGluIHhoclN1cHBvcnRlZCApO1xuc3VwcG9ydC5hamF4ID0geGhyU3VwcG9ydGVkID0gISF4aHJTdXBwb3J0ZWQ7XG5cbmpRdWVyeS5hamF4VHJhbnNwb3J0KCBmdW5jdGlvbiggb3B0aW9ucyApIHtcblx0dmFyIGNhbGxiYWNrLCBlcnJvckNhbGxiYWNrO1xuXG5cdC8vIENyb3NzIGRvbWFpbiBvbmx5IGFsbG93ZWQgaWYgc3VwcG9ydGVkIHRocm91Z2ggWE1MSHR0cFJlcXVlc3Rcblx0aWYgKCBzdXBwb3J0LmNvcnMgfHwgeGhyU3VwcG9ydGVkICYmICFvcHRpb25zLmNyb3NzRG9tYWluICkge1xuXHRcdHJldHVybiB7XG5cdFx0XHRzZW5kOiBmdW5jdGlvbiggaGVhZGVycywgY29tcGxldGUgKSB7XG5cdFx0XHRcdHZhciBpLFxuXHRcdFx0XHRcdHhociA9IG9wdGlvbnMueGhyKCk7XG5cblx0XHRcdFx0eGhyLm9wZW4oXG5cdFx0XHRcdFx0b3B0aW9ucy50eXBlLFxuXHRcdFx0XHRcdG9wdGlvbnMudXJsLFxuXHRcdFx0XHRcdG9wdGlvbnMuYXN5bmMsXG5cdFx0XHRcdFx0b3B0aW9ucy51c2VybmFtZSxcblx0XHRcdFx0XHRvcHRpb25zLnBhc3N3b3JkXG5cdFx0XHRcdCk7XG5cblx0XHRcdFx0Ly8gQXBwbHkgY3VzdG9tIGZpZWxkcyBpZiBwcm92aWRlZFxuXHRcdFx0XHRpZiAoIG9wdGlvbnMueGhyRmllbGRzICkge1xuXHRcdFx0XHRcdGZvciAoIGkgaW4gb3B0aW9ucy54aHJGaWVsZHMgKSB7XG5cdFx0XHRcdFx0XHR4aHJbIGkgXSA9IG9wdGlvbnMueGhyRmllbGRzWyBpIF07XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cblx0XHRcdFx0Ly8gT3ZlcnJpZGUgbWltZSB0eXBlIGlmIG5lZWRlZFxuXHRcdFx0XHRpZiAoIG9wdGlvbnMubWltZVR5cGUgJiYgeGhyLm92ZXJyaWRlTWltZVR5cGUgKSB7XG5cdFx0XHRcdFx0eGhyLm92ZXJyaWRlTWltZVR5cGUoIG9wdGlvbnMubWltZVR5cGUgKTtcblx0XHRcdFx0fVxuXG5cdFx0XHRcdC8vIFgtUmVxdWVzdGVkLVdpdGggaGVhZGVyXG5cdFx0XHRcdC8vIEZvciBjcm9zcy1kb21haW4gcmVxdWVzdHMsIHNlZWluZyBhcyBjb25kaXRpb25zIGZvciBhIHByZWZsaWdodCBhcmVcblx0XHRcdFx0Ly8gYWtpbiB0byBhIGppZ3NhdyBwdXp6bGUsIHdlIHNpbXBseSBuZXZlciBzZXQgaXQgdG8gYmUgc3VyZS5cblx0XHRcdFx0Ly8gKGl0IGNhbiBhbHdheXMgYmUgc2V0IG9uIGEgcGVyLXJlcXVlc3QgYmFzaXMgb3IgZXZlbiB1c2luZyBhamF4U2V0dXApXG5cdFx0XHRcdC8vIEZvciBzYW1lLWRvbWFpbiByZXF1ZXN0cywgd29uJ3QgY2hhbmdlIGhlYWRlciBpZiBhbHJlYWR5IHByb3ZpZGVkLlxuXHRcdFx0XHRpZiAoICFvcHRpb25zLmNyb3NzRG9tYWluICYmICFoZWFkZXJzWyBcIlgtUmVxdWVzdGVkLVdpdGhcIiBdICkge1xuXHRcdFx0XHRcdGhlYWRlcnNbIFwiWC1SZXF1ZXN0ZWQtV2l0aFwiIF0gPSBcIlhNTEh0dHBSZXF1ZXN0XCI7XG5cdFx0XHRcdH1cblxuXHRcdFx0XHQvLyBTZXQgaGVhZGVyc1xuXHRcdFx0XHRmb3IgKCBpIGluIGhlYWRlcnMgKSB7XG5cdFx0XHRcdFx0eGhyLnNldFJlcXVlc3RIZWFkZXIoIGksIGhlYWRlcnNbIGkgXSApO1xuXHRcdFx0XHR9XG5cblx0XHRcdFx0Ly8gQ2FsbGJhY2tcblx0XHRcdFx0Y2FsbGJhY2sgPSBmdW5jdGlvbiggdHlwZSApIHtcblx0XHRcdFx0XHRyZXR1cm4gZnVuY3Rpb24oKSB7XG5cdFx0XHRcdFx0XHRpZiAoIGNhbGxiYWNrICkge1xuXHRcdFx0XHRcdFx0XHRjYWxsYmFjayA9IGVycm9yQ2FsbGJhY2sgPSB4aHIub25sb2FkID1cblx0XHRcdFx0XHRcdFx0XHR4aHIub25lcnJvciA9IHhoci5vbmFib3J0ID0geGhyLm9udGltZW91dCA9XG5cdFx0XHRcdFx0XHRcdFx0XHR4aHIub25yZWFkeXN0YXRlY2hhbmdlID0gbnVsbDtcblxuXHRcdFx0XHRcdFx0XHRpZiAoIHR5cGUgPT09IFwiYWJvcnRcIiApIHtcblx0XHRcdFx0XHRcdFx0XHR4aHIuYWJvcnQoKTtcblx0XHRcdFx0XHRcdFx0fSBlbHNlIGlmICggdHlwZSA9PT0gXCJlcnJvclwiICkge1xuXG5cdFx0XHRcdFx0XHRcdFx0Ly8gU3VwcG9ydDogSUUgPD05IG9ubHlcblx0XHRcdFx0XHRcdFx0XHQvLyBPbiBhIG1hbnVhbCBuYXRpdmUgYWJvcnQsIElFOSB0aHJvd3Ncblx0XHRcdFx0XHRcdFx0XHQvLyBlcnJvcnMgb24gYW55IHByb3BlcnR5IGFjY2VzcyB0aGF0IGlzIG5vdCByZWFkeVN0YXRlXG5cdFx0XHRcdFx0XHRcdFx0aWYgKCB0eXBlb2YgeGhyLnN0YXR1cyAhPT0gXCJudW1iZXJcIiApIHtcblx0XHRcdFx0XHRcdFx0XHRcdGNvbXBsZXRlKCAwLCBcImVycm9yXCIgKTtcblx0XHRcdFx0XHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdFx0XHRcdFx0Y29tcGxldGUoXG5cblx0XHRcdFx0XHRcdFx0XHRcdFx0Ly8gRmlsZTogcHJvdG9jb2wgYWx3YXlzIHlpZWxkcyBzdGF0dXMgMDsgc2VlICM4NjA1LCAjMTQyMDdcblx0XHRcdFx0XHRcdFx0XHRcdFx0eGhyLnN0YXR1cyxcblx0XHRcdFx0XHRcdFx0XHRcdFx0eGhyLnN0YXR1c1RleHRcblx0XHRcdFx0XHRcdFx0XHRcdCk7XG5cdFx0XHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdFx0XHRcdGNvbXBsZXRlKFxuXHRcdFx0XHRcdFx0XHRcdFx0eGhyU3VjY2Vzc1N0YXR1c1sgeGhyLnN0YXR1cyBdIHx8IHhoci5zdGF0dXMsXG5cdFx0XHRcdFx0XHRcdFx0XHR4aHIuc3RhdHVzVGV4dCxcblxuXHRcdFx0XHRcdFx0XHRcdFx0Ly8gU3VwcG9ydDogSUUgPD05IG9ubHlcblx0XHRcdFx0XHRcdFx0XHRcdC8vIElFOSBoYXMgbm8gWEhSMiBidXQgdGhyb3dzIG9uIGJpbmFyeSAodHJhYy0xMTQyNilcblx0XHRcdFx0XHRcdFx0XHRcdC8vIEZvciBYSFIyIG5vbi10ZXh0LCBsZXQgdGhlIGNhbGxlciBoYW5kbGUgaXQgKGdoLTI0OTgpXG5cdFx0XHRcdFx0XHRcdFx0XHQoIHhoci5yZXNwb25zZVR5cGUgfHwgXCJ0ZXh0XCIgKSAhPT0gXCJ0ZXh0XCIgIHx8XG5cdFx0XHRcdFx0XHRcdFx0XHR0eXBlb2YgeGhyLnJlc3BvbnNlVGV4dCAhPT0gXCJzdHJpbmdcIiA/XG5cdFx0XHRcdFx0XHRcdFx0XHRcdHsgYmluYXJ5OiB4aHIucmVzcG9uc2UgfSA6XG5cdFx0XHRcdFx0XHRcdFx0XHRcdHsgdGV4dDogeGhyLnJlc3BvbnNlVGV4dCB9LFxuXHRcdFx0XHRcdFx0XHRcdFx0eGhyLmdldEFsbFJlc3BvbnNlSGVhZGVycygpXG5cdFx0XHRcdFx0XHRcdFx0KTtcblx0XHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdH07XG5cdFx0XHRcdH07XG5cblx0XHRcdFx0Ly8gTGlzdGVuIHRvIGV2ZW50c1xuXHRcdFx0XHR4aHIub25sb2FkID0gY2FsbGJhY2soKTtcblx0XHRcdFx0ZXJyb3JDYWxsYmFjayA9IHhoci5vbmVycm9yID0geGhyLm9udGltZW91dCA9IGNhbGxiYWNrKCBcImVycm9yXCIgKTtcblxuXHRcdFx0XHQvLyBTdXBwb3J0OiBJRSA5IG9ubHlcblx0XHRcdFx0Ly8gVXNlIG9ucmVhZHlzdGF0ZWNoYW5nZSB0byByZXBsYWNlIG9uYWJvcnRcblx0XHRcdFx0Ly8gdG8gaGFuZGxlIHVuY2F1Z2h0IGFib3J0c1xuXHRcdFx0XHRpZiAoIHhoci5vbmFib3J0ICE9PSB1bmRlZmluZWQgKSB7XG5cdFx0XHRcdFx0eGhyLm9uYWJvcnQgPSBlcnJvckNhbGxiYWNrO1xuXHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdHhoci5vbnJlYWR5c3RhdGVjaGFuZ2UgPSBmdW5jdGlvbigpIHtcblxuXHRcdFx0XHRcdFx0Ly8gQ2hlY2sgcmVhZHlTdGF0ZSBiZWZvcmUgdGltZW91dCBhcyBpdCBjaGFuZ2VzXG5cdFx0XHRcdFx0XHRpZiAoIHhoci5yZWFkeVN0YXRlID09PSA0ICkge1xuXG5cdFx0XHRcdFx0XHRcdC8vIEFsbG93IG9uZXJyb3IgdG8gYmUgY2FsbGVkIGZpcnN0LFxuXHRcdFx0XHRcdFx0XHQvLyBidXQgdGhhdCB3aWxsIG5vdCBoYW5kbGUgYSBuYXRpdmUgYWJvcnRcblx0XHRcdFx0XHRcdFx0Ly8gQWxzbywgc2F2ZSBlcnJvckNhbGxiYWNrIHRvIGEgdmFyaWFibGVcblx0XHRcdFx0XHRcdFx0Ly8gYXMgeGhyLm9uZXJyb3IgY2Fubm90IGJlIGFjY2Vzc2VkXG5cdFx0XHRcdFx0XHRcdHdpbmRvdy5zZXRUaW1lb3V0KCBmdW5jdGlvbigpIHtcblx0XHRcdFx0XHRcdFx0XHRpZiAoIGNhbGxiYWNrICkge1xuXHRcdFx0XHRcdFx0XHRcdFx0ZXJyb3JDYWxsYmFjaygpO1xuXHRcdFx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdFx0fSApO1xuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdH07XG5cdFx0XHRcdH1cblxuXHRcdFx0XHQvLyBDcmVhdGUgdGhlIGFib3J0IGNhbGxiYWNrXG5cdFx0XHRcdGNhbGxiYWNrID0gY2FsbGJhY2soIFwiYWJvcnRcIiApO1xuXG5cdFx0XHRcdHRyeSB7XG5cblx0XHRcdFx0XHQvLyBEbyBzZW5kIHRoZSByZXF1ZXN0ICh0aGlzIG1heSByYWlzZSBhbiBleGNlcHRpb24pXG5cdFx0XHRcdFx0eGhyLnNlbmQoIG9wdGlvbnMuaGFzQ29udGVudCAmJiBvcHRpb25zLmRhdGEgfHwgbnVsbCApO1xuXHRcdFx0XHR9IGNhdGNoICggZSApIHtcblxuXHRcdFx0XHRcdC8vICMxNDY4MzogT25seSByZXRocm93IGlmIHRoaXMgaGFzbid0IGJlZW4gbm90aWZpZWQgYXMgYW4gZXJyb3IgeWV0XG5cdFx0XHRcdFx0aWYgKCBjYWxsYmFjayApIHtcblx0XHRcdFx0XHRcdHRocm93IGU7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHR9LFxuXG5cdFx0XHRhYm9ydDogZnVuY3Rpb24oKSB7XG5cdFx0XHRcdGlmICggY2FsbGJhY2sgKSB7XG5cdFx0XHRcdFx0Y2FsbGJhY2soKTtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH07XG5cdH1cbn0gKTtcblxuXG5cblxuLy8gUHJldmVudCBhdXRvLWV4ZWN1dGlvbiBvZiBzY3JpcHRzIHdoZW4gbm8gZXhwbGljaXQgZGF0YVR5cGUgd2FzIHByb3ZpZGVkIChTZWUgZ2gtMjQzMilcbmpRdWVyeS5hamF4UHJlZmlsdGVyKCBmdW5jdGlvbiggcyApIHtcblx0aWYgKCBzLmNyb3NzRG9tYWluICkge1xuXHRcdHMuY29udGVudHMuc2NyaXB0ID0gZmFsc2U7XG5cdH1cbn0gKTtcblxuLy8gSW5zdGFsbCBzY3JpcHQgZGF0YVR5cGVcbmpRdWVyeS5hamF4U2V0dXAoIHtcblx0YWNjZXB0czoge1xuXHRcdHNjcmlwdDogXCJ0ZXh0L2phdmFzY3JpcHQsIGFwcGxpY2F0aW9uL2phdmFzY3JpcHQsIFwiICtcblx0XHRcdFwiYXBwbGljYXRpb24vZWNtYXNjcmlwdCwgYXBwbGljYXRpb24veC1lY21hc2NyaXB0XCJcblx0fSxcblx0Y29udGVudHM6IHtcblx0XHRzY3JpcHQ6IC9cXGIoPzpqYXZhfGVjbWEpc2NyaXB0XFxiL1xuXHR9LFxuXHRjb252ZXJ0ZXJzOiB7XG5cdFx0XCJ0ZXh0IHNjcmlwdFwiOiBmdW5jdGlvbiggdGV4dCApIHtcblx0XHRcdGpRdWVyeS5nbG9iYWxFdmFsKCB0ZXh0ICk7XG5cdFx0XHRyZXR1cm4gdGV4dDtcblx0XHR9XG5cdH1cbn0gKTtcblxuLy8gSGFuZGxlIGNhY2hlJ3Mgc3BlY2lhbCBjYXNlIGFuZCBjcm9zc0RvbWFpblxualF1ZXJ5LmFqYXhQcmVmaWx0ZXIoIFwic2NyaXB0XCIsIGZ1bmN0aW9uKCBzICkge1xuXHRpZiAoIHMuY2FjaGUgPT09IHVuZGVmaW5lZCApIHtcblx0XHRzLmNhY2hlID0gZmFsc2U7XG5cdH1cblx0aWYgKCBzLmNyb3NzRG9tYWluICkge1xuXHRcdHMudHlwZSA9IFwiR0VUXCI7XG5cdH1cbn0gKTtcblxuLy8gQmluZCBzY3JpcHQgdGFnIGhhY2sgdHJhbnNwb3J0XG5qUXVlcnkuYWpheFRyYW5zcG9ydCggXCJzY3JpcHRcIiwgZnVuY3Rpb24oIHMgKSB7XG5cblx0Ly8gVGhpcyB0cmFuc3BvcnQgb25seSBkZWFscyB3aXRoIGNyb3NzIGRvbWFpbiBvciBmb3JjZWQtYnktYXR0cnMgcmVxdWVzdHNcblx0aWYgKCBzLmNyb3NzRG9tYWluIHx8IHMuc2NyaXB0QXR0cnMgKSB7XG5cdFx0dmFyIHNjcmlwdCwgY2FsbGJhY2s7XG5cdFx0cmV0dXJuIHtcblx0XHRcdHNlbmQ6IGZ1bmN0aW9uKCBfLCBjb21wbGV0ZSApIHtcblx0XHRcdFx0c2NyaXB0ID0galF1ZXJ5KCBcIjxzY3JpcHQ+XCIgKVxuXHRcdFx0XHRcdC5hdHRyKCBzLnNjcmlwdEF0dHJzIHx8IHt9IClcblx0XHRcdFx0XHQucHJvcCggeyBjaGFyc2V0OiBzLnNjcmlwdENoYXJzZXQsIHNyYzogcy51cmwgfSApXG5cdFx0XHRcdFx0Lm9uKCBcImxvYWQgZXJyb3JcIiwgY2FsbGJhY2sgPSBmdW5jdGlvbiggZXZ0ICkge1xuXHRcdFx0XHRcdFx0c2NyaXB0LnJlbW92ZSgpO1xuXHRcdFx0XHRcdFx0Y2FsbGJhY2sgPSBudWxsO1xuXHRcdFx0XHRcdFx0aWYgKCBldnQgKSB7XG5cdFx0XHRcdFx0XHRcdGNvbXBsZXRlKCBldnQudHlwZSA9PT0gXCJlcnJvclwiID8gNDA0IDogMjAwLCBldnQudHlwZSApO1xuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdH0gKTtcblxuXHRcdFx0XHQvLyBVc2UgbmF0aXZlIERPTSBtYW5pcHVsYXRpb24gdG8gYXZvaWQgb3VyIGRvbU1hbmlwIEFKQVggdHJpY2tlcnlcblx0XHRcdFx0ZG9jdW1lbnQuaGVhZC5hcHBlbmRDaGlsZCggc2NyaXB0WyAwIF0gKTtcblx0XHRcdH0sXG5cdFx0XHRhYm9ydDogZnVuY3Rpb24oKSB7XG5cdFx0XHRcdGlmICggY2FsbGJhY2sgKSB7XG5cdFx0XHRcdFx0Y2FsbGJhY2soKTtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH07XG5cdH1cbn0gKTtcblxuXG5cblxudmFyIG9sZENhbGxiYWNrcyA9IFtdLFxuXHRyanNvbnAgPSAvKD0pXFw/KD89JnwkKXxcXD9cXD8vO1xuXG4vLyBEZWZhdWx0IGpzb25wIHNldHRpbmdzXG5qUXVlcnkuYWpheFNldHVwKCB7XG5cdGpzb25wOiBcImNhbGxiYWNrXCIsXG5cdGpzb25wQ2FsbGJhY2s6IGZ1bmN0aW9uKCkge1xuXHRcdHZhciBjYWxsYmFjayA9IG9sZENhbGxiYWNrcy5wb3AoKSB8fCAoIGpRdWVyeS5leHBhbmRvICsgXCJfXCIgKyAoIG5vbmNlLmd1aWQrKyApICk7XG5cdFx0dGhpc1sgY2FsbGJhY2sgXSA9IHRydWU7XG5cdFx0cmV0dXJuIGNhbGxiYWNrO1xuXHR9XG59ICk7XG5cbi8vIERldGVjdCwgbm9ybWFsaXplIG9wdGlvbnMgYW5kIGluc3RhbGwgY2FsbGJhY2tzIGZvciBqc29ucCByZXF1ZXN0c1xualF1ZXJ5LmFqYXhQcmVmaWx0ZXIoIFwianNvbiBqc29ucFwiLCBmdW5jdGlvbiggcywgb3JpZ2luYWxTZXR0aW5ncywganFYSFIgKSB7XG5cblx0dmFyIGNhbGxiYWNrTmFtZSwgb3ZlcndyaXR0ZW4sIHJlc3BvbnNlQ29udGFpbmVyLFxuXHRcdGpzb25Qcm9wID0gcy5qc29ucCAhPT0gZmFsc2UgJiYgKCByanNvbnAudGVzdCggcy51cmwgKSA/XG5cdFx0XHRcInVybFwiIDpcblx0XHRcdHR5cGVvZiBzLmRhdGEgPT09IFwic3RyaW5nXCIgJiZcblx0XHRcdFx0KCBzLmNvbnRlbnRUeXBlIHx8IFwiXCIgKVxuXHRcdFx0XHRcdC5pbmRleE9mKCBcImFwcGxpY2F0aW9uL3gtd3d3LWZvcm0tdXJsZW5jb2RlZFwiICkgPT09IDAgJiZcblx0XHRcdFx0cmpzb25wLnRlc3QoIHMuZGF0YSApICYmIFwiZGF0YVwiXG5cdFx0KTtcblxuXHQvLyBIYW5kbGUgaWZmIHRoZSBleHBlY3RlZCBkYXRhIHR5cGUgaXMgXCJqc29ucFwiIG9yIHdlIGhhdmUgYSBwYXJhbWV0ZXIgdG8gc2V0XG5cdGlmICgganNvblByb3AgfHwgcy5kYXRhVHlwZXNbIDAgXSA9PT0gXCJqc29ucFwiICkge1xuXG5cdFx0Ly8gR2V0IGNhbGxiYWNrIG5hbWUsIHJlbWVtYmVyaW5nIHByZWV4aXN0aW5nIHZhbHVlIGFzc29jaWF0ZWQgd2l0aCBpdFxuXHRcdGNhbGxiYWNrTmFtZSA9IHMuanNvbnBDYWxsYmFjayA9IGlzRnVuY3Rpb24oIHMuanNvbnBDYWxsYmFjayApID9cblx0XHRcdHMuanNvbnBDYWxsYmFjaygpIDpcblx0XHRcdHMuanNvbnBDYWxsYmFjaztcblxuXHRcdC8vIEluc2VydCBjYWxsYmFjayBpbnRvIHVybCBvciBmb3JtIGRhdGFcblx0XHRpZiAoIGpzb25Qcm9wICkge1xuXHRcdFx0c1sganNvblByb3AgXSA9IHNbIGpzb25Qcm9wIF0ucmVwbGFjZSggcmpzb25wLCBcIiQxXCIgKyBjYWxsYmFja05hbWUgKTtcblx0XHR9IGVsc2UgaWYgKCBzLmpzb25wICE9PSBmYWxzZSApIHtcblx0XHRcdHMudXJsICs9ICggcnF1ZXJ5LnRlc3QoIHMudXJsICkgPyBcIiZcIiA6IFwiP1wiICkgKyBzLmpzb25wICsgXCI9XCIgKyBjYWxsYmFja05hbWU7XG5cdFx0fVxuXG5cdFx0Ly8gVXNlIGRhdGEgY29udmVydGVyIHRvIHJldHJpZXZlIGpzb24gYWZ0ZXIgc2NyaXB0IGV4ZWN1dGlvblxuXHRcdHMuY29udmVydGVyc1sgXCJzY3JpcHQganNvblwiIF0gPSBmdW5jdGlvbigpIHtcblx0XHRcdGlmICggIXJlc3BvbnNlQ29udGFpbmVyICkge1xuXHRcdFx0XHRqUXVlcnkuZXJyb3IoIGNhbGxiYWNrTmFtZSArIFwiIHdhcyBub3QgY2FsbGVkXCIgKTtcblx0XHRcdH1cblx0XHRcdHJldHVybiByZXNwb25zZUNvbnRhaW5lclsgMCBdO1xuXHRcdH07XG5cblx0XHQvLyBGb3JjZSBqc29uIGRhdGFUeXBlXG5cdFx0cy5kYXRhVHlwZXNbIDAgXSA9IFwianNvblwiO1xuXG5cdFx0Ly8gSW5zdGFsbCBjYWxsYmFja1xuXHRcdG92ZXJ3cml0dGVuID0gd2luZG93WyBjYWxsYmFja05hbWUgXTtcblx0XHR3aW5kb3dbIGNhbGxiYWNrTmFtZSBdID0gZnVuY3Rpb24oKSB7XG5cdFx0XHRyZXNwb25zZUNvbnRhaW5lciA9IGFyZ3VtZW50cztcblx0XHR9O1xuXG5cdFx0Ly8gQ2xlYW4tdXAgZnVuY3Rpb24gKGZpcmVzIGFmdGVyIGNvbnZlcnRlcnMpXG5cdFx0anFYSFIuYWx3YXlzKCBmdW5jdGlvbigpIHtcblxuXHRcdFx0Ly8gSWYgcHJldmlvdXMgdmFsdWUgZGlkbid0IGV4aXN0IC0gcmVtb3ZlIGl0XG5cdFx0XHRpZiAoIG92ZXJ3cml0dGVuID09PSB1bmRlZmluZWQgKSB7XG5cdFx0XHRcdGpRdWVyeSggd2luZG93ICkucmVtb3ZlUHJvcCggY2FsbGJhY2tOYW1lICk7XG5cblx0XHRcdC8vIE90aGVyd2lzZSByZXN0b3JlIHByZWV4aXN0aW5nIHZhbHVlXG5cdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHR3aW5kb3dbIGNhbGxiYWNrTmFtZSBdID0gb3ZlcndyaXR0ZW47XG5cdFx0XHR9XG5cblx0XHRcdC8vIFNhdmUgYmFjayBhcyBmcmVlXG5cdFx0XHRpZiAoIHNbIGNhbGxiYWNrTmFtZSBdICkge1xuXG5cdFx0XHRcdC8vIE1ha2Ugc3VyZSB0aGF0IHJlLXVzaW5nIHRoZSBvcHRpb25zIGRvZXNuJ3Qgc2NyZXcgdGhpbmdzIGFyb3VuZFxuXHRcdFx0XHRzLmpzb25wQ2FsbGJhY2sgPSBvcmlnaW5hbFNldHRpbmdzLmpzb25wQ2FsbGJhY2s7XG5cblx0XHRcdFx0Ly8gU2F2ZSB0aGUgY2FsbGJhY2sgbmFtZSBmb3IgZnV0dXJlIHVzZVxuXHRcdFx0XHRvbGRDYWxsYmFja3MucHVzaCggY2FsbGJhY2tOYW1lICk7XG5cdFx0XHR9XG5cblx0XHRcdC8vIENhbGwgaWYgaXQgd2FzIGEgZnVuY3Rpb24gYW5kIHdlIGhhdmUgYSByZXNwb25zZVxuXHRcdFx0aWYgKCByZXNwb25zZUNvbnRhaW5lciAmJiBpc0Z1bmN0aW9uKCBvdmVyd3JpdHRlbiApICkge1xuXHRcdFx0XHRvdmVyd3JpdHRlbiggcmVzcG9uc2VDb250YWluZXJbIDAgXSApO1xuXHRcdFx0fVxuXG5cdFx0XHRyZXNwb25zZUNvbnRhaW5lciA9IG92ZXJ3cml0dGVuID0gdW5kZWZpbmVkO1xuXHRcdH0gKTtcblxuXHRcdC8vIERlbGVnYXRlIHRvIHNjcmlwdFxuXHRcdHJldHVybiBcInNjcmlwdFwiO1xuXHR9XG59ICk7XG5cblxuXG5cbi8vIFN1cHBvcnQ6IFNhZmFyaSA4IG9ubHlcbi8vIEluIFNhZmFyaSA4IGRvY3VtZW50cyBjcmVhdGVkIHZpYSBkb2N1bWVudC5pbXBsZW1lbnRhdGlvbi5jcmVhdGVIVE1MRG9jdW1lbnRcbi8vIGNvbGxhcHNlIHNpYmxpbmcgZm9ybXM6IHRoZSBzZWNvbmQgb25lIGJlY29tZXMgYSBjaGlsZCBvZiB0aGUgZmlyc3Qgb25lLlxuLy8gQmVjYXVzZSBvZiB0aGF0LCB0aGlzIHNlY3VyaXR5IG1lYXN1cmUgaGFzIHRvIGJlIGRpc2FibGVkIGluIFNhZmFyaSA4LlxuLy8gaHR0cHM6Ly9idWdzLndlYmtpdC5vcmcvc2hvd19idWcuY2dpP2lkPTEzNzMzN1xuc3VwcG9ydC5jcmVhdGVIVE1MRG9jdW1lbnQgPSAoIGZ1bmN0aW9uKCkge1xuXHR2YXIgYm9keSA9IGRvY3VtZW50LmltcGxlbWVudGF0aW9uLmNyZWF0ZUhUTUxEb2N1bWVudCggXCJcIiApLmJvZHk7XG5cdGJvZHkuaW5uZXJIVE1MID0gXCI8Zm9ybT48L2Zvcm0+PGZvcm0+PC9mb3JtPlwiO1xuXHRyZXR1cm4gYm9keS5jaGlsZE5vZGVzLmxlbmd0aCA9PT0gMjtcbn0gKSgpO1xuXG5cbi8vIEFyZ3VtZW50IFwiZGF0YVwiIHNob3VsZCBiZSBzdHJpbmcgb2YgaHRtbFxuLy8gY29udGV4dCAob3B0aW9uYWwpOiBJZiBzcGVjaWZpZWQsIHRoZSBmcmFnbWVudCB3aWxsIGJlIGNyZWF0ZWQgaW4gdGhpcyBjb250ZXh0LFxuLy8gZGVmYXVsdHMgdG8gZG9jdW1lbnRcbi8vIGtlZXBTY3JpcHRzIChvcHRpb25hbCk6IElmIHRydWUsIHdpbGwgaW5jbHVkZSBzY3JpcHRzIHBhc3NlZCBpbiB0aGUgaHRtbCBzdHJpbmdcbmpRdWVyeS5wYXJzZUhUTUwgPSBmdW5jdGlvbiggZGF0YSwgY29udGV4dCwga2VlcFNjcmlwdHMgKSB7XG5cdGlmICggdHlwZW9mIGRhdGEgIT09IFwic3RyaW5nXCIgKSB7XG5cdFx0cmV0dXJuIFtdO1xuXHR9XG5cdGlmICggdHlwZW9mIGNvbnRleHQgPT09IFwiYm9vbGVhblwiICkge1xuXHRcdGtlZXBTY3JpcHRzID0gY29udGV4dDtcblx0XHRjb250ZXh0ID0gZmFsc2U7XG5cdH1cblxuXHR2YXIgYmFzZSwgcGFyc2VkLCBzY3JpcHRzO1xuXG5cdGlmICggIWNvbnRleHQgKSB7XG5cblx0XHQvLyBTdG9wIHNjcmlwdHMgb3IgaW5saW5lIGV2ZW50IGhhbmRsZXJzIGZyb20gYmVpbmcgZXhlY3V0ZWQgaW1tZWRpYXRlbHlcblx0XHQvLyBieSB1c2luZyBkb2N1bWVudC5pbXBsZW1lbnRhdGlvblxuXHRcdGlmICggc3VwcG9ydC5jcmVhdGVIVE1MRG9jdW1lbnQgKSB7XG5cdFx0XHRjb250ZXh0ID0gZG9jdW1lbnQuaW1wbGVtZW50YXRpb24uY3JlYXRlSFRNTERvY3VtZW50KCBcIlwiICk7XG5cblx0XHRcdC8vIFNldCB0aGUgYmFzZSBocmVmIGZvciB0aGUgY3JlYXRlZCBkb2N1bWVudFxuXHRcdFx0Ly8gc28gYW55IHBhcnNlZCBlbGVtZW50cyB3aXRoIFVSTHNcblx0XHRcdC8vIGFyZSBiYXNlZCBvbiB0aGUgZG9jdW1lbnQncyBVUkwgKGdoLTI5NjUpXG5cdFx0XHRiYXNlID0gY29udGV4dC5jcmVhdGVFbGVtZW50KCBcImJhc2VcIiApO1xuXHRcdFx0YmFzZS5ocmVmID0gZG9jdW1lbnQubG9jYXRpb24uaHJlZjtcblx0XHRcdGNvbnRleHQuaGVhZC5hcHBlbmRDaGlsZCggYmFzZSApO1xuXHRcdH0gZWxzZSB7XG5cdFx0XHRjb250ZXh0ID0gZG9jdW1lbnQ7XG5cdFx0fVxuXHR9XG5cblx0cGFyc2VkID0gcnNpbmdsZVRhZy5leGVjKCBkYXRhICk7XG5cdHNjcmlwdHMgPSAha2VlcFNjcmlwdHMgJiYgW107XG5cblx0Ly8gU2luZ2xlIHRhZ1xuXHRpZiAoIHBhcnNlZCApIHtcblx0XHRyZXR1cm4gWyBjb250ZXh0LmNyZWF0ZUVsZW1lbnQoIHBhcnNlZFsgMSBdICkgXTtcblx0fVxuXG5cdHBhcnNlZCA9IGJ1aWxkRnJhZ21lbnQoIFsgZGF0YSBdLCBjb250ZXh0LCBzY3JpcHRzICk7XG5cblx0aWYgKCBzY3JpcHRzICYmIHNjcmlwdHMubGVuZ3RoICkge1xuXHRcdGpRdWVyeSggc2NyaXB0cyApLnJlbW92ZSgpO1xuXHR9XG5cblx0cmV0dXJuIGpRdWVyeS5tZXJnZSggW10sIHBhcnNlZC5jaGlsZE5vZGVzICk7XG59O1xuXG5cbi8qKlxuICogTG9hZCBhIHVybCBpbnRvIGEgcGFnZVxuICovXG5qUXVlcnkuZm4ubG9hZCA9IGZ1bmN0aW9uKCB1cmwsIHBhcmFtcywgY2FsbGJhY2sgKSB7XG5cdHZhciBzZWxlY3RvciwgdHlwZSwgcmVzcG9uc2UsXG5cdFx0c2VsZiA9IHRoaXMsXG5cdFx0b2ZmID0gdXJsLmluZGV4T2YoIFwiIFwiICk7XG5cblx0aWYgKCBvZmYgPiAtMSApIHtcblx0XHRzZWxlY3RvciA9IHN0cmlwQW5kQ29sbGFwc2UoIHVybC5zbGljZSggb2ZmICkgKTtcblx0XHR1cmwgPSB1cmwuc2xpY2UoIDAsIG9mZiApO1xuXHR9XG5cblx0Ly8gSWYgaXQncyBhIGZ1bmN0aW9uXG5cdGlmICggaXNGdW5jdGlvbiggcGFyYW1zICkgKSB7XG5cblx0XHQvLyBXZSBhc3N1bWUgdGhhdCBpdCdzIHRoZSBjYWxsYmFja1xuXHRcdGNhbGxiYWNrID0gcGFyYW1zO1xuXHRcdHBhcmFtcyA9IHVuZGVmaW5lZDtcblxuXHQvLyBPdGhlcndpc2UsIGJ1aWxkIGEgcGFyYW0gc3RyaW5nXG5cdH0gZWxzZSBpZiAoIHBhcmFtcyAmJiB0eXBlb2YgcGFyYW1zID09PSBcIm9iamVjdFwiICkge1xuXHRcdHR5cGUgPSBcIlBPU1RcIjtcblx0fVxuXG5cdC8vIElmIHdlIGhhdmUgZWxlbWVudHMgdG8gbW9kaWZ5LCBtYWtlIHRoZSByZXF1ZXN0XG5cdGlmICggc2VsZi5sZW5ndGggPiAwICkge1xuXHRcdGpRdWVyeS5hamF4KCB7XG5cdFx0XHR1cmw6IHVybCxcblxuXHRcdFx0Ly8gSWYgXCJ0eXBlXCIgdmFyaWFibGUgaXMgdW5kZWZpbmVkLCB0aGVuIFwiR0VUXCIgbWV0aG9kIHdpbGwgYmUgdXNlZC5cblx0XHRcdC8vIE1ha2UgdmFsdWUgb2YgdGhpcyBmaWVsZCBleHBsaWNpdCBzaW5jZVxuXHRcdFx0Ly8gdXNlciBjYW4gb3ZlcnJpZGUgaXQgdGhyb3VnaCBhamF4U2V0dXAgbWV0aG9kXG5cdFx0XHR0eXBlOiB0eXBlIHx8IFwiR0VUXCIsXG5cdFx0XHRkYXRhVHlwZTogXCJodG1sXCIsXG5cdFx0XHRkYXRhOiBwYXJhbXNcblx0XHR9ICkuZG9uZSggZnVuY3Rpb24oIHJlc3BvbnNlVGV4dCApIHtcblxuXHRcdFx0Ly8gU2F2ZSByZXNwb25zZSBmb3IgdXNlIGluIGNvbXBsZXRlIGNhbGxiYWNrXG5cdFx0XHRyZXNwb25zZSA9IGFyZ3VtZW50cztcblxuXHRcdFx0c2VsZi5odG1sKCBzZWxlY3RvciA/XG5cblx0XHRcdFx0Ly8gSWYgYSBzZWxlY3RvciB3YXMgc3BlY2lmaWVkLCBsb2NhdGUgdGhlIHJpZ2h0IGVsZW1lbnRzIGluIGEgZHVtbXkgZGl2XG5cdFx0XHRcdC8vIEV4Y2x1ZGUgc2NyaXB0cyB0byBhdm9pZCBJRSAnUGVybWlzc2lvbiBEZW5pZWQnIGVycm9yc1xuXHRcdFx0XHRqUXVlcnkoIFwiPGRpdj5cIiApLmFwcGVuZCggalF1ZXJ5LnBhcnNlSFRNTCggcmVzcG9uc2VUZXh0ICkgKS5maW5kKCBzZWxlY3RvciApIDpcblxuXHRcdFx0XHQvLyBPdGhlcndpc2UgdXNlIHRoZSBmdWxsIHJlc3VsdFxuXHRcdFx0XHRyZXNwb25zZVRleHQgKTtcblxuXHRcdC8vIElmIHRoZSByZXF1ZXN0IHN1Y2NlZWRzLCB0aGlzIGZ1bmN0aW9uIGdldHMgXCJkYXRhXCIsIFwic3RhdHVzXCIsIFwianFYSFJcIlxuXHRcdC8vIGJ1dCB0aGV5IGFyZSBpZ25vcmVkIGJlY2F1c2UgcmVzcG9uc2Ugd2FzIHNldCBhYm92ZS5cblx0XHQvLyBJZiBpdCBmYWlscywgdGhpcyBmdW5jdGlvbiBnZXRzIFwianFYSFJcIiwgXCJzdGF0dXNcIiwgXCJlcnJvclwiXG5cdFx0fSApLmFsd2F5cyggY2FsbGJhY2sgJiYgZnVuY3Rpb24oIGpxWEhSLCBzdGF0dXMgKSB7XG5cdFx0XHRzZWxmLmVhY2goIGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRjYWxsYmFjay5hcHBseSggdGhpcywgcmVzcG9uc2UgfHwgWyBqcVhIUi5yZXNwb25zZVRleHQsIHN0YXR1cywganFYSFIgXSApO1xuXHRcdFx0fSApO1xuXHRcdH0gKTtcblx0fVxuXG5cdHJldHVybiB0aGlzO1xufTtcblxuXG5cblxualF1ZXJ5LmV4cHIucHNldWRvcy5hbmltYXRlZCA9IGZ1bmN0aW9uKCBlbGVtICkge1xuXHRyZXR1cm4galF1ZXJ5LmdyZXAoIGpRdWVyeS50aW1lcnMsIGZ1bmN0aW9uKCBmbiApIHtcblx0XHRyZXR1cm4gZWxlbSA9PT0gZm4uZWxlbTtcblx0fSApLmxlbmd0aDtcbn07XG5cblxuXG5cbmpRdWVyeS5vZmZzZXQgPSB7XG5cdHNldE9mZnNldDogZnVuY3Rpb24oIGVsZW0sIG9wdGlvbnMsIGkgKSB7XG5cdFx0dmFyIGN1clBvc2l0aW9uLCBjdXJMZWZ0LCBjdXJDU1NUb3AsIGN1clRvcCwgY3VyT2Zmc2V0LCBjdXJDU1NMZWZ0LCBjYWxjdWxhdGVQb3NpdGlvbixcblx0XHRcdHBvc2l0aW9uID0galF1ZXJ5LmNzcyggZWxlbSwgXCJwb3NpdGlvblwiICksXG5cdFx0XHRjdXJFbGVtID0galF1ZXJ5KCBlbGVtICksXG5cdFx0XHRwcm9wcyA9IHt9O1xuXG5cdFx0Ly8gU2V0IHBvc2l0aW9uIGZpcnN0LCBpbi1jYXNlIHRvcC9sZWZ0IGFyZSBzZXQgZXZlbiBvbiBzdGF0aWMgZWxlbVxuXHRcdGlmICggcG9zaXRpb24gPT09IFwic3RhdGljXCIgKSB7XG5cdFx0XHRlbGVtLnN0eWxlLnBvc2l0aW9uID0gXCJyZWxhdGl2ZVwiO1xuXHRcdH1cblxuXHRcdGN1ck9mZnNldCA9IGN1ckVsZW0ub2Zmc2V0KCk7XG5cdFx0Y3VyQ1NTVG9wID0galF1ZXJ5LmNzcyggZWxlbSwgXCJ0b3BcIiApO1xuXHRcdGN1ckNTU0xlZnQgPSBqUXVlcnkuY3NzKCBlbGVtLCBcImxlZnRcIiApO1xuXHRcdGNhbGN1bGF0ZVBvc2l0aW9uID0gKCBwb3NpdGlvbiA9PT0gXCJhYnNvbHV0ZVwiIHx8IHBvc2l0aW9uID09PSBcImZpeGVkXCIgKSAmJlxuXHRcdFx0KCBjdXJDU1NUb3AgKyBjdXJDU1NMZWZ0ICkuaW5kZXhPZiggXCJhdXRvXCIgKSA+IC0xO1xuXG5cdFx0Ly8gTmVlZCB0byBiZSBhYmxlIHRvIGNhbGN1bGF0ZSBwb3NpdGlvbiBpZiBlaXRoZXJcblx0XHQvLyB0b3Agb3IgbGVmdCBpcyBhdXRvIGFuZCBwb3NpdGlvbiBpcyBlaXRoZXIgYWJzb2x1dGUgb3IgZml4ZWRcblx0XHRpZiAoIGNhbGN1bGF0ZVBvc2l0aW9uICkge1xuXHRcdFx0Y3VyUG9zaXRpb24gPSBjdXJFbGVtLnBvc2l0aW9uKCk7XG5cdFx0XHRjdXJUb3AgPSBjdXJQb3NpdGlvbi50b3A7XG5cdFx0XHRjdXJMZWZ0ID0gY3VyUG9zaXRpb24ubGVmdDtcblxuXHRcdH0gZWxzZSB7XG5cdFx0XHRjdXJUb3AgPSBwYXJzZUZsb2F0KCBjdXJDU1NUb3AgKSB8fCAwO1xuXHRcdFx0Y3VyTGVmdCA9IHBhcnNlRmxvYXQoIGN1ckNTU0xlZnQgKSB8fCAwO1xuXHRcdH1cblxuXHRcdGlmICggaXNGdW5jdGlvbiggb3B0aW9ucyApICkge1xuXG5cdFx0XHQvLyBVc2UgalF1ZXJ5LmV4dGVuZCBoZXJlIHRvIGFsbG93IG1vZGlmaWNhdGlvbiBvZiBjb29yZGluYXRlcyBhcmd1bWVudCAoZ2gtMTg0OClcblx0XHRcdG9wdGlvbnMgPSBvcHRpb25zLmNhbGwoIGVsZW0sIGksIGpRdWVyeS5leHRlbmQoIHt9LCBjdXJPZmZzZXQgKSApO1xuXHRcdH1cblxuXHRcdGlmICggb3B0aW9ucy50b3AgIT0gbnVsbCApIHtcblx0XHRcdHByb3BzLnRvcCA9ICggb3B0aW9ucy50b3AgLSBjdXJPZmZzZXQudG9wICkgKyBjdXJUb3A7XG5cdFx0fVxuXHRcdGlmICggb3B0aW9ucy5sZWZ0ICE9IG51bGwgKSB7XG5cdFx0XHRwcm9wcy5sZWZ0ID0gKCBvcHRpb25zLmxlZnQgLSBjdXJPZmZzZXQubGVmdCApICsgY3VyTGVmdDtcblx0XHR9XG5cblx0XHRpZiAoIFwidXNpbmdcIiBpbiBvcHRpb25zICkge1xuXHRcdFx0b3B0aW9ucy51c2luZy5jYWxsKCBlbGVtLCBwcm9wcyApO1xuXG5cdFx0fSBlbHNlIHtcblx0XHRcdGlmICggdHlwZW9mIHByb3BzLnRvcCA9PT0gXCJudW1iZXJcIiApIHtcblx0XHRcdFx0cHJvcHMudG9wICs9IFwicHhcIjtcblx0XHRcdH1cblx0XHRcdGlmICggdHlwZW9mIHByb3BzLmxlZnQgPT09IFwibnVtYmVyXCIgKSB7XG5cdFx0XHRcdHByb3BzLmxlZnQgKz0gXCJweFwiO1xuXHRcdFx0fVxuXHRcdFx0Y3VyRWxlbS5jc3MoIHByb3BzICk7XG5cdFx0fVxuXHR9XG59O1xuXG5qUXVlcnkuZm4uZXh0ZW5kKCB7XG5cblx0Ly8gb2Zmc2V0KCkgcmVsYXRlcyBhbiBlbGVtZW50J3MgYm9yZGVyIGJveCB0byB0aGUgZG9jdW1lbnQgb3JpZ2luXG5cdG9mZnNldDogZnVuY3Rpb24oIG9wdGlvbnMgKSB7XG5cblx0XHQvLyBQcmVzZXJ2ZSBjaGFpbmluZyBmb3Igc2V0dGVyXG5cdFx0aWYgKCBhcmd1bWVudHMubGVuZ3RoICkge1xuXHRcdFx0cmV0dXJuIG9wdGlvbnMgPT09IHVuZGVmaW5lZCA/XG5cdFx0XHRcdHRoaXMgOlxuXHRcdFx0XHR0aGlzLmVhY2goIGZ1bmN0aW9uKCBpICkge1xuXHRcdFx0XHRcdGpRdWVyeS5vZmZzZXQuc2V0T2Zmc2V0KCB0aGlzLCBvcHRpb25zLCBpICk7XG5cdFx0XHRcdH0gKTtcblx0XHR9XG5cblx0XHR2YXIgcmVjdCwgd2luLFxuXHRcdFx0ZWxlbSA9IHRoaXNbIDAgXTtcblxuXHRcdGlmICggIWVsZW0gKSB7XG5cdFx0XHRyZXR1cm47XG5cdFx0fVxuXG5cdFx0Ly8gUmV0dXJuIHplcm9zIGZvciBkaXNjb25uZWN0ZWQgYW5kIGhpZGRlbiAoZGlzcGxheTogbm9uZSkgZWxlbWVudHMgKGdoLTIzMTApXG5cdFx0Ly8gU3VwcG9ydDogSUUgPD0xMSBvbmx5XG5cdFx0Ly8gUnVubmluZyBnZXRCb3VuZGluZ0NsaWVudFJlY3Qgb24gYVxuXHRcdC8vIGRpc2Nvbm5lY3RlZCBub2RlIGluIElFIHRocm93cyBhbiBlcnJvclxuXHRcdGlmICggIWVsZW0uZ2V0Q2xpZW50UmVjdHMoKS5sZW5ndGggKSB7XG5cdFx0XHRyZXR1cm4geyB0b3A6IDAsIGxlZnQ6IDAgfTtcblx0XHR9XG5cblx0XHQvLyBHZXQgZG9jdW1lbnQtcmVsYXRpdmUgcG9zaXRpb24gYnkgYWRkaW5nIHZpZXdwb3J0IHNjcm9sbCB0byB2aWV3cG9ydC1yZWxhdGl2ZSBnQkNSXG5cdFx0cmVjdCA9IGVsZW0uZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCk7XG5cdFx0d2luID0gZWxlbS5vd25lckRvY3VtZW50LmRlZmF1bHRWaWV3O1xuXHRcdHJldHVybiB7XG5cdFx0XHR0b3A6IHJlY3QudG9wICsgd2luLnBhZ2VZT2Zmc2V0LFxuXHRcdFx0bGVmdDogcmVjdC5sZWZ0ICsgd2luLnBhZ2VYT2Zmc2V0XG5cdFx0fTtcblx0fSxcblxuXHQvLyBwb3NpdGlvbigpIHJlbGF0ZXMgYW4gZWxlbWVudCdzIG1hcmdpbiBib3ggdG8gaXRzIG9mZnNldCBwYXJlbnQncyBwYWRkaW5nIGJveFxuXHQvLyBUaGlzIGNvcnJlc3BvbmRzIHRvIHRoZSBiZWhhdmlvciBvZiBDU1MgYWJzb2x1dGUgcG9zaXRpb25pbmdcblx0cG9zaXRpb246IGZ1bmN0aW9uKCkge1xuXHRcdGlmICggIXRoaXNbIDAgXSApIHtcblx0XHRcdHJldHVybjtcblx0XHR9XG5cblx0XHR2YXIgb2Zmc2V0UGFyZW50LCBvZmZzZXQsIGRvYyxcblx0XHRcdGVsZW0gPSB0aGlzWyAwIF0sXG5cdFx0XHRwYXJlbnRPZmZzZXQgPSB7IHRvcDogMCwgbGVmdDogMCB9O1xuXG5cdFx0Ly8gcG9zaXRpb246Zml4ZWQgZWxlbWVudHMgYXJlIG9mZnNldCBmcm9tIHRoZSB2aWV3cG9ydCwgd2hpY2ggaXRzZWxmIGFsd2F5cyBoYXMgemVybyBvZmZzZXRcblx0XHRpZiAoIGpRdWVyeS5jc3MoIGVsZW0sIFwicG9zaXRpb25cIiApID09PSBcImZpeGVkXCIgKSB7XG5cblx0XHRcdC8vIEFzc3VtZSBwb3NpdGlvbjpmaXhlZCBpbXBsaWVzIGF2YWlsYWJpbGl0eSBvZiBnZXRCb3VuZGluZ0NsaWVudFJlY3Rcblx0XHRcdG9mZnNldCA9IGVsZW0uZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCk7XG5cblx0XHR9IGVsc2Uge1xuXHRcdFx0b2Zmc2V0ID0gdGhpcy5vZmZzZXQoKTtcblxuXHRcdFx0Ly8gQWNjb3VudCBmb3IgdGhlICpyZWFsKiBvZmZzZXQgcGFyZW50LCB3aGljaCBjYW4gYmUgdGhlIGRvY3VtZW50IG9yIGl0cyByb290IGVsZW1lbnRcblx0XHRcdC8vIHdoZW4gYSBzdGF0aWNhbGx5IHBvc2l0aW9uZWQgZWxlbWVudCBpcyBpZGVudGlmaWVkXG5cdFx0XHRkb2MgPSBlbGVtLm93bmVyRG9jdW1lbnQ7XG5cdFx0XHRvZmZzZXRQYXJlbnQgPSBlbGVtLm9mZnNldFBhcmVudCB8fCBkb2MuZG9jdW1lbnRFbGVtZW50O1xuXHRcdFx0d2hpbGUgKCBvZmZzZXRQYXJlbnQgJiZcblx0XHRcdFx0KCBvZmZzZXRQYXJlbnQgPT09IGRvYy5ib2R5IHx8IG9mZnNldFBhcmVudCA9PT0gZG9jLmRvY3VtZW50RWxlbWVudCApICYmXG5cdFx0XHRcdGpRdWVyeS5jc3MoIG9mZnNldFBhcmVudCwgXCJwb3NpdGlvblwiICkgPT09IFwic3RhdGljXCIgKSB7XG5cblx0XHRcdFx0b2Zmc2V0UGFyZW50ID0gb2Zmc2V0UGFyZW50LnBhcmVudE5vZGU7XG5cdFx0XHR9XG5cdFx0XHRpZiAoIG9mZnNldFBhcmVudCAmJiBvZmZzZXRQYXJlbnQgIT09IGVsZW0gJiYgb2Zmc2V0UGFyZW50Lm5vZGVUeXBlID09PSAxICkge1xuXG5cdFx0XHRcdC8vIEluY29ycG9yYXRlIGJvcmRlcnMgaW50byBpdHMgb2Zmc2V0LCBzaW5jZSB0aGV5IGFyZSBvdXRzaWRlIGl0cyBjb250ZW50IG9yaWdpblxuXHRcdFx0XHRwYXJlbnRPZmZzZXQgPSBqUXVlcnkoIG9mZnNldFBhcmVudCApLm9mZnNldCgpO1xuXHRcdFx0XHRwYXJlbnRPZmZzZXQudG9wICs9IGpRdWVyeS5jc3MoIG9mZnNldFBhcmVudCwgXCJib3JkZXJUb3BXaWR0aFwiLCB0cnVlICk7XG5cdFx0XHRcdHBhcmVudE9mZnNldC5sZWZ0ICs9IGpRdWVyeS5jc3MoIG9mZnNldFBhcmVudCwgXCJib3JkZXJMZWZ0V2lkdGhcIiwgdHJ1ZSApO1xuXHRcdFx0fVxuXHRcdH1cblxuXHRcdC8vIFN1YnRyYWN0IHBhcmVudCBvZmZzZXRzIGFuZCBlbGVtZW50IG1hcmdpbnNcblx0XHRyZXR1cm4ge1xuXHRcdFx0dG9wOiBvZmZzZXQudG9wIC0gcGFyZW50T2Zmc2V0LnRvcCAtIGpRdWVyeS5jc3MoIGVsZW0sIFwibWFyZ2luVG9wXCIsIHRydWUgKSxcblx0XHRcdGxlZnQ6IG9mZnNldC5sZWZ0IC0gcGFyZW50T2Zmc2V0LmxlZnQgLSBqUXVlcnkuY3NzKCBlbGVtLCBcIm1hcmdpbkxlZnRcIiwgdHJ1ZSApXG5cdFx0fTtcblx0fSxcblxuXHQvLyBUaGlzIG1ldGhvZCB3aWxsIHJldHVybiBkb2N1bWVudEVsZW1lbnQgaW4gdGhlIGZvbGxvd2luZyBjYXNlczpcblx0Ly8gMSkgRm9yIHRoZSBlbGVtZW50IGluc2lkZSB0aGUgaWZyYW1lIHdpdGhvdXQgb2Zmc2V0UGFyZW50LCB0aGlzIG1ldGhvZCB3aWxsIHJldHVyblxuXHQvLyAgICBkb2N1bWVudEVsZW1lbnQgb2YgdGhlIHBhcmVudCB3aW5kb3dcblx0Ly8gMikgRm9yIHRoZSBoaWRkZW4gb3IgZGV0YWNoZWQgZWxlbWVudFxuXHQvLyAzKSBGb3IgYm9keSBvciBodG1sIGVsZW1lbnQsIGkuZS4gaW4gY2FzZSBvZiB0aGUgaHRtbCBub2RlIC0gaXQgd2lsbCByZXR1cm4gaXRzZWxmXG5cdC8vXG5cdC8vIGJ1dCB0aG9zZSBleGNlcHRpb25zIHdlcmUgbmV2ZXIgcHJlc2VudGVkIGFzIGEgcmVhbCBsaWZlIHVzZS1jYXNlc1xuXHQvLyBhbmQgbWlnaHQgYmUgY29uc2lkZXJlZCBhcyBtb3JlIHByZWZlcmFibGUgcmVzdWx0cy5cblx0Ly9cblx0Ly8gVGhpcyBsb2dpYywgaG93ZXZlciwgaXMgbm90IGd1YXJhbnRlZWQgYW5kIGNhbiBjaGFuZ2UgYXQgYW55IHBvaW50IGluIHRoZSBmdXR1cmVcblx0b2Zmc2V0UGFyZW50OiBmdW5jdGlvbigpIHtcblx0XHRyZXR1cm4gdGhpcy5tYXAoIGZ1bmN0aW9uKCkge1xuXHRcdFx0dmFyIG9mZnNldFBhcmVudCA9IHRoaXMub2Zmc2V0UGFyZW50O1xuXG5cdFx0XHR3aGlsZSAoIG9mZnNldFBhcmVudCAmJiBqUXVlcnkuY3NzKCBvZmZzZXRQYXJlbnQsIFwicG9zaXRpb25cIiApID09PSBcInN0YXRpY1wiICkge1xuXHRcdFx0XHRvZmZzZXRQYXJlbnQgPSBvZmZzZXRQYXJlbnQub2Zmc2V0UGFyZW50O1xuXHRcdFx0fVxuXG5cdFx0XHRyZXR1cm4gb2Zmc2V0UGFyZW50IHx8IGRvY3VtZW50RWxlbWVudDtcblx0XHR9ICk7XG5cdH1cbn0gKTtcblxuLy8gQ3JlYXRlIHNjcm9sbExlZnQgYW5kIHNjcm9sbFRvcCBtZXRob2RzXG5qUXVlcnkuZWFjaCggeyBzY3JvbGxMZWZ0OiBcInBhZ2VYT2Zmc2V0XCIsIHNjcm9sbFRvcDogXCJwYWdlWU9mZnNldFwiIH0sIGZ1bmN0aW9uKCBtZXRob2QsIHByb3AgKSB7XG5cdHZhciB0b3AgPSBcInBhZ2VZT2Zmc2V0XCIgPT09IHByb3A7XG5cblx0alF1ZXJ5LmZuWyBtZXRob2QgXSA9IGZ1bmN0aW9uKCB2YWwgKSB7XG5cdFx0cmV0dXJuIGFjY2VzcyggdGhpcywgZnVuY3Rpb24oIGVsZW0sIG1ldGhvZCwgdmFsICkge1xuXG5cdFx0XHQvLyBDb2FsZXNjZSBkb2N1bWVudHMgYW5kIHdpbmRvd3Ncblx0XHRcdHZhciB3aW47XG5cdFx0XHRpZiAoIGlzV2luZG93KCBlbGVtICkgKSB7XG5cdFx0XHRcdHdpbiA9IGVsZW07XG5cdFx0XHR9IGVsc2UgaWYgKCBlbGVtLm5vZGVUeXBlID09PSA5ICkge1xuXHRcdFx0XHR3aW4gPSBlbGVtLmRlZmF1bHRWaWV3O1xuXHRcdFx0fVxuXG5cdFx0XHRpZiAoIHZhbCA9PT0gdW5kZWZpbmVkICkge1xuXHRcdFx0XHRyZXR1cm4gd2luID8gd2luWyBwcm9wIF0gOiBlbGVtWyBtZXRob2QgXTtcblx0XHRcdH1cblxuXHRcdFx0aWYgKCB3aW4gKSB7XG5cdFx0XHRcdHdpbi5zY3JvbGxUbyhcblx0XHRcdFx0XHQhdG9wID8gdmFsIDogd2luLnBhZ2VYT2Zmc2V0LFxuXHRcdFx0XHRcdHRvcCA/IHZhbCA6IHdpbi5wYWdlWU9mZnNldFxuXHRcdFx0XHQpO1xuXG5cdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRlbGVtWyBtZXRob2QgXSA9IHZhbDtcblx0XHRcdH1cblx0XHR9LCBtZXRob2QsIHZhbCwgYXJndW1lbnRzLmxlbmd0aCApO1xuXHR9O1xufSApO1xuXG4vLyBTdXBwb3J0OiBTYWZhcmkgPD03IC0gOS4xLCBDaHJvbWUgPD0zNyAtIDQ5XG4vLyBBZGQgdGhlIHRvcC9sZWZ0IGNzc0hvb2tzIHVzaW5nIGpRdWVyeS5mbi5wb3NpdGlvblxuLy8gV2Via2l0IGJ1ZzogaHR0cHM6Ly9idWdzLndlYmtpdC5vcmcvc2hvd19idWcuY2dpP2lkPTI5MDg0XG4vLyBCbGluayBidWc6IGh0dHBzOi8vYnVncy5jaHJvbWl1bS5vcmcvcC9jaHJvbWl1bS9pc3N1ZXMvZGV0YWlsP2lkPTU4OTM0N1xuLy8gZ2V0Q29tcHV0ZWRTdHlsZSByZXR1cm5zIHBlcmNlbnQgd2hlbiBzcGVjaWZpZWQgZm9yIHRvcC9sZWZ0L2JvdHRvbS9yaWdodDtcbi8vIHJhdGhlciB0aGFuIG1ha2UgdGhlIGNzcyBtb2R1bGUgZGVwZW5kIG9uIHRoZSBvZmZzZXQgbW9kdWxlLCBqdXN0IGNoZWNrIGZvciBpdCBoZXJlXG5qUXVlcnkuZWFjaCggWyBcInRvcFwiLCBcImxlZnRcIiBdLCBmdW5jdGlvbiggX2ksIHByb3AgKSB7XG5cdGpRdWVyeS5jc3NIb29rc1sgcHJvcCBdID0gYWRkR2V0SG9va0lmKCBzdXBwb3J0LnBpeGVsUG9zaXRpb24sXG5cdFx0ZnVuY3Rpb24oIGVsZW0sIGNvbXB1dGVkICkge1xuXHRcdFx0aWYgKCBjb21wdXRlZCApIHtcblx0XHRcdFx0Y29tcHV0ZWQgPSBjdXJDU1MoIGVsZW0sIHByb3AgKTtcblxuXHRcdFx0XHQvLyBJZiBjdXJDU1MgcmV0dXJucyBwZXJjZW50YWdlLCBmYWxsYmFjayB0byBvZmZzZXRcblx0XHRcdFx0cmV0dXJuIHJudW1ub25weC50ZXN0KCBjb21wdXRlZCApID9cblx0XHRcdFx0XHRqUXVlcnkoIGVsZW0gKS5wb3NpdGlvbigpWyBwcm9wIF0gKyBcInB4XCIgOlxuXHRcdFx0XHRcdGNvbXB1dGVkO1xuXHRcdFx0fVxuXHRcdH1cblx0KTtcbn0gKTtcblxuXG4vLyBDcmVhdGUgaW5uZXJIZWlnaHQsIGlubmVyV2lkdGgsIGhlaWdodCwgd2lkdGgsIG91dGVySGVpZ2h0IGFuZCBvdXRlcldpZHRoIG1ldGhvZHNcbmpRdWVyeS5lYWNoKCB7IEhlaWdodDogXCJoZWlnaHRcIiwgV2lkdGg6IFwid2lkdGhcIiB9LCBmdW5jdGlvbiggbmFtZSwgdHlwZSApIHtcblx0alF1ZXJ5LmVhY2goIHsgcGFkZGluZzogXCJpbm5lclwiICsgbmFtZSwgY29udGVudDogdHlwZSwgXCJcIjogXCJvdXRlclwiICsgbmFtZSB9LFxuXHRcdGZ1bmN0aW9uKCBkZWZhdWx0RXh0cmEsIGZ1bmNOYW1lICkge1xuXG5cdFx0Ly8gTWFyZ2luIGlzIG9ubHkgZm9yIG91dGVySGVpZ2h0LCBvdXRlcldpZHRoXG5cdFx0alF1ZXJ5LmZuWyBmdW5jTmFtZSBdID0gZnVuY3Rpb24oIG1hcmdpbiwgdmFsdWUgKSB7XG5cdFx0XHR2YXIgY2hhaW5hYmxlID0gYXJndW1lbnRzLmxlbmd0aCAmJiAoIGRlZmF1bHRFeHRyYSB8fCB0eXBlb2YgbWFyZ2luICE9PSBcImJvb2xlYW5cIiApLFxuXHRcdFx0XHRleHRyYSA9IGRlZmF1bHRFeHRyYSB8fCAoIG1hcmdpbiA9PT0gdHJ1ZSB8fCB2YWx1ZSA9PT0gdHJ1ZSA/IFwibWFyZ2luXCIgOiBcImJvcmRlclwiICk7XG5cblx0XHRcdHJldHVybiBhY2Nlc3MoIHRoaXMsIGZ1bmN0aW9uKCBlbGVtLCB0eXBlLCB2YWx1ZSApIHtcblx0XHRcdFx0dmFyIGRvYztcblxuXHRcdFx0XHRpZiAoIGlzV2luZG93KCBlbGVtICkgKSB7XG5cblx0XHRcdFx0XHQvLyAkKCB3aW5kb3cgKS5vdXRlcldpZHRoL0hlaWdodCByZXR1cm4gdy9oIGluY2x1ZGluZyBzY3JvbGxiYXJzIChnaC0xNzI5KVxuXHRcdFx0XHRcdHJldHVybiBmdW5jTmFtZS5pbmRleE9mKCBcIm91dGVyXCIgKSA9PT0gMCA/XG5cdFx0XHRcdFx0XHRlbGVtWyBcImlubmVyXCIgKyBuYW1lIF0gOlxuXHRcdFx0XHRcdFx0ZWxlbS5kb2N1bWVudC5kb2N1bWVudEVsZW1lbnRbIFwiY2xpZW50XCIgKyBuYW1lIF07XG5cdFx0XHRcdH1cblxuXHRcdFx0XHQvLyBHZXQgZG9jdW1lbnQgd2lkdGggb3IgaGVpZ2h0XG5cdFx0XHRcdGlmICggZWxlbS5ub2RlVHlwZSA9PT0gOSApIHtcblx0XHRcdFx0XHRkb2MgPSBlbGVtLmRvY3VtZW50RWxlbWVudDtcblxuXHRcdFx0XHRcdC8vIEVpdGhlciBzY3JvbGxbV2lkdGgvSGVpZ2h0XSBvciBvZmZzZXRbV2lkdGgvSGVpZ2h0XSBvciBjbGllbnRbV2lkdGgvSGVpZ2h0XSxcblx0XHRcdFx0XHQvLyB3aGljaGV2ZXIgaXMgZ3JlYXRlc3Rcblx0XHRcdFx0XHRyZXR1cm4gTWF0aC5tYXgoXG5cdFx0XHRcdFx0XHRlbGVtLmJvZHlbIFwic2Nyb2xsXCIgKyBuYW1lIF0sIGRvY1sgXCJzY3JvbGxcIiArIG5hbWUgXSxcblx0XHRcdFx0XHRcdGVsZW0uYm9keVsgXCJvZmZzZXRcIiArIG5hbWUgXSwgZG9jWyBcIm9mZnNldFwiICsgbmFtZSBdLFxuXHRcdFx0XHRcdFx0ZG9jWyBcImNsaWVudFwiICsgbmFtZSBdXG5cdFx0XHRcdFx0KTtcblx0XHRcdFx0fVxuXG5cdFx0XHRcdHJldHVybiB2YWx1ZSA9PT0gdW5kZWZpbmVkID9cblxuXHRcdFx0XHRcdC8vIEdldCB3aWR0aCBvciBoZWlnaHQgb24gdGhlIGVsZW1lbnQsIHJlcXVlc3RpbmcgYnV0IG5vdCBmb3JjaW5nIHBhcnNlRmxvYXRcblx0XHRcdFx0XHRqUXVlcnkuY3NzKCBlbGVtLCB0eXBlLCBleHRyYSApIDpcblxuXHRcdFx0XHRcdC8vIFNldCB3aWR0aCBvciBoZWlnaHQgb24gdGhlIGVsZW1lbnRcblx0XHRcdFx0XHRqUXVlcnkuc3R5bGUoIGVsZW0sIHR5cGUsIHZhbHVlLCBleHRyYSApO1xuXHRcdFx0fSwgdHlwZSwgY2hhaW5hYmxlID8gbWFyZ2luIDogdW5kZWZpbmVkLCBjaGFpbmFibGUgKTtcblx0XHR9O1xuXHR9ICk7XG59ICk7XG5cblxualF1ZXJ5LmVhY2goIFtcblx0XCJhamF4U3RhcnRcIixcblx0XCJhamF4U3RvcFwiLFxuXHRcImFqYXhDb21wbGV0ZVwiLFxuXHRcImFqYXhFcnJvclwiLFxuXHRcImFqYXhTdWNjZXNzXCIsXG5cdFwiYWpheFNlbmRcIlxuXSwgZnVuY3Rpb24oIF9pLCB0eXBlICkge1xuXHRqUXVlcnkuZm5bIHR5cGUgXSA9IGZ1bmN0aW9uKCBmbiApIHtcblx0XHRyZXR1cm4gdGhpcy5vbiggdHlwZSwgZm4gKTtcblx0fTtcbn0gKTtcblxuXG5cblxualF1ZXJ5LmZuLmV4dGVuZCgge1xuXG5cdGJpbmQ6IGZ1bmN0aW9uKCB0eXBlcywgZGF0YSwgZm4gKSB7XG5cdFx0cmV0dXJuIHRoaXMub24oIHR5cGVzLCBudWxsLCBkYXRhLCBmbiApO1xuXHR9LFxuXHR1bmJpbmQ6IGZ1bmN0aW9uKCB0eXBlcywgZm4gKSB7XG5cdFx0cmV0dXJuIHRoaXMub2ZmKCB0eXBlcywgbnVsbCwgZm4gKTtcblx0fSxcblxuXHRkZWxlZ2F0ZTogZnVuY3Rpb24oIHNlbGVjdG9yLCB0eXBlcywgZGF0YSwgZm4gKSB7XG5cdFx0cmV0dXJuIHRoaXMub24oIHR5cGVzLCBzZWxlY3RvciwgZGF0YSwgZm4gKTtcblx0fSxcblx0dW5kZWxlZ2F0ZTogZnVuY3Rpb24oIHNlbGVjdG9yLCB0eXBlcywgZm4gKSB7XG5cblx0XHQvLyAoIG5hbWVzcGFjZSApIG9yICggc2VsZWN0b3IsIHR5cGVzIFssIGZuXSApXG5cdFx0cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPT09IDEgP1xuXHRcdFx0dGhpcy5vZmYoIHNlbGVjdG9yLCBcIioqXCIgKSA6XG5cdFx0XHR0aGlzLm9mZiggdHlwZXMsIHNlbGVjdG9yIHx8IFwiKipcIiwgZm4gKTtcblx0fSxcblxuXHRob3ZlcjogZnVuY3Rpb24oIGZuT3ZlciwgZm5PdXQgKSB7XG5cdFx0cmV0dXJuIHRoaXMubW91c2VlbnRlciggZm5PdmVyICkubW91c2VsZWF2ZSggZm5PdXQgfHwgZm5PdmVyICk7XG5cdH1cbn0gKTtcblxualF1ZXJ5LmVhY2goICggXCJibHVyIGZvY3VzIGZvY3VzaW4gZm9jdXNvdXQgcmVzaXplIHNjcm9sbCBjbGljayBkYmxjbGljayBcIiArXG5cdFwibW91c2Vkb3duIG1vdXNldXAgbW91c2Vtb3ZlIG1vdXNlb3ZlciBtb3VzZW91dCBtb3VzZWVudGVyIG1vdXNlbGVhdmUgXCIgK1xuXHRcImNoYW5nZSBzZWxlY3Qgc3VibWl0IGtleWRvd24ga2V5cHJlc3Mga2V5dXAgY29udGV4dG1lbnVcIiApLnNwbGl0KCBcIiBcIiApLFxuXHRmdW5jdGlvbiggX2ksIG5hbWUgKSB7XG5cblx0XHQvLyBIYW5kbGUgZXZlbnQgYmluZGluZ1xuXHRcdGpRdWVyeS5mblsgbmFtZSBdID0gZnVuY3Rpb24oIGRhdGEsIGZuICkge1xuXHRcdFx0cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPiAwID9cblx0XHRcdFx0dGhpcy5vbiggbmFtZSwgbnVsbCwgZGF0YSwgZm4gKSA6XG5cdFx0XHRcdHRoaXMudHJpZ2dlciggbmFtZSApO1xuXHRcdH07XG5cdH0gKTtcblxuXG5cblxuLy8gU3VwcG9ydDogQW5kcm9pZCA8PTQuMCBvbmx5XG4vLyBNYWtlIHN1cmUgd2UgdHJpbSBCT00gYW5kIE5CU1BcbnZhciBydHJpbSA9IC9eW1xcc1xcdUZFRkZcXHhBMF0rfFtcXHNcXHVGRUZGXFx4QTBdKyQvZztcblxuLy8gQmluZCBhIGZ1bmN0aW9uIHRvIGEgY29udGV4dCwgb3B0aW9uYWxseSBwYXJ0aWFsbHkgYXBwbHlpbmcgYW55XG4vLyBhcmd1bWVudHMuXG4vLyBqUXVlcnkucHJveHkgaXMgZGVwcmVjYXRlZCB0byBwcm9tb3RlIHN0YW5kYXJkcyAoc3BlY2lmaWNhbGx5IEZ1bmN0aW9uI2JpbmQpXG4vLyBIb3dldmVyLCBpdCBpcyBub3Qgc2xhdGVkIGZvciByZW1vdmFsIGFueSB0aW1lIHNvb25cbmpRdWVyeS5wcm94eSA9IGZ1bmN0aW9uKCBmbiwgY29udGV4dCApIHtcblx0dmFyIHRtcCwgYXJncywgcHJveHk7XG5cblx0aWYgKCB0eXBlb2YgY29udGV4dCA9PT0gXCJzdHJpbmdcIiApIHtcblx0XHR0bXAgPSBmblsgY29udGV4dCBdO1xuXHRcdGNvbnRleHQgPSBmbjtcblx0XHRmbiA9IHRtcDtcblx0fVxuXG5cdC8vIFF1aWNrIGNoZWNrIHRvIGRldGVybWluZSBpZiB0YXJnZXQgaXMgY2FsbGFibGUsIGluIHRoZSBzcGVjXG5cdC8vIHRoaXMgdGhyb3dzIGEgVHlwZUVycm9yLCBidXQgd2Ugd2lsbCBqdXN0IHJldHVybiB1bmRlZmluZWQuXG5cdGlmICggIWlzRnVuY3Rpb24oIGZuICkgKSB7XG5cdFx0cmV0dXJuIHVuZGVmaW5lZDtcblx0fVxuXG5cdC8vIFNpbXVsYXRlZCBiaW5kXG5cdGFyZ3MgPSBzbGljZS5jYWxsKCBhcmd1bWVudHMsIDIgKTtcblx0cHJveHkgPSBmdW5jdGlvbigpIHtcblx0XHRyZXR1cm4gZm4uYXBwbHkoIGNvbnRleHQgfHwgdGhpcywgYXJncy5jb25jYXQoIHNsaWNlLmNhbGwoIGFyZ3VtZW50cyApICkgKTtcblx0fTtcblxuXHQvLyBTZXQgdGhlIGd1aWQgb2YgdW5pcXVlIGhhbmRsZXIgdG8gdGhlIHNhbWUgb2Ygb3JpZ2luYWwgaGFuZGxlciwgc28gaXQgY2FuIGJlIHJlbW92ZWRcblx0cHJveHkuZ3VpZCA9IGZuLmd1aWQgPSBmbi5ndWlkIHx8IGpRdWVyeS5ndWlkKys7XG5cblx0cmV0dXJuIHByb3h5O1xufTtcblxualF1ZXJ5LmhvbGRSZWFkeSA9IGZ1bmN0aW9uKCBob2xkICkge1xuXHRpZiAoIGhvbGQgKSB7XG5cdFx0alF1ZXJ5LnJlYWR5V2FpdCsrO1xuXHR9IGVsc2Uge1xuXHRcdGpRdWVyeS5yZWFkeSggdHJ1ZSApO1xuXHR9XG59O1xualF1ZXJ5LmlzQXJyYXkgPSBBcnJheS5pc0FycmF5O1xualF1ZXJ5LnBhcnNlSlNPTiA9IEpTT04ucGFyc2U7XG5qUXVlcnkubm9kZU5hbWUgPSBub2RlTmFtZTtcbmpRdWVyeS5pc0Z1bmN0aW9uID0gaXNGdW5jdGlvbjtcbmpRdWVyeS5pc1dpbmRvdyA9IGlzV2luZG93O1xualF1ZXJ5LmNhbWVsQ2FzZSA9IGNhbWVsQ2FzZTtcbmpRdWVyeS50eXBlID0gdG9UeXBlO1xuXG5qUXVlcnkubm93ID0gRGF0ZS5ub3c7XG5cbmpRdWVyeS5pc051bWVyaWMgPSBmdW5jdGlvbiggb2JqICkge1xuXG5cdC8vIEFzIG9mIGpRdWVyeSAzLjAsIGlzTnVtZXJpYyBpcyBsaW1pdGVkIHRvXG5cdC8vIHN0cmluZ3MgYW5kIG51bWJlcnMgKHByaW1pdGl2ZXMgb3Igb2JqZWN0cylcblx0Ly8gdGhhdCBjYW4gYmUgY29lcmNlZCB0byBmaW5pdGUgbnVtYmVycyAoZ2gtMjY2Milcblx0dmFyIHR5cGUgPSBqUXVlcnkudHlwZSggb2JqICk7XG5cdHJldHVybiAoIHR5cGUgPT09IFwibnVtYmVyXCIgfHwgdHlwZSA9PT0gXCJzdHJpbmdcIiApICYmXG5cblx0XHQvLyBwYXJzZUZsb2F0IE5hTnMgbnVtZXJpYy1jYXN0IGZhbHNlIHBvc2l0aXZlcyAoXCJcIilcblx0XHQvLyAuLi5idXQgbWlzaW50ZXJwcmV0cyBsZWFkaW5nLW51bWJlciBzdHJpbmdzLCBwYXJ0aWN1bGFybHkgaGV4IGxpdGVyYWxzIChcIjB4Li4uXCIpXG5cdFx0Ly8gc3VidHJhY3Rpb24gZm9yY2VzIGluZmluaXRpZXMgdG8gTmFOXG5cdFx0IWlzTmFOKCBvYmogLSBwYXJzZUZsb2F0KCBvYmogKSApO1xufTtcblxualF1ZXJ5LnRyaW0gPSBmdW5jdGlvbiggdGV4dCApIHtcblx0cmV0dXJuIHRleHQgPT0gbnVsbCA/XG5cdFx0XCJcIiA6XG5cdFx0KCB0ZXh0ICsgXCJcIiApLnJlcGxhY2UoIHJ0cmltLCBcIlwiICk7XG59O1xuXG5cblxuLy8gUmVnaXN0ZXIgYXMgYSBuYW1lZCBBTUQgbW9kdWxlLCBzaW5jZSBqUXVlcnkgY2FuIGJlIGNvbmNhdGVuYXRlZCB3aXRoIG90aGVyXG4vLyBmaWxlcyB0aGF0IG1heSB1c2UgZGVmaW5lLCBidXQgbm90IHZpYSBhIHByb3BlciBjb25jYXRlbmF0aW9uIHNjcmlwdCB0aGF0XG4vLyB1bmRlcnN0YW5kcyBhbm9ueW1vdXMgQU1EIG1vZHVsZXMuIEEgbmFtZWQgQU1EIGlzIHNhZmVzdCBhbmQgbW9zdCByb2J1c3Rcbi8vIHdheSB0byByZWdpc3Rlci4gTG93ZXJjYXNlIGpxdWVyeSBpcyB1c2VkIGJlY2F1c2UgQU1EIG1vZHVsZSBuYW1lcyBhcmVcbi8vIGRlcml2ZWQgZnJvbSBmaWxlIG5hbWVzLCBhbmQgalF1ZXJ5IGlzIG5vcm1hbGx5IGRlbGl2ZXJlZCBpbiBhIGxvd2VyY2FzZVxuLy8gZmlsZSBuYW1lLiBEbyB0aGlzIGFmdGVyIGNyZWF0aW5nIHRoZSBnbG9iYWwgc28gdGhhdCBpZiBhbiBBTUQgbW9kdWxlIHdhbnRzXG4vLyB0byBjYWxsIG5vQ29uZmxpY3QgdG8gaGlkZSB0aGlzIHZlcnNpb24gb2YgalF1ZXJ5LCBpdCB3aWxsIHdvcmsuXG5cbi8vIE5vdGUgdGhhdCBmb3IgbWF4aW11bSBwb3J0YWJpbGl0eSwgbGlicmFyaWVzIHRoYXQgYXJlIG5vdCBqUXVlcnkgc2hvdWxkXG4vLyBkZWNsYXJlIHRoZW1zZWx2ZXMgYXMgYW5vbnltb3VzIG1vZHVsZXMsIGFuZCBhdm9pZCBzZXR0aW5nIGEgZ2xvYmFsIGlmIGFuXG4vLyBBTUQgbG9hZGVyIGlzIHByZXNlbnQuIGpRdWVyeSBpcyBhIHNwZWNpYWwgY2FzZS4gRm9yIG1vcmUgaW5mb3JtYXRpb24sIHNlZVxuLy8gaHR0cHM6Ly9naXRodWIuY29tL2pyYnVya2UvcmVxdWlyZWpzL3dpa2kvVXBkYXRpbmctZXhpc3RpbmctbGlicmFyaWVzI3dpa2ktYW5vblxuXG5pZiAoIHR5cGVvZiBkZWZpbmUgPT09IFwiZnVuY3Rpb25cIiAmJiBkZWZpbmUuYW1kICkge1xuXHRkZWZpbmUoIFwianF1ZXJ5XCIsIFtdLCBmdW5jdGlvbigpIHtcblx0XHRyZXR1cm4galF1ZXJ5O1xuXHR9ICk7XG59XG5cblxuXG5cbnZhclxuXG5cdC8vIE1hcCBvdmVyIGpRdWVyeSBpbiBjYXNlIG9mIG92ZXJ3cml0ZVxuXHRfalF1ZXJ5ID0gd2luZG93LmpRdWVyeSxcblxuXHQvLyBNYXAgb3ZlciB0aGUgJCBpbiBjYXNlIG9mIG92ZXJ3cml0ZVxuXHRfJCA9IHdpbmRvdy4kO1xuXG5qUXVlcnkubm9Db25mbGljdCA9IGZ1bmN0aW9uKCBkZWVwICkge1xuXHRpZiAoIHdpbmRvdy4kID09PSBqUXVlcnkgKSB7XG5cdFx0d2luZG93LiQgPSBfJDtcblx0fVxuXG5cdGlmICggZGVlcCAmJiB3aW5kb3cualF1ZXJ5ID09PSBqUXVlcnkgKSB7XG5cdFx0d2luZG93LmpRdWVyeSA9IF9qUXVlcnk7XG5cdH1cblxuXHRyZXR1cm4galF1ZXJ5O1xufTtcblxuLy8gRXhwb3NlIGpRdWVyeSBhbmQgJCBpZGVudGlmaWVycywgZXZlbiBpbiBBTURcbi8vICgjNzEwMiNjb21tZW50OjEwLCBodHRwczovL2dpdGh1Yi5jb20vanF1ZXJ5L2pxdWVyeS9wdWxsLzU1Nylcbi8vIGFuZCBDb21tb25KUyBmb3IgYnJvd3NlciBlbXVsYXRvcnMgKCMxMzU2NilcbmlmICggdHlwZW9mIG5vR2xvYmFsID09PSBcInVuZGVmaW5lZFwiICkge1xuXHR3aW5kb3cualF1ZXJ5ID0gd2luZG93LiQgPSBqUXVlcnk7XG59XG5cblxuXG5cbnJldHVybiBqUXVlcnk7XG59ICk7XG4iLCIvKiEgalF1ZXJ5IFVJIC0gdjEuMTIuMSAtIDIwMTYtMDktMTRcbiogaHR0cDovL2pxdWVyeXVpLmNvbVxuKiBJbmNsdWRlczogd2lkZ2V0LmpzLCBwb3NpdGlvbi5qcywgZGF0YS5qcywgZGlzYWJsZS1zZWxlY3Rpb24uanMsIGVmZmVjdC5qcywgZWZmZWN0cy9lZmZlY3QtYmxpbmQuanMsIGVmZmVjdHMvZWZmZWN0LWJvdW5jZS5qcywgZWZmZWN0cy9lZmZlY3QtY2xpcC5qcywgZWZmZWN0cy9lZmZlY3QtZHJvcC5qcywgZWZmZWN0cy9lZmZlY3QtZXhwbG9kZS5qcywgZWZmZWN0cy9lZmZlY3QtZmFkZS5qcywgZWZmZWN0cy9lZmZlY3QtZm9sZC5qcywgZWZmZWN0cy9lZmZlY3QtaGlnaGxpZ2h0LmpzLCBlZmZlY3RzL2VmZmVjdC1wdWZmLmpzLCBlZmZlY3RzL2VmZmVjdC1wdWxzYXRlLmpzLCBlZmZlY3RzL2VmZmVjdC1zY2FsZS5qcywgZWZmZWN0cy9lZmZlY3Qtc2hha2UuanMsIGVmZmVjdHMvZWZmZWN0LXNpemUuanMsIGVmZmVjdHMvZWZmZWN0LXNsaWRlLmpzLCBlZmZlY3RzL2VmZmVjdC10cmFuc2Zlci5qcywgZm9jdXNhYmxlLmpzLCBmb3JtLXJlc2V0LW1peGluLmpzLCBqcXVlcnktMS03LmpzLCBrZXljb2RlLmpzLCBsYWJlbHMuanMsIHNjcm9sbC1wYXJlbnQuanMsIHRhYmJhYmxlLmpzLCB1bmlxdWUtaWQuanMsIHdpZGdldHMvYWNjb3JkaW9uLmpzLCB3aWRnZXRzL2F1dG9jb21wbGV0ZS5qcywgd2lkZ2V0cy9idXR0b24uanMsIHdpZGdldHMvY2hlY2tib3hyYWRpby5qcywgd2lkZ2V0cy9jb250cm9sZ3JvdXAuanMsIHdpZGdldHMvZGF0ZXBpY2tlci5qcywgd2lkZ2V0cy9kaWFsb2cuanMsIHdpZGdldHMvZHJhZ2dhYmxlLmpzLCB3aWRnZXRzL2Ryb3BwYWJsZS5qcywgd2lkZ2V0cy9tZW51LmpzLCB3aWRnZXRzL21vdXNlLmpzLCB3aWRnZXRzL3Byb2dyZXNzYmFyLmpzLCB3aWRnZXRzL3Jlc2l6YWJsZS5qcywgd2lkZ2V0cy9zZWxlY3RhYmxlLmpzLCB3aWRnZXRzL3NlbGVjdG1lbnUuanMsIHdpZGdldHMvc2xpZGVyLmpzLCB3aWRnZXRzL3NvcnRhYmxlLmpzLCB3aWRnZXRzL3NwaW5uZXIuanMsIHdpZGdldHMvdGFicy5qcywgd2lkZ2V0cy90b29sdGlwLmpzXG4qIENvcHlyaWdodCBqUXVlcnkgRm91bmRhdGlvbiBhbmQgb3RoZXIgY29udHJpYnV0b3JzOyBMaWNlbnNlZCBNSVQgKi9cblxuKGZ1bmN0aW9uKHQpe1wiZnVuY3Rpb25cIj09dHlwZW9mIGRlZmluZSYmZGVmaW5lLmFtZD9kZWZpbmUoW1wianF1ZXJ5XCJdLHQpOnQoalF1ZXJ5KX0pKGZ1bmN0aW9uKHQpe2Z1bmN0aW9uIGUodCl7Zm9yKHZhciBlPXQuY3NzKFwidmlzaWJpbGl0eVwiKTtcImluaGVyaXRcIj09PWU7KXQ9dC5wYXJlbnQoKSxlPXQuY3NzKFwidmlzaWJpbGl0eVwiKTtyZXR1cm5cImhpZGRlblwiIT09ZX1mdW5jdGlvbiBpKHQpe2Zvcih2YXIgZSxpO3QubGVuZ3RoJiZ0WzBdIT09ZG9jdW1lbnQ7KXtpZihlPXQuY3NzKFwicG9zaXRpb25cIiksKFwiYWJzb2x1dGVcIj09PWV8fFwicmVsYXRpdmVcIj09PWV8fFwiZml4ZWRcIj09PWUpJiYoaT1wYXJzZUludCh0LmNzcyhcInpJbmRleFwiKSwxMCksIWlzTmFOKGkpJiYwIT09aSkpcmV0dXJuIGk7dD10LnBhcmVudCgpfXJldHVybiAwfWZ1bmN0aW9uIHMoKXt0aGlzLl9jdXJJbnN0PW51bGwsdGhpcy5fa2V5RXZlbnQ9ITEsdGhpcy5fZGlzYWJsZWRJbnB1dHM9W10sdGhpcy5fZGF0ZXBpY2tlclNob3dpbmc9ITEsdGhpcy5faW5EaWFsb2c9ITEsdGhpcy5fbWFpbkRpdklkPVwidWktZGF0ZXBpY2tlci1kaXZcIix0aGlzLl9pbmxpbmVDbGFzcz1cInVpLWRhdGVwaWNrZXItaW5saW5lXCIsdGhpcy5fYXBwZW5kQ2xhc3M9XCJ1aS1kYXRlcGlja2VyLWFwcGVuZFwiLHRoaXMuX3RyaWdnZXJDbGFzcz1cInVpLWRhdGVwaWNrZXItdHJpZ2dlclwiLHRoaXMuX2RpYWxvZ0NsYXNzPVwidWktZGF0ZXBpY2tlci1kaWFsb2dcIix0aGlzLl9kaXNhYmxlQ2xhc3M9XCJ1aS1kYXRlcGlja2VyLWRpc2FibGVkXCIsdGhpcy5fdW5zZWxlY3RhYmxlQ2xhc3M9XCJ1aS1kYXRlcGlja2VyLXVuc2VsZWN0YWJsZVwiLHRoaXMuX2N1cnJlbnRDbGFzcz1cInVpLWRhdGVwaWNrZXItY3VycmVudC1kYXlcIix0aGlzLl9kYXlPdmVyQ2xhc3M9XCJ1aS1kYXRlcGlja2VyLWRheXMtY2VsbC1vdmVyXCIsdGhpcy5yZWdpb25hbD1bXSx0aGlzLnJlZ2lvbmFsW1wiXCJdPXtjbG9zZVRleHQ6XCJEb25lXCIscHJldlRleHQ6XCJQcmV2XCIsbmV4dFRleHQ6XCJOZXh0XCIsY3VycmVudFRleHQ6XCJUb2RheVwiLG1vbnRoTmFtZXM6W1wiSmFudWFyeVwiLFwiRmVicnVhcnlcIixcIk1hcmNoXCIsXCJBcHJpbFwiLFwiTWF5XCIsXCJKdW5lXCIsXCJKdWx5XCIsXCJBdWd1c3RcIixcIlNlcHRlbWJlclwiLFwiT2N0b2JlclwiLFwiTm92ZW1iZXJcIixcIkRlY2VtYmVyXCJdLG1vbnRoTmFtZXNTaG9ydDpbXCJKYW5cIixcIkZlYlwiLFwiTWFyXCIsXCJBcHJcIixcIk1heVwiLFwiSnVuXCIsXCJKdWxcIixcIkF1Z1wiLFwiU2VwXCIsXCJPY3RcIixcIk5vdlwiLFwiRGVjXCJdLGRheU5hbWVzOltcIlN1bmRheVwiLFwiTW9uZGF5XCIsXCJUdWVzZGF5XCIsXCJXZWRuZXNkYXlcIixcIlRodXJzZGF5XCIsXCJGcmlkYXlcIixcIlNhdHVyZGF5XCJdLGRheU5hbWVzU2hvcnQ6W1wiU3VuXCIsXCJNb25cIixcIlR1ZVwiLFwiV2VkXCIsXCJUaHVcIixcIkZyaVwiLFwiU2F0XCJdLGRheU5hbWVzTWluOltcIlN1XCIsXCJNb1wiLFwiVHVcIixcIldlXCIsXCJUaFwiLFwiRnJcIixcIlNhXCJdLHdlZWtIZWFkZXI6XCJXa1wiLGRhdGVGb3JtYXQ6XCJtbS9kZC95eVwiLGZpcnN0RGF5OjAsaXNSVEw6ITEsc2hvd01vbnRoQWZ0ZXJZZWFyOiExLHllYXJTdWZmaXg6XCJcIn0sdGhpcy5fZGVmYXVsdHM9e3Nob3dPbjpcImZvY3VzXCIsc2hvd0FuaW06XCJmYWRlSW5cIixzaG93T3B0aW9uczp7fSxkZWZhdWx0RGF0ZTpudWxsLGFwcGVuZFRleHQ6XCJcIixidXR0b25UZXh0OlwiLi4uXCIsYnV0dG9uSW1hZ2U6XCJcIixidXR0b25JbWFnZU9ubHk6ITEsaGlkZUlmTm9QcmV2TmV4dDohMSxuYXZpZ2F0aW9uQXNEYXRlRm9ybWF0OiExLGdvdG9DdXJyZW50OiExLGNoYW5nZU1vbnRoOiExLGNoYW5nZVllYXI6ITEseWVhclJhbmdlOlwiYy0xMDpjKzEwXCIsc2hvd090aGVyTW9udGhzOiExLHNlbGVjdE90aGVyTW9udGhzOiExLHNob3dXZWVrOiExLGNhbGN1bGF0ZVdlZWs6dGhpcy5pc284NjAxV2VlayxzaG9ydFllYXJDdXRvZmY6XCIrMTBcIixtaW5EYXRlOm51bGwsbWF4RGF0ZTpudWxsLGR1cmF0aW9uOlwiZmFzdFwiLGJlZm9yZVNob3dEYXk6bnVsbCxiZWZvcmVTaG93Om51bGwsb25TZWxlY3Q6bnVsbCxvbkNoYW5nZU1vbnRoWWVhcjpudWxsLG9uQ2xvc2U6bnVsbCxudW1iZXJPZk1vbnRoczoxLHNob3dDdXJyZW50QXRQb3M6MCxzdGVwTW9udGhzOjEsc3RlcEJpZ01vbnRoczoxMixhbHRGaWVsZDpcIlwiLGFsdEZvcm1hdDpcIlwiLGNvbnN0cmFpbklucHV0OiEwLHNob3dCdXR0b25QYW5lbDohMSxhdXRvU2l6ZTohMSxkaXNhYmxlZDohMX0sdC5leHRlbmQodGhpcy5fZGVmYXVsdHMsdGhpcy5yZWdpb25hbFtcIlwiXSksdGhpcy5yZWdpb25hbC5lbj10LmV4dGVuZCghMCx7fSx0aGlzLnJlZ2lvbmFsW1wiXCJdKSx0aGlzLnJlZ2lvbmFsW1wiZW4tVVNcIl09dC5leHRlbmQoITAse30sdGhpcy5yZWdpb25hbC5lbiksdGhpcy5kcERpdj1uKHQoXCI8ZGl2IGlkPSdcIit0aGlzLl9tYWluRGl2SWQrXCInIGNsYXNzPSd1aS1kYXRlcGlja2VyIHVpLXdpZGdldCB1aS13aWRnZXQtY29udGVudCB1aS1oZWxwZXItY2xlYXJmaXggdWktY29ybmVyLWFsbCc+PC9kaXY+XCIpKX1mdW5jdGlvbiBuKGUpe3ZhciBpPVwiYnV0dG9uLCAudWktZGF0ZXBpY2tlci1wcmV2LCAudWktZGF0ZXBpY2tlci1uZXh0LCAudWktZGF0ZXBpY2tlci1jYWxlbmRhciB0ZCBhXCI7cmV0dXJuIGUub24oXCJtb3VzZW91dFwiLGksZnVuY3Rpb24oKXt0KHRoaXMpLnJlbW92ZUNsYXNzKFwidWktc3RhdGUtaG92ZXJcIiksLTEhPT10aGlzLmNsYXNzTmFtZS5pbmRleE9mKFwidWktZGF0ZXBpY2tlci1wcmV2XCIpJiZ0KHRoaXMpLnJlbW92ZUNsYXNzKFwidWktZGF0ZXBpY2tlci1wcmV2LWhvdmVyXCIpLC0xIT09dGhpcy5jbGFzc05hbWUuaW5kZXhPZihcInVpLWRhdGVwaWNrZXItbmV4dFwiKSYmdCh0aGlzKS5yZW1vdmVDbGFzcyhcInVpLWRhdGVwaWNrZXItbmV4dC1ob3ZlclwiKX0pLm9uKFwibW91c2VvdmVyXCIsaSxvKX1mdW5jdGlvbiBvKCl7dC5kYXRlcGlja2VyLl9pc0Rpc2FibGVkRGF0ZXBpY2tlcihtLmlubGluZT9tLmRwRGl2LnBhcmVudCgpWzBdOm0uaW5wdXRbMF0pfHwodCh0aGlzKS5wYXJlbnRzKFwiLnVpLWRhdGVwaWNrZXItY2FsZW5kYXJcIikuZmluZChcImFcIikucmVtb3ZlQ2xhc3MoXCJ1aS1zdGF0ZS1ob3ZlclwiKSx0KHRoaXMpLmFkZENsYXNzKFwidWktc3RhdGUtaG92ZXJcIiksLTEhPT10aGlzLmNsYXNzTmFtZS5pbmRleE9mKFwidWktZGF0ZXBpY2tlci1wcmV2XCIpJiZ0KHRoaXMpLmFkZENsYXNzKFwidWktZGF0ZXBpY2tlci1wcmV2LWhvdmVyXCIpLC0xIT09dGhpcy5jbGFzc05hbWUuaW5kZXhPZihcInVpLWRhdGVwaWNrZXItbmV4dFwiKSYmdCh0aGlzKS5hZGRDbGFzcyhcInVpLWRhdGVwaWNrZXItbmV4dC1ob3ZlclwiKSl9ZnVuY3Rpb24gYShlLGkpe3QuZXh0ZW5kKGUsaSk7Zm9yKHZhciBzIGluIGkpbnVsbD09aVtzXSYmKGVbc109aVtzXSk7cmV0dXJuIGV9ZnVuY3Rpb24gcih0KXtyZXR1cm4gZnVuY3Rpb24oKXt2YXIgZT10aGlzLmVsZW1lbnQudmFsKCk7dC5hcHBseSh0aGlzLGFyZ3VtZW50cyksdGhpcy5fcmVmcmVzaCgpLGUhPT10aGlzLmVsZW1lbnQudmFsKCkmJnRoaXMuX3RyaWdnZXIoXCJjaGFuZ2VcIil9fXQudWk9dC51aXx8e30sdC51aS52ZXJzaW9uPVwiMS4xMi4xXCI7dmFyIGg9MCxsPUFycmF5LnByb3RvdHlwZS5zbGljZTt0LmNsZWFuRGF0YT1mdW5jdGlvbihlKXtyZXR1cm4gZnVuY3Rpb24oaSl7dmFyIHMsbixvO2ZvcihvPTA7bnVsbCE9KG49aVtvXSk7bysrKXRyeXtzPXQuX2RhdGEobixcImV2ZW50c1wiKSxzJiZzLnJlbW92ZSYmdChuKS50cmlnZ2VySGFuZGxlcihcInJlbW92ZVwiKX1jYXRjaChhKXt9ZShpKX19KHQuY2xlYW5EYXRhKSx0LndpZGdldD1mdW5jdGlvbihlLGkscyl7dmFyIG4sbyxhLHI9e30saD1lLnNwbGl0KFwiLlwiKVswXTtlPWUuc3BsaXQoXCIuXCIpWzFdO3ZhciBsPWgrXCItXCIrZTtyZXR1cm4gc3x8KHM9aSxpPXQuV2lkZ2V0KSx0LmlzQXJyYXkocykmJihzPXQuZXh0ZW5kLmFwcGx5KG51bGwsW3t9XS5jb25jYXQocykpKSx0LmV4cHJbXCI6XCJdW2wudG9Mb3dlckNhc2UoKV09ZnVuY3Rpb24oZSl7cmV0dXJuISF0LmRhdGEoZSxsKX0sdFtoXT10W2hdfHx7fSxuPXRbaF1bZV0sbz10W2hdW2VdPWZ1bmN0aW9uKHQsZSl7cmV0dXJuIHRoaXMuX2NyZWF0ZVdpZGdldD8oYXJndW1lbnRzLmxlbmd0aCYmdGhpcy5fY3JlYXRlV2lkZ2V0KHQsZSksdm9pZCAwKTpuZXcgbyh0LGUpfSx0LmV4dGVuZChvLG4se3ZlcnNpb246cy52ZXJzaW9uLF9wcm90bzp0LmV4dGVuZCh7fSxzKSxfY2hpbGRDb25zdHJ1Y3RvcnM6W119KSxhPW5ldyBpLGEub3B0aW9ucz10LndpZGdldC5leHRlbmQoe30sYS5vcHRpb25zKSx0LmVhY2gocyxmdW5jdGlvbihlLHMpe3JldHVybiB0LmlzRnVuY3Rpb24ocyk/KHJbZV09ZnVuY3Rpb24oKXtmdW5jdGlvbiB0KCl7cmV0dXJuIGkucHJvdG90eXBlW2VdLmFwcGx5KHRoaXMsYXJndW1lbnRzKX1mdW5jdGlvbiBuKHQpe3JldHVybiBpLnByb3RvdHlwZVtlXS5hcHBseSh0aGlzLHQpfXJldHVybiBmdW5jdGlvbigpe3ZhciBlLGk9dGhpcy5fc3VwZXIsbz10aGlzLl9zdXBlckFwcGx5O3JldHVybiB0aGlzLl9zdXBlcj10LHRoaXMuX3N1cGVyQXBwbHk9bixlPXMuYXBwbHkodGhpcyxhcmd1bWVudHMpLHRoaXMuX3N1cGVyPWksdGhpcy5fc3VwZXJBcHBseT1vLGV9fSgpLHZvaWQgMCk6KHJbZV09cyx2b2lkIDApfSksby5wcm90b3R5cGU9dC53aWRnZXQuZXh0ZW5kKGEse3dpZGdldEV2ZW50UHJlZml4Om4/YS53aWRnZXRFdmVudFByZWZpeHx8ZTplfSxyLHtjb25zdHJ1Y3RvcjpvLG5hbWVzcGFjZTpoLHdpZGdldE5hbWU6ZSx3aWRnZXRGdWxsTmFtZTpsfSksbj8odC5lYWNoKG4uX2NoaWxkQ29uc3RydWN0b3JzLGZ1bmN0aW9uKGUsaSl7dmFyIHM9aS5wcm90b3R5cGU7dC53aWRnZXQocy5uYW1lc3BhY2UrXCIuXCIrcy53aWRnZXROYW1lLG8saS5fcHJvdG8pfSksZGVsZXRlIG4uX2NoaWxkQ29uc3RydWN0b3JzKTppLl9jaGlsZENvbnN0cnVjdG9ycy5wdXNoKG8pLHQud2lkZ2V0LmJyaWRnZShlLG8pLG99LHQud2lkZ2V0LmV4dGVuZD1mdW5jdGlvbihlKXtmb3IodmFyIGkscyxuPWwuY2FsbChhcmd1bWVudHMsMSksbz0wLGE9bi5sZW5ndGg7YT5vO28rKylmb3IoaSBpbiBuW29dKXM9bltvXVtpXSxuW29dLmhhc093blByb3BlcnR5KGkpJiZ2b2lkIDAhPT1zJiYoZVtpXT10LmlzUGxhaW5PYmplY3Qocyk/dC5pc1BsYWluT2JqZWN0KGVbaV0pP3Qud2lkZ2V0LmV4dGVuZCh7fSxlW2ldLHMpOnQud2lkZ2V0LmV4dGVuZCh7fSxzKTpzKTtyZXR1cm4gZX0sdC53aWRnZXQuYnJpZGdlPWZ1bmN0aW9uKGUsaSl7dmFyIHM9aS5wcm90b3R5cGUud2lkZ2V0RnVsbE5hbWV8fGU7dC5mbltlXT1mdW5jdGlvbihuKXt2YXIgbz1cInN0cmluZ1wiPT10eXBlb2YgbixhPWwuY2FsbChhcmd1bWVudHMsMSkscj10aGlzO3JldHVybiBvP3RoaXMubGVuZ3RofHxcImluc3RhbmNlXCIhPT1uP3RoaXMuZWFjaChmdW5jdGlvbigpe3ZhciBpLG89dC5kYXRhKHRoaXMscyk7cmV0dXJuXCJpbnN0YW5jZVwiPT09bj8ocj1vLCExKTpvP3QuaXNGdW5jdGlvbihvW25dKSYmXCJfXCIhPT1uLmNoYXJBdCgwKT8oaT1vW25dLmFwcGx5KG8sYSksaSE9PW8mJnZvaWQgMCE9PWk/KHI9aSYmaS5qcXVlcnk/ci5wdXNoU3RhY2soaS5nZXQoKSk6aSwhMSk6dm9pZCAwKTp0LmVycm9yKFwibm8gc3VjaCBtZXRob2QgJ1wiK24rXCInIGZvciBcIitlK1wiIHdpZGdldCBpbnN0YW5jZVwiKTp0LmVycm9yKFwiY2Fubm90IGNhbGwgbWV0aG9kcyBvbiBcIitlK1wiIHByaW9yIHRvIGluaXRpYWxpemF0aW9uOyBcIitcImF0dGVtcHRlZCB0byBjYWxsIG1ldGhvZCAnXCIrbitcIidcIil9KTpyPXZvaWQgMDooYS5sZW5ndGgmJihuPXQud2lkZ2V0LmV4dGVuZC5hcHBseShudWxsLFtuXS5jb25jYXQoYSkpKSx0aGlzLmVhY2goZnVuY3Rpb24oKXt2YXIgZT10LmRhdGEodGhpcyxzKTtlPyhlLm9wdGlvbihufHx7fSksZS5faW5pdCYmZS5faW5pdCgpKTp0LmRhdGEodGhpcyxzLG5ldyBpKG4sdGhpcykpfSkpLHJ9fSx0LldpZGdldD1mdW5jdGlvbigpe30sdC5XaWRnZXQuX2NoaWxkQ29uc3RydWN0b3JzPVtdLHQuV2lkZ2V0LnByb3RvdHlwZT17d2lkZ2V0TmFtZTpcIndpZGdldFwiLHdpZGdldEV2ZW50UHJlZml4OlwiXCIsZGVmYXVsdEVsZW1lbnQ6XCI8ZGl2PlwiLG9wdGlvbnM6e2NsYXNzZXM6e30sZGlzYWJsZWQ6ITEsY3JlYXRlOm51bGx9LF9jcmVhdGVXaWRnZXQ6ZnVuY3Rpb24oZSxpKXtpPXQoaXx8dGhpcy5kZWZhdWx0RWxlbWVudHx8dGhpcylbMF0sdGhpcy5lbGVtZW50PXQoaSksdGhpcy51dWlkPWgrKyx0aGlzLmV2ZW50TmFtZXNwYWNlPVwiLlwiK3RoaXMud2lkZ2V0TmFtZSt0aGlzLnV1aWQsdGhpcy5iaW5kaW5ncz10KCksdGhpcy5ob3ZlcmFibGU9dCgpLHRoaXMuZm9jdXNhYmxlPXQoKSx0aGlzLmNsYXNzZXNFbGVtZW50TG9va3VwPXt9LGkhPT10aGlzJiYodC5kYXRhKGksdGhpcy53aWRnZXRGdWxsTmFtZSx0aGlzKSx0aGlzLl9vbighMCx0aGlzLmVsZW1lbnQse3JlbW92ZTpmdW5jdGlvbih0KXt0LnRhcmdldD09PWkmJnRoaXMuZGVzdHJveSgpfX0pLHRoaXMuZG9jdW1lbnQ9dChpLnN0eWxlP2kub3duZXJEb2N1bWVudDppLmRvY3VtZW50fHxpKSx0aGlzLndpbmRvdz10KHRoaXMuZG9jdW1lbnRbMF0uZGVmYXVsdFZpZXd8fHRoaXMuZG9jdW1lbnRbMF0ucGFyZW50V2luZG93KSksdGhpcy5vcHRpb25zPXQud2lkZ2V0LmV4dGVuZCh7fSx0aGlzLm9wdGlvbnMsdGhpcy5fZ2V0Q3JlYXRlT3B0aW9ucygpLGUpLHRoaXMuX2NyZWF0ZSgpLHRoaXMub3B0aW9ucy5kaXNhYmxlZCYmdGhpcy5fc2V0T3B0aW9uRGlzYWJsZWQodGhpcy5vcHRpb25zLmRpc2FibGVkKSx0aGlzLl90cmlnZ2VyKFwiY3JlYXRlXCIsbnVsbCx0aGlzLl9nZXRDcmVhdGVFdmVudERhdGEoKSksdGhpcy5faW5pdCgpfSxfZ2V0Q3JlYXRlT3B0aW9uczpmdW5jdGlvbigpe3JldHVybnt9fSxfZ2V0Q3JlYXRlRXZlbnREYXRhOnQubm9vcCxfY3JlYXRlOnQubm9vcCxfaW5pdDp0Lm5vb3AsZGVzdHJveTpmdW5jdGlvbigpe3ZhciBlPXRoaXM7dGhpcy5fZGVzdHJveSgpLHQuZWFjaCh0aGlzLmNsYXNzZXNFbGVtZW50TG9va3VwLGZ1bmN0aW9uKHQsaSl7ZS5fcmVtb3ZlQ2xhc3MoaSx0KX0pLHRoaXMuZWxlbWVudC5vZmYodGhpcy5ldmVudE5hbWVzcGFjZSkucmVtb3ZlRGF0YSh0aGlzLndpZGdldEZ1bGxOYW1lKSx0aGlzLndpZGdldCgpLm9mZih0aGlzLmV2ZW50TmFtZXNwYWNlKS5yZW1vdmVBdHRyKFwiYXJpYS1kaXNhYmxlZFwiKSx0aGlzLmJpbmRpbmdzLm9mZih0aGlzLmV2ZW50TmFtZXNwYWNlKX0sX2Rlc3Ryb3k6dC5ub29wLHdpZGdldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLmVsZW1lbnR9LG9wdGlvbjpmdW5jdGlvbihlLGkpe3ZhciBzLG4sbyxhPWU7aWYoMD09PWFyZ3VtZW50cy5sZW5ndGgpcmV0dXJuIHQud2lkZ2V0LmV4dGVuZCh7fSx0aGlzLm9wdGlvbnMpO2lmKFwic3RyaW5nXCI9PXR5cGVvZiBlKWlmKGE9e30scz1lLnNwbGl0KFwiLlwiKSxlPXMuc2hpZnQoKSxzLmxlbmd0aCl7Zm9yKG49YVtlXT10LndpZGdldC5leHRlbmQoe30sdGhpcy5vcHRpb25zW2VdKSxvPTA7cy5sZW5ndGgtMT5vO28rKyluW3Nbb11dPW5bc1tvXV18fHt9LG49bltzW29dXTtpZihlPXMucG9wKCksMT09PWFyZ3VtZW50cy5sZW5ndGgpcmV0dXJuIHZvaWQgMD09PW5bZV0/bnVsbDpuW2VdO25bZV09aX1lbHNle2lmKDE9PT1hcmd1bWVudHMubGVuZ3RoKXJldHVybiB2b2lkIDA9PT10aGlzLm9wdGlvbnNbZV0/bnVsbDp0aGlzLm9wdGlvbnNbZV07YVtlXT1pfXJldHVybiB0aGlzLl9zZXRPcHRpb25zKGEpLHRoaXN9LF9zZXRPcHRpb25zOmZ1bmN0aW9uKHQpe3ZhciBlO2ZvcihlIGluIHQpdGhpcy5fc2V0T3B0aW9uKGUsdFtlXSk7cmV0dXJuIHRoaXN9LF9zZXRPcHRpb246ZnVuY3Rpb24odCxlKXtyZXR1cm5cImNsYXNzZXNcIj09PXQmJnRoaXMuX3NldE9wdGlvbkNsYXNzZXMoZSksdGhpcy5vcHRpb25zW3RdPWUsXCJkaXNhYmxlZFwiPT09dCYmdGhpcy5fc2V0T3B0aW9uRGlzYWJsZWQoZSksdGhpc30sX3NldE9wdGlvbkNsYXNzZXM6ZnVuY3Rpb24oZSl7dmFyIGkscyxuO2ZvcihpIGluIGUpbj10aGlzLmNsYXNzZXNFbGVtZW50TG9va3VwW2ldLGVbaV0hPT10aGlzLm9wdGlvbnMuY2xhc3Nlc1tpXSYmbiYmbi5sZW5ndGgmJihzPXQobi5nZXQoKSksdGhpcy5fcmVtb3ZlQ2xhc3MobixpKSxzLmFkZENsYXNzKHRoaXMuX2NsYXNzZXMoe2VsZW1lbnQ6cyxrZXlzOmksY2xhc3NlczplLGFkZDohMH0pKSl9LF9zZXRPcHRpb25EaXNhYmxlZDpmdW5jdGlvbih0KXt0aGlzLl90b2dnbGVDbGFzcyh0aGlzLndpZGdldCgpLHRoaXMud2lkZ2V0RnVsbE5hbWUrXCItZGlzYWJsZWRcIixudWxsLCEhdCksdCYmKHRoaXMuX3JlbW92ZUNsYXNzKHRoaXMuaG92ZXJhYmxlLG51bGwsXCJ1aS1zdGF0ZS1ob3ZlclwiKSx0aGlzLl9yZW1vdmVDbGFzcyh0aGlzLmZvY3VzYWJsZSxudWxsLFwidWktc3RhdGUtZm9jdXNcIikpfSxlbmFibGU6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fc2V0T3B0aW9ucyh7ZGlzYWJsZWQ6ITF9KX0sZGlzYWJsZTpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9zZXRPcHRpb25zKHtkaXNhYmxlZDohMH0pfSxfY2xhc3NlczpmdW5jdGlvbihlKXtmdW5jdGlvbiBpKGksbyl7dmFyIGEscjtmb3Iocj0wO2kubGVuZ3RoPnI7cisrKWE9bi5jbGFzc2VzRWxlbWVudExvb2t1cFtpW3JdXXx8dCgpLGE9ZS5hZGQ/dCh0LnVuaXF1ZShhLmdldCgpLmNvbmNhdChlLmVsZW1lbnQuZ2V0KCkpKSk6dChhLm5vdChlLmVsZW1lbnQpLmdldCgpKSxuLmNsYXNzZXNFbGVtZW50TG9va3VwW2lbcl1dPWEscy5wdXNoKGlbcl0pLG8mJmUuY2xhc3Nlc1tpW3JdXSYmcy5wdXNoKGUuY2xhc3Nlc1tpW3JdXSl9dmFyIHM9W10sbj10aGlzO3JldHVybiBlPXQuZXh0ZW5kKHtlbGVtZW50OnRoaXMuZWxlbWVudCxjbGFzc2VzOnRoaXMub3B0aW9ucy5jbGFzc2VzfHx7fX0sZSksdGhpcy5fb24oZS5lbGVtZW50LHtyZW1vdmU6XCJfdW50cmFja0NsYXNzZXNFbGVtZW50XCJ9KSxlLmtleXMmJmkoZS5rZXlzLm1hdGNoKC9cXFMrL2cpfHxbXSwhMCksZS5leHRyYSYmaShlLmV4dHJhLm1hdGNoKC9cXFMrL2cpfHxbXSkscy5qb2luKFwiIFwiKX0sX3VudHJhY2tDbGFzc2VzRWxlbWVudDpmdW5jdGlvbihlKXt2YXIgaT10aGlzO3QuZWFjaChpLmNsYXNzZXNFbGVtZW50TG9va3VwLGZ1bmN0aW9uKHMsbil7LTEhPT10LmluQXJyYXkoZS50YXJnZXQsbikmJihpLmNsYXNzZXNFbGVtZW50TG9va3VwW3NdPXQobi5ub3QoZS50YXJnZXQpLmdldCgpKSl9KX0sX3JlbW92ZUNsYXNzOmZ1bmN0aW9uKHQsZSxpKXtyZXR1cm4gdGhpcy5fdG9nZ2xlQ2xhc3ModCxlLGksITEpfSxfYWRkQ2xhc3M6ZnVuY3Rpb24odCxlLGkpe3JldHVybiB0aGlzLl90b2dnbGVDbGFzcyh0LGUsaSwhMCl9LF90b2dnbGVDbGFzczpmdW5jdGlvbih0LGUsaSxzKXtzPVwiYm9vbGVhblwiPT10eXBlb2Ygcz9zOmk7dmFyIG49XCJzdHJpbmdcIj09dHlwZW9mIHR8fG51bGw9PT10LG89e2V4dHJhOm4/ZTppLGtleXM6bj90OmUsZWxlbWVudDpuP3RoaXMuZWxlbWVudDp0LGFkZDpzfTtyZXR1cm4gby5lbGVtZW50LnRvZ2dsZUNsYXNzKHRoaXMuX2NsYXNzZXMobykscyksdGhpc30sX29uOmZ1bmN0aW9uKGUsaSxzKXt2YXIgbixvPXRoaXM7XCJib29sZWFuXCIhPXR5cGVvZiBlJiYocz1pLGk9ZSxlPSExKSxzPyhpPW49dChpKSx0aGlzLmJpbmRpbmdzPXRoaXMuYmluZGluZ3MuYWRkKGkpKToocz1pLGk9dGhpcy5lbGVtZW50LG49dGhpcy53aWRnZXQoKSksdC5lYWNoKHMsZnVuY3Rpb24ocyxhKXtmdW5jdGlvbiByKCl7cmV0dXJuIGV8fG8ub3B0aW9ucy5kaXNhYmxlZCE9PSEwJiYhdCh0aGlzKS5oYXNDbGFzcyhcInVpLXN0YXRlLWRpc2FibGVkXCIpPyhcInN0cmluZ1wiPT10eXBlb2YgYT9vW2FdOmEpLmFwcGx5KG8sYXJndW1lbnRzKTp2b2lkIDB9XCJzdHJpbmdcIiE9dHlwZW9mIGEmJihyLmd1aWQ9YS5ndWlkPWEuZ3VpZHx8ci5ndWlkfHx0Lmd1aWQrKyk7dmFyIGg9cy5tYXRjaCgvXihbXFx3Oi1dKilcXHMqKC4qKSQvKSxsPWhbMV0rby5ldmVudE5hbWVzcGFjZSxjPWhbMl07Yz9uLm9uKGwsYyxyKTppLm9uKGwscil9KX0sX29mZjpmdW5jdGlvbihlLGkpe2k9KGl8fFwiXCIpLnNwbGl0KFwiIFwiKS5qb2luKHRoaXMuZXZlbnROYW1lc3BhY2UrXCIgXCIpK3RoaXMuZXZlbnROYW1lc3BhY2UsZS5vZmYoaSkub2ZmKGkpLHRoaXMuYmluZGluZ3M9dCh0aGlzLmJpbmRpbmdzLm5vdChlKS5nZXQoKSksdGhpcy5mb2N1c2FibGU9dCh0aGlzLmZvY3VzYWJsZS5ub3QoZSkuZ2V0KCkpLHRoaXMuaG92ZXJhYmxlPXQodGhpcy5ob3ZlcmFibGUubm90KGUpLmdldCgpKX0sX2RlbGF5OmZ1bmN0aW9uKHQsZSl7ZnVuY3Rpb24gaSgpe3JldHVybihcInN0cmluZ1wiPT10eXBlb2YgdD9zW3RdOnQpLmFwcGx5KHMsYXJndW1lbnRzKX12YXIgcz10aGlzO3JldHVybiBzZXRUaW1lb3V0KGksZXx8MCl9LF9ob3ZlcmFibGU6ZnVuY3Rpb24oZSl7dGhpcy5ob3ZlcmFibGU9dGhpcy5ob3ZlcmFibGUuYWRkKGUpLHRoaXMuX29uKGUse21vdXNlZW50ZXI6ZnVuY3Rpb24oZSl7dGhpcy5fYWRkQ2xhc3ModChlLmN1cnJlbnRUYXJnZXQpLG51bGwsXCJ1aS1zdGF0ZS1ob3ZlclwiKX0sbW91c2VsZWF2ZTpmdW5jdGlvbihlKXt0aGlzLl9yZW1vdmVDbGFzcyh0KGUuY3VycmVudFRhcmdldCksbnVsbCxcInVpLXN0YXRlLWhvdmVyXCIpfX0pfSxfZm9jdXNhYmxlOmZ1bmN0aW9uKGUpe3RoaXMuZm9jdXNhYmxlPXRoaXMuZm9jdXNhYmxlLmFkZChlKSx0aGlzLl9vbihlLHtmb2N1c2luOmZ1bmN0aW9uKGUpe3RoaXMuX2FkZENsYXNzKHQoZS5jdXJyZW50VGFyZ2V0KSxudWxsLFwidWktc3RhdGUtZm9jdXNcIil9LGZvY3Vzb3V0OmZ1bmN0aW9uKGUpe3RoaXMuX3JlbW92ZUNsYXNzKHQoZS5jdXJyZW50VGFyZ2V0KSxudWxsLFwidWktc3RhdGUtZm9jdXNcIil9fSl9LF90cmlnZ2VyOmZ1bmN0aW9uKGUsaSxzKXt2YXIgbixvLGE9dGhpcy5vcHRpb25zW2VdO2lmKHM9c3x8e30saT10LkV2ZW50KGkpLGkudHlwZT0oZT09PXRoaXMud2lkZ2V0RXZlbnRQcmVmaXg/ZTp0aGlzLndpZGdldEV2ZW50UHJlZml4K2UpLnRvTG93ZXJDYXNlKCksaS50YXJnZXQ9dGhpcy5lbGVtZW50WzBdLG89aS5vcmlnaW5hbEV2ZW50KWZvcihuIGluIG8pbiBpbiBpfHwoaVtuXT1vW25dKTtyZXR1cm4gdGhpcy5lbGVtZW50LnRyaWdnZXIoaSxzKSwhKHQuaXNGdW5jdGlvbihhKSYmYS5hcHBseSh0aGlzLmVsZW1lbnRbMF0sW2ldLmNvbmNhdChzKSk9PT0hMXx8aS5pc0RlZmF1bHRQcmV2ZW50ZWQoKSl9fSx0LmVhY2goe3Nob3c6XCJmYWRlSW5cIixoaWRlOlwiZmFkZU91dFwifSxmdW5jdGlvbihlLGkpe3QuV2lkZ2V0LnByb3RvdHlwZVtcIl9cIitlXT1mdW5jdGlvbihzLG4sbyl7XCJzdHJpbmdcIj09dHlwZW9mIG4mJihuPXtlZmZlY3Q6bn0pO3ZhciBhLHI9bj9uPT09ITB8fFwibnVtYmVyXCI9PXR5cGVvZiBuP2k6bi5lZmZlY3R8fGk6ZTtuPW58fHt9LFwibnVtYmVyXCI9PXR5cGVvZiBuJiYobj17ZHVyYXRpb246bn0pLGE9IXQuaXNFbXB0eU9iamVjdChuKSxuLmNvbXBsZXRlPW8sbi5kZWxheSYmcy5kZWxheShuLmRlbGF5KSxhJiZ0LmVmZmVjdHMmJnQuZWZmZWN0cy5lZmZlY3Rbcl0/c1tlXShuKTpyIT09ZSYmc1tyXT9zW3JdKG4uZHVyYXRpb24sbi5lYXNpbmcsbyk6cy5xdWV1ZShmdW5jdGlvbihpKXt0KHRoaXMpW2VdKCksbyYmby5jYWxsKHNbMF0pLGkoKX0pfX0pLHQud2lkZ2V0LGZ1bmN0aW9uKCl7ZnVuY3Rpb24gZSh0LGUsaSl7cmV0dXJuW3BhcnNlRmxvYXQodFswXSkqKHUudGVzdCh0WzBdKT9lLzEwMDoxKSxwYXJzZUZsb2F0KHRbMV0pKih1LnRlc3QodFsxXSk/aS8xMDA6MSldfWZ1bmN0aW9uIGkoZSxpKXtyZXR1cm4gcGFyc2VJbnQodC5jc3MoZSxpKSwxMCl8fDB9ZnVuY3Rpb24gcyhlKXt2YXIgaT1lWzBdO3JldHVybiA5PT09aS5ub2RlVHlwZT97d2lkdGg6ZS53aWR0aCgpLGhlaWdodDplLmhlaWdodCgpLG9mZnNldDp7dG9wOjAsbGVmdDowfX06dC5pc1dpbmRvdyhpKT97d2lkdGg6ZS53aWR0aCgpLGhlaWdodDplLmhlaWdodCgpLG9mZnNldDp7dG9wOmUuc2Nyb2xsVG9wKCksbGVmdDplLnNjcm9sbExlZnQoKX19OmkucHJldmVudERlZmF1bHQ/e3dpZHRoOjAsaGVpZ2h0OjAsb2Zmc2V0Ont0b3A6aS5wYWdlWSxsZWZ0OmkucGFnZVh9fTp7d2lkdGg6ZS5vdXRlcldpZHRoKCksaGVpZ2h0OmUub3V0ZXJIZWlnaHQoKSxvZmZzZXQ6ZS5vZmZzZXQoKX19dmFyIG4sbz1NYXRoLm1heCxhPU1hdGguYWJzLHI9L2xlZnR8Y2VudGVyfHJpZ2h0LyxoPS90b3B8Y2VudGVyfGJvdHRvbS8sbD0vW1xcK1xcLV1cXGQrKFxcLltcXGRdKyk/JT8vLGM9L15cXHcrLyx1PS8lJC8sZD10LmZuLnBvc2l0aW9uO3QucG9zaXRpb249e3Njcm9sbGJhcldpZHRoOmZ1bmN0aW9uKCl7aWYodm9pZCAwIT09bilyZXR1cm4gbjt2YXIgZSxpLHM9dChcIjxkaXYgc3R5bGU9J2Rpc3BsYXk6YmxvY2s7cG9zaXRpb246YWJzb2x1dGU7d2lkdGg6NTBweDtoZWlnaHQ6NTBweDtvdmVyZmxvdzpoaWRkZW47Jz48ZGl2IHN0eWxlPSdoZWlnaHQ6MTAwcHg7d2lkdGg6YXV0bzsnPjwvZGl2PjwvZGl2PlwiKSxvPXMuY2hpbGRyZW4oKVswXTtyZXR1cm4gdChcImJvZHlcIikuYXBwZW5kKHMpLGU9by5vZmZzZXRXaWR0aCxzLmNzcyhcIm92ZXJmbG93XCIsXCJzY3JvbGxcIiksaT1vLm9mZnNldFdpZHRoLGU9PT1pJiYoaT1zWzBdLmNsaWVudFdpZHRoKSxzLnJlbW92ZSgpLG49ZS1pfSxnZXRTY3JvbGxJbmZvOmZ1bmN0aW9uKGUpe3ZhciBpPWUuaXNXaW5kb3d8fGUuaXNEb2N1bWVudD9cIlwiOmUuZWxlbWVudC5jc3MoXCJvdmVyZmxvdy14XCIpLHM9ZS5pc1dpbmRvd3x8ZS5pc0RvY3VtZW50P1wiXCI6ZS5lbGVtZW50LmNzcyhcIm92ZXJmbG93LXlcIiksbj1cInNjcm9sbFwiPT09aXx8XCJhdXRvXCI9PT1pJiZlLndpZHRoPGUuZWxlbWVudFswXS5zY3JvbGxXaWR0aCxvPVwic2Nyb2xsXCI9PT1zfHxcImF1dG9cIj09PXMmJmUuaGVpZ2h0PGUuZWxlbWVudFswXS5zY3JvbGxIZWlnaHQ7cmV0dXJue3dpZHRoOm8/dC5wb3NpdGlvbi5zY3JvbGxiYXJXaWR0aCgpOjAsaGVpZ2h0Om4/dC5wb3NpdGlvbi5zY3JvbGxiYXJXaWR0aCgpOjB9fSxnZXRXaXRoaW5JbmZvOmZ1bmN0aW9uKGUpe3ZhciBpPXQoZXx8d2luZG93KSxzPXQuaXNXaW5kb3coaVswXSksbj0hIWlbMF0mJjk9PT1pWzBdLm5vZGVUeXBlLG89IXMmJiFuO3JldHVybntlbGVtZW50OmksaXNXaW5kb3c6cyxpc0RvY3VtZW50Om4sb2Zmc2V0Om8/dChlKS5vZmZzZXQoKTp7bGVmdDowLHRvcDowfSxzY3JvbGxMZWZ0Omkuc2Nyb2xsTGVmdCgpLHNjcm9sbFRvcDppLnNjcm9sbFRvcCgpLHdpZHRoOmkub3V0ZXJXaWR0aCgpLGhlaWdodDppLm91dGVySGVpZ2h0KCl9fX0sdC5mbi5wb3NpdGlvbj1mdW5jdGlvbihuKXtpZighbnx8IW4ub2YpcmV0dXJuIGQuYXBwbHkodGhpcyxhcmd1bWVudHMpO249dC5leHRlbmQoe30sbik7dmFyIHUscCxmLGcsbSxfLHY9dChuLm9mKSxiPXQucG9zaXRpb24uZ2V0V2l0aGluSW5mbyhuLndpdGhpbikseT10LnBvc2l0aW9uLmdldFNjcm9sbEluZm8oYiksdz0obi5jb2xsaXNpb258fFwiZmxpcFwiKS5zcGxpdChcIiBcIiksaz17fTtyZXR1cm4gXz1zKHYpLHZbMF0ucHJldmVudERlZmF1bHQmJihuLmF0PVwibGVmdCB0b3BcIikscD1fLndpZHRoLGY9Xy5oZWlnaHQsZz1fLm9mZnNldCxtPXQuZXh0ZW5kKHt9LGcpLHQuZWFjaChbXCJteVwiLFwiYXRcIl0sZnVuY3Rpb24oKXt2YXIgdCxlLGk9KG5bdGhpc118fFwiXCIpLnNwbGl0KFwiIFwiKTsxPT09aS5sZW5ndGgmJihpPXIudGVzdChpWzBdKT9pLmNvbmNhdChbXCJjZW50ZXJcIl0pOmgudGVzdChpWzBdKT9bXCJjZW50ZXJcIl0uY29uY2F0KGkpOltcImNlbnRlclwiLFwiY2VudGVyXCJdKSxpWzBdPXIudGVzdChpWzBdKT9pWzBdOlwiY2VudGVyXCIsaVsxXT1oLnRlc3QoaVsxXSk/aVsxXTpcImNlbnRlclwiLHQ9bC5leGVjKGlbMF0pLGU9bC5leGVjKGlbMV0pLGtbdGhpc109W3Q/dFswXTowLGU/ZVswXTowXSxuW3RoaXNdPVtjLmV4ZWMoaVswXSlbMF0sYy5leGVjKGlbMV0pWzBdXX0pLDE9PT13Lmxlbmd0aCYmKHdbMV09d1swXSksXCJyaWdodFwiPT09bi5hdFswXT9tLmxlZnQrPXA6XCJjZW50ZXJcIj09PW4uYXRbMF0mJihtLmxlZnQrPXAvMiksXCJib3R0b21cIj09PW4uYXRbMV0/bS50b3ArPWY6XCJjZW50ZXJcIj09PW4uYXRbMV0mJihtLnRvcCs9Zi8yKSx1PWUoay5hdCxwLGYpLG0ubGVmdCs9dVswXSxtLnRvcCs9dVsxXSx0aGlzLmVhY2goZnVuY3Rpb24oKXt2YXIgcyxyLGg9dCh0aGlzKSxsPWgub3V0ZXJXaWR0aCgpLGM9aC5vdXRlckhlaWdodCgpLGQ9aSh0aGlzLFwibWFyZ2luTGVmdFwiKSxfPWkodGhpcyxcIm1hcmdpblRvcFwiKSx4PWwrZCtpKHRoaXMsXCJtYXJnaW5SaWdodFwiKSt5LndpZHRoLEM9YytfK2kodGhpcyxcIm1hcmdpbkJvdHRvbVwiKSt5LmhlaWdodCxEPXQuZXh0ZW5kKHt9LG0pLEk9ZShrLm15LGgub3V0ZXJXaWR0aCgpLGgub3V0ZXJIZWlnaHQoKSk7XCJyaWdodFwiPT09bi5teVswXT9ELmxlZnQtPWw6XCJjZW50ZXJcIj09PW4ubXlbMF0mJihELmxlZnQtPWwvMiksXCJib3R0b21cIj09PW4ubXlbMV0/RC50b3AtPWM6XCJjZW50ZXJcIj09PW4ubXlbMV0mJihELnRvcC09Yy8yKSxELmxlZnQrPUlbMF0sRC50b3ArPUlbMV0scz17bWFyZ2luTGVmdDpkLG1hcmdpblRvcDpffSx0LmVhY2goW1wibGVmdFwiLFwidG9wXCJdLGZ1bmN0aW9uKGUsaSl7dC51aS5wb3NpdGlvblt3W2VdXSYmdC51aS5wb3NpdGlvblt3W2VdXVtpXShELHt0YXJnZXRXaWR0aDpwLHRhcmdldEhlaWdodDpmLGVsZW1XaWR0aDpsLGVsZW1IZWlnaHQ6Yyxjb2xsaXNpb25Qb3NpdGlvbjpzLGNvbGxpc2lvbldpZHRoOngsY29sbGlzaW9uSGVpZ2h0OkMsb2Zmc2V0Olt1WzBdK0lbMF0sdVsxXStJWzFdXSxteTpuLm15LGF0Om4uYXQsd2l0aGluOmIsZWxlbTpofSl9KSxuLnVzaW5nJiYocj1mdW5jdGlvbih0KXt2YXIgZT1nLmxlZnQtRC5sZWZ0LGk9ZStwLWwscz1nLnRvcC1ELnRvcCxyPXMrZi1jLHU9e3RhcmdldDp7ZWxlbWVudDp2LGxlZnQ6Zy5sZWZ0LHRvcDpnLnRvcCx3aWR0aDpwLGhlaWdodDpmfSxlbGVtZW50OntlbGVtZW50OmgsbGVmdDpELmxlZnQsdG9wOkQudG9wLHdpZHRoOmwsaGVpZ2h0OmN9LGhvcml6b250YWw6MD5pP1wibGVmdFwiOmU+MD9cInJpZ2h0XCI6XCJjZW50ZXJcIix2ZXJ0aWNhbDowPnI/XCJ0b3BcIjpzPjA/XCJib3R0b21cIjpcIm1pZGRsZVwifTtsPnAmJnA+YShlK2kpJiYodS5ob3Jpem9udGFsPVwiY2VudGVyXCIpLGM+ZiYmZj5hKHMrcikmJih1LnZlcnRpY2FsPVwibWlkZGxlXCIpLHUuaW1wb3J0YW50PW8oYShlKSxhKGkpKT5vKGEocyksYShyKSk/XCJob3Jpem9udGFsXCI6XCJ2ZXJ0aWNhbFwiLG4udXNpbmcuY2FsbCh0aGlzLHQsdSl9KSxoLm9mZnNldCh0LmV4dGVuZChELHt1c2luZzpyfSkpfSl9LHQudWkucG9zaXRpb249e2ZpdDp7bGVmdDpmdW5jdGlvbih0LGUpe3ZhciBpLHM9ZS53aXRoaW4sbj1zLmlzV2luZG93P3Muc2Nyb2xsTGVmdDpzLm9mZnNldC5sZWZ0LGE9cy53aWR0aCxyPXQubGVmdC1lLmNvbGxpc2lvblBvc2l0aW9uLm1hcmdpbkxlZnQsaD1uLXIsbD1yK2UuY29sbGlzaW9uV2lkdGgtYS1uO2UuY29sbGlzaW9uV2lkdGg+YT9oPjAmJjA+PWw/KGk9dC5sZWZ0K2grZS5jb2xsaXNpb25XaWR0aC1hLW4sdC5sZWZ0Kz1oLWkpOnQubGVmdD1sPjAmJjA+PWg/bjpoPmw/bithLWUuY29sbGlzaW9uV2lkdGg6bjpoPjA/dC5sZWZ0Kz1oOmw+MD90LmxlZnQtPWw6dC5sZWZ0PW8odC5sZWZ0LXIsdC5sZWZ0KX0sdG9wOmZ1bmN0aW9uKHQsZSl7dmFyIGkscz1lLndpdGhpbixuPXMuaXNXaW5kb3c/cy5zY3JvbGxUb3A6cy5vZmZzZXQudG9wLGE9ZS53aXRoaW4uaGVpZ2h0LHI9dC50b3AtZS5jb2xsaXNpb25Qb3NpdGlvbi5tYXJnaW5Ub3AsaD1uLXIsbD1yK2UuY29sbGlzaW9uSGVpZ2h0LWEtbjtlLmNvbGxpc2lvbkhlaWdodD5hP2g+MCYmMD49bD8oaT10LnRvcCtoK2UuY29sbGlzaW9uSGVpZ2h0LWEtbix0LnRvcCs9aC1pKTp0LnRvcD1sPjAmJjA+PWg/bjpoPmw/bithLWUuY29sbGlzaW9uSGVpZ2h0Om46aD4wP3QudG9wKz1oOmw+MD90LnRvcC09bDp0LnRvcD1vKHQudG9wLXIsdC50b3ApfX0sZmxpcDp7bGVmdDpmdW5jdGlvbih0LGUpe3ZhciBpLHMsbj1lLndpdGhpbixvPW4ub2Zmc2V0LmxlZnQrbi5zY3JvbGxMZWZ0LHI9bi53aWR0aCxoPW4uaXNXaW5kb3c/bi5zY3JvbGxMZWZ0Om4ub2Zmc2V0LmxlZnQsbD10LmxlZnQtZS5jb2xsaXNpb25Qb3NpdGlvbi5tYXJnaW5MZWZ0LGM9bC1oLHU9bCtlLmNvbGxpc2lvbldpZHRoLXItaCxkPVwibGVmdFwiPT09ZS5teVswXT8tZS5lbGVtV2lkdGg6XCJyaWdodFwiPT09ZS5teVswXT9lLmVsZW1XaWR0aDowLHA9XCJsZWZ0XCI9PT1lLmF0WzBdP2UudGFyZ2V0V2lkdGg6XCJyaWdodFwiPT09ZS5hdFswXT8tZS50YXJnZXRXaWR0aDowLGY9LTIqZS5vZmZzZXRbMF07MD5jPyhpPXQubGVmdCtkK3ArZitlLmNvbGxpc2lvbldpZHRoLXItbywoMD5pfHxhKGMpPmkpJiYodC5sZWZ0Kz1kK3ArZikpOnU+MCYmKHM9dC5sZWZ0LWUuY29sbGlzaW9uUG9zaXRpb24ubWFyZ2luTGVmdCtkK3ArZi1oLChzPjB8fHU+YShzKSkmJih0LmxlZnQrPWQrcCtmKSl9LHRvcDpmdW5jdGlvbih0LGUpe3ZhciBpLHMsbj1lLndpdGhpbixvPW4ub2Zmc2V0LnRvcCtuLnNjcm9sbFRvcCxyPW4uaGVpZ2h0LGg9bi5pc1dpbmRvdz9uLnNjcm9sbFRvcDpuLm9mZnNldC50b3AsbD10LnRvcC1lLmNvbGxpc2lvblBvc2l0aW9uLm1hcmdpblRvcCxjPWwtaCx1PWwrZS5jb2xsaXNpb25IZWlnaHQtci1oLGQ9XCJ0b3BcIj09PWUubXlbMV0scD1kPy1lLmVsZW1IZWlnaHQ6XCJib3R0b21cIj09PWUubXlbMV0/ZS5lbGVtSGVpZ2h0OjAsZj1cInRvcFwiPT09ZS5hdFsxXT9lLnRhcmdldEhlaWdodDpcImJvdHRvbVwiPT09ZS5hdFsxXT8tZS50YXJnZXRIZWlnaHQ6MCxnPS0yKmUub2Zmc2V0WzFdOzA+Yz8ocz10LnRvcCtwK2YrZytlLmNvbGxpc2lvbkhlaWdodC1yLW8sKDA+c3x8YShjKT5zKSYmKHQudG9wKz1wK2YrZykpOnU+MCYmKGk9dC50b3AtZS5jb2xsaXNpb25Qb3NpdGlvbi5tYXJnaW5Ub3ArcCtmK2ctaCwoaT4wfHx1PmEoaSkpJiYodC50b3ArPXArZitnKSl9fSxmbGlwZml0OntsZWZ0OmZ1bmN0aW9uKCl7dC51aS5wb3NpdGlvbi5mbGlwLmxlZnQuYXBwbHkodGhpcyxhcmd1bWVudHMpLHQudWkucG9zaXRpb24uZml0LmxlZnQuYXBwbHkodGhpcyxhcmd1bWVudHMpfSx0b3A6ZnVuY3Rpb24oKXt0LnVpLnBvc2l0aW9uLmZsaXAudG9wLmFwcGx5KHRoaXMsYXJndW1lbnRzKSx0LnVpLnBvc2l0aW9uLmZpdC50b3AuYXBwbHkodGhpcyxhcmd1bWVudHMpfX19fSgpLHQudWkucG9zaXRpb24sdC5leHRlbmQodC5leHByW1wiOlwiXSx7ZGF0YTp0LmV4cHIuY3JlYXRlUHNldWRvP3QuZXhwci5jcmVhdGVQc2V1ZG8oZnVuY3Rpb24oZSl7cmV0dXJuIGZ1bmN0aW9uKGkpe3JldHVybiEhdC5kYXRhKGksZSl9fSk6ZnVuY3Rpb24oZSxpLHMpe3JldHVybiEhdC5kYXRhKGUsc1szXSl9fSksdC5mbi5leHRlbmQoe2Rpc2FibGVTZWxlY3Rpb246ZnVuY3Rpb24oKXt2YXIgdD1cIm9uc2VsZWN0c3RhcnRcImluIGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik/XCJzZWxlY3RzdGFydFwiOlwibW91c2Vkb3duXCI7cmV0dXJuIGZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMub24odCtcIi51aS1kaXNhYmxlU2VsZWN0aW9uXCIsZnVuY3Rpb24odCl7dC5wcmV2ZW50RGVmYXVsdCgpfSl9fSgpLGVuYWJsZVNlbGVjdGlvbjpmdW5jdGlvbigpe3JldHVybiB0aGlzLm9mZihcIi51aS1kaXNhYmxlU2VsZWN0aW9uXCIpfX0pO3ZhciBjPVwidWktZWZmZWN0cy1cIix1PVwidWktZWZmZWN0cy1zdHlsZVwiLGQ9XCJ1aS1lZmZlY3RzLWFuaW1hdGVkXCIscD10O3QuZWZmZWN0cz17ZWZmZWN0Ont9fSxmdW5jdGlvbih0LGUpe2Z1bmN0aW9uIGkodCxlLGkpe3ZhciBzPXVbZS50eXBlXXx8e307cmV0dXJuIG51bGw9PXQ/aXx8IWUuZGVmP251bGw6ZS5kZWY6KHQ9cy5mbG9vcj9+fnQ6cGFyc2VGbG9hdCh0KSxpc05hTih0KT9lLmRlZjpzLm1vZD8odCtzLm1vZCklcy5tb2Q6MD50PzA6dD5zLm1heD9zLm1heDp0KX1mdW5jdGlvbiBzKGkpe3ZhciBzPWwoKSxuPXMuX3JnYmE9W107cmV0dXJuIGk9aS50b0xvd2VyQ2FzZSgpLGYoaCxmdW5jdGlvbih0LG8pe3ZhciBhLHI9by5yZS5leGVjKGkpLGg9ciYmby5wYXJzZShyKSxsPW8uc3BhY2V8fFwicmdiYVwiO3JldHVybiBoPyhhPXNbbF0oaCksc1tjW2xdLmNhY2hlXT1hW2NbbF0uY2FjaGVdLG49cy5fcmdiYT1hLl9yZ2JhLCExKTplfSksbi5sZW5ndGg/KFwiMCwwLDAsMFwiPT09bi5qb2luKCkmJnQuZXh0ZW5kKG4sby50cmFuc3BhcmVudCkscyk6b1tpXX1mdW5jdGlvbiBuKHQsZSxpKXtyZXR1cm4gaT0oaSsxKSUxLDE+NippP3QrNiooZS10KSppOjE+MippP2U6Mj4zKmk/dCs2KihlLXQpKigyLzMtaSk6dH12YXIgbyxhPVwiYmFja2dyb3VuZENvbG9yIGJvcmRlckJvdHRvbUNvbG9yIGJvcmRlckxlZnRDb2xvciBib3JkZXJSaWdodENvbG9yIGJvcmRlclRvcENvbG9yIGNvbG9yIGNvbHVtblJ1bGVDb2xvciBvdXRsaW5lQ29sb3IgdGV4dERlY29yYXRpb25Db2xvciB0ZXh0RW1waGFzaXNDb2xvclwiLHI9L14oW1xcLStdKT1cXHMqKFxcZCtcXC4/XFxkKikvLGg9W3tyZTovcmdiYT9cXChcXHMqKFxcZHsxLDN9KVxccyosXFxzKihcXGR7MSwzfSlcXHMqLFxccyooXFxkezEsM30pXFxzKig/OixcXHMqKFxcZD8oPzpcXC5cXGQrKT8pXFxzKik/XFwpLyxwYXJzZTpmdW5jdGlvbih0KXtyZXR1cm5bdFsxXSx0WzJdLHRbM10sdFs0XV19fSx7cmU6L3JnYmE/XFwoXFxzKihcXGQrKD86XFwuXFxkKyk/KVxcJVxccyosXFxzKihcXGQrKD86XFwuXFxkKyk/KVxcJVxccyosXFxzKihcXGQrKD86XFwuXFxkKyk/KVxcJVxccyooPzosXFxzKihcXGQ/KD86XFwuXFxkKyk/KVxccyopP1xcKS8scGFyc2U6ZnVuY3Rpb24odCl7cmV0dXJuWzIuNTUqdFsxXSwyLjU1KnRbMl0sMi41NSp0WzNdLHRbNF1dfX0se3JlOi8jKFthLWYwLTldezJ9KShbYS1mMC05XXsyfSkoW2EtZjAtOV17Mn0pLyxwYXJzZTpmdW5jdGlvbih0KXtyZXR1cm5bcGFyc2VJbnQodFsxXSwxNikscGFyc2VJbnQodFsyXSwxNikscGFyc2VJbnQodFszXSwxNildfX0se3JlOi8jKFthLWYwLTldKShbYS1mMC05XSkoW2EtZjAtOV0pLyxwYXJzZTpmdW5jdGlvbih0KXtyZXR1cm5bcGFyc2VJbnQodFsxXSt0WzFdLDE2KSxwYXJzZUludCh0WzJdK3RbMl0sMTYpLHBhcnNlSW50KHRbM10rdFszXSwxNildfX0se3JlOi9oc2xhP1xcKFxccyooXFxkKyg/OlxcLlxcZCspPylcXHMqLFxccyooXFxkKyg/OlxcLlxcZCspPylcXCVcXHMqLFxccyooXFxkKyg/OlxcLlxcZCspPylcXCVcXHMqKD86LFxccyooXFxkPyg/OlxcLlxcZCspPylcXHMqKT9cXCkvLHNwYWNlOlwiaHNsYVwiLHBhcnNlOmZ1bmN0aW9uKHQpe3JldHVyblt0WzFdLHRbMl0vMTAwLHRbM10vMTAwLHRbNF1dfX1dLGw9dC5Db2xvcj1mdW5jdGlvbihlLGkscyxuKXtyZXR1cm4gbmV3IHQuQ29sb3IuZm4ucGFyc2UoZSxpLHMsbil9LGM9e3JnYmE6e3Byb3BzOntyZWQ6e2lkeDowLHR5cGU6XCJieXRlXCJ9LGdyZWVuOntpZHg6MSx0eXBlOlwiYnl0ZVwifSxibHVlOntpZHg6Mix0eXBlOlwiYnl0ZVwifX19LGhzbGE6e3Byb3BzOntodWU6e2lkeDowLHR5cGU6XCJkZWdyZWVzXCJ9LHNhdHVyYXRpb246e2lkeDoxLHR5cGU6XCJwZXJjZW50XCJ9LGxpZ2h0bmVzczp7aWR4OjIsdHlwZTpcInBlcmNlbnRcIn19fX0sdT17XCJieXRlXCI6e2Zsb29yOiEwLG1heDoyNTV9LHBlcmNlbnQ6e21heDoxfSxkZWdyZWVzOnttb2Q6MzYwLGZsb29yOiEwfX0sZD1sLnN1cHBvcnQ9e30scD10KFwiPHA+XCIpWzBdLGY9dC5lYWNoO3Auc3R5bGUuY3NzVGV4dD1cImJhY2tncm91bmQtY29sb3I6cmdiYSgxLDEsMSwuNSlcIixkLnJnYmE9cC5zdHlsZS5iYWNrZ3JvdW5kQ29sb3IuaW5kZXhPZihcInJnYmFcIik+LTEsZihjLGZ1bmN0aW9uKHQsZSl7ZS5jYWNoZT1cIl9cIit0LGUucHJvcHMuYWxwaGE9e2lkeDozLHR5cGU6XCJwZXJjZW50XCIsZGVmOjF9fSksbC5mbj10LmV4dGVuZChsLnByb3RvdHlwZSx7cGFyc2U6ZnVuY3Rpb24obixhLHIsaCl7aWYobj09PWUpcmV0dXJuIHRoaXMuX3JnYmE9W251bGwsbnVsbCxudWxsLG51bGxdLHRoaXM7KG4uanF1ZXJ5fHxuLm5vZGVUeXBlKSYmKG49dChuKS5jc3MoYSksYT1lKTt2YXIgdT10aGlzLGQ9dC50eXBlKG4pLHA9dGhpcy5fcmdiYT1bXTtyZXR1cm4gYSE9PWUmJihuPVtuLGEscixoXSxkPVwiYXJyYXlcIiksXCJzdHJpbmdcIj09PWQ/dGhpcy5wYXJzZShzKG4pfHxvLl9kZWZhdWx0KTpcImFycmF5XCI9PT1kPyhmKGMucmdiYS5wcm9wcyxmdW5jdGlvbih0LGUpe3BbZS5pZHhdPWkobltlLmlkeF0sZSl9KSx0aGlzKTpcIm9iamVjdFwiPT09ZD8obiBpbnN0YW5jZW9mIGw/ZihjLGZ1bmN0aW9uKHQsZSl7bltlLmNhY2hlXSYmKHVbZS5jYWNoZV09bltlLmNhY2hlXS5zbGljZSgpKX0pOmYoYyxmdW5jdGlvbihlLHMpe3ZhciBvPXMuY2FjaGU7ZihzLnByb3BzLGZ1bmN0aW9uKHQsZSl7aWYoIXVbb10mJnMudG8pe2lmKFwiYWxwaGFcIj09PXR8fG51bGw9PW5bdF0pcmV0dXJuO3Vbb109cy50byh1Ll9yZ2JhKX11W29dW2UuaWR4XT1pKG5bdF0sZSwhMCl9KSx1W29dJiYwPnQuaW5BcnJheShudWxsLHVbb10uc2xpY2UoMCwzKSkmJih1W29dWzNdPTEscy5mcm9tJiYodS5fcmdiYT1zLmZyb20odVtvXSkpKX0pLHRoaXMpOmV9LGlzOmZ1bmN0aW9uKHQpe3ZhciBpPWwodCkscz0hMCxuPXRoaXM7cmV0dXJuIGYoYyxmdW5jdGlvbih0LG8pe3ZhciBhLHI9aVtvLmNhY2hlXTtyZXR1cm4gciYmKGE9bltvLmNhY2hlXXx8by50byYmby50byhuLl9yZ2JhKXx8W10sZihvLnByb3BzLGZ1bmN0aW9uKHQsaSl7cmV0dXJuIG51bGwhPXJbaS5pZHhdP3M9cltpLmlkeF09PT1hW2kuaWR4XTplfSkpLHN9KSxzfSxfc3BhY2U6ZnVuY3Rpb24oKXt2YXIgdD1bXSxlPXRoaXM7cmV0dXJuIGYoYyxmdW5jdGlvbihpLHMpe2Vbcy5jYWNoZV0mJnQucHVzaChpKX0pLHQucG9wKCl9LHRyYW5zaXRpb246ZnVuY3Rpb24odCxlKXt2YXIgcz1sKHQpLG49cy5fc3BhY2UoKSxvPWNbbl0sYT0wPT09dGhpcy5hbHBoYSgpP2woXCJ0cmFuc3BhcmVudFwiKTp0aGlzLHI9YVtvLmNhY2hlXXx8by50byhhLl9yZ2JhKSxoPXIuc2xpY2UoKTtyZXR1cm4gcz1zW28uY2FjaGVdLGYoby5wcm9wcyxmdW5jdGlvbih0LG4pe3ZhciBvPW4uaWR4LGE9cltvXSxsPXNbb10sYz11W24udHlwZV18fHt9O251bGwhPT1sJiYobnVsbD09PWE/aFtvXT1sOihjLm1vZCYmKGwtYT5jLm1vZC8yP2ErPWMubW9kOmEtbD5jLm1vZC8yJiYoYS09Yy5tb2QpKSxoW29dPWkoKGwtYSkqZSthLG4pKSl9KSx0aGlzW25dKGgpfSxibGVuZDpmdW5jdGlvbihlKXtpZigxPT09dGhpcy5fcmdiYVszXSlyZXR1cm4gdGhpczt2YXIgaT10aGlzLl9yZ2JhLnNsaWNlKCkscz1pLnBvcCgpLG49bChlKS5fcmdiYTtyZXR1cm4gbCh0Lm1hcChpLGZ1bmN0aW9uKHQsZSl7cmV0dXJuKDEtcykqbltlXStzKnR9KSl9LHRvUmdiYVN0cmluZzpmdW5jdGlvbigpe3ZhciBlPVwicmdiYShcIixpPXQubWFwKHRoaXMuX3JnYmEsZnVuY3Rpb24odCxlKXtyZXR1cm4gbnVsbD09dD9lPjI/MTowOnR9KTtyZXR1cm4gMT09PWlbM10mJihpLnBvcCgpLGU9XCJyZ2IoXCIpLGUraS5qb2luKCkrXCIpXCJ9LHRvSHNsYVN0cmluZzpmdW5jdGlvbigpe3ZhciBlPVwiaHNsYShcIixpPXQubWFwKHRoaXMuaHNsYSgpLGZ1bmN0aW9uKHQsZSl7cmV0dXJuIG51bGw9PXQmJih0PWU+Mj8xOjApLGUmJjM+ZSYmKHQ9TWF0aC5yb3VuZCgxMDAqdCkrXCIlXCIpLHR9KTtyZXR1cm4gMT09PWlbM10mJihpLnBvcCgpLGU9XCJoc2woXCIpLGUraS5qb2luKCkrXCIpXCJ9LHRvSGV4U3RyaW5nOmZ1bmN0aW9uKGUpe3ZhciBpPXRoaXMuX3JnYmEuc2xpY2UoKSxzPWkucG9wKCk7cmV0dXJuIGUmJmkucHVzaCh+figyNTUqcykpLFwiI1wiK3QubWFwKGksZnVuY3Rpb24odCl7cmV0dXJuIHQ9KHR8fDApLnRvU3RyaW5nKDE2KSwxPT09dC5sZW5ndGg/XCIwXCIrdDp0fSkuam9pbihcIlwiKX0sdG9TdHJpbmc6ZnVuY3Rpb24oKXtyZXR1cm4gMD09PXRoaXMuX3JnYmFbM10/XCJ0cmFuc3BhcmVudFwiOnRoaXMudG9SZ2JhU3RyaW5nKCl9fSksbC5mbi5wYXJzZS5wcm90b3R5cGU9bC5mbixjLmhzbGEudG89ZnVuY3Rpb24odCl7aWYobnVsbD09dFswXXx8bnVsbD09dFsxXXx8bnVsbD09dFsyXSlyZXR1cm5bbnVsbCxudWxsLG51bGwsdFszXV07dmFyIGUsaSxzPXRbMF0vMjU1LG49dFsxXS8yNTUsbz10WzJdLzI1NSxhPXRbM10scj1NYXRoLm1heChzLG4sbyksaD1NYXRoLm1pbihzLG4sbyksbD1yLWgsYz1yK2gsdT0uNSpjO3JldHVybiBlPWg9PT1yPzA6cz09PXI/NjAqKG4tbykvbCszNjA6bj09PXI/NjAqKG8tcykvbCsxMjA6NjAqKHMtbikvbCsyNDAsaT0wPT09bD8wOi41Pj11P2wvYzpsLygyLWMpLFtNYXRoLnJvdW5kKGUpJTM2MCxpLHUsbnVsbD09YT8xOmFdfSxjLmhzbGEuZnJvbT1mdW5jdGlvbih0KXtpZihudWxsPT10WzBdfHxudWxsPT10WzFdfHxudWxsPT10WzJdKXJldHVybltudWxsLG51bGwsbnVsbCx0WzNdXTt2YXIgZT10WzBdLzM2MCxpPXRbMV0scz10WzJdLG89dFszXSxhPS41Pj1zP3MqKDEraSk6cytpLXMqaSxyPTIqcy1hO3JldHVybltNYXRoLnJvdW5kKDI1NSpuKHIsYSxlKzEvMykpLE1hdGgucm91bmQoMjU1Km4ocixhLGUpKSxNYXRoLnJvdW5kKDI1NSpuKHIsYSxlLTEvMykpLG9dfSxmKGMsZnVuY3Rpb24ocyxuKXt2YXIgbz1uLnByb3BzLGE9bi5jYWNoZSxoPW4udG8sYz1uLmZyb207bC5mbltzXT1mdW5jdGlvbihzKXtpZihoJiYhdGhpc1thXSYmKHRoaXNbYV09aCh0aGlzLl9yZ2JhKSkscz09PWUpcmV0dXJuIHRoaXNbYV0uc2xpY2UoKTt2YXIgbixyPXQudHlwZShzKSx1PVwiYXJyYXlcIj09PXJ8fFwib2JqZWN0XCI9PT1yP3M6YXJndW1lbnRzLGQ9dGhpc1thXS5zbGljZSgpO3JldHVybiBmKG8sZnVuY3Rpb24odCxlKXt2YXIgcz11W1wib2JqZWN0XCI9PT1yP3Q6ZS5pZHhdO251bGw9PXMmJihzPWRbZS5pZHhdKSxkW2UuaWR4XT1pKHMsZSl9KSxjPyhuPWwoYyhkKSksblthXT1kLG4pOmwoZCl9LGYobyxmdW5jdGlvbihlLGkpe2wuZm5bZV18fChsLmZuW2VdPWZ1bmN0aW9uKG4pe3ZhciBvLGE9dC50eXBlKG4pLGg9XCJhbHBoYVwiPT09ZT90aGlzLl9oc2xhP1wiaHNsYVwiOlwicmdiYVwiOnMsbD10aGlzW2hdKCksYz1sW2kuaWR4XTtyZXR1cm5cInVuZGVmaW5lZFwiPT09YT9jOihcImZ1bmN0aW9uXCI9PT1hJiYobj1uLmNhbGwodGhpcyxjKSxhPXQudHlwZShuKSksbnVsbD09biYmaS5lbXB0eT90aGlzOihcInN0cmluZ1wiPT09YSYmKG89ci5leGVjKG4pLG8mJihuPWMrcGFyc2VGbG9hdChvWzJdKSooXCIrXCI9PT1vWzFdPzE6LTEpKSksbFtpLmlkeF09bix0aGlzW2hdKGwpKSl9KX0pfSksbC5ob29rPWZ1bmN0aW9uKGUpe3ZhciBpPWUuc3BsaXQoXCIgXCIpO2YoaSxmdW5jdGlvbihlLGkpe3QuY3NzSG9va3NbaV09e3NldDpmdW5jdGlvbihlLG4pe3ZhciBvLGEscj1cIlwiO2lmKFwidHJhbnNwYXJlbnRcIiE9PW4mJihcInN0cmluZ1wiIT09dC50eXBlKG4pfHwobz1zKG4pKSkpe2lmKG49bChvfHxuKSwhZC5yZ2JhJiYxIT09bi5fcmdiYVszXSl7Zm9yKGE9XCJiYWNrZ3JvdW5kQ29sb3JcIj09PWk/ZS5wYXJlbnROb2RlOmU7KFwiXCI9PT1yfHxcInRyYW5zcGFyZW50XCI9PT1yKSYmYSYmYS5zdHlsZTspdHJ5e3I9dC5jc3MoYSxcImJhY2tncm91bmRDb2xvclwiKSxhPWEucGFyZW50Tm9kZX1jYXRjaChoKXt9bj1uLmJsZW5kKHImJlwidHJhbnNwYXJlbnRcIiE9PXI/cjpcIl9kZWZhdWx0XCIpfW49bi50b1JnYmFTdHJpbmcoKX10cnl7ZS5zdHlsZVtpXT1ufWNhdGNoKGgpe319fSx0LmZ4LnN0ZXBbaV09ZnVuY3Rpb24oZSl7ZS5jb2xvckluaXR8fChlLnN0YXJ0PWwoZS5lbGVtLGkpLGUuZW5kPWwoZS5lbmQpLGUuY29sb3JJbml0PSEwKSx0LmNzc0hvb2tzW2ldLnNldChlLmVsZW0sZS5zdGFydC50cmFuc2l0aW9uKGUuZW5kLGUucG9zKSl9fSl9LGwuaG9vayhhKSx0LmNzc0hvb2tzLmJvcmRlckNvbG9yPXtleHBhbmQ6ZnVuY3Rpb24odCl7dmFyIGU9e307cmV0dXJuIGYoW1wiVG9wXCIsXCJSaWdodFwiLFwiQm90dG9tXCIsXCJMZWZ0XCJdLGZ1bmN0aW9uKGkscyl7ZVtcImJvcmRlclwiK3MrXCJDb2xvclwiXT10fSksZX19LG89dC5Db2xvci5uYW1lcz17YXF1YTpcIiMwMGZmZmZcIixibGFjazpcIiMwMDAwMDBcIixibHVlOlwiIzAwMDBmZlwiLGZ1Y2hzaWE6XCIjZmYwMGZmXCIsZ3JheTpcIiM4MDgwODBcIixncmVlbjpcIiMwMDgwMDBcIixsaW1lOlwiIzAwZmYwMFwiLG1hcm9vbjpcIiM4MDAwMDBcIixuYXZ5OlwiIzAwMDA4MFwiLG9saXZlOlwiIzgwODAwMFwiLHB1cnBsZTpcIiM4MDAwODBcIixyZWQ6XCIjZmYwMDAwXCIsc2lsdmVyOlwiI2MwYzBjMFwiLHRlYWw6XCIjMDA4MDgwXCIsd2hpdGU6XCIjZmZmZmZmXCIseWVsbG93OlwiI2ZmZmYwMFwiLHRyYW5zcGFyZW50OltudWxsLG51bGwsbnVsbCwwXSxfZGVmYXVsdDpcIiNmZmZmZmZcIn19KHApLGZ1bmN0aW9uKCl7ZnVuY3Rpb24gZShlKXt2YXIgaSxzLG49ZS5vd25lckRvY3VtZW50LmRlZmF1bHRWaWV3P2Uub3duZXJEb2N1bWVudC5kZWZhdWx0Vmlldy5nZXRDb21wdXRlZFN0eWxlKGUsbnVsbCk6ZS5jdXJyZW50U3R5bGUsbz17fTtpZihuJiZuLmxlbmd0aCYmblswXSYmbltuWzBdXSlmb3Iocz1uLmxlbmd0aDtzLS07KWk9bltzXSxcInN0cmluZ1wiPT10eXBlb2YgbltpXSYmKG9bdC5jYW1lbENhc2UoaSldPW5baV0pO2Vsc2UgZm9yKGkgaW4gbilcInN0cmluZ1wiPT10eXBlb2YgbltpXSYmKG9baV09bltpXSk7cmV0dXJuIG99ZnVuY3Rpb24gaShlLGkpe3ZhciBzLG8sYT17fTtmb3IocyBpbiBpKW89aVtzXSxlW3NdIT09byYmKG5bc118fCh0LmZ4LnN0ZXBbc118fCFpc05hTihwYXJzZUZsb2F0KG8pKSkmJihhW3NdPW8pKTtyZXR1cm4gYX12YXIgcz1bXCJhZGRcIixcInJlbW92ZVwiLFwidG9nZ2xlXCJdLG49e2JvcmRlcjoxLGJvcmRlckJvdHRvbToxLGJvcmRlckNvbG9yOjEsYm9yZGVyTGVmdDoxLGJvcmRlclJpZ2h0OjEsYm9yZGVyVG9wOjEsYm9yZGVyV2lkdGg6MSxtYXJnaW46MSxwYWRkaW5nOjF9O3QuZWFjaChbXCJib3JkZXJMZWZ0U3R5bGVcIixcImJvcmRlclJpZ2h0U3R5bGVcIixcImJvcmRlckJvdHRvbVN0eWxlXCIsXCJib3JkZXJUb3BTdHlsZVwiXSxmdW5jdGlvbihlLGkpe3QuZnguc3RlcFtpXT1mdW5jdGlvbih0KXsoXCJub25lXCIhPT10LmVuZCYmIXQuc2V0QXR0cnx8MT09PXQucG9zJiYhdC5zZXRBdHRyKSYmKHAuc3R5bGUodC5lbGVtLGksdC5lbmQpLHQuc2V0QXR0cj0hMCl9fSksdC5mbi5hZGRCYWNrfHwodC5mbi5hZGRCYWNrPWZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLmFkZChudWxsPT10P3RoaXMucHJldk9iamVjdDp0aGlzLnByZXZPYmplY3QuZmlsdGVyKHQpKX0pLHQuZWZmZWN0cy5hbmltYXRlQ2xhc3M9ZnVuY3Rpb24obixvLGEscil7dmFyIGg9dC5zcGVlZChvLGEscik7cmV0dXJuIHRoaXMucXVldWUoZnVuY3Rpb24oKXt2YXIgbyxhPXQodGhpcykscj1hLmF0dHIoXCJjbGFzc1wiKXx8XCJcIixsPWguY2hpbGRyZW4/YS5maW5kKFwiKlwiKS5hZGRCYWNrKCk6YTtsPWwubWFwKGZ1bmN0aW9uKCl7dmFyIGk9dCh0aGlzKTtyZXR1cm57ZWw6aSxzdGFydDplKHRoaXMpfX0pLG89ZnVuY3Rpb24oKXt0LmVhY2gocyxmdW5jdGlvbih0LGUpe25bZV0mJmFbZStcIkNsYXNzXCJdKG5bZV0pfSl9LG8oKSxsPWwubWFwKGZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuZW5kPWUodGhpcy5lbFswXSksdGhpcy5kaWZmPWkodGhpcy5zdGFydCx0aGlzLmVuZCksdGhpc30pLGEuYXR0cihcImNsYXNzXCIsciksbD1sLm1hcChmdW5jdGlvbigpe3ZhciBlPXRoaXMsaT10LkRlZmVycmVkKCkscz10LmV4dGVuZCh7fSxoLHtxdWV1ZTohMSxjb21wbGV0ZTpmdW5jdGlvbigpe2kucmVzb2x2ZShlKX19KTtyZXR1cm4gdGhpcy5lbC5hbmltYXRlKHRoaXMuZGlmZixzKSxpLnByb21pc2UoKX0pLHQud2hlbi5hcHBseSh0LGwuZ2V0KCkpLmRvbmUoZnVuY3Rpb24oKXtvKCksdC5lYWNoKGFyZ3VtZW50cyxmdW5jdGlvbigpe3ZhciBlPXRoaXMuZWw7dC5lYWNoKHRoaXMuZGlmZixmdW5jdGlvbih0KXtlLmNzcyh0LFwiXCIpfSl9KSxoLmNvbXBsZXRlLmNhbGwoYVswXSl9KX0pfSx0LmZuLmV4dGVuZCh7YWRkQ2xhc3M6ZnVuY3Rpb24oZSl7cmV0dXJuIGZ1bmN0aW9uKGkscyxuLG8pe3JldHVybiBzP3QuZWZmZWN0cy5hbmltYXRlQ2xhc3MuY2FsbCh0aGlzLHthZGQ6aX0scyxuLG8pOmUuYXBwbHkodGhpcyxhcmd1bWVudHMpfX0odC5mbi5hZGRDbGFzcykscmVtb3ZlQ2xhc3M6ZnVuY3Rpb24oZSl7cmV0dXJuIGZ1bmN0aW9uKGkscyxuLG8pe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPjE/dC5lZmZlY3RzLmFuaW1hdGVDbGFzcy5jYWxsKHRoaXMse3JlbW92ZTppfSxzLG4sbyk6ZS5hcHBseSh0aGlzLGFyZ3VtZW50cyl9fSh0LmZuLnJlbW92ZUNsYXNzKSx0b2dnbGVDbGFzczpmdW5jdGlvbihlKXtyZXR1cm4gZnVuY3Rpb24oaSxzLG4sbyxhKXtyZXR1cm5cImJvb2xlYW5cIj09dHlwZW9mIHN8fHZvaWQgMD09PXM/bj90LmVmZmVjdHMuYW5pbWF0ZUNsYXNzLmNhbGwodGhpcyxzP3thZGQ6aX06e3JlbW92ZTppfSxuLG8sYSk6ZS5hcHBseSh0aGlzLGFyZ3VtZW50cyk6dC5lZmZlY3RzLmFuaW1hdGVDbGFzcy5jYWxsKHRoaXMse3RvZ2dsZTppfSxzLG4sbyl9fSh0LmZuLnRvZ2dsZUNsYXNzKSxzd2l0Y2hDbGFzczpmdW5jdGlvbihlLGkscyxuLG8pe3JldHVybiB0LmVmZmVjdHMuYW5pbWF0ZUNsYXNzLmNhbGwodGhpcyx7YWRkOmkscmVtb3ZlOmV9LHMsbixvKX19KX0oKSxmdW5jdGlvbigpe2Z1bmN0aW9uIGUoZSxpLHMsbil7cmV0dXJuIHQuaXNQbGFpbk9iamVjdChlKSYmKGk9ZSxlPWUuZWZmZWN0KSxlPXtlZmZlY3Q6ZX0sbnVsbD09aSYmKGk9e30pLHQuaXNGdW5jdGlvbihpKSYmKG49aSxzPW51bGwsaT17fSksKFwibnVtYmVyXCI9PXR5cGVvZiBpfHx0LmZ4LnNwZWVkc1tpXSkmJihuPXMscz1pLGk9e30pLHQuaXNGdW5jdGlvbihzKSYmKG49cyxzPW51bGwpLGkmJnQuZXh0ZW5kKGUsaSkscz1zfHxpLmR1cmF0aW9uLGUuZHVyYXRpb249dC5meC5vZmY/MDpcIm51bWJlclwiPT10eXBlb2Ygcz9zOnMgaW4gdC5meC5zcGVlZHM/dC5meC5zcGVlZHNbc106dC5meC5zcGVlZHMuX2RlZmF1bHQsZS5jb21wbGV0ZT1ufHxpLmNvbXBsZXRlLGV9ZnVuY3Rpb24gaShlKXtyZXR1cm4hZXx8XCJudW1iZXJcIj09dHlwZW9mIGV8fHQuZnguc3BlZWRzW2VdPyEwOlwic3RyaW5nXCIhPXR5cGVvZiBlfHx0LmVmZmVjdHMuZWZmZWN0W2VdP3QuaXNGdW5jdGlvbihlKT8hMDpcIm9iamVjdFwiIT10eXBlb2YgZXx8ZS5lZmZlY3Q/ITE6ITA6ITB9ZnVuY3Rpb24gcyh0LGUpe3ZhciBpPWUub3V0ZXJXaWR0aCgpLHM9ZS5vdXRlckhlaWdodCgpLG49L15yZWN0XFwoKC0/XFxkKlxcLj9cXGQqcHh8LT9cXGQrJXxhdXRvKSw/XFxzKigtP1xcZCpcXC4/XFxkKnB4fC0/XFxkKyV8YXV0byksP1xccyooLT9cXGQqXFwuP1xcZCpweHwtP1xcZCslfGF1dG8pLD9cXHMqKC0/XFxkKlxcLj9cXGQqcHh8LT9cXGQrJXxhdXRvKVxcKSQvLG89bi5leGVjKHQpfHxbXCJcIiwwLGkscywwXTtyZXR1cm57dG9wOnBhcnNlRmxvYXQob1sxXSl8fDAscmlnaHQ6XCJhdXRvXCI9PT1vWzJdP2k6cGFyc2VGbG9hdChvWzJdKSxib3R0b206XCJhdXRvXCI9PT1vWzNdP3M6cGFyc2VGbG9hdChvWzNdKSxsZWZ0OnBhcnNlRmxvYXQob1s0XSl8fDB9fXQuZXhwciYmdC5leHByLmZpbHRlcnMmJnQuZXhwci5maWx0ZXJzLmFuaW1hdGVkJiYodC5leHByLmZpbHRlcnMuYW5pbWF0ZWQ9ZnVuY3Rpb24oZSl7cmV0dXJuIGZ1bmN0aW9uKGkpe3JldHVybiEhdChpKS5kYXRhKGQpfHxlKGkpfX0odC5leHByLmZpbHRlcnMuYW5pbWF0ZWQpKSx0LnVpQmFja0NvbXBhdCE9PSExJiZ0LmV4dGVuZCh0LmVmZmVjdHMse3NhdmU6ZnVuY3Rpb24odCxlKXtmb3IodmFyIGk9MCxzPWUubGVuZ3RoO3M+aTtpKyspbnVsbCE9PWVbaV0mJnQuZGF0YShjK2VbaV0sdFswXS5zdHlsZVtlW2ldXSl9LHJlc3RvcmU6ZnVuY3Rpb24odCxlKXtmb3IodmFyIGkscz0wLG49ZS5sZW5ndGg7bj5zO3MrKyludWxsIT09ZVtzXSYmKGk9dC5kYXRhKGMrZVtzXSksdC5jc3MoZVtzXSxpKSl9LHNldE1vZGU6ZnVuY3Rpb24odCxlKXtyZXR1cm5cInRvZ2dsZVwiPT09ZSYmKGU9dC5pcyhcIjpoaWRkZW5cIik/XCJzaG93XCI6XCJoaWRlXCIpLGV9LGNyZWF0ZVdyYXBwZXI6ZnVuY3Rpb24oZSl7aWYoZS5wYXJlbnQoKS5pcyhcIi51aS1lZmZlY3RzLXdyYXBwZXJcIikpcmV0dXJuIGUucGFyZW50KCk7dmFyIGk9e3dpZHRoOmUub3V0ZXJXaWR0aCghMCksaGVpZ2h0OmUub3V0ZXJIZWlnaHQoITApLFwiZmxvYXRcIjplLmNzcyhcImZsb2F0XCIpfSxzPXQoXCI8ZGl2PjwvZGl2PlwiKS5hZGRDbGFzcyhcInVpLWVmZmVjdHMtd3JhcHBlclwiKS5jc3Moe2ZvbnRTaXplOlwiMTAwJVwiLGJhY2tncm91bmQ6XCJ0cmFuc3BhcmVudFwiLGJvcmRlcjpcIm5vbmVcIixtYXJnaW46MCxwYWRkaW5nOjB9KSxuPXt3aWR0aDplLndpZHRoKCksaGVpZ2h0OmUuaGVpZ2h0KCl9LG89ZG9jdW1lbnQuYWN0aXZlRWxlbWVudDt0cnl7by5pZH1jYXRjaChhKXtvPWRvY3VtZW50LmJvZHl9cmV0dXJuIGUud3JhcChzKSwoZVswXT09PW98fHQuY29udGFpbnMoZVswXSxvKSkmJnQobykudHJpZ2dlcihcImZvY3VzXCIpLHM9ZS5wYXJlbnQoKSxcInN0YXRpY1wiPT09ZS5jc3MoXCJwb3NpdGlvblwiKT8ocy5jc3Moe3Bvc2l0aW9uOlwicmVsYXRpdmVcIn0pLGUuY3NzKHtwb3NpdGlvbjpcInJlbGF0aXZlXCJ9KSk6KHQuZXh0ZW5kKGkse3Bvc2l0aW9uOmUuY3NzKFwicG9zaXRpb25cIiksekluZGV4OmUuY3NzKFwiei1pbmRleFwiKX0pLHQuZWFjaChbXCJ0b3BcIixcImxlZnRcIixcImJvdHRvbVwiLFwicmlnaHRcIl0sZnVuY3Rpb24odCxzKXtpW3NdPWUuY3NzKHMpLGlzTmFOKHBhcnNlSW50KGlbc10sMTApKSYmKGlbc109XCJhdXRvXCIpfSksZS5jc3Moe3Bvc2l0aW9uOlwicmVsYXRpdmVcIix0b3A6MCxsZWZ0OjAscmlnaHQ6XCJhdXRvXCIsYm90dG9tOlwiYXV0b1wifSkpLGUuY3NzKG4pLHMuY3NzKGkpLnNob3coKX0scmVtb3ZlV3JhcHBlcjpmdW5jdGlvbihlKXt2YXIgaT1kb2N1bWVudC5hY3RpdmVFbGVtZW50O3JldHVybiBlLnBhcmVudCgpLmlzKFwiLnVpLWVmZmVjdHMtd3JhcHBlclwiKSYmKGUucGFyZW50KCkucmVwbGFjZVdpdGgoZSksKGVbMF09PT1pfHx0LmNvbnRhaW5zKGVbMF0saSkpJiZ0KGkpLnRyaWdnZXIoXCJmb2N1c1wiKSksZX19KSx0LmV4dGVuZCh0LmVmZmVjdHMse3ZlcnNpb246XCIxLjEyLjFcIixkZWZpbmU6ZnVuY3Rpb24oZSxpLHMpe3JldHVybiBzfHwocz1pLGk9XCJlZmZlY3RcIiksdC5lZmZlY3RzLmVmZmVjdFtlXT1zLHQuZWZmZWN0cy5lZmZlY3RbZV0ubW9kZT1pLHN9LHNjYWxlZERpbWVuc2lvbnM6ZnVuY3Rpb24odCxlLGkpe2lmKDA9PT1lKXJldHVybntoZWlnaHQ6MCx3aWR0aDowLG91dGVySGVpZ2h0OjAsb3V0ZXJXaWR0aDowfTt2YXIgcz1cImhvcml6b250YWxcIiE9PWk/KGV8fDEwMCkvMTAwOjEsbj1cInZlcnRpY2FsXCIhPT1pPyhlfHwxMDApLzEwMDoxO3JldHVybntoZWlnaHQ6dC5oZWlnaHQoKSpuLHdpZHRoOnQud2lkdGgoKSpzLG91dGVySGVpZ2h0OnQub3V0ZXJIZWlnaHQoKSpuLG91dGVyV2lkdGg6dC5vdXRlcldpZHRoKCkqc319LGNsaXBUb0JveDpmdW5jdGlvbih0KXtyZXR1cm57d2lkdGg6dC5jbGlwLnJpZ2h0LXQuY2xpcC5sZWZ0LGhlaWdodDp0LmNsaXAuYm90dG9tLXQuY2xpcC50b3AsbGVmdDp0LmNsaXAubGVmdCx0b3A6dC5jbGlwLnRvcH19LHVuc2hpZnQ6ZnVuY3Rpb24odCxlLGkpe3ZhciBzPXQucXVldWUoKTtlPjEmJnMuc3BsaWNlLmFwcGx5KHMsWzEsMF0uY29uY2F0KHMuc3BsaWNlKGUsaSkpKSx0LmRlcXVldWUoKX0sc2F2ZVN0eWxlOmZ1bmN0aW9uKHQpe3QuZGF0YSh1LHRbMF0uc3R5bGUuY3NzVGV4dCl9LHJlc3RvcmVTdHlsZTpmdW5jdGlvbih0KXt0WzBdLnN0eWxlLmNzc1RleHQ9dC5kYXRhKHUpfHxcIlwiLHQucmVtb3ZlRGF0YSh1KX0sbW9kZTpmdW5jdGlvbih0LGUpe3ZhciBpPXQuaXMoXCI6aGlkZGVuXCIpO3JldHVyblwidG9nZ2xlXCI9PT1lJiYoZT1pP1wic2hvd1wiOlwiaGlkZVwiKSwoaT9cImhpZGVcIj09PWU6XCJzaG93XCI9PT1lKSYmKGU9XCJub25lXCIpLGV9LGdldEJhc2VsaW5lOmZ1bmN0aW9uKHQsZSl7dmFyIGkscztzd2l0Y2godFswXSl7Y2FzZVwidG9wXCI6aT0wO2JyZWFrO2Nhc2VcIm1pZGRsZVwiOmk9LjU7YnJlYWs7Y2FzZVwiYm90dG9tXCI6aT0xO2JyZWFrO2RlZmF1bHQ6aT10WzBdL2UuaGVpZ2h0fXN3aXRjaCh0WzFdKXtjYXNlXCJsZWZ0XCI6cz0wO2JyZWFrO2Nhc2VcImNlbnRlclwiOnM9LjU7YnJlYWs7Y2FzZVwicmlnaHRcIjpzPTE7YnJlYWs7ZGVmYXVsdDpzPXRbMV0vZS53aWR0aH1yZXR1cm57eDpzLHk6aX19LGNyZWF0ZVBsYWNlaG9sZGVyOmZ1bmN0aW9uKGUpe3ZhciBpLHM9ZS5jc3MoXCJwb3NpdGlvblwiKSxuPWUucG9zaXRpb24oKTtyZXR1cm4gZS5jc3Moe21hcmdpblRvcDplLmNzcyhcIm1hcmdpblRvcFwiKSxtYXJnaW5Cb3R0b206ZS5jc3MoXCJtYXJnaW5Cb3R0b21cIiksbWFyZ2luTGVmdDplLmNzcyhcIm1hcmdpbkxlZnRcIiksbWFyZ2luUmlnaHQ6ZS5jc3MoXCJtYXJnaW5SaWdodFwiKX0pLm91dGVyV2lkdGgoZS5vdXRlcldpZHRoKCkpLm91dGVySGVpZ2h0KGUub3V0ZXJIZWlnaHQoKSksL14oc3RhdGljfHJlbGF0aXZlKS8udGVzdChzKSYmKHM9XCJhYnNvbHV0ZVwiLGk9dChcIjxcIitlWzBdLm5vZGVOYW1lK1wiPlwiKS5pbnNlcnRBZnRlcihlKS5jc3Moe2Rpc3BsYXk6L14oaW5saW5lfHJ1YnkpLy50ZXN0KGUuY3NzKFwiZGlzcGxheVwiKSk/XCJpbmxpbmUtYmxvY2tcIjpcImJsb2NrXCIsdmlzaWJpbGl0eTpcImhpZGRlblwiLG1hcmdpblRvcDplLmNzcyhcIm1hcmdpblRvcFwiKSxtYXJnaW5Cb3R0b206ZS5jc3MoXCJtYXJnaW5Cb3R0b21cIiksbWFyZ2luTGVmdDplLmNzcyhcIm1hcmdpbkxlZnRcIiksbWFyZ2luUmlnaHQ6ZS5jc3MoXCJtYXJnaW5SaWdodFwiKSxcImZsb2F0XCI6ZS5jc3MoXCJmbG9hdFwiKX0pLm91dGVyV2lkdGgoZS5vdXRlcldpZHRoKCkpLm91dGVySGVpZ2h0KGUub3V0ZXJIZWlnaHQoKSkuYWRkQ2xhc3MoXCJ1aS1lZmZlY3RzLXBsYWNlaG9sZGVyXCIpLGUuZGF0YShjK1wicGxhY2Vob2xkZXJcIixpKSksZS5jc3Moe3Bvc2l0aW9uOnMsbGVmdDpuLmxlZnQsdG9wOm4udG9wfSksaX0scmVtb3ZlUGxhY2Vob2xkZXI6ZnVuY3Rpb24odCl7dmFyIGU9YytcInBsYWNlaG9sZGVyXCIsaT10LmRhdGEoZSk7aSYmKGkucmVtb3ZlKCksdC5yZW1vdmVEYXRhKGUpKX0sY2xlYW5VcDpmdW5jdGlvbihlKXt0LmVmZmVjdHMucmVzdG9yZVN0eWxlKGUpLHQuZWZmZWN0cy5yZW1vdmVQbGFjZWhvbGRlcihlKX0sc2V0VHJhbnNpdGlvbjpmdW5jdGlvbihlLGkscyxuKXtyZXR1cm4gbj1ufHx7fSx0LmVhY2goaSxmdW5jdGlvbih0LGkpe3ZhciBvPWUuY3NzVW5pdChpKTtvWzBdPjAmJihuW2ldPW9bMF0qcytvWzFdKX0pLG59fSksdC5mbi5leHRlbmQoe2VmZmVjdDpmdW5jdGlvbigpe2Z1bmN0aW9uIGkoZSl7ZnVuY3Rpb24gaSgpe3IucmVtb3ZlRGF0YShkKSx0LmVmZmVjdHMuY2xlYW5VcChyKSxcImhpZGVcIj09PXMubW9kZSYmci5oaWRlKCksYSgpfWZ1bmN0aW9uIGEoKXt0LmlzRnVuY3Rpb24oaCkmJmguY2FsbChyWzBdKSx0LmlzRnVuY3Rpb24oZSkmJmUoKX12YXIgcj10KHRoaXMpO3MubW9kZT1jLnNoaWZ0KCksdC51aUJhY2tDb21wYXQ9PT0hMXx8bz9cIm5vbmVcIj09PXMubW9kZT8ocltsXSgpLGEoKSk6bi5jYWxsKHJbMF0scyxpKTooci5pcyhcIjpoaWRkZW5cIik/XCJoaWRlXCI9PT1sOlwic2hvd1wiPT09bCk/KHJbbF0oKSxhKCkpOm4uY2FsbChyWzBdLHMsYSl9dmFyIHM9ZS5hcHBseSh0aGlzLGFyZ3VtZW50cyksbj10LmVmZmVjdHMuZWZmZWN0W3MuZWZmZWN0XSxvPW4ubW9kZSxhPXMucXVldWUscj1hfHxcImZ4XCIsaD1zLmNvbXBsZXRlLGw9cy5tb2RlLGM9W10sdT1mdW5jdGlvbihlKXt2YXIgaT10KHRoaXMpLHM9dC5lZmZlY3RzLm1vZGUoaSxsKXx8bztpLmRhdGEoZCwhMCksYy5wdXNoKHMpLG8mJihcInNob3dcIj09PXN8fHM9PT1vJiZcImhpZGVcIj09PXMpJiZpLnNob3coKSxvJiZcIm5vbmVcIj09PXN8fHQuZWZmZWN0cy5zYXZlU3R5bGUoaSksdC5pc0Z1bmN0aW9uKGUpJiZlKCl9O3JldHVybiB0LmZ4Lm9mZnx8IW4/bD90aGlzW2xdKHMuZHVyYXRpb24saCk6dGhpcy5lYWNoKGZ1bmN0aW9uKCl7aCYmaC5jYWxsKHRoaXMpfSk6YT09PSExP3RoaXMuZWFjaCh1KS5lYWNoKGkpOnRoaXMucXVldWUocix1KS5xdWV1ZShyLGkpfSxzaG93OmZ1bmN0aW9uKHQpe3JldHVybiBmdW5jdGlvbihzKXtpZihpKHMpKXJldHVybiB0LmFwcGx5KHRoaXMsYXJndW1lbnRzKTt2YXIgbj1lLmFwcGx5KHRoaXMsYXJndW1lbnRzKTtyZXR1cm4gbi5tb2RlPVwic2hvd1wiLHRoaXMuZWZmZWN0LmNhbGwodGhpcyxuKVxufX0odC5mbi5zaG93KSxoaWRlOmZ1bmN0aW9uKHQpe3JldHVybiBmdW5jdGlvbihzKXtpZihpKHMpKXJldHVybiB0LmFwcGx5KHRoaXMsYXJndW1lbnRzKTt2YXIgbj1lLmFwcGx5KHRoaXMsYXJndW1lbnRzKTtyZXR1cm4gbi5tb2RlPVwiaGlkZVwiLHRoaXMuZWZmZWN0LmNhbGwodGhpcyxuKX19KHQuZm4uaGlkZSksdG9nZ2xlOmZ1bmN0aW9uKHQpe3JldHVybiBmdW5jdGlvbihzKXtpZihpKHMpfHxcImJvb2xlYW5cIj09dHlwZW9mIHMpcmV0dXJuIHQuYXBwbHkodGhpcyxhcmd1bWVudHMpO3ZhciBuPWUuYXBwbHkodGhpcyxhcmd1bWVudHMpO3JldHVybiBuLm1vZGU9XCJ0b2dnbGVcIix0aGlzLmVmZmVjdC5jYWxsKHRoaXMsbil9fSh0LmZuLnRvZ2dsZSksY3NzVW5pdDpmdW5jdGlvbihlKXt2YXIgaT10aGlzLmNzcyhlKSxzPVtdO3JldHVybiB0LmVhY2goW1wiZW1cIixcInB4XCIsXCIlXCIsXCJwdFwiXSxmdW5jdGlvbih0LGUpe2kuaW5kZXhPZihlKT4wJiYocz1bcGFyc2VGbG9hdChpKSxlXSl9KSxzfSxjc3NDbGlwOmZ1bmN0aW9uKHQpe3JldHVybiB0P3RoaXMuY3NzKFwiY2xpcFwiLFwicmVjdChcIit0LnRvcCtcInB4IFwiK3QucmlnaHQrXCJweCBcIit0LmJvdHRvbStcInB4IFwiK3QubGVmdCtcInB4KVwiKTpzKHRoaXMuY3NzKFwiY2xpcFwiKSx0aGlzKX0sdHJhbnNmZXI6ZnVuY3Rpb24oZSxpKXt2YXIgcz10KHRoaXMpLG49dChlLnRvKSxvPVwiZml4ZWRcIj09PW4uY3NzKFwicG9zaXRpb25cIiksYT10KFwiYm9keVwiKSxyPW8/YS5zY3JvbGxUb3AoKTowLGg9bz9hLnNjcm9sbExlZnQoKTowLGw9bi5vZmZzZXQoKSxjPXt0b3A6bC50b3AtcixsZWZ0OmwubGVmdC1oLGhlaWdodDpuLmlubmVySGVpZ2h0KCksd2lkdGg6bi5pbm5lcldpZHRoKCl9LHU9cy5vZmZzZXQoKSxkPXQoXCI8ZGl2IGNsYXNzPSd1aS1lZmZlY3RzLXRyYW5zZmVyJz48L2Rpdj5cIikuYXBwZW5kVG8oXCJib2R5XCIpLmFkZENsYXNzKGUuY2xhc3NOYW1lKS5jc3Moe3RvcDp1LnRvcC1yLGxlZnQ6dS5sZWZ0LWgsaGVpZ2h0OnMuaW5uZXJIZWlnaHQoKSx3aWR0aDpzLmlubmVyV2lkdGgoKSxwb3NpdGlvbjpvP1wiZml4ZWRcIjpcImFic29sdXRlXCJ9KS5hbmltYXRlKGMsZS5kdXJhdGlvbixlLmVhc2luZyxmdW5jdGlvbigpe2QucmVtb3ZlKCksdC5pc0Z1bmN0aW9uKGkpJiZpKCl9KX19KSx0LmZ4LnN0ZXAuY2xpcD1mdW5jdGlvbihlKXtlLmNsaXBJbml0fHwoZS5zdGFydD10KGUuZWxlbSkuY3NzQ2xpcCgpLFwic3RyaW5nXCI9PXR5cGVvZiBlLmVuZCYmKGUuZW5kPXMoZS5lbmQsZS5lbGVtKSksZS5jbGlwSW5pdD0hMCksdChlLmVsZW0pLmNzc0NsaXAoe3RvcDplLnBvcyooZS5lbmQudG9wLWUuc3RhcnQudG9wKStlLnN0YXJ0LnRvcCxyaWdodDplLnBvcyooZS5lbmQucmlnaHQtZS5zdGFydC5yaWdodCkrZS5zdGFydC5yaWdodCxib3R0b206ZS5wb3MqKGUuZW5kLmJvdHRvbS1lLnN0YXJ0LmJvdHRvbSkrZS5zdGFydC5ib3R0b20sbGVmdDplLnBvcyooZS5lbmQubGVmdC1lLnN0YXJ0LmxlZnQpK2Uuc3RhcnQubGVmdH0pfX0oKSxmdW5jdGlvbigpe3ZhciBlPXt9O3QuZWFjaChbXCJRdWFkXCIsXCJDdWJpY1wiLFwiUXVhcnRcIixcIlF1aW50XCIsXCJFeHBvXCJdLGZ1bmN0aW9uKHQsaSl7ZVtpXT1mdW5jdGlvbihlKXtyZXR1cm4gTWF0aC5wb3coZSx0KzIpfX0pLHQuZXh0ZW5kKGUse1NpbmU6ZnVuY3Rpb24odCl7cmV0dXJuIDEtTWF0aC5jb3ModCpNYXRoLlBJLzIpfSxDaXJjOmZ1bmN0aW9uKHQpe3JldHVybiAxLU1hdGguc3FydCgxLXQqdCl9LEVsYXN0aWM6ZnVuY3Rpb24odCl7cmV0dXJuIDA9PT10fHwxPT09dD90Oi1NYXRoLnBvdygyLDgqKHQtMSkpKk1hdGguc2luKCg4MCoodC0xKS03LjUpKk1hdGguUEkvMTUpfSxCYWNrOmZ1bmN0aW9uKHQpe3JldHVybiB0KnQqKDMqdC0yKX0sQm91bmNlOmZ1bmN0aW9uKHQpe2Zvcih2YXIgZSxpPTQ7KChlPU1hdGgucG93KDIsLS1pKSktMSkvMTE+dDspO3JldHVybiAxL01hdGgucG93KDQsMy1pKS03LjU2MjUqTWF0aC5wb3coKDMqZS0yKS8yMi10LDIpfX0pLHQuZWFjaChlLGZ1bmN0aW9uKGUsaSl7dC5lYXNpbmdbXCJlYXNlSW5cIitlXT1pLHQuZWFzaW5nW1wiZWFzZU91dFwiK2VdPWZ1bmN0aW9uKHQpe3JldHVybiAxLWkoMS10KX0sdC5lYXNpbmdbXCJlYXNlSW5PdXRcIitlXT1mdW5jdGlvbih0KXtyZXR1cm4uNT50P2koMip0KS8yOjEtaSgtMip0KzIpLzJ9fSl9KCk7dmFyIGY9dC5lZmZlY3RzO3QuZWZmZWN0cy5kZWZpbmUoXCJibGluZFwiLFwiaGlkZVwiLGZ1bmN0aW9uKGUsaSl7dmFyIHM9e3VwOltcImJvdHRvbVwiLFwidG9wXCJdLHZlcnRpY2FsOltcImJvdHRvbVwiLFwidG9wXCJdLGRvd246W1widG9wXCIsXCJib3R0b21cIl0sbGVmdDpbXCJyaWdodFwiLFwibGVmdFwiXSxob3Jpem9udGFsOltcInJpZ2h0XCIsXCJsZWZ0XCJdLHJpZ2h0OltcImxlZnRcIixcInJpZ2h0XCJdfSxuPXQodGhpcyksbz1lLmRpcmVjdGlvbnx8XCJ1cFwiLGE9bi5jc3NDbGlwKCkscj17Y2xpcDp0LmV4dGVuZCh7fSxhKX0saD10LmVmZmVjdHMuY3JlYXRlUGxhY2Vob2xkZXIobik7ci5jbGlwW3Nbb11bMF1dPXIuY2xpcFtzW29dWzFdXSxcInNob3dcIj09PWUubW9kZSYmKG4uY3NzQ2xpcChyLmNsaXApLGgmJmguY3NzKHQuZWZmZWN0cy5jbGlwVG9Cb3gocikpLHIuY2xpcD1hKSxoJiZoLmFuaW1hdGUodC5lZmZlY3RzLmNsaXBUb0JveChyKSxlLmR1cmF0aW9uLGUuZWFzaW5nKSxuLmFuaW1hdGUocix7cXVldWU6ITEsZHVyYXRpb246ZS5kdXJhdGlvbixlYXNpbmc6ZS5lYXNpbmcsY29tcGxldGU6aX0pfSksdC5lZmZlY3RzLmRlZmluZShcImJvdW5jZVwiLGZ1bmN0aW9uKGUsaSl7dmFyIHMsbixvLGE9dCh0aGlzKSxyPWUubW9kZSxoPVwiaGlkZVwiPT09cixsPVwic2hvd1wiPT09cixjPWUuZGlyZWN0aW9ufHxcInVwXCIsdT1lLmRpc3RhbmNlLGQ9ZS50aW1lc3x8NSxwPTIqZCsobHx8aD8xOjApLGY9ZS5kdXJhdGlvbi9wLGc9ZS5lYXNpbmcsbT1cInVwXCI9PT1jfHxcImRvd25cIj09PWM/XCJ0b3BcIjpcImxlZnRcIixfPVwidXBcIj09PWN8fFwibGVmdFwiPT09Yyx2PTAsYj1hLnF1ZXVlKCkubGVuZ3RoO2Zvcih0LmVmZmVjdHMuY3JlYXRlUGxhY2Vob2xkZXIoYSksbz1hLmNzcyhtKSx1fHwodT1hW1widG9wXCI9PT1tP1wib3V0ZXJIZWlnaHRcIjpcIm91dGVyV2lkdGhcIl0oKS8zKSxsJiYobj17b3BhY2l0eToxfSxuW21dPW8sYS5jc3MoXCJvcGFjaXR5XCIsMCkuY3NzKG0sXz8yKi11OjIqdSkuYW5pbWF0ZShuLGYsZykpLGgmJih1Lz1NYXRoLnBvdygyLGQtMSkpLG49e30sblttXT1vO2Q+djt2Kyspcz17fSxzW21dPShfP1wiLT1cIjpcIis9XCIpK3UsYS5hbmltYXRlKHMsZixnKS5hbmltYXRlKG4sZixnKSx1PWg/Mip1OnUvMjtoJiYocz17b3BhY2l0eTowfSxzW21dPShfP1wiLT1cIjpcIis9XCIpK3UsYS5hbmltYXRlKHMsZixnKSksYS5xdWV1ZShpKSx0LmVmZmVjdHMudW5zaGlmdChhLGIscCsxKX0pLHQuZWZmZWN0cy5kZWZpbmUoXCJjbGlwXCIsXCJoaWRlXCIsZnVuY3Rpb24oZSxpKXt2YXIgcyxuPXt9LG89dCh0aGlzKSxhPWUuZGlyZWN0aW9ufHxcInZlcnRpY2FsXCIscj1cImJvdGhcIj09PWEsaD1yfHxcImhvcml6b250YWxcIj09PWEsbD1yfHxcInZlcnRpY2FsXCI9PT1hO3M9by5jc3NDbGlwKCksbi5jbGlwPXt0b3A6bD8ocy5ib3R0b20tcy50b3ApLzI6cy50b3AscmlnaHQ6aD8ocy5yaWdodC1zLmxlZnQpLzI6cy5yaWdodCxib3R0b206bD8ocy5ib3R0b20tcy50b3ApLzI6cy5ib3R0b20sbGVmdDpoPyhzLnJpZ2h0LXMubGVmdCkvMjpzLmxlZnR9LHQuZWZmZWN0cy5jcmVhdGVQbGFjZWhvbGRlcihvKSxcInNob3dcIj09PWUubW9kZSYmKG8uY3NzQ2xpcChuLmNsaXApLG4uY2xpcD1zKSxvLmFuaW1hdGUobix7cXVldWU6ITEsZHVyYXRpb246ZS5kdXJhdGlvbixlYXNpbmc6ZS5lYXNpbmcsY29tcGxldGU6aX0pfSksdC5lZmZlY3RzLmRlZmluZShcImRyb3BcIixcImhpZGVcIixmdW5jdGlvbihlLGkpe3ZhciBzLG49dCh0aGlzKSxvPWUubW9kZSxhPVwic2hvd1wiPT09byxyPWUuZGlyZWN0aW9ufHxcImxlZnRcIixoPVwidXBcIj09PXJ8fFwiZG93blwiPT09cj9cInRvcFwiOlwibGVmdFwiLGw9XCJ1cFwiPT09cnx8XCJsZWZ0XCI9PT1yP1wiLT1cIjpcIis9XCIsYz1cIis9XCI9PT1sP1wiLT1cIjpcIis9XCIsdT17b3BhY2l0eTowfTt0LmVmZmVjdHMuY3JlYXRlUGxhY2Vob2xkZXIobikscz1lLmRpc3RhbmNlfHxuW1widG9wXCI9PT1oP1wib3V0ZXJIZWlnaHRcIjpcIm91dGVyV2lkdGhcIl0oITApLzIsdVtoXT1sK3MsYSYmKG4uY3NzKHUpLHVbaF09YytzLHUub3BhY2l0eT0xKSxuLmFuaW1hdGUodSx7cXVldWU6ITEsZHVyYXRpb246ZS5kdXJhdGlvbixlYXNpbmc6ZS5lYXNpbmcsY29tcGxldGU6aX0pfSksdC5lZmZlY3RzLmRlZmluZShcImV4cGxvZGVcIixcImhpZGVcIixmdW5jdGlvbihlLGkpe2Z1bmN0aW9uIHMoKXtiLnB1c2godGhpcyksYi5sZW5ndGg9PT11KmQmJm4oKX1mdW5jdGlvbiBuKCl7cC5jc3Moe3Zpc2liaWxpdHk6XCJ2aXNpYmxlXCJ9KSx0KGIpLnJlbW92ZSgpLGkoKX12YXIgbyxhLHIsaCxsLGMsdT1lLnBpZWNlcz9NYXRoLnJvdW5kKE1hdGguc3FydChlLnBpZWNlcykpOjMsZD11LHA9dCh0aGlzKSxmPWUubW9kZSxnPVwic2hvd1wiPT09ZixtPXAuc2hvdygpLmNzcyhcInZpc2liaWxpdHlcIixcImhpZGRlblwiKS5vZmZzZXQoKSxfPU1hdGguY2VpbChwLm91dGVyV2lkdGgoKS9kKSx2PU1hdGguY2VpbChwLm91dGVySGVpZ2h0KCkvdSksYj1bXTtmb3Iobz0wO3U+bztvKyspZm9yKGg9bS50b3Arbyp2LGM9by0odS0xKS8yLGE9MDtkPmE7YSsrKXI9bS5sZWZ0K2EqXyxsPWEtKGQtMSkvMixwLmNsb25lKCkuYXBwZW5kVG8oXCJib2R5XCIpLndyYXAoXCI8ZGl2PjwvZGl2PlwiKS5jc3Moe3Bvc2l0aW9uOlwiYWJzb2x1dGVcIix2aXNpYmlsaXR5OlwidmlzaWJsZVwiLGxlZnQ6LWEqXyx0b3A6LW8qdn0pLnBhcmVudCgpLmFkZENsYXNzKFwidWktZWZmZWN0cy1leHBsb2RlXCIpLmNzcyh7cG9zaXRpb246XCJhYnNvbHV0ZVwiLG92ZXJmbG93OlwiaGlkZGVuXCIsd2lkdGg6XyxoZWlnaHQ6dixsZWZ0OnIrKGc/bCpfOjApLHRvcDpoKyhnP2MqdjowKSxvcGFjaXR5Omc/MDoxfSkuYW5pbWF0ZSh7bGVmdDpyKyhnPzA6bCpfKSx0b3A6aCsoZz8wOmMqdiksb3BhY2l0eTpnPzE6MH0sZS5kdXJhdGlvbnx8NTAwLGUuZWFzaW5nLHMpfSksdC5lZmZlY3RzLmRlZmluZShcImZhZGVcIixcInRvZ2dsZVwiLGZ1bmN0aW9uKGUsaSl7dmFyIHM9XCJzaG93XCI9PT1lLm1vZGU7dCh0aGlzKS5jc3MoXCJvcGFjaXR5XCIscz8wOjEpLmFuaW1hdGUoe29wYWNpdHk6cz8xOjB9LHtxdWV1ZTohMSxkdXJhdGlvbjplLmR1cmF0aW9uLGVhc2luZzplLmVhc2luZyxjb21wbGV0ZTppfSl9KSx0LmVmZmVjdHMuZGVmaW5lKFwiZm9sZFwiLFwiaGlkZVwiLGZ1bmN0aW9uKGUsaSl7dmFyIHM9dCh0aGlzKSxuPWUubW9kZSxvPVwic2hvd1wiPT09bixhPVwiaGlkZVwiPT09bixyPWUuc2l6ZXx8MTUsaD0vKFswLTldKyklLy5leGVjKHIpLGw9ISFlLmhvcml6Rmlyc3QsYz1sP1tcInJpZ2h0XCIsXCJib3R0b21cIl06W1wiYm90dG9tXCIsXCJyaWdodFwiXSx1PWUuZHVyYXRpb24vMixkPXQuZWZmZWN0cy5jcmVhdGVQbGFjZWhvbGRlcihzKSxwPXMuY3NzQ2xpcCgpLGY9e2NsaXA6dC5leHRlbmQoe30scCl9LGc9e2NsaXA6dC5leHRlbmQoe30scCl9LG09W3BbY1swXV0scFtjWzFdXV0sXz1zLnF1ZXVlKCkubGVuZ3RoO2gmJihyPXBhcnNlSW50KGhbMV0sMTApLzEwMCptW2E/MDoxXSksZi5jbGlwW2NbMF1dPXIsZy5jbGlwW2NbMF1dPXIsZy5jbGlwW2NbMV1dPTAsbyYmKHMuY3NzQ2xpcChnLmNsaXApLGQmJmQuY3NzKHQuZWZmZWN0cy5jbGlwVG9Cb3goZykpLGcuY2xpcD1wKSxzLnF1ZXVlKGZ1bmN0aW9uKGkpe2QmJmQuYW5pbWF0ZSh0LmVmZmVjdHMuY2xpcFRvQm94KGYpLHUsZS5lYXNpbmcpLmFuaW1hdGUodC5lZmZlY3RzLmNsaXBUb0JveChnKSx1LGUuZWFzaW5nKSxpKCl9KS5hbmltYXRlKGYsdSxlLmVhc2luZykuYW5pbWF0ZShnLHUsZS5lYXNpbmcpLnF1ZXVlKGkpLHQuZWZmZWN0cy51bnNoaWZ0KHMsXyw0KX0pLHQuZWZmZWN0cy5kZWZpbmUoXCJoaWdobGlnaHRcIixcInNob3dcIixmdW5jdGlvbihlLGkpe3ZhciBzPXQodGhpcyksbj17YmFja2dyb3VuZENvbG9yOnMuY3NzKFwiYmFja2dyb3VuZENvbG9yXCIpfTtcImhpZGVcIj09PWUubW9kZSYmKG4ub3BhY2l0eT0wKSx0LmVmZmVjdHMuc2F2ZVN0eWxlKHMpLHMuY3NzKHtiYWNrZ3JvdW5kSW1hZ2U6XCJub25lXCIsYmFja2dyb3VuZENvbG9yOmUuY29sb3J8fFwiI2ZmZmY5OVwifSkuYW5pbWF0ZShuLHtxdWV1ZTohMSxkdXJhdGlvbjplLmR1cmF0aW9uLGVhc2luZzplLmVhc2luZyxjb21wbGV0ZTppfSl9KSx0LmVmZmVjdHMuZGVmaW5lKFwic2l6ZVwiLGZ1bmN0aW9uKGUsaSl7dmFyIHMsbixvLGE9dCh0aGlzKSxyPVtcImZvbnRTaXplXCJdLGg9W1wiYm9yZGVyVG9wV2lkdGhcIixcImJvcmRlckJvdHRvbVdpZHRoXCIsXCJwYWRkaW5nVG9wXCIsXCJwYWRkaW5nQm90dG9tXCJdLGw9W1wiYm9yZGVyTGVmdFdpZHRoXCIsXCJib3JkZXJSaWdodFdpZHRoXCIsXCJwYWRkaW5nTGVmdFwiLFwicGFkZGluZ1JpZ2h0XCJdLGM9ZS5tb2RlLHU9XCJlZmZlY3RcIiE9PWMsZD1lLnNjYWxlfHxcImJvdGhcIixwPWUub3JpZ2lufHxbXCJtaWRkbGVcIixcImNlbnRlclwiXSxmPWEuY3NzKFwicG9zaXRpb25cIiksZz1hLnBvc2l0aW9uKCksbT10LmVmZmVjdHMuc2NhbGVkRGltZW5zaW9ucyhhKSxfPWUuZnJvbXx8bSx2PWUudG98fHQuZWZmZWN0cy5zY2FsZWREaW1lbnNpb25zKGEsMCk7dC5lZmZlY3RzLmNyZWF0ZVBsYWNlaG9sZGVyKGEpLFwic2hvd1wiPT09YyYmKG89XyxfPXYsdj1vKSxuPXtmcm9tOnt5Ol8uaGVpZ2h0L20uaGVpZ2h0LHg6Xy53aWR0aC9tLndpZHRofSx0bzp7eTp2LmhlaWdodC9tLmhlaWdodCx4OnYud2lkdGgvbS53aWR0aH19LChcImJveFwiPT09ZHx8XCJib3RoXCI9PT1kKSYmKG4uZnJvbS55IT09bi50by55JiYoXz10LmVmZmVjdHMuc2V0VHJhbnNpdGlvbihhLGgsbi5mcm9tLnksXyksdj10LmVmZmVjdHMuc2V0VHJhbnNpdGlvbihhLGgsbi50by55LHYpKSxuLmZyb20ueCE9PW4udG8ueCYmKF89dC5lZmZlY3RzLnNldFRyYW5zaXRpb24oYSxsLG4uZnJvbS54LF8pLHY9dC5lZmZlY3RzLnNldFRyYW5zaXRpb24oYSxsLG4udG8ueCx2KSkpLChcImNvbnRlbnRcIj09PWR8fFwiYm90aFwiPT09ZCkmJm4uZnJvbS55IT09bi50by55JiYoXz10LmVmZmVjdHMuc2V0VHJhbnNpdGlvbihhLHIsbi5mcm9tLnksXyksdj10LmVmZmVjdHMuc2V0VHJhbnNpdGlvbihhLHIsbi50by55LHYpKSxwJiYocz10LmVmZmVjdHMuZ2V0QmFzZWxpbmUocCxtKSxfLnRvcD0obS5vdXRlckhlaWdodC1fLm91dGVySGVpZ2h0KSpzLnkrZy50b3AsXy5sZWZ0PShtLm91dGVyV2lkdGgtXy5vdXRlcldpZHRoKSpzLngrZy5sZWZ0LHYudG9wPShtLm91dGVySGVpZ2h0LXYub3V0ZXJIZWlnaHQpKnMueStnLnRvcCx2LmxlZnQ9KG0ub3V0ZXJXaWR0aC12Lm91dGVyV2lkdGgpKnMueCtnLmxlZnQpLGEuY3NzKF8pLChcImNvbnRlbnRcIj09PWR8fFwiYm90aFwiPT09ZCkmJihoPWguY29uY2F0KFtcIm1hcmdpblRvcFwiLFwibWFyZ2luQm90dG9tXCJdKS5jb25jYXQociksbD1sLmNvbmNhdChbXCJtYXJnaW5MZWZ0XCIsXCJtYXJnaW5SaWdodFwiXSksYS5maW5kKFwiKlt3aWR0aF1cIikuZWFjaChmdW5jdGlvbigpe3ZhciBpPXQodGhpcykscz10LmVmZmVjdHMuc2NhbGVkRGltZW5zaW9ucyhpKSxvPXtoZWlnaHQ6cy5oZWlnaHQqbi5mcm9tLnksd2lkdGg6cy53aWR0aCpuLmZyb20ueCxvdXRlckhlaWdodDpzLm91dGVySGVpZ2h0Km4uZnJvbS55LG91dGVyV2lkdGg6cy5vdXRlcldpZHRoKm4uZnJvbS54fSxhPXtoZWlnaHQ6cy5oZWlnaHQqbi50by55LHdpZHRoOnMud2lkdGgqbi50by54LG91dGVySGVpZ2h0OnMuaGVpZ2h0Km4udG8ueSxvdXRlcldpZHRoOnMud2lkdGgqbi50by54fTtuLmZyb20ueSE9PW4udG8ueSYmKG89dC5lZmZlY3RzLnNldFRyYW5zaXRpb24oaSxoLG4uZnJvbS55LG8pLGE9dC5lZmZlY3RzLnNldFRyYW5zaXRpb24oaSxoLG4udG8ueSxhKSksbi5mcm9tLnghPT1uLnRvLngmJihvPXQuZWZmZWN0cy5zZXRUcmFuc2l0aW9uKGksbCxuLmZyb20ueCxvKSxhPXQuZWZmZWN0cy5zZXRUcmFuc2l0aW9uKGksbCxuLnRvLngsYSkpLHUmJnQuZWZmZWN0cy5zYXZlU3R5bGUoaSksaS5jc3MobyksaS5hbmltYXRlKGEsZS5kdXJhdGlvbixlLmVhc2luZyxmdW5jdGlvbigpe3UmJnQuZWZmZWN0cy5yZXN0b3JlU3R5bGUoaSl9KX0pKSxhLmFuaW1hdGUodix7cXVldWU6ITEsZHVyYXRpb246ZS5kdXJhdGlvbixlYXNpbmc6ZS5lYXNpbmcsY29tcGxldGU6ZnVuY3Rpb24oKXt2YXIgZT1hLm9mZnNldCgpOzA9PT12Lm9wYWNpdHkmJmEuY3NzKFwib3BhY2l0eVwiLF8ub3BhY2l0eSksdXx8KGEuY3NzKFwicG9zaXRpb25cIixcInN0YXRpY1wiPT09Zj9cInJlbGF0aXZlXCI6Zikub2Zmc2V0KGUpLHQuZWZmZWN0cy5zYXZlU3R5bGUoYSkpLGkoKX19KX0pLHQuZWZmZWN0cy5kZWZpbmUoXCJzY2FsZVwiLGZ1bmN0aW9uKGUsaSl7dmFyIHM9dCh0aGlzKSxuPWUubW9kZSxvPXBhcnNlSW50KGUucGVyY2VudCwxMCl8fCgwPT09cGFyc2VJbnQoZS5wZXJjZW50LDEwKT8wOlwiZWZmZWN0XCIhPT1uPzA6MTAwKSxhPXQuZXh0ZW5kKCEwLHtmcm9tOnQuZWZmZWN0cy5zY2FsZWREaW1lbnNpb25zKHMpLHRvOnQuZWZmZWN0cy5zY2FsZWREaW1lbnNpb25zKHMsbyxlLmRpcmVjdGlvbnx8XCJib3RoXCIpLG9yaWdpbjplLm9yaWdpbnx8W1wibWlkZGxlXCIsXCJjZW50ZXJcIl19LGUpO2UuZmFkZSYmKGEuZnJvbS5vcGFjaXR5PTEsYS50by5vcGFjaXR5PTApLHQuZWZmZWN0cy5lZmZlY3Quc2l6ZS5jYWxsKHRoaXMsYSxpKX0pLHQuZWZmZWN0cy5kZWZpbmUoXCJwdWZmXCIsXCJoaWRlXCIsZnVuY3Rpb24oZSxpKXt2YXIgcz10LmV4dGVuZCghMCx7fSxlLHtmYWRlOiEwLHBlcmNlbnQ6cGFyc2VJbnQoZS5wZXJjZW50LDEwKXx8MTUwfSk7dC5lZmZlY3RzLmVmZmVjdC5zY2FsZS5jYWxsKHRoaXMscyxpKX0pLHQuZWZmZWN0cy5kZWZpbmUoXCJwdWxzYXRlXCIsXCJzaG93XCIsZnVuY3Rpb24oZSxpKXt2YXIgcz10KHRoaXMpLG49ZS5tb2RlLG89XCJzaG93XCI9PT1uLGE9XCJoaWRlXCI9PT1uLHI9b3x8YSxoPTIqKGUudGltZXN8fDUpKyhyPzE6MCksbD1lLmR1cmF0aW9uL2gsYz0wLHU9MSxkPXMucXVldWUoKS5sZW5ndGg7Zm9yKChvfHwhcy5pcyhcIjp2aXNpYmxlXCIpKSYmKHMuY3NzKFwib3BhY2l0eVwiLDApLnNob3coKSxjPTEpO2g+dTt1Kyspcy5hbmltYXRlKHtvcGFjaXR5OmN9LGwsZS5lYXNpbmcpLGM9MS1jO3MuYW5pbWF0ZSh7b3BhY2l0eTpjfSxsLGUuZWFzaW5nKSxzLnF1ZXVlKGkpLHQuZWZmZWN0cy51bnNoaWZ0KHMsZCxoKzEpfSksdC5lZmZlY3RzLmRlZmluZShcInNoYWtlXCIsZnVuY3Rpb24oZSxpKXt2YXIgcz0xLG49dCh0aGlzKSxvPWUuZGlyZWN0aW9ufHxcImxlZnRcIixhPWUuZGlzdGFuY2V8fDIwLHI9ZS50aW1lc3x8MyxoPTIqcisxLGw9TWF0aC5yb3VuZChlLmR1cmF0aW9uL2gpLGM9XCJ1cFwiPT09b3x8XCJkb3duXCI9PT1vP1widG9wXCI6XCJsZWZ0XCIsdT1cInVwXCI9PT1vfHxcImxlZnRcIj09PW8sZD17fSxwPXt9LGY9e30sZz1uLnF1ZXVlKCkubGVuZ3RoO2Zvcih0LmVmZmVjdHMuY3JlYXRlUGxhY2Vob2xkZXIobiksZFtjXT0odT9cIi09XCI6XCIrPVwiKSthLHBbY109KHU/XCIrPVwiOlwiLT1cIikrMiphLGZbY109KHU/XCItPVwiOlwiKz1cIikrMiphLG4uYW5pbWF0ZShkLGwsZS5lYXNpbmcpO3I+cztzKyspbi5hbmltYXRlKHAsbCxlLmVhc2luZykuYW5pbWF0ZShmLGwsZS5lYXNpbmcpO24uYW5pbWF0ZShwLGwsZS5lYXNpbmcpLmFuaW1hdGUoZCxsLzIsZS5lYXNpbmcpLnF1ZXVlKGkpLHQuZWZmZWN0cy51bnNoaWZ0KG4sZyxoKzEpfSksdC5lZmZlY3RzLmRlZmluZShcInNsaWRlXCIsXCJzaG93XCIsZnVuY3Rpb24oZSxpKXt2YXIgcyxuLG89dCh0aGlzKSxhPXt1cDpbXCJib3R0b21cIixcInRvcFwiXSxkb3duOltcInRvcFwiLFwiYm90dG9tXCJdLGxlZnQ6W1wicmlnaHRcIixcImxlZnRcIl0scmlnaHQ6W1wibGVmdFwiLFwicmlnaHRcIl19LHI9ZS5tb2RlLGg9ZS5kaXJlY3Rpb258fFwibGVmdFwiLGw9XCJ1cFwiPT09aHx8XCJkb3duXCI9PT1oP1widG9wXCI6XCJsZWZ0XCIsYz1cInVwXCI9PT1ofHxcImxlZnRcIj09PWgsdT1lLmRpc3RhbmNlfHxvW1widG9wXCI9PT1sP1wib3V0ZXJIZWlnaHRcIjpcIm91dGVyV2lkdGhcIl0oITApLGQ9e307dC5lZmZlY3RzLmNyZWF0ZVBsYWNlaG9sZGVyKG8pLHM9by5jc3NDbGlwKCksbj1vLnBvc2l0aW9uKClbbF0sZFtsXT0oYz8tMToxKSp1K24sZC5jbGlwPW8uY3NzQ2xpcCgpLGQuY2xpcFthW2hdWzFdXT1kLmNsaXBbYVtoXVswXV0sXCJzaG93XCI9PT1yJiYoby5jc3NDbGlwKGQuY2xpcCksby5jc3MobCxkW2xdKSxkLmNsaXA9cyxkW2xdPW4pLG8uYW5pbWF0ZShkLHtxdWV1ZTohMSxkdXJhdGlvbjplLmR1cmF0aW9uLGVhc2luZzplLmVhc2luZyxjb21wbGV0ZTppfSl9KTt2YXIgZjt0LnVpQmFja0NvbXBhdCE9PSExJiYoZj10LmVmZmVjdHMuZGVmaW5lKFwidHJhbnNmZXJcIixmdW5jdGlvbihlLGkpe3QodGhpcykudHJhbnNmZXIoZSxpKX0pKSx0LnVpLmZvY3VzYWJsZT1mdW5jdGlvbihpLHMpe3ZhciBuLG8sYSxyLGgsbD1pLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCk7cmV0dXJuXCJhcmVhXCI9PT1sPyhuPWkucGFyZW50Tm9kZSxvPW4ubmFtZSxpLmhyZWYmJm8mJlwibWFwXCI9PT1uLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCk/KGE9dChcImltZ1t1c2VtYXA9JyNcIitvK1wiJ11cIiksYS5sZW5ndGg+MCYmYS5pcyhcIjp2aXNpYmxlXCIpKTohMSk6KC9eKGlucHV0fHNlbGVjdHx0ZXh0YXJlYXxidXR0b258b2JqZWN0KSQvLnRlc3QobCk/KHI9IWkuZGlzYWJsZWQsciYmKGg9dChpKS5jbG9zZXN0KFwiZmllbGRzZXRcIilbMF0saCYmKHI9IWguZGlzYWJsZWQpKSk6cj1cImFcIj09PWw/aS5ocmVmfHxzOnMsciYmdChpKS5pcyhcIjp2aXNpYmxlXCIpJiZlKHQoaSkpKX0sdC5leHRlbmQodC5leHByW1wiOlwiXSx7Zm9jdXNhYmxlOmZ1bmN0aW9uKGUpe3JldHVybiB0LnVpLmZvY3VzYWJsZShlLG51bGwhPXQuYXR0cihlLFwidGFiaW5kZXhcIikpfX0pLHQudWkuZm9jdXNhYmxlLHQuZm4uZm9ybT1mdW5jdGlvbigpe3JldHVyblwic3RyaW5nXCI9PXR5cGVvZiB0aGlzWzBdLmZvcm0/dGhpcy5jbG9zZXN0KFwiZm9ybVwiKTp0KHRoaXNbMF0uZm9ybSl9LHQudWkuZm9ybVJlc2V0TWl4aW49e19mb3JtUmVzZXRIYW5kbGVyOmZ1bmN0aW9uKCl7dmFyIGU9dCh0aGlzKTtzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7dmFyIGk9ZS5kYXRhKFwidWktZm9ybS1yZXNldC1pbnN0YW5jZXNcIik7dC5lYWNoKGksZnVuY3Rpb24oKXt0aGlzLnJlZnJlc2goKX0pfSl9LF9iaW5kRm9ybVJlc2V0SGFuZGxlcjpmdW5jdGlvbigpe2lmKHRoaXMuZm9ybT10aGlzLmVsZW1lbnQuZm9ybSgpLHRoaXMuZm9ybS5sZW5ndGgpe3ZhciB0PXRoaXMuZm9ybS5kYXRhKFwidWktZm9ybS1yZXNldC1pbnN0YW5jZXNcIil8fFtdO3QubGVuZ3RofHx0aGlzLmZvcm0ub24oXCJyZXNldC51aS1mb3JtLXJlc2V0XCIsdGhpcy5fZm9ybVJlc2V0SGFuZGxlciksdC5wdXNoKHRoaXMpLHRoaXMuZm9ybS5kYXRhKFwidWktZm9ybS1yZXNldC1pbnN0YW5jZXNcIix0KX19LF91bmJpbmRGb3JtUmVzZXRIYW5kbGVyOmZ1bmN0aW9uKCl7aWYodGhpcy5mb3JtLmxlbmd0aCl7dmFyIGU9dGhpcy5mb3JtLmRhdGEoXCJ1aS1mb3JtLXJlc2V0LWluc3RhbmNlc1wiKTtlLnNwbGljZSh0LmluQXJyYXkodGhpcyxlKSwxKSxlLmxlbmd0aD90aGlzLmZvcm0uZGF0YShcInVpLWZvcm0tcmVzZXQtaW5zdGFuY2VzXCIsZSk6dGhpcy5mb3JtLnJlbW92ZURhdGEoXCJ1aS1mb3JtLXJlc2V0LWluc3RhbmNlc1wiKS5vZmYoXCJyZXNldC51aS1mb3JtLXJlc2V0XCIpfX19LFwiMS43XCI9PT10LmZuLmpxdWVyeS5zdWJzdHJpbmcoMCwzKSYmKHQuZWFjaChbXCJXaWR0aFwiLFwiSGVpZ2h0XCJdLGZ1bmN0aW9uKGUsaSl7ZnVuY3Rpb24gcyhlLGkscyxvKXtyZXR1cm4gdC5lYWNoKG4sZnVuY3Rpb24oKXtpLT1wYXJzZUZsb2F0KHQuY3NzKGUsXCJwYWRkaW5nXCIrdGhpcykpfHwwLHMmJihpLT1wYXJzZUZsb2F0KHQuY3NzKGUsXCJib3JkZXJcIit0aGlzK1wiV2lkdGhcIikpfHwwKSxvJiYoaS09cGFyc2VGbG9hdCh0LmNzcyhlLFwibWFyZ2luXCIrdGhpcykpfHwwKX0pLGl9dmFyIG49XCJXaWR0aFwiPT09aT9bXCJMZWZ0XCIsXCJSaWdodFwiXTpbXCJUb3BcIixcIkJvdHRvbVwiXSxvPWkudG9Mb3dlckNhc2UoKSxhPXtpbm5lcldpZHRoOnQuZm4uaW5uZXJXaWR0aCxpbm5lckhlaWdodDp0LmZuLmlubmVySGVpZ2h0LG91dGVyV2lkdGg6dC5mbi5vdXRlcldpZHRoLG91dGVySGVpZ2h0OnQuZm4ub3V0ZXJIZWlnaHR9O3QuZm5bXCJpbm5lclwiK2ldPWZ1bmN0aW9uKGUpe3JldHVybiB2b2lkIDA9PT1lP2FbXCJpbm5lclwiK2ldLmNhbGwodGhpcyk6dGhpcy5lYWNoKGZ1bmN0aW9uKCl7dCh0aGlzKS5jc3MobyxzKHRoaXMsZSkrXCJweFwiKX0pfSx0LmZuW1wib3V0ZXJcIitpXT1mdW5jdGlvbihlLG4pe3JldHVyblwibnVtYmVyXCIhPXR5cGVvZiBlP2FbXCJvdXRlclwiK2ldLmNhbGwodGhpcyxlKTp0aGlzLmVhY2goZnVuY3Rpb24oKXt0KHRoaXMpLmNzcyhvLHModGhpcyxlLCEwLG4pK1wicHhcIil9KX19KSx0LmZuLmFkZEJhY2s9ZnVuY3Rpb24odCl7cmV0dXJuIHRoaXMuYWRkKG51bGw9PXQ/dGhpcy5wcmV2T2JqZWN0OnRoaXMucHJldk9iamVjdC5maWx0ZXIodCkpfSksdC51aS5rZXlDb2RlPXtCQUNLU1BBQ0U6OCxDT01NQToxODgsREVMRVRFOjQ2LERPV046NDAsRU5EOjM1LEVOVEVSOjEzLEVTQ0FQRToyNyxIT01FOjM2LExFRlQ6MzcsUEFHRV9ET1dOOjM0LFBBR0VfVVA6MzMsUEVSSU9EOjE5MCxSSUdIVDozOSxTUEFDRTozMixUQUI6OSxVUDozOH0sdC51aS5lc2NhcGVTZWxlY3Rvcj1mdW5jdGlvbigpe3ZhciB0PS8oWyFcIiMkJSYnKCkqKywuXFwvOjs8PT4/QFtcXF1eYHt8fX5dKS9nO3JldHVybiBmdW5jdGlvbihlKXtyZXR1cm4gZS5yZXBsYWNlKHQsXCJcXFxcJDFcIil9fSgpLHQuZm4ubGFiZWxzPWZ1bmN0aW9uKCl7dmFyIGUsaSxzLG4sbztyZXR1cm4gdGhpc1swXS5sYWJlbHMmJnRoaXNbMF0ubGFiZWxzLmxlbmd0aD90aGlzLnB1c2hTdGFjayh0aGlzWzBdLmxhYmVscyk6KG49dGhpcy5lcSgwKS5wYXJlbnRzKFwibGFiZWxcIikscz10aGlzLmF0dHIoXCJpZFwiKSxzJiYoZT10aGlzLmVxKDApLnBhcmVudHMoKS5sYXN0KCksbz1lLmFkZChlLmxlbmd0aD9lLnNpYmxpbmdzKCk6dGhpcy5zaWJsaW5ncygpKSxpPVwibGFiZWxbZm9yPSdcIit0LnVpLmVzY2FwZVNlbGVjdG9yKHMpK1wiJ11cIixuPW4uYWRkKG8uZmluZChpKS5hZGRCYWNrKGkpKSksdGhpcy5wdXNoU3RhY2sobikpfSx0LmZuLnNjcm9sbFBhcmVudD1mdW5jdGlvbihlKXt2YXIgaT10aGlzLmNzcyhcInBvc2l0aW9uXCIpLHM9XCJhYnNvbHV0ZVwiPT09aSxuPWU/LyhhdXRvfHNjcm9sbHxoaWRkZW4pLzovKGF1dG98c2Nyb2xsKS8sbz10aGlzLnBhcmVudHMoKS5maWx0ZXIoZnVuY3Rpb24oKXt2YXIgZT10KHRoaXMpO3JldHVybiBzJiZcInN0YXRpY1wiPT09ZS5jc3MoXCJwb3NpdGlvblwiKT8hMTpuLnRlc3QoZS5jc3MoXCJvdmVyZmxvd1wiKStlLmNzcyhcIm92ZXJmbG93LXlcIikrZS5jc3MoXCJvdmVyZmxvdy14XCIpKX0pLmVxKDApO3JldHVyblwiZml4ZWRcIiE9PWkmJm8ubGVuZ3RoP286dCh0aGlzWzBdLm93bmVyRG9jdW1lbnR8fGRvY3VtZW50KX0sdC5leHRlbmQodC5leHByW1wiOlwiXSx7dGFiYmFibGU6ZnVuY3Rpb24oZSl7dmFyIGk9dC5hdHRyKGUsXCJ0YWJpbmRleFwiKSxzPW51bGwhPWk7cmV0dXJuKCFzfHxpPj0wKSYmdC51aS5mb2N1c2FibGUoZSxzKX19KSx0LmZuLmV4dGVuZCh7dW5pcXVlSWQ6ZnVuY3Rpb24oKXt2YXIgdD0wO3JldHVybiBmdW5jdGlvbigpe3JldHVybiB0aGlzLmVhY2goZnVuY3Rpb24oKXt0aGlzLmlkfHwodGhpcy5pZD1cInVpLWlkLVwiKyArK3QpfSl9fSgpLHJlbW92ZVVuaXF1ZUlkOmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuZWFjaChmdW5jdGlvbigpey9edWktaWQtXFxkKyQvLnRlc3QodGhpcy5pZCkmJnQodGhpcykucmVtb3ZlQXR0cihcImlkXCIpfSl9fSksdC53aWRnZXQoXCJ1aS5hY2NvcmRpb25cIix7dmVyc2lvbjpcIjEuMTIuMVwiLG9wdGlvbnM6e2FjdGl2ZTowLGFuaW1hdGU6e30sY2xhc3Nlczp7XCJ1aS1hY2NvcmRpb24taGVhZGVyXCI6XCJ1aS1jb3JuZXItdG9wXCIsXCJ1aS1hY2NvcmRpb24taGVhZGVyLWNvbGxhcHNlZFwiOlwidWktY29ybmVyLWFsbFwiLFwidWktYWNjb3JkaW9uLWNvbnRlbnRcIjpcInVpLWNvcm5lci1ib3R0b21cIn0sY29sbGFwc2libGU6ITEsZXZlbnQ6XCJjbGlja1wiLGhlYWRlcjpcIj4gbGkgPiA6Zmlyc3QtY2hpbGQsID4gOm5vdChsaSk6ZXZlblwiLGhlaWdodFN0eWxlOlwiYXV0b1wiLGljb25zOnthY3RpdmVIZWFkZXI6XCJ1aS1pY29uLXRyaWFuZ2xlLTEtc1wiLGhlYWRlcjpcInVpLWljb24tdHJpYW5nbGUtMS1lXCJ9LGFjdGl2YXRlOm51bGwsYmVmb3JlQWN0aXZhdGU6bnVsbH0saGlkZVByb3BzOntib3JkZXJUb3BXaWR0aDpcImhpZGVcIixib3JkZXJCb3R0b21XaWR0aDpcImhpZGVcIixwYWRkaW5nVG9wOlwiaGlkZVwiLHBhZGRpbmdCb3R0b206XCJoaWRlXCIsaGVpZ2h0OlwiaGlkZVwifSxzaG93UHJvcHM6e2JvcmRlclRvcFdpZHRoOlwic2hvd1wiLGJvcmRlckJvdHRvbVdpZHRoOlwic2hvd1wiLHBhZGRpbmdUb3A6XCJzaG93XCIscGFkZGluZ0JvdHRvbTpcInNob3dcIixoZWlnaHQ6XCJzaG93XCJ9LF9jcmVhdGU6ZnVuY3Rpb24oKXt2YXIgZT10aGlzLm9wdGlvbnM7dGhpcy5wcmV2U2hvdz10aGlzLnByZXZIaWRlPXQoKSx0aGlzLl9hZGRDbGFzcyhcInVpLWFjY29yZGlvblwiLFwidWktd2lkZ2V0IHVpLWhlbHBlci1yZXNldFwiKSx0aGlzLmVsZW1lbnQuYXR0cihcInJvbGVcIixcInRhYmxpc3RcIiksZS5jb2xsYXBzaWJsZXx8ZS5hY3RpdmUhPT0hMSYmbnVsbCE9ZS5hY3RpdmV8fChlLmFjdGl2ZT0wKSx0aGlzLl9wcm9jZXNzUGFuZWxzKCksMD5lLmFjdGl2ZSYmKGUuYWN0aXZlKz10aGlzLmhlYWRlcnMubGVuZ3RoKSx0aGlzLl9yZWZyZXNoKCl9LF9nZXRDcmVhdGVFdmVudERhdGE6ZnVuY3Rpb24oKXtyZXR1cm57aGVhZGVyOnRoaXMuYWN0aXZlLHBhbmVsOnRoaXMuYWN0aXZlLmxlbmd0aD90aGlzLmFjdGl2ZS5uZXh0KCk6dCgpfX0sX2NyZWF0ZUljb25zOmZ1bmN0aW9uKCl7dmFyIGUsaSxzPXRoaXMub3B0aW9ucy5pY29ucztzJiYoZT10KFwiPHNwYW4+XCIpLHRoaXMuX2FkZENsYXNzKGUsXCJ1aS1hY2NvcmRpb24taGVhZGVyLWljb25cIixcInVpLWljb24gXCIrcy5oZWFkZXIpLGUucHJlcGVuZFRvKHRoaXMuaGVhZGVycyksaT10aGlzLmFjdGl2ZS5jaGlsZHJlbihcIi51aS1hY2NvcmRpb24taGVhZGVyLWljb25cIiksdGhpcy5fcmVtb3ZlQ2xhc3MoaSxzLmhlYWRlcikuX2FkZENsYXNzKGksbnVsbCxzLmFjdGl2ZUhlYWRlcikuX2FkZENsYXNzKHRoaXMuaGVhZGVycyxcInVpLWFjY29yZGlvbi1pY29uc1wiKSl9LF9kZXN0cm95SWNvbnM6ZnVuY3Rpb24oKXt0aGlzLl9yZW1vdmVDbGFzcyh0aGlzLmhlYWRlcnMsXCJ1aS1hY2NvcmRpb24taWNvbnNcIiksdGhpcy5oZWFkZXJzLmNoaWxkcmVuKFwiLnVpLWFjY29yZGlvbi1oZWFkZXItaWNvblwiKS5yZW1vdmUoKX0sX2Rlc3Ryb3k6ZnVuY3Rpb24oKXt2YXIgdDt0aGlzLmVsZW1lbnQucmVtb3ZlQXR0cihcInJvbGVcIiksdGhpcy5oZWFkZXJzLnJlbW92ZUF0dHIoXCJyb2xlIGFyaWEtZXhwYW5kZWQgYXJpYS1zZWxlY3RlZCBhcmlhLWNvbnRyb2xzIHRhYkluZGV4XCIpLnJlbW92ZVVuaXF1ZUlkKCksdGhpcy5fZGVzdHJveUljb25zKCksdD10aGlzLmhlYWRlcnMubmV4dCgpLmNzcyhcImRpc3BsYXlcIixcIlwiKS5yZW1vdmVBdHRyKFwicm9sZSBhcmlhLWhpZGRlbiBhcmlhLWxhYmVsbGVkYnlcIikucmVtb3ZlVW5pcXVlSWQoKSxcImNvbnRlbnRcIiE9PXRoaXMub3B0aW9ucy5oZWlnaHRTdHlsZSYmdC5jc3MoXCJoZWlnaHRcIixcIlwiKX0sX3NldE9wdGlvbjpmdW5jdGlvbih0LGUpe3JldHVyblwiYWN0aXZlXCI9PT10Pyh0aGlzLl9hY3RpdmF0ZShlKSx2b2lkIDApOihcImV2ZW50XCI9PT10JiYodGhpcy5vcHRpb25zLmV2ZW50JiZ0aGlzLl9vZmYodGhpcy5oZWFkZXJzLHRoaXMub3B0aW9ucy5ldmVudCksdGhpcy5fc2V0dXBFdmVudHMoZSkpLHRoaXMuX3N1cGVyKHQsZSksXCJjb2xsYXBzaWJsZVwiIT09dHx8ZXx8dGhpcy5vcHRpb25zLmFjdGl2ZSE9PSExfHx0aGlzLl9hY3RpdmF0ZSgwKSxcImljb25zXCI9PT10JiYodGhpcy5fZGVzdHJveUljb25zKCksZSYmdGhpcy5fY3JlYXRlSWNvbnMoKSksdm9pZCAwKX0sX3NldE9wdGlvbkRpc2FibGVkOmZ1bmN0aW9uKHQpe3RoaXMuX3N1cGVyKHQpLHRoaXMuZWxlbWVudC5hdHRyKFwiYXJpYS1kaXNhYmxlZFwiLHQpLHRoaXMuX3RvZ2dsZUNsYXNzKG51bGwsXCJ1aS1zdGF0ZS1kaXNhYmxlZFwiLCEhdCksdGhpcy5fdG9nZ2xlQ2xhc3ModGhpcy5oZWFkZXJzLmFkZCh0aGlzLmhlYWRlcnMubmV4dCgpKSxudWxsLFwidWktc3RhdGUtZGlzYWJsZWRcIiwhIXQpfSxfa2V5ZG93bjpmdW5jdGlvbihlKXtpZighZS5hbHRLZXkmJiFlLmN0cmxLZXkpe3ZhciBpPXQudWkua2V5Q29kZSxzPXRoaXMuaGVhZGVycy5sZW5ndGgsbj10aGlzLmhlYWRlcnMuaW5kZXgoZS50YXJnZXQpLG89ITE7c3dpdGNoKGUua2V5Q29kZSl7Y2FzZSBpLlJJR0hUOmNhc2UgaS5ET1dOOm89dGhpcy5oZWFkZXJzWyhuKzEpJXNdO2JyZWFrO2Nhc2UgaS5MRUZUOmNhc2UgaS5VUDpvPXRoaXMuaGVhZGVyc1sobi0xK3MpJXNdO2JyZWFrO2Nhc2UgaS5TUEFDRTpjYXNlIGkuRU5URVI6dGhpcy5fZXZlbnRIYW5kbGVyKGUpO2JyZWFrO2Nhc2UgaS5IT01FOm89dGhpcy5oZWFkZXJzWzBdO2JyZWFrO2Nhc2UgaS5FTkQ6bz10aGlzLmhlYWRlcnNbcy0xXX1vJiYodChlLnRhcmdldCkuYXR0cihcInRhYkluZGV4XCIsLTEpLHQobykuYXR0cihcInRhYkluZGV4XCIsMCksdChvKS50cmlnZ2VyKFwiZm9jdXNcIiksZS5wcmV2ZW50RGVmYXVsdCgpKX19LF9wYW5lbEtleURvd246ZnVuY3Rpb24oZSl7ZS5rZXlDb2RlPT09dC51aS5rZXlDb2RlLlVQJiZlLmN0cmxLZXkmJnQoZS5jdXJyZW50VGFyZ2V0KS5wcmV2KCkudHJpZ2dlcihcImZvY3VzXCIpfSxyZWZyZXNoOmZ1bmN0aW9uKCl7dmFyIGU9dGhpcy5vcHRpb25zO3RoaXMuX3Byb2Nlc3NQYW5lbHMoKSxlLmFjdGl2ZT09PSExJiZlLmNvbGxhcHNpYmxlPT09ITB8fCF0aGlzLmhlYWRlcnMubGVuZ3RoPyhlLmFjdGl2ZT0hMSx0aGlzLmFjdGl2ZT10KCkpOmUuYWN0aXZlPT09ITE/dGhpcy5fYWN0aXZhdGUoMCk6dGhpcy5hY3RpdmUubGVuZ3RoJiYhdC5jb250YWlucyh0aGlzLmVsZW1lbnRbMF0sdGhpcy5hY3RpdmVbMF0pP3RoaXMuaGVhZGVycy5sZW5ndGg9PT10aGlzLmhlYWRlcnMuZmluZChcIi51aS1zdGF0ZS1kaXNhYmxlZFwiKS5sZW5ndGg/KGUuYWN0aXZlPSExLHRoaXMuYWN0aXZlPXQoKSk6dGhpcy5fYWN0aXZhdGUoTWF0aC5tYXgoMCxlLmFjdGl2ZS0xKSk6ZS5hY3RpdmU9dGhpcy5oZWFkZXJzLmluZGV4KHRoaXMuYWN0aXZlKSx0aGlzLl9kZXN0cm95SWNvbnMoKSx0aGlzLl9yZWZyZXNoKCl9LF9wcm9jZXNzUGFuZWxzOmZ1bmN0aW9uKCl7dmFyIHQ9dGhpcy5oZWFkZXJzLGU9dGhpcy5wYW5lbHM7dGhpcy5oZWFkZXJzPXRoaXMuZWxlbWVudC5maW5kKHRoaXMub3B0aW9ucy5oZWFkZXIpLHRoaXMuX2FkZENsYXNzKHRoaXMuaGVhZGVycyxcInVpLWFjY29yZGlvbi1oZWFkZXIgdWktYWNjb3JkaW9uLWhlYWRlci1jb2xsYXBzZWRcIixcInVpLXN0YXRlLWRlZmF1bHRcIiksdGhpcy5wYW5lbHM9dGhpcy5oZWFkZXJzLm5leHQoKS5maWx0ZXIoXCI6bm90KC51aS1hY2NvcmRpb24tY29udGVudC1hY3RpdmUpXCIpLmhpZGUoKSx0aGlzLl9hZGRDbGFzcyh0aGlzLnBhbmVscyxcInVpLWFjY29yZGlvbi1jb250ZW50XCIsXCJ1aS1oZWxwZXItcmVzZXQgdWktd2lkZ2V0LWNvbnRlbnRcIiksZSYmKHRoaXMuX29mZih0Lm5vdCh0aGlzLmhlYWRlcnMpKSx0aGlzLl9vZmYoZS5ub3QodGhpcy5wYW5lbHMpKSl9LF9yZWZyZXNoOmZ1bmN0aW9uKCl7dmFyIGUsaT10aGlzLm9wdGlvbnMscz1pLmhlaWdodFN0eWxlLG49dGhpcy5lbGVtZW50LnBhcmVudCgpO3RoaXMuYWN0aXZlPXRoaXMuX2ZpbmRBY3RpdmUoaS5hY3RpdmUpLHRoaXMuX2FkZENsYXNzKHRoaXMuYWN0aXZlLFwidWktYWNjb3JkaW9uLWhlYWRlci1hY3RpdmVcIixcInVpLXN0YXRlLWFjdGl2ZVwiKS5fcmVtb3ZlQ2xhc3ModGhpcy5hY3RpdmUsXCJ1aS1hY2NvcmRpb24taGVhZGVyLWNvbGxhcHNlZFwiKSx0aGlzLl9hZGRDbGFzcyh0aGlzLmFjdGl2ZS5uZXh0KCksXCJ1aS1hY2NvcmRpb24tY29udGVudC1hY3RpdmVcIiksdGhpcy5hY3RpdmUubmV4dCgpLnNob3coKSx0aGlzLmhlYWRlcnMuYXR0cihcInJvbGVcIixcInRhYlwiKS5lYWNoKGZ1bmN0aW9uKCl7dmFyIGU9dCh0aGlzKSxpPWUudW5pcXVlSWQoKS5hdHRyKFwiaWRcIikscz1lLm5leHQoKSxuPXMudW5pcXVlSWQoKS5hdHRyKFwiaWRcIik7ZS5hdHRyKFwiYXJpYS1jb250cm9sc1wiLG4pLHMuYXR0cihcImFyaWEtbGFiZWxsZWRieVwiLGkpfSkubmV4dCgpLmF0dHIoXCJyb2xlXCIsXCJ0YWJwYW5lbFwiKSx0aGlzLmhlYWRlcnMubm90KHRoaXMuYWN0aXZlKS5hdHRyKHtcImFyaWEtc2VsZWN0ZWRcIjpcImZhbHNlXCIsXCJhcmlhLWV4cGFuZGVkXCI6XCJmYWxzZVwiLHRhYkluZGV4Oi0xfSkubmV4dCgpLmF0dHIoe1wiYXJpYS1oaWRkZW5cIjpcInRydWVcIn0pLmhpZGUoKSx0aGlzLmFjdGl2ZS5sZW5ndGg/dGhpcy5hY3RpdmUuYXR0cih7XCJhcmlhLXNlbGVjdGVkXCI6XCJ0cnVlXCIsXCJhcmlhLWV4cGFuZGVkXCI6XCJ0cnVlXCIsdGFiSW5kZXg6MH0pLm5leHQoKS5hdHRyKHtcImFyaWEtaGlkZGVuXCI6XCJmYWxzZVwifSk6dGhpcy5oZWFkZXJzLmVxKDApLmF0dHIoXCJ0YWJJbmRleFwiLDApLHRoaXMuX2NyZWF0ZUljb25zKCksdGhpcy5fc2V0dXBFdmVudHMoaS5ldmVudCksXCJmaWxsXCI9PT1zPyhlPW4uaGVpZ2h0KCksdGhpcy5lbGVtZW50LnNpYmxpbmdzKFwiOnZpc2libGVcIikuZWFjaChmdW5jdGlvbigpe3ZhciBpPXQodGhpcykscz1pLmNzcyhcInBvc2l0aW9uXCIpO1wiYWJzb2x1dGVcIiE9PXMmJlwiZml4ZWRcIiE9PXMmJihlLT1pLm91dGVySGVpZ2h0KCEwKSl9KSx0aGlzLmhlYWRlcnMuZWFjaChmdW5jdGlvbigpe2UtPXQodGhpcykub3V0ZXJIZWlnaHQoITApfSksdGhpcy5oZWFkZXJzLm5leHQoKS5lYWNoKGZ1bmN0aW9uKCl7dCh0aGlzKS5oZWlnaHQoTWF0aC5tYXgoMCxlLXQodGhpcykuaW5uZXJIZWlnaHQoKSt0KHRoaXMpLmhlaWdodCgpKSl9KS5jc3MoXCJvdmVyZmxvd1wiLFwiYXV0b1wiKSk6XCJhdXRvXCI9PT1zJiYoZT0wLHRoaXMuaGVhZGVycy5uZXh0KCkuZWFjaChmdW5jdGlvbigpe3ZhciBpPXQodGhpcykuaXMoXCI6dmlzaWJsZVwiKTtpfHx0KHRoaXMpLnNob3coKSxlPU1hdGgubWF4KGUsdCh0aGlzKS5jc3MoXCJoZWlnaHRcIixcIlwiKS5oZWlnaHQoKSksaXx8dCh0aGlzKS5oaWRlKCl9KS5oZWlnaHQoZSkpfSxfYWN0aXZhdGU6ZnVuY3Rpb24oZSl7dmFyIGk9dGhpcy5fZmluZEFjdGl2ZShlKVswXTtpIT09dGhpcy5hY3RpdmVbMF0mJihpPWl8fHRoaXMuYWN0aXZlWzBdLHRoaXMuX2V2ZW50SGFuZGxlcih7dGFyZ2V0OmksY3VycmVudFRhcmdldDppLHByZXZlbnREZWZhdWx0OnQubm9vcH0pKX0sX2ZpbmRBY3RpdmU6ZnVuY3Rpb24oZSl7cmV0dXJuXCJudW1iZXJcIj09dHlwZW9mIGU/dGhpcy5oZWFkZXJzLmVxKGUpOnQoKX0sX3NldHVwRXZlbnRzOmZ1bmN0aW9uKGUpe3ZhciBpPXtrZXlkb3duOlwiX2tleWRvd25cIn07ZSYmdC5lYWNoKGUuc3BsaXQoXCIgXCIpLGZ1bmN0aW9uKHQsZSl7aVtlXT1cIl9ldmVudEhhbmRsZXJcIn0pLHRoaXMuX29mZih0aGlzLmhlYWRlcnMuYWRkKHRoaXMuaGVhZGVycy5uZXh0KCkpKSx0aGlzLl9vbih0aGlzLmhlYWRlcnMsaSksdGhpcy5fb24odGhpcy5oZWFkZXJzLm5leHQoKSx7a2V5ZG93bjpcIl9wYW5lbEtleURvd25cIn0pLHRoaXMuX2hvdmVyYWJsZSh0aGlzLmhlYWRlcnMpLHRoaXMuX2ZvY3VzYWJsZSh0aGlzLmhlYWRlcnMpfSxfZXZlbnRIYW5kbGVyOmZ1bmN0aW9uKGUpe3ZhciBpLHMsbj10aGlzLm9wdGlvbnMsbz10aGlzLmFjdGl2ZSxhPXQoZS5jdXJyZW50VGFyZ2V0KSxyPWFbMF09PT1vWzBdLGg9ciYmbi5jb2xsYXBzaWJsZSxsPWg/dCgpOmEubmV4dCgpLGM9by5uZXh0KCksdT17b2xkSGVhZGVyOm8sb2xkUGFuZWw6YyxuZXdIZWFkZXI6aD90KCk6YSxuZXdQYW5lbDpsfTtlLnByZXZlbnREZWZhdWx0KCksciYmIW4uY29sbGFwc2libGV8fHRoaXMuX3RyaWdnZXIoXCJiZWZvcmVBY3RpdmF0ZVwiLGUsdSk9PT0hMXx8KG4uYWN0aXZlPWg/ITE6dGhpcy5oZWFkZXJzLmluZGV4KGEpLHRoaXMuYWN0aXZlPXI/dCgpOmEsdGhpcy5fdG9nZ2xlKHUpLHRoaXMuX3JlbW92ZUNsYXNzKG8sXCJ1aS1hY2NvcmRpb24taGVhZGVyLWFjdGl2ZVwiLFwidWktc3RhdGUtYWN0aXZlXCIpLG4uaWNvbnMmJihpPW8uY2hpbGRyZW4oXCIudWktYWNjb3JkaW9uLWhlYWRlci1pY29uXCIpLHRoaXMuX3JlbW92ZUNsYXNzKGksbnVsbCxuLmljb25zLmFjdGl2ZUhlYWRlcikuX2FkZENsYXNzKGksbnVsbCxuLmljb25zLmhlYWRlcikpLHJ8fCh0aGlzLl9yZW1vdmVDbGFzcyhhLFwidWktYWNjb3JkaW9uLWhlYWRlci1jb2xsYXBzZWRcIikuX2FkZENsYXNzKGEsXCJ1aS1hY2NvcmRpb24taGVhZGVyLWFjdGl2ZVwiLFwidWktc3RhdGUtYWN0aXZlXCIpLG4uaWNvbnMmJihzPWEuY2hpbGRyZW4oXCIudWktYWNjb3JkaW9uLWhlYWRlci1pY29uXCIpLHRoaXMuX3JlbW92ZUNsYXNzKHMsbnVsbCxuLmljb25zLmhlYWRlcikuX2FkZENsYXNzKHMsbnVsbCxuLmljb25zLmFjdGl2ZUhlYWRlcikpLHRoaXMuX2FkZENsYXNzKGEubmV4dCgpLFwidWktYWNjb3JkaW9uLWNvbnRlbnQtYWN0aXZlXCIpKSl9LF90b2dnbGU6ZnVuY3Rpb24oZSl7dmFyIGk9ZS5uZXdQYW5lbCxzPXRoaXMucHJldlNob3cubGVuZ3RoP3RoaXMucHJldlNob3c6ZS5vbGRQYW5lbDt0aGlzLnByZXZTaG93LmFkZCh0aGlzLnByZXZIaWRlKS5zdG9wKCEwLCEwKSx0aGlzLnByZXZTaG93PWksdGhpcy5wcmV2SGlkZT1zLHRoaXMub3B0aW9ucy5hbmltYXRlP3RoaXMuX2FuaW1hdGUoaSxzLGUpOihzLmhpZGUoKSxpLnNob3coKSx0aGlzLl90b2dnbGVDb21wbGV0ZShlKSkscy5hdHRyKHtcImFyaWEtaGlkZGVuXCI6XCJ0cnVlXCJ9KSxzLnByZXYoKS5hdHRyKHtcImFyaWEtc2VsZWN0ZWRcIjpcImZhbHNlXCIsXCJhcmlhLWV4cGFuZGVkXCI6XCJmYWxzZVwifSksaS5sZW5ndGgmJnMubGVuZ3RoP3MucHJldigpLmF0dHIoe3RhYkluZGV4Oi0xLFwiYXJpYS1leHBhbmRlZFwiOlwiZmFsc2VcIn0pOmkubGVuZ3RoJiZ0aGlzLmhlYWRlcnMuZmlsdGVyKGZ1bmN0aW9uKCl7cmV0dXJuIDA9PT1wYXJzZUludCh0KHRoaXMpLmF0dHIoXCJ0YWJJbmRleFwiKSwxMCl9KS5hdHRyKFwidGFiSW5kZXhcIiwtMSksaS5hdHRyKFwiYXJpYS1oaWRkZW5cIixcImZhbHNlXCIpLnByZXYoKS5hdHRyKHtcImFyaWEtc2VsZWN0ZWRcIjpcInRydWVcIixcImFyaWEtZXhwYW5kZWRcIjpcInRydWVcIix0YWJJbmRleDowfSl9LF9hbmltYXRlOmZ1bmN0aW9uKHQsZSxpKXt2YXIgcyxuLG8sYT10aGlzLHI9MCxoPXQuY3NzKFwiYm94LXNpemluZ1wiKSxsPXQubGVuZ3RoJiYoIWUubGVuZ3RofHx0LmluZGV4KCk8ZS5pbmRleCgpKSxjPXRoaXMub3B0aW9ucy5hbmltYXRlfHx7fSx1PWwmJmMuZG93bnx8YyxkPWZ1bmN0aW9uKCl7YS5fdG9nZ2xlQ29tcGxldGUoaSl9O3JldHVyblwibnVtYmVyXCI9PXR5cGVvZiB1JiYobz11KSxcInN0cmluZ1wiPT10eXBlb2YgdSYmKG49dSksbj1ufHx1LmVhc2luZ3x8Yy5lYXNpbmcsbz1vfHx1LmR1cmF0aW9ufHxjLmR1cmF0aW9uLGUubGVuZ3RoP3QubGVuZ3RoPyhzPXQuc2hvdygpLm91dGVySGVpZ2h0KCksZS5hbmltYXRlKHRoaXMuaGlkZVByb3BzLHtkdXJhdGlvbjpvLGVhc2luZzpuLHN0ZXA6ZnVuY3Rpb24odCxlKXtlLm5vdz1NYXRoLnJvdW5kKHQpfX0pLHQuaGlkZSgpLmFuaW1hdGUodGhpcy5zaG93UHJvcHMse2R1cmF0aW9uOm8sZWFzaW5nOm4sY29tcGxldGU6ZCxzdGVwOmZ1bmN0aW9uKHQsaSl7aS5ub3c9TWF0aC5yb3VuZCh0KSxcImhlaWdodFwiIT09aS5wcm9wP1wiY29udGVudC1ib3hcIj09PWgmJihyKz1pLm5vdyk6XCJjb250ZW50XCIhPT1hLm9wdGlvbnMuaGVpZ2h0U3R5bGUmJihpLm5vdz1NYXRoLnJvdW5kKHMtZS5vdXRlckhlaWdodCgpLXIpLHI9MCl9fSksdm9pZCAwKTplLmFuaW1hdGUodGhpcy5oaWRlUHJvcHMsbyxuLGQpOnQuYW5pbWF0ZSh0aGlzLnNob3dQcm9wcyxvLG4sZCl9LF90b2dnbGVDb21wbGV0ZTpmdW5jdGlvbih0KXt2YXIgZT10Lm9sZFBhbmVsLGk9ZS5wcmV2KCk7dGhpcy5fcmVtb3ZlQ2xhc3MoZSxcInVpLWFjY29yZGlvbi1jb250ZW50LWFjdGl2ZVwiKSx0aGlzLl9yZW1vdmVDbGFzcyhpLFwidWktYWNjb3JkaW9uLWhlYWRlci1hY3RpdmVcIikuX2FkZENsYXNzKGksXCJ1aS1hY2NvcmRpb24taGVhZGVyLWNvbGxhcHNlZFwiKSxlLmxlbmd0aCYmKGUucGFyZW50KClbMF0uY2xhc3NOYW1lPWUucGFyZW50KClbMF0uY2xhc3NOYW1lKSx0aGlzLl90cmlnZ2VyKFwiYWN0aXZhdGVcIixudWxsLHQpfX0pLHQudWkuc2FmZUFjdGl2ZUVsZW1lbnQ9ZnVuY3Rpb24odCl7dmFyIGU7dHJ5e2U9dC5hY3RpdmVFbGVtZW50fWNhdGNoKGkpe2U9dC5ib2R5fXJldHVybiBlfHwoZT10LmJvZHkpLGUubm9kZU5hbWV8fChlPXQuYm9keSksZX0sdC53aWRnZXQoXCJ1aS5tZW51XCIse3ZlcnNpb246XCIxLjEyLjFcIixkZWZhdWx0RWxlbWVudDpcIjx1bD5cIixkZWxheTozMDAsb3B0aW9uczp7aWNvbnM6e3N1Ym1lbnU6XCJ1aS1pY29uLWNhcmV0LTEtZVwifSxpdGVtczpcIj4gKlwiLG1lbnVzOlwidWxcIixwb3NpdGlvbjp7bXk6XCJsZWZ0IHRvcFwiLGF0OlwicmlnaHQgdG9wXCJ9LHJvbGU6XCJtZW51XCIsYmx1cjpudWxsLGZvY3VzOm51bGwsc2VsZWN0Om51bGx9LF9jcmVhdGU6ZnVuY3Rpb24oKXt0aGlzLmFjdGl2ZU1lbnU9dGhpcy5lbGVtZW50LHRoaXMubW91c2VIYW5kbGVkPSExLHRoaXMuZWxlbWVudC51bmlxdWVJZCgpLmF0dHIoe3JvbGU6dGhpcy5vcHRpb25zLnJvbGUsdGFiSW5kZXg6MH0pLHRoaXMuX2FkZENsYXNzKFwidWktbWVudVwiLFwidWktd2lkZ2V0IHVpLXdpZGdldC1jb250ZW50XCIpLHRoaXMuX29uKHtcIm1vdXNlZG93biAudWktbWVudS1pdGVtXCI6ZnVuY3Rpb24odCl7dC5wcmV2ZW50RGVmYXVsdCgpfSxcImNsaWNrIC51aS1tZW51LWl0ZW1cIjpmdW5jdGlvbihlKXt2YXIgaT10KGUudGFyZ2V0KSxzPXQodC51aS5zYWZlQWN0aXZlRWxlbWVudCh0aGlzLmRvY3VtZW50WzBdKSk7IXRoaXMubW91c2VIYW5kbGVkJiZpLm5vdChcIi51aS1zdGF0ZS1kaXNhYmxlZFwiKS5sZW5ndGgmJih0aGlzLnNlbGVjdChlKSxlLmlzUHJvcGFnYXRpb25TdG9wcGVkKCl8fCh0aGlzLm1vdXNlSGFuZGxlZD0hMCksaS5oYXMoXCIudWktbWVudVwiKS5sZW5ndGg/dGhpcy5leHBhbmQoZSk6IXRoaXMuZWxlbWVudC5pcyhcIjpmb2N1c1wiKSYmcy5jbG9zZXN0KFwiLnVpLW1lbnVcIikubGVuZ3RoJiYodGhpcy5lbGVtZW50LnRyaWdnZXIoXCJmb2N1c1wiLFshMF0pLHRoaXMuYWN0aXZlJiYxPT09dGhpcy5hY3RpdmUucGFyZW50cyhcIi51aS1tZW51XCIpLmxlbmd0aCYmY2xlYXJUaW1lb3V0KHRoaXMudGltZXIpKSl9LFwibW91c2VlbnRlciAudWktbWVudS1pdGVtXCI6ZnVuY3Rpb24oZSl7aWYoIXRoaXMucHJldmlvdXNGaWx0ZXIpe3ZhciBpPXQoZS50YXJnZXQpLmNsb3Nlc3QoXCIudWktbWVudS1pdGVtXCIpLHM9dChlLmN1cnJlbnRUYXJnZXQpO2lbMF09PT1zWzBdJiYodGhpcy5fcmVtb3ZlQ2xhc3Mocy5zaWJsaW5ncygpLmNoaWxkcmVuKFwiLnVpLXN0YXRlLWFjdGl2ZVwiKSxudWxsLFwidWktc3RhdGUtYWN0aXZlXCIpLHRoaXMuZm9jdXMoZSxzKSl9fSxtb3VzZWxlYXZlOlwiY29sbGFwc2VBbGxcIixcIm1vdXNlbGVhdmUgLnVpLW1lbnVcIjpcImNvbGxhcHNlQWxsXCIsZm9jdXM6ZnVuY3Rpb24odCxlKXt2YXIgaT10aGlzLmFjdGl2ZXx8dGhpcy5lbGVtZW50LmZpbmQodGhpcy5vcHRpb25zLml0ZW1zKS5lcSgwKTtlfHx0aGlzLmZvY3VzKHQsaSl9LGJsdXI6ZnVuY3Rpb24oZSl7dGhpcy5fZGVsYXkoZnVuY3Rpb24oKXt2YXIgaT0hdC5jb250YWlucyh0aGlzLmVsZW1lbnRbMF0sdC51aS5zYWZlQWN0aXZlRWxlbWVudCh0aGlzLmRvY3VtZW50WzBdKSk7aSYmdGhpcy5jb2xsYXBzZUFsbChlKX0pfSxrZXlkb3duOlwiX2tleWRvd25cIn0pLHRoaXMucmVmcmVzaCgpLHRoaXMuX29uKHRoaXMuZG9jdW1lbnQse2NsaWNrOmZ1bmN0aW9uKHQpe3RoaXMuX2Nsb3NlT25Eb2N1bWVudENsaWNrKHQpJiZ0aGlzLmNvbGxhcHNlQWxsKHQpLHRoaXMubW91c2VIYW5kbGVkPSExfX0pfSxfZGVzdHJveTpmdW5jdGlvbigpe3ZhciBlPXRoaXMuZWxlbWVudC5maW5kKFwiLnVpLW1lbnUtaXRlbVwiKS5yZW1vdmVBdHRyKFwicm9sZSBhcmlhLWRpc2FibGVkXCIpLGk9ZS5jaGlsZHJlbihcIi51aS1tZW51LWl0ZW0td3JhcHBlclwiKS5yZW1vdmVVbmlxdWVJZCgpLnJlbW92ZUF0dHIoXCJ0YWJJbmRleCByb2xlIGFyaWEtaGFzcG9wdXBcIik7dGhpcy5lbGVtZW50LnJlbW92ZUF0dHIoXCJhcmlhLWFjdGl2ZWRlc2NlbmRhbnRcIikuZmluZChcIi51aS1tZW51XCIpLmFkZEJhY2soKS5yZW1vdmVBdHRyKFwicm9sZSBhcmlhLWxhYmVsbGVkYnkgYXJpYS1leHBhbmRlZCBhcmlhLWhpZGRlbiBhcmlhLWRpc2FibGVkIHRhYkluZGV4XCIpLnJlbW92ZVVuaXF1ZUlkKCkuc2hvdygpLGkuY2hpbGRyZW4oKS5lYWNoKGZ1bmN0aW9uKCl7dmFyIGU9dCh0aGlzKTtlLmRhdGEoXCJ1aS1tZW51LXN1Ym1lbnUtY2FyZXRcIikmJmUucmVtb3ZlKCl9KX0sX2tleWRvd246ZnVuY3Rpb24oZSl7dmFyIGkscyxuLG8sYT0hMDtzd2l0Y2goZS5rZXlDb2RlKXtjYXNlIHQudWkua2V5Q29kZS5QQUdFX1VQOnRoaXMucHJldmlvdXNQYWdlKGUpO2JyZWFrO2Nhc2UgdC51aS5rZXlDb2RlLlBBR0VfRE9XTjp0aGlzLm5leHRQYWdlKGUpO2JyZWFrO2Nhc2UgdC51aS5rZXlDb2RlLkhPTUU6dGhpcy5fbW92ZShcImZpcnN0XCIsXCJmaXJzdFwiLGUpO2JyZWFrO2Nhc2UgdC51aS5rZXlDb2RlLkVORDp0aGlzLl9tb3ZlKFwibGFzdFwiLFwibGFzdFwiLGUpO2JyZWFrO2Nhc2UgdC51aS5rZXlDb2RlLlVQOnRoaXMucHJldmlvdXMoZSk7YnJlYWs7Y2FzZSB0LnVpLmtleUNvZGUuRE9XTjp0aGlzLm5leHQoZSk7YnJlYWs7Y2FzZSB0LnVpLmtleUNvZGUuTEVGVDp0aGlzLmNvbGxhcHNlKGUpO2JyZWFrO2Nhc2UgdC51aS5rZXlDb2RlLlJJR0hUOnRoaXMuYWN0aXZlJiYhdGhpcy5hY3RpdmUuaXMoXCIudWktc3RhdGUtZGlzYWJsZWRcIikmJnRoaXMuZXhwYW5kKGUpO2JyZWFrO2Nhc2UgdC51aS5rZXlDb2RlLkVOVEVSOmNhc2UgdC51aS5rZXlDb2RlLlNQQUNFOnRoaXMuX2FjdGl2YXRlKGUpO2JyZWFrO2Nhc2UgdC51aS5rZXlDb2RlLkVTQ0FQRTp0aGlzLmNvbGxhcHNlKGUpO2JyZWFrO2RlZmF1bHQ6YT0hMSxzPXRoaXMucHJldmlvdXNGaWx0ZXJ8fFwiXCIsbz0hMSxuPWUua2V5Q29kZT49OTYmJjEwNT49ZS5rZXlDb2RlP1wiXCIrKGUua2V5Q29kZS05Nik6U3RyaW5nLmZyb21DaGFyQ29kZShlLmtleUNvZGUpLGNsZWFyVGltZW91dCh0aGlzLmZpbHRlclRpbWVyKSxuPT09cz9vPSEwOm49cytuLGk9dGhpcy5fZmlsdGVyTWVudUl0ZW1zKG4pLGk9byYmLTEhPT1pLmluZGV4KHRoaXMuYWN0aXZlLm5leHQoKSk/dGhpcy5hY3RpdmUubmV4dEFsbChcIi51aS1tZW51LWl0ZW1cIik6aSxpLmxlbmd0aHx8KG49U3RyaW5nLmZyb21DaGFyQ29kZShlLmtleUNvZGUpLGk9dGhpcy5fZmlsdGVyTWVudUl0ZW1zKG4pKSxpLmxlbmd0aD8odGhpcy5mb2N1cyhlLGkpLHRoaXMucHJldmlvdXNGaWx0ZXI9bix0aGlzLmZpbHRlclRpbWVyPXRoaXMuX2RlbGF5KGZ1bmN0aW9uKCl7ZGVsZXRlIHRoaXMucHJldmlvdXNGaWx0ZXJ9LDFlMykpOmRlbGV0ZSB0aGlzLnByZXZpb3VzRmlsdGVyfWEmJmUucHJldmVudERlZmF1bHQoKX0sX2FjdGl2YXRlOmZ1bmN0aW9uKHQpe3RoaXMuYWN0aXZlJiYhdGhpcy5hY3RpdmUuaXMoXCIudWktc3RhdGUtZGlzYWJsZWRcIikmJih0aGlzLmFjdGl2ZS5jaGlsZHJlbihcIlthcmlhLWhhc3BvcHVwPSd0cnVlJ11cIikubGVuZ3RoP3RoaXMuZXhwYW5kKHQpOnRoaXMuc2VsZWN0KHQpKX0scmVmcmVzaDpmdW5jdGlvbigpe3ZhciBlLGkscyxuLG8sYT10aGlzLHI9dGhpcy5vcHRpb25zLmljb25zLnN1Ym1lbnUsaD10aGlzLmVsZW1lbnQuZmluZCh0aGlzLm9wdGlvbnMubWVudXMpO3RoaXMuX3RvZ2dsZUNsYXNzKFwidWktbWVudS1pY29uc1wiLG51bGwsISF0aGlzLmVsZW1lbnQuZmluZChcIi51aS1pY29uXCIpLmxlbmd0aCkscz1oLmZpbHRlcihcIjpub3QoLnVpLW1lbnUpXCIpLmhpZGUoKS5hdHRyKHtyb2xlOnRoaXMub3B0aW9ucy5yb2xlLFwiYXJpYS1oaWRkZW5cIjpcInRydWVcIixcImFyaWEtZXhwYW5kZWRcIjpcImZhbHNlXCJ9KS5lYWNoKGZ1bmN0aW9uKCl7dmFyIGU9dCh0aGlzKSxpPWUucHJldigpLHM9dChcIjxzcGFuPlwiKS5kYXRhKFwidWktbWVudS1zdWJtZW51LWNhcmV0XCIsITApO2EuX2FkZENsYXNzKHMsXCJ1aS1tZW51LWljb25cIixcInVpLWljb24gXCIrciksaS5hdHRyKFwiYXJpYS1oYXNwb3B1cFwiLFwidHJ1ZVwiKS5wcmVwZW5kKHMpLGUuYXR0cihcImFyaWEtbGFiZWxsZWRieVwiLGkuYXR0cihcImlkXCIpKX0pLHRoaXMuX2FkZENsYXNzKHMsXCJ1aS1tZW51XCIsXCJ1aS13aWRnZXQgdWktd2lkZ2V0LWNvbnRlbnQgdWktZnJvbnRcIiksZT1oLmFkZCh0aGlzLmVsZW1lbnQpLGk9ZS5maW5kKHRoaXMub3B0aW9ucy5pdGVtcyksaS5ub3QoXCIudWktbWVudS1pdGVtXCIpLmVhY2goZnVuY3Rpb24oKXt2YXIgZT10KHRoaXMpO2EuX2lzRGl2aWRlcihlKSYmYS5fYWRkQ2xhc3MoZSxcInVpLW1lbnUtZGl2aWRlclwiLFwidWktd2lkZ2V0LWNvbnRlbnRcIil9KSxuPWkubm90KFwiLnVpLW1lbnUtaXRlbSwgLnVpLW1lbnUtZGl2aWRlclwiKSxvPW4uY2hpbGRyZW4oKS5ub3QoXCIudWktbWVudVwiKS51bmlxdWVJZCgpLmF0dHIoe3RhYkluZGV4Oi0xLHJvbGU6dGhpcy5faXRlbVJvbGUoKX0pLHRoaXMuX2FkZENsYXNzKG4sXCJ1aS1tZW51LWl0ZW1cIikuX2FkZENsYXNzKG8sXCJ1aS1tZW51LWl0ZW0td3JhcHBlclwiKSxpLmZpbHRlcihcIi51aS1zdGF0ZS1kaXNhYmxlZFwiKS5hdHRyKFwiYXJpYS1kaXNhYmxlZFwiLFwidHJ1ZVwiKSx0aGlzLmFjdGl2ZSYmIXQuY29udGFpbnModGhpcy5lbGVtZW50WzBdLHRoaXMuYWN0aXZlWzBdKSYmdGhpcy5ibHVyKCl9LF9pdGVtUm9sZTpmdW5jdGlvbigpe3JldHVybnttZW51OlwibWVudWl0ZW1cIixsaXN0Ym94Olwib3B0aW9uXCJ9W3RoaXMub3B0aW9ucy5yb2xlXX0sX3NldE9wdGlvbjpmdW5jdGlvbih0LGUpe2lmKFwiaWNvbnNcIj09PXQpe3ZhciBpPXRoaXMuZWxlbWVudC5maW5kKFwiLnVpLW1lbnUtaWNvblwiKTt0aGlzLl9yZW1vdmVDbGFzcyhpLG51bGwsdGhpcy5vcHRpb25zLmljb25zLnN1Ym1lbnUpLl9hZGRDbGFzcyhpLG51bGwsZS5zdWJtZW51KX10aGlzLl9zdXBlcih0LGUpfSxfc2V0T3B0aW9uRGlzYWJsZWQ6ZnVuY3Rpb24odCl7dGhpcy5fc3VwZXIodCksdGhpcy5lbGVtZW50LmF0dHIoXCJhcmlhLWRpc2FibGVkXCIsdCtcIlwiKSx0aGlzLl90b2dnbGVDbGFzcyhudWxsLFwidWktc3RhdGUtZGlzYWJsZWRcIiwhIXQpfSxmb2N1czpmdW5jdGlvbih0LGUpe3ZhciBpLHMsbjt0aGlzLmJsdXIodCx0JiZcImZvY3VzXCI9PT10LnR5cGUpLHRoaXMuX3Njcm9sbEludG9WaWV3KGUpLHRoaXMuYWN0aXZlPWUuZmlyc3QoKSxzPXRoaXMuYWN0aXZlLmNoaWxkcmVuKFwiLnVpLW1lbnUtaXRlbS13cmFwcGVyXCIpLHRoaXMuX2FkZENsYXNzKHMsbnVsbCxcInVpLXN0YXRlLWFjdGl2ZVwiKSx0aGlzLm9wdGlvbnMucm9sZSYmdGhpcy5lbGVtZW50LmF0dHIoXCJhcmlhLWFjdGl2ZWRlc2NlbmRhbnRcIixzLmF0dHIoXCJpZFwiKSksbj10aGlzLmFjdGl2ZS5wYXJlbnQoKS5jbG9zZXN0KFwiLnVpLW1lbnUtaXRlbVwiKS5jaGlsZHJlbihcIi51aS1tZW51LWl0ZW0td3JhcHBlclwiKSx0aGlzLl9hZGRDbGFzcyhuLG51bGwsXCJ1aS1zdGF0ZS1hY3RpdmVcIiksdCYmXCJrZXlkb3duXCI9PT10LnR5cGU/dGhpcy5fY2xvc2UoKTp0aGlzLnRpbWVyPXRoaXMuX2RlbGF5KGZ1bmN0aW9uKCl7dGhpcy5fY2xvc2UoKX0sdGhpcy5kZWxheSksaT1lLmNoaWxkcmVuKFwiLnVpLW1lbnVcIiksaS5sZW5ndGgmJnQmJi9ebW91c2UvLnRlc3QodC50eXBlKSYmdGhpcy5fc3RhcnRPcGVuaW5nKGkpLHRoaXMuYWN0aXZlTWVudT1lLnBhcmVudCgpLHRoaXMuX3RyaWdnZXIoXCJmb2N1c1wiLHQse2l0ZW06ZX0pfSxfc2Nyb2xsSW50b1ZpZXc6ZnVuY3Rpb24oZSl7dmFyIGkscyxuLG8sYSxyO3RoaXMuX2hhc1Njcm9sbCgpJiYoaT1wYXJzZUZsb2F0KHQuY3NzKHRoaXMuYWN0aXZlTWVudVswXSxcImJvcmRlclRvcFdpZHRoXCIpKXx8MCxzPXBhcnNlRmxvYXQodC5jc3ModGhpcy5hY3RpdmVNZW51WzBdLFwicGFkZGluZ1RvcFwiKSl8fDAsbj1lLm9mZnNldCgpLnRvcC10aGlzLmFjdGl2ZU1lbnUub2Zmc2V0KCkudG9wLWktcyxvPXRoaXMuYWN0aXZlTWVudS5zY3JvbGxUb3AoKSxhPXRoaXMuYWN0aXZlTWVudS5oZWlnaHQoKSxyPWUub3V0ZXJIZWlnaHQoKSwwPm4/dGhpcy5hY3RpdmVNZW51LnNjcm9sbFRvcChvK24pOm4rcj5hJiZ0aGlzLmFjdGl2ZU1lbnUuc2Nyb2xsVG9wKG8rbi1hK3IpKX0sYmx1cjpmdW5jdGlvbih0LGUpe2V8fGNsZWFyVGltZW91dCh0aGlzLnRpbWVyKSx0aGlzLmFjdGl2ZSYmKHRoaXMuX3JlbW92ZUNsYXNzKHRoaXMuYWN0aXZlLmNoaWxkcmVuKFwiLnVpLW1lbnUtaXRlbS13cmFwcGVyXCIpLG51bGwsXCJ1aS1zdGF0ZS1hY3RpdmVcIiksdGhpcy5fdHJpZ2dlcihcImJsdXJcIix0LHtpdGVtOnRoaXMuYWN0aXZlfSksdGhpcy5hY3RpdmU9bnVsbCl9LF9zdGFydE9wZW5pbmc6ZnVuY3Rpb24odCl7Y2xlYXJUaW1lb3V0KHRoaXMudGltZXIpLFwidHJ1ZVwiPT09dC5hdHRyKFwiYXJpYS1oaWRkZW5cIikmJih0aGlzLnRpbWVyPXRoaXMuX2RlbGF5KGZ1bmN0aW9uKCl7dGhpcy5fY2xvc2UoKSx0aGlzLl9vcGVuKHQpfSx0aGlzLmRlbGF5KSl9LF9vcGVuOmZ1bmN0aW9uKGUpe3ZhciBpPXQuZXh0ZW5kKHtvZjp0aGlzLmFjdGl2ZX0sdGhpcy5vcHRpb25zLnBvc2l0aW9uKTtjbGVhclRpbWVvdXQodGhpcy50aW1lciksdGhpcy5lbGVtZW50LmZpbmQoXCIudWktbWVudVwiKS5ub3QoZS5wYXJlbnRzKFwiLnVpLW1lbnVcIikpLmhpZGUoKS5hdHRyKFwiYXJpYS1oaWRkZW5cIixcInRydWVcIiksZS5zaG93KCkucmVtb3ZlQXR0cihcImFyaWEtaGlkZGVuXCIpLmF0dHIoXCJhcmlhLWV4cGFuZGVkXCIsXCJ0cnVlXCIpLnBvc2l0aW9uKGkpfSxjb2xsYXBzZUFsbDpmdW5jdGlvbihlLGkpe2NsZWFyVGltZW91dCh0aGlzLnRpbWVyKSx0aGlzLnRpbWVyPXRoaXMuX2RlbGF5KGZ1bmN0aW9uKCl7dmFyIHM9aT90aGlzLmVsZW1lbnQ6dChlJiZlLnRhcmdldCkuY2xvc2VzdCh0aGlzLmVsZW1lbnQuZmluZChcIi51aS1tZW51XCIpKTtzLmxlbmd0aHx8KHM9dGhpcy5lbGVtZW50KSx0aGlzLl9jbG9zZShzKSx0aGlzLmJsdXIoZSksdGhpcy5fcmVtb3ZlQ2xhc3Mocy5maW5kKFwiLnVpLXN0YXRlLWFjdGl2ZVwiKSxudWxsLFwidWktc3RhdGUtYWN0aXZlXCIpLHRoaXMuYWN0aXZlTWVudT1zfSx0aGlzLmRlbGF5KX0sX2Nsb3NlOmZ1bmN0aW9uKHQpe3R8fCh0PXRoaXMuYWN0aXZlP3RoaXMuYWN0aXZlLnBhcmVudCgpOnRoaXMuZWxlbWVudCksdC5maW5kKFwiLnVpLW1lbnVcIikuaGlkZSgpLmF0dHIoXCJhcmlhLWhpZGRlblwiLFwidHJ1ZVwiKS5hdHRyKFwiYXJpYS1leHBhbmRlZFwiLFwiZmFsc2VcIil9LF9jbG9zZU9uRG9jdW1lbnRDbGljazpmdW5jdGlvbihlKXtyZXR1cm4hdChlLnRhcmdldCkuY2xvc2VzdChcIi51aS1tZW51XCIpLmxlbmd0aH0sX2lzRGl2aWRlcjpmdW5jdGlvbih0KXtyZXR1cm4hL1teXFwtXFx1MjAxNFxcdTIwMTNcXHNdLy50ZXN0KHQudGV4dCgpKX0sY29sbGFwc2U6ZnVuY3Rpb24odCl7dmFyIGU9dGhpcy5hY3RpdmUmJnRoaXMuYWN0aXZlLnBhcmVudCgpLmNsb3Nlc3QoXCIudWktbWVudS1pdGVtXCIsdGhpcy5lbGVtZW50KTtlJiZlLmxlbmd0aCYmKHRoaXMuX2Nsb3NlKCksdGhpcy5mb2N1cyh0LGUpKX0sZXhwYW5kOmZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMuYWN0aXZlJiZ0aGlzLmFjdGl2ZS5jaGlsZHJlbihcIi51aS1tZW51IFwiKS5maW5kKHRoaXMub3B0aW9ucy5pdGVtcykuZmlyc3QoKTtlJiZlLmxlbmd0aCYmKHRoaXMuX29wZW4oZS5wYXJlbnQoKSksdGhpcy5fZGVsYXkoZnVuY3Rpb24oKXt0aGlzLmZvY3VzKHQsZSl9KSl9LG5leHQ6ZnVuY3Rpb24odCl7dGhpcy5fbW92ZShcIm5leHRcIixcImZpcnN0XCIsdCl9LHByZXZpb3VzOmZ1bmN0aW9uKHQpe3RoaXMuX21vdmUoXCJwcmV2XCIsXCJsYXN0XCIsdCl9LGlzRmlyc3RJdGVtOmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuYWN0aXZlJiYhdGhpcy5hY3RpdmUucHJldkFsbChcIi51aS1tZW51LWl0ZW1cIikubGVuZ3RofSxpc0xhc3RJdGVtOmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuYWN0aXZlJiYhdGhpcy5hY3RpdmUubmV4dEFsbChcIi51aS1tZW51LWl0ZW1cIikubGVuZ3RofSxfbW92ZTpmdW5jdGlvbih0LGUsaSl7dmFyIHM7dGhpcy5hY3RpdmUmJihzPVwiZmlyc3RcIj09PXR8fFwibGFzdFwiPT09dD90aGlzLmFjdGl2ZVtcImZpcnN0XCI9PT10P1wicHJldkFsbFwiOlwibmV4dEFsbFwiXShcIi51aS1tZW51LWl0ZW1cIikuZXEoLTEpOnRoaXMuYWN0aXZlW3QrXCJBbGxcIl0oXCIudWktbWVudS1pdGVtXCIpLmVxKDApKSxzJiZzLmxlbmd0aCYmdGhpcy5hY3RpdmV8fChzPXRoaXMuYWN0aXZlTWVudS5maW5kKHRoaXMub3B0aW9ucy5pdGVtcylbZV0oKSksdGhpcy5mb2N1cyhpLHMpfSxuZXh0UGFnZTpmdW5jdGlvbihlKXt2YXIgaSxzLG47cmV0dXJuIHRoaXMuYWN0aXZlPyh0aGlzLmlzTGFzdEl0ZW0oKXx8KHRoaXMuX2hhc1Njcm9sbCgpPyhzPXRoaXMuYWN0aXZlLm9mZnNldCgpLnRvcCxuPXRoaXMuZWxlbWVudC5oZWlnaHQoKSx0aGlzLmFjdGl2ZS5uZXh0QWxsKFwiLnVpLW1lbnUtaXRlbVwiKS5lYWNoKGZ1bmN0aW9uKCl7cmV0dXJuIGk9dCh0aGlzKSwwPmkub2Zmc2V0KCkudG9wLXMtbn0pLHRoaXMuZm9jdXMoZSxpKSk6dGhpcy5mb2N1cyhlLHRoaXMuYWN0aXZlTWVudS5maW5kKHRoaXMub3B0aW9ucy5pdGVtcylbdGhpcy5hY3RpdmU/XCJsYXN0XCI6XCJmaXJzdFwiXSgpKSksdm9pZCAwKToodGhpcy5uZXh0KGUpLHZvaWQgMCl9LHByZXZpb3VzUGFnZTpmdW5jdGlvbihlKXt2YXIgaSxzLG47cmV0dXJuIHRoaXMuYWN0aXZlPyh0aGlzLmlzRmlyc3RJdGVtKCl8fCh0aGlzLl9oYXNTY3JvbGwoKT8ocz10aGlzLmFjdGl2ZS5vZmZzZXQoKS50b3Asbj10aGlzLmVsZW1lbnQuaGVpZ2h0KCksdGhpcy5hY3RpdmUucHJldkFsbChcIi51aS1tZW51LWl0ZW1cIikuZWFjaChmdW5jdGlvbigpe3JldHVybiBpPXQodGhpcyksaS5vZmZzZXQoKS50b3AtcytuPjB9KSx0aGlzLmZvY3VzKGUsaSkpOnRoaXMuZm9jdXMoZSx0aGlzLmFjdGl2ZU1lbnUuZmluZCh0aGlzLm9wdGlvbnMuaXRlbXMpLmZpcnN0KCkpKSx2b2lkIDApOih0aGlzLm5leHQoZSksdm9pZCAwKX0sX2hhc1Njcm9sbDpmdW5jdGlvbigpe3JldHVybiB0aGlzLmVsZW1lbnQub3V0ZXJIZWlnaHQoKTx0aGlzLmVsZW1lbnQucHJvcChcInNjcm9sbEhlaWdodFwiKX0sc2VsZWN0OmZ1bmN0aW9uKGUpe3RoaXMuYWN0aXZlPXRoaXMuYWN0aXZlfHx0KGUudGFyZ2V0KS5jbG9zZXN0KFwiLnVpLW1lbnUtaXRlbVwiKTt2YXIgaT17aXRlbTp0aGlzLmFjdGl2ZX07dGhpcy5hY3RpdmUuaGFzKFwiLnVpLW1lbnVcIikubGVuZ3RofHx0aGlzLmNvbGxhcHNlQWxsKGUsITApLHRoaXMuX3RyaWdnZXIoXCJzZWxlY3RcIixlLGkpfSxfZmlsdGVyTWVudUl0ZW1zOmZ1bmN0aW9uKGUpe3ZhciBpPWUucmVwbGFjZSgvW1xcLVxcW1xcXXt9KCkqKz8uLFxcXFxcXF4kfCNcXHNdL2csXCJcXFxcJCZcIikscz1SZWdFeHAoXCJeXCIraSxcImlcIik7cmV0dXJuIHRoaXMuYWN0aXZlTWVudS5maW5kKHRoaXMub3B0aW9ucy5pdGVtcykuZmlsdGVyKFwiLnVpLW1lbnUtaXRlbVwiKS5maWx0ZXIoZnVuY3Rpb24oKXtyZXR1cm4gcy50ZXN0KHQudHJpbSh0KHRoaXMpLmNoaWxkcmVuKFwiLnVpLW1lbnUtaXRlbS13cmFwcGVyXCIpLnRleHQoKSkpfSl9fSksdC53aWRnZXQoXCJ1aS5hdXRvY29tcGxldGVcIix7dmVyc2lvbjpcIjEuMTIuMVwiLGRlZmF1bHRFbGVtZW50OlwiPGlucHV0PlwiLG9wdGlvbnM6e2FwcGVuZFRvOm51bGwsYXV0b0ZvY3VzOiExLGRlbGF5OjMwMCxtaW5MZW5ndGg6MSxwb3NpdGlvbjp7bXk6XCJsZWZ0IHRvcFwiLGF0OlwibGVmdCBib3R0b21cIixjb2xsaXNpb246XCJub25lXCJ9LHNvdXJjZTpudWxsLGNoYW5nZTpudWxsLGNsb3NlOm51bGwsZm9jdXM6bnVsbCxvcGVuOm51bGwscmVzcG9uc2U6bnVsbCxzZWFyY2g6bnVsbCxzZWxlY3Q6bnVsbH0scmVxdWVzdEluZGV4OjAscGVuZGluZzowLF9jcmVhdGU6ZnVuY3Rpb24oKXt2YXIgZSxpLHMsbj10aGlzLmVsZW1lbnRbMF0ubm9kZU5hbWUudG9Mb3dlckNhc2UoKSxvPVwidGV4dGFyZWFcIj09PW4sYT1cImlucHV0XCI9PT1uO1xudGhpcy5pc011bHRpTGluZT1vfHwhYSYmdGhpcy5faXNDb250ZW50RWRpdGFibGUodGhpcy5lbGVtZW50KSx0aGlzLnZhbHVlTWV0aG9kPXRoaXMuZWxlbWVudFtvfHxhP1widmFsXCI6XCJ0ZXh0XCJdLHRoaXMuaXNOZXdNZW51PSEwLHRoaXMuX2FkZENsYXNzKFwidWktYXV0b2NvbXBsZXRlLWlucHV0XCIpLHRoaXMuZWxlbWVudC5hdHRyKFwiYXV0b2NvbXBsZXRlXCIsXCJvZmZcIiksdGhpcy5fb24odGhpcy5lbGVtZW50LHtrZXlkb3duOmZ1bmN0aW9uKG4pe2lmKHRoaXMuZWxlbWVudC5wcm9wKFwicmVhZE9ubHlcIikpcmV0dXJuIGU9ITAscz0hMCxpPSEwLHZvaWQgMDtlPSExLHM9ITEsaT0hMTt2YXIgbz10LnVpLmtleUNvZGU7c3dpdGNoKG4ua2V5Q29kZSl7Y2FzZSBvLlBBR0VfVVA6ZT0hMCx0aGlzLl9tb3ZlKFwicHJldmlvdXNQYWdlXCIsbik7YnJlYWs7Y2FzZSBvLlBBR0VfRE9XTjplPSEwLHRoaXMuX21vdmUoXCJuZXh0UGFnZVwiLG4pO2JyZWFrO2Nhc2Ugby5VUDplPSEwLHRoaXMuX2tleUV2ZW50KFwicHJldmlvdXNcIixuKTticmVhaztjYXNlIG8uRE9XTjplPSEwLHRoaXMuX2tleUV2ZW50KFwibmV4dFwiLG4pO2JyZWFrO2Nhc2Ugby5FTlRFUjp0aGlzLm1lbnUuYWN0aXZlJiYoZT0hMCxuLnByZXZlbnREZWZhdWx0KCksdGhpcy5tZW51LnNlbGVjdChuKSk7YnJlYWs7Y2FzZSBvLlRBQjp0aGlzLm1lbnUuYWN0aXZlJiZ0aGlzLm1lbnUuc2VsZWN0KG4pO2JyZWFrO2Nhc2Ugby5FU0NBUEU6dGhpcy5tZW51LmVsZW1lbnQuaXMoXCI6dmlzaWJsZVwiKSYmKHRoaXMuaXNNdWx0aUxpbmV8fHRoaXMuX3ZhbHVlKHRoaXMudGVybSksdGhpcy5jbG9zZShuKSxuLnByZXZlbnREZWZhdWx0KCkpO2JyZWFrO2RlZmF1bHQ6aT0hMCx0aGlzLl9zZWFyY2hUaW1lb3V0KG4pfX0sa2V5cHJlc3M6ZnVuY3Rpb24ocyl7aWYoZSlyZXR1cm4gZT0hMSwoIXRoaXMuaXNNdWx0aUxpbmV8fHRoaXMubWVudS5lbGVtZW50LmlzKFwiOnZpc2libGVcIikpJiZzLnByZXZlbnREZWZhdWx0KCksdm9pZCAwO2lmKCFpKXt2YXIgbj10LnVpLmtleUNvZGU7c3dpdGNoKHMua2V5Q29kZSl7Y2FzZSBuLlBBR0VfVVA6dGhpcy5fbW92ZShcInByZXZpb3VzUGFnZVwiLHMpO2JyZWFrO2Nhc2Ugbi5QQUdFX0RPV046dGhpcy5fbW92ZShcIm5leHRQYWdlXCIscyk7YnJlYWs7Y2FzZSBuLlVQOnRoaXMuX2tleUV2ZW50KFwicHJldmlvdXNcIixzKTticmVhaztjYXNlIG4uRE9XTjp0aGlzLl9rZXlFdmVudChcIm5leHRcIixzKX19fSxpbnB1dDpmdW5jdGlvbih0KXtyZXR1cm4gcz8ocz0hMSx0LnByZXZlbnREZWZhdWx0KCksdm9pZCAwKToodGhpcy5fc2VhcmNoVGltZW91dCh0KSx2b2lkIDApfSxmb2N1czpmdW5jdGlvbigpe3RoaXMuc2VsZWN0ZWRJdGVtPW51bGwsdGhpcy5wcmV2aW91cz10aGlzLl92YWx1ZSgpfSxibHVyOmZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLmNhbmNlbEJsdXI/KGRlbGV0ZSB0aGlzLmNhbmNlbEJsdXIsdm9pZCAwKTooY2xlYXJUaW1lb3V0KHRoaXMuc2VhcmNoaW5nKSx0aGlzLmNsb3NlKHQpLHRoaXMuX2NoYW5nZSh0KSx2b2lkIDApfX0pLHRoaXMuX2luaXRTb3VyY2UoKSx0aGlzLm1lbnU9dChcIjx1bD5cIikuYXBwZW5kVG8odGhpcy5fYXBwZW5kVG8oKSkubWVudSh7cm9sZTpudWxsfSkuaGlkZSgpLm1lbnUoXCJpbnN0YW5jZVwiKSx0aGlzLl9hZGRDbGFzcyh0aGlzLm1lbnUuZWxlbWVudCxcInVpLWF1dG9jb21wbGV0ZVwiLFwidWktZnJvbnRcIiksdGhpcy5fb24odGhpcy5tZW51LmVsZW1lbnQse21vdXNlZG93bjpmdW5jdGlvbihlKXtlLnByZXZlbnREZWZhdWx0KCksdGhpcy5jYW5jZWxCbHVyPSEwLHRoaXMuX2RlbGF5KGZ1bmN0aW9uKCl7ZGVsZXRlIHRoaXMuY2FuY2VsQmx1cix0aGlzLmVsZW1lbnRbMF0hPT10LnVpLnNhZmVBY3RpdmVFbGVtZW50KHRoaXMuZG9jdW1lbnRbMF0pJiZ0aGlzLmVsZW1lbnQudHJpZ2dlcihcImZvY3VzXCIpfSl9LG1lbnVmb2N1czpmdW5jdGlvbihlLGkpe3ZhciBzLG47cmV0dXJuIHRoaXMuaXNOZXdNZW51JiYodGhpcy5pc05ld01lbnU9ITEsZS5vcmlnaW5hbEV2ZW50JiYvXm1vdXNlLy50ZXN0KGUub3JpZ2luYWxFdmVudC50eXBlKSk/KHRoaXMubWVudS5ibHVyKCksdGhpcy5kb2N1bWVudC5vbmUoXCJtb3VzZW1vdmVcIixmdW5jdGlvbigpe3QoZS50YXJnZXQpLnRyaWdnZXIoZS5vcmlnaW5hbEV2ZW50KX0pLHZvaWQgMCk6KG49aS5pdGVtLmRhdGEoXCJ1aS1hdXRvY29tcGxldGUtaXRlbVwiKSwhMSE9PXRoaXMuX3RyaWdnZXIoXCJmb2N1c1wiLGUse2l0ZW06bn0pJiZlLm9yaWdpbmFsRXZlbnQmJi9ea2V5Ly50ZXN0KGUub3JpZ2luYWxFdmVudC50eXBlKSYmdGhpcy5fdmFsdWUobi52YWx1ZSkscz1pLml0ZW0uYXR0cihcImFyaWEtbGFiZWxcIil8fG4udmFsdWUscyYmdC50cmltKHMpLmxlbmd0aCYmKHRoaXMubGl2ZVJlZ2lvbi5jaGlsZHJlbigpLmhpZGUoKSx0KFwiPGRpdj5cIikudGV4dChzKS5hcHBlbmRUbyh0aGlzLmxpdmVSZWdpb24pKSx2b2lkIDApfSxtZW51c2VsZWN0OmZ1bmN0aW9uKGUsaSl7dmFyIHM9aS5pdGVtLmRhdGEoXCJ1aS1hdXRvY29tcGxldGUtaXRlbVwiKSxuPXRoaXMucHJldmlvdXM7dGhpcy5lbGVtZW50WzBdIT09dC51aS5zYWZlQWN0aXZlRWxlbWVudCh0aGlzLmRvY3VtZW50WzBdKSYmKHRoaXMuZWxlbWVudC50cmlnZ2VyKFwiZm9jdXNcIiksdGhpcy5wcmV2aW91cz1uLHRoaXMuX2RlbGF5KGZ1bmN0aW9uKCl7dGhpcy5wcmV2aW91cz1uLHRoaXMuc2VsZWN0ZWRJdGVtPXN9KSksITEhPT10aGlzLl90cmlnZ2VyKFwic2VsZWN0XCIsZSx7aXRlbTpzfSkmJnRoaXMuX3ZhbHVlKHMudmFsdWUpLHRoaXMudGVybT10aGlzLl92YWx1ZSgpLHRoaXMuY2xvc2UoZSksdGhpcy5zZWxlY3RlZEl0ZW09c319KSx0aGlzLmxpdmVSZWdpb249dChcIjxkaXY+XCIse3JvbGU6XCJzdGF0dXNcIixcImFyaWEtbGl2ZVwiOlwiYXNzZXJ0aXZlXCIsXCJhcmlhLXJlbGV2YW50XCI6XCJhZGRpdGlvbnNcIn0pLmFwcGVuZFRvKHRoaXMuZG9jdW1lbnRbMF0uYm9keSksdGhpcy5fYWRkQ2xhc3ModGhpcy5saXZlUmVnaW9uLG51bGwsXCJ1aS1oZWxwZXItaGlkZGVuLWFjY2Vzc2libGVcIiksdGhpcy5fb24odGhpcy53aW5kb3cse2JlZm9yZXVubG9hZDpmdW5jdGlvbigpe3RoaXMuZWxlbWVudC5yZW1vdmVBdHRyKFwiYXV0b2NvbXBsZXRlXCIpfX0pfSxfZGVzdHJveTpmdW5jdGlvbigpe2NsZWFyVGltZW91dCh0aGlzLnNlYXJjaGluZyksdGhpcy5lbGVtZW50LnJlbW92ZUF0dHIoXCJhdXRvY29tcGxldGVcIiksdGhpcy5tZW51LmVsZW1lbnQucmVtb3ZlKCksdGhpcy5saXZlUmVnaW9uLnJlbW92ZSgpfSxfc2V0T3B0aW9uOmZ1bmN0aW9uKHQsZSl7dGhpcy5fc3VwZXIodCxlKSxcInNvdXJjZVwiPT09dCYmdGhpcy5faW5pdFNvdXJjZSgpLFwiYXBwZW5kVG9cIj09PXQmJnRoaXMubWVudS5lbGVtZW50LmFwcGVuZFRvKHRoaXMuX2FwcGVuZFRvKCkpLFwiZGlzYWJsZWRcIj09PXQmJmUmJnRoaXMueGhyJiZ0aGlzLnhoci5hYm9ydCgpfSxfaXNFdmVudFRhcmdldEluV2lkZ2V0OmZ1bmN0aW9uKGUpe3ZhciBpPXRoaXMubWVudS5lbGVtZW50WzBdO3JldHVybiBlLnRhcmdldD09PXRoaXMuZWxlbWVudFswXXx8ZS50YXJnZXQ9PT1pfHx0LmNvbnRhaW5zKGksZS50YXJnZXQpfSxfY2xvc2VPbkNsaWNrT3V0c2lkZTpmdW5jdGlvbih0KXt0aGlzLl9pc0V2ZW50VGFyZ2V0SW5XaWRnZXQodCl8fHRoaXMuY2xvc2UoKX0sX2FwcGVuZFRvOmZ1bmN0aW9uKCl7dmFyIGU9dGhpcy5vcHRpb25zLmFwcGVuZFRvO3JldHVybiBlJiYoZT1lLmpxdWVyeXx8ZS5ub2RlVHlwZT90KGUpOnRoaXMuZG9jdW1lbnQuZmluZChlKS5lcSgwKSksZSYmZVswXXx8KGU9dGhpcy5lbGVtZW50LmNsb3Nlc3QoXCIudWktZnJvbnQsIGRpYWxvZ1wiKSksZS5sZW5ndGh8fChlPXRoaXMuZG9jdW1lbnRbMF0uYm9keSksZX0sX2luaXRTb3VyY2U6ZnVuY3Rpb24oKXt2YXIgZSxpLHM9dGhpczt0LmlzQXJyYXkodGhpcy5vcHRpb25zLnNvdXJjZSk/KGU9dGhpcy5vcHRpb25zLnNvdXJjZSx0aGlzLnNvdXJjZT1mdW5jdGlvbihpLHMpe3ModC51aS5hdXRvY29tcGxldGUuZmlsdGVyKGUsaS50ZXJtKSl9KTpcInN0cmluZ1wiPT10eXBlb2YgdGhpcy5vcHRpb25zLnNvdXJjZT8oaT10aGlzLm9wdGlvbnMuc291cmNlLHRoaXMuc291cmNlPWZ1bmN0aW9uKGUsbil7cy54aHImJnMueGhyLmFib3J0KCkscy54aHI9dC5hamF4KHt1cmw6aSxkYXRhOmUsZGF0YVR5cGU6XCJqc29uXCIsc3VjY2VzczpmdW5jdGlvbih0KXtuKHQpfSxlcnJvcjpmdW5jdGlvbigpe24oW10pfX0pfSk6dGhpcy5zb3VyY2U9dGhpcy5vcHRpb25zLnNvdXJjZX0sX3NlYXJjaFRpbWVvdXQ6ZnVuY3Rpb24odCl7Y2xlYXJUaW1lb3V0KHRoaXMuc2VhcmNoaW5nKSx0aGlzLnNlYXJjaGluZz10aGlzLl9kZWxheShmdW5jdGlvbigpe3ZhciBlPXRoaXMudGVybT09PXRoaXMuX3ZhbHVlKCksaT10aGlzLm1lbnUuZWxlbWVudC5pcyhcIjp2aXNpYmxlXCIpLHM9dC5hbHRLZXl8fHQuY3RybEtleXx8dC5tZXRhS2V5fHx0LnNoaWZ0S2V5OyghZXx8ZSYmIWkmJiFzKSYmKHRoaXMuc2VsZWN0ZWRJdGVtPW51bGwsdGhpcy5zZWFyY2gobnVsbCx0KSl9LHRoaXMub3B0aW9ucy5kZWxheSl9LHNlYXJjaDpmdW5jdGlvbih0LGUpe3JldHVybiB0PW51bGwhPXQ/dDp0aGlzLl92YWx1ZSgpLHRoaXMudGVybT10aGlzLl92YWx1ZSgpLHQubGVuZ3RoPHRoaXMub3B0aW9ucy5taW5MZW5ndGg/dGhpcy5jbG9zZShlKTp0aGlzLl90cmlnZ2VyKFwic2VhcmNoXCIsZSkhPT0hMT90aGlzLl9zZWFyY2godCk6dm9pZCAwfSxfc2VhcmNoOmZ1bmN0aW9uKHQpe3RoaXMucGVuZGluZysrLHRoaXMuX2FkZENsYXNzKFwidWktYXV0b2NvbXBsZXRlLWxvYWRpbmdcIiksdGhpcy5jYW5jZWxTZWFyY2g9ITEsdGhpcy5zb3VyY2Uoe3Rlcm06dH0sdGhpcy5fcmVzcG9uc2UoKSl9LF9yZXNwb25zZTpmdW5jdGlvbigpe3ZhciBlPSsrdGhpcy5yZXF1ZXN0SW5kZXg7cmV0dXJuIHQucHJveHkoZnVuY3Rpb24odCl7ZT09PXRoaXMucmVxdWVzdEluZGV4JiZ0aGlzLl9fcmVzcG9uc2UodCksdGhpcy5wZW5kaW5nLS0sdGhpcy5wZW5kaW5nfHx0aGlzLl9yZW1vdmVDbGFzcyhcInVpLWF1dG9jb21wbGV0ZS1sb2FkaW5nXCIpfSx0aGlzKX0sX19yZXNwb25zZTpmdW5jdGlvbih0KXt0JiYodD10aGlzLl9ub3JtYWxpemUodCkpLHRoaXMuX3RyaWdnZXIoXCJyZXNwb25zZVwiLG51bGwse2NvbnRlbnQ6dH0pLCF0aGlzLm9wdGlvbnMuZGlzYWJsZWQmJnQmJnQubGVuZ3RoJiYhdGhpcy5jYW5jZWxTZWFyY2g/KHRoaXMuX3N1Z2dlc3QodCksdGhpcy5fdHJpZ2dlcihcIm9wZW5cIikpOnRoaXMuX2Nsb3NlKCl9LGNsb3NlOmZ1bmN0aW9uKHQpe3RoaXMuY2FuY2VsU2VhcmNoPSEwLHRoaXMuX2Nsb3NlKHQpfSxfY2xvc2U6ZnVuY3Rpb24odCl7dGhpcy5fb2ZmKHRoaXMuZG9jdW1lbnQsXCJtb3VzZWRvd25cIiksdGhpcy5tZW51LmVsZW1lbnQuaXMoXCI6dmlzaWJsZVwiKSYmKHRoaXMubWVudS5lbGVtZW50LmhpZGUoKSx0aGlzLm1lbnUuYmx1cigpLHRoaXMuaXNOZXdNZW51PSEwLHRoaXMuX3RyaWdnZXIoXCJjbG9zZVwiLHQpKX0sX2NoYW5nZTpmdW5jdGlvbih0KXt0aGlzLnByZXZpb3VzIT09dGhpcy5fdmFsdWUoKSYmdGhpcy5fdHJpZ2dlcihcImNoYW5nZVwiLHQse2l0ZW06dGhpcy5zZWxlY3RlZEl0ZW19KX0sX25vcm1hbGl6ZTpmdW5jdGlvbihlKXtyZXR1cm4gZS5sZW5ndGgmJmVbMF0ubGFiZWwmJmVbMF0udmFsdWU/ZTp0Lm1hcChlLGZ1bmN0aW9uKGUpe3JldHVyblwic3RyaW5nXCI9PXR5cGVvZiBlP3tsYWJlbDplLHZhbHVlOmV9OnQuZXh0ZW5kKHt9LGUse2xhYmVsOmUubGFiZWx8fGUudmFsdWUsdmFsdWU6ZS52YWx1ZXx8ZS5sYWJlbH0pfSl9LF9zdWdnZXN0OmZ1bmN0aW9uKGUpe3ZhciBpPXRoaXMubWVudS5lbGVtZW50LmVtcHR5KCk7dGhpcy5fcmVuZGVyTWVudShpLGUpLHRoaXMuaXNOZXdNZW51PSEwLHRoaXMubWVudS5yZWZyZXNoKCksaS5zaG93KCksdGhpcy5fcmVzaXplTWVudSgpLGkucG9zaXRpb24odC5leHRlbmQoe29mOnRoaXMuZWxlbWVudH0sdGhpcy5vcHRpb25zLnBvc2l0aW9uKSksdGhpcy5vcHRpb25zLmF1dG9Gb2N1cyYmdGhpcy5tZW51Lm5leHQoKSx0aGlzLl9vbih0aGlzLmRvY3VtZW50LHttb3VzZWRvd246XCJfY2xvc2VPbkNsaWNrT3V0c2lkZVwifSl9LF9yZXNpemVNZW51OmZ1bmN0aW9uKCl7dmFyIHQ9dGhpcy5tZW51LmVsZW1lbnQ7dC5vdXRlcldpZHRoKE1hdGgubWF4KHQud2lkdGgoXCJcIikub3V0ZXJXaWR0aCgpKzEsdGhpcy5lbGVtZW50Lm91dGVyV2lkdGgoKSkpfSxfcmVuZGVyTWVudTpmdW5jdGlvbihlLGkpe3ZhciBzPXRoaXM7dC5lYWNoKGksZnVuY3Rpb24odCxpKXtzLl9yZW5kZXJJdGVtRGF0YShlLGkpfSl9LF9yZW5kZXJJdGVtRGF0YTpmdW5jdGlvbih0LGUpe3JldHVybiB0aGlzLl9yZW5kZXJJdGVtKHQsZSkuZGF0YShcInVpLWF1dG9jb21wbGV0ZS1pdGVtXCIsZSl9LF9yZW5kZXJJdGVtOmZ1bmN0aW9uKGUsaSl7cmV0dXJuIHQoXCI8bGk+XCIpLmFwcGVuZCh0KFwiPGRpdj5cIikudGV4dChpLmxhYmVsKSkuYXBwZW5kVG8oZSl9LF9tb3ZlOmZ1bmN0aW9uKHQsZSl7cmV0dXJuIHRoaXMubWVudS5lbGVtZW50LmlzKFwiOnZpc2libGVcIik/dGhpcy5tZW51LmlzRmlyc3RJdGVtKCkmJi9ecHJldmlvdXMvLnRlc3QodCl8fHRoaXMubWVudS5pc0xhc3RJdGVtKCkmJi9ebmV4dC8udGVzdCh0KT8odGhpcy5pc011bHRpTGluZXx8dGhpcy5fdmFsdWUodGhpcy50ZXJtKSx0aGlzLm1lbnUuYmx1cigpLHZvaWQgMCk6KHRoaXMubWVudVt0XShlKSx2b2lkIDApOih0aGlzLnNlYXJjaChudWxsLGUpLHZvaWQgMCl9LHdpZGdldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLm1lbnUuZWxlbWVudH0sX3ZhbHVlOmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMudmFsdWVNZXRob2QuYXBwbHkodGhpcy5lbGVtZW50LGFyZ3VtZW50cyl9LF9rZXlFdmVudDpmdW5jdGlvbih0LGUpeyghdGhpcy5pc011bHRpTGluZXx8dGhpcy5tZW51LmVsZW1lbnQuaXMoXCI6dmlzaWJsZVwiKSkmJih0aGlzLl9tb3ZlKHQsZSksZS5wcmV2ZW50RGVmYXVsdCgpKX0sX2lzQ29udGVudEVkaXRhYmxlOmZ1bmN0aW9uKHQpe2lmKCF0Lmxlbmd0aClyZXR1cm4hMTt2YXIgZT10LnByb3AoXCJjb250ZW50RWRpdGFibGVcIik7cmV0dXJuXCJpbmhlcml0XCI9PT1lP3RoaXMuX2lzQ29udGVudEVkaXRhYmxlKHQucGFyZW50KCkpOlwidHJ1ZVwiPT09ZX19KSx0LmV4dGVuZCh0LnVpLmF1dG9jb21wbGV0ZSx7ZXNjYXBlUmVnZXg6ZnVuY3Rpb24odCl7cmV0dXJuIHQucmVwbGFjZSgvW1xcLVxcW1xcXXt9KCkqKz8uLFxcXFxcXF4kfCNcXHNdL2csXCJcXFxcJCZcIil9LGZpbHRlcjpmdW5jdGlvbihlLGkpe3ZhciBzPVJlZ0V4cCh0LnVpLmF1dG9jb21wbGV0ZS5lc2NhcGVSZWdleChpKSxcImlcIik7cmV0dXJuIHQuZ3JlcChlLGZ1bmN0aW9uKHQpe3JldHVybiBzLnRlc3QodC5sYWJlbHx8dC52YWx1ZXx8dCl9KX19KSx0LndpZGdldChcInVpLmF1dG9jb21wbGV0ZVwiLHQudWkuYXV0b2NvbXBsZXRlLHtvcHRpb25zOnttZXNzYWdlczp7bm9SZXN1bHRzOlwiTm8gc2VhcmNoIHJlc3VsdHMuXCIscmVzdWx0czpmdW5jdGlvbih0KXtyZXR1cm4gdCsodD4xP1wiIHJlc3VsdHMgYXJlXCI6XCIgcmVzdWx0IGlzXCIpK1wiIGF2YWlsYWJsZSwgdXNlIHVwIGFuZCBkb3duIGFycm93IGtleXMgdG8gbmF2aWdhdGUuXCJ9fX0sX19yZXNwb25zZTpmdW5jdGlvbihlKXt2YXIgaTt0aGlzLl9zdXBlckFwcGx5KGFyZ3VtZW50cyksdGhpcy5vcHRpb25zLmRpc2FibGVkfHx0aGlzLmNhbmNlbFNlYXJjaHx8KGk9ZSYmZS5sZW5ndGg/dGhpcy5vcHRpb25zLm1lc3NhZ2VzLnJlc3VsdHMoZS5sZW5ndGgpOnRoaXMub3B0aW9ucy5tZXNzYWdlcy5ub1Jlc3VsdHMsdGhpcy5saXZlUmVnaW9uLmNoaWxkcmVuKCkuaGlkZSgpLHQoXCI8ZGl2PlwiKS50ZXh0KGkpLmFwcGVuZFRvKHRoaXMubGl2ZVJlZ2lvbikpfX0pLHQudWkuYXV0b2NvbXBsZXRlO3ZhciBnPS91aS1jb3JuZXItKFthLXpdKXsyLDZ9L2c7dC53aWRnZXQoXCJ1aS5jb250cm9sZ3JvdXBcIix7dmVyc2lvbjpcIjEuMTIuMVwiLGRlZmF1bHRFbGVtZW50OlwiPGRpdj5cIixvcHRpb25zOntkaXJlY3Rpb246XCJob3Jpem9udGFsXCIsZGlzYWJsZWQ6bnVsbCxvbmx5VmlzaWJsZTohMCxpdGVtczp7YnV0dG9uOlwiaW5wdXRbdHlwZT1idXR0b25dLCBpbnB1dFt0eXBlPXN1Ym1pdF0sIGlucHV0W3R5cGU9cmVzZXRdLCBidXR0b24sIGFcIixjb250cm9sZ3JvdXBMYWJlbDpcIi51aS1jb250cm9sZ3JvdXAtbGFiZWxcIixjaGVja2JveHJhZGlvOlwiaW5wdXRbdHlwZT0nY2hlY2tib3gnXSwgaW5wdXRbdHlwZT0ncmFkaW8nXVwiLHNlbGVjdG1lbnU6XCJzZWxlY3RcIixzcGlubmVyOlwiLnVpLXNwaW5uZXItaW5wdXRcIn19LF9jcmVhdGU6ZnVuY3Rpb24oKXt0aGlzLl9lbmhhbmNlKCl9LF9lbmhhbmNlOmZ1bmN0aW9uKCl7dGhpcy5lbGVtZW50LmF0dHIoXCJyb2xlXCIsXCJ0b29sYmFyXCIpLHRoaXMucmVmcmVzaCgpfSxfZGVzdHJveTpmdW5jdGlvbigpe3RoaXMuX2NhbGxDaGlsZE1ldGhvZChcImRlc3Ryb3lcIiksdGhpcy5jaGlsZFdpZGdldHMucmVtb3ZlRGF0YShcInVpLWNvbnRyb2xncm91cC1kYXRhXCIpLHRoaXMuZWxlbWVudC5yZW1vdmVBdHRyKFwicm9sZVwiKSx0aGlzLm9wdGlvbnMuaXRlbXMuY29udHJvbGdyb3VwTGFiZWwmJnRoaXMuZWxlbWVudC5maW5kKHRoaXMub3B0aW9ucy5pdGVtcy5jb250cm9sZ3JvdXBMYWJlbCkuZmluZChcIi51aS1jb250cm9sZ3JvdXAtbGFiZWwtY29udGVudHNcIikuY29udGVudHMoKS51bndyYXAoKX0sX2luaXRXaWRnZXRzOmZ1bmN0aW9uKCl7dmFyIGU9dGhpcyxpPVtdO3QuZWFjaCh0aGlzLm9wdGlvbnMuaXRlbXMsZnVuY3Rpb24ocyxuKXt2YXIgbyxhPXt9O3JldHVybiBuP1wiY29udHJvbGdyb3VwTGFiZWxcIj09PXM/KG89ZS5lbGVtZW50LmZpbmQobiksby5lYWNoKGZ1bmN0aW9uKCl7dmFyIGU9dCh0aGlzKTtlLmNoaWxkcmVuKFwiLnVpLWNvbnRyb2xncm91cC1sYWJlbC1jb250ZW50c1wiKS5sZW5ndGh8fGUuY29udGVudHMoKS53cmFwQWxsKFwiPHNwYW4gY2xhc3M9J3VpLWNvbnRyb2xncm91cC1sYWJlbC1jb250ZW50cyc+PC9zcGFuPlwiKX0pLGUuX2FkZENsYXNzKG8sbnVsbCxcInVpLXdpZGdldCB1aS13aWRnZXQtY29udGVudCB1aS1zdGF0ZS1kZWZhdWx0XCIpLGk9aS5jb25jYXQoby5nZXQoKSksdm9pZCAwKToodC5mbltzXSYmKGE9ZVtcIl9cIitzK1wiT3B0aW9uc1wiXT9lW1wiX1wiK3MrXCJPcHRpb25zXCJdKFwibWlkZGxlXCIpOntjbGFzc2VzOnt9fSxlLmVsZW1lbnQuZmluZChuKS5lYWNoKGZ1bmN0aW9uKCl7dmFyIG49dCh0aGlzKSxvPW5bc10oXCJpbnN0YW5jZVwiKSxyPXQud2lkZ2V0LmV4dGVuZCh7fSxhKTtpZihcImJ1dHRvblwiIT09c3x8IW4ucGFyZW50KFwiLnVpLXNwaW5uZXJcIikubGVuZ3RoKXtvfHwobz1uW3NdKClbc10oXCJpbnN0YW5jZVwiKSksbyYmKHIuY2xhc3Nlcz1lLl9yZXNvbHZlQ2xhc3Nlc1ZhbHVlcyhyLmNsYXNzZXMsbykpLG5bc10ocik7dmFyIGg9bltzXShcIndpZGdldFwiKTt0LmRhdGEoaFswXSxcInVpLWNvbnRyb2xncm91cC1kYXRhXCIsbz9vOm5bc10oXCJpbnN0YW5jZVwiKSksaS5wdXNoKGhbMF0pfX0pKSx2b2lkIDApOnZvaWQgMH0pLHRoaXMuY2hpbGRXaWRnZXRzPXQodC51bmlxdWUoaSkpLHRoaXMuX2FkZENsYXNzKHRoaXMuY2hpbGRXaWRnZXRzLFwidWktY29udHJvbGdyb3VwLWl0ZW1cIil9LF9jYWxsQ2hpbGRNZXRob2Q6ZnVuY3Rpb24oZSl7dGhpcy5jaGlsZFdpZGdldHMuZWFjaChmdW5jdGlvbigpe3ZhciBpPXQodGhpcykscz1pLmRhdGEoXCJ1aS1jb250cm9sZ3JvdXAtZGF0YVwiKTtzJiZzW2VdJiZzW2VdKCl9KX0sX3VwZGF0ZUNvcm5lckNsYXNzOmZ1bmN0aW9uKHQsZSl7dmFyIGk9XCJ1aS1jb3JuZXItdG9wIHVpLWNvcm5lci1ib3R0b20gdWktY29ybmVyLWxlZnQgdWktY29ybmVyLXJpZ2h0IHVpLWNvcm5lci1hbGxcIixzPXRoaXMuX2J1aWxkU2ltcGxlT3B0aW9ucyhlLFwibGFiZWxcIikuY2xhc3Nlcy5sYWJlbDt0aGlzLl9yZW1vdmVDbGFzcyh0LG51bGwsaSksdGhpcy5fYWRkQ2xhc3ModCxudWxsLHMpfSxfYnVpbGRTaW1wbGVPcHRpb25zOmZ1bmN0aW9uKHQsZSl7dmFyIGk9XCJ2ZXJ0aWNhbFwiPT09dGhpcy5vcHRpb25zLmRpcmVjdGlvbixzPXtjbGFzc2VzOnt9fTtyZXR1cm4gcy5jbGFzc2VzW2VdPXttaWRkbGU6XCJcIixmaXJzdDpcInVpLWNvcm5lci1cIisoaT9cInRvcFwiOlwibGVmdFwiKSxsYXN0OlwidWktY29ybmVyLVwiKyhpP1wiYm90dG9tXCI6XCJyaWdodFwiKSxvbmx5OlwidWktY29ybmVyLWFsbFwifVt0XSxzfSxfc3Bpbm5lck9wdGlvbnM6ZnVuY3Rpb24odCl7dmFyIGU9dGhpcy5fYnVpbGRTaW1wbGVPcHRpb25zKHQsXCJ1aS1zcGlubmVyXCIpO3JldHVybiBlLmNsYXNzZXNbXCJ1aS1zcGlubmVyLXVwXCJdPVwiXCIsZS5jbGFzc2VzW1widWktc3Bpbm5lci1kb3duXCJdPVwiXCIsZX0sX2J1dHRvbk9wdGlvbnM6ZnVuY3Rpb24odCl7cmV0dXJuIHRoaXMuX2J1aWxkU2ltcGxlT3B0aW9ucyh0LFwidWktYnV0dG9uXCIpfSxfY2hlY2tib3hyYWRpb09wdGlvbnM6ZnVuY3Rpb24odCl7cmV0dXJuIHRoaXMuX2J1aWxkU2ltcGxlT3B0aW9ucyh0LFwidWktY2hlY2tib3hyYWRpby1sYWJlbFwiKX0sX3NlbGVjdG1lbnVPcHRpb25zOmZ1bmN0aW9uKHQpe3ZhciBlPVwidmVydGljYWxcIj09PXRoaXMub3B0aW9ucy5kaXJlY3Rpb247cmV0dXJue3dpZHRoOmU/XCJhdXRvXCI6ITEsY2xhc3Nlczp7bWlkZGxlOntcInVpLXNlbGVjdG1lbnUtYnV0dG9uLW9wZW5cIjpcIlwiLFwidWktc2VsZWN0bWVudS1idXR0b24tY2xvc2VkXCI6XCJcIn0sZmlyc3Q6e1widWktc2VsZWN0bWVudS1idXR0b24tb3BlblwiOlwidWktY29ybmVyLVwiKyhlP1widG9wXCI6XCJ0bFwiKSxcInVpLXNlbGVjdG1lbnUtYnV0dG9uLWNsb3NlZFwiOlwidWktY29ybmVyLVwiKyhlP1widG9wXCI6XCJsZWZ0XCIpfSxsYXN0OntcInVpLXNlbGVjdG1lbnUtYnV0dG9uLW9wZW5cIjplP1wiXCI6XCJ1aS1jb3JuZXItdHJcIixcInVpLXNlbGVjdG1lbnUtYnV0dG9uLWNsb3NlZFwiOlwidWktY29ybmVyLVwiKyhlP1wiYm90dG9tXCI6XCJyaWdodFwiKX0sb25seTp7XCJ1aS1zZWxlY3RtZW51LWJ1dHRvbi1vcGVuXCI6XCJ1aS1jb3JuZXItdG9wXCIsXCJ1aS1zZWxlY3RtZW51LWJ1dHRvbi1jbG9zZWRcIjpcInVpLWNvcm5lci1hbGxcIn19W3RdfX0sX3Jlc29sdmVDbGFzc2VzVmFsdWVzOmZ1bmN0aW9uKGUsaSl7dmFyIHM9e307cmV0dXJuIHQuZWFjaChlLGZ1bmN0aW9uKG4pe3ZhciBvPWkub3B0aW9ucy5jbGFzc2VzW25dfHxcIlwiO289dC50cmltKG8ucmVwbGFjZShnLFwiXCIpKSxzW25dPShvK1wiIFwiK2Vbbl0pLnJlcGxhY2UoL1xccysvZyxcIiBcIil9KSxzfSxfc2V0T3B0aW9uOmZ1bmN0aW9uKHQsZSl7cmV0dXJuXCJkaXJlY3Rpb25cIj09PXQmJnRoaXMuX3JlbW92ZUNsYXNzKFwidWktY29udHJvbGdyb3VwLVwiK3RoaXMub3B0aW9ucy5kaXJlY3Rpb24pLHRoaXMuX3N1cGVyKHQsZSksXCJkaXNhYmxlZFwiPT09dD8odGhpcy5fY2FsbENoaWxkTWV0aG9kKGU/XCJkaXNhYmxlXCI6XCJlbmFibGVcIiksdm9pZCAwKToodGhpcy5yZWZyZXNoKCksdm9pZCAwKX0scmVmcmVzaDpmdW5jdGlvbigpe3ZhciBlLGk9dGhpczt0aGlzLl9hZGRDbGFzcyhcInVpLWNvbnRyb2xncm91cCB1aS1jb250cm9sZ3JvdXAtXCIrdGhpcy5vcHRpb25zLmRpcmVjdGlvbiksXCJob3Jpem9udGFsXCI9PT10aGlzLm9wdGlvbnMuZGlyZWN0aW9uJiZ0aGlzLl9hZGRDbGFzcyhudWxsLFwidWktaGVscGVyLWNsZWFyZml4XCIpLHRoaXMuX2luaXRXaWRnZXRzKCksZT10aGlzLmNoaWxkV2lkZ2V0cyx0aGlzLm9wdGlvbnMub25seVZpc2libGUmJihlPWUuZmlsdGVyKFwiOnZpc2libGVcIikpLGUubGVuZ3RoJiYodC5lYWNoKFtcImZpcnN0XCIsXCJsYXN0XCJdLGZ1bmN0aW9uKHQscyl7dmFyIG49ZVtzXSgpLmRhdGEoXCJ1aS1jb250cm9sZ3JvdXAtZGF0YVwiKTtpZihuJiZpW1wiX1wiK24ud2lkZ2V0TmFtZStcIk9wdGlvbnNcIl0pe3ZhciBvPWlbXCJfXCIrbi53aWRnZXROYW1lK1wiT3B0aW9uc1wiXSgxPT09ZS5sZW5ndGg/XCJvbmx5XCI6cyk7by5jbGFzc2VzPWkuX3Jlc29sdmVDbGFzc2VzVmFsdWVzKG8uY2xhc3NlcyxuKSxuLmVsZW1lbnRbbi53aWRnZXROYW1lXShvKX1lbHNlIGkuX3VwZGF0ZUNvcm5lckNsYXNzKGVbc10oKSxzKX0pLHRoaXMuX2NhbGxDaGlsZE1ldGhvZChcInJlZnJlc2hcIikpfX0pLHQud2lkZ2V0KFwidWkuY2hlY2tib3hyYWRpb1wiLFt0LnVpLmZvcm1SZXNldE1peGluLHt2ZXJzaW9uOlwiMS4xMi4xXCIsb3B0aW9uczp7ZGlzYWJsZWQ6bnVsbCxsYWJlbDpudWxsLGljb246ITAsY2xhc3Nlczp7XCJ1aS1jaGVja2JveHJhZGlvLWxhYmVsXCI6XCJ1aS1jb3JuZXItYWxsXCIsXCJ1aS1jaGVja2JveHJhZGlvLWljb25cIjpcInVpLWNvcm5lci1hbGxcIn19LF9nZXRDcmVhdGVPcHRpb25zOmZ1bmN0aW9uKCl7dmFyIGUsaSxzPXRoaXMsbj10aGlzLl9zdXBlcigpfHx7fTtyZXR1cm4gdGhpcy5fcmVhZFR5cGUoKSxpPXRoaXMuZWxlbWVudC5sYWJlbHMoKSx0aGlzLmxhYmVsPXQoaVtpLmxlbmd0aC0xXSksdGhpcy5sYWJlbC5sZW5ndGh8fHQuZXJyb3IoXCJObyBsYWJlbCBmb3VuZCBmb3IgY2hlY2tib3hyYWRpbyB3aWRnZXRcIiksdGhpcy5vcmlnaW5hbExhYmVsPVwiXCIsdGhpcy5sYWJlbC5jb250ZW50cygpLm5vdCh0aGlzLmVsZW1lbnRbMF0pLmVhY2goZnVuY3Rpb24oKXtzLm9yaWdpbmFsTGFiZWwrPTM9PT10aGlzLm5vZGVUeXBlP3QodGhpcykudGV4dCgpOnRoaXMub3V0ZXJIVE1MfSksdGhpcy5vcmlnaW5hbExhYmVsJiYobi5sYWJlbD10aGlzLm9yaWdpbmFsTGFiZWwpLGU9dGhpcy5lbGVtZW50WzBdLmRpc2FibGVkLG51bGwhPWUmJihuLmRpc2FibGVkPWUpLG59LF9jcmVhdGU6ZnVuY3Rpb24oKXt2YXIgdD10aGlzLmVsZW1lbnRbMF0uY2hlY2tlZDt0aGlzLl9iaW5kRm9ybVJlc2V0SGFuZGxlcigpLG51bGw9PXRoaXMub3B0aW9ucy5kaXNhYmxlZCYmKHRoaXMub3B0aW9ucy5kaXNhYmxlZD10aGlzLmVsZW1lbnRbMF0uZGlzYWJsZWQpLHRoaXMuX3NldE9wdGlvbihcImRpc2FibGVkXCIsdGhpcy5vcHRpb25zLmRpc2FibGVkKSx0aGlzLl9hZGRDbGFzcyhcInVpLWNoZWNrYm94cmFkaW9cIixcInVpLWhlbHBlci1oaWRkZW4tYWNjZXNzaWJsZVwiKSx0aGlzLl9hZGRDbGFzcyh0aGlzLmxhYmVsLFwidWktY2hlY2tib3hyYWRpby1sYWJlbFwiLFwidWktYnV0dG9uIHVpLXdpZGdldFwiKSxcInJhZGlvXCI9PT10aGlzLnR5cGUmJnRoaXMuX2FkZENsYXNzKHRoaXMubGFiZWwsXCJ1aS1jaGVja2JveHJhZGlvLXJhZGlvLWxhYmVsXCIpLHRoaXMub3B0aW9ucy5sYWJlbCYmdGhpcy5vcHRpb25zLmxhYmVsIT09dGhpcy5vcmlnaW5hbExhYmVsP3RoaXMuX3VwZGF0ZUxhYmVsKCk6dGhpcy5vcmlnaW5hbExhYmVsJiYodGhpcy5vcHRpb25zLmxhYmVsPXRoaXMub3JpZ2luYWxMYWJlbCksdGhpcy5fZW5oYW5jZSgpLHQmJih0aGlzLl9hZGRDbGFzcyh0aGlzLmxhYmVsLFwidWktY2hlY2tib3hyYWRpby1jaGVja2VkXCIsXCJ1aS1zdGF0ZS1hY3RpdmVcIiksdGhpcy5pY29uJiZ0aGlzLl9hZGRDbGFzcyh0aGlzLmljb24sbnVsbCxcInVpLXN0YXRlLWhvdmVyXCIpKSx0aGlzLl9vbih7Y2hhbmdlOlwiX3RvZ2dsZUNsYXNzZXNcIixmb2N1czpmdW5jdGlvbigpe3RoaXMuX2FkZENsYXNzKHRoaXMubGFiZWwsbnVsbCxcInVpLXN0YXRlLWZvY3VzIHVpLXZpc3VhbC1mb2N1c1wiKX0sYmx1cjpmdW5jdGlvbigpe3RoaXMuX3JlbW92ZUNsYXNzKHRoaXMubGFiZWwsbnVsbCxcInVpLXN0YXRlLWZvY3VzIHVpLXZpc3VhbC1mb2N1c1wiKX19KX0sX3JlYWRUeXBlOmZ1bmN0aW9uKCl7dmFyIGU9dGhpcy5lbGVtZW50WzBdLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCk7dGhpcy50eXBlPXRoaXMuZWxlbWVudFswXS50eXBlLFwiaW5wdXRcIj09PWUmJi9yYWRpb3xjaGVja2JveC8udGVzdCh0aGlzLnR5cGUpfHx0LmVycm9yKFwiQ2FuJ3QgY3JlYXRlIGNoZWNrYm94cmFkaW8gb24gZWxlbWVudC5ub2RlTmFtZT1cIitlK1wiIGFuZCBlbGVtZW50LnR5cGU9XCIrdGhpcy50eXBlKX0sX2VuaGFuY2U6ZnVuY3Rpb24oKXt0aGlzLl91cGRhdGVJY29uKHRoaXMuZWxlbWVudFswXS5jaGVja2VkKX0sd2lkZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMubGFiZWx9LF9nZXRSYWRpb0dyb3VwOmZ1bmN0aW9uKCl7dmFyIGUsaT10aGlzLmVsZW1lbnRbMF0ubmFtZSxzPVwiaW5wdXRbbmFtZT0nXCIrdC51aS5lc2NhcGVTZWxlY3RvcihpKStcIiddXCI7cmV0dXJuIGk/KGU9dGhpcy5mb3JtLmxlbmd0aD90KHRoaXMuZm9ybVswXS5lbGVtZW50cykuZmlsdGVyKHMpOnQocykuZmlsdGVyKGZ1bmN0aW9uKCl7cmV0dXJuIDA9PT10KHRoaXMpLmZvcm0oKS5sZW5ndGh9KSxlLm5vdCh0aGlzLmVsZW1lbnQpKTp0KFtdKX0sX3RvZ2dsZUNsYXNzZXM6ZnVuY3Rpb24oKXt2YXIgZT10aGlzLmVsZW1lbnRbMF0uY2hlY2tlZDt0aGlzLl90b2dnbGVDbGFzcyh0aGlzLmxhYmVsLFwidWktY2hlY2tib3hyYWRpby1jaGVja2VkXCIsXCJ1aS1zdGF0ZS1hY3RpdmVcIixlKSx0aGlzLm9wdGlvbnMuaWNvbiYmXCJjaGVja2JveFwiPT09dGhpcy50eXBlJiZ0aGlzLl90b2dnbGVDbGFzcyh0aGlzLmljb24sbnVsbCxcInVpLWljb24tY2hlY2sgdWktc3RhdGUtY2hlY2tlZFwiLGUpLl90b2dnbGVDbGFzcyh0aGlzLmljb24sbnVsbCxcInVpLWljb24tYmxhbmtcIiwhZSksXCJyYWRpb1wiPT09dGhpcy50eXBlJiZ0aGlzLl9nZXRSYWRpb0dyb3VwKCkuZWFjaChmdW5jdGlvbigpe3ZhciBlPXQodGhpcykuY2hlY2tib3hyYWRpbyhcImluc3RhbmNlXCIpO2UmJmUuX3JlbW92ZUNsYXNzKGUubGFiZWwsXCJ1aS1jaGVja2JveHJhZGlvLWNoZWNrZWRcIixcInVpLXN0YXRlLWFjdGl2ZVwiKX0pfSxfZGVzdHJveTpmdW5jdGlvbigpe3RoaXMuX3VuYmluZEZvcm1SZXNldEhhbmRsZXIoKSx0aGlzLmljb24mJih0aGlzLmljb24ucmVtb3ZlKCksdGhpcy5pY29uU3BhY2UucmVtb3ZlKCkpfSxfc2V0T3B0aW9uOmZ1bmN0aW9uKHQsZSl7cmV0dXJuXCJsYWJlbFwiIT09dHx8ZT8odGhpcy5fc3VwZXIodCxlKSxcImRpc2FibGVkXCI9PT10Pyh0aGlzLl90b2dnbGVDbGFzcyh0aGlzLmxhYmVsLG51bGwsXCJ1aS1zdGF0ZS1kaXNhYmxlZFwiLGUpLHRoaXMuZWxlbWVudFswXS5kaXNhYmxlZD1lLHZvaWQgMCk6KHRoaXMucmVmcmVzaCgpLHZvaWQgMCkpOnZvaWQgMH0sX3VwZGF0ZUljb246ZnVuY3Rpb24oZSl7dmFyIGk9XCJ1aS1pY29uIHVpLWljb24tYmFja2dyb3VuZCBcIjt0aGlzLm9wdGlvbnMuaWNvbj8odGhpcy5pY29ufHwodGhpcy5pY29uPXQoXCI8c3Bhbj5cIiksdGhpcy5pY29uU3BhY2U9dChcIjxzcGFuPiA8L3NwYW4+XCIpLHRoaXMuX2FkZENsYXNzKHRoaXMuaWNvblNwYWNlLFwidWktY2hlY2tib3hyYWRpby1pY29uLXNwYWNlXCIpKSxcImNoZWNrYm94XCI9PT10aGlzLnR5cGU/KGkrPWU/XCJ1aS1pY29uLWNoZWNrIHVpLXN0YXRlLWNoZWNrZWRcIjpcInVpLWljb24tYmxhbmtcIix0aGlzLl9yZW1vdmVDbGFzcyh0aGlzLmljb24sbnVsbCxlP1widWktaWNvbi1ibGFua1wiOlwidWktaWNvbi1jaGVja1wiKSk6aSs9XCJ1aS1pY29uLWJsYW5rXCIsdGhpcy5fYWRkQ2xhc3ModGhpcy5pY29uLFwidWktY2hlY2tib3hyYWRpby1pY29uXCIsaSksZXx8dGhpcy5fcmVtb3ZlQ2xhc3ModGhpcy5pY29uLG51bGwsXCJ1aS1pY29uLWNoZWNrIHVpLXN0YXRlLWNoZWNrZWRcIiksdGhpcy5pY29uLnByZXBlbmRUbyh0aGlzLmxhYmVsKS5hZnRlcih0aGlzLmljb25TcGFjZSkpOnZvaWQgMCE9PXRoaXMuaWNvbiYmKHRoaXMuaWNvbi5yZW1vdmUoKSx0aGlzLmljb25TcGFjZS5yZW1vdmUoKSxkZWxldGUgdGhpcy5pY29uKX0sX3VwZGF0ZUxhYmVsOmZ1bmN0aW9uKCl7dmFyIHQ9dGhpcy5sYWJlbC5jb250ZW50cygpLm5vdCh0aGlzLmVsZW1lbnRbMF0pO3RoaXMuaWNvbiYmKHQ9dC5ub3QodGhpcy5pY29uWzBdKSksdGhpcy5pY29uU3BhY2UmJih0PXQubm90KHRoaXMuaWNvblNwYWNlWzBdKSksdC5yZW1vdmUoKSx0aGlzLmxhYmVsLmFwcGVuZCh0aGlzLm9wdGlvbnMubGFiZWwpfSxyZWZyZXNoOmZ1bmN0aW9uKCl7dmFyIHQ9dGhpcy5lbGVtZW50WzBdLmNoZWNrZWQsZT10aGlzLmVsZW1lbnRbMF0uZGlzYWJsZWQ7dGhpcy5fdXBkYXRlSWNvbih0KSx0aGlzLl90b2dnbGVDbGFzcyh0aGlzLmxhYmVsLFwidWktY2hlY2tib3hyYWRpby1jaGVja2VkXCIsXCJ1aS1zdGF0ZS1hY3RpdmVcIix0KSxudWxsIT09dGhpcy5vcHRpb25zLmxhYmVsJiZ0aGlzLl91cGRhdGVMYWJlbCgpLGUhPT10aGlzLm9wdGlvbnMuZGlzYWJsZWQmJnRoaXMuX3NldE9wdGlvbnMoe2Rpc2FibGVkOmV9KX19XSksdC51aS5jaGVja2JveHJhZGlvLHQud2lkZ2V0KFwidWkuYnV0dG9uXCIse3ZlcnNpb246XCIxLjEyLjFcIixkZWZhdWx0RWxlbWVudDpcIjxidXR0b24+XCIsb3B0aW9uczp7Y2xhc3Nlczp7XCJ1aS1idXR0b25cIjpcInVpLWNvcm5lci1hbGxcIn0sZGlzYWJsZWQ6bnVsbCxpY29uOm51bGwsaWNvblBvc2l0aW9uOlwiYmVnaW5uaW5nXCIsbGFiZWw6bnVsbCxzaG93TGFiZWw6ITB9LF9nZXRDcmVhdGVPcHRpb25zOmZ1bmN0aW9uKCl7dmFyIHQsZT10aGlzLl9zdXBlcigpfHx7fTtyZXR1cm4gdGhpcy5pc0lucHV0PXRoaXMuZWxlbWVudC5pcyhcImlucHV0XCIpLHQ9dGhpcy5lbGVtZW50WzBdLmRpc2FibGVkLG51bGwhPXQmJihlLmRpc2FibGVkPXQpLHRoaXMub3JpZ2luYWxMYWJlbD10aGlzLmlzSW5wdXQ/dGhpcy5lbGVtZW50LnZhbCgpOnRoaXMuZWxlbWVudC5odG1sKCksdGhpcy5vcmlnaW5hbExhYmVsJiYoZS5sYWJlbD10aGlzLm9yaWdpbmFsTGFiZWwpLGV9LF9jcmVhdGU6ZnVuY3Rpb24oKXshdGhpcy5vcHRpb24uc2hvd0xhYmVsJiF0aGlzLm9wdGlvbnMuaWNvbiYmKHRoaXMub3B0aW9ucy5zaG93TGFiZWw9ITApLG51bGw9PXRoaXMub3B0aW9ucy5kaXNhYmxlZCYmKHRoaXMub3B0aW9ucy5kaXNhYmxlZD10aGlzLmVsZW1lbnRbMF0uZGlzYWJsZWR8fCExKSx0aGlzLmhhc1RpdGxlPSEhdGhpcy5lbGVtZW50LmF0dHIoXCJ0aXRsZVwiKSx0aGlzLm9wdGlvbnMubGFiZWwmJnRoaXMub3B0aW9ucy5sYWJlbCE9PXRoaXMub3JpZ2luYWxMYWJlbCYmKHRoaXMuaXNJbnB1dD90aGlzLmVsZW1lbnQudmFsKHRoaXMub3B0aW9ucy5sYWJlbCk6dGhpcy5lbGVtZW50Lmh0bWwodGhpcy5vcHRpb25zLmxhYmVsKSksdGhpcy5fYWRkQ2xhc3MoXCJ1aS1idXR0b25cIixcInVpLXdpZGdldFwiKSx0aGlzLl9zZXRPcHRpb24oXCJkaXNhYmxlZFwiLHRoaXMub3B0aW9ucy5kaXNhYmxlZCksdGhpcy5fZW5oYW5jZSgpLHRoaXMuZWxlbWVudC5pcyhcImFcIikmJnRoaXMuX29uKHtrZXl1cDpmdW5jdGlvbihlKXtlLmtleUNvZGU9PT10LnVpLmtleUNvZGUuU1BBQ0UmJihlLnByZXZlbnREZWZhdWx0KCksdGhpcy5lbGVtZW50WzBdLmNsaWNrP3RoaXMuZWxlbWVudFswXS5jbGljaygpOnRoaXMuZWxlbWVudC50cmlnZ2VyKFwiY2xpY2tcIikpfX0pfSxfZW5oYW5jZTpmdW5jdGlvbigpe3RoaXMuZWxlbWVudC5pcyhcImJ1dHRvblwiKXx8dGhpcy5lbGVtZW50LmF0dHIoXCJyb2xlXCIsXCJidXR0b25cIiksdGhpcy5vcHRpb25zLmljb24mJih0aGlzLl91cGRhdGVJY29uKFwiaWNvblwiLHRoaXMub3B0aW9ucy5pY29uKSx0aGlzLl91cGRhdGVUb29sdGlwKCkpfSxfdXBkYXRlVG9vbHRpcDpmdW5jdGlvbigpe3RoaXMudGl0bGU9dGhpcy5lbGVtZW50LmF0dHIoXCJ0aXRsZVwiKSx0aGlzLm9wdGlvbnMuc2hvd0xhYmVsfHx0aGlzLnRpdGxlfHx0aGlzLmVsZW1lbnQuYXR0cihcInRpdGxlXCIsdGhpcy5vcHRpb25zLmxhYmVsKX0sX3VwZGF0ZUljb246ZnVuY3Rpb24oZSxpKXt2YXIgcz1cImljb25Qb3NpdGlvblwiIT09ZSxuPXM/dGhpcy5vcHRpb25zLmljb25Qb3NpdGlvbjppLG89XCJ0b3BcIj09PW58fFwiYm90dG9tXCI9PT1uO3RoaXMuaWNvbj9zJiZ0aGlzLl9yZW1vdmVDbGFzcyh0aGlzLmljb24sbnVsbCx0aGlzLm9wdGlvbnMuaWNvbik6KHRoaXMuaWNvbj10KFwiPHNwYW4+XCIpLHRoaXMuX2FkZENsYXNzKHRoaXMuaWNvbixcInVpLWJ1dHRvbi1pY29uXCIsXCJ1aS1pY29uXCIpLHRoaXMub3B0aW9ucy5zaG93TGFiZWx8fHRoaXMuX2FkZENsYXNzKFwidWktYnV0dG9uLWljb24tb25seVwiKSkscyYmdGhpcy5fYWRkQ2xhc3ModGhpcy5pY29uLG51bGwsaSksdGhpcy5fYXR0YWNoSWNvbihuKSxvPyh0aGlzLl9hZGRDbGFzcyh0aGlzLmljb24sbnVsbCxcInVpLXdpZGdldC1pY29uLWJsb2NrXCIpLHRoaXMuaWNvblNwYWNlJiZ0aGlzLmljb25TcGFjZS5yZW1vdmUoKSk6KHRoaXMuaWNvblNwYWNlfHwodGhpcy5pY29uU3BhY2U9dChcIjxzcGFuPiA8L3NwYW4+XCIpLHRoaXMuX2FkZENsYXNzKHRoaXMuaWNvblNwYWNlLFwidWktYnV0dG9uLWljb24tc3BhY2VcIikpLHRoaXMuX3JlbW92ZUNsYXNzKHRoaXMuaWNvbixudWxsLFwidWktd2lnZXQtaWNvbi1ibG9ja1wiKSx0aGlzLl9hdHRhY2hJY29uU3BhY2UobikpfSxfZGVzdHJveTpmdW5jdGlvbigpe3RoaXMuZWxlbWVudC5yZW1vdmVBdHRyKFwicm9sZVwiKSx0aGlzLmljb24mJnRoaXMuaWNvbi5yZW1vdmUoKSx0aGlzLmljb25TcGFjZSYmdGhpcy5pY29uU3BhY2UucmVtb3ZlKCksdGhpcy5oYXNUaXRsZXx8dGhpcy5lbGVtZW50LnJlbW92ZUF0dHIoXCJ0aXRsZVwiKX0sX2F0dGFjaEljb25TcGFjZTpmdW5jdGlvbih0KXt0aGlzLmljb25bL14oPzplbmR8Ym90dG9tKS8udGVzdCh0KT9cImJlZm9yZVwiOlwiYWZ0ZXJcIl0odGhpcy5pY29uU3BhY2UpfSxfYXR0YWNoSWNvbjpmdW5jdGlvbih0KXt0aGlzLmVsZW1lbnRbL14oPzplbmR8Ym90dG9tKS8udGVzdCh0KT9cImFwcGVuZFwiOlwicHJlcGVuZFwiXSh0aGlzLmljb24pfSxfc2V0T3B0aW9uczpmdW5jdGlvbih0KXt2YXIgZT12b2lkIDA9PT10LnNob3dMYWJlbD90aGlzLm9wdGlvbnMuc2hvd0xhYmVsOnQuc2hvd0xhYmVsLGk9dm9pZCAwPT09dC5pY29uP3RoaXMub3B0aW9ucy5pY29uOnQuaWNvbjtlfHxpfHwodC5zaG93TGFiZWw9ITApLHRoaXMuX3N1cGVyKHQpfSxfc2V0T3B0aW9uOmZ1bmN0aW9uKHQsZSl7XCJpY29uXCI9PT10JiYoZT90aGlzLl91cGRhdGVJY29uKHQsZSk6dGhpcy5pY29uJiYodGhpcy5pY29uLnJlbW92ZSgpLHRoaXMuaWNvblNwYWNlJiZ0aGlzLmljb25TcGFjZS5yZW1vdmUoKSkpLFwiaWNvblBvc2l0aW9uXCI9PT10JiZ0aGlzLl91cGRhdGVJY29uKHQsZSksXCJzaG93TGFiZWxcIj09PXQmJih0aGlzLl90b2dnbGVDbGFzcyhcInVpLWJ1dHRvbi1pY29uLW9ubHlcIixudWxsLCFlKSx0aGlzLl91cGRhdGVUb29sdGlwKCkpLFwibGFiZWxcIj09PXQmJih0aGlzLmlzSW5wdXQ/dGhpcy5lbGVtZW50LnZhbChlKToodGhpcy5lbGVtZW50Lmh0bWwoZSksdGhpcy5pY29uJiYodGhpcy5fYXR0YWNoSWNvbih0aGlzLm9wdGlvbnMuaWNvblBvc2l0aW9uKSx0aGlzLl9hdHRhY2hJY29uU3BhY2UodGhpcy5vcHRpb25zLmljb25Qb3NpdGlvbikpKSksdGhpcy5fc3VwZXIodCxlKSxcImRpc2FibGVkXCI9PT10JiYodGhpcy5fdG9nZ2xlQ2xhc3MobnVsbCxcInVpLXN0YXRlLWRpc2FibGVkXCIsZSksdGhpcy5lbGVtZW50WzBdLmRpc2FibGVkPWUsZSYmdGhpcy5lbGVtZW50LmJsdXIoKSl9LHJlZnJlc2g6ZnVuY3Rpb24oKXt2YXIgdD10aGlzLmVsZW1lbnQuaXMoXCJpbnB1dCwgYnV0dG9uXCIpP3RoaXMuZWxlbWVudFswXS5kaXNhYmxlZDp0aGlzLmVsZW1lbnQuaGFzQ2xhc3MoXCJ1aS1idXR0b24tZGlzYWJsZWRcIik7dCE9PXRoaXMub3B0aW9ucy5kaXNhYmxlZCYmdGhpcy5fc2V0T3B0aW9ucyh7ZGlzYWJsZWQ6dH0pLHRoaXMuX3VwZGF0ZVRvb2x0aXAoKX19KSx0LnVpQmFja0NvbXBhdCE9PSExJiYodC53aWRnZXQoXCJ1aS5idXR0b25cIix0LnVpLmJ1dHRvbix7b3B0aW9uczp7dGV4dDohMCxpY29uczp7cHJpbWFyeTpudWxsLHNlY29uZGFyeTpudWxsfX0sX2NyZWF0ZTpmdW5jdGlvbigpe3RoaXMub3B0aW9ucy5zaG93TGFiZWwmJiF0aGlzLm9wdGlvbnMudGV4dCYmKHRoaXMub3B0aW9ucy5zaG93TGFiZWw9dGhpcy5vcHRpb25zLnRleHQpLCF0aGlzLm9wdGlvbnMuc2hvd0xhYmVsJiZ0aGlzLm9wdGlvbnMudGV4dCYmKHRoaXMub3B0aW9ucy50ZXh0PXRoaXMub3B0aW9ucy5zaG93TGFiZWwpLHRoaXMub3B0aW9ucy5pY29ufHwhdGhpcy5vcHRpb25zLmljb25zLnByaW1hcnkmJiF0aGlzLm9wdGlvbnMuaWNvbnMuc2Vjb25kYXJ5P3RoaXMub3B0aW9ucy5pY29uJiYodGhpcy5vcHRpb25zLmljb25zLnByaW1hcnk9dGhpcy5vcHRpb25zLmljb24pOnRoaXMub3B0aW9ucy5pY29ucy5wcmltYXJ5P3RoaXMub3B0aW9ucy5pY29uPXRoaXMub3B0aW9ucy5pY29ucy5wcmltYXJ5Oih0aGlzLm9wdGlvbnMuaWNvbj10aGlzLm9wdGlvbnMuaWNvbnMuc2Vjb25kYXJ5LHRoaXMub3B0aW9ucy5pY29uUG9zaXRpb249XCJlbmRcIiksdGhpcy5fc3VwZXIoKX0sX3NldE9wdGlvbjpmdW5jdGlvbih0LGUpe3JldHVyblwidGV4dFwiPT09dD8odGhpcy5fc3VwZXIoXCJzaG93TGFiZWxcIixlKSx2b2lkIDApOihcInNob3dMYWJlbFwiPT09dCYmKHRoaXMub3B0aW9ucy50ZXh0PWUpLFwiaWNvblwiPT09dCYmKHRoaXMub3B0aW9ucy5pY29ucy5wcmltYXJ5PWUpLFwiaWNvbnNcIj09PXQmJihlLnByaW1hcnk/KHRoaXMuX3N1cGVyKFwiaWNvblwiLGUucHJpbWFyeSksdGhpcy5fc3VwZXIoXCJpY29uUG9zaXRpb25cIixcImJlZ2lubmluZ1wiKSk6ZS5zZWNvbmRhcnkmJih0aGlzLl9zdXBlcihcImljb25cIixlLnNlY29uZGFyeSksdGhpcy5fc3VwZXIoXCJpY29uUG9zaXRpb25cIixcImVuZFwiKSkpLHRoaXMuX3N1cGVyQXBwbHkoYXJndW1lbnRzKSx2b2lkIDApfX0pLHQuZm4uYnV0dG9uPWZ1bmN0aW9uKGUpe3JldHVybiBmdW5jdGlvbigpe3JldHVybiF0aGlzLmxlbmd0aHx8dGhpcy5sZW5ndGgmJlwiSU5QVVRcIiE9PXRoaXNbMF0udGFnTmFtZXx8dGhpcy5sZW5ndGgmJlwiSU5QVVRcIj09PXRoaXNbMF0udGFnTmFtZSYmXCJjaGVja2JveFwiIT09dGhpcy5hdHRyKFwidHlwZVwiKSYmXCJyYWRpb1wiIT09dGhpcy5hdHRyKFwidHlwZVwiKT9lLmFwcGx5KHRoaXMsYXJndW1lbnRzKToodC51aS5jaGVja2JveHJhZGlvfHx0LmVycm9yKFwiQ2hlY2tib3hyYWRpbyB3aWRnZXQgbWlzc2luZ1wiKSwwPT09YXJndW1lbnRzLmxlbmd0aD90aGlzLmNoZWNrYm94cmFkaW8oe2ljb246ITF9KTp0aGlzLmNoZWNrYm94cmFkaW8uYXBwbHkodGhpcyxhcmd1bWVudHMpKX19KHQuZm4uYnV0dG9uKSx0LmZuLmJ1dHRvbnNldD1mdW5jdGlvbigpe3JldHVybiB0LnVpLmNvbnRyb2xncm91cHx8dC5lcnJvcihcIkNvbnRyb2xncm91cCB3aWRnZXQgbWlzc2luZ1wiKSxcIm9wdGlvblwiPT09YXJndW1lbnRzWzBdJiZcIml0ZW1zXCI9PT1hcmd1bWVudHNbMV0mJmFyZ3VtZW50c1syXT90aGlzLmNvbnRyb2xncm91cC5hcHBseSh0aGlzLFthcmd1bWVudHNbMF0sXCJpdGVtcy5idXR0b25cIixhcmd1bWVudHNbMl1dKTpcIm9wdGlvblwiPT09YXJndW1lbnRzWzBdJiZcIml0ZW1zXCI9PT1hcmd1bWVudHNbMV0/dGhpcy5jb250cm9sZ3JvdXAuYXBwbHkodGhpcyxbYXJndW1lbnRzWzBdLFwiaXRlbXMuYnV0dG9uXCJdKTooXCJvYmplY3RcIj09dHlwZW9mIGFyZ3VtZW50c1swXSYmYXJndW1lbnRzWzBdLml0ZW1zJiYoYXJndW1lbnRzWzBdLml0ZW1zPXtidXR0b246YXJndW1lbnRzWzBdLml0ZW1zfSksdGhpcy5jb250cm9sZ3JvdXAuYXBwbHkodGhpcyxhcmd1bWVudHMpKX0pLHQudWkuYnV0dG9uLHQuZXh0ZW5kKHQudWkse2RhdGVwaWNrZXI6e3ZlcnNpb246XCIxLjEyLjFcIn19KTt2YXIgbTt0LmV4dGVuZChzLnByb3RvdHlwZSx7bWFya2VyQ2xhc3NOYW1lOlwiaGFzRGF0ZXBpY2tlclwiLG1heFJvd3M6NCxfd2lkZ2V0RGF0ZXBpY2tlcjpmdW5jdGlvbigpe3JldHVybiB0aGlzLmRwRGl2fSxzZXREZWZhdWx0czpmdW5jdGlvbih0KXtyZXR1cm4gYSh0aGlzLl9kZWZhdWx0cyx0fHx7fSksdGhpc30sX2F0dGFjaERhdGVwaWNrZXI6ZnVuY3Rpb24oZSxpKXt2YXIgcyxuLG87cz1lLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCksbj1cImRpdlwiPT09c3x8XCJzcGFuXCI9PT1zLGUuaWR8fCh0aGlzLnV1aWQrPTEsZS5pZD1cImRwXCIrdGhpcy51dWlkKSxvPXRoaXMuX25ld0luc3QodChlKSxuKSxvLnNldHRpbmdzPXQuZXh0ZW5kKHt9LGl8fHt9KSxcImlucHV0XCI9PT1zP3RoaXMuX2Nvbm5lY3REYXRlcGlja2VyKGUsbyk6biYmdGhpcy5faW5saW5lRGF0ZXBpY2tlcihlLG8pfSxfbmV3SW5zdDpmdW5jdGlvbihlLGkpe3ZhciBzPWVbMF0uaWQucmVwbGFjZSgvKFteQS1aYS16MC05X1xcLV0pL2csXCJcXFxcXFxcXCQxXCIpO3JldHVybntpZDpzLGlucHV0OmUsc2VsZWN0ZWREYXk6MCxzZWxlY3RlZE1vbnRoOjAsc2VsZWN0ZWRZZWFyOjAsZHJhd01vbnRoOjAsZHJhd1llYXI6MCxpbmxpbmU6aSxkcERpdjppP24odChcIjxkaXYgY2xhc3M9J1wiK3RoaXMuX2lubGluZUNsYXNzK1wiIHVpLWRhdGVwaWNrZXIgdWktd2lkZ2V0IHVpLXdpZGdldC1jb250ZW50IHVpLWhlbHBlci1jbGVhcmZpeCB1aS1jb3JuZXItYWxsJz48L2Rpdj5cIikpOnRoaXMuZHBEaXZ9fSxfY29ubmVjdERhdGVwaWNrZXI6ZnVuY3Rpb24oZSxpKXt2YXIgcz10KGUpO2kuYXBwZW5kPXQoW10pLGkudHJpZ2dlcj10KFtdKSxzLmhhc0NsYXNzKHRoaXMubWFya2VyQ2xhc3NOYW1lKXx8KHRoaXMuX2F0dGFjaG1lbnRzKHMsaSkscy5hZGRDbGFzcyh0aGlzLm1hcmtlckNsYXNzTmFtZSkub24oXCJrZXlkb3duXCIsdGhpcy5fZG9LZXlEb3duKS5vbihcImtleXByZXNzXCIsdGhpcy5fZG9LZXlQcmVzcykub24oXCJrZXl1cFwiLHRoaXMuX2RvS2V5VXApLHRoaXMuX2F1dG9TaXplKGkpLHQuZGF0YShlLFwiZGF0ZXBpY2tlclwiLGkpLGkuc2V0dGluZ3MuZGlzYWJsZWQmJnRoaXMuX2Rpc2FibGVEYXRlcGlja2VyKGUpKX0sX2F0dGFjaG1lbnRzOmZ1bmN0aW9uKGUsaSl7dmFyIHMsbixvLGE9dGhpcy5fZ2V0KGksXCJhcHBlbmRUZXh0XCIpLHI9dGhpcy5fZ2V0KGksXCJpc1JUTFwiKTtpLmFwcGVuZCYmaS5hcHBlbmQucmVtb3ZlKCksYSYmKGkuYXBwZW5kPXQoXCI8c3BhbiBjbGFzcz0nXCIrdGhpcy5fYXBwZW5kQ2xhc3MrXCInPlwiK2ErXCI8L3NwYW4+XCIpLGVbcj9cImJlZm9yZVwiOlwiYWZ0ZXJcIl0oaS5hcHBlbmQpKSxlLm9mZihcImZvY3VzXCIsdGhpcy5fc2hvd0RhdGVwaWNrZXIpLGkudHJpZ2dlciYmaS50cmlnZ2VyLnJlbW92ZSgpLHM9dGhpcy5fZ2V0KGksXCJzaG93T25cIiksKFwiZm9jdXNcIj09PXN8fFwiYm90aFwiPT09cykmJmUub24oXCJmb2N1c1wiLHRoaXMuX3Nob3dEYXRlcGlja2VyKSwoXCJidXR0b25cIj09PXN8fFwiYm90aFwiPT09cykmJihuPXRoaXMuX2dldChpLFwiYnV0dG9uVGV4dFwiKSxvPXRoaXMuX2dldChpLFwiYnV0dG9uSW1hZ2VcIiksaS50cmlnZ2VyPXQodGhpcy5fZ2V0KGksXCJidXR0b25JbWFnZU9ubHlcIik/dChcIjxpbWcvPlwiKS5hZGRDbGFzcyh0aGlzLl90cmlnZ2VyQ2xhc3MpLmF0dHIoe3NyYzpvLGFsdDpuLHRpdGxlOm59KTp0KFwiPGJ1dHRvbiB0eXBlPSdidXR0b24nPjwvYnV0dG9uPlwiKS5hZGRDbGFzcyh0aGlzLl90cmlnZ2VyQ2xhc3MpLmh0bWwobz90KFwiPGltZy8+XCIpLmF0dHIoe3NyYzpvLGFsdDpuLHRpdGxlOm59KTpuKSksZVtyP1wiYmVmb3JlXCI6XCJhZnRlclwiXShpLnRyaWdnZXIpLGkudHJpZ2dlci5vbihcImNsaWNrXCIsZnVuY3Rpb24oKXtyZXR1cm4gdC5kYXRlcGlja2VyLl9kYXRlcGlja2VyU2hvd2luZyYmdC5kYXRlcGlja2VyLl9sYXN0SW5wdXQ9PT1lWzBdP3QuZGF0ZXBpY2tlci5faGlkZURhdGVwaWNrZXIoKTp0LmRhdGVwaWNrZXIuX2RhdGVwaWNrZXJTaG93aW5nJiZ0LmRhdGVwaWNrZXIuX2xhc3RJbnB1dCE9PWVbMF0/KHQuZGF0ZXBpY2tlci5faGlkZURhdGVwaWNrZXIoKSx0LmRhdGVwaWNrZXIuX3Nob3dEYXRlcGlja2VyKGVbMF0pKTp0LmRhdGVwaWNrZXIuX3Nob3dEYXRlcGlja2VyKGVbMF0pLCExfSkpfSxfYXV0b1NpemU6ZnVuY3Rpb24odCl7aWYodGhpcy5fZ2V0KHQsXCJhdXRvU2l6ZVwiKSYmIXQuaW5saW5lKXt2YXIgZSxpLHMsbixvPW5ldyBEYXRlKDIwMDksMTEsMjApLGE9dGhpcy5fZ2V0KHQsXCJkYXRlRm9ybWF0XCIpO2EubWF0Y2goL1tETV0vKSYmKGU9ZnVuY3Rpb24odCl7Zm9yKGk9MCxzPTAsbj0wO3QubGVuZ3RoPm47bisrKXRbbl0ubGVuZ3RoPmkmJihpPXRbbl0ubGVuZ3RoLHM9bik7cmV0dXJuIHN9LG8uc2V0TW9udGgoZSh0aGlzLl9nZXQodCxhLm1hdGNoKC9NTS8pP1wibW9udGhOYW1lc1wiOlwibW9udGhOYW1lc1Nob3J0XCIpKSksby5zZXREYXRlKGUodGhpcy5fZ2V0KHQsYS5tYXRjaCgvREQvKT9cImRheU5hbWVzXCI6XCJkYXlOYW1lc1Nob3J0XCIpKSsyMC1vLmdldERheSgpKSksdC5pbnB1dC5hdHRyKFwic2l6ZVwiLHRoaXMuX2Zvcm1hdERhdGUodCxvKS5sZW5ndGgpfX0sX2lubGluZURhdGVwaWNrZXI6ZnVuY3Rpb24oZSxpKXt2YXIgcz10KGUpO3MuaGFzQ2xhc3ModGhpcy5tYXJrZXJDbGFzc05hbWUpfHwocy5hZGRDbGFzcyh0aGlzLm1hcmtlckNsYXNzTmFtZSkuYXBwZW5kKGkuZHBEaXYpLHQuZGF0YShlLFwiZGF0ZXBpY2tlclwiLGkpLHRoaXMuX3NldERhdGUoaSx0aGlzLl9nZXREZWZhdWx0RGF0ZShpKSwhMCksdGhpcy5fdXBkYXRlRGF0ZXBpY2tlcihpKSx0aGlzLl91cGRhdGVBbHRlcm5hdGUoaSksaS5zZXR0aW5ncy5kaXNhYmxlZCYmdGhpcy5fZGlzYWJsZURhdGVwaWNrZXIoZSksaS5kcERpdi5jc3MoXCJkaXNwbGF5XCIsXCJibG9ja1wiKSl9LF9kaWFsb2dEYXRlcGlja2VyOmZ1bmN0aW9uKGUsaSxzLG4sbyl7dmFyIHIsaCxsLGMsdSxkPXRoaXMuX2RpYWxvZ0luc3Q7cmV0dXJuIGR8fCh0aGlzLnV1aWQrPTEscj1cImRwXCIrdGhpcy51dWlkLHRoaXMuX2RpYWxvZ0lucHV0PXQoXCI8aW5wdXQgdHlwZT0ndGV4dCcgaWQ9J1wiK3IrXCInIHN0eWxlPSdwb3NpdGlvbjogYWJzb2x1dGU7IHRvcDogLTEwMHB4OyB3aWR0aDogMHB4OycvPlwiKSx0aGlzLl9kaWFsb2dJbnB1dC5vbihcImtleWRvd25cIix0aGlzLl9kb0tleURvd24pLHQoXCJib2R5XCIpLmFwcGVuZCh0aGlzLl9kaWFsb2dJbnB1dCksZD10aGlzLl9kaWFsb2dJbnN0PXRoaXMuX25ld0luc3QodGhpcy5fZGlhbG9nSW5wdXQsITEpLGQuc2V0dGluZ3M9e30sdC5kYXRhKHRoaXMuX2RpYWxvZ0lucHV0WzBdLFwiZGF0ZXBpY2tlclwiLGQpKSxhKGQuc2V0dGluZ3Msbnx8e30pLGk9aSYmaS5jb25zdHJ1Y3Rvcj09PURhdGU/dGhpcy5fZm9ybWF0RGF0ZShkLGkpOmksdGhpcy5fZGlhbG9nSW5wdXQudmFsKGkpLHRoaXMuX3Bvcz1vP28ubGVuZ3RoP286W28ucGFnZVgsby5wYWdlWV06bnVsbCx0aGlzLl9wb3N8fChoPWRvY3VtZW50LmRvY3VtZW50RWxlbWVudC5jbGllbnRXaWR0aCxsPWRvY3VtZW50LmRvY3VtZW50RWxlbWVudC5jbGllbnRIZWlnaHQsYz1kb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuc2Nyb2xsTGVmdHx8ZG9jdW1lbnQuYm9keS5zY3JvbGxMZWZ0LHU9ZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LnNjcm9sbFRvcHx8ZG9jdW1lbnQuYm9keS5zY3JvbGxUb3AsdGhpcy5fcG9zPVtoLzItMTAwK2MsbC8yLTE1MCt1XSksdGhpcy5fZGlhbG9nSW5wdXQuY3NzKFwibGVmdFwiLHRoaXMuX3Bvc1swXSsyMCtcInB4XCIpLmNzcyhcInRvcFwiLHRoaXMuX3Bvc1sxXStcInB4XCIpLGQuc2V0dGluZ3Mub25TZWxlY3Q9cyx0aGlzLl9pbkRpYWxvZz0hMCx0aGlzLmRwRGl2LmFkZENsYXNzKHRoaXMuX2RpYWxvZ0NsYXNzKSx0aGlzLl9zaG93RGF0ZXBpY2tlcih0aGlzLl9kaWFsb2dJbnB1dFswXSksdC5ibG9ja1VJJiZ0LmJsb2NrVUkodGhpcy5kcERpdiksdC5kYXRhKHRoaXMuX2RpYWxvZ0lucHV0WzBdLFwiZGF0ZXBpY2tlclwiLGQpLHRoaXN9LF9kZXN0cm95RGF0ZXBpY2tlcjpmdW5jdGlvbihlKXt2YXIgaSxzPXQoZSksbj10LmRhdGEoZSxcImRhdGVwaWNrZXJcIik7cy5oYXNDbGFzcyh0aGlzLm1hcmtlckNsYXNzTmFtZSkmJihpPWUubm9kZU5hbWUudG9Mb3dlckNhc2UoKSx0LnJlbW92ZURhdGEoZSxcImRhdGVwaWNrZXJcIiksXCJpbnB1dFwiPT09aT8obi5hcHBlbmQucmVtb3ZlKCksbi50cmlnZ2VyLnJlbW92ZSgpLHMucmVtb3ZlQ2xhc3ModGhpcy5tYXJrZXJDbGFzc05hbWUpLm9mZihcImZvY3VzXCIsdGhpcy5fc2hvd0RhdGVwaWNrZXIpLm9mZihcImtleWRvd25cIix0aGlzLl9kb0tleURvd24pLm9mZihcImtleXByZXNzXCIsdGhpcy5fZG9LZXlQcmVzcykub2ZmKFwia2V5dXBcIix0aGlzLl9kb0tleVVwKSk6KFwiZGl2XCI9PT1pfHxcInNwYW5cIj09PWkpJiZzLnJlbW92ZUNsYXNzKHRoaXMubWFya2VyQ2xhc3NOYW1lKS5lbXB0eSgpLG09PT1uJiYobT1udWxsKSl9LF9lbmFibGVEYXRlcGlja2VyOmZ1bmN0aW9uKGUpe3ZhciBpLHMsbj10KGUpLG89dC5kYXRhKGUsXCJkYXRlcGlja2VyXCIpO24uaGFzQ2xhc3ModGhpcy5tYXJrZXJDbGFzc05hbWUpJiYoaT1lLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCksXCJpbnB1dFwiPT09aT8oZS5kaXNhYmxlZD0hMSxvLnRyaWdnZXIuZmlsdGVyKFwiYnV0dG9uXCIpLmVhY2goZnVuY3Rpb24oKXt0aGlzLmRpc2FibGVkPSExfSkuZW5kKCkuZmlsdGVyKFwiaW1nXCIpLmNzcyh7b3BhY2l0eTpcIjEuMFwiLGN1cnNvcjpcIlwifSkpOihcImRpdlwiPT09aXx8XCJzcGFuXCI9PT1pKSYmKHM9bi5jaGlsZHJlbihcIi5cIit0aGlzLl9pbmxpbmVDbGFzcykscy5jaGlsZHJlbigpLnJlbW92ZUNsYXNzKFwidWktc3RhdGUtZGlzYWJsZWRcIikscy5maW5kKFwic2VsZWN0LnVpLWRhdGVwaWNrZXItbW9udGgsIHNlbGVjdC51aS1kYXRlcGlja2VyLXllYXJcIikucHJvcChcImRpc2FibGVkXCIsITEpKSx0aGlzLl9kaXNhYmxlZElucHV0cz10Lm1hcCh0aGlzLl9kaXNhYmxlZElucHV0cyxmdW5jdGlvbih0KXtyZXR1cm4gdD09PWU/bnVsbDp0fSkpfSxfZGlzYWJsZURhdGVwaWNrZXI6ZnVuY3Rpb24oZSl7dmFyIGkscyxuPXQoZSksbz10LmRhdGEoZSxcImRhdGVwaWNrZXJcIik7bi5oYXNDbGFzcyh0aGlzLm1hcmtlckNsYXNzTmFtZSkmJihpPWUubm9kZU5hbWUudG9Mb3dlckNhc2UoKSxcImlucHV0XCI9PT1pPyhlLmRpc2FibGVkPSEwLG8udHJpZ2dlci5maWx0ZXIoXCJidXR0b25cIikuZWFjaChmdW5jdGlvbigpe3RoaXMuZGlzYWJsZWQ9ITB9KS5lbmQoKS5maWx0ZXIoXCJpbWdcIikuY3NzKHtvcGFjaXR5OlwiMC41XCIsY3Vyc29yOlwiZGVmYXVsdFwifSkpOihcImRpdlwiPT09aXx8XCJzcGFuXCI9PT1pKSYmKHM9bi5jaGlsZHJlbihcIi5cIit0aGlzLl9pbmxpbmVDbGFzcykscy5jaGlsZHJlbigpLmFkZENsYXNzKFwidWktc3RhdGUtZGlzYWJsZWRcIikscy5maW5kKFwic2VsZWN0LnVpLWRhdGVwaWNrZXItbW9udGgsIHNlbGVjdC51aS1kYXRlcGlja2VyLXllYXJcIikucHJvcChcImRpc2FibGVkXCIsITApKSx0aGlzLl9kaXNhYmxlZElucHV0cz10Lm1hcCh0aGlzLl9kaXNhYmxlZElucHV0cyxmdW5jdGlvbih0KXtyZXR1cm4gdD09PWU/bnVsbDp0fSksdGhpcy5fZGlzYWJsZWRJbnB1dHNbdGhpcy5fZGlzYWJsZWRJbnB1dHMubGVuZ3RoXT1lKX0sX2lzRGlzYWJsZWREYXRlcGlja2VyOmZ1bmN0aW9uKHQpe2lmKCF0KXJldHVybiExO2Zvcih2YXIgZT0wO3RoaXMuX2Rpc2FibGVkSW5wdXRzLmxlbmd0aD5lO2UrKylpZih0aGlzLl9kaXNhYmxlZElucHV0c1tlXT09PXQpcmV0dXJuITA7cmV0dXJuITF9LF9nZXRJbnN0OmZ1bmN0aW9uKGUpe3RyeXtyZXR1cm4gdC5kYXRhKGUsXCJkYXRlcGlja2VyXCIpfWNhdGNoKGkpe3Rocm93XCJNaXNzaW5nIGluc3RhbmNlIGRhdGEgZm9yIHRoaXMgZGF0ZXBpY2tlclwifX0sX29wdGlvbkRhdGVwaWNrZXI6ZnVuY3Rpb24oZSxpLHMpe3ZhciBuLG8scixoLGw9dGhpcy5fZ2V0SW5zdChlKTtyZXR1cm4gMj09PWFyZ3VtZW50cy5sZW5ndGgmJlwic3RyaW5nXCI9PXR5cGVvZiBpP1wiZGVmYXVsdHNcIj09PWk/dC5leHRlbmQoe30sdC5kYXRlcGlja2VyLl9kZWZhdWx0cyk6bD9cImFsbFwiPT09aT90LmV4dGVuZCh7fSxsLnNldHRpbmdzKTp0aGlzLl9nZXQobCxpKTpudWxsOihuPWl8fHt9LFwic3RyaW5nXCI9PXR5cGVvZiBpJiYobj17fSxuW2ldPXMpLGwmJih0aGlzLl9jdXJJbnN0PT09bCYmdGhpcy5faGlkZURhdGVwaWNrZXIoKSxvPXRoaXMuX2dldERhdGVEYXRlcGlja2VyKGUsITApLHI9dGhpcy5fZ2V0TWluTWF4RGF0ZShsLFwibWluXCIpLGg9dGhpcy5fZ2V0TWluTWF4RGF0ZShsLFwibWF4XCIpLGEobC5zZXR0aW5ncyxuKSxudWxsIT09ciYmdm9pZCAwIT09bi5kYXRlRm9ybWF0JiZ2b2lkIDA9PT1uLm1pbkRhdGUmJihsLnNldHRpbmdzLm1pbkRhdGU9dGhpcy5fZm9ybWF0RGF0ZShsLHIpKSxudWxsIT09aCYmdm9pZCAwIT09bi5kYXRlRm9ybWF0JiZ2b2lkIDA9PT1uLm1heERhdGUmJihsLnNldHRpbmdzLm1heERhdGU9dGhpcy5fZm9ybWF0RGF0ZShsLGgpKSxcImRpc2FibGVkXCJpbiBuJiYobi5kaXNhYmxlZD90aGlzLl9kaXNhYmxlRGF0ZXBpY2tlcihlKTp0aGlzLl9lbmFibGVEYXRlcGlja2VyKGUpKSx0aGlzLl9hdHRhY2htZW50cyh0KGUpLGwpLHRoaXMuX2F1dG9TaXplKGwpLHRoaXMuX3NldERhdGUobCxvKSx0aGlzLl91cGRhdGVBbHRlcm5hdGUobCksdGhpcy5fdXBkYXRlRGF0ZXBpY2tlcihsKSksdm9pZCAwKX0sX2NoYW5nZURhdGVwaWNrZXI6ZnVuY3Rpb24odCxlLGkpe3RoaXMuX29wdGlvbkRhdGVwaWNrZXIodCxlLGkpfSxfcmVmcmVzaERhdGVwaWNrZXI6ZnVuY3Rpb24odCl7dmFyIGU9dGhpcy5fZ2V0SW5zdCh0KTtlJiZ0aGlzLl91cGRhdGVEYXRlcGlja2VyKGUpfSxfc2V0RGF0ZURhdGVwaWNrZXI6ZnVuY3Rpb24odCxlKXt2YXIgaT10aGlzLl9nZXRJbnN0KHQpO2kmJih0aGlzLl9zZXREYXRlKGksZSksdGhpcy5fdXBkYXRlRGF0ZXBpY2tlcihpKSx0aGlzLl91cGRhdGVBbHRlcm5hdGUoaSkpfSxfZ2V0RGF0ZURhdGVwaWNrZXI6ZnVuY3Rpb24odCxlKXt2YXIgaT10aGlzLl9nZXRJbnN0KHQpO3JldHVybiBpJiYhaS5pbmxpbmUmJnRoaXMuX3NldERhdGVGcm9tRmllbGQoaSxlKSxpP3RoaXMuX2dldERhdGUoaSk6bnVsbH0sX2RvS2V5RG93bjpmdW5jdGlvbihlKXt2YXIgaSxzLG4sbz10LmRhdGVwaWNrZXIuX2dldEluc3QoZS50YXJnZXQpLGE9ITAscj1vLmRwRGl2LmlzKFwiLnVpLWRhdGVwaWNrZXItcnRsXCIpO2lmKG8uX2tleUV2ZW50PSEwLHQuZGF0ZXBpY2tlci5fZGF0ZXBpY2tlclNob3dpbmcpc3dpdGNoKGUua2V5Q29kZSl7Y2FzZSA5OnQuZGF0ZXBpY2tlci5faGlkZURhdGVwaWNrZXIoKSxhPSExO2JyZWFrO2Nhc2UgMTM6cmV0dXJuIG49dChcInRkLlwiK3QuZGF0ZXBpY2tlci5fZGF5T3ZlckNsYXNzK1wiOm5vdCguXCIrdC5kYXRlcGlja2VyLl9jdXJyZW50Q2xhc3MrXCIpXCIsby5kcERpdiksblswXSYmdC5kYXRlcGlja2VyLl9zZWxlY3REYXkoZS50YXJnZXQsby5zZWxlY3RlZE1vbnRoLG8uc2VsZWN0ZWRZZWFyLG5bMF0pLGk9dC5kYXRlcGlja2VyLl9nZXQobyxcIm9uU2VsZWN0XCIpLGk/KHM9dC5kYXRlcGlja2VyLl9mb3JtYXREYXRlKG8pLGkuYXBwbHkoby5pbnB1dD9vLmlucHV0WzBdOm51bGwsW3Msb10pKTp0LmRhdGVwaWNrZXIuX2hpZGVEYXRlcGlja2VyKCksITE7Y2FzZSAyNzp0LmRhdGVwaWNrZXIuX2hpZGVEYXRlcGlja2VyKCk7YnJlYWs7Y2FzZSAzMzp0LmRhdGVwaWNrZXIuX2FkanVzdERhdGUoZS50YXJnZXQsZS5jdHJsS2V5Py10LmRhdGVwaWNrZXIuX2dldChvLFwic3RlcEJpZ01vbnRoc1wiKTotdC5kYXRlcGlja2VyLl9nZXQobyxcInN0ZXBNb250aHNcIiksXCJNXCIpO2JyZWFrO2Nhc2UgMzQ6dC5kYXRlcGlja2VyLl9hZGp1c3REYXRlKGUudGFyZ2V0LGUuY3RybEtleT8rdC5kYXRlcGlja2VyLl9nZXQobyxcInN0ZXBCaWdNb250aHNcIik6K3QuZGF0ZXBpY2tlci5fZ2V0KG8sXCJzdGVwTW9udGhzXCIpLFwiTVwiKTticmVhaztjYXNlIDM1OihlLmN0cmxLZXl8fGUubWV0YUtleSkmJnQuZGF0ZXBpY2tlci5fY2xlYXJEYXRlKGUudGFyZ2V0KSxhPWUuY3RybEtleXx8ZS5tZXRhS2V5O2JyZWFrO2Nhc2UgMzY6KGUuY3RybEtleXx8ZS5tZXRhS2V5KSYmdC5kYXRlcGlja2VyLl9nb3RvVG9kYXkoZS50YXJnZXQpLGE9ZS5jdHJsS2V5fHxlLm1ldGFLZXk7YnJlYWs7Y2FzZSAzNzooZS5jdHJsS2V5fHxlLm1ldGFLZXkpJiZ0LmRhdGVwaWNrZXIuX2FkanVzdERhdGUoZS50YXJnZXQscj8xOi0xLFwiRFwiKSxhPWUuY3RybEtleXx8ZS5tZXRhS2V5LGUub3JpZ2luYWxFdmVudC5hbHRLZXkmJnQuZGF0ZXBpY2tlci5fYWRqdXN0RGF0ZShlLnRhcmdldCxlLmN0cmxLZXk/LXQuZGF0ZXBpY2tlci5fZ2V0KG8sXCJzdGVwQmlnTW9udGhzXCIpOi10LmRhdGVwaWNrZXIuX2dldChvLFwic3RlcE1vbnRoc1wiKSxcIk1cIik7YnJlYWs7Y2FzZSAzODooZS5jdHJsS2V5fHxlLm1ldGFLZXkpJiZ0LmRhdGVwaWNrZXIuX2FkanVzdERhdGUoZS50YXJnZXQsLTcsXCJEXCIpLGE9ZS5jdHJsS2V5fHxlLm1ldGFLZXk7YnJlYWs7Y2FzZSAzOTooZS5jdHJsS2V5fHxlLm1ldGFLZXkpJiZ0LmRhdGVwaWNrZXIuX2FkanVzdERhdGUoZS50YXJnZXQscj8tMToxLFwiRFwiKSxhPWUuY3RybEtleXx8ZS5tZXRhS2V5LGUub3JpZ2luYWxFdmVudC5hbHRLZXkmJnQuZGF0ZXBpY2tlci5fYWRqdXN0RGF0ZShlLnRhcmdldCxlLmN0cmxLZXk/K3QuZGF0ZXBpY2tlci5fZ2V0KG8sXCJzdGVwQmlnTW9udGhzXCIpOit0LmRhdGVwaWNrZXIuX2dldChvLFwic3RlcE1vbnRoc1wiKSxcIk1cIik7YnJlYWs7Y2FzZSA0MDooZS5jdHJsS2V5fHxlLm1ldGFLZXkpJiZ0LmRhdGVwaWNrZXIuX2FkanVzdERhdGUoZS50YXJnZXQsNyxcIkRcIiksYT1lLmN0cmxLZXl8fGUubWV0YUtleTticmVhaztkZWZhdWx0OmE9ITF9ZWxzZSAzNj09PWUua2V5Q29kZSYmZS5jdHJsS2V5P3QuZGF0ZXBpY2tlci5fc2hvd0RhdGVwaWNrZXIodGhpcyk6YT0hMTthJiYoZS5wcmV2ZW50RGVmYXVsdCgpLGUuc3RvcFByb3BhZ2F0aW9uKCkpfSxfZG9LZXlQcmVzczpmdW5jdGlvbihlKXt2YXIgaSxzLG49dC5kYXRlcGlja2VyLl9nZXRJbnN0KGUudGFyZ2V0KTtyZXR1cm4gdC5kYXRlcGlja2VyLl9nZXQobixcImNvbnN0cmFpbklucHV0XCIpPyhpPXQuZGF0ZXBpY2tlci5fcG9zc2libGVDaGFycyh0LmRhdGVwaWNrZXIuX2dldChuLFwiZGF0ZUZvcm1hdFwiKSkscz1TdHJpbmcuZnJvbUNoYXJDb2RlKG51bGw9PWUuY2hhckNvZGU/ZS5rZXlDb2RlOmUuY2hhckNvZGUpLGUuY3RybEtleXx8ZS5tZXRhS2V5fHxcIiBcIj5zfHwhaXx8aS5pbmRleE9mKHMpPi0xKTp2b2lkIDB9LF9kb0tleVVwOmZ1bmN0aW9uKGUpe3ZhciBpLHM9dC5kYXRlcGlja2VyLl9nZXRJbnN0KGUudGFyZ2V0KTtpZihzLmlucHV0LnZhbCgpIT09cy5sYXN0VmFsKXRyeXtpPXQuZGF0ZXBpY2tlci5wYXJzZURhdGUodC5kYXRlcGlja2VyLl9nZXQocyxcImRhdGVGb3JtYXRcIikscy5pbnB1dD9zLmlucHV0LnZhbCgpOm51bGwsdC5kYXRlcGlja2VyLl9nZXRGb3JtYXRDb25maWcocykpLGkmJih0LmRhdGVwaWNrZXIuX3NldERhdGVGcm9tRmllbGQocyksdC5kYXRlcGlja2VyLl91cGRhdGVBbHRlcm5hdGUocyksdC5kYXRlcGlja2VyLl91cGRhdGVEYXRlcGlja2VyKHMpKX1jYXRjaChuKXt9cmV0dXJuITB9LF9zaG93RGF0ZXBpY2tlcjpmdW5jdGlvbihlKXtpZihlPWUudGFyZ2V0fHxlLFwiaW5wdXRcIiE9PWUubm9kZU5hbWUudG9Mb3dlckNhc2UoKSYmKGU9dChcImlucHV0XCIsZS5wYXJlbnROb2RlKVswXSksIXQuZGF0ZXBpY2tlci5faXNEaXNhYmxlZERhdGVwaWNrZXIoZSkmJnQuZGF0ZXBpY2tlci5fbGFzdElucHV0IT09ZSl7dmFyIHMsbixvLHIsaCxsLGM7cz10LmRhdGVwaWNrZXIuX2dldEluc3QoZSksdC5kYXRlcGlja2VyLl9jdXJJbnN0JiZ0LmRhdGVwaWNrZXIuX2N1ckluc3QhPT1zJiYodC5kYXRlcGlja2VyLl9jdXJJbnN0LmRwRGl2LnN0b3AoITAsITApLHMmJnQuZGF0ZXBpY2tlci5fZGF0ZXBpY2tlclNob3dpbmcmJnQuZGF0ZXBpY2tlci5faGlkZURhdGVwaWNrZXIodC5kYXRlcGlja2VyLl9jdXJJbnN0LmlucHV0WzBdKSksbj10LmRhdGVwaWNrZXIuX2dldChzLFwiYmVmb3JlU2hvd1wiKSxvPW4/bi5hcHBseShlLFtlLHNdKTp7fSxvIT09ITEmJihhKHMuc2V0dGluZ3Msbykscy5sYXN0VmFsPW51bGwsdC5kYXRlcGlja2VyLl9sYXN0SW5wdXQ9ZSx0LmRhdGVwaWNrZXIuX3NldERhdGVGcm9tRmllbGQocyksdC5kYXRlcGlja2VyLl9pbkRpYWxvZyYmKGUudmFsdWU9XCJcIiksdC5kYXRlcGlja2VyLl9wb3N8fCh0LmRhdGVwaWNrZXIuX3Bvcz10LmRhdGVwaWNrZXIuX2ZpbmRQb3MoZSksdC5kYXRlcGlja2VyLl9wb3NbMV0rPWUub2Zmc2V0SGVpZ2h0KSxyPSExLHQoZSkucGFyZW50cygpLmVhY2goZnVuY3Rpb24oKXtyZXR1cm4gcnw9XCJmaXhlZFwiPT09dCh0aGlzKS5jc3MoXCJwb3NpdGlvblwiKSwhcn0pLGg9e2xlZnQ6dC5kYXRlcGlja2VyLl9wb3NbMF0sdG9wOnQuZGF0ZXBpY2tlci5fcG9zWzFdfSx0LmRhdGVwaWNrZXIuX3Bvcz1udWxsLHMuZHBEaXYuZW1wdHkoKSxzLmRwRGl2LmNzcyh7cG9zaXRpb246XCJhYnNvbHV0ZVwiLGRpc3BsYXk6XCJibG9ja1wiLHRvcDpcIi0xMDAwcHhcIn0pLHQuZGF0ZXBpY2tlci5fdXBkYXRlRGF0ZXBpY2tlcihzKSxoPXQuZGF0ZXBpY2tlci5fY2hlY2tPZmZzZXQocyxoLHIpLHMuZHBEaXYuY3NzKHtwb3NpdGlvbjp0LmRhdGVwaWNrZXIuX2luRGlhbG9nJiZ0LmJsb2NrVUk/XCJzdGF0aWNcIjpyP1wiZml4ZWRcIjpcImFic29sdXRlXCIsZGlzcGxheTpcIm5vbmVcIixsZWZ0OmgubGVmdCtcInB4XCIsdG9wOmgudG9wK1wicHhcIn0pLHMuaW5saW5lfHwobD10LmRhdGVwaWNrZXIuX2dldChzLFwic2hvd0FuaW1cIiksYz10LmRhdGVwaWNrZXIuX2dldChzLFwiZHVyYXRpb25cIikscy5kcERpdi5jc3MoXCJ6LWluZGV4XCIsaSh0KGUpKSsxKSx0LmRhdGVwaWNrZXIuX2RhdGVwaWNrZXJTaG93aW5nPSEwLHQuZWZmZWN0cyYmdC5lZmZlY3RzLmVmZmVjdFtsXT9zLmRwRGl2LnNob3cobCx0LmRhdGVwaWNrZXIuX2dldChzLFwic2hvd09wdGlvbnNcIiksYyk6cy5kcERpdltsfHxcInNob3dcIl0obD9jOm51bGwpLHQuZGF0ZXBpY2tlci5fc2hvdWxkRm9jdXNJbnB1dChzKSYmcy5pbnB1dC50cmlnZ2VyKFwiZm9jdXNcIiksdC5kYXRlcGlja2VyLl9jdXJJbnN0PXMpKVxufX0sX3VwZGF0ZURhdGVwaWNrZXI6ZnVuY3Rpb24oZSl7dGhpcy5tYXhSb3dzPTQsbT1lLGUuZHBEaXYuZW1wdHkoKS5hcHBlbmQodGhpcy5fZ2VuZXJhdGVIVE1MKGUpKSx0aGlzLl9hdHRhY2hIYW5kbGVycyhlKTt2YXIgaSxzPXRoaXMuX2dldE51bWJlck9mTW9udGhzKGUpLG49c1sxXSxhPTE3LHI9ZS5kcERpdi5maW5kKFwiLlwiK3RoaXMuX2RheU92ZXJDbGFzcytcIiBhXCIpO3IubGVuZ3RoPjAmJm8uYXBwbHkoci5nZXQoMCkpLGUuZHBEaXYucmVtb3ZlQ2xhc3MoXCJ1aS1kYXRlcGlja2VyLW11bHRpLTIgdWktZGF0ZXBpY2tlci1tdWx0aS0zIHVpLWRhdGVwaWNrZXItbXVsdGktNFwiKS53aWR0aChcIlwiKSxuPjEmJmUuZHBEaXYuYWRkQ2xhc3MoXCJ1aS1kYXRlcGlja2VyLW11bHRpLVwiK24pLmNzcyhcIndpZHRoXCIsYSpuK1wiZW1cIiksZS5kcERpdlsoMSE9PXNbMF18fDEhPT1zWzFdP1wiYWRkXCI6XCJyZW1vdmVcIikrXCJDbGFzc1wiXShcInVpLWRhdGVwaWNrZXItbXVsdGlcIiksZS5kcERpdlsodGhpcy5fZ2V0KGUsXCJpc1JUTFwiKT9cImFkZFwiOlwicmVtb3ZlXCIpK1wiQ2xhc3NcIl0oXCJ1aS1kYXRlcGlja2VyLXJ0bFwiKSxlPT09dC5kYXRlcGlja2VyLl9jdXJJbnN0JiZ0LmRhdGVwaWNrZXIuX2RhdGVwaWNrZXJTaG93aW5nJiZ0LmRhdGVwaWNrZXIuX3Nob3VsZEZvY3VzSW5wdXQoZSkmJmUuaW5wdXQudHJpZ2dlcihcImZvY3VzXCIpLGUueWVhcnNodG1sJiYoaT1lLnllYXJzaHRtbCxzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7aT09PWUueWVhcnNodG1sJiZlLnllYXJzaHRtbCYmZS5kcERpdi5maW5kKFwic2VsZWN0LnVpLWRhdGVwaWNrZXIteWVhcjpmaXJzdFwiKS5yZXBsYWNlV2l0aChlLnllYXJzaHRtbCksaT1lLnllYXJzaHRtbD1udWxsfSwwKSl9LF9zaG91bGRGb2N1c0lucHV0OmZ1bmN0aW9uKHQpe3JldHVybiB0LmlucHV0JiZ0LmlucHV0LmlzKFwiOnZpc2libGVcIikmJiF0LmlucHV0LmlzKFwiOmRpc2FibGVkXCIpJiYhdC5pbnB1dC5pcyhcIjpmb2N1c1wiKX0sX2NoZWNrT2Zmc2V0OmZ1bmN0aW9uKGUsaSxzKXt2YXIgbj1lLmRwRGl2Lm91dGVyV2lkdGgoKSxvPWUuZHBEaXYub3V0ZXJIZWlnaHQoKSxhPWUuaW5wdXQ/ZS5pbnB1dC5vdXRlcldpZHRoKCk6MCxyPWUuaW5wdXQ/ZS5pbnB1dC5vdXRlckhlaWdodCgpOjAsaD1kb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuY2xpZW50V2lkdGgrKHM/MDp0KGRvY3VtZW50KS5zY3JvbGxMZWZ0KCkpLGw9ZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LmNsaWVudEhlaWdodCsocz8wOnQoZG9jdW1lbnQpLnNjcm9sbFRvcCgpKTtyZXR1cm4gaS5sZWZ0LT10aGlzLl9nZXQoZSxcImlzUlRMXCIpP24tYTowLGkubGVmdC09cyYmaS5sZWZ0PT09ZS5pbnB1dC5vZmZzZXQoKS5sZWZ0P3QoZG9jdW1lbnQpLnNjcm9sbExlZnQoKTowLGkudG9wLT1zJiZpLnRvcD09PWUuaW5wdXQub2Zmc2V0KCkudG9wK3I/dChkb2N1bWVudCkuc2Nyb2xsVG9wKCk6MCxpLmxlZnQtPU1hdGgubWluKGkubGVmdCxpLmxlZnQrbj5oJiZoPm4/TWF0aC5hYnMoaS5sZWZ0K24taCk6MCksaS50b3AtPU1hdGgubWluKGkudG9wLGkudG9wK28+bCYmbD5vP01hdGguYWJzKG8rcik6MCksaX0sX2ZpbmRQb3M6ZnVuY3Rpb24oZSl7Zm9yKHZhciBpLHM9dGhpcy5fZ2V0SW5zdChlKSxuPXRoaXMuX2dldChzLFwiaXNSVExcIik7ZSYmKFwiaGlkZGVuXCI9PT1lLnR5cGV8fDEhPT1lLm5vZGVUeXBlfHx0LmV4cHIuZmlsdGVycy5oaWRkZW4oZSkpOyllPWVbbj9cInByZXZpb3VzU2libGluZ1wiOlwibmV4dFNpYmxpbmdcIl07cmV0dXJuIGk9dChlKS5vZmZzZXQoKSxbaS5sZWZ0LGkudG9wXX0sX2hpZGVEYXRlcGlja2VyOmZ1bmN0aW9uKGUpe3ZhciBpLHMsbixvLGE9dGhpcy5fY3VySW5zdDshYXx8ZSYmYSE9PXQuZGF0YShlLFwiZGF0ZXBpY2tlclwiKXx8dGhpcy5fZGF0ZXBpY2tlclNob3dpbmcmJihpPXRoaXMuX2dldChhLFwic2hvd0FuaW1cIikscz10aGlzLl9nZXQoYSxcImR1cmF0aW9uXCIpLG49ZnVuY3Rpb24oKXt0LmRhdGVwaWNrZXIuX3RpZHlEaWFsb2coYSl9LHQuZWZmZWN0cyYmKHQuZWZmZWN0cy5lZmZlY3RbaV18fHQuZWZmZWN0c1tpXSk/YS5kcERpdi5oaWRlKGksdC5kYXRlcGlja2VyLl9nZXQoYSxcInNob3dPcHRpb25zXCIpLHMsbik6YS5kcERpdltcInNsaWRlRG93blwiPT09aT9cInNsaWRlVXBcIjpcImZhZGVJblwiPT09aT9cImZhZGVPdXRcIjpcImhpZGVcIl0oaT9zOm51bGwsbiksaXx8bigpLHRoaXMuX2RhdGVwaWNrZXJTaG93aW5nPSExLG89dGhpcy5fZ2V0KGEsXCJvbkNsb3NlXCIpLG8mJm8uYXBwbHkoYS5pbnB1dD9hLmlucHV0WzBdOm51bGwsW2EuaW5wdXQ/YS5pbnB1dC52YWwoKTpcIlwiLGFdKSx0aGlzLl9sYXN0SW5wdXQ9bnVsbCx0aGlzLl9pbkRpYWxvZyYmKHRoaXMuX2RpYWxvZ0lucHV0LmNzcyh7cG9zaXRpb246XCJhYnNvbHV0ZVwiLGxlZnQ6XCIwXCIsdG9wOlwiLTEwMHB4XCJ9KSx0LmJsb2NrVUkmJih0LnVuYmxvY2tVSSgpLHQoXCJib2R5XCIpLmFwcGVuZCh0aGlzLmRwRGl2KSkpLHRoaXMuX2luRGlhbG9nPSExKX0sX3RpZHlEaWFsb2c6ZnVuY3Rpb24odCl7dC5kcERpdi5yZW1vdmVDbGFzcyh0aGlzLl9kaWFsb2dDbGFzcykub2ZmKFwiLnVpLWRhdGVwaWNrZXItY2FsZW5kYXJcIil9LF9jaGVja0V4dGVybmFsQ2xpY2s6ZnVuY3Rpb24oZSl7aWYodC5kYXRlcGlja2VyLl9jdXJJbnN0KXt2YXIgaT10KGUudGFyZ2V0KSxzPXQuZGF0ZXBpY2tlci5fZ2V0SW5zdChpWzBdKTsoaVswXS5pZCE9PXQuZGF0ZXBpY2tlci5fbWFpbkRpdklkJiYwPT09aS5wYXJlbnRzKFwiI1wiK3QuZGF0ZXBpY2tlci5fbWFpbkRpdklkKS5sZW5ndGgmJiFpLmhhc0NsYXNzKHQuZGF0ZXBpY2tlci5tYXJrZXJDbGFzc05hbWUpJiYhaS5jbG9zZXN0KFwiLlwiK3QuZGF0ZXBpY2tlci5fdHJpZ2dlckNsYXNzKS5sZW5ndGgmJnQuZGF0ZXBpY2tlci5fZGF0ZXBpY2tlclNob3dpbmcmJighdC5kYXRlcGlja2VyLl9pbkRpYWxvZ3x8IXQuYmxvY2tVSSl8fGkuaGFzQ2xhc3ModC5kYXRlcGlja2VyLm1hcmtlckNsYXNzTmFtZSkmJnQuZGF0ZXBpY2tlci5fY3VySW5zdCE9PXMpJiZ0LmRhdGVwaWNrZXIuX2hpZGVEYXRlcGlja2VyKCl9fSxfYWRqdXN0RGF0ZTpmdW5jdGlvbihlLGkscyl7dmFyIG49dChlKSxvPXRoaXMuX2dldEluc3QoblswXSk7dGhpcy5faXNEaXNhYmxlZERhdGVwaWNrZXIoblswXSl8fCh0aGlzLl9hZGp1c3RJbnN0RGF0ZShvLGkrKFwiTVwiPT09cz90aGlzLl9nZXQobyxcInNob3dDdXJyZW50QXRQb3NcIik6MCkscyksdGhpcy5fdXBkYXRlRGF0ZXBpY2tlcihvKSl9LF9nb3RvVG9kYXk6ZnVuY3Rpb24oZSl7dmFyIGkscz10KGUpLG49dGhpcy5fZ2V0SW5zdChzWzBdKTt0aGlzLl9nZXQobixcImdvdG9DdXJyZW50XCIpJiZuLmN1cnJlbnREYXk/KG4uc2VsZWN0ZWREYXk9bi5jdXJyZW50RGF5LG4uZHJhd01vbnRoPW4uc2VsZWN0ZWRNb250aD1uLmN1cnJlbnRNb250aCxuLmRyYXdZZWFyPW4uc2VsZWN0ZWRZZWFyPW4uY3VycmVudFllYXIpOihpPW5ldyBEYXRlLG4uc2VsZWN0ZWREYXk9aS5nZXREYXRlKCksbi5kcmF3TW9udGg9bi5zZWxlY3RlZE1vbnRoPWkuZ2V0TW9udGgoKSxuLmRyYXdZZWFyPW4uc2VsZWN0ZWRZZWFyPWkuZ2V0RnVsbFllYXIoKSksdGhpcy5fbm90aWZ5Q2hhbmdlKG4pLHRoaXMuX2FkanVzdERhdGUocyl9LF9zZWxlY3RNb250aFllYXI6ZnVuY3Rpb24oZSxpLHMpe3ZhciBuPXQoZSksbz10aGlzLl9nZXRJbnN0KG5bMF0pO29bXCJzZWxlY3RlZFwiKyhcIk1cIj09PXM/XCJNb250aFwiOlwiWWVhclwiKV09b1tcImRyYXdcIisoXCJNXCI9PT1zP1wiTW9udGhcIjpcIlllYXJcIildPXBhcnNlSW50KGkub3B0aW9uc1tpLnNlbGVjdGVkSW5kZXhdLnZhbHVlLDEwKSx0aGlzLl9ub3RpZnlDaGFuZ2UobyksdGhpcy5fYWRqdXN0RGF0ZShuKX0sX3NlbGVjdERheTpmdW5jdGlvbihlLGkscyxuKXt2YXIgbyxhPXQoZSk7dChuKS5oYXNDbGFzcyh0aGlzLl91bnNlbGVjdGFibGVDbGFzcyl8fHRoaXMuX2lzRGlzYWJsZWREYXRlcGlja2VyKGFbMF0pfHwobz10aGlzLl9nZXRJbnN0KGFbMF0pLG8uc2VsZWN0ZWREYXk9by5jdXJyZW50RGF5PXQoXCJhXCIsbikuaHRtbCgpLG8uc2VsZWN0ZWRNb250aD1vLmN1cnJlbnRNb250aD1pLG8uc2VsZWN0ZWRZZWFyPW8uY3VycmVudFllYXI9cyx0aGlzLl9zZWxlY3REYXRlKGUsdGhpcy5fZm9ybWF0RGF0ZShvLG8uY3VycmVudERheSxvLmN1cnJlbnRNb250aCxvLmN1cnJlbnRZZWFyKSkpfSxfY2xlYXJEYXRlOmZ1bmN0aW9uKGUpe3ZhciBpPXQoZSk7dGhpcy5fc2VsZWN0RGF0ZShpLFwiXCIpfSxfc2VsZWN0RGF0ZTpmdW5jdGlvbihlLGkpe3ZhciBzLG49dChlKSxvPXRoaXMuX2dldEluc3QoblswXSk7aT1udWxsIT1pP2k6dGhpcy5fZm9ybWF0RGF0ZShvKSxvLmlucHV0JiZvLmlucHV0LnZhbChpKSx0aGlzLl91cGRhdGVBbHRlcm5hdGUobykscz10aGlzLl9nZXQobyxcIm9uU2VsZWN0XCIpLHM/cy5hcHBseShvLmlucHV0P28uaW5wdXRbMF06bnVsbCxbaSxvXSk6by5pbnB1dCYmby5pbnB1dC50cmlnZ2VyKFwiY2hhbmdlXCIpLG8uaW5saW5lP3RoaXMuX3VwZGF0ZURhdGVwaWNrZXIobyk6KHRoaXMuX2hpZGVEYXRlcGlja2VyKCksdGhpcy5fbGFzdElucHV0PW8uaW5wdXRbMF0sXCJvYmplY3RcIiE9dHlwZW9mIG8uaW5wdXRbMF0mJm8uaW5wdXQudHJpZ2dlcihcImZvY3VzXCIpLHRoaXMuX2xhc3RJbnB1dD1udWxsKX0sX3VwZGF0ZUFsdGVybmF0ZTpmdW5jdGlvbihlKXt2YXIgaSxzLG4sbz10aGlzLl9nZXQoZSxcImFsdEZpZWxkXCIpO28mJihpPXRoaXMuX2dldChlLFwiYWx0Rm9ybWF0XCIpfHx0aGlzLl9nZXQoZSxcImRhdGVGb3JtYXRcIikscz10aGlzLl9nZXREYXRlKGUpLG49dGhpcy5mb3JtYXREYXRlKGkscyx0aGlzLl9nZXRGb3JtYXRDb25maWcoZSkpLHQobykudmFsKG4pKX0sbm9XZWVrZW5kczpmdW5jdGlvbih0KXt2YXIgZT10LmdldERheSgpO3JldHVybltlPjAmJjY+ZSxcIlwiXX0saXNvODYwMVdlZWs6ZnVuY3Rpb24odCl7dmFyIGUsaT1uZXcgRGF0ZSh0LmdldFRpbWUoKSk7cmV0dXJuIGkuc2V0RGF0ZShpLmdldERhdGUoKSs0LShpLmdldERheSgpfHw3KSksZT1pLmdldFRpbWUoKSxpLnNldE1vbnRoKDApLGkuc2V0RGF0ZSgxKSxNYXRoLmZsb29yKE1hdGgucm91bmQoKGUtaSkvODY0ZTUpLzcpKzF9LHBhcnNlRGF0ZTpmdW5jdGlvbihlLGkscyl7aWYobnVsbD09ZXx8bnVsbD09aSl0aHJvd1wiSW52YWxpZCBhcmd1bWVudHNcIjtpZihpPVwib2JqZWN0XCI9PXR5cGVvZiBpP1wiXCIraTppK1wiXCIsXCJcIj09PWkpcmV0dXJuIG51bGw7dmFyIG4sbyxhLHIsaD0wLGw9KHM/cy5zaG9ydFllYXJDdXRvZmY6bnVsbCl8fHRoaXMuX2RlZmF1bHRzLnNob3J0WWVhckN1dG9mZixjPVwic3RyaW5nXCIhPXR5cGVvZiBsP2w6KG5ldyBEYXRlKS5nZXRGdWxsWWVhcigpJTEwMCtwYXJzZUludChsLDEwKSx1PShzP3MuZGF5TmFtZXNTaG9ydDpudWxsKXx8dGhpcy5fZGVmYXVsdHMuZGF5TmFtZXNTaG9ydCxkPShzP3MuZGF5TmFtZXM6bnVsbCl8fHRoaXMuX2RlZmF1bHRzLmRheU5hbWVzLHA9KHM/cy5tb250aE5hbWVzU2hvcnQ6bnVsbCl8fHRoaXMuX2RlZmF1bHRzLm1vbnRoTmFtZXNTaG9ydCxmPShzP3MubW9udGhOYW1lczpudWxsKXx8dGhpcy5fZGVmYXVsdHMubW9udGhOYW1lcyxnPS0xLG09LTEsXz0tMSx2PS0xLGI9ITEseT1mdW5jdGlvbih0KXt2YXIgaT1lLmxlbmd0aD5uKzEmJmUuY2hhckF0KG4rMSk9PT10O3JldHVybiBpJiZuKyssaX0sdz1mdW5jdGlvbih0KXt2YXIgZT15KHQpLHM9XCJAXCI9PT10PzE0OlwiIVwiPT09dD8yMDpcInlcIj09PXQmJmU/NDpcIm9cIj09PXQ/MzoyLG49XCJ5XCI9PT10P3M6MSxvPVJlZ0V4cChcIl5cXFxcZHtcIituK1wiLFwiK3MrXCJ9XCIpLGE9aS5zdWJzdHJpbmcoaCkubWF0Y2gobyk7aWYoIWEpdGhyb3dcIk1pc3NpbmcgbnVtYmVyIGF0IHBvc2l0aW9uIFwiK2g7cmV0dXJuIGgrPWFbMF0ubGVuZ3RoLHBhcnNlSW50KGFbMF0sMTApfSxrPWZ1bmN0aW9uKGUscyxuKXt2YXIgbz0tMSxhPXQubWFwKHkoZSk/bjpzLGZ1bmN0aW9uKHQsZSl7cmV0dXJuW1tlLHRdXX0pLnNvcnQoZnVuY3Rpb24odCxlKXtyZXR1cm4tKHRbMV0ubGVuZ3RoLWVbMV0ubGVuZ3RoKX0pO2lmKHQuZWFjaChhLGZ1bmN0aW9uKHQsZSl7dmFyIHM9ZVsxXTtyZXR1cm4gaS5zdWJzdHIoaCxzLmxlbmd0aCkudG9Mb3dlckNhc2UoKT09PXMudG9Mb3dlckNhc2UoKT8obz1lWzBdLGgrPXMubGVuZ3RoLCExKTp2b2lkIDB9KSwtMSE9PW8pcmV0dXJuIG8rMTt0aHJvd1wiVW5rbm93biBuYW1lIGF0IHBvc2l0aW9uIFwiK2h9LHg9ZnVuY3Rpb24oKXtpZihpLmNoYXJBdChoKSE9PWUuY2hhckF0KG4pKXRocm93XCJVbmV4cGVjdGVkIGxpdGVyYWwgYXQgcG9zaXRpb24gXCIraDtoKyt9O2ZvcihuPTA7ZS5sZW5ndGg+bjtuKyspaWYoYilcIidcIiE9PWUuY2hhckF0KG4pfHx5KFwiJ1wiKT94KCk6Yj0hMTtlbHNlIHN3aXRjaChlLmNoYXJBdChuKSl7Y2FzZVwiZFwiOl89dyhcImRcIik7YnJlYWs7Y2FzZVwiRFwiOmsoXCJEXCIsdSxkKTticmVhaztjYXNlXCJvXCI6dj13KFwib1wiKTticmVhaztjYXNlXCJtXCI6bT13KFwibVwiKTticmVhaztjYXNlXCJNXCI6bT1rKFwiTVwiLHAsZik7YnJlYWs7Y2FzZVwieVwiOmc9dyhcInlcIik7YnJlYWs7Y2FzZVwiQFwiOnI9bmV3IERhdGUodyhcIkBcIikpLGc9ci5nZXRGdWxsWWVhcigpLG09ci5nZXRNb250aCgpKzEsXz1yLmdldERhdGUoKTticmVhaztjYXNlXCIhXCI6cj1uZXcgRGF0ZSgodyhcIiFcIiktdGhpcy5fdGlja3NUbzE5NzApLzFlNCksZz1yLmdldEZ1bGxZZWFyKCksbT1yLmdldE1vbnRoKCkrMSxfPXIuZ2V0RGF0ZSgpO2JyZWFrO2Nhc2VcIidcIjp5KFwiJ1wiKT94KCk6Yj0hMDticmVhaztkZWZhdWx0OngoKX1pZihpLmxlbmd0aD5oJiYoYT1pLnN1YnN0cihoKSwhL15cXHMrLy50ZXN0KGEpKSl0aHJvd1wiRXh0cmEvdW5wYXJzZWQgY2hhcmFjdGVycyBmb3VuZCBpbiBkYXRlOiBcIithO2lmKC0xPT09Zz9nPShuZXcgRGF0ZSkuZ2V0RnVsbFllYXIoKToxMDA+ZyYmKGcrPShuZXcgRGF0ZSkuZ2V0RnVsbFllYXIoKS0obmV3IERhdGUpLmdldEZ1bGxZZWFyKCklMTAwKyhjPj1nPzA6LTEwMCkpLHY+LTEpZm9yKG09MSxfPXY7Oyl7aWYobz10aGlzLl9nZXREYXlzSW5Nb250aChnLG0tMSksbz49XylicmVhazttKyssXy09b31pZihyPXRoaXMuX2RheWxpZ2h0U2F2aW5nQWRqdXN0KG5ldyBEYXRlKGcsbS0xLF8pKSxyLmdldEZ1bGxZZWFyKCkhPT1nfHxyLmdldE1vbnRoKCkrMSE9PW18fHIuZ2V0RGF0ZSgpIT09Xyl0aHJvd1wiSW52YWxpZCBkYXRlXCI7cmV0dXJuIHJ9LEFUT006XCJ5eS1tbS1kZFwiLENPT0tJRTpcIkQsIGRkIE0geXlcIixJU09fODYwMTpcInl5LW1tLWRkXCIsUkZDXzgyMjpcIkQsIGQgTSB5XCIsUkZDXzg1MDpcIkRELCBkZC1NLXlcIixSRkNfMTAzNjpcIkQsIGQgTSB5XCIsUkZDXzExMjM6XCJELCBkIE0geXlcIixSRkNfMjgyMjpcIkQsIGQgTSB5eVwiLFJTUzpcIkQsIGQgTSB5XCIsVElDS1M6XCIhXCIsVElNRVNUQU1QOlwiQFwiLFczQzpcInl5LW1tLWRkXCIsX3RpY2tzVG8xOTcwOjFlNyo2MCo2MCoyNCooNzE4Njg1K01hdGguZmxvb3IoNDkyLjUpLU1hdGguZmxvb3IoMTkuNykrTWF0aC5mbG9vcig0LjkyNSkpLGZvcm1hdERhdGU6ZnVuY3Rpb24odCxlLGkpe2lmKCFlKXJldHVyblwiXCI7dmFyIHMsbj0oaT9pLmRheU5hbWVzU2hvcnQ6bnVsbCl8fHRoaXMuX2RlZmF1bHRzLmRheU5hbWVzU2hvcnQsbz0oaT9pLmRheU5hbWVzOm51bGwpfHx0aGlzLl9kZWZhdWx0cy5kYXlOYW1lcyxhPShpP2kubW9udGhOYW1lc1Nob3J0Om51bGwpfHx0aGlzLl9kZWZhdWx0cy5tb250aE5hbWVzU2hvcnQscj0oaT9pLm1vbnRoTmFtZXM6bnVsbCl8fHRoaXMuX2RlZmF1bHRzLm1vbnRoTmFtZXMsaD1mdW5jdGlvbihlKXt2YXIgaT10Lmxlbmd0aD5zKzEmJnQuY2hhckF0KHMrMSk9PT1lO3JldHVybiBpJiZzKyssaX0sbD1mdW5jdGlvbih0LGUsaSl7dmFyIHM9XCJcIitlO2lmKGgodCkpZm9yKDtpPnMubGVuZ3RoOylzPVwiMFwiK3M7cmV0dXJuIHN9LGM9ZnVuY3Rpb24odCxlLGkscyl7cmV0dXJuIGgodCk/c1tlXTppW2VdfSx1PVwiXCIsZD0hMTtpZihlKWZvcihzPTA7dC5sZW5ndGg+cztzKyspaWYoZClcIidcIiE9PXQuY2hhckF0KHMpfHxoKFwiJ1wiKT91Kz10LmNoYXJBdChzKTpkPSExO2Vsc2Ugc3dpdGNoKHQuY2hhckF0KHMpKXtjYXNlXCJkXCI6dSs9bChcImRcIixlLmdldERhdGUoKSwyKTticmVhaztjYXNlXCJEXCI6dSs9YyhcIkRcIixlLmdldERheSgpLG4sbyk7YnJlYWs7Y2FzZVwib1wiOnUrPWwoXCJvXCIsTWF0aC5yb3VuZCgobmV3IERhdGUoZS5nZXRGdWxsWWVhcigpLGUuZ2V0TW9udGgoKSxlLmdldERhdGUoKSkuZ2V0VGltZSgpLW5ldyBEYXRlKGUuZ2V0RnVsbFllYXIoKSwwLDApLmdldFRpbWUoKSkvODY0ZTUpLDMpO2JyZWFrO2Nhc2VcIm1cIjp1Kz1sKFwibVwiLGUuZ2V0TW9udGgoKSsxLDIpO2JyZWFrO2Nhc2VcIk1cIjp1Kz1jKFwiTVwiLGUuZ2V0TW9udGgoKSxhLHIpO2JyZWFrO2Nhc2VcInlcIjp1Kz1oKFwieVwiKT9lLmdldEZ1bGxZZWFyKCk6KDEwPmUuZ2V0RnVsbFllYXIoKSUxMDA/XCIwXCI6XCJcIikrZS5nZXRGdWxsWWVhcigpJTEwMDticmVhaztjYXNlXCJAXCI6dSs9ZS5nZXRUaW1lKCk7YnJlYWs7Y2FzZVwiIVwiOnUrPTFlNCplLmdldFRpbWUoKSt0aGlzLl90aWNrc1RvMTk3MDticmVhaztjYXNlXCInXCI6aChcIidcIik/dSs9XCInXCI6ZD0hMDticmVhaztkZWZhdWx0OnUrPXQuY2hhckF0KHMpfXJldHVybiB1fSxfcG9zc2libGVDaGFyczpmdW5jdGlvbih0KXt2YXIgZSxpPVwiXCIscz0hMSxuPWZ1bmN0aW9uKGkpe3ZhciBzPXQubGVuZ3RoPmUrMSYmdC5jaGFyQXQoZSsxKT09PWk7cmV0dXJuIHMmJmUrKyxzfTtmb3IoZT0wO3QubGVuZ3RoPmU7ZSsrKWlmKHMpXCInXCIhPT10LmNoYXJBdChlKXx8bihcIidcIik/aSs9dC5jaGFyQXQoZSk6cz0hMTtlbHNlIHN3aXRjaCh0LmNoYXJBdChlKSl7Y2FzZVwiZFwiOmNhc2VcIm1cIjpjYXNlXCJ5XCI6Y2FzZVwiQFwiOmkrPVwiMDEyMzQ1Njc4OVwiO2JyZWFrO2Nhc2VcIkRcIjpjYXNlXCJNXCI6cmV0dXJuIG51bGw7Y2FzZVwiJ1wiOm4oXCInXCIpP2krPVwiJ1wiOnM9ITA7YnJlYWs7ZGVmYXVsdDppKz10LmNoYXJBdChlKX1yZXR1cm4gaX0sX2dldDpmdW5jdGlvbih0LGUpe3JldHVybiB2b2lkIDAhPT10LnNldHRpbmdzW2VdP3Quc2V0dGluZ3NbZV06dGhpcy5fZGVmYXVsdHNbZV19LF9zZXREYXRlRnJvbUZpZWxkOmZ1bmN0aW9uKHQsZSl7aWYodC5pbnB1dC52YWwoKSE9PXQubGFzdFZhbCl7dmFyIGk9dGhpcy5fZ2V0KHQsXCJkYXRlRm9ybWF0XCIpLHM9dC5sYXN0VmFsPXQuaW5wdXQ/dC5pbnB1dC52YWwoKTpudWxsLG49dGhpcy5fZ2V0RGVmYXVsdERhdGUodCksbz1uLGE9dGhpcy5fZ2V0Rm9ybWF0Q29uZmlnKHQpO3RyeXtvPXRoaXMucGFyc2VEYXRlKGkscyxhKXx8bn1jYXRjaChyKXtzPWU/XCJcIjpzfXQuc2VsZWN0ZWREYXk9by5nZXREYXRlKCksdC5kcmF3TW9udGg9dC5zZWxlY3RlZE1vbnRoPW8uZ2V0TW9udGgoKSx0LmRyYXdZZWFyPXQuc2VsZWN0ZWRZZWFyPW8uZ2V0RnVsbFllYXIoKSx0LmN1cnJlbnREYXk9cz9vLmdldERhdGUoKTowLHQuY3VycmVudE1vbnRoPXM/by5nZXRNb250aCgpOjAsdC5jdXJyZW50WWVhcj1zP28uZ2V0RnVsbFllYXIoKTowLHRoaXMuX2FkanVzdEluc3REYXRlKHQpfX0sX2dldERlZmF1bHREYXRlOmZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLl9yZXN0cmljdE1pbk1heCh0LHRoaXMuX2RldGVybWluZURhdGUodCx0aGlzLl9nZXQodCxcImRlZmF1bHREYXRlXCIpLG5ldyBEYXRlKSl9LF9kZXRlcm1pbmVEYXRlOmZ1bmN0aW9uKGUsaSxzKXt2YXIgbj1mdW5jdGlvbih0KXt2YXIgZT1uZXcgRGF0ZTtyZXR1cm4gZS5zZXREYXRlKGUuZ2V0RGF0ZSgpK3QpLGV9LG89ZnVuY3Rpb24oaSl7dHJ5e3JldHVybiB0LmRhdGVwaWNrZXIucGFyc2VEYXRlKHQuZGF0ZXBpY2tlci5fZ2V0KGUsXCJkYXRlRm9ybWF0XCIpLGksdC5kYXRlcGlja2VyLl9nZXRGb3JtYXRDb25maWcoZSkpfWNhdGNoKHMpe31mb3IodmFyIG49KGkudG9Mb3dlckNhc2UoKS5tYXRjaCgvXmMvKT90LmRhdGVwaWNrZXIuX2dldERhdGUoZSk6bnVsbCl8fG5ldyBEYXRlLG89bi5nZXRGdWxsWWVhcigpLGE9bi5nZXRNb250aCgpLHI9bi5nZXREYXRlKCksaD0vKFsrXFwtXT9bMC05XSspXFxzKihkfER8d3xXfG18TXx5fFkpPy9nLGw9aC5leGVjKGkpO2w7KXtzd2l0Y2gobFsyXXx8XCJkXCIpe2Nhc2VcImRcIjpjYXNlXCJEXCI6cis9cGFyc2VJbnQobFsxXSwxMCk7YnJlYWs7Y2FzZVwid1wiOmNhc2VcIldcIjpyKz03KnBhcnNlSW50KGxbMV0sMTApO2JyZWFrO2Nhc2VcIm1cIjpjYXNlXCJNXCI6YSs9cGFyc2VJbnQobFsxXSwxMCkscj1NYXRoLm1pbihyLHQuZGF0ZXBpY2tlci5fZ2V0RGF5c0luTW9udGgobyxhKSk7YnJlYWs7Y2FzZVwieVwiOmNhc2VcIllcIjpvKz1wYXJzZUludChsWzFdLDEwKSxyPU1hdGgubWluKHIsdC5kYXRlcGlja2VyLl9nZXREYXlzSW5Nb250aChvLGEpKX1sPWguZXhlYyhpKX1yZXR1cm4gbmV3IERhdGUobyxhLHIpfSxhPW51bGw9PWl8fFwiXCI9PT1pP3M6XCJzdHJpbmdcIj09dHlwZW9mIGk/byhpKTpcIm51bWJlclwiPT10eXBlb2YgaT9pc05hTihpKT9zOm4oaSk6bmV3IERhdGUoaS5nZXRUaW1lKCkpO3JldHVybiBhPWEmJlwiSW52YWxpZCBEYXRlXCI9PVwiXCIrYT9zOmEsYSYmKGEuc2V0SG91cnMoMCksYS5zZXRNaW51dGVzKDApLGEuc2V0U2Vjb25kcygwKSxhLnNldE1pbGxpc2Vjb25kcygwKSksdGhpcy5fZGF5bGlnaHRTYXZpbmdBZGp1c3QoYSl9LF9kYXlsaWdodFNhdmluZ0FkanVzdDpmdW5jdGlvbih0KXtyZXR1cm4gdD8odC5zZXRIb3Vycyh0LmdldEhvdXJzKCk+MTI/dC5nZXRIb3VycygpKzI6MCksdCk6bnVsbH0sX3NldERhdGU6ZnVuY3Rpb24odCxlLGkpe3ZhciBzPSFlLG49dC5zZWxlY3RlZE1vbnRoLG89dC5zZWxlY3RlZFllYXIsYT10aGlzLl9yZXN0cmljdE1pbk1heCh0LHRoaXMuX2RldGVybWluZURhdGUodCxlLG5ldyBEYXRlKSk7dC5zZWxlY3RlZERheT10LmN1cnJlbnREYXk9YS5nZXREYXRlKCksdC5kcmF3TW9udGg9dC5zZWxlY3RlZE1vbnRoPXQuY3VycmVudE1vbnRoPWEuZ2V0TW9udGgoKSx0LmRyYXdZZWFyPXQuc2VsZWN0ZWRZZWFyPXQuY3VycmVudFllYXI9YS5nZXRGdWxsWWVhcigpLG49PT10LnNlbGVjdGVkTW9udGgmJm89PT10LnNlbGVjdGVkWWVhcnx8aXx8dGhpcy5fbm90aWZ5Q2hhbmdlKHQpLHRoaXMuX2FkanVzdEluc3REYXRlKHQpLHQuaW5wdXQmJnQuaW5wdXQudmFsKHM/XCJcIjp0aGlzLl9mb3JtYXREYXRlKHQpKX0sX2dldERhdGU6ZnVuY3Rpb24odCl7dmFyIGU9IXQuY3VycmVudFllYXJ8fHQuaW5wdXQmJlwiXCI9PT10LmlucHV0LnZhbCgpP251bGw6dGhpcy5fZGF5bGlnaHRTYXZpbmdBZGp1c3QobmV3IERhdGUodC5jdXJyZW50WWVhcix0LmN1cnJlbnRNb250aCx0LmN1cnJlbnREYXkpKTtyZXR1cm4gZX0sX2F0dGFjaEhhbmRsZXJzOmZ1bmN0aW9uKGUpe3ZhciBpPXRoaXMuX2dldChlLFwic3RlcE1vbnRoc1wiKSxzPVwiI1wiK2UuaWQucmVwbGFjZSgvXFxcXFxcXFwvZyxcIlxcXFxcIik7ZS5kcERpdi5maW5kKFwiW2RhdGEtaGFuZGxlcl1cIikubWFwKGZ1bmN0aW9uKCl7dmFyIGU9e3ByZXY6ZnVuY3Rpb24oKXt0LmRhdGVwaWNrZXIuX2FkanVzdERhdGUocywtaSxcIk1cIil9LG5leHQ6ZnVuY3Rpb24oKXt0LmRhdGVwaWNrZXIuX2FkanVzdERhdGUocywraSxcIk1cIil9LGhpZGU6ZnVuY3Rpb24oKXt0LmRhdGVwaWNrZXIuX2hpZGVEYXRlcGlja2VyKCl9LHRvZGF5OmZ1bmN0aW9uKCl7dC5kYXRlcGlja2VyLl9nb3RvVG9kYXkocyl9LHNlbGVjdERheTpmdW5jdGlvbigpe3JldHVybiB0LmRhdGVwaWNrZXIuX3NlbGVjdERheShzLCt0aGlzLmdldEF0dHJpYnV0ZShcImRhdGEtbW9udGhcIiksK3RoaXMuZ2V0QXR0cmlidXRlKFwiZGF0YS15ZWFyXCIpLHRoaXMpLCExfSxzZWxlY3RNb250aDpmdW5jdGlvbigpe3JldHVybiB0LmRhdGVwaWNrZXIuX3NlbGVjdE1vbnRoWWVhcihzLHRoaXMsXCJNXCIpLCExfSxzZWxlY3RZZWFyOmZ1bmN0aW9uKCl7cmV0dXJuIHQuZGF0ZXBpY2tlci5fc2VsZWN0TW9udGhZZWFyKHMsdGhpcyxcIllcIiksITF9fTt0KHRoaXMpLm9uKHRoaXMuZ2V0QXR0cmlidXRlKFwiZGF0YS1ldmVudFwiKSxlW3RoaXMuZ2V0QXR0cmlidXRlKFwiZGF0YS1oYW5kbGVyXCIpXSl9KX0sX2dlbmVyYXRlSFRNTDpmdW5jdGlvbih0KXt2YXIgZSxpLHMsbixvLGEscixoLGwsYyx1LGQscCxmLGcsbSxfLHYsYix5LHcsayx4LEMsRCxJLFQsUCxNLFMsSCx6LE8sQSxOLFcsRSxGLEwsUj1uZXcgRGF0ZSxCPXRoaXMuX2RheWxpZ2h0U2F2aW5nQWRqdXN0KG5ldyBEYXRlKFIuZ2V0RnVsbFllYXIoKSxSLmdldE1vbnRoKCksUi5nZXREYXRlKCkpKSxZPXRoaXMuX2dldCh0LFwiaXNSVExcIiksaj10aGlzLl9nZXQodCxcInNob3dCdXR0b25QYW5lbFwiKSxxPXRoaXMuX2dldCh0LFwiaGlkZUlmTm9QcmV2TmV4dFwiKSxLPXRoaXMuX2dldCh0LFwibmF2aWdhdGlvbkFzRGF0ZUZvcm1hdFwiKSxVPXRoaXMuX2dldE51bWJlck9mTW9udGhzKHQpLFY9dGhpcy5fZ2V0KHQsXCJzaG93Q3VycmVudEF0UG9zXCIpLCQ9dGhpcy5fZ2V0KHQsXCJzdGVwTW9udGhzXCIpLFg9MSE9PVVbMF18fDEhPT1VWzFdLEc9dGhpcy5fZGF5bGlnaHRTYXZpbmdBZGp1c3QodC5jdXJyZW50RGF5P25ldyBEYXRlKHQuY3VycmVudFllYXIsdC5jdXJyZW50TW9udGgsdC5jdXJyZW50RGF5KTpuZXcgRGF0ZSg5OTk5LDksOSkpLFE9dGhpcy5fZ2V0TWluTWF4RGF0ZSh0LFwibWluXCIpLEo9dGhpcy5fZ2V0TWluTWF4RGF0ZSh0LFwibWF4XCIpLFo9dC5kcmF3TW9udGgtVix0ZT10LmRyYXdZZWFyO2lmKDA+WiYmKForPTEyLHRlLS0pLEopZm9yKGU9dGhpcy5fZGF5bGlnaHRTYXZpbmdBZGp1c3QobmV3IERhdGUoSi5nZXRGdWxsWWVhcigpLEouZ2V0TW9udGgoKS1VWzBdKlVbMV0rMSxKLmdldERhdGUoKSkpLGU9USYmUT5lP1E6ZTt0aGlzLl9kYXlsaWdodFNhdmluZ0FkanVzdChuZXcgRGF0ZSh0ZSxaLDEpKT5lOylaLS0sMD5aJiYoWj0xMSx0ZS0tKTtmb3IodC5kcmF3TW9udGg9Wix0LmRyYXdZZWFyPXRlLGk9dGhpcy5fZ2V0KHQsXCJwcmV2VGV4dFwiKSxpPUs/dGhpcy5mb3JtYXREYXRlKGksdGhpcy5fZGF5bGlnaHRTYXZpbmdBZGp1c3QobmV3IERhdGUodGUsWi0kLDEpKSx0aGlzLl9nZXRGb3JtYXRDb25maWcodCkpOmkscz10aGlzLl9jYW5BZGp1c3RNb250aCh0LC0xLHRlLFopP1wiPGEgY2xhc3M9J3VpLWRhdGVwaWNrZXItcHJldiB1aS1jb3JuZXItYWxsJyBkYXRhLWhhbmRsZXI9J3ByZXYnIGRhdGEtZXZlbnQ9J2NsaWNrJyB0aXRsZT0nXCIraStcIic+PHNwYW4gY2xhc3M9J3VpLWljb24gdWktaWNvbi1jaXJjbGUtdHJpYW5nbGUtXCIrKFk/XCJlXCI6XCJ3XCIpK1wiJz5cIitpK1wiPC9zcGFuPjwvYT5cIjpxP1wiXCI6XCI8YSBjbGFzcz0ndWktZGF0ZXBpY2tlci1wcmV2IHVpLWNvcm5lci1hbGwgdWktc3RhdGUtZGlzYWJsZWQnIHRpdGxlPSdcIitpK1wiJz48c3BhbiBjbGFzcz0ndWktaWNvbiB1aS1pY29uLWNpcmNsZS10cmlhbmdsZS1cIisoWT9cImVcIjpcIndcIikrXCInPlwiK2krXCI8L3NwYW4+PC9hPlwiLG49dGhpcy5fZ2V0KHQsXCJuZXh0VGV4dFwiKSxuPUs/dGhpcy5mb3JtYXREYXRlKG4sdGhpcy5fZGF5bGlnaHRTYXZpbmdBZGp1c3QobmV3IERhdGUodGUsWiskLDEpKSx0aGlzLl9nZXRGb3JtYXRDb25maWcodCkpOm4sbz10aGlzLl9jYW5BZGp1c3RNb250aCh0LDEsdGUsWik/XCI8YSBjbGFzcz0ndWktZGF0ZXBpY2tlci1uZXh0IHVpLWNvcm5lci1hbGwnIGRhdGEtaGFuZGxlcj0nbmV4dCcgZGF0YS1ldmVudD0nY2xpY2snIHRpdGxlPSdcIituK1wiJz48c3BhbiBjbGFzcz0ndWktaWNvbiB1aS1pY29uLWNpcmNsZS10cmlhbmdsZS1cIisoWT9cIndcIjpcImVcIikrXCInPlwiK24rXCI8L3NwYW4+PC9hPlwiOnE/XCJcIjpcIjxhIGNsYXNzPSd1aS1kYXRlcGlja2VyLW5leHQgdWktY29ybmVyLWFsbCB1aS1zdGF0ZS1kaXNhYmxlZCcgdGl0bGU9J1wiK24rXCInPjxzcGFuIGNsYXNzPSd1aS1pY29uIHVpLWljb24tY2lyY2xlLXRyaWFuZ2xlLVwiKyhZP1wid1wiOlwiZVwiKStcIic+XCIrbitcIjwvc3Bhbj48L2E+XCIsYT10aGlzLl9nZXQodCxcImN1cnJlbnRUZXh0XCIpLHI9dGhpcy5fZ2V0KHQsXCJnb3RvQ3VycmVudFwiKSYmdC5jdXJyZW50RGF5P0c6QixhPUs/dGhpcy5mb3JtYXREYXRlKGEscix0aGlzLl9nZXRGb3JtYXRDb25maWcodCkpOmEsaD10LmlubGluZT9cIlwiOlwiPGJ1dHRvbiB0eXBlPSdidXR0b24nIGNsYXNzPSd1aS1kYXRlcGlja2VyLWNsb3NlIHVpLXN0YXRlLWRlZmF1bHQgdWktcHJpb3JpdHktcHJpbWFyeSB1aS1jb3JuZXItYWxsJyBkYXRhLWhhbmRsZXI9J2hpZGUnIGRhdGEtZXZlbnQ9J2NsaWNrJz5cIit0aGlzLl9nZXQodCxcImNsb3NlVGV4dFwiKStcIjwvYnV0dG9uPlwiLGw9aj9cIjxkaXYgY2xhc3M9J3VpLWRhdGVwaWNrZXItYnV0dG9ucGFuZSB1aS13aWRnZXQtY29udGVudCc+XCIrKFk/aDpcIlwiKSsodGhpcy5faXNJblJhbmdlKHQscik/XCI8YnV0dG9uIHR5cGU9J2J1dHRvbicgY2xhc3M9J3VpLWRhdGVwaWNrZXItY3VycmVudCB1aS1zdGF0ZS1kZWZhdWx0IHVpLXByaW9yaXR5LXNlY29uZGFyeSB1aS1jb3JuZXItYWxsJyBkYXRhLWhhbmRsZXI9J3RvZGF5JyBkYXRhLWV2ZW50PSdjbGljayc+XCIrYStcIjwvYnV0dG9uPlwiOlwiXCIpKyhZP1wiXCI6aCkrXCI8L2Rpdj5cIjpcIlwiLGM9cGFyc2VJbnQodGhpcy5fZ2V0KHQsXCJmaXJzdERheVwiKSwxMCksYz1pc05hTihjKT8wOmMsdT10aGlzLl9nZXQodCxcInNob3dXZWVrXCIpLGQ9dGhpcy5fZ2V0KHQsXCJkYXlOYW1lc1wiKSxwPXRoaXMuX2dldCh0LFwiZGF5TmFtZXNNaW5cIiksZj10aGlzLl9nZXQodCxcIm1vbnRoTmFtZXNcIiksZz10aGlzLl9nZXQodCxcIm1vbnRoTmFtZXNTaG9ydFwiKSxtPXRoaXMuX2dldCh0LFwiYmVmb3JlU2hvd0RheVwiKSxfPXRoaXMuX2dldCh0LFwic2hvd090aGVyTW9udGhzXCIpLHY9dGhpcy5fZ2V0KHQsXCJzZWxlY3RPdGhlck1vbnRoc1wiKSxiPXRoaXMuX2dldERlZmF1bHREYXRlKHQpLHk9XCJcIixrPTA7VVswXT5rO2srKyl7Zm9yKHg9XCJcIix0aGlzLm1heFJvd3M9NCxDPTA7VVsxXT5DO0MrKyl7aWYoRD10aGlzLl9kYXlsaWdodFNhdmluZ0FkanVzdChuZXcgRGF0ZSh0ZSxaLHQuc2VsZWN0ZWREYXkpKSxJPVwiIHVpLWNvcm5lci1hbGxcIixUPVwiXCIsWCl7aWYoVCs9XCI8ZGl2IGNsYXNzPSd1aS1kYXRlcGlja2VyLWdyb3VwXCIsVVsxXT4xKXN3aXRjaChDKXtjYXNlIDA6VCs9XCIgdWktZGF0ZXBpY2tlci1ncm91cC1maXJzdFwiLEk9XCIgdWktY29ybmVyLVwiKyhZP1wicmlnaHRcIjpcImxlZnRcIik7YnJlYWs7Y2FzZSBVWzFdLTE6VCs9XCIgdWktZGF0ZXBpY2tlci1ncm91cC1sYXN0XCIsST1cIiB1aS1jb3JuZXItXCIrKFk/XCJsZWZ0XCI6XCJyaWdodFwiKTticmVhaztkZWZhdWx0OlQrPVwiIHVpLWRhdGVwaWNrZXItZ3JvdXAtbWlkZGxlXCIsST1cIlwifVQrPVwiJz5cIn1mb3IoVCs9XCI8ZGl2IGNsYXNzPSd1aS1kYXRlcGlja2VyLWhlYWRlciB1aS13aWRnZXQtaGVhZGVyIHVpLWhlbHBlci1jbGVhcmZpeFwiK0krXCInPlwiKygvYWxsfGxlZnQvLnRlc3QoSSkmJjA9PT1rP1k/bzpzOlwiXCIpKygvYWxsfHJpZ2h0Ly50ZXN0KEkpJiYwPT09az9ZP3M6bzpcIlwiKSt0aGlzLl9nZW5lcmF0ZU1vbnRoWWVhckhlYWRlcih0LFosdGUsUSxKLGs+MHx8Qz4wLGYsZykrXCI8L2Rpdj48dGFibGUgY2xhc3M9J3VpLWRhdGVwaWNrZXItY2FsZW5kYXInPjx0aGVhZD5cIitcIjx0cj5cIixQPXU/XCI8dGggY2xhc3M9J3VpLWRhdGVwaWNrZXItd2Vlay1jb2wnPlwiK3RoaXMuX2dldCh0LFwid2Vla0hlYWRlclwiKStcIjwvdGg+XCI6XCJcIix3PTA7Nz53O3crKylNPSh3K2MpJTcsUCs9XCI8dGggc2NvcGU9J2NvbCdcIisoKHcrYys2KSU3Pj01P1wiIGNsYXNzPSd1aS1kYXRlcGlja2VyLXdlZWstZW5kJ1wiOlwiXCIpK1wiPlwiK1wiPHNwYW4gdGl0bGU9J1wiK2RbTV0rXCInPlwiK3BbTV0rXCI8L3NwYW4+PC90aD5cIjtmb3IoVCs9UCtcIjwvdHI+PC90aGVhZD48dGJvZHk+XCIsUz10aGlzLl9nZXREYXlzSW5Nb250aCh0ZSxaKSx0ZT09PXQuc2VsZWN0ZWRZZWFyJiZaPT09dC5zZWxlY3RlZE1vbnRoJiYodC5zZWxlY3RlZERheT1NYXRoLm1pbih0LnNlbGVjdGVkRGF5LFMpKSxIPSh0aGlzLl9nZXRGaXJzdERheU9mTW9udGgodGUsWiktYys3KSU3LHo9TWF0aC5jZWlsKChIK1MpLzcpLE89WD90aGlzLm1heFJvd3M+ej90aGlzLm1heFJvd3M6ejp6LHRoaXMubWF4Um93cz1PLEE9dGhpcy5fZGF5bGlnaHRTYXZpbmdBZGp1c3QobmV3IERhdGUodGUsWiwxLUgpKSxOPTA7Tz5OO04rKyl7Zm9yKFQrPVwiPHRyPlwiLFc9dT9cIjx0ZCBjbGFzcz0ndWktZGF0ZXBpY2tlci13ZWVrLWNvbCc+XCIrdGhpcy5fZ2V0KHQsXCJjYWxjdWxhdGVXZWVrXCIpKEEpK1wiPC90ZD5cIjpcIlwiLHc9MDs3Pnc7dysrKUU9bT9tLmFwcGx5KHQuaW5wdXQ/dC5pbnB1dFswXTpudWxsLFtBXSk6WyEwLFwiXCJdLEY9QS5nZXRNb250aCgpIT09WixMPUYmJiF2fHwhRVswXXx8USYmUT5BfHxKJiZBPkosVys9XCI8dGQgY2xhc3M9J1wiKygodytjKzYpJTc+PTU/XCIgdWktZGF0ZXBpY2tlci13ZWVrLWVuZFwiOlwiXCIpKyhGP1wiIHVpLWRhdGVwaWNrZXItb3RoZXItbW9udGhcIjpcIlwiKSsoQS5nZXRUaW1lKCk9PT1ELmdldFRpbWUoKSYmWj09PXQuc2VsZWN0ZWRNb250aCYmdC5fa2V5RXZlbnR8fGIuZ2V0VGltZSgpPT09QS5nZXRUaW1lKCkmJmIuZ2V0VGltZSgpPT09RC5nZXRUaW1lKCk/XCIgXCIrdGhpcy5fZGF5T3ZlckNsYXNzOlwiXCIpKyhMP1wiIFwiK3RoaXMuX3Vuc2VsZWN0YWJsZUNsYXNzK1wiIHVpLXN0YXRlLWRpc2FibGVkXCI6XCJcIikrKEYmJiFfP1wiXCI6XCIgXCIrRVsxXSsoQS5nZXRUaW1lKCk9PT1HLmdldFRpbWUoKT9cIiBcIit0aGlzLl9jdXJyZW50Q2xhc3M6XCJcIikrKEEuZ2V0VGltZSgpPT09Qi5nZXRUaW1lKCk/XCIgdWktZGF0ZXBpY2tlci10b2RheVwiOlwiXCIpKStcIidcIisoRiYmIV98fCFFWzJdP1wiXCI6XCIgdGl0bGU9J1wiK0VbMl0ucmVwbGFjZSgvJy9nLFwiJiMzOTtcIikrXCInXCIpKyhMP1wiXCI6XCIgZGF0YS1oYW5kbGVyPSdzZWxlY3REYXknIGRhdGEtZXZlbnQ9J2NsaWNrJyBkYXRhLW1vbnRoPSdcIitBLmdldE1vbnRoKCkrXCInIGRhdGEteWVhcj0nXCIrQS5nZXRGdWxsWWVhcigpK1wiJ1wiKStcIj5cIisoRiYmIV8/XCImI3hhMDtcIjpMP1wiPHNwYW4gY2xhc3M9J3VpLXN0YXRlLWRlZmF1bHQnPlwiK0EuZ2V0RGF0ZSgpK1wiPC9zcGFuPlwiOlwiPGEgY2xhc3M9J3VpLXN0YXRlLWRlZmF1bHRcIisoQS5nZXRUaW1lKCk9PT1CLmdldFRpbWUoKT9cIiB1aS1zdGF0ZS1oaWdobGlnaHRcIjpcIlwiKSsoQS5nZXRUaW1lKCk9PT1HLmdldFRpbWUoKT9cIiB1aS1zdGF0ZS1hY3RpdmVcIjpcIlwiKSsoRj9cIiB1aS1wcmlvcml0eS1zZWNvbmRhcnlcIjpcIlwiKStcIicgaHJlZj0nIyc+XCIrQS5nZXREYXRlKCkrXCI8L2E+XCIpK1wiPC90ZD5cIixBLnNldERhdGUoQS5nZXREYXRlKCkrMSksQT10aGlzLl9kYXlsaWdodFNhdmluZ0FkanVzdChBKTtUKz1XK1wiPC90cj5cIn1aKyssWj4xMSYmKFo9MCx0ZSsrKSxUKz1cIjwvdGJvZHk+PC90YWJsZT5cIisoWD9cIjwvZGl2PlwiKyhVWzBdPjAmJkM9PT1VWzFdLTE/XCI8ZGl2IGNsYXNzPSd1aS1kYXRlcGlja2VyLXJvdy1icmVhayc+PC9kaXY+XCI6XCJcIik6XCJcIikseCs9VH15Kz14fXJldHVybiB5Kz1sLHQuX2tleUV2ZW50PSExLHl9LF9nZW5lcmF0ZU1vbnRoWWVhckhlYWRlcjpmdW5jdGlvbih0LGUsaSxzLG4sbyxhLHIpe3ZhciBoLGwsYyx1LGQscCxmLGcsbT10aGlzLl9nZXQodCxcImNoYW5nZU1vbnRoXCIpLF89dGhpcy5fZ2V0KHQsXCJjaGFuZ2VZZWFyXCIpLHY9dGhpcy5fZ2V0KHQsXCJzaG93TW9udGhBZnRlclllYXJcIiksYj1cIjxkaXYgY2xhc3M9J3VpLWRhdGVwaWNrZXItdGl0bGUnPlwiLHk9XCJcIjtpZihvfHwhbSl5Kz1cIjxzcGFuIGNsYXNzPSd1aS1kYXRlcGlja2VyLW1vbnRoJz5cIithW2VdK1wiPC9zcGFuPlwiO2Vsc2V7Zm9yKGg9cyYmcy5nZXRGdWxsWWVhcigpPT09aSxsPW4mJm4uZ2V0RnVsbFllYXIoKT09PWkseSs9XCI8c2VsZWN0IGNsYXNzPSd1aS1kYXRlcGlja2VyLW1vbnRoJyBkYXRhLWhhbmRsZXI9J3NlbGVjdE1vbnRoJyBkYXRhLWV2ZW50PSdjaGFuZ2UnPlwiLGM9MDsxMj5jO2MrKykoIWh8fGM+PXMuZ2V0TW9udGgoKSkmJighbHx8bi5nZXRNb250aCgpPj1jKSYmKHkrPVwiPG9wdGlvbiB2YWx1ZT0nXCIrYytcIidcIisoYz09PWU/XCIgc2VsZWN0ZWQ9J3NlbGVjdGVkJ1wiOlwiXCIpK1wiPlwiK3JbY10rXCI8L29wdGlvbj5cIik7eSs9XCI8L3NlbGVjdD5cIn1pZih2fHwoYis9eSsoIW8mJm0mJl8/XCJcIjpcIiYjeGEwO1wiKSksIXQueWVhcnNodG1sKWlmKHQueWVhcnNodG1sPVwiXCIsb3x8IV8pYis9XCI8c3BhbiBjbGFzcz0ndWktZGF0ZXBpY2tlci15ZWFyJz5cIitpK1wiPC9zcGFuPlwiO2Vsc2V7Zm9yKHU9dGhpcy5fZ2V0KHQsXCJ5ZWFyUmFuZ2VcIikuc3BsaXQoXCI6XCIpLGQ9KG5ldyBEYXRlKS5nZXRGdWxsWWVhcigpLHA9ZnVuY3Rpb24odCl7dmFyIGU9dC5tYXRjaCgvY1srXFwtXS4qLyk/aStwYXJzZUludCh0LnN1YnN0cmluZygxKSwxMCk6dC5tYXRjaCgvWytcXC1dLiovKT9kK3BhcnNlSW50KHQsMTApOnBhcnNlSW50KHQsMTApO3JldHVybiBpc05hTihlKT9kOmV9LGY9cCh1WzBdKSxnPU1hdGgubWF4KGYscCh1WzFdfHxcIlwiKSksZj1zP01hdGgubWF4KGYscy5nZXRGdWxsWWVhcigpKTpmLGc9bj9NYXRoLm1pbihnLG4uZ2V0RnVsbFllYXIoKSk6Zyx0LnllYXJzaHRtbCs9XCI8c2VsZWN0IGNsYXNzPSd1aS1kYXRlcGlja2VyLXllYXInIGRhdGEtaGFuZGxlcj0nc2VsZWN0WWVhcicgZGF0YS1ldmVudD0nY2hhbmdlJz5cIjtnPj1mO2YrKyl0LnllYXJzaHRtbCs9XCI8b3B0aW9uIHZhbHVlPSdcIitmK1wiJ1wiKyhmPT09aT9cIiBzZWxlY3RlZD0nc2VsZWN0ZWQnXCI6XCJcIikrXCI+XCIrZitcIjwvb3B0aW9uPlwiO3QueWVhcnNodG1sKz1cIjwvc2VsZWN0PlwiLGIrPXQueWVhcnNodG1sLHQueWVhcnNodG1sPW51bGx9cmV0dXJuIGIrPXRoaXMuX2dldCh0LFwieWVhclN1ZmZpeFwiKSx2JiYoYis9KCFvJiZtJiZfP1wiXCI6XCImI3hhMDtcIikreSksYis9XCI8L2Rpdj5cIn0sX2FkanVzdEluc3REYXRlOmZ1bmN0aW9uKHQsZSxpKXt2YXIgcz10LnNlbGVjdGVkWWVhcisoXCJZXCI9PT1pP2U6MCksbj10LnNlbGVjdGVkTW9udGgrKFwiTVwiPT09aT9lOjApLG89TWF0aC5taW4odC5zZWxlY3RlZERheSx0aGlzLl9nZXREYXlzSW5Nb250aChzLG4pKSsoXCJEXCI9PT1pP2U6MCksYT10aGlzLl9yZXN0cmljdE1pbk1heCh0LHRoaXMuX2RheWxpZ2h0U2F2aW5nQWRqdXN0KG5ldyBEYXRlKHMsbixvKSkpO3Quc2VsZWN0ZWREYXk9YS5nZXREYXRlKCksdC5kcmF3TW9udGg9dC5zZWxlY3RlZE1vbnRoPWEuZ2V0TW9udGgoKSx0LmRyYXdZZWFyPXQuc2VsZWN0ZWRZZWFyPWEuZ2V0RnVsbFllYXIoKSwoXCJNXCI9PT1pfHxcIllcIj09PWkpJiZ0aGlzLl9ub3RpZnlDaGFuZ2UodCl9LF9yZXN0cmljdE1pbk1heDpmdW5jdGlvbih0LGUpe3ZhciBpPXRoaXMuX2dldE1pbk1heERhdGUodCxcIm1pblwiKSxzPXRoaXMuX2dldE1pbk1heERhdGUodCxcIm1heFwiKSxuPWkmJmk+ZT9pOmU7cmV0dXJuIHMmJm4+cz9zOm59LF9ub3RpZnlDaGFuZ2U6ZnVuY3Rpb24odCl7dmFyIGU9dGhpcy5fZ2V0KHQsXCJvbkNoYW5nZU1vbnRoWWVhclwiKTtlJiZlLmFwcGx5KHQuaW5wdXQ/dC5pbnB1dFswXTpudWxsLFt0LnNlbGVjdGVkWWVhcix0LnNlbGVjdGVkTW9udGgrMSx0XSl9LF9nZXROdW1iZXJPZk1vbnRoczpmdW5jdGlvbih0KXt2YXIgZT10aGlzLl9nZXQodCxcIm51bWJlck9mTW9udGhzXCIpO3JldHVybiBudWxsPT1lP1sxLDFdOlwibnVtYmVyXCI9PXR5cGVvZiBlP1sxLGVdOmV9LF9nZXRNaW5NYXhEYXRlOmZ1bmN0aW9uKHQsZSl7cmV0dXJuIHRoaXMuX2RldGVybWluZURhdGUodCx0aGlzLl9nZXQodCxlK1wiRGF0ZVwiKSxudWxsKX0sX2dldERheXNJbk1vbnRoOmZ1bmN0aW9uKHQsZSl7cmV0dXJuIDMyLXRoaXMuX2RheWxpZ2h0U2F2aW5nQWRqdXN0KG5ldyBEYXRlKHQsZSwzMikpLmdldERhdGUoKX0sX2dldEZpcnN0RGF5T2ZNb250aDpmdW5jdGlvbih0LGUpe3JldHVybiBuZXcgRGF0ZSh0LGUsMSkuZ2V0RGF5KCl9LF9jYW5BZGp1c3RNb250aDpmdW5jdGlvbih0LGUsaSxzKXt2YXIgbj10aGlzLl9nZXROdW1iZXJPZk1vbnRocyh0KSxvPXRoaXMuX2RheWxpZ2h0U2F2aW5nQWRqdXN0KG5ldyBEYXRlKGkscysoMD5lP2U6blswXSpuWzFdKSwxKSk7cmV0dXJuIDA+ZSYmby5zZXREYXRlKHRoaXMuX2dldERheXNJbk1vbnRoKG8uZ2V0RnVsbFllYXIoKSxvLmdldE1vbnRoKCkpKSx0aGlzLl9pc0luUmFuZ2UodCxvKX0sX2lzSW5SYW5nZTpmdW5jdGlvbih0LGUpe3ZhciBpLHMsbj10aGlzLl9nZXRNaW5NYXhEYXRlKHQsXCJtaW5cIiksbz10aGlzLl9nZXRNaW5NYXhEYXRlKHQsXCJtYXhcIiksYT1udWxsLHI9bnVsbCxoPXRoaXMuX2dldCh0LFwieWVhclJhbmdlXCIpO3JldHVybiBoJiYoaT1oLnNwbGl0KFwiOlwiKSxzPShuZXcgRGF0ZSkuZ2V0RnVsbFllYXIoKSxhPXBhcnNlSW50KGlbMF0sMTApLHI9cGFyc2VJbnQoaVsxXSwxMCksaVswXS5tYXRjaCgvWytcXC1dLiovKSYmKGErPXMpLGlbMV0ubWF0Y2goL1srXFwtXS4qLykmJihyKz1zKSksKCFufHxlLmdldFRpbWUoKT49bi5nZXRUaW1lKCkpJiYoIW98fGUuZ2V0VGltZSgpPD1vLmdldFRpbWUoKSkmJighYXx8ZS5nZXRGdWxsWWVhcigpPj1hKSYmKCFyfHxyPj1lLmdldEZ1bGxZZWFyKCkpfSxfZ2V0Rm9ybWF0Q29uZmlnOmZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMuX2dldCh0LFwic2hvcnRZZWFyQ3V0b2ZmXCIpO3JldHVybiBlPVwic3RyaW5nXCIhPXR5cGVvZiBlP2U6KG5ldyBEYXRlKS5nZXRGdWxsWWVhcigpJTEwMCtwYXJzZUludChlLDEwKSx7c2hvcnRZZWFyQ3V0b2ZmOmUsZGF5TmFtZXNTaG9ydDp0aGlzLl9nZXQodCxcImRheU5hbWVzU2hvcnRcIiksZGF5TmFtZXM6dGhpcy5fZ2V0KHQsXCJkYXlOYW1lc1wiKSxtb250aE5hbWVzU2hvcnQ6dGhpcy5fZ2V0KHQsXCJtb250aE5hbWVzU2hvcnRcIiksbW9udGhOYW1lczp0aGlzLl9nZXQodCxcIm1vbnRoTmFtZXNcIil9fSxfZm9ybWF0RGF0ZTpmdW5jdGlvbih0LGUsaSxzKXtlfHwodC5jdXJyZW50RGF5PXQuc2VsZWN0ZWREYXksdC5jdXJyZW50TW9udGg9dC5zZWxlY3RlZE1vbnRoLHQuY3VycmVudFllYXI9dC5zZWxlY3RlZFllYXIpO3ZhciBuPWU/XCJvYmplY3RcIj09dHlwZW9mIGU/ZTp0aGlzLl9kYXlsaWdodFNhdmluZ0FkanVzdChuZXcgRGF0ZShzLGksZSkpOnRoaXMuX2RheWxpZ2h0U2F2aW5nQWRqdXN0KG5ldyBEYXRlKHQuY3VycmVudFllYXIsdC5jdXJyZW50TW9udGgsdC5jdXJyZW50RGF5KSk7cmV0dXJuIHRoaXMuZm9ybWF0RGF0ZSh0aGlzLl9nZXQodCxcImRhdGVGb3JtYXRcIiksbix0aGlzLl9nZXRGb3JtYXRDb25maWcodCkpfX0pLHQuZm4uZGF0ZXBpY2tlcj1mdW5jdGlvbihlKXtpZighdGhpcy5sZW5ndGgpcmV0dXJuIHRoaXM7dC5kYXRlcGlja2VyLmluaXRpYWxpemVkfHwodChkb2N1bWVudCkub24oXCJtb3VzZWRvd25cIix0LmRhdGVwaWNrZXIuX2NoZWNrRXh0ZXJuYWxDbGljayksdC5kYXRlcGlja2VyLmluaXRpYWxpemVkPSEwKSwwPT09dChcIiNcIit0LmRhdGVwaWNrZXIuX21haW5EaXZJZCkubGVuZ3RoJiZ0KFwiYm9keVwiKS5hcHBlbmQodC5kYXRlcGlja2VyLmRwRGl2KTt2YXIgaT1BcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbChhcmd1bWVudHMsMSk7cmV0dXJuXCJzdHJpbmdcIiE9dHlwZW9mIGV8fFwiaXNEaXNhYmxlZFwiIT09ZSYmXCJnZXREYXRlXCIhPT1lJiZcIndpZGdldFwiIT09ZT9cIm9wdGlvblwiPT09ZSYmMj09PWFyZ3VtZW50cy5sZW5ndGgmJlwic3RyaW5nXCI9PXR5cGVvZiBhcmd1bWVudHNbMV0/dC5kYXRlcGlja2VyW1wiX1wiK2UrXCJEYXRlcGlja2VyXCJdLmFwcGx5KHQuZGF0ZXBpY2tlcixbdGhpc1swXV0uY29uY2F0KGkpKTp0aGlzLmVhY2goZnVuY3Rpb24oKXtcInN0cmluZ1wiPT10eXBlb2YgZT90LmRhdGVwaWNrZXJbXCJfXCIrZStcIkRhdGVwaWNrZXJcIl0uYXBwbHkodC5kYXRlcGlja2VyLFt0aGlzXS5jb25jYXQoaSkpOnQuZGF0ZXBpY2tlci5fYXR0YWNoRGF0ZXBpY2tlcih0aGlzLGUpfSk6dC5kYXRlcGlja2VyW1wiX1wiK2UrXCJEYXRlcGlja2VyXCJdLmFwcGx5KHQuZGF0ZXBpY2tlcixbdGhpc1swXV0uY29uY2F0KGkpKX0sdC5kYXRlcGlja2VyPW5ldyBzLHQuZGF0ZXBpY2tlci5pbml0aWFsaXplZD0hMSx0LmRhdGVwaWNrZXIudXVpZD0obmV3IERhdGUpLmdldFRpbWUoKSx0LmRhdGVwaWNrZXIudmVyc2lvbj1cIjEuMTIuMVwiLHQuZGF0ZXBpY2tlcix0LnVpLmllPSEhL21zaWUgW1xcdy5dKy8uZXhlYyhuYXZpZ2F0b3IudXNlckFnZW50LnRvTG93ZXJDYXNlKCkpO3ZhciBfPSExO3QoZG9jdW1lbnQpLm9uKFwibW91c2V1cFwiLGZ1bmN0aW9uKCl7Xz0hMX0pLHQud2lkZ2V0KFwidWkubW91c2VcIix7dmVyc2lvbjpcIjEuMTIuMVwiLG9wdGlvbnM6e2NhbmNlbDpcImlucHV0LCB0ZXh0YXJlYSwgYnV0dG9uLCBzZWxlY3QsIG9wdGlvblwiLGRpc3RhbmNlOjEsZGVsYXk6MH0sX21vdXNlSW5pdDpmdW5jdGlvbigpe3ZhciBlPXRoaXM7dGhpcy5lbGVtZW50Lm9uKFwibW91c2Vkb3duLlwiK3RoaXMud2lkZ2V0TmFtZSxmdW5jdGlvbih0KXtyZXR1cm4gZS5fbW91c2VEb3duKHQpfSkub24oXCJjbGljay5cIit0aGlzLndpZGdldE5hbWUsZnVuY3Rpb24oaSl7cmV0dXJuITA9PT10LmRhdGEoaS50YXJnZXQsZS53aWRnZXROYW1lK1wiLnByZXZlbnRDbGlja0V2ZW50XCIpPyh0LnJlbW92ZURhdGEoaS50YXJnZXQsZS53aWRnZXROYW1lK1wiLnByZXZlbnRDbGlja0V2ZW50XCIpLGkuc3RvcEltbWVkaWF0ZVByb3BhZ2F0aW9uKCksITEpOnZvaWQgMH0pLHRoaXMuc3RhcnRlZD0hMX0sX21vdXNlRGVzdHJveTpmdW5jdGlvbigpe3RoaXMuZWxlbWVudC5vZmYoXCIuXCIrdGhpcy53aWRnZXROYW1lKSx0aGlzLl9tb3VzZU1vdmVEZWxlZ2F0ZSYmdGhpcy5kb2N1bWVudC5vZmYoXCJtb3VzZW1vdmUuXCIrdGhpcy53aWRnZXROYW1lLHRoaXMuX21vdXNlTW92ZURlbGVnYXRlKS5vZmYoXCJtb3VzZXVwLlwiK3RoaXMud2lkZ2V0TmFtZSx0aGlzLl9tb3VzZVVwRGVsZWdhdGUpfSxfbW91c2VEb3duOmZ1bmN0aW9uKGUpe2lmKCFfKXt0aGlzLl9tb3VzZU1vdmVkPSExLHRoaXMuX21vdXNlU3RhcnRlZCYmdGhpcy5fbW91c2VVcChlKSx0aGlzLl9tb3VzZURvd25FdmVudD1lO3ZhciBpPXRoaXMscz0xPT09ZS53aGljaCxuPVwic3RyaW5nXCI9PXR5cGVvZiB0aGlzLm9wdGlvbnMuY2FuY2VsJiZlLnRhcmdldC5ub2RlTmFtZT90KGUudGFyZ2V0KS5jbG9zZXN0KHRoaXMub3B0aW9ucy5jYW5jZWwpLmxlbmd0aDohMTtyZXR1cm4gcyYmIW4mJnRoaXMuX21vdXNlQ2FwdHVyZShlKT8odGhpcy5tb3VzZURlbGF5TWV0PSF0aGlzLm9wdGlvbnMuZGVsYXksdGhpcy5tb3VzZURlbGF5TWV0fHwodGhpcy5fbW91c2VEZWxheVRpbWVyPXNldFRpbWVvdXQoZnVuY3Rpb24oKXtpLm1vdXNlRGVsYXlNZXQ9ITB9LHRoaXMub3B0aW9ucy5kZWxheSkpLHRoaXMuX21vdXNlRGlzdGFuY2VNZXQoZSkmJnRoaXMuX21vdXNlRGVsYXlNZXQoZSkmJih0aGlzLl9tb3VzZVN0YXJ0ZWQ9dGhpcy5fbW91c2VTdGFydChlKSE9PSExLCF0aGlzLl9tb3VzZVN0YXJ0ZWQpPyhlLnByZXZlbnREZWZhdWx0KCksITApOighMD09PXQuZGF0YShlLnRhcmdldCx0aGlzLndpZGdldE5hbWUrXCIucHJldmVudENsaWNrRXZlbnRcIikmJnQucmVtb3ZlRGF0YShlLnRhcmdldCx0aGlzLndpZGdldE5hbWUrXCIucHJldmVudENsaWNrRXZlbnRcIiksdGhpcy5fbW91c2VNb3ZlRGVsZWdhdGU9ZnVuY3Rpb24odCl7cmV0dXJuIGkuX21vdXNlTW92ZSh0KX0sdGhpcy5fbW91c2VVcERlbGVnYXRlPWZ1bmN0aW9uKHQpe3JldHVybiBpLl9tb3VzZVVwKHQpfSx0aGlzLmRvY3VtZW50Lm9uKFwibW91c2Vtb3ZlLlwiK3RoaXMud2lkZ2V0TmFtZSx0aGlzLl9tb3VzZU1vdmVEZWxlZ2F0ZSkub24oXCJtb3VzZXVwLlwiK3RoaXMud2lkZ2V0TmFtZSx0aGlzLl9tb3VzZVVwRGVsZWdhdGUpLGUucHJldmVudERlZmF1bHQoKSxfPSEwLCEwKSk6ITB9fSxfbW91c2VNb3ZlOmZ1bmN0aW9uKGUpe2lmKHRoaXMuX21vdXNlTW92ZWQpe2lmKHQudWkuaWUmJighZG9jdW1lbnQuZG9jdW1lbnRNb2RlfHw5PmRvY3VtZW50LmRvY3VtZW50TW9kZSkmJiFlLmJ1dHRvbilyZXR1cm4gdGhpcy5fbW91c2VVcChlKTtpZighZS53aGljaClpZihlLm9yaWdpbmFsRXZlbnQuYWx0S2V5fHxlLm9yaWdpbmFsRXZlbnQuY3RybEtleXx8ZS5vcmlnaW5hbEV2ZW50Lm1ldGFLZXl8fGUub3JpZ2luYWxFdmVudC5zaGlmdEtleSl0aGlzLmlnbm9yZU1pc3NpbmdXaGljaD0hMDtlbHNlIGlmKCF0aGlzLmlnbm9yZU1pc3NpbmdXaGljaClyZXR1cm4gdGhpcy5fbW91c2VVcChlKX1yZXR1cm4oZS53aGljaHx8ZS5idXR0b24pJiYodGhpcy5fbW91c2VNb3ZlZD0hMCksdGhpcy5fbW91c2VTdGFydGVkPyh0aGlzLl9tb3VzZURyYWcoZSksZS5wcmV2ZW50RGVmYXVsdCgpKToodGhpcy5fbW91c2VEaXN0YW5jZU1ldChlKSYmdGhpcy5fbW91c2VEZWxheU1ldChlKSYmKHRoaXMuX21vdXNlU3RhcnRlZD10aGlzLl9tb3VzZVN0YXJ0KHRoaXMuX21vdXNlRG93bkV2ZW50LGUpIT09ITEsdGhpcy5fbW91c2VTdGFydGVkP3RoaXMuX21vdXNlRHJhZyhlKTp0aGlzLl9tb3VzZVVwKGUpKSwhdGhpcy5fbW91c2VTdGFydGVkKX0sX21vdXNlVXA6ZnVuY3Rpb24oZSl7dGhpcy5kb2N1bWVudC5vZmYoXCJtb3VzZW1vdmUuXCIrdGhpcy53aWRnZXROYW1lLHRoaXMuX21vdXNlTW92ZURlbGVnYXRlKS5vZmYoXCJtb3VzZXVwLlwiK3RoaXMud2lkZ2V0TmFtZSx0aGlzLl9tb3VzZVVwRGVsZWdhdGUpLHRoaXMuX21vdXNlU3RhcnRlZCYmKHRoaXMuX21vdXNlU3RhcnRlZD0hMSxlLnRhcmdldD09PXRoaXMuX21vdXNlRG93bkV2ZW50LnRhcmdldCYmdC5kYXRhKGUudGFyZ2V0LHRoaXMud2lkZ2V0TmFtZStcIi5wcmV2ZW50Q2xpY2tFdmVudFwiLCEwKSx0aGlzLl9tb3VzZVN0b3AoZSkpLHRoaXMuX21vdXNlRGVsYXlUaW1lciYmKGNsZWFyVGltZW91dCh0aGlzLl9tb3VzZURlbGF5VGltZXIpLGRlbGV0ZSB0aGlzLl9tb3VzZURlbGF5VGltZXIpLHRoaXMuaWdub3JlTWlzc2luZ1doaWNoPSExLF89ITEsZS5wcmV2ZW50RGVmYXVsdCgpfSxfbW91c2VEaXN0YW5jZU1ldDpmdW5jdGlvbih0KXtyZXR1cm4gTWF0aC5tYXgoTWF0aC5hYnModGhpcy5fbW91c2VEb3duRXZlbnQucGFnZVgtdC5wYWdlWCksTWF0aC5hYnModGhpcy5fbW91c2VEb3duRXZlbnQucGFnZVktdC5wYWdlWSkpPj10aGlzLm9wdGlvbnMuZGlzdGFuY2V9LF9tb3VzZURlbGF5TWV0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMubW91c2VEZWxheU1ldH0sX21vdXNlU3RhcnQ6ZnVuY3Rpb24oKXt9LF9tb3VzZURyYWc6ZnVuY3Rpb24oKXt9LF9tb3VzZVN0b3A6ZnVuY3Rpb24oKXt9LF9tb3VzZUNhcHR1cmU6ZnVuY3Rpb24oKXtyZXR1cm4hMH19KSx0LnVpLnBsdWdpbj17YWRkOmZ1bmN0aW9uKGUsaSxzKXt2YXIgbixvPXQudWlbZV0ucHJvdG90eXBlO2ZvcihuIGluIHMpby5wbHVnaW5zW25dPW8ucGx1Z2luc1tuXXx8W10sby5wbHVnaW5zW25dLnB1c2goW2ksc1tuXV0pfSxjYWxsOmZ1bmN0aW9uKHQsZSxpLHMpe3ZhciBuLG89dC5wbHVnaW5zW2VdO2lmKG8mJihzfHx0LmVsZW1lbnRbMF0ucGFyZW50Tm9kZSYmMTEhPT10LmVsZW1lbnRbMF0ucGFyZW50Tm9kZS5ub2RlVHlwZSkpZm9yKG49MDtvLmxlbmd0aD5uO24rKyl0Lm9wdGlvbnNbb1tuXVswXV0mJm9bbl1bMV0uYXBwbHkodC5lbGVtZW50LGkpfX0sdC51aS5zYWZlQmx1cj1mdW5jdGlvbihlKXtlJiZcImJvZHlcIiE9PWUubm9kZU5hbWUudG9Mb3dlckNhc2UoKSYmdChlKS50cmlnZ2VyKFwiYmx1clwiKX0sdC53aWRnZXQoXCJ1aS5kcmFnZ2FibGVcIix0LnVpLm1vdXNlLHt2ZXJzaW9uOlwiMS4xMi4xXCIsd2lkZ2V0RXZlbnRQcmVmaXg6XCJkcmFnXCIsb3B0aW9uczp7YWRkQ2xhc3NlczohMCxhcHBlbmRUbzpcInBhcmVudFwiLGF4aXM6ITEsY29ubmVjdFRvU29ydGFibGU6ITEsY29udGFpbm1lbnQ6ITEsY3Vyc29yOlwiYXV0b1wiLGN1cnNvckF0OiExLGdyaWQ6ITEsaGFuZGxlOiExLGhlbHBlcjpcIm9yaWdpbmFsXCIsaWZyYW1lRml4OiExLG9wYWNpdHk6ITEscmVmcmVzaFBvc2l0aW9uczohMSxyZXZlcnQ6ITEscmV2ZXJ0RHVyYXRpb246NTAwLHNjb3BlOlwiZGVmYXVsdFwiLHNjcm9sbDohMCxzY3JvbGxTZW5zaXRpdml0eToyMCxzY3JvbGxTcGVlZDoyMCxzbmFwOiExLHNuYXBNb2RlOlwiYm90aFwiLHNuYXBUb2xlcmFuY2U6MjAsc3RhY2s6ITEsekluZGV4OiExLGRyYWc6bnVsbCxzdGFydDpudWxsLHN0b3A6bnVsbH0sX2NyZWF0ZTpmdW5jdGlvbigpe1wib3JpZ2luYWxcIj09PXRoaXMub3B0aW9ucy5oZWxwZXImJnRoaXMuX3NldFBvc2l0aW9uUmVsYXRpdmUoKSx0aGlzLm9wdGlvbnMuYWRkQ2xhc3NlcyYmdGhpcy5fYWRkQ2xhc3MoXCJ1aS1kcmFnZ2FibGVcIiksdGhpcy5fc2V0SGFuZGxlQ2xhc3NOYW1lKCksdGhpcy5fbW91c2VJbml0KCl9LF9zZXRPcHRpb246ZnVuY3Rpb24odCxlKXt0aGlzLl9zdXBlcih0LGUpLFwiaGFuZGxlXCI9PT10JiYodGhpcy5fcmVtb3ZlSGFuZGxlQ2xhc3NOYW1lKCksdGhpcy5fc2V0SGFuZGxlQ2xhc3NOYW1lKCkpfSxfZGVzdHJveTpmdW5jdGlvbigpe3JldHVybih0aGlzLmhlbHBlcnx8dGhpcy5lbGVtZW50KS5pcyhcIi51aS1kcmFnZ2FibGUtZHJhZ2dpbmdcIik/KHRoaXMuZGVzdHJveU9uQ2xlYXI9ITAsdm9pZCAwKToodGhpcy5fcmVtb3ZlSGFuZGxlQ2xhc3NOYW1lKCksdGhpcy5fbW91c2VEZXN0cm95KCksdm9pZCAwKX0sX21vdXNlQ2FwdHVyZTpmdW5jdGlvbihlKXt2YXIgaT10aGlzLm9wdGlvbnM7cmV0dXJuIHRoaXMuaGVscGVyfHxpLmRpc2FibGVkfHx0KGUudGFyZ2V0KS5jbG9zZXN0KFwiLnVpLXJlc2l6YWJsZS1oYW5kbGVcIikubGVuZ3RoPjA/ITE6KHRoaXMuaGFuZGxlPXRoaXMuX2dldEhhbmRsZShlKSx0aGlzLmhhbmRsZT8odGhpcy5fYmx1ckFjdGl2ZUVsZW1lbnQoZSksdGhpcy5fYmxvY2tGcmFtZXMoaS5pZnJhbWVGaXg9PT0hMD9cImlmcmFtZVwiOmkuaWZyYW1lRml4KSwhMCk6ITEpfSxfYmxvY2tGcmFtZXM6ZnVuY3Rpb24oZSl7dGhpcy5pZnJhbWVCbG9ja3M9dGhpcy5kb2N1bWVudC5maW5kKGUpLm1hcChmdW5jdGlvbigpe3ZhciBlPXQodGhpcyk7cmV0dXJuIHQoXCI8ZGl2PlwiKS5jc3MoXCJwb3NpdGlvblwiLFwiYWJzb2x1dGVcIikuYXBwZW5kVG8oZS5wYXJlbnQoKSkub3V0ZXJXaWR0aChlLm91dGVyV2lkdGgoKSkub3V0ZXJIZWlnaHQoZS5vdXRlckhlaWdodCgpKS5vZmZzZXQoZS5vZmZzZXQoKSlbMF19KX0sX3VuYmxvY2tGcmFtZXM6ZnVuY3Rpb24oKXt0aGlzLmlmcmFtZUJsb2NrcyYmKHRoaXMuaWZyYW1lQmxvY2tzLnJlbW92ZSgpLGRlbGV0ZSB0aGlzLmlmcmFtZUJsb2Nrcyl9LF9ibHVyQWN0aXZlRWxlbWVudDpmdW5jdGlvbihlKXt2YXIgaT10LnVpLnNhZmVBY3RpdmVFbGVtZW50KHRoaXMuZG9jdW1lbnRbMF0pLHM9dChlLnRhcmdldCk7cy5jbG9zZXN0KGkpLmxlbmd0aHx8dC51aS5zYWZlQmx1cihpKX0sX21vdXNlU3RhcnQ6ZnVuY3Rpb24oZSl7dmFyIGk9dGhpcy5vcHRpb25zO3JldHVybiB0aGlzLmhlbHBlcj10aGlzLl9jcmVhdGVIZWxwZXIoZSksdGhpcy5fYWRkQ2xhc3ModGhpcy5oZWxwZXIsXCJ1aS1kcmFnZ2FibGUtZHJhZ2dpbmdcIiksdGhpcy5fY2FjaGVIZWxwZXJQcm9wb3J0aW9ucygpLHQudWkuZGRtYW5hZ2VyJiYodC51aS5kZG1hbmFnZXIuY3VycmVudD10aGlzKSx0aGlzLl9jYWNoZU1hcmdpbnMoKSx0aGlzLmNzc1Bvc2l0aW9uPXRoaXMuaGVscGVyLmNzcyhcInBvc2l0aW9uXCIpLHRoaXMuc2Nyb2xsUGFyZW50PXRoaXMuaGVscGVyLnNjcm9sbFBhcmVudCghMCksdGhpcy5vZmZzZXRQYXJlbnQ9dGhpcy5oZWxwZXIub2Zmc2V0UGFyZW50KCksdGhpcy5oYXNGaXhlZEFuY2VzdG9yPXRoaXMuaGVscGVyLnBhcmVudHMoKS5maWx0ZXIoZnVuY3Rpb24oKXtyZXR1cm5cImZpeGVkXCI9PT10KHRoaXMpLmNzcyhcInBvc2l0aW9uXCIpfSkubGVuZ3RoPjAsdGhpcy5wb3NpdGlvbkFicz10aGlzLmVsZW1lbnQub2Zmc2V0KCksdGhpcy5fcmVmcmVzaE9mZnNldHMoZSksdGhpcy5vcmlnaW5hbFBvc2l0aW9uPXRoaXMucG9zaXRpb249dGhpcy5fZ2VuZXJhdGVQb3NpdGlvbihlLCExKSx0aGlzLm9yaWdpbmFsUGFnZVg9ZS5wYWdlWCx0aGlzLm9yaWdpbmFsUGFnZVk9ZS5wYWdlWSxpLmN1cnNvckF0JiZ0aGlzLl9hZGp1c3RPZmZzZXRGcm9tSGVscGVyKGkuY3Vyc29yQXQpLHRoaXMuX3NldENvbnRhaW5tZW50KCksdGhpcy5fdHJpZ2dlcihcInN0YXJ0XCIsZSk9PT0hMT8odGhpcy5fY2xlYXIoKSwhMSk6KHRoaXMuX2NhY2hlSGVscGVyUHJvcG9ydGlvbnMoKSx0LnVpLmRkbWFuYWdlciYmIWkuZHJvcEJlaGF2aW91ciYmdC51aS5kZG1hbmFnZXIucHJlcGFyZU9mZnNldHModGhpcyxlKSx0aGlzLl9tb3VzZURyYWcoZSwhMCksdC51aS5kZG1hbmFnZXImJnQudWkuZGRtYW5hZ2VyLmRyYWdTdGFydCh0aGlzLGUpLCEwKX0sX3JlZnJlc2hPZmZzZXRzOmZ1bmN0aW9uKHQpe3RoaXMub2Zmc2V0PXt0b3A6dGhpcy5wb3NpdGlvbkFicy50b3AtdGhpcy5tYXJnaW5zLnRvcCxsZWZ0OnRoaXMucG9zaXRpb25BYnMubGVmdC10aGlzLm1hcmdpbnMubGVmdCxzY3JvbGw6ITEscGFyZW50OnRoaXMuX2dldFBhcmVudE9mZnNldCgpLHJlbGF0aXZlOnRoaXMuX2dldFJlbGF0aXZlT2Zmc2V0KCl9LHRoaXMub2Zmc2V0LmNsaWNrPXtsZWZ0OnQucGFnZVgtdGhpcy5vZmZzZXQubGVmdCx0b3A6dC5wYWdlWS10aGlzLm9mZnNldC50b3B9fSxfbW91c2VEcmFnOmZ1bmN0aW9uKGUsaSl7aWYodGhpcy5oYXNGaXhlZEFuY2VzdG9yJiYodGhpcy5vZmZzZXQucGFyZW50PXRoaXMuX2dldFBhcmVudE9mZnNldCgpKSx0aGlzLnBvc2l0aW9uPXRoaXMuX2dlbmVyYXRlUG9zaXRpb24oZSwhMCksdGhpcy5wb3NpdGlvbkFicz10aGlzLl9jb252ZXJ0UG9zaXRpb25UbyhcImFic29sdXRlXCIpLCFpKXt2YXIgcz10aGlzLl91aUhhc2goKTtpZih0aGlzLl90cmlnZ2VyKFwiZHJhZ1wiLGUscyk9PT0hMSlyZXR1cm4gdGhpcy5fbW91c2VVcChuZXcgdC5FdmVudChcIm1vdXNldXBcIixlKSksITE7dGhpcy5wb3NpdGlvbj1zLnBvc2l0aW9ufXJldHVybiB0aGlzLmhlbHBlclswXS5zdHlsZS5sZWZ0PXRoaXMucG9zaXRpb24ubGVmdCtcInB4XCIsdGhpcy5oZWxwZXJbMF0uc3R5bGUudG9wPXRoaXMucG9zaXRpb24udG9wK1wicHhcIix0LnVpLmRkbWFuYWdlciYmdC51aS5kZG1hbmFnZXIuZHJhZyh0aGlzLGUpLCExfSxfbW91c2VTdG9wOmZ1bmN0aW9uKGUpe3ZhciBpPXRoaXMscz0hMTtyZXR1cm4gdC51aS5kZG1hbmFnZXImJiF0aGlzLm9wdGlvbnMuZHJvcEJlaGF2aW91ciYmKHM9dC51aS5kZG1hbmFnZXIuZHJvcCh0aGlzLGUpKSx0aGlzLmRyb3BwZWQmJihzPXRoaXMuZHJvcHBlZCx0aGlzLmRyb3BwZWQ9ITEpLFwiaW52YWxpZFwiPT09dGhpcy5vcHRpb25zLnJldmVydCYmIXN8fFwidmFsaWRcIj09PXRoaXMub3B0aW9ucy5yZXZlcnQmJnN8fHRoaXMub3B0aW9ucy5yZXZlcnQ9PT0hMHx8dC5pc0Z1bmN0aW9uKHRoaXMub3B0aW9ucy5yZXZlcnQpJiZ0aGlzLm9wdGlvbnMucmV2ZXJ0LmNhbGwodGhpcy5lbGVtZW50LHMpP3QodGhpcy5oZWxwZXIpLmFuaW1hdGUodGhpcy5vcmlnaW5hbFBvc2l0aW9uLHBhcnNlSW50KHRoaXMub3B0aW9ucy5yZXZlcnREdXJhdGlvbiwxMCksZnVuY3Rpb24oKXtpLl90cmlnZ2VyKFwic3RvcFwiLGUpIT09ITEmJmkuX2NsZWFyKCl9KTp0aGlzLl90cmlnZ2VyKFwic3RvcFwiLGUpIT09ITEmJnRoaXMuX2NsZWFyKCksITF9LF9tb3VzZVVwOmZ1bmN0aW9uKGUpe3JldHVybiB0aGlzLl91bmJsb2NrRnJhbWVzKCksdC51aS5kZG1hbmFnZXImJnQudWkuZGRtYW5hZ2VyLmRyYWdTdG9wKHRoaXMsZSksdGhpcy5oYW5kbGVFbGVtZW50LmlzKGUudGFyZ2V0KSYmdGhpcy5lbGVtZW50LnRyaWdnZXIoXCJmb2N1c1wiKSx0LnVpLm1vdXNlLnByb3RvdHlwZS5fbW91c2VVcC5jYWxsKHRoaXMsZSl9LGNhbmNlbDpmdW5jdGlvbigpe3JldHVybiB0aGlzLmhlbHBlci5pcyhcIi51aS1kcmFnZ2FibGUtZHJhZ2dpbmdcIik/dGhpcy5fbW91c2VVcChuZXcgdC5FdmVudChcIm1vdXNldXBcIix7dGFyZ2V0OnRoaXMuZWxlbWVudFswXX0pKTp0aGlzLl9jbGVhcigpLHRoaXN9LF9nZXRIYW5kbGU6ZnVuY3Rpb24oZSl7cmV0dXJuIHRoaXMub3B0aW9ucy5oYW5kbGU/ISF0KGUudGFyZ2V0KS5jbG9zZXN0KHRoaXMuZWxlbWVudC5maW5kKHRoaXMub3B0aW9ucy5oYW5kbGUpKS5sZW5ndGg6ITB9LF9zZXRIYW5kbGVDbGFzc05hbWU6ZnVuY3Rpb24oKXt0aGlzLmhhbmRsZUVsZW1lbnQ9dGhpcy5vcHRpb25zLmhhbmRsZT90aGlzLmVsZW1lbnQuZmluZCh0aGlzLm9wdGlvbnMuaGFuZGxlKTp0aGlzLmVsZW1lbnQsdGhpcy5fYWRkQ2xhc3ModGhpcy5oYW5kbGVFbGVtZW50LFwidWktZHJhZ2dhYmxlLWhhbmRsZVwiKX0sX3JlbW92ZUhhbmRsZUNsYXNzTmFtZTpmdW5jdGlvbigpe3RoaXMuX3JlbW92ZUNsYXNzKHRoaXMuaGFuZGxlRWxlbWVudCxcInVpLWRyYWdnYWJsZS1oYW5kbGVcIil9LF9jcmVhdGVIZWxwZXI6ZnVuY3Rpb24oZSl7dmFyIGk9dGhpcy5vcHRpb25zLHM9dC5pc0Z1bmN0aW9uKGkuaGVscGVyKSxuPXM/dChpLmhlbHBlci5hcHBseSh0aGlzLmVsZW1lbnRbMF0sW2VdKSk6XCJjbG9uZVwiPT09aS5oZWxwZXI/dGhpcy5lbGVtZW50LmNsb25lKCkucmVtb3ZlQXR0cihcImlkXCIpOnRoaXMuZWxlbWVudDtyZXR1cm4gbi5wYXJlbnRzKFwiYm9keVwiKS5sZW5ndGh8fG4uYXBwZW5kVG8oXCJwYXJlbnRcIj09PWkuYXBwZW5kVG8/dGhpcy5lbGVtZW50WzBdLnBhcmVudE5vZGU6aS5hcHBlbmRUbykscyYmblswXT09PXRoaXMuZWxlbWVudFswXSYmdGhpcy5fc2V0UG9zaXRpb25SZWxhdGl2ZSgpLG5bMF09PT10aGlzLmVsZW1lbnRbMF18fC8oZml4ZWR8YWJzb2x1dGUpLy50ZXN0KG4uY3NzKFwicG9zaXRpb25cIikpfHxuLmNzcyhcInBvc2l0aW9uXCIsXCJhYnNvbHV0ZVwiKSxufSxfc2V0UG9zaXRpb25SZWxhdGl2ZTpmdW5jdGlvbigpey9eKD86cnxhfGYpLy50ZXN0KHRoaXMuZWxlbWVudC5jc3MoXCJwb3NpdGlvblwiKSl8fCh0aGlzLmVsZW1lbnRbMF0uc3R5bGUucG9zaXRpb249XCJyZWxhdGl2ZVwiKX0sX2FkanVzdE9mZnNldEZyb21IZWxwZXI6ZnVuY3Rpb24oZSl7XCJzdHJpbmdcIj09dHlwZW9mIGUmJihlPWUuc3BsaXQoXCIgXCIpKSx0LmlzQXJyYXkoZSkmJihlPXtsZWZ0OitlWzBdLHRvcDorZVsxXXx8MH0pLFwibGVmdFwiaW4gZSYmKHRoaXMub2Zmc2V0LmNsaWNrLmxlZnQ9ZS5sZWZ0K3RoaXMubWFyZ2lucy5sZWZ0KSxcInJpZ2h0XCJpbiBlJiYodGhpcy5vZmZzZXQuY2xpY2subGVmdD10aGlzLmhlbHBlclByb3BvcnRpb25zLndpZHRoLWUucmlnaHQrdGhpcy5tYXJnaW5zLmxlZnQpLFwidG9wXCJpbiBlJiYodGhpcy5vZmZzZXQuY2xpY2sudG9wPWUudG9wK3RoaXMubWFyZ2lucy50b3ApLFwiYm90dG9tXCJpbiBlJiYodGhpcy5vZmZzZXQuY2xpY2sudG9wPXRoaXMuaGVscGVyUHJvcG9ydGlvbnMuaGVpZ2h0LWUuYm90dG9tK3RoaXMubWFyZ2lucy50b3ApfSxfaXNSb290Tm9kZTpmdW5jdGlvbih0KXtyZXR1cm4vKGh0bWx8Ym9keSkvaS50ZXN0KHQudGFnTmFtZSl8fHQ9PT10aGlzLmRvY3VtZW50WzBdfSxfZ2V0UGFyZW50T2Zmc2V0OmZ1bmN0aW9uKCl7dmFyIGU9dGhpcy5vZmZzZXRQYXJlbnQub2Zmc2V0KCksaT10aGlzLmRvY3VtZW50WzBdO3JldHVyblwiYWJzb2x1dGVcIj09PXRoaXMuY3NzUG9zaXRpb24mJnRoaXMuc2Nyb2xsUGFyZW50WzBdIT09aSYmdC5jb250YWlucyh0aGlzLnNjcm9sbFBhcmVudFswXSx0aGlzLm9mZnNldFBhcmVudFswXSkmJihlLmxlZnQrPXRoaXMuc2Nyb2xsUGFyZW50LnNjcm9sbExlZnQoKSxlLnRvcCs9dGhpcy5zY3JvbGxQYXJlbnQuc2Nyb2xsVG9wKCkpLHRoaXMuX2lzUm9vdE5vZGUodGhpcy5vZmZzZXRQYXJlbnRbMF0pJiYoZT17dG9wOjAsbGVmdDowfSkse3RvcDplLnRvcCsocGFyc2VJbnQodGhpcy5vZmZzZXRQYXJlbnQuY3NzKFwiYm9yZGVyVG9wV2lkdGhcIiksMTApfHwwKSxsZWZ0OmUubGVmdCsocGFyc2VJbnQodGhpcy5vZmZzZXRQYXJlbnQuY3NzKFwiYm9yZGVyTGVmdFdpZHRoXCIpLDEwKXx8MCl9fSxfZ2V0UmVsYXRpdmVPZmZzZXQ6ZnVuY3Rpb24oKXtpZihcInJlbGF0aXZlXCIhPT10aGlzLmNzc1Bvc2l0aW9uKXJldHVybnt0b3A6MCxsZWZ0OjB9O3ZhciB0PXRoaXMuZWxlbWVudC5wb3NpdGlvbigpLGU9dGhpcy5faXNSb290Tm9kZSh0aGlzLnNjcm9sbFBhcmVudFswXSk7cmV0dXJue3RvcDp0LnRvcC0ocGFyc2VJbnQodGhpcy5oZWxwZXIuY3NzKFwidG9wXCIpLDEwKXx8MCkrKGU/MDp0aGlzLnNjcm9sbFBhcmVudC5zY3JvbGxUb3AoKSksbGVmdDp0LmxlZnQtKHBhcnNlSW50KHRoaXMuaGVscGVyLmNzcyhcImxlZnRcIiksMTApfHwwKSsoZT8wOnRoaXMuc2Nyb2xsUGFyZW50LnNjcm9sbExlZnQoKSl9XG59LF9jYWNoZU1hcmdpbnM6ZnVuY3Rpb24oKXt0aGlzLm1hcmdpbnM9e2xlZnQ6cGFyc2VJbnQodGhpcy5lbGVtZW50LmNzcyhcIm1hcmdpbkxlZnRcIiksMTApfHwwLHRvcDpwYXJzZUludCh0aGlzLmVsZW1lbnQuY3NzKFwibWFyZ2luVG9wXCIpLDEwKXx8MCxyaWdodDpwYXJzZUludCh0aGlzLmVsZW1lbnQuY3NzKFwibWFyZ2luUmlnaHRcIiksMTApfHwwLGJvdHRvbTpwYXJzZUludCh0aGlzLmVsZW1lbnQuY3NzKFwibWFyZ2luQm90dG9tXCIpLDEwKXx8MH19LF9jYWNoZUhlbHBlclByb3BvcnRpb25zOmZ1bmN0aW9uKCl7dGhpcy5oZWxwZXJQcm9wb3J0aW9ucz17d2lkdGg6dGhpcy5oZWxwZXIub3V0ZXJXaWR0aCgpLGhlaWdodDp0aGlzLmhlbHBlci5vdXRlckhlaWdodCgpfX0sX3NldENvbnRhaW5tZW50OmZ1bmN0aW9uKCl7dmFyIGUsaSxzLG49dGhpcy5vcHRpb25zLG89dGhpcy5kb2N1bWVudFswXTtyZXR1cm4gdGhpcy5yZWxhdGl2ZUNvbnRhaW5lcj1udWxsLG4uY29udGFpbm1lbnQ/XCJ3aW5kb3dcIj09PW4uY29udGFpbm1lbnQ/KHRoaXMuY29udGFpbm1lbnQ9W3Qod2luZG93KS5zY3JvbGxMZWZ0KCktdGhpcy5vZmZzZXQucmVsYXRpdmUubGVmdC10aGlzLm9mZnNldC5wYXJlbnQubGVmdCx0KHdpbmRvdykuc2Nyb2xsVG9wKCktdGhpcy5vZmZzZXQucmVsYXRpdmUudG9wLXRoaXMub2Zmc2V0LnBhcmVudC50b3AsdCh3aW5kb3cpLnNjcm9sbExlZnQoKSt0KHdpbmRvdykud2lkdGgoKS10aGlzLmhlbHBlclByb3BvcnRpb25zLndpZHRoLXRoaXMubWFyZ2lucy5sZWZ0LHQod2luZG93KS5zY3JvbGxUb3AoKSsodCh3aW5kb3cpLmhlaWdodCgpfHxvLmJvZHkucGFyZW50Tm9kZS5zY3JvbGxIZWlnaHQpLXRoaXMuaGVscGVyUHJvcG9ydGlvbnMuaGVpZ2h0LXRoaXMubWFyZ2lucy50b3BdLHZvaWQgMCk6XCJkb2N1bWVudFwiPT09bi5jb250YWlubWVudD8odGhpcy5jb250YWlubWVudD1bMCwwLHQobykud2lkdGgoKS10aGlzLmhlbHBlclByb3BvcnRpb25zLndpZHRoLXRoaXMubWFyZ2lucy5sZWZ0LCh0KG8pLmhlaWdodCgpfHxvLmJvZHkucGFyZW50Tm9kZS5zY3JvbGxIZWlnaHQpLXRoaXMuaGVscGVyUHJvcG9ydGlvbnMuaGVpZ2h0LXRoaXMubWFyZ2lucy50b3BdLHZvaWQgMCk6bi5jb250YWlubWVudC5jb25zdHJ1Y3Rvcj09PUFycmF5Pyh0aGlzLmNvbnRhaW5tZW50PW4uY29udGFpbm1lbnQsdm9pZCAwKTooXCJwYXJlbnRcIj09PW4uY29udGFpbm1lbnQmJihuLmNvbnRhaW5tZW50PXRoaXMuaGVscGVyWzBdLnBhcmVudE5vZGUpLGk9dChuLmNvbnRhaW5tZW50KSxzPWlbMF0scyYmKGU9LyhzY3JvbGx8YXV0bykvLnRlc3QoaS5jc3MoXCJvdmVyZmxvd1wiKSksdGhpcy5jb250YWlubWVudD1bKHBhcnNlSW50KGkuY3NzKFwiYm9yZGVyTGVmdFdpZHRoXCIpLDEwKXx8MCkrKHBhcnNlSW50KGkuY3NzKFwicGFkZGluZ0xlZnRcIiksMTApfHwwKSwocGFyc2VJbnQoaS5jc3MoXCJib3JkZXJUb3BXaWR0aFwiKSwxMCl8fDApKyhwYXJzZUludChpLmNzcyhcInBhZGRpbmdUb3BcIiksMTApfHwwKSwoZT9NYXRoLm1heChzLnNjcm9sbFdpZHRoLHMub2Zmc2V0V2lkdGgpOnMub2Zmc2V0V2lkdGgpLShwYXJzZUludChpLmNzcyhcImJvcmRlclJpZ2h0V2lkdGhcIiksMTApfHwwKS0ocGFyc2VJbnQoaS5jc3MoXCJwYWRkaW5nUmlnaHRcIiksMTApfHwwKS10aGlzLmhlbHBlclByb3BvcnRpb25zLndpZHRoLXRoaXMubWFyZ2lucy5sZWZ0LXRoaXMubWFyZ2lucy5yaWdodCwoZT9NYXRoLm1heChzLnNjcm9sbEhlaWdodCxzLm9mZnNldEhlaWdodCk6cy5vZmZzZXRIZWlnaHQpLShwYXJzZUludChpLmNzcyhcImJvcmRlckJvdHRvbVdpZHRoXCIpLDEwKXx8MCktKHBhcnNlSW50KGkuY3NzKFwicGFkZGluZ0JvdHRvbVwiKSwxMCl8fDApLXRoaXMuaGVscGVyUHJvcG9ydGlvbnMuaGVpZ2h0LXRoaXMubWFyZ2lucy50b3AtdGhpcy5tYXJnaW5zLmJvdHRvbV0sdGhpcy5yZWxhdGl2ZUNvbnRhaW5lcj1pKSx2b2lkIDApOih0aGlzLmNvbnRhaW5tZW50PW51bGwsdm9pZCAwKX0sX2NvbnZlcnRQb3NpdGlvblRvOmZ1bmN0aW9uKHQsZSl7ZXx8KGU9dGhpcy5wb3NpdGlvbik7dmFyIGk9XCJhYnNvbHV0ZVwiPT09dD8xOi0xLHM9dGhpcy5faXNSb290Tm9kZSh0aGlzLnNjcm9sbFBhcmVudFswXSk7cmV0dXJue3RvcDplLnRvcCt0aGlzLm9mZnNldC5yZWxhdGl2ZS50b3AqaSt0aGlzLm9mZnNldC5wYXJlbnQudG9wKmktKFwiZml4ZWRcIj09PXRoaXMuY3NzUG9zaXRpb24/LXRoaXMub2Zmc2V0LnNjcm9sbC50b3A6cz8wOnRoaXMub2Zmc2V0LnNjcm9sbC50b3ApKmksbGVmdDplLmxlZnQrdGhpcy5vZmZzZXQucmVsYXRpdmUubGVmdCppK3RoaXMub2Zmc2V0LnBhcmVudC5sZWZ0KmktKFwiZml4ZWRcIj09PXRoaXMuY3NzUG9zaXRpb24/LXRoaXMub2Zmc2V0LnNjcm9sbC5sZWZ0OnM/MDp0aGlzLm9mZnNldC5zY3JvbGwubGVmdCkqaX19LF9nZW5lcmF0ZVBvc2l0aW9uOmZ1bmN0aW9uKHQsZSl7dmFyIGkscyxuLG8sYT10aGlzLm9wdGlvbnMscj10aGlzLl9pc1Jvb3ROb2RlKHRoaXMuc2Nyb2xsUGFyZW50WzBdKSxoPXQucGFnZVgsbD10LnBhZ2VZO3JldHVybiByJiZ0aGlzLm9mZnNldC5zY3JvbGx8fCh0aGlzLm9mZnNldC5zY3JvbGw9e3RvcDp0aGlzLnNjcm9sbFBhcmVudC5zY3JvbGxUb3AoKSxsZWZ0OnRoaXMuc2Nyb2xsUGFyZW50LnNjcm9sbExlZnQoKX0pLGUmJih0aGlzLmNvbnRhaW5tZW50JiYodGhpcy5yZWxhdGl2ZUNvbnRhaW5lcj8ocz10aGlzLnJlbGF0aXZlQ29udGFpbmVyLm9mZnNldCgpLGk9W3RoaXMuY29udGFpbm1lbnRbMF0rcy5sZWZ0LHRoaXMuY29udGFpbm1lbnRbMV0rcy50b3AsdGhpcy5jb250YWlubWVudFsyXStzLmxlZnQsdGhpcy5jb250YWlubWVudFszXStzLnRvcF0pOmk9dGhpcy5jb250YWlubWVudCx0LnBhZ2VYLXRoaXMub2Zmc2V0LmNsaWNrLmxlZnQ8aVswXSYmKGg9aVswXSt0aGlzLm9mZnNldC5jbGljay5sZWZ0KSx0LnBhZ2VZLXRoaXMub2Zmc2V0LmNsaWNrLnRvcDxpWzFdJiYobD1pWzFdK3RoaXMub2Zmc2V0LmNsaWNrLnRvcCksdC5wYWdlWC10aGlzLm9mZnNldC5jbGljay5sZWZ0PmlbMl0mJihoPWlbMl0rdGhpcy5vZmZzZXQuY2xpY2subGVmdCksdC5wYWdlWS10aGlzLm9mZnNldC5jbGljay50b3A+aVszXSYmKGw9aVszXSt0aGlzLm9mZnNldC5jbGljay50b3ApKSxhLmdyaWQmJihuPWEuZ3JpZFsxXT90aGlzLm9yaWdpbmFsUGFnZVkrTWF0aC5yb3VuZCgobC10aGlzLm9yaWdpbmFsUGFnZVkpL2EuZ3JpZFsxXSkqYS5ncmlkWzFdOnRoaXMub3JpZ2luYWxQYWdlWSxsPWk/bi10aGlzLm9mZnNldC5jbGljay50b3A+PWlbMV18fG4tdGhpcy5vZmZzZXQuY2xpY2sudG9wPmlbM10/bjpuLXRoaXMub2Zmc2V0LmNsaWNrLnRvcD49aVsxXT9uLWEuZ3JpZFsxXTpuK2EuZ3JpZFsxXTpuLG89YS5ncmlkWzBdP3RoaXMub3JpZ2luYWxQYWdlWCtNYXRoLnJvdW5kKChoLXRoaXMub3JpZ2luYWxQYWdlWCkvYS5ncmlkWzBdKSphLmdyaWRbMF06dGhpcy5vcmlnaW5hbFBhZ2VYLGg9aT9vLXRoaXMub2Zmc2V0LmNsaWNrLmxlZnQ+PWlbMF18fG8tdGhpcy5vZmZzZXQuY2xpY2subGVmdD5pWzJdP286by10aGlzLm9mZnNldC5jbGljay5sZWZ0Pj1pWzBdP28tYS5ncmlkWzBdOm8rYS5ncmlkWzBdOm8pLFwieVwiPT09YS5heGlzJiYoaD10aGlzLm9yaWdpbmFsUGFnZVgpLFwieFwiPT09YS5heGlzJiYobD10aGlzLm9yaWdpbmFsUGFnZVkpKSx7dG9wOmwtdGhpcy5vZmZzZXQuY2xpY2sudG9wLXRoaXMub2Zmc2V0LnJlbGF0aXZlLnRvcC10aGlzLm9mZnNldC5wYXJlbnQudG9wKyhcImZpeGVkXCI9PT10aGlzLmNzc1Bvc2l0aW9uPy10aGlzLm9mZnNldC5zY3JvbGwudG9wOnI/MDp0aGlzLm9mZnNldC5zY3JvbGwudG9wKSxsZWZ0OmgtdGhpcy5vZmZzZXQuY2xpY2subGVmdC10aGlzLm9mZnNldC5yZWxhdGl2ZS5sZWZ0LXRoaXMub2Zmc2V0LnBhcmVudC5sZWZ0KyhcImZpeGVkXCI9PT10aGlzLmNzc1Bvc2l0aW9uPy10aGlzLm9mZnNldC5zY3JvbGwubGVmdDpyPzA6dGhpcy5vZmZzZXQuc2Nyb2xsLmxlZnQpfX0sX2NsZWFyOmZ1bmN0aW9uKCl7dGhpcy5fcmVtb3ZlQ2xhc3ModGhpcy5oZWxwZXIsXCJ1aS1kcmFnZ2FibGUtZHJhZ2dpbmdcIiksdGhpcy5oZWxwZXJbMF09PT10aGlzLmVsZW1lbnRbMF18fHRoaXMuY2FuY2VsSGVscGVyUmVtb3ZhbHx8dGhpcy5oZWxwZXIucmVtb3ZlKCksdGhpcy5oZWxwZXI9bnVsbCx0aGlzLmNhbmNlbEhlbHBlclJlbW92YWw9ITEsdGhpcy5kZXN0cm95T25DbGVhciYmdGhpcy5kZXN0cm95KCl9LF90cmlnZ2VyOmZ1bmN0aW9uKGUsaSxzKXtyZXR1cm4gcz1zfHx0aGlzLl91aUhhc2goKSx0LnVpLnBsdWdpbi5jYWxsKHRoaXMsZSxbaSxzLHRoaXNdLCEwKSwvXihkcmFnfHN0YXJ0fHN0b3ApLy50ZXN0KGUpJiYodGhpcy5wb3NpdGlvbkFicz10aGlzLl9jb252ZXJ0UG9zaXRpb25UbyhcImFic29sdXRlXCIpLHMub2Zmc2V0PXRoaXMucG9zaXRpb25BYnMpLHQuV2lkZ2V0LnByb3RvdHlwZS5fdHJpZ2dlci5jYWxsKHRoaXMsZSxpLHMpfSxwbHVnaW5zOnt9LF91aUhhc2g6ZnVuY3Rpb24oKXtyZXR1cm57aGVscGVyOnRoaXMuaGVscGVyLHBvc2l0aW9uOnRoaXMucG9zaXRpb24sb3JpZ2luYWxQb3NpdGlvbjp0aGlzLm9yaWdpbmFsUG9zaXRpb24sb2Zmc2V0OnRoaXMucG9zaXRpb25BYnN9fX0pLHQudWkucGx1Z2luLmFkZChcImRyYWdnYWJsZVwiLFwiY29ubmVjdFRvU29ydGFibGVcIix7c3RhcnQ6ZnVuY3Rpb24oZSxpLHMpe3ZhciBuPXQuZXh0ZW5kKHt9LGkse2l0ZW06cy5lbGVtZW50fSk7cy5zb3J0YWJsZXM9W10sdChzLm9wdGlvbnMuY29ubmVjdFRvU29ydGFibGUpLmVhY2goZnVuY3Rpb24oKXt2YXIgaT10KHRoaXMpLnNvcnRhYmxlKFwiaW5zdGFuY2VcIik7aSYmIWkub3B0aW9ucy5kaXNhYmxlZCYmKHMuc29ydGFibGVzLnB1c2goaSksaS5yZWZyZXNoUG9zaXRpb25zKCksaS5fdHJpZ2dlcihcImFjdGl2YXRlXCIsZSxuKSl9KX0sc3RvcDpmdW5jdGlvbihlLGkscyl7dmFyIG49dC5leHRlbmQoe30saSx7aXRlbTpzLmVsZW1lbnR9KTtzLmNhbmNlbEhlbHBlclJlbW92YWw9ITEsdC5lYWNoKHMuc29ydGFibGVzLGZ1bmN0aW9uKCl7dmFyIHQ9dGhpczt0LmlzT3Zlcj8odC5pc092ZXI9MCxzLmNhbmNlbEhlbHBlclJlbW92YWw9ITAsdC5jYW5jZWxIZWxwZXJSZW1vdmFsPSExLHQuX3N0b3JlZENTUz17cG9zaXRpb246dC5wbGFjZWhvbGRlci5jc3MoXCJwb3NpdGlvblwiKSx0b3A6dC5wbGFjZWhvbGRlci5jc3MoXCJ0b3BcIiksbGVmdDp0LnBsYWNlaG9sZGVyLmNzcyhcImxlZnRcIil9LHQuX21vdXNlU3RvcChlKSx0Lm9wdGlvbnMuaGVscGVyPXQub3B0aW9ucy5faGVscGVyKToodC5jYW5jZWxIZWxwZXJSZW1vdmFsPSEwLHQuX3RyaWdnZXIoXCJkZWFjdGl2YXRlXCIsZSxuKSl9KX0sZHJhZzpmdW5jdGlvbihlLGkscyl7dC5lYWNoKHMuc29ydGFibGVzLGZ1bmN0aW9uKCl7dmFyIG49ITEsbz10aGlzO28ucG9zaXRpb25BYnM9cy5wb3NpdGlvbkFicyxvLmhlbHBlclByb3BvcnRpb25zPXMuaGVscGVyUHJvcG9ydGlvbnMsby5vZmZzZXQuY2xpY2s9cy5vZmZzZXQuY2xpY2ssby5faW50ZXJzZWN0c1dpdGgoby5jb250YWluZXJDYWNoZSkmJihuPSEwLHQuZWFjaChzLnNvcnRhYmxlcyxmdW5jdGlvbigpe3JldHVybiB0aGlzLnBvc2l0aW9uQWJzPXMucG9zaXRpb25BYnMsdGhpcy5oZWxwZXJQcm9wb3J0aW9ucz1zLmhlbHBlclByb3BvcnRpb25zLHRoaXMub2Zmc2V0LmNsaWNrPXMub2Zmc2V0LmNsaWNrLHRoaXMhPT1vJiZ0aGlzLl9pbnRlcnNlY3RzV2l0aCh0aGlzLmNvbnRhaW5lckNhY2hlKSYmdC5jb250YWlucyhvLmVsZW1lbnRbMF0sdGhpcy5lbGVtZW50WzBdKSYmKG49ITEpLG59KSksbj8oby5pc092ZXJ8fChvLmlzT3Zlcj0xLHMuX3BhcmVudD1pLmhlbHBlci5wYXJlbnQoKSxvLmN1cnJlbnRJdGVtPWkuaGVscGVyLmFwcGVuZFRvKG8uZWxlbWVudCkuZGF0YShcInVpLXNvcnRhYmxlLWl0ZW1cIiwhMCksby5vcHRpb25zLl9oZWxwZXI9by5vcHRpb25zLmhlbHBlcixvLm9wdGlvbnMuaGVscGVyPWZ1bmN0aW9uKCl7cmV0dXJuIGkuaGVscGVyWzBdfSxlLnRhcmdldD1vLmN1cnJlbnRJdGVtWzBdLG8uX21vdXNlQ2FwdHVyZShlLCEwKSxvLl9tb3VzZVN0YXJ0KGUsITAsITApLG8ub2Zmc2V0LmNsaWNrLnRvcD1zLm9mZnNldC5jbGljay50b3Asby5vZmZzZXQuY2xpY2subGVmdD1zLm9mZnNldC5jbGljay5sZWZ0LG8ub2Zmc2V0LnBhcmVudC5sZWZ0LT1zLm9mZnNldC5wYXJlbnQubGVmdC1vLm9mZnNldC5wYXJlbnQubGVmdCxvLm9mZnNldC5wYXJlbnQudG9wLT1zLm9mZnNldC5wYXJlbnQudG9wLW8ub2Zmc2V0LnBhcmVudC50b3Ascy5fdHJpZ2dlcihcInRvU29ydGFibGVcIixlKSxzLmRyb3BwZWQ9by5lbGVtZW50LHQuZWFjaChzLnNvcnRhYmxlcyxmdW5jdGlvbigpe3RoaXMucmVmcmVzaFBvc2l0aW9ucygpfSkscy5jdXJyZW50SXRlbT1zLmVsZW1lbnQsby5mcm9tT3V0c2lkZT1zKSxvLmN1cnJlbnRJdGVtJiYoby5fbW91c2VEcmFnKGUpLGkucG9zaXRpb249by5wb3NpdGlvbikpOm8uaXNPdmVyJiYoby5pc092ZXI9MCxvLmNhbmNlbEhlbHBlclJlbW92YWw9ITAsby5vcHRpb25zLl9yZXZlcnQ9by5vcHRpb25zLnJldmVydCxvLm9wdGlvbnMucmV2ZXJ0PSExLG8uX3RyaWdnZXIoXCJvdXRcIixlLG8uX3VpSGFzaChvKSksby5fbW91c2VTdG9wKGUsITApLG8ub3B0aW9ucy5yZXZlcnQ9by5vcHRpb25zLl9yZXZlcnQsby5vcHRpb25zLmhlbHBlcj1vLm9wdGlvbnMuX2hlbHBlcixvLnBsYWNlaG9sZGVyJiZvLnBsYWNlaG9sZGVyLnJlbW92ZSgpLGkuaGVscGVyLmFwcGVuZFRvKHMuX3BhcmVudCkscy5fcmVmcmVzaE9mZnNldHMoZSksaS5wb3NpdGlvbj1zLl9nZW5lcmF0ZVBvc2l0aW9uKGUsITApLHMuX3RyaWdnZXIoXCJmcm9tU29ydGFibGVcIixlKSxzLmRyb3BwZWQ9ITEsdC5lYWNoKHMuc29ydGFibGVzLGZ1bmN0aW9uKCl7dGhpcy5yZWZyZXNoUG9zaXRpb25zKCl9KSl9KX19KSx0LnVpLnBsdWdpbi5hZGQoXCJkcmFnZ2FibGVcIixcImN1cnNvclwiLHtzdGFydDpmdW5jdGlvbihlLGkscyl7dmFyIG49dChcImJvZHlcIiksbz1zLm9wdGlvbnM7bi5jc3MoXCJjdXJzb3JcIikmJihvLl9jdXJzb3I9bi5jc3MoXCJjdXJzb3JcIikpLG4uY3NzKFwiY3Vyc29yXCIsby5jdXJzb3IpfSxzdG9wOmZ1bmN0aW9uKGUsaSxzKXt2YXIgbj1zLm9wdGlvbnM7bi5fY3Vyc29yJiZ0KFwiYm9keVwiKS5jc3MoXCJjdXJzb3JcIixuLl9jdXJzb3IpfX0pLHQudWkucGx1Z2luLmFkZChcImRyYWdnYWJsZVwiLFwib3BhY2l0eVwiLHtzdGFydDpmdW5jdGlvbihlLGkscyl7dmFyIG49dChpLmhlbHBlciksbz1zLm9wdGlvbnM7bi5jc3MoXCJvcGFjaXR5XCIpJiYoby5fb3BhY2l0eT1uLmNzcyhcIm9wYWNpdHlcIikpLG4uY3NzKFwib3BhY2l0eVwiLG8ub3BhY2l0eSl9LHN0b3A6ZnVuY3Rpb24oZSxpLHMpe3ZhciBuPXMub3B0aW9ucztuLl9vcGFjaXR5JiZ0KGkuaGVscGVyKS5jc3MoXCJvcGFjaXR5XCIsbi5fb3BhY2l0eSl9fSksdC51aS5wbHVnaW4uYWRkKFwiZHJhZ2dhYmxlXCIsXCJzY3JvbGxcIix7c3RhcnQ6ZnVuY3Rpb24odCxlLGkpe2kuc2Nyb2xsUGFyZW50Tm90SGlkZGVufHwoaS5zY3JvbGxQYXJlbnROb3RIaWRkZW49aS5oZWxwZXIuc2Nyb2xsUGFyZW50KCExKSksaS5zY3JvbGxQYXJlbnROb3RIaWRkZW5bMF0hPT1pLmRvY3VtZW50WzBdJiZcIkhUTUxcIiE9PWkuc2Nyb2xsUGFyZW50Tm90SGlkZGVuWzBdLnRhZ05hbWUmJihpLm92ZXJmbG93T2Zmc2V0PWkuc2Nyb2xsUGFyZW50Tm90SGlkZGVuLm9mZnNldCgpKX0sZHJhZzpmdW5jdGlvbihlLGkscyl7dmFyIG49cy5vcHRpb25zLG89ITEsYT1zLnNjcm9sbFBhcmVudE5vdEhpZGRlblswXSxyPXMuZG9jdW1lbnRbMF07YSE9PXImJlwiSFRNTFwiIT09YS50YWdOYW1lPyhuLmF4aXMmJlwieFwiPT09bi5heGlzfHwocy5vdmVyZmxvd09mZnNldC50b3ArYS5vZmZzZXRIZWlnaHQtZS5wYWdlWTxuLnNjcm9sbFNlbnNpdGl2aXR5P2Euc2Nyb2xsVG9wPW89YS5zY3JvbGxUb3Arbi5zY3JvbGxTcGVlZDplLnBhZ2VZLXMub3ZlcmZsb3dPZmZzZXQudG9wPG4uc2Nyb2xsU2Vuc2l0aXZpdHkmJihhLnNjcm9sbFRvcD1vPWEuc2Nyb2xsVG9wLW4uc2Nyb2xsU3BlZWQpKSxuLmF4aXMmJlwieVwiPT09bi5heGlzfHwocy5vdmVyZmxvd09mZnNldC5sZWZ0K2Eub2Zmc2V0V2lkdGgtZS5wYWdlWDxuLnNjcm9sbFNlbnNpdGl2aXR5P2Euc2Nyb2xsTGVmdD1vPWEuc2Nyb2xsTGVmdCtuLnNjcm9sbFNwZWVkOmUucGFnZVgtcy5vdmVyZmxvd09mZnNldC5sZWZ0PG4uc2Nyb2xsU2Vuc2l0aXZpdHkmJihhLnNjcm9sbExlZnQ9bz1hLnNjcm9sbExlZnQtbi5zY3JvbGxTcGVlZCkpKToobi5heGlzJiZcInhcIj09PW4uYXhpc3x8KGUucGFnZVktdChyKS5zY3JvbGxUb3AoKTxuLnNjcm9sbFNlbnNpdGl2aXR5P289dChyKS5zY3JvbGxUb3AodChyKS5zY3JvbGxUb3AoKS1uLnNjcm9sbFNwZWVkKTp0KHdpbmRvdykuaGVpZ2h0KCktKGUucGFnZVktdChyKS5zY3JvbGxUb3AoKSk8bi5zY3JvbGxTZW5zaXRpdml0eSYmKG89dChyKS5zY3JvbGxUb3AodChyKS5zY3JvbGxUb3AoKStuLnNjcm9sbFNwZWVkKSkpLG4uYXhpcyYmXCJ5XCI9PT1uLmF4aXN8fChlLnBhZ2VYLXQocikuc2Nyb2xsTGVmdCgpPG4uc2Nyb2xsU2Vuc2l0aXZpdHk/bz10KHIpLnNjcm9sbExlZnQodChyKS5zY3JvbGxMZWZ0KCktbi5zY3JvbGxTcGVlZCk6dCh3aW5kb3cpLndpZHRoKCktKGUucGFnZVgtdChyKS5zY3JvbGxMZWZ0KCkpPG4uc2Nyb2xsU2Vuc2l0aXZpdHkmJihvPXQocikuc2Nyb2xsTGVmdCh0KHIpLnNjcm9sbExlZnQoKStuLnNjcm9sbFNwZWVkKSkpKSxvIT09ITEmJnQudWkuZGRtYW5hZ2VyJiYhbi5kcm9wQmVoYXZpb3VyJiZ0LnVpLmRkbWFuYWdlci5wcmVwYXJlT2Zmc2V0cyhzLGUpfX0pLHQudWkucGx1Z2luLmFkZChcImRyYWdnYWJsZVwiLFwic25hcFwiLHtzdGFydDpmdW5jdGlvbihlLGkscyl7dmFyIG49cy5vcHRpb25zO3Muc25hcEVsZW1lbnRzPVtdLHQobi5zbmFwLmNvbnN0cnVjdG9yIT09U3RyaW5nP24uc25hcC5pdGVtc3x8XCI6ZGF0YSh1aS1kcmFnZ2FibGUpXCI6bi5zbmFwKS5lYWNoKGZ1bmN0aW9uKCl7dmFyIGU9dCh0aGlzKSxpPWUub2Zmc2V0KCk7dGhpcyE9PXMuZWxlbWVudFswXSYmcy5zbmFwRWxlbWVudHMucHVzaCh7aXRlbTp0aGlzLHdpZHRoOmUub3V0ZXJXaWR0aCgpLGhlaWdodDplLm91dGVySGVpZ2h0KCksdG9wOmkudG9wLGxlZnQ6aS5sZWZ0fSl9KX0sZHJhZzpmdW5jdGlvbihlLGkscyl7dmFyIG4sbyxhLHIsaCxsLGMsdSxkLHAsZj1zLm9wdGlvbnMsZz1mLnNuYXBUb2xlcmFuY2UsbT1pLm9mZnNldC5sZWZ0LF89bStzLmhlbHBlclByb3BvcnRpb25zLndpZHRoLHY9aS5vZmZzZXQudG9wLGI9ditzLmhlbHBlclByb3BvcnRpb25zLmhlaWdodDtmb3IoZD1zLnNuYXBFbGVtZW50cy5sZW5ndGgtMTtkPj0wO2QtLSloPXMuc25hcEVsZW1lbnRzW2RdLmxlZnQtcy5tYXJnaW5zLmxlZnQsbD1oK3Muc25hcEVsZW1lbnRzW2RdLndpZHRoLGM9cy5zbmFwRWxlbWVudHNbZF0udG9wLXMubWFyZ2lucy50b3AsdT1jK3Muc25hcEVsZW1lbnRzW2RdLmhlaWdodCxoLWc+X3x8bT5sK2d8fGMtZz5ifHx2PnUrZ3x8IXQuY29udGFpbnMocy5zbmFwRWxlbWVudHNbZF0uaXRlbS5vd25lckRvY3VtZW50LHMuc25hcEVsZW1lbnRzW2RdLml0ZW0pPyhzLnNuYXBFbGVtZW50c1tkXS5zbmFwcGluZyYmcy5vcHRpb25zLnNuYXAucmVsZWFzZSYmcy5vcHRpb25zLnNuYXAucmVsZWFzZS5jYWxsKHMuZWxlbWVudCxlLHQuZXh0ZW5kKHMuX3VpSGFzaCgpLHtzbmFwSXRlbTpzLnNuYXBFbGVtZW50c1tkXS5pdGVtfSkpLHMuc25hcEVsZW1lbnRzW2RdLnNuYXBwaW5nPSExKTooXCJpbm5lclwiIT09Zi5zbmFwTW9kZSYmKG49Zz49TWF0aC5hYnMoYy1iKSxvPWc+PU1hdGguYWJzKHUtdiksYT1nPj1NYXRoLmFicyhoLV8pLHI9Zz49TWF0aC5hYnMobC1tKSxuJiYoaS5wb3NpdGlvbi50b3A9cy5fY29udmVydFBvc2l0aW9uVG8oXCJyZWxhdGl2ZVwiLHt0b3A6Yy1zLmhlbHBlclByb3BvcnRpb25zLmhlaWdodCxsZWZ0OjB9KS50b3ApLG8mJihpLnBvc2l0aW9uLnRvcD1zLl9jb252ZXJ0UG9zaXRpb25UbyhcInJlbGF0aXZlXCIse3RvcDp1LGxlZnQ6MH0pLnRvcCksYSYmKGkucG9zaXRpb24ubGVmdD1zLl9jb252ZXJ0UG9zaXRpb25UbyhcInJlbGF0aXZlXCIse3RvcDowLGxlZnQ6aC1zLmhlbHBlclByb3BvcnRpb25zLndpZHRofSkubGVmdCksciYmKGkucG9zaXRpb24ubGVmdD1zLl9jb252ZXJ0UG9zaXRpb25UbyhcInJlbGF0aXZlXCIse3RvcDowLGxlZnQ6bH0pLmxlZnQpKSxwPW58fG98fGF8fHIsXCJvdXRlclwiIT09Zi5zbmFwTW9kZSYmKG49Zz49TWF0aC5hYnMoYy12KSxvPWc+PU1hdGguYWJzKHUtYiksYT1nPj1NYXRoLmFicyhoLW0pLHI9Zz49TWF0aC5hYnMobC1fKSxuJiYoaS5wb3NpdGlvbi50b3A9cy5fY29udmVydFBvc2l0aW9uVG8oXCJyZWxhdGl2ZVwiLHt0b3A6YyxsZWZ0OjB9KS50b3ApLG8mJihpLnBvc2l0aW9uLnRvcD1zLl9jb252ZXJ0UG9zaXRpb25UbyhcInJlbGF0aXZlXCIse3RvcDp1LXMuaGVscGVyUHJvcG9ydGlvbnMuaGVpZ2h0LGxlZnQ6MH0pLnRvcCksYSYmKGkucG9zaXRpb24ubGVmdD1zLl9jb252ZXJ0UG9zaXRpb25UbyhcInJlbGF0aXZlXCIse3RvcDowLGxlZnQ6aH0pLmxlZnQpLHImJihpLnBvc2l0aW9uLmxlZnQ9cy5fY29udmVydFBvc2l0aW9uVG8oXCJyZWxhdGl2ZVwiLHt0b3A6MCxsZWZ0Omwtcy5oZWxwZXJQcm9wb3J0aW9ucy53aWR0aH0pLmxlZnQpKSwhcy5zbmFwRWxlbWVudHNbZF0uc25hcHBpbmcmJihufHxvfHxhfHxyfHxwKSYmcy5vcHRpb25zLnNuYXAuc25hcCYmcy5vcHRpb25zLnNuYXAuc25hcC5jYWxsKHMuZWxlbWVudCxlLHQuZXh0ZW5kKHMuX3VpSGFzaCgpLHtzbmFwSXRlbTpzLnNuYXBFbGVtZW50c1tkXS5pdGVtfSkpLHMuc25hcEVsZW1lbnRzW2RdLnNuYXBwaW5nPW58fG98fGF8fHJ8fHApfX0pLHQudWkucGx1Z2luLmFkZChcImRyYWdnYWJsZVwiLFwic3RhY2tcIix7c3RhcnQ6ZnVuY3Rpb24oZSxpLHMpe3ZhciBuLG89cy5vcHRpb25zLGE9dC5tYWtlQXJyYXkodChvLnN0YWNrKSkuc29ydChmdW5jdGlvbihlLGkpe3JldHVybihwYXJzZUludCh0KGUpLmNzcyhcInpJbmRleFwiKSwxMCl8fDApLShwYXJzZUludCh0KGkpLmNzcyhcInpJbmRleFwiKSwxMCl8fDApfSk7YS5sZW5ndGgmJihuPXBhcnNlSW50KHQoYVswXSkuY3NzKFwiekluZGV4XCIpLDEwKXx8MCx0KGEpLmVhY2goZnVuY3Rpb24oZSl7dCh0aGlzKS5jc3MoXCJ6SW5kZXhcIixuK2UpfSksdGhpcy5jc3MoXCJ6SW5kZXhcIixuK2EubGVuZ3RoKSl9fSksdC51aS5wbHVnaW4uYWRkKFwiZHJhZ2dhYmxlXCIsXCJ6SW5kZXhcIix7c3RhcnQ6ZnVuY3Rpb24oZSxpLHMpe3ZhciBuPXQoaS5oZWxwZXIpLG89cy5vcHRpb25zO24uY3NzKFwiekluZGV4XCIpJiYoby5fekluZGV4PW4uY3NzKFwiekluZGV4XCIpKSxuLmNzcyhcInpJbmRleFwiLG8uekluZGV4KX0sc3RvcDpmdW5jdGlvbihlLGkscyl7dmFyIG49cy5vcHRpb25zO24uX3pJbmRleCYmdChpLmhlbHBlcikuY3NzKFwiekluZGV4XCIsbi5fekluZGV4KX19KSx0LnVpLmRyYWdnYWJsZSx0LndpZGdldChcInVpLnJlc2l6YWJsZVwiLHQudWkubW91c2Use3ZlcnNpb246XCIxLjEyLjFcIix3aWRnZXRFdmVudFByZWZpeDpcInJlc2l6ZVwiLG9wdGlvbnM6e2Fsc29SZXNpemU6ITEsYW5pbWF0ZTohMSxhbmltYXRlRHVyYXRpb246XCJzbG93XCIsYW5pbWF0ZUVhc2luZzpcInN3aW5nXCIsYXNwZWN0UmF0aW86ITEsYXV0b0hpZGU6ITEsY2xhc3Nlczp7XCJ1aS1yZXNpemFibGUtc2VcIjpcInVpLWljb24gdWktaWNvbi1ncmlwc21hbGwtZGlhZ29uYWwtc2VcIn0sY29udGFpbm1lbnQ6ITEsZ2hvc3Q6ITEsZ3JpZDohMSxoYW5kbGVzOlwiZSxzLHNlXCIsaGVscGVyOiExLG1heEhlaWdodDpudWxsLG1heFdpZHRoOm51bGwsbWluSGVpZ2h0OjEwLG1pbldpZHRoOjEwLHpJbmRleDo5MCxyZXNpemU6bnVsbCxzdGFydDpudWxsLHN0b3A6bnVsbH0sX251bTpmdW5jdGlvbih0KXtyZXR1cm4gcGFyc2VGbG9hdCh0KXx8MH0sX2lzTnVtYmVyOmZ1bmN0aW9uKHQpe3JldHVybiFpc05hTihwYXJzZUZsb2F0KHQpKX0sX2hhc1Njcm9sbDpmdW5jdGlvbihlLGkpe2lmKFwiaGlkZGVuXCI9PT10KGUpLmNzcyhcIm92ZXJmbG93XCIpKXJldHVybiExO3ZhciBzPWkmJlwibGVmdFwiPT09aT9cInNjcm9sbExlZnRcIjpcInNjcm9sbFRvcFwiLG49ITE7cmV0dXJuIGVbc10+MD8hMDooZVtzXT0xLG49ZVtzXT4wLGVbc109MCxuKX0sX2NyZWF0ZTpmdW5jdGlvbigpe3ZhciBlLGk9dGhpcy5vcHRpb25zLHM9dGhpczt0aGlzLl9hZGRDbGFzcyhcInVpLXJlc2l6YWJsZVwiKSx0LmV4dGVuZCh0aGlzLHtfYXNwZWN0UmF0aW86ISFpLmFzcGVjdFJhdGlvLGFzcGVjdFJhdGlvOmkuYXNwZWN0UmF0aW8sb3JpZ2luYWxFbGVtZW50OnRoaXMuZWxlbWVudCxfcHJvcG9ydGlvbmFsbHlSZXNpemVFbGVtZW50czpbXSxfaGVscGVyOmkuaGVscGVyfHxpLmdob3N0fHxpLmFuaW1hdGU/aS5oZWxwZXJ8fFwidWktcmVzaXphYmxlLWhlbHBlclwiOm51bGx9KSx0aGlzLmVsZW1lbnRbMF0ubm9kZU5hbWUubWF0Y2goL14oY2FudmFzfHRleHRhcmVhfGlucHV0fHNlbGVjdHxidXR0b258aW1nKSQvaSkmJih0aGlzLmVsZW1lbnQud3JhcCh0KFwiPGRpdiBjbGFzcz0ndWktd3JhcHBlcicgc3R5bGU9J292ZXJmbG93OiBoaWRkZW47Jz48L2Rpdj5cIikuY3NzKHtwb3NpdGlvbjp0aGlzLmVsZW1lbnQuY3NzKFwicG9zaXRpb25cIiksd2lkdGg6dGhpcy5lbGVtZW50Lm91dGVyV2lkdGgoKSxoZWlnaHQ6dGhpcy5lbGVtZW50Lm91dGVySGVpZ2h0KCksdG9wOnRoaXMuZWxlbWVudC5jc3MoXCJ0b3BcIiksbGVmdDp0aGlzLmVsZW1lbnQuY3NzKFwibGVmdFwiKX0pKSx0aGlzLmVsZW1lbnQ9dGhpcy5lbGVtZW50LnBhcmVudCgpLmRhdGEoXCJ1aS1yZXNpemFibGVcIix0aGlzLmVsZW1lbnQucmVzaXphYmxlKFwiaW5zdGFuY2VcIikpLHRoaXMuZWxlbWVudElzV3JhcHBlcj0hMCxlPXttYXJnaW5Ub3A6dGhpcy5vcmlnaW5hbEVsZW1lbnQuY3NzKFwibWFyZ2luVG9wXCIpLG1hcmdpblJpZ2h0OnRoaXMub3JpZ2luYWxFbGVtZW50LmNzcyhcIm1hcmdpblJpZ2h0XCIpLG1hcmdpbkJvdHRvbTp0aGlzLm9yaWdpbmFsRWxlbWVudC5jc3MoXCJtYXJnaW5Cb3R0b21cIiksbWFyZ2luTGVmdDp0aGlzLm9yaWdpbmFsRWxlbWVudC5jc3MoXCJtYXJnaW5MZWZ0XCIpfSx0aGlzLmVsZW1lbnQuY3NzKGUpLHRoaXMub3JpZ2luYWxFbGVtZW50LmNzcyhcIm1hcmdpblwiLDApLHRoaXMub3JpZ2luYWxSZXNpemVTdHlsZT10aGlzLm9yaWdpbmFsRWxlbWVudC5jc3MoXCJyZXNpemVcIiksdGhpcy5vcmlnaW5hbEVsZW1lbnQuY3NzKFwicmVzaXplXCIsXCJub25lXCIpLHRoaXMuX3Byb3BvcnRpb25hbGx5UmVzaXplRWxlbWVudHMucHVzaCh0aGlzLm9yaWdpbmFsRWxlbWVudC5jc3Moe3Bvc2l0aW9uOlwic3RhdGljXCIsem9vbToxLGRpc3BsYXk6XCJibG9ja1wifSkpLHRoaXMub3JpZ2luYWxFbGVtZW50LmNzcyhlKSx0aGlzLl9wcm9wb3J0aW9uYWxseVJlc2l6ZSgpKSx0aGlzLl9zZXR1cEhhbmRsZXMoKSxpLmF1dG9IaWRlJiZ0KHRoaXMuZWxlbWVudCkub24oXCJtb3VzZWVudGVyXCIsZnVuY3Rpb24oKXtpLmRpc2FibGVkfHwocy5fcmVtb3ZlQ2xhc3MoXCJ1aS1yZXNpemFibGUtYXV0b2hpZGVcIikscy5faGFuZGxlcy5zaG93KCkpfSkub24oXCJtb3VzZWxlYXZlXCIsZnVuY3Rpb24oKXtpLmRpc2FibGVkfHxzLnJlc2l6aW5nfHwocy5fYWRkQ2xhc3MoXCJ1aS1yZXNpemFibGUtYXV0b2hpZGVcIikscy5faGFuZGxlcy5oaWRlKCkpfSksdGhpcy5fbW91c2VJbml0KCl9LF9kZXN0cm95OmZ1bmN0aW9uKCl7dGhpcy5fbW91c2VEZXN0cm95KCk7dmFyIGUsaT1mdW5jdGlvbihlKXt0KGUpLnJlbW92ZURhdGEoXCJyZXNpemFibGVcIikucmVtb3ZlRGF0YShcInVpLXJlc2l6YWJsZVwiKS5vZmYoXCIucmVzaXphYmxlXCIpLmZpbmQoXCIudWktcmVzaXphYmxlLWhhbmRsZVwiKS5yZW1vdmUoKX07cmV0dXJuIHRoaXMuZWxlbWVudElzV3JhcHBlciYmKGkodGhpcy5lbGVtZW50KSxlPXRoaXMuZWxlbWVudCx0aGlzLm9yaWdpbmFsRWxlbWVudC5jc3Moe3Bvc2l0aW9uOmUuY3NzKFwicG9zaXRpb25cIiksd2lkdGg6ZS5vdXRlcldpZHRoKCksaGVpZ2h0OmUub3V0ZXJIZWlnaHQoKSx0b3A6ZS5jc3MoXCJ0b3BcIiksbGVmdDplLmNzcyhcImxlZnRcIil9KS5pbnNlcnRBZnRlcihlKSxlLnJlbW92ZSgpKSx0aGlzLm9yaWdpbmFsRWxlbWVudC5jc3MoXCJyZXNpemVcIix0aGlzLm9yaWdpbmFsUmVzaXplU3R5bGUpLGkodGhpcy5vcmlnaW5hbEVsZW1lbnQpLHRoaXN9LF9zZXRPcHRpb246ZnVuY3Rpb24odCxlKXtzd2l0Y2godGhpcy5fc3VwZXIodCxlKSx0KXtjYXNlXCJoYW5kbGVzXCI6dGhpcy5fcmVtb3ZlSGFuZGxlcygpLHRoaXMuX3NldHVwSGFuZGxlcygpO2JyZWFrO2RlZmF1bHQ6fX0sX3NldHVwSGFuZGxlczpmdW5jdGlvbigpe3ZhciBlLGkscyxuLG8sYT10aGlzLm9wdGlvbnMscj10aGlzO2lmKHRoaXMuaGFuZGxlcz1hLmhhbmRsZXN8fCh0KFwiLnVpLXJlc2l6YWJsZS1oYW5kbGVcIix0aGlzLmVsZW1lbnQpLmxlbmd0aD97bjpcIi51aS1yZXNpemFibGUtblwiLGU6XCIudWktcmVzaXphYmxlLWVcIixzOlwiLnVpLXJlc2l6YWJsZS1zXCIsdzpcIi51aS1yZXNpemFibGUtd1wiLHNlOlwiLnVpLXJlc2l6YWJsZS1zZVwiLHN3OlwiLnVpLXJlc2l6YWJsZS1zd1wiLG5lOlwiLnVpLXJlc2l6YWJsZS1uZVwiLG53OlwiLnVpLXJlc2l6YWJsZS1ud1wifTpcImUscyxzZVwiKSx0aGlzLl9oYW5kbGVzPXQoKSx0aGlzLmhhbmRsZXMuY29uc3RydWN0b3I9PT1TdHJpbmcpZm9yKFwiYWxsXCI9PT10aGlzLmhhbmRsZXMmJih0aGlzLmhhbmRsZXM9XCJuLGUscyx3LHNlLHN3LG5lLG53XCIpLHM9dGhpcy5oYW5kbGVzLnNwbGl0KFwiLFwiKSx0aGlzLmhhbmRsZXM9e30saT0wO3MubGVuZ3RoPmk7aSsrKWU9dC50cmltKHNbaV0pLG49XCJ1aS1yZXNpemFibGUtXCIrZSxvPXQoXCI8ZGl2PlwiKSx0aGlzLl9hZGRDbGFzcyhvLFwidWktcmVzaXphYmxlLWhhbmRsZSBcIituKSxvLmNzcyh7ekluZGV4OmEuekluZGV4fSksdGhpcy5oYW5kbGVzW2VdPVwiLnVpLXJlc2l6YWJsZS1cIitlLHRoaXMuZWxlbWVudC5hcHBlbmQobyk7dGhpcy5fcmVuZGVyQXhpcz1mdW5jdGlvbihlKXt2YXIgaSxzLG4sbztlPWV8fHRoaXMuZWxlbWVudDtmb3IoaSBpbiB0aGlzLmhhbmRsZXMpdGhpcy5oYW5kbGVzW2ldLmNvbnN0cnVjdG9yPT09U3RyaW5nP3RoaXMuaGFuZGxlc1tpXT10aGlzLmVsZW1lbnQuY2hpbGRyZW4odGhpcy5oYW5kbGVzW2ldKS5maXJzdCgpLnNob3coKToodGhpcy5oYW5kbGVzW2ldLmpxdWVyeXx8dGhpcy5oYW5kbGVzW2ldLm5vZGVUeXBlKSYmKHRoaXMuaGFuZGxlc1tpXT10KHRoaXMuaGFuZGxlc1tpXSksdGhpcy5fb24odGhpcy5oYW5kbGVzW2ldLHttb3VzZWRvd246ci5fbW91c2VEb3dufSkpLHRoaXMuZWxlbWVudElzV3JhcHBlciYmdGhpcy5vcmlnaW5hbEVsZW1lbnRbMF0ubm9kZU5hbWUubWF0Y2goL14odGV4dGFyZWF8aW5wdXR8c2VsZWN0fGJ1dHRvbikkL2kpJiYocz10KHRoaXMuaGFuZGxlc1tpXSx0aGlzLmVsZW1lbnQpLG89L3N3fG5lfG53fHNlfG58cy8udGVzdChpKT9zLm91dGVySGVpZ2h0KCk6cy5vdXRlcldpZHRoKCksbj1bXCJwYWRkaW5nXCIsL25lfG53fG4vLnRlc3QoaSk/XCJUb3BcIjovc2V8c3d8cy8udGVzdChpKT9cIkJvdHRvbVwiOi9eZSQvLnRlc3QoaSk/XCJSaWdodFwiOlwiTGVmdFwiXS5qb2luKFwiXCIpLGUuY3NzKG4sbyksdGhpcy5fcHJvcG9ydGlvbmFsbHlSZXNpemUoKSksdGhpcy5faGFuZGxlcz10aGlzLl9oYW5kbGVzLmFkZCh0aGlzLmhhbmRsZXNbaV0pfSx0aGlzLl9yZW5kZXJBeGlzKHRoaXMuZWxlbWVudCksdGhpcy5faGFuZGxlcz10aGlzLl9oYW5kbGVzLmFkZCh0aGlzLmVsZW1lbnQuZmluZChcIi51aS1yZXNpemFibGUtaGFuZGxlXCIpKSx0aGlzLl9oYW5kbGVzLmRpc2FibGVTZWxlY3Rpb24oKSx0aGlzLl9oYW5kbGVzLm9uKFwibW91c2VvdmVyXCIsZnVuY3Rpb24oKXtyLnJlc2l6aW5nfHwodGhpcy5jbGFzc05hbWUmJihvPXRoaXMuY2xhc3NOYW1lLm1hdGNoKC91aS1yZXNpemFibGUtKHNlfHN3fG5lfG53fG58ZXxzfHcpL2kpKSxyLmF4aXM9byYmb1sxXT9vWzFdOlwic2VcIil9KSxhLmF1dG9IaWRlJiYodGhpcy5faGFuZGxlcy5oaWRlKCksdGhpcy5fYWRkQ2xhc3MoXCJ1aS1yZXNpemFibGUtYXV0b2hpZGVcIikpfSxfcmVtb3ZlSGFuZGxlczpmdW5jdGlvbigpe3RoaXMuX2hhbmRsZXMucmVtb3ZlKCl9LF9tb3VzZUNhcHR1cmU6ZnVuY3Rpb24oZSl7dmFyIGkscyxuPSExO2ZvcihpIGluIHRoaXMuaGFuZGxlcylzPXQodGhpcy5oYW5kbGVzW2ldKVswXSwocz09PWUudGFyZ2V0fHx0LmNvbnRhaW5zKHMsZS50YXJnZXQpKSYmKG49ITApO3JldHVybiF0aGlzLm9wdGlvbnMuZGlzYWJsZWQmJm59LF9tb3VzZVN0YXJ0OmZ1bmN0aW9uKGUpe3ZhciBpLHMsbixvPXRoaXMub3B0aW9ucyxhPXRoaXMuZWxlbWVudDtyZXR1cm4gdGhpcy5yZXNpemluZz0hMCx0aGlzLl9yZW5kZXJQcm94eSgpLGk9dGhpcy5fbnVtKHRoaXMuaGVscGVyLmNzcyhcImxlZnRcIikpLHM9dGhpcy5fbnVtKHRoaXMuaGVscGVyLmNzcyhcInRvcFwiKSksby5jb250YWlubWVudCYmKGkrPXQoby5jb250YWlubWVudCkuc2Nyb2xsTGVmdCgpfHwwLHMrPXQoby5jb250YWlubWVudCkuc2Nyb2xsVG9wKCl8fDApLHRoaXMub2Zmc2V0PXRoaXMuaGVscGVyLm9mZnNldCgpLHRoaXMucG9zaXRpb249e2xlZnQ6aSx0b3A6c30sdGhpcy5zaXplPXRoaXMuX2hlbHBlcj97d2lkdGg6dGhpcy5oZWxwZXIud2lkdGgoKSxoZWlnaHQ6dGhpcy5oZWxwZXIuaGVpZ2h0KCl9Ont3aWR0aDphLndpZHRoKCksaGVpZ2h0OmEuaGVpZ2h0KCl9LHRoaXMub3JpZ2luYWxTaXplPXRoaXMuX2hlbHBlcj97d2lkdGg6YS5vdXRlcldpZHRoKCksaGVpZ2h0OmEub3V0ZXJIZWlnaHQoKX06e3dpZHRoOmEud2lkdGgoKSxoZWlnaHQ6YS5oZWlnaHQoKX0sdGhpcy5zaXplRGlmZj17d2lkdGg6YS5vdXRlcldpZHRoKCktYS53aWR0aCgpLGhlaWdodDphLm91dGVySGVpZ2h0KCktYS5oZWlnaHQoKX0sdGhpcy5vcmlnaW5hbFBvc2l0aW9uPXtsZWZ0OmksdG9wOnN9LHRoaXMub3JpZ2luYWxNb3VzZVBvc2l0aW9uPXtsZWZ0OmUucGFnZVgsdG9wOmUucGFnZVl9LHRoaXMuYXNwZWN0UmF0aW89XCJudW1iZXJcIj09dHlwZW9mIG8uYXNwZWN0UmF0aW8/by5hc3BlY3RSYXRpbzp0aGlzLm9yaWdpbmFsU2l6ZS53aWR0aC90aGlzLm9yaWdpbmFsU2l6ZS5oZWlnaHR8fDEsbj10KFwiLnVpLXJlc2l6YWJsZS1cIit0aGlzLmF4aXMpLmNzcyhcImN1cnNvclwiKSx0KFwiYm9keVwiKS5jc3MoXCJjdXJzb3JcIixcImF1dG9cIj09PW4/dGhpcy5heGlzK1wiLXJlc2l6ZVwiOm4pLHRoaXMuX2FkZENsYXNzKFwidWktcmVzaXphYmxlLXJlc2l6aW5nXCIpLHRoaXMuX3Byb3BhZ2F0ZShcInN0YXJ0XCIsZSksITB9LF9tb3VzZURyYWc6ZnVuY3Rpb24oZSl7dmFyIGkscyxuPXRoaXMub3JpZ2luYWxNb3VzZVBvc2l0aW9uLG89dGhpcy5heGlzLGE9ZS5wYWdlWC1uLmxlZnR8fDAscj1lLnBhZ2VZLW4udG9wfHwwLGg9dGhpcy5fY2hhbmdlW29dO3JldHVybiB0aGlzLl91cGRhdGVQcmV2UHJvcGVydGllcygpLGg/KGk9aC5hcHBseSh0aGlzLFtlLGEscl0pLHRoaXMuX3VwZGF0ZVZpcnR1YWxCb3VuZGFyaWVzKGUuc2hpZnRLZXkpLCh0aGlzLl9hc3BlY3RSYXRpb3x8ZS5zaGlmdEtleSkmJihpPXRoaXMuX3VwZGF0ZVJhdGlvKGksZSkpLGk9dGhpcy5fcmVzcGVjdFNpemUoaSxlKSx0aGlzLl91cGRhdGVDYWNoZShpKSx0aGlzLl9wcm9wYWdhdGUoXCJyZXNpemVcIixlKSxzPXRoaXMuX2FwcGx5Q2hhbmdlcygpLCF0aGlzLl9oZWxwZXImJnRoaXMuX3Byb3BvcnRpb25hbGx5UmVzaXplRWxlbWVudHMubGVuZ3RoJiZ0aGlzLl9wcm9wb3J0aW9uYWxseVJlc2l6ZSgpLHQuaXNFbXB0eU9iamVjdChzKXx8KHRoaXMuX3VwZGF0ZVByZXZQcm9wZXJ0aWVzKCksdGhpcy5fdHJpZ2dlcihcInJlc2l6ZVwiLGUsdGhpcy51aSgpKSx0aGlzLl9hcHBseUNoYW5nZXMoKSksITEpOiExfSxfbW91c2VTdG9wOmZ1bmN0aW9uKGUpe3RoaXMucmVzaXppbmc9ITE7dmFyIGkscyxuLG8sYSxyLGgsbD10aGlzLm9wdGlvbnMsYz10aGlzO3JldHVybiB0aGlzLl9oZWxwZXImJihpPXRoaXMuX3Byb3BvcnRpb25hbGx5UmVzaXplRWxlbWVudHMscz1pLmxlbmd0aCYmL3RleHRhcmVhL2kudGVzdChpWzBdLm5vZGVOYW1lKSxuPXMmJnRoaXMuX2hhc1Njcm9sbChpWzBdLFwibGVmdFwiKT8wOmMuc2l6ZURpZmYuaGVpZ2h0LG89cz8wOmMuc2l6ZURpZmYud2lkdGgsYT17d2lkdGg6Yy5oZWxwZXIud2lkdGgoKS1vLGhlaWdodDpjLmhlbHBlci5oZWlnaHQoKS1ufSxyPXBhcnNlRmxvYXQoYy5lbGVtZW50LmNzcyhcImxlZnRcIikpKyhjLnBvc2l0aW9uLmxlZnQtYy5vcmlnaW5hbFBvc2l0aW9uLmxlZnQpfHxudWxsLGg9cGFyc2VGbG9hdChjLmVsZW1lbnQuY3NzKFwidG9wXCIpKSsoYy5wb3NpdGlvbi50b3AtYy5vcmlnaW5hbFBvc2l0aW9uLnRvcCl8fG51bGwsbC5hbmltYXRlfHx0aGlzLmVsZW1lbnQuY3NzKHQuZXh0ZW5kKGEse3RvcDpoLGxlZnQ6cn0pKSxjLmhlbHBlci5oZWlnaHQoYy5zaXplLmhlaWdodCksYy5oZWxwZXIud2lkdGgoYy5zaXplLndpZHRoKSx0aGlzLl9oZWxwZXImJiFsLmFuaW1hdGUmJnRoaXMuX3Byb3BvcnRpb25hbGx5UmVzaXplKCkpLHQoXCJib2R5XCIpLmNzcyhcImN1cnNvclwiLFwiYXV0b1wiKSx0aGlzLl9yZW1vdmVDbGFzcyhcInVpLXJlc2l6YWJsZS1yZXNpemluZ1wiKSx0aGlzLl9wcm9wYWdhdGUoXCJzdG9wXCIsZSksdGhpcy5faGVscGVyJiZ0aGlzLmhlbHBlci5yZW1vdmUoKSwhMX0sX3VwZGF0ZVByZXZQcm9wZXJ0aWVzOmZ1bmN0aW9uKCl7dGhpcy5wcmV2UG9zaXRpb249e3RvcDp0aGlzLnBvc2l0aW9uLnRvcCxsZWZ0OnRoaXMucG9zaXRpb24ubGVmdH0sdGhpcy5wcmV2U2l6ZT17d2lkdGg6dGhpcy5zaXplLndpZHRoLGhlaWdodDp0aGlzLnNpemUuaGVpZ2h0fX0sX2FwcGx5Q2hhbmdlczpmdW5jdGlvbigpe3ZhciB0PXt9O3JldHVybiB0aGlzLnBvc2l0aW9uLnRvcCE9PXRoaXMucHJldlBvc2l0aW9uLnRvcCYmKHQudG9wPXRoaXMucG9zaXRpb24udG9wK1wicHhcIiksdGhpcy5wb3NpdGlvbi5sZWZ0IT09dGhpcy5wcmV2UG9zaXRpb24ubGVmdCYmKHQubGVmdD10aGlzLnBvc2l0aW9uLmxlZnQrXCJweFwiKSx0aGlzLnNpemUud2lkdGghPT10aGlzLnByZXZTaXplLndpZHRoJiYodC53aWR0aD10aGlzLnNpemUud2lkdGgrXCJweFwiKSx0aGlzLnNpemUuaGVpZ2h0IT09dGhpcy5wcmV2U2l6ZS5oZWlnaHQmJih0LmhlaWdodD10aGlzLnNpemUuaGVpZ2h0K1wicHhcIiksdGhpcy5oZWxwZXIuY3NzKHQpLHR9LF91cGRhdGVWaXJ0dWFsQm91bmRhcmllczpmdW5jdGlvbih0KXt2YXIgZSxpLHMsbixvLGE9dGhpcy5vcHRpb25zO289e21pbldpZHRoOnRoaXMuX2lzTnVtYmVyKGEubWluV2lkdGgpP2EubWluV2lkdGg6MCxtYXhXaWR0aDp0aGlzLl9pc051bWJlcihhLm1heFdpZHRoKT9hLm1heFdpZHRoOjEvMCxtaW5IZWlnaHQ6dGhpcy5faXNOdW1iZXIoYS5taW5IZWlnaHQpP2EubWluSGVpZ2h0OjAsbWF4SGVpZ2h0OnRoaXMuX2lzTnVtYmVyKGEubWF4SGVpZ2h0KT9hLm1heEhlaWdodDoxLzB9LCh0aGlzLl9hc3BlY3RSYXRpb3x8dCkmJihlPW8ubWluSGVpZ2h0KnRoaXMuYXNwZWN0UmF0aW8scz1vLm1pbldpZHRoL3RoaXMuYXNwZWN0UmF0aW8saT1vLm1heEhlaWdodCp0aGlzLmFzcGVjdFJhdGlvLG49by5tYXhXaWR0aC90aGlzLmFzcGVjdFJhdGlvLGU+by5taW5XaWR0aCYmKG8ubWluV2lkdGg9ZSkscz5vLm1pbkhlaWdodCYmKG8ubWluSGVpZ2h0PXMpLG8ubWF4V2lkdGg+aSYmKG8ubWF4V2lkdGg9aSksby5tYXhIZWlnaHQ+biYmKG8ubWF4SGVpZ2h0PW4pKSx0aGlzLl92Qm91bmRhcmllcz1vfSxfdXBkYXRlQ2FjaGU6ZnVuY3Rpb24odCl7dGhpcy5vZmZzZXQ9dGhpcy5oZWxwZXIub2Zmc2V0KCksdGhpcy5faXNOdW1iZXIodC5sZWZ0KSYmKHRoaXMucG9zaXRpb24ubGVmdD10LmxlZnQpLHRoaXMuX2lzTnVtYmVyKHQudG9wKSYmKHRoaXMucG9zaXRpb24udG9wPXQudG9wKSx0aGlzLl9pc051bWJlcih0LmhlaWdodCkmJih0aGlzLnNpemUuaGVpZ2h0PXQuaGVpZ2h0KSx0aGlzLl9pc051bWJlcih0LndpZHRoKSYmKHRoaXMuc2l6ZS53aWR0aD10LndpZHRoKX0sX3VwZGF0ZVJhdGlvOmZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMucG9zaXRpb24saT10aGlzLnNpemUscz10aGlzLmF4aXM7cmV0dXJuIHRoaXMuX2lzTnVtYmVyKHQuaGVpZ2h0KT90LndpZHRoPXQuaGVpZ2h0KnRoaXMuYXNwZWN0UmF0aW86dGhpcy5faXNOdW1iZXIodC53aWR0aCkmJih0LmhlaWdodD10LndpZHRoL3RoaXMuYXNwZWN0UmF0aW8pLFwic3dcIj09PXMmJih0LmxlZnQ9ZS5sZWZ0KyhpLndpZHRoLXQud2lkdGgpLHQudG9wPW51bGwpLFwibndcIj09PXMmJih0LnRvcD1lLnRvcCsoaS5oZWlnaHQtdC5oZWlnaHQpLHQubGVmdD1lLmxlZnQrKGkud2lkdGgtdC53aWR0aCkpLHR9LF9yZXNwZWN0U2l6ZTpmdW5jdGlvbih0KXt2YXIgZT10aGlzLl92Qm91bmRhcmllcyxpPXRoaXMuYXhpcyxzPXRoaXMuX2lzTnVtYmVyKHQud2lkdGgpJiZlLm1heFdpZHRoJiZlLm1heFdpZHRoPHQud2lkdGgsbj10aGlzLl9pc051bWJlcih0LmhlaWdodCkmJmUubWF4SGVpZ2h0JiZlLm1heEhlaWdodDx0LmhlaWdodCxvPXRoaXMuX2lzTnVtYmVyKHQud2lkdGgpJiZlLm1pbldpZHRoJiZlLm1pbldpZHRoPnQud2lkdGgsYT10aGlzLl9pc051bWJlcih0LmhlaWdodCkmJmUubWluSGVpZ2h0JiZlLm1pbkhlaWdodD50LmhlaWdodCxyPXRoaXMub3JpZ2luYWxQb3NpdGlvbi5sZWZ0K3RoaXMub3JpZ2luYWxTaXplLndpZHRoLGg9dGhpcy5vcmlnaW5hbFBvc2l0aW9uLnRvcCt0aGlzLm9yaWdpbmFsU2l6ZS5oZWlnaHQsbD0vc3d8bnd8dy8udGVzdChpKSxjPS9ud3xuZXxuLy50ZXN0KGkpO3JldHVybiBvJiYodC53aWR0aD1lLm1pbldpZHRoKSxhJiYodC5oZWlnaHQ9ZS5taW5IZWlnaHQpLHMmJih0LndpZHRoPWUubWF4V2lkdGgpLG4mJih0LmhlaWdodD1lLm1heEhlaWdodCksbyYmbCYmKHQubGVmdD1yLWUubWluV2lkdGgpLHMmJmwmJih0LmxlZnQ9ci1lLm1heFdpZHRoKSxhJiZjJiYodC50b3A9aC1lLm1pbkhlaWdodCksbiYmYyYmKHQudG9wPWgtZS5tYXhIZWlnaHQpLHQud2lkdGh8fHQuaGVpZ2h0fHx0LmxlZnR8fCF0LnRvcD90LndpZHRofHx0LmhlaWdodHx8dC50b3B8fCF0LmxlZnR8fCh0LmxlZnQ9bnVsbCk6dC50b3A9bnVsbCx0fSxfZ2V0UGFkZGluZ1BsdXNCb3JkZXJEaW1lbnNpb25zOmZ1bmN0aW9uKHQpe2Zvcih2YXIgZT0wLGk9W10scz1bdC5jc3MoXCJib3JkZXJUb3BXaWR0aFwiKSx0LmNzcyhcImJvcmRlclJpZ2h0V2lkdGhcIiksdC5jc3MoXCJib3JkZXJCb3R0b21XaWR0aFwiKSx0LmNzcyhcImJvcmRlckxlZnRXaWR0aFwiKV0sbj1bdC5jc3MoXCJwYWRkaW5nVG9wXCIpLHQuY3NzKFwicGFkZGluZ1JpZ2h0XCIpLHQuY3NzKFwicGFkZGluZ0JvdHRvbVwiKSx0LmNzcyhcInBhZGRpbmdMZWZ0XCIpXTs0PmU7ZSsrKWlbZV09cGFyc2VGbG9hdChzW2VdKXx8MCxpW2VdKz1wYXJzZUZsb2F0KG5bZV0pfHwwO3JldHVybntoZWlnaHQ6aVswXStpWzJdLHdpZHRoOmlbMV0raVszXX19LF9wcm9wb3J0aW9uYWxseVJlc2l6ZTpmdW5jdGlvbigpe2lmKHRoaXMuX3Byb3BvcnRpb25hbGx5UmVzaXplRWxlbWVudHMubGVuZ3RoKWZvcih2YXIgdCxlPTAsaT10aGlzLmhlbHBlcnx8dGhpcy5lbGVtZW50O3RoaXMuX3Byb3BvcnRpb25hbGx5UmVzaXplRWxlbWVudHMubGVuZ3RoPmU7ZSsrKXQ9dGhpcy5fcHJvcG9ydGlvbmFsbHlSZXNpemVFbGVtZW50c1tlXSx0aGlzLm91dGVyRGltZW5zaW9uc3x8KHRoaXMub3V0ZXJEaW1lbnNpb25zPXRoaXMuX2dldFBhZGRpbmdQbHVzQm9yZGVyRGltZW5zaW9ucyh0KSksdC5jc3Moe2hlaWdodDppLmhlaWdodCgpLXRoaXMub3V0ZXJEaW1lbnNpb25zLmhlaWdodHx8MCx3aWR0aDppLndpZHRoKCktdGhpcy5vdXRlckRpbWVuc2lvbnMud2lkdGh8fDB9KX0sX3JlbmRlclByb3h5OmZ1bmN0aW9uKCl7dmFyIGU9dGhpcy5lbGVtZW50LGk9dGhpcy5vcHRpb25zO3RoaXMuZWxlbWVudE9mZnNldD1lLm9mZnNldCgpLHRoaXMuX2hlbHBlcj8odGhpcy5oZWxwZXI9dGhpcy5oZWxwZXJ8fHQoXCI8ZGl2IHN0eWxlPSdvdmVyZmxvdzpoaWRkZW47Jz48L2Rpdj5cIiksdGhpcy5fYWRkQ2xhc3ModGhpcy5oZWxwZXIsdGhpcy5faGVscGVyKSx0aGlzLmhlbHBlci5jc3Moe3dpZHRoOnRoaXMuZWxlbWVudC5vdXRlcldpZHRoKCksaGVpZ2h0OnRoaXMuZWxlbWVudC5vdXRlckhlaWdodCgpLHBvc2l0aW9uOlwiYWJzb2x1dGVcIixsZWZ0OnRoaXMuZWxlbWVudE9mZnNldC5sZWZ0K1wicHhcIix0b3A6dGhpcy5lbGVtZW50T2Zmc2V0LnRvcCtcInB4XCIsekluZGV4OisraS56SW5kZXh9KSx0aGlzLmhlbHBlci5hcHBlbmRUbyhcImJvZHlcIikuZGlzYWJsZVNlbGVjdGlvbigpKTp0aGlzLmhlbHBlcj10aGlzLmVsZW1lbnR9LF9jaGFuZ2U6e2U6ZnVuY3Rpb24odCxlKXtyZXR1cm57d2lkdGg6dGhpcy5vcmlnaW5hbFNpemUud2lkdGgrZX19LHc6ZnVuY3Rpb24odCxlKXt2YXIgaT10aGlzLm9yaWdpbmFsU2l6ZSxzPXRoaXMub3JpZ2luYWxQb3NpdGlvbjtyZXR1cm57bGVmdDpzLmxlZnQrZSx3aWR0aDppLndpZHRoLWV9fSxuOmZ1bmN0aW9uKHQsZSxpKXt2YXIgcz10aGlzLm9yaWdpbmFsU2l6ZSxuPXRoaXMub3JpZ2luYWxQb3NpdGlvbjtyZXR1cm57dG9wOm4udG9wK2ksaGVpZ2h0OnMuaGVpZ2h0LWl9fSxzOmZ1bmN0aW9uKHQsZSxpKXtyZXR1cm57aGVpZ2h0OnRoaXMub3JpZ2luYWxTaXplLmhlaWdodCtpfX0sc2U6ZnVuY3Rpb24oZSxpLHMpe3JldHVybiB0LmV4dGVuZCh0aGlzLl9jaGFuZ2Uucy5hcHBseSh0aGlzLGFyZ3VtZW50cyksdGhpcy5fY2hhbmdlLmUuYXBwbHkodGhpcyxbZSxpLHNdKSl9LHN3OmZ1bmN0aW9uKGUsaSxzKXtyZXR1cm4gdC5leHRlbmQodGhpcy5fY2hhbmdlLnMuYXBwbHkodGhpcyxhcmd1bWVudHMpLHRoaXMuX2NoYW5nZS53LmFwcGx5KHRoaXMsW2UsaSxzXSkpfSxuZTpmdW5jdGlvbihlLGkscyl7cmV0dXJuIHQuZXh0ZW5kKHRoaXMuX2NoYW5nZS5uLmFwcGx5KHRoaXMsYXJndW1lbnRzKSx0aGlzLl9jaGFuZ2UuZS5hcHBseSh0aGlzLFtlLGksc10pKX0sbnc6ZnVuY3Rpb24oZSxpLHMpe3JldHVybiB0LmV4dGVuZCh0aGlzLl9jaGFuZ2Uubi5hcHBseSh0aGlzLGFyZ3VtZW50cyksdGhpcy5fY2hhbmdlLncuYXBwbHkodGhpcyxbZSxpLHNdKSl9fSxfcHJvcGFnYXRlOmZ1bmN0aW9uKGUsaSl7dC51aS5wbHVnaW4uY2FsbCh0aGlzLGUsW2ksdGhpcy51aSgpXSksXCJyZXNpemVcIiE9PWUmJnRoaXMuX3RyaWdnZXIoZSxpLHRoaXMudWkoKSl9LHBsdWdpbnM6e30sdWk6ZnVuY3Rpb24oKXtyZXR1cm57b3JpZ2luYWxFbGVtZW50OnRoaXMub3JpZ2luYWxFbGVtZW50LGVsZW1lbnQ6dGhpcy5lbGVtZW50LGhlbHBlcjp0aGlzLmhlbHBlcixwb3NpdGlvbjp0aGlzLnBvc2l0aW9uLHNpemU6dGhpcy5zaXplLG9yaWdpbmFsU2l6ZTp0aGlzLm9yaWdpbmFsU2l6ZSxvcmlnaW5hbFBvc2l0aW9uOnRoaXMub3JpZ2luYWxQb3NpdGlvbn19fSksdC51aS5wbHVnaW4uYWRkKFwicmVzaXphYmxlXCIsXCJhbmltYXRlXCIse3N0b3A6ZnVuY3Rpb24oZSl7dmFyIGk9dCh0aGlzKS5yZXNpemFibGUoXCJpbnN0YW5jZVwiKSxzPWkub3B0aW9ucyxuPWkuX3Byb3BvcnRpb25hbGx5UmVzaXplRWxlbWVudHMsbz1uLmxlbmd0aCYmL3RleHRhcmVhL2kudGVzdChuWzBdLm5vZGVOYW1lKSxhPW8mJmkuX2hhc1Njcm9sbChuWzBdLFwibGVmdFwiKT8wOmkuc2l6ZURpZmYuaGVpZ2h0LHI9bz8wOmkuc2l6ZURpZmYud2lkdGgsaD17d2lkdGg6aS5zaXplLndpZHRoLXIsaGVpZ2h0Omkuc2l6ZS5oZWlnaHQtYX0sbD1wYXJzZUZsb2F0KGkuZWxlbWVudC5jc3MoXCJsZWZ0XCIpKSsoaS5wb3NpdGlvbi5sZWZ0LWkub3JpZ2luYWxQb3NpdGlvbi5sZWZ0KXx8bnVsbCxjPXBhcnNlRmxvYXQoaS5lbGVtZW50LmNzcyhcInRvcFwiKSkrKGkucG9zaXRpb24udG9wLWkub3JpZ2luYWxQb3NpdGlvbi50b3ApfHxudWxsO2kuZWxlbWVudC5hbmltYXRlKHQuZXh0ZW5kKGgsYyYmbD97dG9wOmMsbGVmdDpsfTp7fSkse2R1cmF0aW9uOnMuYW5pbWF0ZUR1cmF0aW9uLGVhc2luZzpzLmFuaW1hdGVFYXNpbmcsc3RlcDpmdW5jdGlvbigpe3ZhciBzPXt3aWR0aDpwYXJzZUZsb2F0KGkuZWxlbWVudC5jc3MoXCJ3aWR0aFwiKSksaGVpZ2h0OnBhcnNlRmxvYXQoaS5lbGVtZW50LmNzcyhcImhlaWdodFwiKSksdG9wOnBhcnNlRmxvYXQoaS5lbGVtZW50LmNzcyhcInRvcFwiKSksbGVmdDpwYXJzZUZsb2F0KGkuZWxlbWVudC5jc3MoXCJsZWZ0XCIpKX07biYmbi5sZW5ndGgmJnQoblswXSkuY3NzKHt3aWR0aDpzLndpZHRoLGhlaWdodDpzLmhlaWdodH0pLGkuX3VwZGF0ZUNhY2hlKHMpLGkuX3Byb3BhZ2F0ZShcInJlc2l6ZVwiLGUpfX0pfX0pLHQudWkucGx1Z2luLmFkZChcInJlc2l6YWJsZVwiLFwiY29udGFpbm1lbnRcIix7c3RhcnQ6ZnVuY3Rpb24oKXt2YXIgZSxpLHMsbixvLGEscixoPXQodGhpcykucmVzaXphYmxlKFwiaW5zdGFuY2VcIiksbD1oLm9wdGlvbnMsYz1oLmVsZW1lbnQsdT1sLmNvbnRhaW5tZW50LGQ9dSBpbnN0YW5jZW9mIHQ/dS5nZXQoMCk6L3BhcmVudC8udGVzdCh1KT9jLnBhcmVudCgpLmdldCgwKTp1O2QmJihoLmNvbnRhaW5lckVsZW1lbnQ9dChkKSwvZG9jdW1lbnQvLnRlc3QodSl8fHU9PT1kb2N1bWVudD8oaC5jb250YWluZXJPZmZzZXQ9e2xlZnQ6MCx0b3A6MH0saC5jb250YWluZXJQb3NpdGlvbj17bGVmdDowLHRvcDowfSxoLnBhcmVudERhdGE9e2VsZW1lbnQ6dChkb2N1bWVudCksbGVmdDowLHRvcDowLHdpZHRoOnQoZG9jdW1lbnQpLndpZHRoKCksaGVpZ2h0OnQoZG9jdW1lbnQpLmhlaWdodCgpfHxkb2N1bWVudC5ib2R5LnBhcmVudE5vZGUuc2Nyb2xsSGVpZ2h0fSk6KGU9dChkKSxpPVtdLHQoW1wiVG9wXCIsXCJSaWdodFwiLFwiTGVmdFwiLFwiQm90dG9tXCJdKS5lYWNoKGZ1bmN0aW9uKHQscyl7aVt0XT1oLl9udW0oZS5jc3MoXCJwYWRkaW5nXCIrcykpfSksaC5jb250YWluZXJPZmZzZXQ9ZS5vZmZzZXQoKSxoLmNvbnRhaW5lclBvc2l0aW9uPWUucG9zaXRpb24oKSxoLmNvbnRhaW5lclNpemU9e2hlaWdodDplLmlubmVySGVpZ2h0KCktaVszXSx3aWR0aDplLmlubmVyV2lkdGgoKS1pWzFdfSxzPWguY29udGFpbmVyT2Zmc2V0LG49aC5jb250YWluZXJTaXplLmhlaWdodCxvPWguY29udGFpbmVyU2l6ZS53aWR0aCxhPWguX2hhc1Njcm9sbChkLFwibGVmdFwiKT9kLnNjcm9sbFdpZHRoOm8scj1oLl9oYXNTY3JvbGwoZCk/ZC5zY3JvbGxIZWlnaHQ6bixoLnBhcmVudERhdGE9e2VsZW1lbnQ6ZCxsZWZ0OnMubGVmdCx0b3A6cy50b3Asd2lkdGg6YSxoZWlnaHQ6cn0pKX0scmVzaXplOmZ1bmN0aW9uKGUpe3ZhciBpLHMsbixvLGE9dCh0aGlzKS5yZXNpemFibGUoXCJpbnN0YW5jZVwiKSxyPWEub3B0aW9ucyxoPWEuY29udGFpbmVyT2Zmc2V0LGw9YS5wb3NpdGlvbixjPWEuX2FzcGVjdFJhdGlvfHxlLnNoaWZ0S2V5LHU9e3RvcDowLGxlZnQ6MH0sZD1hLmNvbnRhaW5lckVsZW1lbnQscD0hMDtkWzBdIT09ZG9jdW1lbnQmJi9zdGF0aWMvLnRlc3QoZC5jc3MoXCJwb3NpdGlvblwiKSkmJih1PWgpLGwubGVmdDwoYS5faGVscGVyP2gubGVmdDowKSYmKGEuc2l6ZS53aWR0aD1hLnNpemUud2lkdGgrKGEuX2hlbHBlcj9hLnBvc2l0aW9uLmxlZnQtaC5sZWZ0OmEucG9zaXRpb24ubGVmdC11LmxlZnQpLGMmJihhLnNpemUuaGVpZ2h0PWEuc2l6ZS53aWR0aC9hLmFzcGVjdFJhdGlvLHA9ITEpLGEucG9zaXRpb24ubGVmdD1yLmhlbHBlcj9oLmxlZnQ6MCksbC50b3A8KGEuX2hlbHBlcj9oLnRvcDowKSYmKGEuc2l6ZS5oZWlnaHQ9YS5zaXplLmhlaWdodCsoYS5faGVscGVyP2EucG9zaXRpb24udG9wLWgudG9wOmEucG9zaXRpb24udG9wKSxjJiYoYS5zaXplLndpZHRoPWEuc2l6ZS5oZWlnaHQqYS5hc3BlY3RSYXRpbyxwPSExKSxhLnBvc2l0aW9uLnRvcD1hLl9oZWxwZXI/aC50b3A6MCksbj1hLmNvbnRhaW5lckVsZW1lbnQuZ2V0KDApPT09YS5lbGVtZW50LnBhcmVudCgpLmdldCgwKSxvPS9yZWxhdGl2ZXxhYnNvbHV0ZS8udGVzdChhLmNvbnRhaW5lckVsZW1lbnQuY3NzKFwicG9zaXRpb25cIikpLG4mJm8/KGEub2Zmc2V0LmxlZnQ9YS5wYXJlbnREYXRhLmxlZnQrYS5wb3NpdGlvbi5sZWZ0LGEub2Zmc2V0LnRvcD1hLnBhcmVudERhdGEudG9wK2EucG9zaXRpb24udG9wKTooYS5vZmZzZXQubGVmdD1hLmVsZW1lbnQub2Zmc2V0KCkubGVmdCxhLm9mZnNldC50b3A9YS5lbGVtZW50Lm9mZnNldCgpLnRvcCksaT1NYXRoLmFicyhhLnNpemVEaWZmLndpZHRoKyhhLl9oZWxwZXI/YS5vZmZzZXQubGVmdC11LmxlZnQ6YS5vZmZzZXQubGVmdC1oLmxlZnQpKSxzPU1hdGguYWJzKGEuc2l6ZURpZmYuaGVpZ2h0KyhhLl9oZWxwZXI/YS5vZmZzZXQudG9wLXUudG9wOmEub2Zmc2V0LnRvcC1oLnRvcCkpLGkrYS5zaXplLndpZHRoPj1hLnBhcmVudERhdGEud2lkdGgmJihhLnNpemUud2lkdGg9YS5wYXJlbnREYXRhLndpZHRoLWksYyYmKGEuc2l6ZS5oZWlnaHQ9YS5zaXplLndpZHRoL2EuYXNwZWN0UmF0aW8scD0hMSkpLHMrYS5zaXplLmhlaWdodD49YS5wYXJlbnREYXRhLmhlaWdodCYmKGEuc2l6ZS5oZWlnaHQ9YS5wYXJlbnREYXRhLmhlaWdodC1zLGMmJihhLnNpemUud2lkdGg9YS5zaXplLmhlaWdodCphLmFzcGVjdFJhdGlvLHA9ITEpKSxwfHwoYS5wb3NpdGlvbi5sZWZ0PWEucHJldlBvc2l0aW9uLmxlZnQsYS5wb3NpdGlvbi50b3A9YS5wcmV2UG9zaXRpb24udG9wLGEuc2l6ZS53aWR0aD1hLnByZXZTaXplLndpZHRoLGEuc2l6ZS5oZWlnaHQ9YS5wcmV2U2l6ZS5oZWlnaHQpfSxzdG9wOmZ1bmN0aW9uKCl7dmFyIGU9dCh0aGlzKS5yZXNpemFibGUoXCJpbnN0YW5jZVwiKSxpPWUub3B0aW9ucyxzPWUuY29udGFpbmVyT2Zmc2V0LG49ZS5jb250YWluZXJQb3NpdGlvbixvPWUuY29udGFpbmVyRWxlbWVudCxhPXQoZS5oZWxwZXIpLHI9YS5vZmZzZXQoKSxoPWEub3V0ZXJXaWR0aCgpLWUuc2l6ZURpZmYud2lkdGgsbD1hLm91dGVySGVpZ2h0KCktZS5zaXplRGlmZi5oZWlnaHQ7ZS5faGVscGVyJiYhaS5hbmltYXRlJiYvcmVsYXRpdmUvLnRlc3Qoby5jc3MoXCJwb3NpdGlvblwiKSkmJnQodGhpcykuY3NzKHtsZWZ0OnIubGVmdC1uLmxlZnQtcy5sZWZ0LHdpZHRoOmgsaGVpZ2h0Omx9KSxlLl9oZWxwZXImJiFpLmFuaW1hdGUmJi9zdGF0aWMvLnRlc3Qoby5jc3MoXCJwb3NpdGlvblwiKSkmJnQodGhpcykuY3NzKHtsZWZ0OnIubGVmdC1uLmxlZnQtcy5sZWZ0LHdpZHRoOmgsaGVpZ2h0Omx9KX19KSx0LnVpLnBsdWdpbi5hZGQoXCJyZXNpemFibGVcIixcImFsc29SZXNpemVcIix7c3RhcnQ6ZnVuY3Rpb24oKXt2YXIgZT10KHRoaXMpLnJlc2l6YWJsZShcImluc3RhbmNlXCIpLGk9ZS5vcHRpb25zO3QoaS5hbHNvUmVzaXplKS5lYWNoKGZ1bmN0aW9uKCl7dmFyIGU9dCh0aGlzKTtlLmRhdGEoXCJ1aS1yZXNpemFibGUtYWxzb3Jlc2l6ZVwiLHt3aWR0aDpwYXJzZUZsb2F0KGUud2lkdGgoKSksaGVpZ2h0OnBhcnNlRmxvYXQoZS5oZWlnaHQoKSksbGVmdDpwYXJzZUZsb2F0KGUuY3NzKFwibGVmdFwiKSksdG9wOnBhcnNlRmxvYXQoZS5jc3MoXCJ0b3BcIikpfSl9KX0scmVzaXplOmZ1bmN0aW9uKGUsaSl7dmFyIHM9dCh0aGlzKS5yZXNpemFibGUoXCJpbnN0YW5jZVwiKSxuPXMub3B0aW9ucyxvPXMub3JpZ2luYWxTaXplLGE9cy5vcmlnaW5hbFBvc2l0aW9uLHI9e2hlaWdodDpzLnNpemUuaGVpZ2h0LW8uaGVpZ2h0fHwwLHdpZHRoOnMuc2l6ZS53aWR0aC1vLndpZHRofHwwLHRvcDpzLnBvc2l0aW9uLnRvcC1hLnRvcHx8MCxsZWZ0OnMucG9zaXRpb24ubGVmdC1hLmxlZnR8fDB9O3Qobi5hbHNvUmVzaXplKS5lYWNoKGZ1bmN0aW9uKCl7dmFyIGU9dCh0aGlzKSxzPXQodGhpcykuZGF0YShcInVpLXJlc2l6YWJsZS1hbHNvcmVzaXplXCIpLG49e30sbz1lLnBhcmVudHMoaS5vcmlnaW5hbEVsZW1lbnRbMF0pLmxlbmd0aD9bXCJ3aWR0aFwiLFwiaGVpZ2h0XCJdOltcIndpZHRoXCIsXCJoZWlnaHRcIixcInRvcFwiLFwibGVmdFwiXTt0LmVhY2gobyxmdW5jdGlvbih0LGUpe3ZhciBpPShzW2VdfHwwKSsocltlXXx8MCk7aSYmaT49MCYmKG5bZV09aXx8bnVsbCl9KSxlLmNzcyhuKX0pfSxzdG9wOmZ1bmN0aW9uKCl7dCh0aGlzKS5yZW1vdmVEYXRhKFwidWktcmVzaXphYmxlLWFsc29yZXNpemVcIil9fSksdC51aS5wbHVnaW4uYWRkKFwicmVzaXphYmxlXCIsXCJnaG9zdFwiLHtzdGFydDpmdW5jdGlvbigpe3ZhciBlPXQodGhpcykucmVzaXphYmxlKFwiaW5zdGFuY2VcIiksaT1lLnNpemU7ZS5naG9zdD1lLm9yaWdpbmFsRWxlbWVudC5jbG9uZSgpLGUuZ2hvc3QuY3NzKHtvcGFjaXR5Oi4yNSxkaXNwbGF5OlwiYmxvY2tcIixwb3NpdGlvbjpcInJlbGF0aXZlXCIsaGVpZ2h0OmkuaGVpZ2h0LHdpZHRoOmkud2lkdGgsbWFyZ2luOjAsbGVmdDowLHRvcDowfSksZS5fYWRkQ2xhc3MoZS5naG9zdCxcInVpLXJlc2l6YWJsZS1naG9zdFwiKSx0LnVpQmFja0NvbXBhdCE9PSExJiZcInN0cmluZ1wiPT10eXBlb2YgZS5vcHRpb25zLmdob3N0JiZlLmdob3N0LmFkZENsYXNzKHRoaXMub3B0aW9ucy5naG9zdCksZS5naG9zdC5hcHBlbmRUbyhlLmhlbHBlcil9LHJlc2l6ZTpmdW5jdGlvbigpe3ZhciBlPXQodGhpcykucmVzaXphYmxlKFwiaW5zdGFuY2VcIik7ZS5naG9zdCYmZS5naG9zdC5jc3Moe3Bvc2l0aW9uOlwicmVsYXRpdmVcIixoZWlnaHQ6ZS5zaXplLmhlaWdodCx3aWR0aDplLnNpemUud2lkdGh9KX0sc3RvcDpmdW5jdGlvbigpe3ZhciBlPXQodGhpcykucmVzaXphYmxlKFwiaW5zdGFuY2VcIik7ZS5naG9zdCYmZS5oZWxwZXImJmUuaGVscGVyLmdldCgwKS5yZW1vdmVDaGlsZChlLmdob3N0LmdldCgwKSl9fSksdC51aS5wbHVnaW4uYWRkKFwicmVzaXphYmxlXCIsXCJncmlkXCIse3Jlc2l6ZTpmdW5jdGlvbigpe3ZhciBlLGk9dCh0aGlzKS5yZXNpemFibGUoXCJpbnN0YW5jZVwiKSxzPWkub3B0aW9ucyxuPWkuc2l6ZSxvPWkub3JpZ2luYWxTaXplLGE9aS5vcmlnaW5hbFBvc2l0aW9uLHI9aS5heGlzLGg9XCJudW1iZXJcIj09dHlwZW9mIHMuZ3JpZD9bcy5ncmlkLHMuZ3JpZF06cy5ncmlkLGw9aFswXXx8MSxjPWhbMV18fDEsdT1NYXRoLnJvdW5kKChuLndpZHRoLW8ud2lkdGgpL2wpKmwsZD1NYXRoLnJvdW5kKChuLmhlaWdodC1vLmhlaWdodCkvYykqYyxwPW8ud2lkdGgrdSxmPW8uaGVpZ2h0K2QsZz1zLm1heFdpZHRoJiZwPnMubWF4V2lkdGgsbT1zLm1heEhlaWdodCYmZj5zLm1heEhlaWdodCxfPXMubWluV2lkdGgmJnMubWluV2lkdGg+cCx2PXMubWluSGVpZ2h0JiZzLm1pbkhlaWdodD5mO3MuZ3JpZD1oLF8mJihwKz1sKSx2JiYoZis9YyksZyYmKHAtPWwpLG0mJihmLT1jKSwvXihzZXxzfGUpJC8udGVzdChyKT8oaS5zaXplLndpZHRoPXAsaS5zaXplLmhlaWdodD1mKTovXihuZSkkLy50ZXN0KHIpPyhpLnNpemUud2lkdGg9cCxpLnNpemUuaGVpZ2h0PWYsaS5wb3NpdGlvbi50b3A9YS50b3AtZCk6L14oc3cpJC8udGVzdChyKT8oaS5zaXplLndpZHRoPXAsaS5zaXplLmhlaWdodD1mLGkucG9zaXRpb24ubGVmdD1hLmxlZnQtdSk6KCgwPj1mLWN8fDA+PXAtbCkmJihlPWkuX2dldFBhZGRpbmdQbHVzQm9yZGVyRGltZW5zaW9ucyh0aGlzKSksZi1jPjA/KGkuc2l6ZS5oZWlnaHQ9ZixpLnBvc2l0aW9uLnRvcD1hLnRvcC1kKTooZj1jLWUuaGVpZ2h0LGkuc2l6ZS5oZWlnaHQ9ZixpLnBvc2l0aW9uLnRvcD1hLnRvcCtvLmhlaWdodC1mKSxwLWw+MD8oaS5zaXplLndpZHRoPXAsaS5wb3NpdGlvbi5sZWZ0PWEubGVmdC11KToocD1sLWUud2lkdGgsaS5zaXplLndpZHRoPXAsaS5wb3NpdGlvbi5sZWZ0PWEubGVmdCtvLndpZHRoLXApKX19KSx0LnVpLnJlc2l6YWJsZSx0LndpZGdldChcInVpLmRpYWxvZ1wiLHt2ZXJzaW9uOlwiMS4xMi4xXCIsb3B0aW9uczp7YXBwZW5kVG86XCJib2R5XCIsYXV0b09wZW46ITAsYnV0dG9uczpbXSxjbGFzc2VzOntcInVpLWRpYWxvZ1wiOlwidWktY29ybmVyLWFsbFwiLFwidWktZGlhbG9nLXRpdGxlYmFyXCI6XCJ1aS1jb3JuZXItYWxsXCJ9LGNsb3NlT25Fc2NhcGU6ITAsY2xvc2VUZXh0OlwiQ2xvc2VcIixkcmFnZ2FibGU6ITAsaGlkZTpudWxsLGhlaWdodDpcImF1dG9cIixtYXhIZWlnaHQ6bnVsbCxtYXhXaWR0aDpudWxsLG1pbkhlaWdodDoxNTAsbWluV2lkdGg6MTUwLG1vZGFsOiExLHBvc2l0aW9uOntteTpcImNlbnRlclwiLGF0OlwiY2VudGVyXCIsb2Y6d2luZG93LGNvbGxpc2lvbjpcImZpdFwiLHVzaW5nOmZ1bmN0aW9uKGUpe3ZhciBpPXQodGhpcykuY3NzKGUpLm9mZnNldCgpLnRvcDswPmkmJnQodGhpcykuY3NzKFwidG9wXCIsZS50b3AtaSl9fSxyZXNpemFibGU6ITAsc2hvdzpudWxsLHRpdGxlOm51bGwsd2lkdGg6MzAwLGJlZm9yZUNsb3NlOm51bGwsY2xvc2U6bnVsbCxkcmFnOm51bGwsZHJhZ1N0YXJ0Om51bGwsZHJhZ1N0b3A6bnVsbCxmb2N1czpudWxsLG9wZW46bnVsbCxyZXNpemU6bnVsbCxyZXNpemVTdGFydDpudWxsLHJlc2l6ZVN0b3A6bnVsbH0sc2l6ZVJlbGF0ZWRPcHRpb25zOntidXR0b25zOiEwLGhlaWdodDohMCxtYXhIZWlnaHQ6ITAsbWF4V2lkdGg6ITAsbWluSGVpZ2h0OiEwLG1pbldpZHRoOiEwLHdpZHRoOiEwfSxyZXNpemFibGVSZWxhdGVkT3B0aW9uczp7bWF4SGVpZ2h0OiEwLG1heFdpZHRoOiEwLG1pbkhlaWdodDohMCxtaW5XaWR0aDohMH0sX2NyZWF0ZTpmdW5jdGlvbigpe3RoaXMub3JpZ2luYWxDc3M9e2Rpc3BsYXk6dGhpcy5lbGVtZW50WzBdLnN0eWxlLmRpc3BsYXksd2lkdGg6dGhpcy5lbGVtZW50WzBdLnN0eWxlLndpZHRoLG1pbkhlaWdodDp0aGlzLmVsZW1lbnRbMF0uc3R5bGUubWluSGVpZ2h0LG1heEhlaWdodDp0aGlzLmVsZW1lbnRbMF0uc3R5bGUubWF4SGVpZ2h0LGhlaWdodDp0aGlzLmVsZW1lbnRbMF0uc3R5bGUuaGVpZ2h0fSx0aGlzLm9yaWdpbmFsUG9zaXRpb249e3BhcmVudDp0aGlzLmVsZW1lbnQucGFyZW50KCksaW5kZXg6dGhpcy5lbGVtZW50LnBhcmVudCgpLmNoaWxkcmVuKCkuaW5kZXgodGhpcy5lbGVtZW50KX0sdGhpcy5vcmlnaW5hbFRpdGxlPXRoaXMuZWxlbWVudC5hdHRyKFwidGl0bGVcIiksbnVsbD09dGhpcy5vcHRpb25zLnRpdGxlJiZudWxsIT10aGlzLm9yaWdpbmFsVGl0bGUmJih0aGlzLm9wdGlvbnMudGl0bGU9dGhpcy5vcmlnaW5hbFRpdGxlKSx0aGlzLm9wdGlvbnMuZGlzYWJsZWQmJih0aGlzLm9wdGlvbnMuZGlzYWJsZWQ9ITEpLHRoaXMuX2NyZWF0ZVdyYXBwZXIoKSx0aGlzLmVsZW1lbnQuc2hvdygpLnJlbW92ZUF0dHIoXCJ0aXRsZVwiKS5hcHBlbmRUbyh0aGlzLnVpRGlhbG9nKSx0aGlzLl9hZGRDbGFzcyhcInVpLWRpYWxvZy1jb250ZW50XCIsXCJ1aS13aWRnZXQtY29udGVudFwiKSx0aGlzLl9jcmVhdGVUaXRsZWJhcigpLHRoaXMuX2NyZWF0ZUJ1dHRvblBhbmUoKSx0aGlzLm9wdGlvbnMuZHJhZ2dhYmxlJiZ0LmZuLmRyYWdnYWJsZSYmdGhpcy5fbWFrZURyYWdnYWJsZSgpLHRoaXMub3B0aW9ucy5yZXNpemFibGUmJnQuZm4ucmVzaXphYmxlJiZ0aGlzLl9tYWtlUmVzaXphYmxlKCksdGhpcy5faXNPcGVuPSExLHRoaXMuX3RyYWNrRm9jdXMoKX0sX2luaXQ6ZnVuY3Rpb24oKXt0aGlzLm9wdGlvbnMuYXV0b09wZW4mJnRoaXMub3BlbigpfSxfYXBwZW5kVG86ZnVuY3Rpb24oKXt2YXIgZT10aGlzLm9wdGlvbnMuYXBwZW5kVG87cmV0dXJuIGUmJihlLmpxdWVyeXx8ZS5ub2RlVHlwZSk/dChlKTp0aGlzLmRvY3VtZW50LmZpbmQoZXx8XCJib2R5XCIpLmVxKDApfSxfZGVzdHJveTpmdW5jdGlvbigpe3ZhciB0LGU9dGhpcy5vcmlnaW5hbFBvc2l0aW9uO3RoaXMuX3VudHJhY2tJbnN0YW5jZSgpLHRoaXMuX2Rlc3Ryb3lPdmVybGF5KCksdGhpcy5lbGVtZW50LnJlbW92ZVVuaXF1ZUlkKCkuY3NzKHRoaXMub3JpZ2luYWxDc3MpLmRldGFjaCgpLHRoaXMudWlEaWFsb2cucmVtb3ZlKCksdGhpcy5vcmlnaW5hbFRpdGxlJiZ0aGlzLmVsZW1lbnQuYXR0cihcInRpdGxlXCIsdGhpcy5vcmlnaW5hbFRpdGxlKSx0PWUucGFyZW50LmNoaWxkcmVuKCkuZXEoZS5pbmRleCksdC5sZW5ndGgmJnRbMF0hPT10aGlzLmVsZW1lbnRbMF0/dC5iZWZvcmUodGhpcy5lbGVtZW50KTplLnBhcmVudC5hcHBlbmQodGhpcy5lbGVtZW50KX0sd2lkZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMudWlEaWFsb2dcbn0sZGlzYWJsZTp0Lm5vb3AsZW5hYmxlOnQubm9vcCxjbG9zZTpmdW5jdGlvbihlKXt2YXIgaT10aGlzO3RoaXMuX2lzT3BlbiYmdGhpcy5fdHJpZ2dlcihcImJlZm9yZUNsb3NlXCIsZSkhPT0hMSYmKHRoaXMuX2lzT3Blbj0hMSx0aGlzLl9mb2N1c2VkRWxlbWVudD1udWxsLHRoaXMuX2Rlc3Ryb3lPdmVybGF5KCksdGhpcy5fdW50cmFja0luc3RhbmNlKCksdGhpcy5vcGVuZXIuZmlsdGVyKFwiOmZvY3VzYWJsZVwiKS50cmlnZ2VyKFwiZm9jdXNcIikubGVuZ3RofHx0LnVpLnNhZmVCbHVyKHQudWkuc2FmZUFjdGl2ZUVsZW1lbnQodGhpcy5kb2N1bWVudFswXSkpLHRoaXMuX2hpZGUodGhpcy51aURpYWxvZyx0aGlzLm9wdGlvbnMuaGlkZSxmdW5jdGlvbigpe2kuX3RyaWdnZXIoXCJjbG9zZVwiLGUpfSkpfSxpc09wZW46ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5faXNPcGVufSxtb3ZlVG9Ub3A6ZnVuY3Rpb24oKXt0aGlzLl9tb3ZlVG9Ub3AoKX0sX21vdmVUb1RvcDpmdW5jdGlvbihlLGkpe3ZhciBzPSExLG49dGhpcy51aURpYWxvZy5zaWJsaW5ncyhcIi51aS1mcm9udDp2aXNpYmxlXCIpLm1hcChmdW5jdGlvbigpe3JldHVybit0KHRoaXMpLmNzcyhcInotaW5kZXhcIil9KS5nZXQoKSxvPU1hdGgubWF4LmFwcGx5KG51bGwsbik7cmV0dXJuIG8+PSt0aGlzLnVpRGlhbG9nLmNzcyhcInotaW5kZXhcIikmJih0aGlzLnVpRGlhbG9nLmNzcyhcInotaW5kZXhcIixvKzEpLHM9ITApLHMmJiFpJiZ0aGlzLl90cmlnZ2VyKFwiZm9jdXNcIixlKSxzfSxvcGVuOmZ1bmN0aW9uKCl7dmFyIGU9dGhpcztyZXR1cm4gdGhpcy5faXNPcGVuPyh0aGlzLl9tb3ZlVG9Ub3AoKSYmdGhpcy5fZm9jdXNUYWJiYWJsZSgpLHZvaWQgMCk6KHRoaXMuX2lzT3Blbj0hMCx0aGlzLm9wZW5lcj10KHQudWkuc2FmZUFjdGl2ZUVsZW1lbnQodGhpcy5kb2N1bWVudFswXSkpLHRoaXMuX3NpemUoKSx0aGlzLl9wb3NpdGlvbigpLHRoaXMuX2NyZWF0ZU92ZXJsYXkoKSx0aGlzLl9tb3ZlVG9Ub3AobnVsbCwhMCksdGhpcy5vdmVybGF5JiZ0aGlzLm92ZXJsYXkuY3NzKFwiei1pbmRleFwiLHRoaXMudWlEaWFsb2cuY3NzKFwiei1pbmRleFwiKS0xKSx0aGlzLl9zaG93KHRoaXMudWlEaWFsb2csdGhpcy5vcHRpb25zLnNob3csZnVuY3Rpb24oKXtlLl9mb2N1c1RhYmJhYmxlKCksZS5fdHJpZ2dlcihcImZvY3VzXCIpfSksdGhpcy5fbWFrZUZvY3VzVGFyZ2V0KCksdGhpcy5fdHJpZ2dlcihcIm9wZW5cIiksdm9pZCAwKX0sX2ZvY3VzVGFiYmFibGU6ZnVuY3Rpb24oKXt2YXIgdD10aGlzLl9mb2N1c2VkRWxlbWVudDt0fHwodD10aGlzLmVsZW1lbnQuZmluZChcIlthdXRvZm9jdXNdXCIpKSx0Lmxlbmd0aHx8KHQ9dGhpcy5lbGVtZW50LmZpbmQoXCI6dGFiYmFibGVcIikpLHQubGVuZ3RofHwodD10aGlzLnVpRGlhbG9nQnV0dG9uUGFuZS5maW5kKFwiOnRhYmJhYmxlXCIpKSx0Lmxlbmd0aHx8KHQ9dGhpcy51aURpYWxvZ1RpdGxlYmFyQ2xvc2UuZmlsdGVyKFwiOnRhYmJhYmxlXCIpKSx0Lmxlbmd0aHx8KHQ9dGhpcy51aURpYWxvZyksdC5lcSgwKS50cmlnZ2VyKFwiZm9jdXNcIil9LF9rZWVwRm9jdXM6ZnVuY3Rpb24oZSl7ZnVuY3Rpb24gaSgpe3ZhciBlPXQudWkuc2FmZUFjdGl2ZUVsZW1lbnQodGhpcy5kb2N1bWVudFswXSksaT10aGlzLnVpRGlhbG9nWzBdPT09ZXx8dC5jb250YWlucyh0aGlzLnVpRGlhbG9nWzBdLGUpO2l8fHRoaXMuX2ZvY3VzVGFiYmFibGUoKX1lLnByZXZlbnREZWZhdWx0KCksaS5jYWxsKHRoaXMpLHRoaXMuX2RlbGF5KGkpfSxfY3JlYXRlV3JhcHBlcjpmdW5jdGlvbigpe3RoaXMudWlEaWFsb2c9dChcIjxkaXY+XCIpLmhpZGUoKS5hdHRyKHt0YWJJbmRleDotMSxyb2xlOlwiZGlhbG9nXCJ9KS5hcHBlbmRUbyh0aGlzLl9hcHBlbmRUbygpKSx0aGlzLl9hZGRDbGFzcyh0aGlzLnVpRGlhbG9nLFwidWktZGlhbG9nXCIsXCJ1aS13aWRnZXQgdWktd2lkZ2V0LWNvbnRlbnQgdWktZnJvbnRcIiksdGhpcy5fb24odGhpcy51aURpYWxvZyx7a2V5ZG93bjpmdW5jdGlvbihlKXtpZih0aGlzLm9wdGlvbnMuY2xvc2VPbkVzY2FwZSYmIWUuaXNEZWZhdWx0UHJldmVudGVkKCkmJmUua2V5Q29kZSYmZS5rZXlDb2RlPT09dC51aS5rZXlDb2RlLkVTQ0FQRSlyZXR1cm4gZS5wcmV2ZW50RGVmYXVsdCgpLHRoaXMuY2xvc2UoZSksdm9pZCAwO2lmKGUua2V5Q29kZT09PXQudWkua2V5Q29kZS5UQUImJiFlLmlzRGVmYXVsdFByZXZlbnRlZCgpKXt2YXIgaT10aGlzLnVpRGlhbG9nLmZpbmQoXCI6dGFiYmFibGVcIikscz1pLmZpbHRlcihcIjpmaXJzdFwiKSxuPWkuZmlsdGVyKFwiOmxhc3RcIik7ZS50YXJnZXQhPT1uWzBdJiZlLnRhcmdldCE9PXRoaXMudWlEaWFsb2dbMF18fGUuc2hpZnRLZXk/ZS50YXJnZXQhPT1zWzBdJiZlLnRhcmdldCE9PXRoaXMudWlEaWFsb2dbMF18fCFlLnNoaWZ0S2V5fHwodGhpcy5fZGVsYXkoZnVuY3Rpb24oKXtuLnRyaWdnZXIoXCJmb2N1c1wiKX0pLGUucHJldmVudERlZmF1bHQoKSk6KHRoaXMuX2RlbGF5KGZ1bmN0aW9uKCl7cy50cmlnZ2VyKFwiZm9jdXNcIil9KSxlLnByZXZlbnREZWZhdWx0KCkpfX0sbW91c2Vkb3duOmZ1bmN0aW9uKHQpe3RoaXMuX21vdmVUb1RvcCh0KSYmdGhpcy5fZm9jdXNUYWJiYWJsZSgpfX0pLHRoaXMuZWxlbWVudC5maW5kKFwiW2FyaWEtZGVzY3JpYmVkYnldXCIpLmxlbmd0aHx8dGhpcy51aURpYWxvZy5hdHRyKHtcImFyaWEtZGVzY3JpYmVkYnlcIjp0aGlzLmVsZW1lbnQudW5pcXVlSWQoKS5hdHRyKFwiaWRcIil9KX0sX2NyZWF0ZVRpdGxlYmFyOmZ1bmN0aW9uKCl7dmFyIGU7dGhpcy51aURpYWxvZ1RpdGxlYmFyPXQoXCI8ZGl2PlwiKSx0aGlzLl9hZGRDbGFzcyh0aGlzLnVpRGlhbG9nVGl0bGViYXIsXCJ1aS1kaWFsb2ctdGl0bGViYXJcIixcInVpLXdpZGdldC1oZWFkZXIgdWktaGVscGVyLWNsZWFyZml4XCIpLHRoaXMuX29uKHRoaXMudWlEaWFsb2dUaXRsZWJhcix7bW91c2Vkb3duOmZ1bmN0aW9uKGUpe3QoZS50YXJnZXQpLmNsb3Nlc3QoXCIudWktZGlhbG9nLXRpdGxlYmFyLWNsb3NlXCIpfHx0aGlzLnVpRGlhbG9nLnRyaWdnZXIoXCJmb2N1c1wiKX19KSx0aGlzLnVpRGlhbG9nVGl0bGViYXJDbG9zZT10KFwiPGJ1dHRvbiB0eXBlPSdidXR0b24nPjwvYnV0dG9uPlwiKS5idXR0b24oe2xhYmVsOnQoXCI8YT5cIikudGV4dCh0aGlzLm9wdGlvbnMuY2xvc2VUZXh0KS5odG1sKCksaWNvbjpcInVpLWljb24tY2xvc2V0aGlja1wiLHNob3dMYWJlbDohMX0pLmFwcGVuZFRvKHRoaXMudWlEaWFsb2dUaXRsZWJhciksdGhpcy5fYWRkQ2xhc3ModGhpcy51aURpYWxvZ1RpdGxlYmFyQ2xvc2UsXCJ1aS1kaWFsb2ctdGl0bGViYXItY2xvc2VcIiksdGhpcy5fb24odGhpcy51aURpYWxvZ1RpdGxlYmFyQ2xvc2Use2NsaWNrOmZ1bmN0aW9uKHQpe3QucHJldmVudERlZmF1bHQoKSx0aGlzLmNsb3NlKHQpfX0pLGU9dChcIjxzcGFuPlwiKS51bmlxdWVJZCgpLnByZXBlbmRUbyh0aGlzLnVpRGlhbG9nVGl0bGViYXIpLHRoaXMuX2FkZENsYXNzKGUsXCJ1aS1kaWFsb2ctdGl0bGVcIiksdGhpcy5fdGl0bGUoZSksdGhpcy51aURpYWxvZ1RpdGxlYmFyLnByZXBlbmRUbyh0aGlzLnVpRGlhbG9nKSx0aGlzLnVpRGlhbG9nLmF0dHIoe1wiYXJpYS1sYWJlbGxlZGJ5XCI6ZS5hdHRyKFwiaWRcIil9KX0sX3RpdGxlOmZ1bmN0aW9uKHQpe3RoaXMub3B0aW9ucy50aXRsZT90LnRleHQodGhpcy5vcHRpb25zLnRpdGxlKTp0Lmh0bWwoXCImIzE2MDtcIil9LF9jcmVhdGVCdXR0b25QYW5lOmZ1bmN0aW9uKCl7dGhpcy51aURpYWxvZ0J1dHRvblBhbmU9dChcIjxkaXY+XCIpLHRoaXMuX2FkZENsYXNzKHRoaXMudWlEaWFsb2dCdXR0b25QYW5lLFwidWktZGlhbG9nLWJ1dHRvbnBhbmVcIixcInVpLXdpZGdldC1jb250ZW50IHVpLWhlbHBlci1jbGVhcmZpeFwiKSx0aGlzLnVpQnV0dG9uU2V0PXQoXCI8ZGl2PlwiKS5hcHBlbmRUbyh0aGlzLnVpRGlhbG9nQnV0dG9uUGFuZSksdGhpcy5fYWRkQ2xhc3ModGhpcy51aUJ1dHRvblNldCxcInVpLWRpYWxvZy1idXR0b25zZXRcIiksdGhpcy5fY3JlYXRlQnV0dG9ucygpfSxfY3JlYXRlQnV0dG9uczpmdW5jdGlvbigpe3ZhciBlPXRoaXMsaT10aGlzLm9wdGlvbnMuYnV0dG9ucztyZXR1cm4gdGhpcy51aURpYWxvZ0J1dHRvblBhbmUucmVtb3ZlKCksdGhpcy51aUJ1dHRvblNldC5lbXB0eSgpLHQuaXNFbXB0eU9iamVjdChpKXx8dC5pc0FycmF5KGkpJiYhaS5sZW5ndGg/KHRoaXMuX3JlbW92ZUNsYXNzKHRoaXMudWlEaWFsb2csXCJ1aS1kaWFsb2ctYnV0dG9uc1wiKSx2b2lkIDApOih0LmVhY2goaSxmdW5jdGlvbihpLHMpe3ZhciBuLG87cz10LmlzRnVuY3Rpb24ocyk/e2NsaWNrOnMsdGV4dDppfTpzLHM9dC5leHRlbmQoe3R5cGU6XCJidXR0b25cIn0scyksbj1zLmNsaWNrLG89e2ljb246cy5pY29uLGljb25Qb3NpdGlvbjpzLmljb25Qb3NpdGlvbixzaG93TGFiZWw6cy5zaG93TGFiZWwsaWNvbnM6cy5pY29ucyx0ZXh0OnMudGV4dH0sZGVsZXRlIHMuY2xpY2ssZGVsZXRlIHMuaWNvbixkZWxldGUgcy5pY29uUG9zaXRpb24sZGVsZXRlIHMuc2hvd0xhYmVsLGRlbGV0ZSBzLmljb25zLFwiYm9vbGVhblwiPT10eXBlb2Ygcy50ZXh0JiZkZWxldGUgcy50ZXh0LHQoXCI8YnV0dG9uPjwvYnV0dG9uPlwiLHMpLmJ1dHRvbihvKS5hcHBlbmRUbyhlLnVpQnV0dG9uU2V0KS5vbihcImNsaWNrXCIsZnVuY3Rpb24oKXtuLmFwcGx5KGUuZWxlbWVudFswXSxhcmd1bWVudHMpfSl9KSx0aGlzLl9hZGRDbGFzcyh0aGlzLnVpRGlhbG9nLFwidWktZGlhbG9nLWJ1dHRvbnNcIiksdGhpcy51aURpYWxvZ0J1dHRvblBhbmUuYXBwZW5kVG8odGhpcy51aURpYWxvZyksdm9pZCAwKX0sX21ha2VEcmFnZ2FibGU6ZnVuY3Rpb24oKXtmdW5jdGlvbiBlKHQpe3JldHVybntwb3NpdGlvbjp0LnBvc2l0aW9uLG9mZnNldDp0Lm9mZnNldH19dmFyIGk9dGhpcyxzPXRoaXMub3B0aW9uczt0aGlzLnVpRGlhbG9nLmRyYWdnYWJsZSh7Y2FuY2VsOlwiLnVpLWRpYWxvZy1jb250ZW50LCAudWktZGlhbG9nLXRpdGxlYmFyLWNsb3NlXCIsaGFuZGxlOlwiLnVpLWRpYWxvZy10aXRsZWJhclwiLGNvbnRhaW5tZW50OlwiZG9jdW1lbnRcIixzdGFydDpmdW5jdGlvbihzLG4pe2kuX2FkZENsYXNzKHQodGhpcyksXCJ1aS1kaWFsb2ctZHJhZ2dpbmdcIiksaS5fYmxvY2tGcmFtZXMoKSxpLl90cmlnZ2VyKFwiZHJhZ1N0YXJ0XCIscyxlKG4pKX0sZHJhZzpmdW5jdGlvbih0LHMpe2kuX3RyaWdnZXIoXCJkcmFnXCIsdCxlKHMpKX0sc3RvcDpmdW5jdGlvbihuLG8pe3ZhciBhPW8ub2Zmc2V0LmxlZnQtaS5kb2N1bWVudC5zY3JvbGxMZWZ0KCkscj1vLm9mZnNldC50b3AtaS5kb2N1bWVudC5zY3JvbGxUb3AoKTtzLnBvc2l0aW9uPXtteTpcImxlZnQgdG9wXCIsYXQ6XCJsZWZ0XCIrKGE+PTA/XCIrXCI6XCJcIikrYStcIiBcIitcInRvcFwiKyhyPj0wP1wiK1wiOlwiXCIpK3Isb2Y6aS53aW5kb3d9LGkuX3JlbW92ZUNsYXNzKHQodGhpcyksXCJ1aS1kaWFsb2ctZHJhZ2dpbmdcIiksaS5fdW5ibG9ja0ZyYW1lcygpLGkuX3RyaWdnZXIoXCJkcmFnU3RvcFwiLG4sZShvKSl9fSl9LF9tYWtlUmVzaXphYmxlOmZ1bmN0aW9uKCl7ZnVuY3Rpb24gZSh0KXtyZXR1cm57b3JpZ2luYWxQb3NpdGlvbjp0Lm9yaWdpbmFsUG9zaXRpb24sb3JpZ2luYWxTaXplOnQub3JpZ2luYWxTaXplLHBvc2l0aW9uOnQucG9zaXRpb24sc2l6ZTp0LnNpemV9fXZhciBpPXRoaXMscz10aGlzLm9wdGlvbnMsbj1zLnJlc2l6YWJsZSxvPXRoaXMudWlEaWFsb2cuY3NzKFwicG9zaXRpb25cIiksYT1cInN0cmluZ1wiPT10eXBlb2Ygbj9uOlwibixlLHMsdyxzZSxzdyxuZSxud1wiO3RoaXMudWlEaWFsb2cucmVzaXphYmxlKHtjYW5jZWw6XCIudWktZGlhbG9nLWNvbnRlbnRcIixjb250YWlubWVudDpcImRvY3VtZW50XCIsYWxzb1Jlc2l6ZTp0aGlzLmVsZW1lbnQsbWF4V2lkdGg6cy5tYXhXaWR0aCxtYXhIZWlnaHQ6cy5tYXhIZWlnaHQsbWluV2lkdGg6cy5taW5XaWR0aCxtaW5IZWlnaHQ6dGhpcy5fbWluSGVpZ2h0KCksaGFuZGxlczphLHN0YXJ0OmZ1bmN0aW9uKHMsbil7aS5fYWRkQ2xhc3ModCh0aGlzKSxcInVpLWRpYWxvZy1yZXNpemluZ1wiKSxpLl9ibG9ja0ZyYW1lcygpLGkuX3RyaWdnZXIoXCJyZXNpemVTdGFydFwiLHMsZShuKSl9LHJlc2l6ZTpmdW5jdGlvbih0LHMpe2kuX3RyaWdnZXIoXCJyZXNpemVcIix0LGUocykpfSxzdG9wOmZ1bmN0aW9uKG4sbyl7dmFyIGE9aS51aURpYWxvZy5vZmZzZXQoKSxyPWEubGVmdC1pLmRvY3VtZW50LnNjcm9sbExlZnQoKSxoPWEudG9wLWkuZG9jdW1lbnQuc2Nyb2xsVG9wKCk7cy5oZWlnaHQ9aS51aURpYWxvZy5oZWlnaHQoKSxzLndpZHRoPWkudWlEaWFsb2cud2lkdGgoKSxzLnBvc2l0aW9uPXtteTpcImxlZnQgdG9wXCIsYXQ6XCJsZWZ0XCIrKHI+PTA/XCIrXCI6XCJcIikrcitcIiBcIitcInRvcFwiKyhoPj0wP1wiK1wiOlwiXCIpK2gsb2Y6aS53aW5kb3d9LGkuX3JlbW92ZUNsYXNzKHQodGhpcyksXCJ1aS1kaWFsb2ctcmVzaXppbmdcIiksaS5fdW5ibG9ja0ZyYW1lcygpLGkuX3RyaWdnZXIoXCJyZXNpemVTdG9wXCIsbixlKG8pKX19KS5jc3MoXCJwb3NpdGlvblwiLG8pfSxfdHJhY2tGb2N1czpmdW5jdGlvbigpe3RoaXMuX29uKHRoaXMud2lkZ2V0KCkse2ZvY3VzaW46ZnVuY3Rpb24oZSl7dGhpcy5fbWFrZUZvY3VzVGFyZ2V0KCksdGhpcy5fZm9jdXNlZEVsZW1lbnQ9dChlLnRhcmdldCl9fSl9LF9tYWtlRm9jdXNUYXJnZXQ6ZnVuY3Rpb24oKXt0aGlzLl91bnRyYWNrSW5zdGFuY2UoKSx0aGlzLl90cmFja2luZ0luc3RhbmNlcygpLnVuc2hpZnQodGhpcyl9LF91bnRyYWNrSW5zdGFuY2U6ZnVuY3Rpb24oKXt2YXIgZT10aGlzLl90cmFja2luZ0luc3RhbmNlcygpLGk9dC5pbkFycmF5KHRoaXMsZSk7LTEhPT1pJiZlLnNwbGljZShpLDEpfSxfdHJhY2tpbmdJbnN0YW5jZXM6ZnVuY3Rpb24oKXt2YXIgdD10aGlzLmRvY3VtZW50LmRhdGEoXCJ1aS1kaWFsb2ctaW5zdGFuY2VzXCIpO3JldHVybiB0fHwodD1bXSx0aGlzLmRvY3VtZW50LmRhdGEoXCJ1aS1kaWFsb2ctaW5zdGFuY2VzXCIsdCkpLHR9LF9taW5IZWlnaHQ6ZnVuY3Rpb24oKXt2YXIgdD10aGlzLm9wdGlvbnM7cmV0dXJuXCJhdXRvXCI9PT10LmhlaWdodD90Lm1pbkhlaWdodDpNYXRoLm1pbih0Lm1pbkhlaWdodCx0LmhlaWdodCl9LF9wb3NpdGlvbjpmdW5jdGlvbigpe3ZhciB0PXRoaXMudWlEaWFsb2cuaXMoXCI6dmlzaWJsZVwiKTt0fHx0aGlzLnVpRGlhbG9nLnNob3coKSx0aGlzLnVpRGlhbG9nLnBvc2l0aW9uKHRoaXMub3B0aW9ucy5wb3NpdGlvbiksdHx8dGhpcy51aURpYWxvZy5oaWRlKCl9LF9zZXRPcHRpb25zOmZ1bmN0aW9uKGUpe3ZhciBpPXRoaXMscz0hMSxuPXt9O3QuZWFjaChlLGZ1bmN0aW9uKHQsZSl7aS5fc2V0T3B0aW9uKHQsZSksdCBpbiBpLnNpemVSZWxhdGVkT3B0aW9ucyYmKHM9ITApLHQgaW4gaS5yZXNpemFibGVSZWxhdGVkT3B0aW9ucyYmKG5bdF09ZSl9KSxzJiYodGhpcy5fc2l6ZSgpLHRoaXMuX3Bvc2l0aW9uKCkpLHRoaXMudWlEaWFsb2cuaXMoXCI6ZGF0YSh1aS1yZXNpemFibGUpXCIpJiZ0aGlzLnVpRGlhbG9nLnJlc2l6YWJsZShcIm9wdGlvblwiLG4pfSxfc2V0T3B0aW9uOmZ1bmN0aW9uKGUsaSl7dmFyIHMsbixvPXRoaXMudWlEaWFsb2c7XCJkaXNhYmxlZFwiIT09ZSYmKHRoaXMuX3N1cGVyKGUsaSksXCJhcHBlbmRUb1wiPT09ZSYmdGhpcy51aURpYWxvZy5hcHBlbmRUbyh0aGlzLl9hcHBlbmRUbygpKSxcImJ1dHRvbnNcIj09PWUmJnRoaXMuX2NyZWF0ZUJ1dHRvbnMoKSxcImNsb3NlVGV4dFwiPT09ZSYmdGhpcy51aURpYWxvZ1RpdGxlYmFyQ2xvc2UuYnV0dG9uKHtsYWJlbDp0KFwiPGE+XCIpLnRleHQoXCJcIit0aGlzLm9wdGlvbnMuY2xvc2VUZXh0KS5odG1sKCl9KSxcImRyYWdnYWJsZVwiPT09ZSYmKHM9by5pcyhcIjpkYXRhKHVpLWRyYWdnYWJsZSlcIikscyYmIWkmJm8uZHJhZ2dhYmxlKFwiZGVzdHJveVwiKSwhcyYmaSYmdGhpcy5fbWFrZURyYWdnYWJsZSgpKSxcInBvc2l0aW9uXCI9PT1lJiZ0aGlzLl9wb3NpdGlvbigpLFwicmVzaXphYmxlXCI9PT1lJiYobj1vLmlzKFwiOmRhdGEodWktcmVzaXphYmxlKVwiKSxuJiYhaSYmby5yZXNpemFibGUoXCJkZXN0cm95XCIpLG4mJlwic3RyaW5nXCI9PXR5cGVvZiBpJiZvLnJlc2l6YWJsZShcIm9wdGlvblwiLFwiaGFuZGxlc1wiLGkpLG58fGk9PT0hMXx8dGhpcy5fbWFrZVJlc2l6YWJsZSgpKSxcInRpdGxlXCI9PT1lJiZ0aGlzLl90aXRsZSh0aGlzLnVpRGlhbG9nVGl0bGViYXIuZmluZChcIi51aS1kaWFsb2ctdGl0bGVcIikpKX0sX3NpemU6ZnVuY3Rpb24oKXt2YXIgdCxlLGkscz10aGlzLm9wdGlvbnM7dGhpcy5lbGVtZW50LnNob3coKS5jc3Moe3dpZHRoOlwiYXV0b1wiLG1pbkhlaWdodDowLG1heEhlaWdodDpcIm5vbmVcIixoZWlnaHQ6MH0pLHMubWluV2lkdGg+cy53aWR0aCYmKHMud2lkdGg9cy5taW5XaWR0aCksdD10aGlzLnVpRGlhbG9nLmNzcyh7aGVpZ2h0OlwiYXV0b1wiLHdpZHRoOnMud2lkdGh9KS5vdXRlckhlaWdodCgpLGU9TWF0aC5tYXgoMCxzLm1pbkhlaWdodC10KSxpPVwibnVtYmVyXCI9PXR5cGVvZiBzLm1heEhlaWdodD9NYXRoLm1heCgwLHMubWF4SGVpZ2h0LXQpOlwibm9uZVwiLFwiYXV0b1wiPT09cy5oZWlnaHQ/dGhpcy5lbGVtZW50LmNzcyh7bWluSGVpZ2h0OmUsbWF4SGVpZ2h0OmksaGVpZ2h0OlwiYXV0b1wifSk6dGhpcy5lbGVtZW50LmhlaWdodChNYXRoLm1heCgwLHMuaGVpZ2h0LXQpKSx0aGlzLnVpRGlhbG9nLmlzKFwiOmRhdGEodWktcmVzaXphYmxlKVwiKSYmdGhpcy51aURpYWxvZy5yZXNpemFibGUoXCJvcHRpb25cIixcIm1pbkhlaWdodFwiLHRoaXMuX21pbkhlaWdodCgpKX0sX2Jsb2NrRnJhbWVzOmZ1bmN0aW9uKCl7dGhpcy5pZnJhbWVCbG9ja3M9dGhpcy5kb2N1bWVudC5maW5kKFwiaWZyYW1lXCIpLm1hcChmdW5jdGlvbigpe3ZhciBlPXQodGhpcyk7cmV0dXJuIHQoXCI8ZGl2PlwiKS5jc3Moe3Bvc2l0aW9uOlwiYWJzb2x1dGVcIix3aWR0aDplLm91dGVyV2lkdGgoKSxoZWlnaHQ6ZS5vdXRlckhlaWdodCgpfSkuYXBwZW5kVG8oZS5wYXJlbnQoKSkub2Zmc2V0KGUub2Zmc2V0KCkpWzBdfSl9LF91bmJsb2NrRnJhbWVzOmZ1bmN0aW9uKCl7dGhpcy5pZnJhbWVCbG9ja3MmJih0aGlzLmlmcmFtZUJsb2Nrcy5yZW1vdmUoKSxkZWxldGUgdGhpcy5pZnJhbWVCbG9ja3MpfSxfYWxsb3dJbnRlcmFjdGlvbjpmdW5jdGlvbihlKXtyZXR1cm4gdChlLnRhcmdldCkuY2xvc2VzdChcIi51aS1kaWFsb2dcIikubGVuZ3RoPyEwOiEhdChlLnRhcmdldCkuY2xvc2VzdChcIi51aS1kYXRlcGlja2VyXCIpLmxlbmd0aH0sX2NyZWF0ZU92ZXJsYXk6ZnVuY3Rpb24oKXtpZih0aGlzLm9wdGlvbnMubW9kYWwpe3ZhciBlPSEwO3RoaXMuX2RlbGF5KGZ1bmN0aW9uKCl7ZT0hMX0pLHRoaXMuZG9jdW1lbnQuZGF0YShcInVpLWRpYWxvZy1vdmVybGF5c1wiKXx8dGhpcy5fb24odGhpcy5kb2N1bWVudCx7Zm9jdXNpbjpmdW5jdGlvbih0KXtlfHx0aGlzLl9hbGxvd0ludGVyYWN0aW9uKHQpfHwodC5wcmV2ZW50RGVmYXVsdCgpLHRoaXMuX3RyYWNraW5nSW5zdGFuY2VzKClbMF0uX2ZvY3VzVGFiYmFibGUoKSl9fSksdGhpcy5vdmVybGF5PXQoXCI8ZGl2PlwiKS5hcHBlbmRUbyh0aGlzLl9hcHBlbmRUbygpKSx0aGlzLl9hZGRDbGFzcyh0aGlzLm92ZXJsYXksbnVsbCxcInVpLXdpZGdldC1vdmVybGF5IHVpLWZyb250XCIpLHRoaXMuX29uKHRoaXMub3ZlcmxheSx7bW91c2Vkb3duOlwiX2tlZXBGb2N1c1wifSksdGhpcy5kb2N1bWVudC5kYXRhKFwidWktZGlhbG9nLW92ZXJsYXlzXCIsKHRoaXMuZG9jdW1lbnQuZGF0YShcInVpLWRpYWxvZy1vdmVybGF5c1wiKXx8MCkrMSl9fSxfZGVzdHJveU92ZXJsYXk6ZnVuY3Rpb24oKXtpZih0aGlzLm9wdGlvbnMubW9kYWwmJnRoaXMub3ZlcmxheSl7dmFyIHQ9dGhpcy5kb2N1bWVudC5kYXRhKFwidWktZGlhbG9nLW92ZXJsYXlzXCIpLTE7dD90aGlzLmRvY3VtZW50LmRhdGEoXCJ1aS1kaWFsb2ctb3ZlcmxheXNcIix0KToodGhpcy5fb2ZmKHRoaXMuZG9jdW1lbnQsXCJmb2N1c2luXCIpLHRoaXMuZG9jdW1lbnQucmVtb3ZlRGF0YShcInVpLWRpYWxvZy1vdmVybGF5c1wiKSksdGhpcy5vdmVybGF5LnJlbW92ZSgpLHRoaXMub3ZlcmxheT1udWxsfX19KSx0LnVpQmFja0NvbXBhdCE9PSExJiZ0LndpZGdldChcInVpLmRpYWxvZ1wiLHQudWkuZGlhbG9nLHtvcHRpb25zOntkaWFsb2dDbGFzczpcIlwifSxfY3JlYXRlV3JhcHBlcjpmdW5jdGlvbigpe3RoaXMuX3N1cGVyKCksdGhpcy51aURpYWxvZy5hZGRDbGFzcyh0aGlzLm9wdGlvbnMuZGlhbG9nQ2xhc3MpfSxfc2V0T3B0aW9uOmZ1bmN0aW9uKHQsZSl7XCJkaWFsb2dDbGFzc1wiPT09dCYmdGhpcy51aURpYWxvZy5yZW1vdmVDbGFzcyh0aGlzLm9wdGlvbnMuZGlhbG9nQ2xhc3MpLmFkZENsYXNzKGUpLHRoaXMuX3N1cGVyQXBwbHkoYXJndW1lbnRzKX19KSx0LnVpLmRpYWxvZyx0LndpZGdldChcInVpLmRyb3BwYWJsZVwiLHt2ZXJzaW9uOlwiMS4xMi4xXCIsd2lkZ2V0RXZlbnRQcmVmaXg6XCJkcm9wXCIsb3B0aW9uczp7YWNjZXB0OlwiKlwiLGFkZENsYXNzZXM6ITAsZ3JlZWR5OiExLHNjb3BlOlwiZGVmYXVsdFwiLHRvbGVyYW5jZTpcImludGVyc2VjdFwiLGFjdGl2YXRlOm51bGwsZGVhY3RpdmF0ZTpudWxsLGRyb3A6bnVsbCxvdXQ6bnVsbCxvdmVyOm51bGx9LF9jcmVhdGU6ZnVuY3Rpb24oKXt2YXIgZSxpPXRoaXMub3B0aW9ucyxzPWkuYWNjZXB0O3RoaXMuaXNvdmVyPSExLHRoaXMuaXNvdXQ9ITAsdGhpcy5hY2NlcHQ9dC5pc0Z1bmN0aW9uKHMpP3M6ZnVuY3Rpb24odCl7cmV0dXJuIHQuaXMocyl9LHRoaXMucHJvcG9ydGlvbnM9ZnVuY3Rpb24oKXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8oZT1hcmd1bWVudHNbMF0sdm9pZCAwKTplP2U6ZT17d2lkdGg6dGhpcy5lbGVtZW50WzBdLm9mZnNldFdpZHRoLGhlaWdodDp0aGlzLmVsZW1lbnRbMF0ub2Zmc2V0SGVpZ2h0fX0sdGhpcy5fYWRkVG9NYW5hZ2VyKGkuc2NvcGUpLGkuYWRkQ2xhc3NlcyYmdGhpcy5fYWRkQ2xhc3MoXCJ1aS1kcm9wcGFibGVcIil9LF9hZGRUb01hbmFnZXI6ZnVuY3Rpb24oZSl7dC51aS5kZG1hbmFnZXIuZHJvcHBhYmxlc1tlXT10LnVpLmRkbWFuYWdlci5kcm9wcGFibGVzW2VdfHxbXSx0LnVpLmRkbWFuYWdlci5kcm9wcGFibGVzW2VdLnB1c2godGhpcyl9LF9zcGxpY2U6ZnVuY3Rpb24odCl7Zm9yKHZhciBlPTA7dC5sZW5ndGg+ZTtlKyspdFtlXT09PXRoaXMmJnQuc3BsaWNlKGUsMSl9LF9kZXN0cm95OmZ1bmN0aW9uKCl7dmFyIGU9dC51aS5kZG1hbmFnZXIuZHJvcHBhYmxlc1t0aGlzLm9wdGlvbnMuc2NvcGVdO3RoaXMuX3NwbGljZShlKX0sX3NldE9wdGlvbjpmdW5jdGlvbihlLGkpe2lmKFwiYWNjZXB0XCI9PT1lKXRoaXMuYWNjZXB0PXQuaXNGdW5jdGlvbihpKT9pOmZ1bmN0aW9uKHQpe3JldHVybiB0LmlzKGkpfTtlbHNlIGlmKFwic2NvcGVcIj09PWUpe3ZhciBzPXQudWkuZGRtYW5hZ2VyLmRyb3BwYWJsZXNbdGhpcy5vcHRpb25zLnNjb3BlXTt0aGlzLl9zcGxpY2UocyksdGhpcy5fYWRkVG9NYW5hZ2VyKGkpfXRoaXMuX3N1cGVyKGUsaSl9LF9hY3RpdmF0ZTpmdW5jdGlvbihlKXt2YXIgaT10LnVpLmRkbWFuYWdlci5jdXJyZW50O3RoaXMuX2FkZEFjdGl2ZUNsYXNzKCksaSYmdGhpcy5fdHJpZ2dlcihcImFjdGl2YXRlXCIsZSx0aGlzLnVpKGkpKX0sX2RlYWN0aXZhdGU6ZnVuY3Rpb24oZSl7dmFyIGk9dC51aS5kZG1hbmFnZXIuY3VycmVudDt0aGlzLl9yZW1vdmVBY3RpdmVDbGFzcygpLGkmJnRoaXMuX3RyaWdnZXIoXCJkZWFjdGl2YXRlXCIsZSx0aGlzLnVpKGkpKX0sX292ZXI6ZnVuY3Rpb24oZSl7dmFyIGk9dC51aS5kZG1hbmFnZXIuY3VycmVudDtpJiYoaS5jdXJyZW50SXRlbXx8aS5lbGVtZW50KVswXSE9PXRoaXMuZWxlbWVudFswXSYmdGhpcy5hY2NlcHQuY2FsbCh0aGlzLmVsZW1lbnRbMF0saS5jdXJyZW50SXRlbXx8aS5lbGVtZW50KSYmKHRoaXMuX2FkZEhvdmVyQ2xhc3MoKSx0aGlzLl90cmlnZ2VyKFwib3ZlclwiLGUsdGhpcy51aShpKSkpfSxfb3V0OmZ1bmN0aW9uKGUpe3ZhciBpPXQudWkuZGRtYW5hZ2VyLmN1cnJlbnQ7aSYmKGkuY3VycmVudEl0ZW18fGkuZWxlbWVudClbMF0hPT10aGlzLmVsZW1lbnRbMF0mJnRoaXMuYWNjZXB0LmNhbGwodGhpcy5lbGVtZW50WzBdLGkuY3VycmVudEl0ZW18fGkuZWxlbWVudCkmJih0aGlzLl9yZW1vdmVIb3ZlckNsYXNzKCksdGhpcy5fdHJpZ2dlcihcIm91dFwiLGUsdGhpcy51aShpKSkpfSxfZHJvcDpmdW5jdGlvbihlLGkpe3ZhciBzPWl8fHQudWkuZGRtYW5hZ2VyLmN1cnJlbnQsbj0hMTtyZXR1cm4gcyYmKHMuY3VycmVudEl0ZW18fHMuZWxlbWVudClbMF0hPT10aGlzLmVsZW1lbnRbMF0/KHRoaXMuZWxlbWVudC5maW5kKFwiOmRhdGEodWktZHJvcHBhYmxlKVwiKS5ub3QoXCIudWktZHJhZ2dhYmxlLWRyYWdnaW5nXCIpLmVhY2goZnVuY3Rpb24oKXt2YXIgaT10KHRoaXMpLmRyb3BwYWJsZShcImluc3RhbmNlXCIpO3JldHVybiBpLm9wdGlvbnMuZ3JlZWR5JiYhaS5vcHRpb25zLmRpc2FibGVkJiZpLm9wdGlvbnMuc2NvcGU9PT1zLm9wdGlvbnMuc2NvcGUmJmkuYWNjZXB0LmNhbGwoaS5lbGVtZW50WzBdLHMuY3VycmVudEl0ZW18fHMuZWxlbWVudCkmJnYocyx0LmV4dGVuZChpLHtvZmZzZXQ6aS5lbGVtZW50Lm9mZnNldCgpfSksaS5vcHRpb25zLnRvbGVyYW5jZSxlKT8obj0hMCwhMSk6dm9pZCAwfSksbj8hMTp0aGlzLmFjY2VwdC5jYWxsKHRoaXMuZWxlbWVudFswXSxzLmN1cnJlbnRJdGVtfHxzLmVsZW1lbnQpPyh0aGlzLl9yZW1vdmVBY3RpdmVDbGFzcygpLHRoaXMuX3JlbW92ZUhvdmVyQ2xhc3MoKSx0aGlzLl90cmlnZ2VyKFwiZHJvcFwiLGUsdGhpcy51aShzKSksdGhpcy5lbGVtZW50KTohMSk6ITF9LHVpOmZ1bmN0aW9uKHQpe3JldHVybntkcmFnZ2FibGU6dC5jdXJyZW50SXRlbXx8dC5lbGVtZW50LGhlbHBlcjp0LmhlbHBlcixwb3NpdGlvbjp0LnBvc2l0aW9uLG9mZnNldDp0LnBvc2l0aW9uQWJzfX0sX2FkZEhvdmVyQ2xhc3M6ZnVuY3Rpb24oKXt0aGlzLl9hZGRDbGFzcyhcInVpLWRyb3BwYWJsZS1ob3ZlclwiKX0sX3JlbW92ZUhvdmVyQ2xhc3M6ZnVuY3Rpb24oKXt0aGlzLl9yZW1vdmVDbGFzcyhcInVpLWRyb3BwYWJsZS1ob3ZlclwiKX0sX2FkZEFjdGl2ZUNsYXNzOmZ1bmN0aW9uKCl7dGhpcy5fYWRkQ2xhc3MoXCJ1aS1kcm9wcGFibGUtYWN0aXZlXCIpfSxfcmVtb3ZlQWN0aXZlQ2xhc3M6ZnVuY3Rpb24oKXt0aGlzLl9yZW1vdmVDbGFzcyhcInVpLWRyb3BwYWJsZS1hY3RpdmVcIil9fSk7dmFyIHY9dC51aS5pbnRlcnNlY3Q9ZnVuY3Rpb24oKXtmdW5jdGlvbiB0KHQsZSxpKXtyZXR1cm4gdD49ZSYmZStpPnR9cmV0dXJuIGZ1bmN0aW9uKGUsaSxzLG4pe2lmKCFpLm9mZnNldClyZXR1cm4hMTt2YXIgbz0oZS5wb3NpdGlvbkFic3x8ZS5wb3NpdGlvbi5hYnNvbHV0ZSkubGVmdCtlLm1hcmdpbnMubGVmdCxhPShlLnBvc2l0aW9uQWJzfHxlLnBvc2l0aW9uLmFic29sdXRlKS50b3ArZS5tYXJnaW5zLnRvcCxyPW8rZS5oZWxwZXJQcm9wb3J0aW9ucy53aWR0aCxoPWErZS5oZWxwZXJQcm9wb3J0aW9ucy5oZWlnaHQsbD1pLm9mZnNldC5sZWZ0LGM9aS5vZmZzZXQudG9wLHU9bCtpLnByb3BvcnRpb25zKCkud2lkdGgsZD1jK2kucHJvcG9ydGlvbnMoKS5oZWlnaHQ7c3dpdGNoKHMpe2Nhc2VcImZpdFwiOnJldHVybiBvPj1sJiZ1Pj1yJiZhPj1jJiZkPj1oO2Nhc2VcImludGVyc2VjdFwiOnJldHVybiBvK2UuaGVscGVyUHJvcG9ydGlvbnMud2lkdGgvMj5sJiZ1PnItZS5oZWxwZXJQcm9wb3J0aW9ucy53aWR0aC8yJiZhK2UuaGVscGVyUHJvcG9ydGlvbnMuaGVpZ2h0LzI+YyYmZD5oLWUuaGVscGVyUHJvcG9ydGlvbnMuaGVpZ2h0LzI7Y2FzZVwicG9pbnRlclwiOnJldHVybiB0KG4ucGFnZVksYyxpLnByb3BvcnRpb25zKCkuaGVpZ2h0KSYmdChuLnBhZ2VYLGwsaS5wcm9wb3J0aW9ucygpLndpZHRoKTtjYXNlXCJ0b3VjaFwiOnJldHVybihhPj1jJiZkPj1hfHxoPj1jJiZkPj1ofHxjPmEmJmg+ZCkmJihvPj1sJiZ1Pj1vfHxyPj1sJiZ1Pj1yfHxsPm8mJnI+dSk7ZGVmYXVsdDpyZXR1cm4hMX19fSgpO3QudWkuZGRtYW5hZ2VyPXtjdXJyZW50Om51bGwsZHJvcHBhYmxlczp7XCJkZWZhdWx0XCI6W119LHByZXBhcmVPZmZzZXRzOmZ1bmN0aW9uKGUsaSl7dmFyIHMsbixvPXQudWkuZGRtYW5hZ2VyLmRyb3BwYWJsZXNbZS5vcHRpb25zLnNjb3BlXXx8W10sYT1pP2kudHlwZTpudWxsLHI9KGUuY3VycmVudEl0ZW18fGUuZWxlbWVudCkuZmluZChcIjpkYXRhKHVpLWRyb3BwYWJsZSlcIikuYWRkQmFjaygpO3Q6Zm9yKHM9MDtvLmxlbmd0aD5zO3MrKylpZighKG9bc10ub3B0aW9ucy5kaXNhYmxlZHx8ZSYmIW9bc10uYWNjZXB0LmNhbGwob1tzXS5lbGVtZW50WzBdLGUuY3VycmVudEl0ZW18fGUuZWxlbWVudCkpKXtmb3Iobj0wO3IubGVuZ3RoPm47bisrKWlmKHJbbl09PT1vW3NdLmVsZW1lbnRbMF0pe29bc10ucHJvcG9ydGlvbnMoKS5oZWlnaHQ9MDtjb250aW51ZSB0fW9bc10udmlzaWJsZT1cIm5vbmVcIiE9PW9bc10uZWxlbWVudC5jc3MoXCJkaXNwbGF5XCIpLG9bc10udmlzaWJsZSYmKFwibW91c2Vkb3duXCI9PT1hJiZvW3NdLl9hY3RpdmF0ZS5jYWxsKG9bc10saSksb1tzXS5vZmZzZXQ9b1tzXS5lbGVtZW50Lm9mZnNldCgpLG9bc10ucHJvcG9ydGlvbnMoe3dpZHRoOm9bc10uZWxlbWVudFswXS5vZmZzZXRXaWR0aCxoZWlnaHQ6b1tzXS5lbGVtZW50WzBdLm9mZnNldEhlaWdodH0pKX19LGRyb3A6ZnVuY3Rpb24oZSxpKXt2YXIgcz0hMTtyZXR1cm4gdC5lYWNoKCh0LnVpLmRkbWFuYWdlci5kcm9wcGFibGVzW2Uub3B0aW9ucy5zY29wZV18fFtdKS5zbGljZSgpLGZ1bmN0aW9uKCl7dGhpcy5vcHRpb25zJiYoIXRoaXMub3B0aW9ucy5kaXNhYmxlZCYmdGhpcy52aXNpYmxlJiZ2KGUsdGhpcyx0aGlzLm9wdGlvbnMudG9sZXJhbmNlLGkpJiYocz10aGlzLl9kcm9wLmNhbGwodGhpcyxpKXx8cyksIXRoaXMub3B0aW9ucy5kaXNhYmxlZCYmdGhpcy52aXNpYmxlJiZ0aGlzLmFjY2VwdC5jYWxsKHRoaXMuZWxlbWVudFswXSxlLmN1cnJlbnRJdGVtfHxlLmVsZW1lbnQpJiYodGhpcy5pc291dD0hMCx0aGlzLmlzb3Zlcj0hMSx0aGlzLl9kZWFjdGl2YXRlLmNhbGwodGhpcyxpKSkpfSksc30sZHJhZ1N0YXJ0OmZ1bmN0aW9uKGUsaSl7ZS5lbGVtZW50LnBhcmVudHNVbnRpbChcImJvZHlcIikub24oXCJzY3JvbGwuZHJvcHBhYmxlXCIsZnVuY3Rpb24oKXtlLm9wdGlvbnMucmVmcmVzaFBvc2l0aW9uc3x8dC51aS5kZG1hbmFnZXIucHJlcGFyZU9mZnNldHMoZSxpKX0pfSxkcmFnOmZ1bmN0aW9uKGUsaSl7ZS5vcHRpb25zLnJlZnJlc2hQb3NpdGlvbnMmJnQudWkuZGRtYW5hZ2VyLnByZXBhcmVPZmZzZXRzKGUsaSksdC5lYWNoKHQudWkuZGRtYW5hZ2VyLmRyb3BwYWJsZXNbZS5vcHRpb25zLnNjb3BlXXx8W10sZnVuY3Rpb24oKXtpZighdGhpcy5vcHRpb25zLmRpc2FibGVkJiYhdGhpcy5ncmVlZHlDaGlsZCYmdGhpcy52aXNpYmxlKXt2YXIgcyxuLG8sYT12KGUsdGhpcyx0aGlzLm9wdGlvbnMudG9sZXJhbmNlLGkpLHI9IWEmJnRoaXMuaXNvdmVyP1wiaXNvdXRcIjphJiYhdGhpcy5pc292ZXI/XCJpc292ZXJcIjpudWxsO3ImJih0aGlzLm9wdGlvbnMuZ3JlZWR5JiYobj10aGlzLm9wdGlvbnMuc2NvcGUsbz10aGlzLmVsZW1lbnQucGFyZW50cyhcIjpkYXRhKHVpLWRyb3BwYWJsZSlcIikuZmlsdGVyKGZ1bmN0aW9uKCl7cmV0dXJuIHQodGhpcykuZHJvcHBhYmxlKFwiaW5zdGFuY2VcIikub3B0aW9ucy5zY29wZT09PW59KSxvLmxlbmd0aCYmKHM9dChvWzBdKS5kcm9wcGFibGUoXCJpbnN0YW5jZVwiKSxzLmdyZWVkeUNoaWxkPVwiaXNvdmVyXCI9PT1yKSkscyYmXCJpc292ZXJcIj09PXImJihzLmlzb3Zlcj0hMSxzLmlzb3V0PSEwLHMuX291dC5jYWxsKHMsaSkpLHRoaXNbcl09ITAsdGhpc1tcImlzb3V0XCI9PT1yP1wiaXNvdmVyXCI6XCJpc291dFwiXT0hMSx0aGlzW1wiaXNvdmVyXCI9PT1yP1wiX292ZXJcIjpcIl9vdXRcIl0uY2FsbCh0aGlzLGkpLHMmJlwiaXNvdXRcIj09PXImJihzLmlzb3V0PSExLHMuaXNvdmVyPSEwLHMuX292ZXIuY2FsbChzLGkpKSl9fSl9LGRyYWdTdG9wOmZ1bmN0aW9uKGUsaSl7ZS5lbGVtZW50LnBhcmVudHNVbnRpbChcImJvZHlcIikub2ZmKFwic2Nyb2xsLmRyb3BwYWJsZVwiKSxlLm9wdGlvbnMucmVmcmVzaFBvc2l0aW9uc3x8dC51aS5kZG1hbmFnZXIucHJlcGFyZU9mZnNldHMoZSxpKX19LHQudWlCYWNrQ29tcGF0IT09ITEmJnQud2lkZ2V0KFwidWkuZHJvcHBhYmxlXCIsdC51aS5kcm9wcGFibGUse29wdGlvbnM6e2hvdmVyQ2xhc3M6ITEsYWN0aXZlQ2xhc3M6ITF9LF9hZGRBY3RpdmVDbGFzczpmdW5jdGlvbigpe3RoaXMuX3N1cGVyKCksdGhpcy5vcHRpb25zLmFjdGl2ZUNsYXNzJiZ0aGlzLmVsZW1lbnQuYWRkQ2xhc3ModGhpcy5vcHRpb25zLmFjdGl2ZUNsYXNzKX0sX3JlbW92ZUFjdGl2ZUNsYXNzOmZ1bmN0aW9uKCl7dGhpcy5fc3VwZXIoKSx0aGlzLm9wdGlvbnMuYWN0aXZlQ2xhc3MmJnRoaXMuZWxlbWVudC5yZW1vdmVDbGFzcyh0aGlzLm9wdGlvbnMuYWN0aXZlQ2xhc3MpfSxfYWRkSG92ZXJDbGFzczpmdW5jdGlvbigpe3RoaXMuX3N1cGVyKCksdGhpcy5vcHRpb25zLmhvdmVyQ2xhc3MmJnRoaXMuZWxlbWVudC5hZGRDbGFzcyh0aGlzLm9wdGlvbnMuaG92ZXJDbGFzcyl9LF9yZW1vdmVIb3ZlckNsYXNzOmZ1bmN0aW9uKCl7dGhpcy5fc3VwZXIoKSx0aGlzLm9wdGlvbnMuaG92ZXJDbGFzcyYmdGhpcy5lbGVtZW50LnJlbW92ZUNsYXNzKHRoaXMub3B0aW9ucy5ob3ZlckNsYXNzKX19KSx0LnVpLmRyb3BwYWJsZSx0LndpZGdldChcInVpLnByb2dyZXNzYmFyXCIse3ZlcnNpb246XCIxLjEyLjFcIixvcHRpb25zOntjbGFzc2VzOntcInVpLXByb2dyZXNzYmFyXCI6XCJ1aS1jb3JuZXItYWxsXCIsXCJ1aS1wcm9ncmVzc2Jhci12YWx1ZVwiOlwidWktY29ybmVyLWxlZnRcIixcInVpLXByb2dyZXNzYmFyLWNvbXBsZXRlXCI6XCJ1aS1jb3JuZXItcmlnaHRcIn0sbWF4OjEwMCx2YWx1ZTowLGNoYW5nZTpudWxsLGNvbXBsZXRlOm51bGx9LG1pbjowLF9jcmVhdGU6ZnVuY3Rpb24oKXt0aGlzLm9sZFZhbHVlPXRoaXMub3B0aW9ucy52YWx1ZT10aGlzLl9jb25zdHJhaW5lZFZhbHVlKCksdGhpcy5lbGVtZW50LmF0dHIoe3JvbGU6XCJwcm9ncmVzc2JhclwiLFwiYXJpYS12YWx1ZW1pblwiOnRoaXMubWlufSksdGhpcy5fYWRkQ2xhc3MoXCJ1aS1wcm9ncmVzc2JhclwiLFwidWktd2lkZ2V0IHVpLXdpZGdldC1jb250ZW50XCIpLHRoaXMudmFsdWVEaXY9dChcIjxkaXY+XCIpLmFwcGVuZFRvKHRoaXMuZWxlbWVudCksdGhpcy5fYWRkQ2xhc3ModGhpcy52YWx1ZURpdixcInVpLXByb2dyZXNzYmFyLXZhbHVlXCIsXCJ1aS13aWRnZXQtaGVhZGVyXCIpLHRoaXMuX3JlZnJlc2hWYWx1ZSgpfSxfZGVzdHJveTpmdW5jdGlvbigpe3RoaXMuZWxlbWVudC5yZW1vdmVBdHRyKFwicm9sZSBhcmlhLXZhbHVlbWluIGFyaWEtdmFsdWVtYXggYXJpYS12YWx1ZW5vd1wiKSx0aGlzLnZhbHVlRGl2LnJlbW92ZSgpfSx2YWx1ZTpmdW5jdGlvbih0KXtyZXR1cm4gdm9pZCAwPT09dD90aGlzLm9wdGlvbnMudmFsdWU6KHRoaXMub3B0aW9ucy52YWx1ZT10aGlzLl9jb25zdHJhaW5lZFZhbHVlKHQpLHRoaXMuX3JlZnJlc2hWYWx1ZSgpLHZvaWQgMCl9LF9jb25zdHJhaW5lZFZhbHVlOmZ1bmN0aW9uKHQpe3JldHVybiB2b2lkIDA9PT10JiYodD10aGlzLm9wdGlvbnMudmFsdWUpLHRoaXMuaW5kZXRlcm1pbmF0ZT10PT09ITEsXCJudW1iZXJcIiE9dHlwZW9mIHQmJih0PTApLHRoaXMuaW5kZXRlcm1pbmF0ZT8hMTpNYXRoLm1pbih0aGlzLm9wdGlvbnMubWF4LE1hdGgubWF4KHRoaXMubWluLHQpKX0sX3NldE9wdGlvbnM6ZnVuY3Rpb24odCl7dmFyIGU9dC52YWx1ZTtkZWxldGUgdC52YWx1ZSx0aGlzLl9zdXBlcih0KSx0aGlzLm9wdGlvbnMudmFsdWU9dGhpcy5fY29uc3RyYWluZWRWYWx1ZShlKSx0aGlzLl9yZWZyZXNoVmFsdWUoKX0sX3NldE9wdGlvbjpmdW5jdGlvbih0LGUpe1wibWF4XCI9PT10JiYoZT1NYXRoLm1heCh0aGlzLm1pbixlKSksdGhpcy5fc3VwZXIodCxlKX0sX3NldE9wdGlvbkRpc2FibGVkOmZ1bmN0aW9uKHQpe3RoaXMuX3N1cGVyKHQpLHRoaXMuZWxlbWVudC5hdHRyKFwiYXJpYS1kaXNhYmxlZFwiLHQpLHRoaXMuX3RvZ2dsZUNsYXNzKG51bGwsXCJ1aS1zdGF0ZS1kaXNhYmxlZFwiLCEhdCl9LF9wZXJjZW50YWdlOmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuaW5kZXRlcm1pbmF0ZT8xMDA6MTAwKih0aGlzLm9wdGlvbnMudmFsdWUtdGhpcy5taW4pLyh0aGlzLm9wdGlvbnMubWF4LXRoaXMubWluKX0sX3JlZnJlc2hWYWx1ZTpmdW5jdGlvbigpe3ZhciBlPXRoaXMub3B0aW9ucy52YWx1ZSxpPXRoaXMuX3BlcmNlbnRhZ2UoKTt0aGlzLnZhbHVlRGl2LnRvZ2dsZSh0aGlzLmluZGV0ZXJtaW5hdGV8fGU+dGhpcy5taW4pLndpZHRoKGkudG9GaXhlZCgwKStcIiVcIiksdGhpcy5fdG9nZ2xlQ2xhc3ModGhpcy52YWx1ZURpdixcInVpLXByb2dyZXNzYmFyLWNvbXBsZXRlXCIsbnVsbCxlPT09dGhpcy5vcHRpb25zLm1heCkuX3RvZ2dsZUNsYXNzKFwidWktcHJvZ3Jlc3NiYXItaW5kZXRlcm1pbmF0ZVwiLG51bGwsdGhpcy5pbmRldGVybWluYXRlKSx0aGlzLmluZGV0ZXJtaW5hdGU/KHRoaXMuZWxlbWVudC5yZW1vdmVBdHRyKFwiYXJpYS12YWx1ZW5vd1wiKSx0aGlzLm92ZXJsYXlEaXZ8fCh0aGlzLm92ZXJsYXlEaXY9dChcIjxkaXY+XCIpLmFwcGVuZFRvKHRoaXMudmFsdWVEaXYpLHRoaXMuX2FkZENsYXNzKHRoaXMub3ZlcmxheURpdixcInVpLXByb2dyZXNzYmFyLW92ZXJsYXlcIikpKToodGhpcy5lbGVtZW50LmF0dHIoe1wiYXJpYS12YWx1ZW1heFwiOnRoaXMub3B0aW9ucy5tYXgsXCJhcmlhLXZhbHVlbm93XCI6ZX0pLHRoaXMub3ZlcmxheURpdiYmKHRoaXMub3ZlcmxheURpdi5yZW1vdmUoKSx0aGlzLm92ZXJsYXlEaXY9bnVsbCkpLHRoaXMub2xkVmFsdWUhPT1lJiYodGhpcy5vbGRWYWx1ZT1lLHRoaXMuX3RyaWdnZXIoXCJjaGFuZ2VcIikpLGU9PT10aGlzLm9wdGlvbnMubWF4JiZ0aGlzLl90cmlnZ2VyKFwiY29tcGxldGVcIil9fSksdC53aWRnZXQoXCJ1aS5zZWxlY3RhYmxlXCIsdC51aS5tb3VzZSx7dmVyc2lvbjpcIjEuMTIuMVwiLG9wdGlvbnM6e2FwcGVuZFRvOlwiYm9keVwiLGF1dG9SZWZyZXNoOiEwLGRpc3RhbmNlOjAsZmlsdGVyOlwiKlwiLHRvbGVyYW5jZTpcInRvdWNoXCIsc2VsZWN0ZWQ6bnVsbCxzZWxlY3Rpbmc6bnVsbCxzdGFydDpudWxsLHN0b3A6bnVsbCx1bnNlbGVjdGVkOm51bGwsdW5zZWxlY3Rpbmc6bnVsbH0sX2NyZWF0ZTpmdW5jdGlvbigpe3ZhciBlPXRoaXM7dGhpcy5fYWRkQ2xhc3MoXCJ1aS1zZWxlY3RhYmxlXCIpLHRoaXMuZHJhZ2dlZD0hMSx0aGlzLnJlZnJlc2g9ZnVuY3Rpb24oKXtlLmVsZW1lbnRQb3M9dChlLmVsZW1lbnRbMF0pLm9mZnNldCgpLGUuc2VsZWN0ZWVzPXQoZS5vcHRpb25zLmZpbHRlcixlLmVsZW1lbnRbMF0pLGUuX2FkZENsYXNzKGUuc2VsZWN0ZWVzLFwidWktc2VsZWN0ZWVcIiksZS5zZWxlY3RlZXMuZWFjaChmdW5jdGlvbigpe3ZhciBpPXQodGhpcykscz1pLm9mZnNldCgpLG49e2xlZnQ6cy5sZWZ0LWUuZWxlbWVudFBvcy5sZWZ0LHRvcDpzLnRvcC1lLmVsZW1lbnRQb3MudG9wfTt0LmRhdGEodGhpcyxcInNlbGVjdGFibGUtaXRlbVwiLHtlbGVtZW50OnRoaXMsJGVsZW1lbnQ6aSxsZWZ0Om4ubGVmdCx0b3A6bi50b3AscmlnaHQ6bi5sZWZ0K2kub3V0ZXJXaWR0aCgpLGJvdHRvbTpuLnRvcCtpLm91dGVySGVpZ2h0KCksc3RhcnRzZWxlY3RlZDohMSxzZWxlY3RlZDppLmhhc0NsYXNzKFwidWktc2VsZWN0ZWRcIiksc2VsZWN0aW5nOmkuaGFzQ2xhc3MoXCJ1aS1zZWxlY3RpbmdcIiksdW5zZWxlY3Rpbmc6aS5oYXNDbGFzcyhcInVpLXVuc2VsZWN0aW5nXCIpfSl9KX0sdGhpcy5yZWZyZXNoKCksdGhpcy5fbW91c2VJbml0KCksdGhpcy5oZWxwZXI9dChcIjxkaXY+XCIpLHRoaXMuX2FkZENsYXNzKHRoaXMuaGVscGVyLFwidWktc2VsZWN0YWJsZS1oZWxwZXJcIil9LF9kZXN0cm95OmZ1bmN0aW9uKCl7dGhpcy5zZWxlY3RlZXMucmVtb3ZlRGF0YShcInNlbGVjdGFibGUtaXRlbVwiKSx0aGlzLl9tb3VzZURlc3Ryb3koKX0sX21vdXNlU3RhcnQ6ZnVuY3Rpb24oZSl7dmFyIGk9dGhpcyxzPXRoaXMub3B0aW9uczt0aGlzLm9wb3M9W2UucGFnZVgsZS5wYWdlWV0sdGhpcy5lbGVtZW50UG9zPXQodGhpcy5lbGVtZW50WzBdKS5vZmZzZXQoKSx0aGlzLm9wdGlvbnMuZGlzYWJsZWR8fCh0aGlzLnNlbGVjdGVlcz10KHMuZmlsdGVyLHRoaXMuZWxlbWVudFswXSksdGhpcy5fdHJpZ2dlcihcInN0YXJ0XCIsZSksdChzLmFwcGVuZFRvKS5hcHBlbmQodGhpcy5oZWxwZXIpLHRoaXMuaGVscGVyLmNzcyh7bGVmdDplLnBhZ2VYLHRvcDplLnBhZ2VZLHdpZHRoOjAsaGVpZ2h0OjB9KSxzLmF1dG9SZWZyZXNoJiZ0aGlzLnJlZnJlc2goKSx0aGlzLnNlbGVjdGVlcy5maWx0ZXIoXCIudWktc2VsZWN0ZWRcIikuZWFjaChmdW5jdGlvbigpe3ZhciBzPXQuZGF0YSh0aGlzLFwic2VsZWN0YWJsZS1pdGVtXCIpO3Muc3RhcnRzZWxlY3RlZD0hMCxlLm1ldGFLZXl8fGUuY3RybEtleXx8KGkuX3JlbW92ZUNsYXNzKHMuJGVsZW1lbnQsXCJ1aS1zZWxlY3RlZFwiKSxzLnNlbGVjdGVkPSExLGkuX2FkZENsYXNzKHMuJGVsZW1lbnQsXCJ1aS11bnNlbGVjdGluZ1wiKSxzLnVuc2VsZWN0aW5nPSEwLGkuX3RyaWdnZXIoXCJ1bnNlbGVjdGluZ1wiLGUse3Vuc2VsZWN0aW5nOnMuZWxlbWVudH0pKX0pLHQoZS50YXJnZXQpLnBhcmVudHMoKS5hZGRCYWNrKCkuZWFjaChmdW5jdGlvbigpe3ZhciBzLG49dC5kYXRhKHRoaXMsXCJzZWxlY3RhYmxlLWl0ZW1cIik7cmV0dXJuIG4/KHM9IWUubWV0YUtleSYmIWUuY3RybEtleXx8IW4uJGVsZW1lbnQuaGFzQ2xhc3MoXCJ1aS1zZWxlY3RlZFwiKSxpLl9yZW1vdmVDbGFzcyhuLiRlbGVtZW50LHM/XCJ1aS11bnNlbGVjdGluZ1wiOlwidWktc2VsZWN0ZWRcIikuX2FkZENsYXNzKG4uJGVsZW1lbnQscz9cInVpLXNlbGVjdGluZ1wiOlwidWktdW5zZWxlY3RpbmdcIiksbi51bnNlbGVjdGluZz0hcyxuLnNlbGVjdGluZz1zLG4uc2VsZWN0ZWQ9cyxzP2kuX3RyaWdnZXIoXCJzZWxlY3RpbmdcIixlLHtzZWxlY3Rpbmc6bi5lbGVtZW50fSk6aS5fdHJpZ2dlcihcInVuc2VsZWN0aW5nXCIsZSx7dW5zZWxlY3Rpbmc6bi5lbGVtZW50fSksITEpOnZvaWQgMH0pKX0sX21vdXNlRHJhZzpmdW5jdGlvbihlKXtpZih0aGlzLmRyYWdnZWQ9ITAsIXRoaXMub3B0aW9ucy5kaXNhYmxlZCl7dmFyIGkscz10aGlzLG49dGhpcy5vcHRpb25zLG89dGhpcy5vcG9zWzBdLGE9dGhpcy5vcG9zWzFdLHI9ZS5wYWdlWCxoPWUucGFnZVk7cmV0dXJuIG8+ciYmKGk9cixyPW8sbz1pKSxhPmgmJihpPWgsaD1hLGE9aSksdGhpcy5oZWxwZXIuY3NzKHtsZWZ0Om8sdG9wOmEsd2lkdGg6ci1vLGhlaWdodDpoLWF9KSx0aGlzLnNlbGVjdGVlcy5lYWNoKGZ1bmN0aW9uKCl7dmFyIGk9dC5kYXRhKHRoaXMsXCJzZWxlY3RhYmxlLWl0ZW1cIiksbD0hMSxjPXt9O2kmJmkuZWxlbWVudCE9PXMuZWxlbWVudFswXSYmKGMubGVmdD1pLmxlZnQrcy5lbGVtZW50UG9zLmxlZnQsYy5yaWdodD1pLnJpZ2h0K3MuZWxlbWVudFBvcy5sZWZ0LGMudG9wPWkudG9wK3MuZWxlbWVudFBvcy50b3AsYy5ib3R0b209aS5ib3R0b20rcy5lbGVtZW50UG9zLnRvcCxcInRvdWNoXCI9PT1uLnRvbGVyYW5jZT9sPSEoYy5sZWZ0PnJ8fG8+Yy5yaWdodHx8Yy50b3A+aHx8YT5jLmJvdHRvbSk6XCJmaXRcIj09PW4udG9sZXJhbmNlJiYobD1jLmxlZnQ+byYmcj5jLnJpZ2h0JiZjLnRvcD5hJiZoPmMuYm90dG9tKSxsPyhpLnNlbGVjdGVkJiYocy5fcmVtb3ZlQ2xhc3MoaS4kZWxlbWVudCxcInVpLXNlbGVjdGVkXCIpLGkuc2VsZWN0ZWQ9ITEpLGkudW5zZWxlY3RpbmcmJihzLl9yZW1vdmVDbGFzcyhpLiRlbGVtZW50LFwidWktdW5zZWxlY3RpbmdcIiksaS51bnNlbGVjdGluZz0hMSksaS5zZWxlY3Rpbmd8fChzLl9hZGRDbGFzcyhpLiRlbGVtZW50LFwidWktc2VsZWN0aW5nXCIpLGkuc2VsZWN0aW5nPSEwLHMuX3RyaWdnZXIoXCJzZWxlY3RpbmdcIixlLHtzZWxlY3Rpbmc6aS5lbGVtZW50fSkpKTooaS5zZWxlY3RpbmcmJigoZS5tZXRhS2V5fHxlLmN0cmxLZXkpJiZpLnN0YXJ0c2VsZWN0ZWQ/KHMuX3JlbW92ZUNsYXNzKGkuJGVsZW1lbnQsXCJ1aS1zZWxlY3RpbmdcIiksaS5zZWxlY3Rpbmc9ITEscy5fYWRkQ2xhc3MoaS4kZWxlbWVudCxcInVpLXNlbGVjdGVkXCIpLGkuc2VsZWN0ZWQ9ITApOihzLl9yZW1vdmVDbGFzcyhpLiRlbGVtZW50LFwidWktc2VsZWN0aW5nXCIpLGkuc2VsZWN0aW5nPSExLGkuc3RhcnRzZWxlY3RlZCYmKHMuX2FkZENsYXNzKGkuJGVsZW1lbnQsXCJ1aS11bnNlbGVjdGluZ1wiKSxpLnVuc2VsZWN0aW5nPSEwKSxzLl90cmlnZ2VyKFwidW5zZWxlY3RpbmdcIixlLHt1bnNlbGVjdGluZzppLmVsZW1lbnR9KSkpLGkuc2VsZWN0ZWQmJihlLm1ldGFLZXl8fGUuY3RybEtleXx8aS5zdGFydHNlbGVjdGVkfHwocy5fcmVtb3ZlQ2xhc3MoaS4kZWxlbWVudCxcInVpLXNlbGVjdGVkXCIpLGkuc2VsZWN0ZWQ9ITEscy5fYWRkQ2xhc3MoaS4kZWxlbWVudCxcInVpLXVuc2VsZWN0aW5nXCIpLGkudW5zZWxlY3Rpbmc9ITAscy5fdHJpZ2dlcihcInVuc2VsZWN0aW5nXCIsZSx7dW5zZWxlY3Rpbmc6aS5lbGVtZW50fSkpKSkpfSksITF9fSxfbW91c2VTdG9wOmZ1bmN0aW9uKGUpe3ZhciBpPXRoaXM7cmV0dXJuIHRoaXMuZHJhZ2dlZD0hMSx0KFwiLnVpLXVuc2VsZWN0aW5nXCIsdGhpcy5lbGVtZW50WzBdKS5lYWNoKGZ1bmN0aW9uKCl7dmFyIHM9dC5kYXRhKHRoaXMsXCJzZWxlY3RhYmxlLWl0ZW1cIik7aS5fcmVtb3ZlQ2xhc3Mocy4kZWxlbWVudCxcInVpLXVuc2VsZWN0aW5nXCIpLHMudW5zZWxlY3Rpbmc9ITEscy5zdGFydHNlbGVjdGVkPSExLGkuX3RyaWdnZXIoXCJ1bnNlbGVjdGVkXCIsZSx7dW5zZWxlY3RlZDpzLmVsZW1lbnR9KX0pLHQoXCIudWktc2VsZWN0aW5nXCIsdGhpcy5lbGVtZW50WzBdKS5lYWNoKGZ1bmN0aW9uKCl7dmFyIHM9dC5kYXRhKHRoaXMsXCJzZWxlY3RhYmxlLWl0ZW1cIik7aS5fcmVtb3ZlQ2xhc3Mocy4kZWxlbWVudCxcInVpLXNlbGVjdGluZ1wiKS5fYWRkQ2xhc3Mocy4kZWxlbWVudCxcInVpLXNlbGVjdGVkXCIpLHMuc2VsZWN0aW5nPSExLHMuc2VsZWN0ZWQ9ITAscy5zdGFydHNlbGVjdGVkPSEwLGkuX3RyaWdnZXIoXCJzZWxlY3RlZFwiLGUse3NlbGVjdGVkOnMuZWxlbWVudH0pfSksdGhpcy5fdHJpZ2dlcihcInN0b3BcIixlKSx0aGlzLmhlbHBlci5yZW1vdmUoKSwhMX19KSx0LndpZGdldChcInVpLnNlbGVjdG1lbnVcIixbdC51aS5mb3JtUmVzZXRNaXhpbix7dmVyc2lvbjpcIjEuMTIuMVwiLGRlZmF1bHRFbGVtZW50OlwiPHNlbGVjdD5cIixvcHRpb25zOnthcHBlbmRUbzpudWxsLGNsYXNzZXM6e1widWktc2VsZWN0bWVudS1idXR0b24tb3BlblwiOlwidWktY29ybmVyLXRvcFwiLFwidWktc2VsZWN0bWVudS1idXR0b24tY2xvc2VkXCI6XCJ1aS1jb3JuZXItYWxsXCJ9LGRpc2FibGVkOm51bGwsaWNvbnM6e2J1dHRvbjpcInVpLWljb24tdHJpYW5nbGUtMS1zXCJ9LHBvc2l0aW9uOntteTpcImxlZnQgdG9wXCIsYXQ6XCJsZWZ0IGJvdHRvbVwiLGNvbGxpc2lvbjpcIm5vbmVcIn0sd2lkdGg6ITEsY2hhbmdlOm51bGwsY2xvc2U6bnVsbCxmb2N1czpudWxsLG9wZW46bnVsbCxzZWxlY3Q6bnVsbH0sX2NyZWF0ZTpmdW5jdGlvbigpe3ZhciBlPXRoaXMuZWxlbWVudC51bmlxdWVJZCgpLmF0dHIoXCJpZFwiKTt0aGlzLmlkcz17ZWxlbWVudDplLGJ1dHRvbjplK1wiLWJ1dHRvblwiLG1lbnU6ZStcIi1tZW51XCJ9LHRoaXMuX2RyYXdCdXR0b24oKSx0aGlzLl9kcmF3TWVudSgpLHRoaXMuX2JpbmRGb3JtUmVzZXRIYW5kbGVyKCksdGhpcy5fcmVuZGVyZWQ9ITEsdGhpcy5tZW51SXRlbXM9dCgpfSxfZHJhd0J1dHRvbjpmdW5jdGlvbigpe3ZhciBlLGk9dGhpcyxzPXRoaXMuX3BhcnNlT3B0aW9uKHRoaXMuZWxlbWVudC5maW5kKFwib3B0aW9uOnNlbGVjdGVkXCIpLHRoaXMuZWxlbWVudFswXS5zZWxlY3RlZEluZGV4KTt0aGlzLmxhYmVscz10aGlzLmVsZW1lbnQubGFiZWxzKCkuYXR0cihcImZvclwiLHRoaXMuaWRzLmJ1dHRvbiksdGhpcy5fb24odGhpcy5sYWJlbHMse2NsaWNrOmZ1bmN0aW9uKHQpe3RoaXMuYnV0dG9uLmZvY3VzKCksdC5wcmV2ZW50RGVmYXVsdCgpfX0pLHRoaXMuZWxlbWVudC5oaWRlKCksdGhpcy5idXR0b249dChcIjxzcGFuPlwiLHt0YWJpbmRleDp0aGlzLm9wdGlvbnMuZGlzYWJsZWQ/LTE6MCxpZDp0aGlzLmlkcy5idXR0b24scm9sZTpcImNvbWJvYm94XCIsXCJhcmlhLWV4cGFuZGVkXCI6XCJmYWxzZVwiLFwiYXJpYS1hdXRvY29tcGxldGVcIjpcImxpc3RcIixcImFyaWEtb3duc1wiOnRoaXMuaWRzLm1lbnUsXCJhcmlhLWhhc3BvcHVwXCI6XCJ0cnVlXCIsdGl0bGU6dGhpcy5lbGVtZW50LmF0dHIoXCJ0aXRsZVwiKX0pLmluc2VydEFmdGVyKHRoaXMuZWxlbWVudCksdGhpcy5fYWRkQ2xhc3ModGhpcy5idXR0b24sXCJ1aS1zZWxlY3RtZW51LWJ1dHRvbiB1aS1zZWxlY3RtZW51LWJ1dHRvbi1jbG9zZWRcIixcInVpLWJ1dHRvbiB1aS13aWRnZXRcIiksZT10KFwiPHNwYW4+XCIpLmFwcGVuZFRvKHRoaXMuYnV0dG9uKSx0aGlzLl9hZGRDbGFzcyhlLFwidWktc2VsZWN0bWVudS1pY29uXCIsXCJ1aS1pY29uIFwiK3RoaXMub3B0aW9ucy5pY29ucy5idXR0b24pLHRoaXMuYnV0dG9uSXRlbT10aGlzLl9yZW5kZXJCdXR0b25JdGVtKHMpLmFwcGVuZFRvKHRoaXMuYnV0dG9uKSx0aGlzLm9wdGlvbnMud2lkdGghPT0hMSYmdGhpcy5fcmVzaXplQnV0dG9uKCksdGhpcy5fb24odGhpcy5idXR0b24sdGhpcy5fYnV0dG9uRXZlbnRzKSx0aGlzLmJ1dHRvbi5vbmUoXCJmb2N1c2luXCIsZnVuY3Rpb24oKXtpLl9yZW5kZXJlZHx8aS5fcmVmcmVzaE1lbnUoKX0pfSxfZHJhd01lbnU6ZnVuY3Rpb24oKXt2YXIgZT10aGlzO3RoaXMubWVudT10KFwiPHVsPlwiLHtcImFyaWEtaGlkZGVuXCI6XCJ0cnVlXCIsXCJhcmlhLWxhYmVsbGVkYnlcIjp0aGlzLmlkcy5idXR0b24saWQ6dGhpcy5pZHMubWVudX0pLHRoaXMubWVudVdyYXA9dChcIjxkaXY+XCIpLmFwcGVuZCh0aGlzLm1lbnUpLHRoaXMuX2FkZENsYXNzKHRoaXMubWVudVdyYXAsXCJ1aS1zZWxlY3RtZW51LW1lbnVcIixcInVpLWZyb250XCIpLHRoaXMubWVudVdyYXAuYXBwZW5kVG8odGhpcy5fYXBwZW5kVG8oKSksdGhpcy5tZW51SW5zdGFuY2U9dGhpcy5tZW51Lm1lbnUoe2NsYXNzZXM6e1widWktbWVudVwiOlwidWktY29ybmVyLWJvdHRvbVwifSxyb2xlOlwibGlzdGJveFwiLHNlbGVjdDpmdW5jdGlvbih0LGkpe3QucHJldmVudERlZmF1bHQoKSxlLl9zZXRTZWxlY3Rpb24oKSxlLl9zZWxlY3QoaS5pdGVtLmRhdGEoXCJ1aS1zZWxlY3RtZW51LWl0ZW1cIiksdCl9LGZvY3VzOmZ1bmN0aW9uKHQsaSl7dmFyIHM9aS5pdGVtLmRhdGEoXCJ1aS1zZWxlY3RtZW51LWl0ZW1cIik7bnVsbCE9ZS5mb2N1c0luZGV4JiZzLmluZGV4IT09ZS5mb2N1c0luZGV4JiYoZS5fdHJpZ2dlcihcImZvY3VzXCIsdCx7aXRlbTpzfSksZS5pc09wZW58fGUuX3NlbGVjdChzLHQpKSxlLmZvY3VzSW5kZXg9cy5pbmRleCxlLmJ1dHRvbi5hdHRyKFwiYXJpYS1hY3RpdmVkZXNjZW5kYW50XCIsZS5tZW51SXRlbXMuZXEocy5pbmRleCkuYXR0cihcImlkXCIpKX19KS5tZW51KFwiaW5zdGFuY2VcIiksdGhpcy5tZW51SW5zdGFuY2UuX29mZih0aGlzLm1lbnUsXCJtb3VzZWxlYXZlXCIpLHRoaXMubWVudUluc3RhbmNlLl9jbG9zZU9uRG9jdW1lbnRDbGljaz1mdW5jdGlvbigpe3JldHVybiExfSx0aGlzLm1lbnVJbnN0YW5jZS5faXNEaXZpZGVyPWZ1bmN0aW9uKCl7cmV0dXJuITF9fSxyZWZyZXNoOmZ1bmN0aW9uKCl7dGhpcy5fcmVmcmVzaE1lbnUoKSx0aGlzLmJ1dHRvbkl0ZW0ucmVwbGFjZVdpdGgodGhpcy5idXR0b25JdGVtPXRoaXMuX3JlbmRlckJ1dHRvbkl0ZW0odGhpcy5fZ2V0U2VsZWN0ZWRJdGVtKCkuZGF0YShcInVpLXNlbGVjdG1lbnUtaXRlbVwiKXx8e30pKSxudWxsPT09dGhpcy5vcHRpb25zLndpZHRoJiZ0aGlzLl9yZXNpemVCdXR0b24oKX0sX3JlZnJlc2hNZW51OmZ1bmN0aW9uKCl7dmFyIHQsZT10aGlzLmVsZW1lbnQuZmluZChcIm9wdGlvblwiKTt0aGlzLm1lbnUuZW1wdHkoKSx0aGlzLl9wYXJzZU9wdGlvbnMoZSksdGhpcy5fcmVuZGVyTWVudSh0aGlzLm1lbnUsdGhpcy5pdGVtcyksdGhpcy5tZW51SW5zdGFuY2UucmVmcmVzaCgpLHRoaXMubWVudUl0ZW1zPXRoaXMubWVudS5maW5kKFwibGlcIikubm90KFwiLnVpLXNlbGVjdG1lbnUtb3B0Z3JvdXBcIikuZmluZChcIi51aS1tZW51LWl0ZW0td3JhcHBlclwiKSx0aGlzLl9yZW5kZXJlZD0hMCxlLmxlbmd0aCYmKHQ9dGhpcy5fZ2V0U2VsZWN0ZWRJdGVtKCksdGhpcy5tZW51SW5zdGFuY2UuZm9jdXMobnVsbCx0KSx0aGlzLl9zZXRBcmlhKHQuZGF0YShcInVpLXNlbGVjdG1lbnUtaXRlbVwiKSksdGhpcy5fc2V0T3B0aW9uKFwiZGlzYWJsZWRcIix0aGlzLmVsZW1lbnQucHJvcChcImRpc2FibGVkXCIpKSl9LG9wZW46ZnVuY3Rpb24odCl7dGhpcy5vcHRpb25zLmRpc2FibGVkfHwodGhpcy5fcmVuZGVyZWQ/KHRoaXMuX3JlbW92ZUNsYXNzKHRoaXMubWVudS5maW5kKFwiLnVpLXN0YXRlLWFjdGl2ZVwiKSxudWxsLFwidWktc3RhdGUtYWN0aXZlXCIpLHRoaXMubWVudUluc3RhbmNlLmZvY3VzKG51bGwsdGhpcy5fZ2V0U2VsZWN0ZWRJdGVtKCkpKTp0aGlzLl9yZWZyZXNoTWVudSgpLHRoaXMubWVudUl0ZW1zLmxlbmd0aCYmKHRoaXMuaXNPcGVuPSEwLHRoaXMuX3RvZ2dsZUF0dHIoKSx0aGlzLl9yZXNpemVNZW51KCksdGhpcy5fcG9zaXRpb24oKSx0aGlzLl9vbih0aGlzLmRvY3VtZW50LHRoaXMuX2RvY3VtZW50Q2xpY2spLHRoaXMuX3RyaWdnZXIoXCJvcGVuXCIsdCkpKX0sX3Bvc2l0aW9uOmZ1bmN0aW9uKCl7dGhpcy5tZW51V3JhcC5wb3NpdGlvbih0LmV4dGVuZCh7b2Y6dGhpcy5idXR0b259LHRoaXMub3B0aW9ucy5wb3NpdGlvbikpfSxjbG9zZTpmdW5jdGlvbih0KXt0aGlzLmlzT3BlbiYmKHRoaXMuaXNPcGVuPSExLHRoaXMuX3RvZ2dsZUF0dHIoKSx0aGlzLnJhbmdlPW51bGwsdGhpcy5fb2ZmKHRoaXMuZG9jdW1lbnQpLHRoaXMuX3RyaWdnZXIoXCJjbG9zZVwiLHQpKX0sd2lkZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuYnV0dG9ufSxtZW51V2lkZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMubWVudX0sX3JlbmRlckJ1dHRvbkl0ZW06ZnVuY3Rpb24oZSl7dmFyIGk9dChcIjxzcGFuPlwiKTtyZXR1cm4gdGhpcy5fc2V0VGV4dChpLGUubGFiZWwpLHRoaXMuX2FkZENsYXNzKGksXCJ1aS1zZWxlY3RtZW51LXRleHRcIiksaX0sX3JlbmRlck1lbnU6ZnVuY3Rpb24oZSxpKXt2YXIgcz10aGlzLG49XCJcIjt0LmVhY2goaSxmdW5jdGlvbihpLG8pe3ZhciBhO28ub3B0Z3JvdXAhPT1uJiYoYT10KFwiPGxpPlwiLHt0ZXh0Om8ub3B0Z3JvdXB9KSxzLl9hZGRDbGFzcyhhLFwidWktc2VsZWN0bWVudS1vcHRncm91cFwiLFwidWktbWVudS1kaXZpZGVyXCIrKG8uZWxlbWVudC5wYXJlbnQoXCJvcHRncm91cFwiKS5wcm9wKFwiZGlzYWJsZWRcIik/XCIgdWktc3RhdGUtZGlzYWJsZWRcIjpcIlwiKSksYS5hcHBlbmRUbyhlKSxuPW8ub3B0Z3JvdXApLHMuX3JlbmRlckl0ZW1EYXRhKGUsbyl9KX0sX3JlbmRlckl0ZW1EYXRhOmZ1bmN0aW9uKHQsZSl7cmV0dXJuIHRoaXMuX3JlbmRlckl0ZW0odCxlKS5kYXRhKFwidWktc2VsZWN0bWVudS1pdGVtXCIsZSl9LF9yZW5kZXJJdGVtOmZ1bmN0aW9uKGUsaSl7dmFyIHM9dChcIjxsaT5cIiksbj10KFwiPGRpdj5cIix7dGl0bGU6aS5lbGVtZW50LmF0dHIoXCJ0aXRsZVwiKX0pO3JldHVybiBpLmRpc2FibGVkJiZ0aGlzLl9hZGRDbGFzcyhzLG51bGwsXCJ1aS1zdGF0ZS1kaXNhYmxlZFwiKSx0aGlzLl9zZXRUZXh0KG4saS5sYWJlbCkscy5hcHBlbmQobikuYXBwZW5kVG8oZSl9LF9zZXRUZXh0OmZ1bmN0aW9uKHQsZSl7ZT90LnRleHQoZSk6dC5odG1sKFwiJiMxNjA7XCIpfSxfbW92ZTpmdW5jdGlvbih0LGUpe3ZhciBpLHMsbj1cIi51aS1tZW51LWl0ZW1cIjt0aGlzLmlzT3Blbj9pPXRoaXMubWVudUl0ZW1zLmVxKHRoaXMuZm9jdXNJbmRleCkucGFyZW50KFwibGlcIik6KGk9dGhpcy5tZW51SXRlbXMuZXEodGhpcy5lbGVtZW50WzBdLnNlbGVjdGVkSW5kZXgpLnBhcmVudChcImxpXCIpLG4rPVwiOm5vdCgudWktc3RhdGUtZGlzYWJsZWQpXCIpLHM9XCJmaXJzdFwiPT09dHx8XCJsYXN0XCI9PT10P2lbXCJmaXJzdFwiPT09dD9cInByZXZBbGxcIjpcIm5leHRBbGxcIl0obikuZXEoLTEpOmlbdCtcIkFsbFwiXShuKS5lcSgwKSxzLmxlbmd0aCYmdGhpcy5tZW51SW5zdGFuY2UuZm9jdXMoZSxzKX0sX2dldFNlbGVjdGVkSXRlbTpmdW5jdGlvbigpe3JldHVybiB0aGlzLm1lbnVJdGVtcy5lcSh0aGlzLmVsZW1lbnRbMF0uc2VsZWN0ZWRJbmRleCkucGFyZW50KFwibGlcIil9LF90b2dnbGU6ZnVuY3Rpb24odCl7dGhpc1t0aGlzLmlzT3Blbj9cImNsb3NlXCI6XCJvcGVuXCJdKHQpfSxfc2V0U2VsZWN0aW9uOmZ1bmN0aW9uKCl7dmFyIHQ7dGhpcy5yYW5nZSYmKHdpbmRvdy5nZXRTZWxlY3Rpb24/KHQ9d2luZG93LmdldFNlbGVjdGlvbigpLHQucmVtb3ZlQWxsUmFuZ2VzKCksdC5hZGRSYW5nZSh0aGlzLnJhbmdlKSk6dGhpcy5yYW5nZS5zZWxlY3QoKSx0aGlzLmJ1dHRvbi5mb2N1cygpKX0sX2RvY3VtZW50Q2xpY2s6e21vdXNlZG93bjpmdW5jdGlvbihlKXt0aGlzLmlzT3BlbiYmKHQoZS50YXJnZXQpLmNsb3Nlc3QoXCIudWktc2VsZWN0bWVudS1tZW51LCAjXCIrdC51aS5lc2NhcGVTZWxlY3Rvcih0aGlzLmlkcy5idXR0b24pKS5sZW5ndGh8fHRoaXMuY2xvc2UoZSkpfX0sX2J1dHRvbkV2ZW50czp7bW91c2Vkb3duOmZ1bmN0aW9uKCl7dmFyIHQ7d2luZG93LmdldFNlbGVjdGlvbj8odD13aW5kb3cuZ2V0U2VsZWN0aW9uKCksdC5yYW5nZUNvdW50JiYodGhpcy5yYW5nZT10LmdldFJhbmdlQXQoMCkpKTp0aGlzLnJhbmdlPWRvY3VtZW50LnNlbGVjdGlvbi5jcmVhdGVSYW5nZSgpfSxjbGljazpmdW5jdGlvbih0KXt0aGlzLl9zZXRTZWxlY3Rpb24oKSx0aGlzLl90b2dnbGUodCl9LGtleWRvd246ZnVuY3Rpb24oZSl7dmFyIGk9ITA7c3dpdGNoKGUua2V5Q29kZSl7Y2FzZSB0LnVpLmtleUNvZGUuVEFCOmNhc2UgdC51aS5rZXlDb2RlLkVTQ0FQRTp0aGlzLmNsb3NlKGUpLGk9ITE7YnJlYWs7Y2FzZSB0LnVpLmtleUNvZGUuRU5URVI6dGhpcy5pc09wZW4mJnRoaXMuX3NlbGVjdEZvY3VzZWRJdGVtKGUpO2JyZWFrO2Nhc2UgdC51aS5rZXlDb2RlLlVQOmUuYWx0S2V5P3RoaXMuX3RvZ2dsZShlKTp0aGlzLl9tb3ZlKFwicHJldlwiLGUpO2JyZWFrO2Nhc2UgdC51aS5rZXlDb2RlLkRPV046ZS5hbHRLZXk/dGhpcy5fdG9nZ2xlKGUpOnRoaXMuX21vdmUoXCJuZXh0XCIsZSk7YnJlYWs7Y2FzZSB0LnVpLmtleUNvZGUuU1BBQ0U6dGhpcy5pc09wZW4/dGhpcy5fc2VsZWN0Rm9jdXNlZEl0ZW0oZSk6dGhpcy5fdG9nZ2xlKGUpO2JyZWFrO2Nhc2UgdC51aS5rZXlDb2RlLkxFRlQ6dGhpcy5fbW92ZShcInByZXZcIixlKTticmVhaztjYXNlIHQudWkua2V5Q29kZS5SSUdIVDp0aGlzLl9tb3ZlKFwibmV4dFwiLGUpO2JyZWFrO2Nhc2UgdC51aS5rZXlDb2RlLkhPTUU6Y2FzZSB0LnVpLmtleUNvZGUuUEFHRV9VUDp0aGlzLl9tb3ZlKFwiZmlyc3RcIixlKTticmVhaztjYXNlIHQudWkua2V5Q29kZS5FTkQ6Y2FzZSB0LnVpLmtleUNvZGUuUEFHRV9ET1dOOnRoaXMuX21vdmUoXCJsYXN0XCIsZSk7YnJlYWs7ZGVmYXVsdDp0aGlzLm1lbnUudHJpZ2dlcihlKSxpPSExfWkmJmUucHJldmVudERlZmF1bHQoKX19LF9zZWxlY3RGb2N1c2VkSXRlbTpmdW5jdGlvbih0KXt2YXIgZT10aGlzLm1lbnVJdGVtcy5lcSh0aGlzLmZvY3VzSW5kZXgpLnBhcmVudChcImxpXCIpO2UuaGFzQ2xhc3MoXCJ1aS1zdGF0ZS1kaXNhYmxlZFwiKXx8dGhpcy5fc2VsZWN0KGUuZGF0YShcInVpLXNlbGVjdG1lbnUtaXRlbVwiKSx0KX0sX3NlbGVjdDpmdW5jdGlvbih0LGUpe3ZhciBpPXRoaXMuZWxlbWVudFswXS5zZWxlY3RlZEluZGV4O3RoaXMuZWxlbWVudFswXS5zZWxlY3RlZEluZGV4PXQuaW5kZXgsdGhpcy5idXR0b25JdGVtLnJlcGxhY2VXaXRoKHRoaXMuYnV0dG9uSXRlbT10aGlzLl9yZW5kZXJCdXR0b25JdGVtKHQpKSx0aGlzLl9zZXRBcmlhKHQpLHRoaXMuX3RyaWdnZXIoXCJzZWxlY3RcIixlLHtpdGVtOnR9KSx0LmluZGV4IT09aSYmdGhpcy5fdHJpZ2dlcihcImNoYW5nZVwiLGUse2l0ZW06dH0pLHRoaXMuY2xvc2UoZSl9LF9zZXRBcmlhOmZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMubWVudUl0ZW1zLmVxKHQuaW5kZXgpLmF0dHIoXCJpZFwiKTt0aGlzLmJ1dHRvbi5hdHRyKHtcImFyaWEtbGFiZWxsZWRieVwiOmUsXCJhcmlhLWFjdGl2ZWRlc2NlbmRhbnRcIjplfSksdGhpcy5tZW51LmF0dHIoXCJhcmlhLWFjdGl2ZWRlc2NlbmRhbnRcIixlKX0sX3NldE9wdGlvbjpmdW5jdGlvbih0LGUpe2lmKFwiaWNvbnNcIj09PXQpe3ZhciBpPXRoaXMuYnV0dG9uLmZpbmQoXCJzcGFuLnVpLWljb25cIik7dGhpcy5fcmVtb3ZlQ2xhc3MoaSxudWxsLHRoaXMub3B0aW9ucy5pY29ucy5idXR0b24pLl9hZGRDbGFzcyhpLG51bGwsZS5idXR0b24pfXRoaXMuX3N1cGVyKHQsZSksXCJhcHBlbmRUb1wiPT09dCYmdGhpcy5tZW51V3JhcC5hcHBlbmRUbyh0aGlzLl9hcHBlbmRUbygpKSxcIndpZHRoXCI9PT10JiZ0aGlzLl9yZXNpemVCdXR0b24oKX0sX3NldE9wdGlvbkRpc2FibGVkOmZ1bmN0aW9uKHQpe3RoaXMuX3N1cGVyKHQpLHRoaXMubWVudUluc3RhbmNlLm9wdGlvbihcImRpc2FibGVkXCIsdCksdGhpcy5idXR0b24uYXR0cihcImFyaWEtZGlzYWJsZWRcIix0KSx0aGlzLl90b2dnbGVDbGFzcyh0aGlzLmJ1dHRvbixudWxsLFwidWktc3RhdGUtZGlzYWJsZWRcIix0KSx0aGlzLmVsZW1lbnQucHJvcChcImRpc2FibGVkXCIsdCksdD8odGhpcy5idXR0b24uYXR0cihcInRhYmluZGV4XCIsLTEpLHRoaXMuY2xvc2UoKSk6dGhpcy5idXR0b24uYXR0cihcInRhYmluZGV4XCIsMCl9LF9hcHBlbmRUbzpmdW5jdGlvbigpe3ZhciBlPXRoaXMub3B0aW9ucy5hcHBlbmRUbztyZXR1cm4gZSYmKGU9ZS5qcXVlcnl8fGUubm9kZVR5cGU/dChlKTp0aGlzLmRvY3VtZW50LmZpbmQoZSkuZXEoMCkpLGUmJmVbMF18fChlPXRoaXMuZWxlbWVudC5jbG9zZXN0KFwiLnVpLWZyb250LCBkaWFsb2dcIikpLGUubGVuZ3RofHwoZT10aGlzLmRvY3VtZW50WzBdLmJvZHkpLGV9LF90b2dnbGVBdHRyOmZ1bmN0aW9uKCl7dGhpcy5idXR0b24uYXR0cihcImFyaWEtZXhwYW5kZWRcIix0aGlzLmlzT3BlbiksdGhpcy5fcmVtb3ZlQ2xhc3ModGhpcy5idXR0b24sXCJ1aS1zZWxlY3RtZW51LWJ1dHRvbi1cIisodGhpcy5pc09wZW4/XCJjbG9zZWRcIjpcIm9wZW5cIikpLl9hZGRDbGFzcyh0aGlzLmJ1dHRvbixcInVpLXNlbGVjdG1lbnUtYnV0dG9uLVwiKyh0aGlzLmlzT3Blbj9cIm9wZW5cIjpcImNsb3NlZFwiKSkuX3RvZ2dsZUNsYXNzKHRoaXMubWVudVdyYXAsXCJ1aS1zZWxlY3RtZW51LW9wZW5cIixudWxsLHRoaXMuaXNPcGVuKSx0aGlzLm1lbnUuYXR0cihcImFyaWEtaGlkZGVuXCIsIXRoaXMuaXNPcGVuKX0sX3Jlc2l6ZUJ1dHRvbjpmdW5jdGlvbigpe3ZhciB0PXRoaXMub3B0aW9ucy53aWR0aDtyZXR1cm4gdD09PSExPyh0aGlzLmJ1dHRvbi5jc3MoXCJ3aWR0aFwiLFwiXCIpLHZvaWQgMCk6KG51bGw9PT10JiYodD10aGlzLmVsZW1lbnQuc2hvdygpLm91dGVyV2lkdGgoKSx0aGlzLmVsZW1lbnQuaGlkZSgpKSx0aGlzLmJ1dHRvbi5vdXRlcldpZHRoKHQpLHZvaWQgMCl9LF9yZXNpemVNZW51OmZ1bmN0aW9uKCl7dGhpcy5tZW51Lm91dGVyV2lkdGgoTWF0aC5tYXgodGhpcy5idXR0b24ub3V0ZXJXaWR0aCgpLHRoaXMubWVudS53aWR0aChcIlwiKS5vdXRlcldpZHRoKCkrMSkpfSxfZ2V0Q3JlYXRlT3B0aW9uczpmdW5jdGlvbigpe3ZhciB0PXRoaXMuX3N1cGVyKCk7cmV0dXJuIHQuZGlzYWJsZWQ9dGhpcy5lbGVtZW50LnByb3AoXCJkaXNhYmxlZFwiKSx0fSxfcGFyc2VPcHRpb25zOmZ1bmN0aW9uKGUpe3ZhciBpPXRoaXMscz1bXTtlLmVhY2goZnVuY3Rpb24oZSxuKXtzLnB1c2goaS5fcGFyc2VPcHRpb24odChuKSxlKSl9KSx0aGlzLml0ZW1zPXN9LF9wYXJzZU9wdGlvbjpmdW5jdGlvbih0LGUpe3ZhciBpPXQucGFyZW50KFwib3B0Z3JvdXBcIik7cmV0dXJue2VsZW1lbnQ6dCxpbmRleDplLHZhbHVlOnQudmFsKCksbGFiZWw6dC50ZXh0KCksb3B0Z3JvdXA6aS5hdHRyKFwibGFiZWxcIil8fFwiXCIsZGlzYWJsZWQ6aS5wcm9wKFwiZGlzYWJsZWRcIil8fHQucHJvcChcImRpc2FibGVkXCIpfX0sX2Rlc3Ryb3k6ZnVuY3Rpb24oKXt0aGlzLl91bmJpbmRGb3JtUmVzZXRIYW5kbGVyKCksdGhpcy5tZW51V3JhcC5yZW1vdmUoKSx0aGlzLmJ1dHRvbi5yZW1vdmUoKSx0aGlzLmVsZW1lbnQuc2hvdygpLHRoaXMuZWxlbWVudC5yZW1vdmVVbmlxdWVJZCgpLHRoaXMubGFiZWxzLmF0dHIoXCJmb3JcIix0aGlzLmlkcy5lbGVtZW50KX19XSksdC53aWRnZXQoXCJ1aS5zbGlkZXJcIix0LnVpLm1vdXNlLHt2ZXJzaW9uOlwiMS4xMi4xXCIsd2lkZ2V0RXZlbnRQcmVmaXg6XCJzbGlkZVwiLG9wdGlvbnM6e2FuaW1hdGU6ITEsY2xhc3Nlczp7XCJ1aS1zbGlkZXJcIjpcInVpLWNvcm5lci1hbGxcIixcInVpLXNsaWRlci1oYW5kbGVcIjpcInVpLWNvcm5lci1hbGxcIixcInVpLXNsaWRlci1yYW5nZVwiOlwidWktY29ybmVyLWFsbCB1aS13aWRnZXQtaGVhZGVyXCJ9LGRpc3RhbmNlOjAsbWF4OjEwMCxtaW46MCxvcmllbnRhdGlvbjpcImhvcml6b250YWxcIixyYW5nZTohMSxzdGVwOjEsdmFsdWU6MCx2YWx1ZXM6bnVsbCxjaGFuZ2U6bnVsbCxzbGlkZTpudWxsLHN0YXJ0Om51bGwsc3RvcDpudWxsfSxudW1QYWdlczo1LF9jcmVhdGU6ZnVuY3Rpb24oKXt0aGlzLl9rZXlTbGlkaW5nPSExLHRoaXMuX21vdXNlU2xpZGluZz0hMSx0aGlzLl9hbmltYXRlT2ZmPSEwLHRoaXMuX2hhbmRsZUluZGV4PW51bGwsdGhpcy5fZGV0ZWN0T3JpZW50YXRpb24oKSx0aGlzLl9tb3VzZUluaXQoKSx0aGlzLl9jYWxjdWxhdGVOZXdNYXgoKSx0aGlzLl9hZGRDbGFzcyhcInVpLXNsaWRlciB1aS1zbGlkZXItXCIrdGhpcy5vcmllbnRhdGlvbixcInVpLXdpZGdldCB1aS13aWRnZXQtY29udGVudFwiKSx0aGlzLl9yZWZyZXNoKCksdGhpcy5fYW5pbWF0ZU9mZj0hMVxufSxfcmVmcmVzaDpmdW5jdGlvbigpe3RoaXMuX2NyZWF0ZVJhbmdlKCksdGhpcy5fY3JlYXRlSGFuZGxlcygpLHRoaXMuX3NldHVwRXZlbnRzKCksdGhpcy5fcmVmcmVzaFZhbHVlKCl9LF9jcmVhdGVIYW5kbGVzOmZ1bmN0aW9uKCl7dmFyIGUsaSxzPXRoaXMub3B0aW9ucyxuPXRoaXMuZWxlbWVudC5maW5kKFwiLnVpLXNsaWRlci1oYW5kbGVcIiksbz1cIjxzcGFuIHRhYmluZGV4PScwJz48L3NwYW4+XCIsYT1bXTtmb3IoaT1zLnZhbHVlcyYmcy52YWx1ZXMubGVuZ3RofHwxLG4ubGVuZ3RoPmkmJihuLnNsaWNlKGkpLnJlbW92ZSgpLG49bi5zbGljZSgwLGkpKSxlPW4ubGVuZ3RoO2k+ZTtlKyspYS5wdXNoKG8pO3RoaXMuaGFuZGxlcz1uLmFkZCh0KGEuam9pbihcIlwiKSkuYXBwZW5kVG8odGhpcy5lbGVtZW50KSksdGhpcy5fYWRkQ2xhc3ModGhpcy5oYW5kbGVzLFwidWktc2xpZGVyLWhhbmRsZVwiLFwidWktc3RhdGUtZGVmYXVsdFwiKSx0aGlzLmhhbmRsZT10aGlzLmhhbmRsZXMuZXEoMCksdGhpcy5oYW5kbGVzLmVhY2goZnVuY3Rpb24oZSl7dCh0aGlzKS5kYXRhKFwidWktc2xpZGVyLWhhbmRsZS1pbmRleFwiLGUpLmF0dHIoXCJ0YWJJbmRleFwiLDApfSl9LF9jcmVhdGVSYW5nZTpmdW5jdGlvbigpe3ZhciBlPXRoaXMub3B0aW9ucztlLnJhbmdlPyhlLnJhbmdlPT09ITAmJihlLnZhbHVlcz9lLnZhbHVlcy5sZW5ndGgmJjIhPT1lLnZhbHVlcy5sZW5ndGg/ZS52YWx1ZXM9W2UudmFsdWVzWzBdLGUudmFsdWVzWzBdXTp0LmlzQXJyYXkoZS52YWx1ZXMpJiYoZS52YWx1ZXM9ZS52YWx1ZXMuc2xpY2UoMCkpOmUudmFsdWVzPVt0aGlzLl92YWx1ZU1pbigpLHRoaXMuX3ZhbHVlTWluKCldKSx0aGlzLnJhbmdlJiZ0aGlzLnJhbmdlLmxlbmd0aD8odGhpcy5fcmVtb3ZlQ2xhc3ModGhpcy5yYW5nZSxcInVpLXNsaWRlci1yYW5nZS1taW4gdWktc2xpZGVyLXJhbmdlLW1heFwiKSx0aGlzLnJhbmdlLmNzcyh7bGVmdDpcIlwiLGJvdHRvbTpcIlwifSkpOih0aGlzLnJhbmdlPXQoXCI8ZGl2PlwiKS5hcHBlbmRUbyh0aGlzLmVsZW1lbnQpLHRoaXMuX2FkZENsYXNzKHRoaXMucmFuZ2UsXCJ1aS1zbGlkZXItcmFuZ2VcIikpLChcIm1pblwiPT09ZS5yYW5nZXx8XCJtYXhcIj09PWUucmFuZ2UpJiZ0aGlzLl9hZGRDbGFzcyh0aGlzLnJhbmdlLFwidWktc2xpZGVyLXJhbmdlLVwiK2UucmFuZ2UpKToodGhpcy5yYW5nZSYmdGhpcy5yYW5nZS5yZW1vdmUoKSx0aGlzLnJhbmdlPW51bGwpfSxfc2V0dXBFdmVudHM6ZnVuY3Rpb24oKXt0aGlzLl9vZmYodGhpcy5oYW5kbGVzKSx0aGlzLl9vbih0aGlzLmhhbmRsZXMsdGhpcy5faGFuZGxlRXZlbnRzKSx0aGlzLl9ob3ZlcmFibGUodGhpcy5oYW5kbGVzKSx0aGlzLl9mb2N1c2FibGUodGhpcy5oYW5kbGVzKX0sX2Rlc3Ryb3k6ZnVuY3Rpb24oKXt0aGlzLmhhbmRsZXMucmVtb3ZlKCksdGhpcy5yYW5nZSYmdGhpcy5yYW5nZS5yZW1vdmUoKSx0aGlzLl9tb3VzZURlc3Ryb3koKX0sX21vdXNlQ2FwdHVyZTpmdW5jdGlvbihlKXt2YXIgaSxzLG4sbyxhLHIsaCxsLGM9dGhpcyx1PXRoaXMub3B0aW9ucztyZXR1cm4gdS5kaXNhYmxlZD8hMToodGhpcy5lbGVtZW50U2l6ZT17d2lkdGg6dGhpcy5lbGVtZW50Lm91dGVyV2lkdGgoKSxoZWlnaHQ6dGhpcy5lbGVtZW50Lm91dGVySGVpZ2h0KCl9LHRoaXMuZWxlbWVudE9mZnNldD10aGlzLmVsZW1lbnQub2Zmc2V0KCksaT17eDplLnBhZ2VYLHk6ZS5wYWdlWX0scz10aGlzLl9ub3JtVmFsdWVGcm9tTW91c2UoaSksbj10aGlzLl92YWx1ZU1heCgpLXRoaXMuX3ZhbHVlTWluKCkrMSx0aGlzLmhhbmRsZXMuZWFjaChmdW5jdGlvbihlKXt2YXIgaT1NYXRoLmFicyhzLWMudmFsdWVzKGUpKTsobj5pfHxuPT09aSYmKGU9PT1jLl9sYXN0Q2hhbmdlZFZhbHVlfHxjLnZhbHVlcyhlKT09PXUubWluKSkmJihuPWksbz10KHRoaXMpLGE9ZSl9KSxyPXRoaXMuX3N0YXJ0KGUsYSkscj09PSExPyExOih0aGlzLl9tb3VzZVNsaWRpbmc9ITAsdGhpcy5faGFuZGxlSW5kZXg9YSx0aGlzLl9hZGRDbGFzcyhvLG51bGwsXCJ1aS1zdGF0ZS1hY3RpdmVcIiksby50cmlnZ2VyKFwiZm9jdXNcIiksaD1vLm9mZnNldCgpLGw9IXQoZS50YXJnZXQpLnBhcmVudHMoKS5hZGRCYWNrKCkuaXMoXCIudWktc2xpZGVyLWhhbmRsZVwiKSx0aGlzLl9jbGlja09mZnNldD1sP3tsZWZ0OjAsdG9wOjB9OntsZWZ0OmUucGFnZVgtaC5sZWZ0LW8ud2lkdGgoKS8yLHRvcDplLnBhZ2VZLWgudG9wLW8uaGVpZ2h0KCkvMi0ocGFyc2VJbnQoby5jc3MoXCJib3JkZXJUb3BXaWR0aFwiKSwxMCl8fDApLShwYXJzZUludChvLmNzcyhcImJvcmRlckJvdHRvbVdpZHRoXCIpLDEwKXx8MCkrKHBhcnNlSW50KG8uY3NzKFwibWFyZ2luVG9wXCIpLDEwKXx8MCl9LHRoaXMuaGFuZGxlcy5oYXNDbGFzcyhcInVpLXN0YXRlLWhvdmVyXCIpfHx0aGlzLl9zbGlkZShlLGEscyksdGhpcy5fYW5pbWF0ZU9mZj0hMCwhMCkpfSxfbW91c2VTdGFydDpmdW5jdGlvbigpe3JldHVybiEwfSxfbW91c2VEcmFnOmZ1bmN0aW9uKHQpe3ZhciBlPXt4OnQucGFnZVgseTp0LnBhZ2VZfSxpPXRoaXMuX25vcm1WYWx1ZUZyb21Nb3VzZShlKTtyZXR1cm4gdGhpcy5fc2xpZGUodCx0aGlzLl9oYW5kbGVJbmRleCxpKSwhMX0sX21vdXNlU3RvcDpmdW5jdGlvbih0KXtyZXR1cm4gdGhpcy5fcmVtb3ZlQ2xhc3ModGhpcy5oYW5kbGVzLG51bGwsXCJ1aS1zdGF0ZS1hY3RpdmVcIiksdGhpcy5fbW91c2VTbGlkaW5nPSExLHRoaXMuX3N0b3AodCx0aGlzLl9oYW5kbGVJbmRleCksdGhpcy5fY2hhbmdlKHQsdGhpcy5faGFuZGxlSW5kZXgpLHRoaXMuX2hhbmRsZUluZGV4PW51bGwsdGhpcy5fY2xpY2tPZmZzZXQ9bnVsbCx0aGlzLl9hbmltYXRlT2ZmPSExLCExfSxfZGV0ZWN0T3JpZW50YXRpb246ZnVuY3Rpb24oKXt0aGlzLm9yaWVudGF0aW9uPVwidmVydGljYWxcIj09PXRoaXMub3B0aW9ucy5vcmllbnRhdGlvbj9cInZlcnRpY2FsXCI6XCJob3Jpem9udGFsXCJ9LF9ub3JtVmFsdWVGcm9tTW91c2U6ZnVuY3Rpb24odCl7dmFyIGUsaSxzLG4sbztyZXR1cm5cImhvcml6b250YWxcIj09PXRoaXMub3JpZW50YXRpb24/KGU9dGhpcy5lbGVtZW50U2l6ZS53aWR0aCxpPXQueC10aGlzLmVsZW1lbnRPZmZzZXQubGVmdC0odGhpcy5fY2xpY2tPZmZzZXQ/dGhpcy5fY2xpY2tPZmZzZXQubGVmdDowKSk6KGU9dGhpcy5lbGVtZW50U2l6ZS5oZWlnaHQsaT10LnktdGhpcy5lbGVtZW50T2Zmc2V0LnRvcC0odGhpcy5fY2xpY2tPZmZzZXQ/dGhpcy5fY2xpY2tPZmZzZXQudG9wOjApKSxzPWkvZSxzPjEmJihzPTEpLDA+cyYmKHM9MCksXCJ2ZXJ0aWNhbFwiPT09dGhpcy5vcmllbnRhdGlvbiYmKHM9MS1zKSxuPXRoaXMuX3ZhbHVlTWF4KCktdGhpcy5fdmFsdWVNaW4oKSxvPXRoaXMuX3ZhbHVlTWluKCkrcypuLHRoaXMuX3RyaW1BbGlnblZhbHVlKG8pfSxfdWlIYXNoOmZ1bmN0aW9uKHQsZSxpKXt2YXIgcz17aGFuZGxlOnRoaXMuaGFuZGxlc1t0XSxoYW5kbGVJbmRleDp0LHZhbHVlOnZvaWQgMCE9PWU/ZTp0aGlzLnZhbHVlKCl9O3JldHVybiB0aGlzLl9oYXNNdWx0aXBsZVZhbHVlcygpJiYocy52YWx1ZT12b2lkIDAhPT1lP2U6dGhpcy52YWx1ZXModCkscy52YWx1ZXM9aXx8dGhpcy52YWx1ZXMoKSksc30sX2hhc011bHRpcGxlVmFsdWVzOmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMub3B0aW9ucy52YWx1ZXMmJnRoaXMub3B0aW9ucy52YWx1ZXMubGVuZ3RofSxfc3RhcnQ6ZnVuY3Rpb24odCxlKXtyZXR1cm4gdGhpcy5fdHJpZ2dlcihcInN0YXJ0XCIsdCx0aGlzLl91aUhhc2goZSkpfSxfc2xpZGU6ZnVuY3Rpb24odCxlLGkpe3ZhciBzLG4sbz10aGlzLnZhbHVlKCksYT10aGlzLnZhbHVlcygpO3RoaXMuX2hhc011bHRpcGxlVmFsdWVzKCkmJihuPXRoaXMudmFsdWVzKGU/MDoxKSxvPXRoaXMudmFsdWVzKGUpLDI9PT10aGlzLm9wdGlvbnMudmFsdWVzLmxlbmd0aCYmdGhpcy5vcHRpb25zLnJhbmdlPT09ITAmJihpPTA9PT1lP01hdGgubWluKG4saSk6TWF0aC5tYXgobixpKSksYVtlXT1pKSxpIT09byYmKHM9dGhpcy5fdHJpZ2dlcihcInNsaWRlXCIsdCx0aGlzLl91aUhhc2goZSxpLGEpKSxzIT09ITEmJih0aGlzLl9oYXNNdWx0aXBsZVZhbHVlcygpP3RoaXMudmFsdWVzKGUsaSk6dGhpcy52YWx1ZShpKSkpfSxfc3RvcDpmdW5jdGlvbih0LGUpe3RoaXMuX3RyaWdnZXIoXCJzdG9wXCIsdCx0aGlzLl91aUhhc2goZSkpfSxfY2hhbmdlOmZ1bmN0aW9uKHQsZSl7dGhpcy5fa2V5U2xpZGluZ3x8dGhpcy5fbW91c2VTbGlkaW5nfHwodGhpcy5fbGFzdENoYW5nZWRWYWx1ZT1lLHRoaXMuX3RyaWdnZXIoXCJjaGFuZ2VcIix0LHRoaXMuX3VpSGFzaChlKSkpfSx2YWx1ZTpmdW5jdGlvbih0KXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8odGhpcy5vcHRpb25zLnZhbHVlPXRoaXMuX3RyaW1BbGlnblZhbHVlKHQpLHRoaXMuX3JlZnJlc2hWYWx1ZSgpLHRoaXMuX2NoYW5nZShudWxsLDApLHZvaWQgMCk6dGhpcy5fdmFsdWUoKX0sdmFsdWVzOmZ1bmN0aW9uKGUsaSl7dmFyIHMsbixvO2lmKGFyZ3VtZW50cy5sZW5ndGg+MSlyZXR1cm4gdGhpcy5vcHRpb25zLnZhbHVlc1tlXT10aGlzLl90cmltQWxpZ25WYWx1ZShpKSx0aGlzLl9yZWZyZXNoVmFsdWUoKSx0aGlzLl9jaGFuZ2UobnVsbCxlKSx2b2lkIDA7aWYoIWFyZ3VtZW50cy5sZW5ndGgpcmV0dXJuIHRoaXMuX3ZhbHVlcygpO2lmKCF0LmlzQXJyYXkoYXJndW1lbnRzWzBdKSlyZXR1cm4gdGhpcy5faGFzTXVsdGlwbGVWYWx1ZXMoKT90aGlzLl92YWx1ZXMoZSk6dGhpcy52YWx1ZSgpO2ZvcihzPXRoaXMub3B0aW9ucy52YWx1ZXMsbj1hcmd1bWVudHNbMF0sbz0wO3MubGVuZ3RoPm87bys9MSlzW29dPXRoaXMuX3RyaW1BbGlnblZhbHVlKG5bb10pLHRoaXMuX2NoYW5nZShudWxsLG8pO3RoaXMuX3JlZnJlc2hWYWx1ZSgpfSxfc2V0T3B0aW9uOmZ1bmN0aW9uKGUsaSl7dmFyIHMsbj0wO3N3aXRjaChcInJhbmdlXCI9PT1lJiZ0aGlzLm9wdGlvbnMucmFuZ2U9PT0hMCYmKFwibWluXCI9PT1pPyh0aGlzLm9wdGlvbnMudmFsdWU9dGhpcy5fdmFsdWVzKDApLHRoaXMub3B0aW9ucy52YWx1ZXM9bnVsbCk6XCJtYXhcIj09PWkmJih0aGlzLm9wdGlvbnMudmFsdWU9dGhpcy5fdmFsdWVzKHRoaXMub3B0aW9ucy52YWx1ZXMubGVuZ3RoLTEpLHRoaXMub3B0aW9ucy52YWx1ZXM9bnVsbCkpLHQuaXNBcnJheSh0aGlzLm9wdGlvbnMudmFsdWVzKSYmKG49dGhpcy5vcHRpb25zLnZhbHVlcy5sZW5ndGgpLHRoaXMuX3N1cGVyKGUsaSksZSl7Y2FzZVwib3JpZW50YXRpb25cIjp0aGlzLl9kZXRlY3RPcmllbnRhdGlvbigpLHRoaXMuX3JlbW92ZUNsYXNzKFwidWktc2xpZGVyLWhvcml6b250YWwgdWktc2xpZGVyLXZlcnRpY2FsXCIpLl9hZGRDbGFzcyhcInVpLXNsaWRlci1cIit0aGlzLm9yaWVudGF0aW9uKSx0aGlzLl9yZWZyZXNoVmFsdWUoKSx0aGlzLm9wdGlvbnMucmFuZ2UmJnRoaXMuX3JlZnJlc2hSYW5nZShpKSx0aGlzLmhhbmRsZXMuY3NzKFwiaG9yaXpvbnRhbFwiPT09aT9cImJvdHRvbVwiOlwibGVmdFwiLFwiXCIpO2JyZWFrO2Nhc2VcInZhbHVlXCI6dGhpcy5fYW5pbWF0ZU9mZj0hMCx0aGlzLl9yZWZyZXNoVmFsdWUoKSx0aGlzLl9jaGFuZ2UobnVsbCwwKSx0aGlzLl9hbmltYXRlT2ZmPSExO2JyZWFrO2Nhc2VcInZhbHVlc1wiOmZvcih0aGlzLl9hbmltYXRlT2ZmPSEwLHRoaXMuX3JlZnJlc2hWYWx1ZSgpLHM9bi0xO3M+PTA7cy0tKXRoaXMuX2NoYW5nZShudWxsLHMpO3RoaXMuX2FuaW1hdGVPZmY9ITE7YnJlYWs7Y2FzZVwic3RlcFwiOmNhc2VcIm1pblwiOmNhc2VcIm1heFwiOnRoaXMuX2FuaW1hdGVPZmY9ITAsdGhpcy5fY2FsY3VsYXRlTmV3TWF4KCksdGhpcy5fcmVmcmVzaFZhbHVlKCksdGhpcy5fYW5pbWF0ZU9mZj0hMTticmVhaztjYXNlXCJyYW5nZVwiOnRoaXMuX2FuaW1hdGVPZmY9ITAsdGhpcy5fcmVmcmVzaCgpLHRoaXMuX2FuaW1hdGVPZmY9ITF9fSxfc2V0T3B0aW9uRGlzYWJsZWQ6ZnVuY3Rpb24odCl7dGhpcy5fc3VwZXIodCksdGhpcy5fdG9nZ2xlQ2xhc3MobnVsbCxcInVpLXN0YXRlLWRpc2FibGVkXCIsISF0KX0sX3ZhbHVlOmZ1bmN0aW9uKCl7dmFyIHQ9dGhpcy5vcHRpb25zLnZhbHVlO3JldHVybiB0PXRoaXMuX3RyaW1BbGlnblZhbHVlKHQpfSxfdmFsdWVzOmZ1bmN0aW9uKHQpe3ZhciBlLGkscztpZihhcmd1bWVudHMubGVuZ3RoKXJldHVybiBlPXRoaXMub3B0aW9ucy52YWx1ZXNbdF0sZT10aGlzLl90cmltQWxpZ25WYWx1ZShlKTtpZih0aGlzLl9oYXNNdWx0aXBsZVZhbHVlcygpKXtmb3IoaT10aGlzLm9wdGlvbnMudmFsdWVzLnNsaWNlKCkscz0wO2kubGVuZ3RoPnM7cys9MSlpW3NdPXRoaXMuX3RyaW1BbGlnblZhbHVlKGlbc10pO3JldHVybiBpfXJldHVybltdfSxfdHJpbUFsaWduVmFsdWU6ZnVuY3Rpb24odCl7aWYodGhpcy5fdmFsdWVNaW4oKT49dClyZXR1cm4gdGhpcy5fdmFsdWVNaW4oKTtpZih0Pj10aGlzLl92YWx1ZU1heCgpKXJldHVybiB0aGlzLl92YWx1ZU1heCgpO3ZhciBlPXRoaXMub3B0aW9ucy5zdGVwPjA/dGhpcy5vcHRpb25zLnN0ZXA6MSxpPSh0LXRoaXMuX3ZhbHVlTWluKCkpJWUscz10LWk7cmV0dXJuIDIqTWF0aC5hYnMoaSk+PWUmJihzKz1pPjA/ZTotZSkscGFyc2VGbG9hdChzLnRvRml4ZWQoNSkpfSxfY2FsY3VsYXRlTmV3TWF4OmZ1bmN0aW9uKCl7dmFyIHQ9dGhpcy5vcHRpb25zLm1heCxlPXRoaXMuX3ZhbHVlTWluKCksaT10aGlzLm9wdGlvbnMuc3RlcCxzPU1hdGgucm91bmQoKHQtZSkvaSkqaTt0PXMrZSx0PnRoaXMub3B0aW9ucy5tYXgmJih0LT1pKSx0aGlzLm1heD1wYXJzZUZsb2F0KHQudG9GaXhlZCh0aGlzLl9wcmVjaXNpb24oKSkpfSxfcHJlY2lzaW9uOmZ1bmN0aW9uKCl7dmFyIHQ9dGhpcy5fcHJlY2lzaW9uT2YodGhpcy5vcHRpb25zLnN0ZXApO3JldHVybiBudWxsIT09dGhpcy5vcHRpb25zLm1pbiYmKHQ9TWF0aC5tYXgodCx0aGlzLl9wcmVjaXNpb25PZih0aGlzLm9wdGlvbnMubWluKSkpLHR9LF9wcmVjaXNpb25PZjpmdW5jdGlvbih0KXt2YXIgZT1cIlwiK3QsaT1lLmluZGV4T2YoXCIuXCIpO3JldHVybi0xPT09aT8wOmUubGVuZ3RoLWktMX0sX3ZhbHVlTWluOmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMub3B0aW9ucy5taW59LF92YWx1ZU1heDpmdW5jdGlvbigpe3JldHVybiB0aGlzLm1heH0sX3JlZnJlc2hSYW5nZTpmdW5jdGlvbih0KXtcInZlcnRpY2FsXCI9PT10JiZ0aGlzLnJhbmdlLmNzcyh7d2lkdGg6XCJcIixsZWZ0OlwiXCJ9KSxcImhvcml6b250YWxcIj09PXQmJnRoaXMucmFuZ2UuY3NzKHtoZWlnaHQ6XCJcIixib3R0b206XCJcIn0pfSxfcmVmcmVzaFZhbHVlOmZ1bmN0aW9uKCl7dmFyIGUsaSxzLG4sbyxhPXRoaXMub3B0aW9ucy5yYW5nZSxyPXRoaXMub3B0aW9ucyxoPXRoaXMsbD10aGlzLl9hbmltYXRlT2ZmPyExOnIuYW5pbWF0ZSxjPXt9O3RoaXMuX2hhc011bHRpcGxlVmFsdWVzKCk/dGhpcy5oYW5kbGVzLmVhY2goZnVuY3Rpb24ocyl7aT0xMDAqKChoLnZhbHVlcyhzKS1oLl92YWx1ZU1pbigpKS8oaC5fdmFsdWVNYXgoKS1oLl92YWx1ZU1pbigpKSksY1tcImhvcml6b250YWxcIj09PWgub3JpZW50YXRpb24/XCJsZWZ0XCI6XCJib3R0b21cIl09aStcIiVcIix0KHRoaXMpLnN0b3AoMSwxKVtsP1wiYW5pbWF0ZVwiOlwiY3NzXCJdKGMsci5hbmltYXRlKSxoLm9wdGlvbnMucmFuZ2U9PT0hMCYmKFwiaG9yaXpvbnRhbFwiPT09aC5vcmllbnRhdGlvbj8oMD09PXMmJmgucmFuZ2Uuc3RvcCgxLDEpW2w/XCJhbmltYXRlXCI6XCJjc3NcIl0oe2xlZnQ6aStcIiVcIn0sci5hbmltYXRlKSwxPT09cyYmaC5yYW5nZVtsP1wiYW5pbWF0ZVwiOlwiY3NzXCJdKHt3aWR0aDppLWUrXCIlXCJ9LHtxdWV1ZTohMSxkdXJhdGlvbjpyLmFuaW1hdGV9KSk6KDA9PT1zJiZoLnJhbmdlLnN0b3AoMSwxKVtsP1wiYW5pbWF0ZVwiOlwiY3NzXCJdKHtib3R0b206aStcIiVcIn0sci5hbmltYXRlKSwxPT09cyYmaC5yYW5nZVtsP1wiYW5pbWF0ZVwiOlwiY3NzXCJdKHtoZWlnaHQ6aS1lK1wiJVwifSx7cXVldWU6ITEsZHVyYXRpb246ci5hbmltYXRlfSkpKSxlPWl9KToocz10aGlzLnZhbHVlKCksbj10aGlzLl92YWx1ZU1pbigpLG89dGhpcy5fdmFsdWVNYXgoKSxpPW8hPT1uPzEwMCooKHMtbikvKG8tbikpOjAsY1tcImhvcml6b250YWxcIj09PXRoaXMub3JpZW50YXRpb24/XCJsZWZ0XCI6XCJib3R0b21cIl09aStcIiVcIix0aGlzLmhhbmRsZS5zdG9wKDEsMSlbbD9cImFuaW1hdGVcIjpcImNzc1wiXShjLHIuYW5pbWF0ZSksXCJtaW5cIj09PWEmJlwiaG9yaXpvbnRhbFwiPT09dGhpcy5vcmllbnRhdGlvbiYmdGhpcy5yYW5nZS5zdG9wKDEsMSlbbD9cImFuaW1hdGVcIjpcImNzc1wiXSh7d2lkdGg6aStcIiVcIn0sci5hbmltYXRlKSxcIm1heFwiPT09YSYmXCJob3Jpem9udGFsXCI9PT10aGlzLm9yaWVudGF0aW9uJiZ0aGlzLnJhbmdlLnN0b3AoMSwxKVtsP1wiYW5pbWF0ZVwiOlwiY3NzXCJdKHt3aWR0aDoxMDAtaStcIiVcIn0sci5hbmltYXRlKSxcIm1pblwiPT09YSYmXCJ2ZXJ0aWNhbFwiPT09dGhpcy5vcmllbnRhdGlvbiYmdGhpcy5yYW5nZS5zdG9wKDEsMSlbbD9cImFuaW1hdGVcIjpcImNzc1wiXSh7aGVpZ2h0OmkrXCIlXCJ9LHIuYW5pbWF0ZSksXCJtYXhcIj09PWEmJlwidmVydGljYWxcIj09PXRoaXMub3JpZW50YXRpb24mJnRoaXMucmFuZ2Uuc3RvcCgxLDEpW2w/XCJhbmltYXRlXCI6XCJjc3NcIl0oe2hlaWdodDoxMDAtaStcIiVcIn0sci5hbmltYXRlKSl9LF9oYW5kbGVFdmVudHM6e2tleWRvd246ZnVuY3Rpb24oZSl7dmFyIGkscyxuLG8sYT10KGUudGFyZ2V0KS5kYXRhKFwidWktc2xpZGVyLWhhbmRsZS1pbmRleFwiKTtzd2l0Y2goZS5rZXlDb2RlKXtjYXNlIHQudWkua2V5Q29kZS5IT01FOmNhc2UgdC51aS5rZXlDb2RlLkVORDpjYXNlIHQudWkua2V5Q29kZS5QQUdFX1VQOmNhc2UgdC51aS5rZXlDb2RlLlBBR0VfRE9XTjpjYXNlIHQudWkua2V5Q29kZS5VUDpjYXNlIHQudWkua2V5Q29kZS5SSUdIVDpjYXNlIHQudWkua2V5Q29kZS5ET1dOOmNhc2UgdC51aS5rZXlDb2RlLkxFRlQ6aWYoZS5wcmV2ZW50RGVmYXVsdCgpLCF0aGlzLl9rZXlTbGlkaW5nJiYodGhpcy5fa2V5U2xpZGluZz0hMCx0aGlzLl9hZGRDbGFzcyh0KGUudGFyZ2V0KSxudWxsLFwidWktc3RhdGUtYWN0aXZlXCIpLGk9dGhpcy5fc3RhcnQoZSxhKSxpPT09ITEpKXJldHVybn1zd2l0Y2gobz10aGlzLm9wdGlvbnMuc3RlcCxzPW49dGhpcy5faGFzTXVsdGlwbGVWYWx1ZXMoKT90aGlzLnZhbHVlcyhhKTp0aGlzLnZhbHVlKCksZS5rZXlDb2RlKXtjYXNlIHQudWkua2V5Q29kZS5IT01FOm49dGhpcy5fdmFsdWVNaW4oKTticmVhaztjYXNlIHQudWkua2V5Q29kZS5FTkQ6bj10aGlzLl92YWx1ZU1heCgpO2JyZWFrO2Nhc2UgdC51aS5rZXlDb2RlLlBBR0VfVVA6bj10aGlzLl90cmltQWxpZ25WYWx1ZShzKyh0aGlzLl92YWx1ZU1heCgpLXRoaXMuX3ZhbHVlTWluKCkpL3RoaXMubnVtUGFnZXMpO2JyZWFrO2Nhc2UgdC51aS5rZXlDb2RlLlBBR0VfRE9XTjpuPXRoaXMuX3RyaW1BbGlnblZhbHVlKHMtKHRoaXMuX3ZhbHVlTWF4KCktdGhpcy5fdmFsdWVNaW4oKSkvdGhpcy5udW1QYWdlcyk7YnJlYWs7Y2FzZSB0LnVpLmtleUNvZGUuVVA6Y2FzZSB0LnVpLmtleUNvZGUuUklHSFQ6aWYocz09PXRoaXMuX3ZhbHVlTWF4KCkpcmV0dXJuO249dGhpcy5fdHJpbUFsaWduVmFsdWUocytvKTticmVhaztjYXNlIHQudWkua2V5Q29kZS5ET1dOOmNhc2UgdC51aS5rZXlDb2RlLkxFRlQ6aWYocz09PXRoaXMuX3ZhbHVlTWluKCkpcmV0dXJuO249dGhpcy5fdHJpbUFsaWduVmFsdWUocy1vKX10aGlzLl9zbGlkZShlLGEsbil9LGtleXVwOmZ1bmN0aW9uKGUpe3ZhciBpPXQoZS50YXJnZXQpLmRhdGEoXCJ1aS1zbGlkZXItaGFuZGxlLWluZGV4XCIpO3RoaXMuX2tleVNsaWRpbmcmJih0aGlzLl9rZXlTbGlkaW5nPSExLHRoaXMuX3N0b3AoZSxpKSx0aGlzLl9jaGFuZ2UoZSxpKSx0aGlzLl9yZW1vdmVDbGFzcyh0KGUudGFyZ2V0KSxudWxsLFwidWktc3RhdGUtYWN0aXZlXCIpKX19fSksdC53aWRnZXQoXCJ1aS5zb3J0YWJsZVwiLHQudWkubW91c2Use3ZlcnNpb246XCIxLjEyLjFcIix3aWRnZXRFdmVudFByZWZpeDpcInNvcnRcIixyZWFkeTohMSxvcHRpb25zOnthcHBlbmRUbzpcInBhcmVudFwiLGF4aXM6ITEsY29ubmVjdFdpdGg6ITEsY29udGFpbm1lbnQ6ITEsY3Vyc29yOlwiYXV0b1wiLGN1cnNvckF0OiExLGRyb3BPbkVtcHR5OiEwLGZvcmNlUGxhY2Vob2xkZXJTaXplOiExLGZvcmNlSGVscGVyU2l6ZTohMSxncmlkOiExLGhhbmRsZTohMSxoZWxwZXI6XCJvcmlnaW5hbFwiLGl0ZW1zOlwiPiAqXCIsb3BhY2l0eTohMSxwbGFjZWhvbGRlcjohMSxyZXZlcnQ6ITEsc2Nyb2xsOiEwLHNjcm9sbFNlbnNpdGl2aXR5OjIwLHNjcm9sbFNwZWVkOjIwLHNjb3BlOlwiZGVmYXVsdFwiLHRvbGVyYW5jZTpcImludGVyc2VjdFwiLHpJbmRleDoxZTMsYWN0aXZhdGU6bnVsbCxiZWZvcmVTdG9wOm51bGwsY2hhbmdlOm51bGwsZGVhY3RpdmF0ZTpudWxsLG91dDpudWxsLG92ZXI6bnVsbCxyZWNlaXZlOm51bGwscmVtb3ZlOm51bGwsc29ydDpudWxsLHN0YXJ0Om51bGwsc3RvcDpudWxsLHVwZGF0ZTpudWxsfSxfaXNPdmVyQXhpczpmdW5jdGlvbih0LGUsaSl7cmV0dXJuIHQ+PWUmJmUraT50fSxfaXNGbG9hdGluZzpmdW5jdGlvbih0KXtyZXR1cm4vbGVmdHxyaWdodC8udGVzdCh0LmNzcyhcImZsb2F0XCIpKXx8L2lubGluZXx0YWJsZS1jZWxsLy50ZXN0KHQuY3NzKFwiZGlzcGxheVwiKSl9LF9jcmVhdGU6ZnVuY3Rpb24oKXt0aGlzLmNvbnRhaW5lckNhY2hlPXt9LHRoaXMuX2FkZENsYXNzKFwidWktc29ydGFibGVcIiksdGhpcy5yZWZyZXNoKCksdGhpcy5vZmZzZXQ9dGhpcy5lbGVtZW50Lm9mZnNldCgpLHRoaXMuX21vdXNlSW5pdCgpLHRoaXMuX3NldEhhbmRsZUNsYXNzTmFtZSgpLHRoaXMucmVhZHk9ITB9LF9zZXRPcHRpb246ZnVuY3Rpb24odCxlKXt0aGlzLl9zdXBlcih0LGUpLFwiaGFuZGxlXCI9PT10JiZ0aGlzLl9zZXRIYW5kbGVDbGFzc05hbWUoKX0sX3NldEhhbmRsZUNsYXNzTmFtZTpmdW5jdGlvbigpe3ZhciBlPXRoaXM7dGhpcy5fcmVtb3ZlQ2xhc3ModGhpcy5lbGVtZW50LmZpbmQoXCIudWktc29ydGFibGUtaGFuZGxlXCIpLFwidWktc29ydGFibGUtaGFuZGxlXCIpLHQuZWFjaCh0aGlzLml0ZW1zLGZ1bmN0aW9uKCl7ZS5fYWRkQ2xhc3ModGhpcy5pbnN0YW5jZS5vcHRpb25zLmhhbmRsZT90aGlzLml0ZW0uZmluZCh0aGlzLmluc3RhbmNlLm9wdGlvbnMuaGFuZGxlKTp0aGlzLml0ZW0sXCJ1aS1zb3J0YWJsZS1oYW5kbGVcIil9KX0sX2Rlc3Ryb3k6ZnVuY3Rpb24oKXt0aGlzLl9tb3VzZURlc3Ryb3koKTtmb3IodmFyIHQ9dGhpcy5pdGVtcy5sZW5ndGgtMTt0Pj0wO3QtLSl0aGlzLml0ZW1zW3RdLml0ZW0ucmVtb3ZlRGF0YSh0aGlzLndpZGdldE5hbWUrXCItaXRlbVwiKTtyZXR1cm4gdGhpc30sX21vdXNlQ2FwdHVyZTpmdW5jdGlvbihlLGkpe3ZhciBzPW51bGwsbj0hMSxvPXRoaXM7cmV0dXJuIHRoaXMucmV2ZXJ0aW5nPyExOnRoaXMub3B0aW9ucy5kaXNhYmxlZHx8XCJzdGF0aWNcIj09PXRoaXMub3B0aW9ucy50eXBlPyExOih0aGlzLl9yZWZyZXNoSXRlbXMoZSksdChlLnRhcmdldCkucGFyZW50cygpLmVhY2goZnVuY3Rpb24oKXtyZXR1cm4gdC5kYXRhKHRoaXMsby53aWRnZXROYW1lK1wiLWl0ZW1cIik9PT1vPyhzPXQodGhpcyksITEpOnZvaWQgMH0pLHQuZGF0YShlLnRhcmdldCxvLndpZGdldE5hbWUrXCItaXRlbVwiKT09PW8mJihzPXQoZS50YXJnZXQpKSxzPyF0aGlzLm9wdGlvbnMuaGFuZGxlfHxpfHwodCh0aGlzLm9wdGlvbnMuaGFuZGxlLHMpLmZpbmQoXCIqXCIpLmFkZEJhY2soKS5lYWNoKGZ1bmN0aW9uKCl7dGhpcz09PWUudGFyZ2V0JiYobj0hMCl9KSxuKT8odGhpcy5jdXJyZW50SXRlbT1zLHRoaXMuX3JlbW92ZUN1cnJlbnRzRnJvbUl0ZW1zKCksITApOiExOiExKX0sX21vdXNlU3RhcnQ6ZnVuY3Rpb24oZSxpLHMpe3ZhciBuLG8sYT10aGlzLm9wdGlvbnM7aWYodGhpcy5jdXJyZW50Q29udGFpbmVyPXRoaXMsdGhpcy5yZWZyZXNoUG9zaXRpb25zKCksdGhpcy5oZWxwZXI9dGhpcy5fY3JlYXRlSGVscGVyKGUpLHRoaXMuX2NhY2hlSGVscGVyUHJvcG9ydGlvbnMoKSx0aGlzLl9jYWNoZU1hcmdpbnMoKSx0aGlzLnNjcm9sbFBhcmVudD10aGlzLmhlbHBlci5zY3JvbGxQYXJlbnQoKSx0aGlzLm9mZnNldD10aGlzLmN1cnJlbnRJdGVtLm9mZnNldCgpLHRoaXMub2Zmc2V0PXt0b3A6dGhpcy5vZmZzZXQudG9wLXRoaXMubWFyZ2lucy50b3AsbGVmdDp0aGlzLm9mZnNldC5sZWZ0LXRoaXMubWFyZ2lucy5sZWZ0fSx0LmV4dGVuZCh0aGlzLm9mZnNldCx7Y2xpY2s6e2xlZnQ6ZS5wYWdlWC10aGlzLm9mZnNldC5sZWZ0LHRvcDplLnBhZ2VZLXRoaXMub2Zmc2V0LnRvcH0scGFyZW50OnRoaXMuX2dldFBhcmVudE9mZnNldCgpLHJlbGF0aXZlOnRoaXMuX2dldFJlbGF0aXZlT2Zmc2V0KCl9KSx0aGlzLmhlbHBlci5jc3MoXCJwb3NpdGlvblwiLFwiYWJzb2x1dGVcIiksdGhpcy5jc3NQb3NpdGlvbj10aGlzLmhlbHBlci5jc3MoXCJwb3NpdGlvblwiKSx0aGlzLm9yaWdpbmFsUG9zaXRpb249dGhpcy5fZ2VuZXJhdGVQb3NpdGlvbihlKSx0aGlzLm9yaWdpbmFsUGFnZVg9ZS5wYWdlWCx0aGlzLm9yaWdpbmFsUGFnZVk9ZS5wYWdlWSxhLmN1cnNvckF0JiZ0aGlzLl9hZGp1c3RPZmZzZXRGcm9tSGVscGVyKGEuY3Vyc29yQXQpLHRoaXMuZG9tUG9zaXRpb249e3ByZXY6dGhpcy5jdXJyZW50SXRlbS5wcmV2KClbMF0scGFyZW50OnRoaXMuY3VycmVudEl0ZW0ucGFyZW50KClbMF19LHRoaXMuaGVscGVyWzBdIT09dGhpcy5jdXJyZW50SXRlbVswXSYmdGhpcy5jdXJyZW50SXRlbS5oaWRlKCksdGhpcy5fY3JlYXRlUGxhY2Vob2xkZXIoKSxhLmNvbnRhaW5tZW50JiZ0aGlzLl9zZXRDb250YWlubWVudCgpLGEuY3Vyc29yJiZcImF1dG9cIiE9PWEuY3Vyc29yJiYobz10aGlzLmRvY3VtZW50LmZpbmQoXCJib2R5XCIpLHRoaXMuc3RvcmVkQ3Vyc29yPW8uY3NzKFwiY3Vyc29yXCIpLG8uY3NzKFwiY3Vyc29yXCIsYS5jdXJzb3IpLHRoaXMuc3RvcmVkU3R5bGVzaGVldD10KFwiPHN0eWxlPip7IGN1cnNvcjogXCIrYS5jdXJzb3IrXCIgIWltcG9ydGFudDsgfTwvc3R5bGU+XCIpLmFwcGVuZFRvKG8pKSxhLm9wYWNpdHkmJih0aGlzLmhlbHBlci5jc3MoXCJvcGFjaXR5XCIpJiYodGhpcy5fc3RvcmVkT3BhY2l0eT10aGlzLmhlbHBlci5jc3MoXCJvcGFjaXR5XCIpKSx0aGlzLmhlbHBlci5jc3MoXCJvcGFjaXR5XCIsYS5vcGFjaXR5KSksYS56SW5kZXgmJih0aGlzLmhlbHBlci5jc3MoXCJ6SW5kZXhcIikmJih0aGlzLl9zdG9yZWRaSW5kZXg9dGhpcy5oZWxwZXIuY3NzKFwiekluZGV4XCIpKSx0aGlzLmhlbHBlci5jc3MoXCJ6SW5kZXhcIixhLnpJbmRleCkpLHRoaXMuc2Nyb2xsUGFyZW50WzBdIT09dGhpcy5kb2N1bWVudFswXSYmXCJIVE1MXCIhPT10aGlzLnNjcm9sbFBhcmVudFswXS50YWdOYW1lJiYodGhpcy5vdmVyZmxvd09mZnNldD10aGlzLnNjcm9sbFBhcmVudC5vZmZzZXQoKSksdGhpcy5fdHJpZ2dlcihcInN0YXJ0XCIsZSx0aGlzLl91aUhhc2goKSksdGhpcy5fcHJlc2VydmVIZWxwZXJQcm9wb3J0aW9uc3x8dGhpcy5fY2FjaGVIZWxwZXJQcm9wb3J0aW9ucygpLCFzKWZvcihuPXRoaXMuY29udGFpbmVycy5sZW5ndGgtMTtuPj0wO24tLSl0aGlzLmNvbnRhaW5lcnNbbl0uX3RyaWdnZXIoXCJhY3RpdmF0ZVwiLGUsdGhpcy5fdWlIYXNoKHRoaXMpKTtyZXR1cm4gdC51aS5kZG1hbmFnZXImJih0LnVpLmRkbWFuYWdlci5jdXJyZW50PXRoaXMpLHQudWkuZGRtYW5hZ2VyJiYhYS5kcm9wQmVoYXZpb3VyJiZ0LnVpLmRkbWFuYWdlci5wcmVwYXJlT2Zmc2V0cyh0aGlzLGUpLHRoaXMuZHJhZ2dpbmc9ITAsdGhpcy5fYWRkQ2xhc3ModGhpcy5oZWxwZXIsXCJ1aS1zb3J0YWJsZS1oZWxwZXJcIiksdGhpcy5fbW91c2VEcmFnKGUpLCEwfSxfbW91c2VEcmFnOmZ1bmN0aW9uKGUpe3ZhciBpLHMsbixvLGE9dGhpcy5vcHRpb25zLHI9ITE7Zm9yKHRoaXMucG9zaXRpb249dGhpcy5fZ2VuZXJhdGVQb3NpdGlvbihlKSx0aGlzLnBvc2l0aW9uQWJzPXRoaXMuX2NvbnZlcnRQb3NpdGlvblRvKFwiYWJzb2x1dGVcIiksdGhpcy5sYXN0UG9zaXRpb25BYnN8fCh0aGlzLmxhc3RQb3NpdGlvbkFicz10aGlzLnBvc2l0aW9uQWJzKSx0aGlzLm9wdGlvbnMuc2Nyb2xsJiYodGhpcy5zY3JvbGxQYXJlbnRbMF0hPT10aGlzLmRvY3VtZW50WzBdJiZcIkhUTUxcIiE9PXRoaXMuc2Nyb2xsUGFyZW50WzBdLnRhZ05hbWU/KHRoaXMub3ZlcmZsb3dPZmZzZXQudG9wK3RoaXMuc2Nyb2xsUGFyZW50WzBdLm9mZnNldEhlaWdodC1lLnBhZ2VZPGEuc2Nyb2xsU2Vuc2l0aXZpdHk/dGhpcy5zY3JvbGxQYXJlbnRbMF0uc2Nyb2xsVG9wPXI9dGhpcy5zY3JvbGxQYXJlbnRbMF0uc2Nyb2xsVG9wK2Euc2Nyb2xsU3BlZWQ6ZS5wYWdlWS10aGlzLm92ZXJmbG93T2Zmc2V0LnRvcDxhLnNjcm9sbFNlbnNpdGl2aXR5JiYodGhpcy5zY3JvbGxQYXJlbnRbMF0uc2Nyb2xsVG9wPXI9dGhpcy5zY3JvbGxQYXJlbnRbMF0uc2Nyb2xsVG9wLWEuc2Nyb2xsU3BlZWQpLHRoaXMub3ZlcmZsb3dPZmZzZXQubGVmdCt0aGlzLnNjcm9sbFBhcmVudFswXS5vZmZzZXRXaWR0aC1lLnBhZ2VYPGEuc2Nyb2xsU2Vuc2l0aXZpdHk/dGhpcy5zY3JvbGxQYXJlbnRbMF0uc2Nyb2xsTGVmdD1yPXRoaXMuc2Nyb2xsUGFyZW50WzBdLnNjcm9sbExlZnQrYS5zY3JvbGxTcGVlZDplLnBhZ2VYLXRoaXMub3ZlcmZsb3dPZmZzZXQubGVmdDxhLnNjcm9sbFNlbnNpdGl2aXR5JiYodGhpcy5zY3JvbGxQYXJlbnRbMF0uc2Nyb2xsTGVmdD1yPXRoaXMuc2Nyb2xsUGFyZW50WzBdLnNjcm9sbExlZnQtYS5zY3JvbGxTcGVlZCkpOihlLnBhZ2VZLXRoaXMuZG9jdW1lbnQuc2Nyb2xsVG9wKCk8YS5zY3JvbGxTZW5zaXRpdml0eT9yPXRoaXMuZG9jdW1lbnQuc2Nyb2xsVG9wKHRoaXMuZG9jdW1lbnQuc2Nyb2xsVG9wKCktYS5zY3JvbGxTcGVlZCk6dGhpcy53aW5kb3cuaGVpZ2h0KCktKGUucGFnZVktdGhpcy5kb2N1bWVudC5zY3JvbGxUb3AoKSk8YS5zY3JvbGxTZW5zaXRpdml0eSYmKHI9dGhpcy5kb2N1bWVudC5zY3JvbGxUb3AodGhpcy5kb2N1bWVudC5zY3JvbGxUb3AoKSthLnNjcm9sbFNwZWVkKSksZS5wYWdlWC10aGlzLmRvY3VtZW50LnNjcm9sbExlZnQoKTxhLnNjcm9sbFNlbnNpdGl2aXR5P3I9dGhpcy5kb2N1bWVudC5zY3JvbGxMZWZ0KHRoaXMuZG9jdW1lbnQuc2Nyb2xsTGVmdCgpLWEuc2Nyb2xsU3BlZWQpOnRoaXMud2luZG93LndpZHRoKCktKGUucGFnZVgtdGhpcy5kb2N1bWVudC5zY3JvbGxMZWZ0KCkpPGEuc2Nyb2xsU2Vuc2l0aXZpdHkmJihyPXRoaXMuZG9jdW1lbnQuc2Nyb2xsTGVmdCh0aGlzLmRvY3VtZW50LnNjcm9sbExlZnQoKSthLnNjcm9sbFNwZWVkKSkpLHIhPT0hMSYmdC51aS5kZG1hbmFnZXImJiFhLmRyb3BCZWhhdmlvdXImJnQudWkuZGRtYW5hZ2VyLnByZXBhcmVPZmZzZXRzKHRoaXMsZSkpLHRoaXMucG9zaXRpb25BYnM9dGhpcy5fY29udmVydFBvc2l0aW9uVG8oXCJhYnNvbHV0ZVwiKSx0aGlzLm9wdGlvbnMuYXhpcyYmXCJ5XCI9PT10aGlzLm9wdGlvbnMuYXhpc3x8KHRoaXMuaGVscGVyWzBdLnN0eWxlLmxlZnQ9dGhpcy5wb3NpdGlvbi5sZWZ0K1wicHhcIiksdGhpcy5vcHRpb25zLmF4aXMmJlwieFwiPT09dGhpcy5vcHRpb25zLmF4aXN8fCh0aGlzLmhlbHBlclswXS5zdHlsZS50b3A9dGhpcy5wb3NpdGlvbi50b3ArXCJweFwiKSxpPXRoaXMuaXRlbXMubGVuZ3RoLTE7aT49MDtpLS0paWYocz10aGlzLml0ZW1zW2ldLG49cy5pdGVtWzBdLG89dGhpcy5faW50ZXJzZWN0c1dpdGhQb2ludGVyKHMpLG8mJnMuaW5zdGFuY2U9PT10aGlzLmN1cnJlbnRDb250YWluZXImJm4hPT10aGlzLmN1cnJlbnRJdGVtWzBdJiZ0aGlzLnBsYWNlaG9sZGVyWzE9PT1vP1wibmV4dFwiOlwicHJldlwiXSgpWzBdIT09biYmIXQuY29udGFpbnModGhpcy5wbGFjZWhvbGRlclswXSxuKSYmKFwic2VtaS1keW5hbWljXCI9PT10aGlzLm9wdGlvbnMudHlwZT8hdC5jb250YWlucyh0aGlzLmVsZW1lbnRbMF0sbik6ITApKXtpZih0aGlzLmRpcmVjdGlvbj0xPT09bz9cImRvd25cIjpcInVwXCIsXCJwb2ludGVyXCIhPT10aGlzLm9wdGlvbnMudG9sZXJhbmNlJiYhdGhpcy5faW50ZXJzZWN0c1dpdGhTaWRlcyhzKSlicmVhazt0aGlzLl9yZWFycmFuZ2UoZSxzKSx0aGlzLl90cmlnZ2VyKFwiY2hhbmdlXCIsZSx0aGlzLl91aUhhc2goKSk7YnJlYWt9cmV0dXJuIHRoaXMuX2NvbnRhY3RDb250YWluZXJzKGUpLHQudWkuZGRtYW5hZ2VyJiZ0LnVpLmRkbWFuYWdlci5kcmFnKHRoaXMsZSksdGhpcy5fdHJpZ2dlcihcInNvcnRcIixlLHRoaXMuX3VpSGFzaCgpKSx0aGlzLmxhc3RQb3NpdGlvbkFicz10aGlzLnBvc2l0aW9uQWJzLCExfSxfbW91c2VTdG9wOmZ1bmN0aW9uKGUsaSl7aWYoZSl7aWYodC51aS5kZG1hbmFnZXImJiF0aGlzLm9wdGlvbnMuZHJvcEJlaGF2aW91ciYmdC51aS5kZG1hbmFnZXIuZHJvcCh0aGlzLGUpLHRoaXMub3B0aW9ucy5yZXZlcnQpe3ZhciBzPXRoaXMsbj10aGlzLnBsYWNlaG9sZGVyLm9mZnNldCgpLG89dGhpcy5vcHRpb25zLmF4aXMsYT17fTtvJiZcInhcIiE9PW98fChhLmxlZnQ9bi5sZWZ0LXRoaXMub2Zmc2V0LnBhcmVudC5sZWZ0LXRoaXMubWFyZ2lucy5sZWZ0Kyh0aGlzLm9mZnNldFBhcmVudFswXT09PXRoaXMuZG9jdW1lbnRbMF0uYm9keT8wOnRoaXMub2Zmc2V0UGFyZW50WzBdLnNjcm9sbExlZnQpKSxvJiZcInlcIiE9PW98fChhLnRvcD1uLnRvcC10aGlzLm9mZnNldC5wYXJlbnQudG9wLXRoaXMubWFyZ2lucy50b3ArKHRoaXMub2Zmc2V0UGFyZW50WzBdPT09dGhpcy5kb2N1bWVudFswXS5ib2R5PzA6dGhpcy5vZmZzZXRQYXJlbnRbMF0uc2Nyb2xsVG9wKSksdGhpcy5yZXZlcnRpbmc9ITAsdCh0aGlzLmhlbHBlcikuYW5pbWF0ZShhLHBhcnNlSW50KHRoaXMub3B0aW9ucy5yZXZlcnQsMTApfHw1MDAsZnVuY3Rpb24oKXtzLl9jbGVhcihlKX0pfWVsc2UgdGhpcy5fY2xlYXIoZSxpKTtyZXR1cm4hMX19LGNhbmNlbDpmdW5jdGlvbigpe2lmKHRoaXMuZHJhZ2dpbmcpe3RoaXMuX21vdXNlVXAobmV3IHQuRXZlbnQoXCJtb3VzZXVwXCIse3RhcmdldDpudWxsfSkpLFwib3JpZ2luYWxcIj09PXRoaXMub3B0aW9ucy5oZWxwZXI/KHRoaXMuY3VycmVudEl0ZW0uY3NzKHRoaXMuX3N0b3JlZENTUyksdGhpcy5fcmVtb3ZlQ2xhc3ModGhpcy5jdXJyZW50SXRlbSxcInVpLXNvcnRhYmxlLWhlbHBlclwiKSk6dGhpcy5jdXJyZW50SXRlbS5zaG93KCk7Zm9yKHZhciBlPXRoaXMuY29udGFpbmVycy5sZW5ndGgtMTtlPj0wO2UtLSl0aGlzLmNvbnRhaW5lcnNbZV0uX3RyaWdnZXIoXCJkZWFjdGl2YXRlXCIsbnVsbCx0aGlzLl91aUhhc2godGhpcykpLHRoaXMuY29udGFpbmVyc1tlXS5jb250YWluZXJDYWNoZS5vdmVyJiYodGhpcy5jb250YWluZXJzW2VdLl90cmlnZ2VyKFwib3V0XCIsbnVsbCx0aGlzLl91aUhhc2godGhpcykpLHRoaXMuY29udGFpbmVyc1tlXS5jb250YWluZXJDYWNoZS5vdmVyPTApfXJldHVybiB0aGlzLnBsYWNlaG9sZGVyJiYodGhpcy5wbGFjZWhvbGRlclswXS5wYXJlbnROb2RlJiZ0aGlzLnBsYWNlaG9sZGVyWzBdLnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQodGhpcy5wbGFjZWhvbGRlclswXSksXCJvcmlnaW5hbFwiIT09dGhpcy5vcHRpb25zLmhlbHBlciYmdGhpcy5oZWxwZXImJnRoaXMuaGVscGVyWzBdLnBhcmVudE5vZGUmJnRoaXMuaGVscGVyLnJlbW92ZSgpLHQuZXh0ZW5kKHRoaXMse2hlbHBlcjpudWxsLGRyYWdnaW5nOiExLHJldmVydGluZzohMSxfbm9GaW5hbFNvcnQ6bnVsbH0pLHRoaXMuZG9tUG9zaXRpb24ucHJldj90KHRoaXMuZG9tUG9zaXRpb24ucHJldikuYWZ0ZXIodGhpcy5jdXJyZW50SXRlbSk6dCh0aGlzLmRvbVBvc2l0aW9uLnBhcmVudCkucHJlcGVuZCh0aGlzLmN1cnJlbnRJdGVtKSksdGhpc30sc2VyaWFsaXplOmZ1bmN0aW9uKGUpe3ZhciBpPXRoaXMuX2dldEl0ZW1zQXNqUXVlcnkoZSYmZS5jb25uZWN0ZWQpLHM9W107cmV0dXJuIGU9ZXx8e30sdChpKS5lYWNoKGZ1bmN0aW9uKCl7dmFyIGk9KHQoZS5pdGVtfHx0aGlzKS5hdHRyKGUuYXR0cmlidXRlfHxcImlkXCIpfHxcIlwiKS5tYXRjaChlLmV4cHJlc3Npb258fC8oLispW1xcLT1fXSguKykvKTtpJiZzLnB1c2goKGUua2V5fHxpWzFdK1wiW11cIikrXCI9XCIrKGUua2V5JiZlLmV4cHJlc3Npb24/aVsxXTppWzJdKSl9KSwhcy5sZW5ndGgmJmUua2V5JiZzLnB1c2goZS5rZXkrXCI9XCIpLHMuam9pbihcIiZcIil9LHRvQXJyYXk6ZnVuY3Rpb24oZSl7dmFyIGk9dGhpcy5fZ2V0SXRlbXNBc2pRdWVyeShlJiZlLmNvbm5lY3RlZCkscz1bXTtyZXR1cm4gZT1lfHx7fSxpLmVhY2goZnVuY3Rpb24oKXtzLnB1c2godChlLml0ZW18fHRoaXMpLmF0dHIoZS5hdHRyaWJ1dGV8fFwiaWRcIil8fFwiXCIpfSksc30sX2ludGVyc2VjdHNXaXRoOmZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMucG9zaXRpb25BYnMubGVmdCxpPWUrdGhpcy5oZWxwZXJQcm9wb3J0aW9ucy53aWR0aCxzPXRoaXMucG9zaXRpb25BYnMudG9wLG49cyt0aGlzLmhlbHBlclByb3BvcnRpb25zLmhlaWdodCxvPXQubGVmdCxhPW8rdC53aWR0aCxyPXQudG9wLGg9cit0LmhlaWdodCxsPXRoaXMub2Zmc2V0LmNsaWNrLnRvcCxjPXRoaXMub2Zmc2V0LmNsaWNrLmxlZnQsdT1cInhcIj09PXRoaXMub3B0aW9ucy5heGlzfHxzK2w+ciYmaD5zK2wsZD1cInlcIj09PXRoaXMub3B0aW9ucy5heGlzfHxlK2M+byYmYT5lK2MscD11JiZkO3JldHVyblwicG9pbnRlclwiPT09dGhpcy5vcHRpb25zLnRvbGVyYW5jZXx8dGhpcy5vcHRpb25zLmZvcmNlUG9pbnRlckZvckNvbnRhaW5lcnN8fFwicG9pbnRlclwiIT09dGhpcy5vcHRpb25zLnRvbGVyYW5jZSYmdGhpcy5oZWxwZXJQcm9wb3J0aW9uc1t0aGlzLmZsb2F0aW5nP1wid2lkdGhcIjpcImhlaWdodFwiXT50W3RoaXMuZmxvYXRpbmc/XCJ3aWR0aFwiOlwiaGVpZ2h0XCJdP3A6ZSt0aGlzLmhlbHBlclByb3BvcnRpb25zLndpZHRoLzI+byYmYT5pLXRoaXMuaGVscGVyUHJvcG9ydGlvbnMud2lkdGgvMiYmcyt0aGlzLmhlbHBlclByb3BvcnRpb25zLmhlaWdodC8yPnImJmg+bi10aGlzLmhlbHBlclByb3BvcnRpb25zLmhlaWdodC8yfSxfaW50ZXJzZWN0c1dpdGhQb2ludGVyOmZ1bmN0aW9uKHQpe3ZhciBlLGkscz1cInhcIj09PXRoaXMub3B0aW9ucy5heGlzfHx0aGlzLl9pc092ZXJBeGlzKHRoaXMucG9zaXRpb25BYnMudG9wK3RoaXMub2Zmc2V0LmNsaWNrLnRvcCx0LnRvcCx0LmhlaWdodCksbj1cInlcIj09PXRoaXMub3B0aW9ucy5heGlzfHx0aGlzLl9pc092ZXJBeGlzKHRoaXMucG9zaXRpb25BYnMubGVmdCt0aGlzLm9mZnNldC5jbGljay5sZWZ0LHQubGVmdCx0LndpZHRoKSxvPXMmJm47cmV0dXJuIG8/KGU9dGhpcy5fZ2V0RHJhZ1ZlcnRpY2FsRGlyZWN0aW9uKCksaT10aGlzLl9nZXREcmFnSG9yaXpvbnRhbERpcmVjdGlvbigpLHRoaXMuZmxvYXRpbmc/XCJyaWdodFwiPT09aXx8XCJkb3duXCI9PT1lPzI6MTplJiYoXCJkb3duXCI9PT1lPzI6MSkpOiExfSxfaW50ZXJzZWN0c1dpdGhTaWRlczpmdW5jdGlvbih0KXt2YXIgZT10aGlzLl9pc092ZXJBeGlzKHRoaXMucG9zaXRpb25BYnMudG9wK3RoaXMub2Zmc2V0LmNsaWNrLnRvcCx0LnRvcCt0LmhlaWdodC8yLHQuaGVpZ2h0KSxpPXRoaXMuX2lzT3ZlckF4aXModGhpcy5wb3NpdGlvbkFicy5sZWZ0K3RoaXMub2Zmc2V0LmNsaWNrLmxlZnQsdC5sZWZ0K3Qud2lkdGgvMix0LndpZHRoKSxzPXRoaXMuX2dldERyYWdWZXJ0aWNhbERpcmVjdGlvbigpLG49dGhpcy5fZ2V0RHJhZ0hvcml6b250YWxEaXJlY3Rpb24oKTtyZXR1cm4gdGhpcy5mbG9hdGluZyYmbj9cInJpZ2h0XCI9PT1uJiZpfHxcImxlZnRcIj09PW4mJiFpOnMmJihcImRvd25cIj09PXMmJmV8fFwidXBcIj09PXMmJiFlKX0sX2dldERyYWdWZXJ0aWNhbERpcmVjdGlvbjpmdW5jdGlvbigpe3ZhciB0PXRoaXMucG9zaXRpb25BYnMudG9wLXRoaXMubGFzdFBvc2l0aW9uQWJzLnRvcDtyZXR1cm4gMCE9PXQmJih0PjA/XCJkb3duXCI6XCJ1cFwiKX0sX2dldERyYWdIb3Jpem9udGFsRGlyZWN0aW9uOmZ1bmN0aW9uKCl7dmFyIHQ9dGhpcy5wb3NpdGlvbkFicy5sZWZ0LXRoaXMubGFzdFBvc2l0aW9uQWJzLmxlZnQ7cmV0dXJuIDAhPT10JiYodD4wP1wicmlnaHRcIjpcImxlZnRcIil9LHJlZnJlc2g6ZnVuY3Rpb24odCl7cmV0dXJuIHRoaXMuX3JlZnJlc2hJdGVtcyh0KSx0aGlzLl9zZXRIYW5kbGVDbGFzc05hbWUoKSx0aGlzLnJlZnJlc2hQb3NpdGlvbnMoKSx0aGlzfSxfY29ubmVjdFdpdGg6ZnVuY3Rpb24oKXt2YXIgdD10aGlzLm9wdGlvbnM7cmV0dXJuIHQuY29ubmVjdFdpdGguY29uc3RydWN0b3I9PT1TdHJpbmc/W3QuY29ubmVjdFdpdGhdOnQuY29ubmVjdFdpdGh9LF9nZXRJdGVtc0FzalF1ZXJ5OmZ1bmN0aW9uKGUpe2Z1bmN0aW9uIGkoKXtyLnB1c2godGhpcyl9dmFyIHMsbixvLGEscj1bXSxoPVtdLGw9dGhpcy5fY29ubmVjdFdpdGgoKTtpZihsJiZlKWZvcihzPWwubGVuZ3RoLTE7cz49MDtzLS0pZm9yKG89dChsW3NdLHRoaXMuZG9jdW1lbnRbMF0pLG49by5sZW5ndGgtMTtuPj0wO24tLSlhPXQuZGF0YShvW25dLHRoaXMud2lkZ2V0RnVsbE5hbWUpLGEmJmEhPT10aGlzJiYhYS5vcHRpb25zLmRpc2FibGVkJiZoLnB1c2goW3QuaXNGdW5jdGlvbihhLm9wdGlvbnMuaXRlbXMpP2Eub3B0aW9ucy5pdGVtcy5jYWxsKGEuZWxlbWVudCk6dChhLm9wdGlvbnMuaXRlbXMsYS5lbGVtZW50KS5ub3QoXCIudWktc29ydGFibGUtaGVscGVyXCIpLm5vdChcIi51aS1zb3J0YWJsZS1wbGFjZWhvbGRlclwiKSxhXSk7Zm9yKGgucHVzaChbdC5pc0Z1bmN0aW9uKHRoaXMub3B0aW9ucy5pdGVtcyk/dGhpcy5vcHRpb25zLml0ZW1zLmNhbGwodGhpcy5lbGVtZW50LG51bGwse29wdGlvbnM6dGhpcy5vcHRpb25zLGl0ZW06dGhpcy5jdXJyZW50SXRlbX0pOnQodGhpcy5vcHRpb25zLml0ZW1zLHRoaXMuZWxlbWVudCkubm90KFwiLnVpLXNvcnRhYmxlLWhlbHBlclwiKS5ub3QoXCIudWktc29ydGFibGUtcGxhY2Vob2xkZXJcIiksdGhpc10pLHM9aC5sZW5ndGgtMTtzPj0wO3MtLSloW3NdWzBdLmVhY2goaSk7cmV0dXJuIHQocil9LF9yZW1vdmVDdXJyZW50c0Zyb21JdGVtczpmdW5jdGlvbigpe3ZhciBlPXRoaXMuY3VycmVudEl0ZW0uZmluZChcIjpkYXRhKFwiK3RoaXMud2lkZ2V0TmFtZStcIi1pdGVtKVwiKTt0aGlzLml0ZW1zPXQuZ3JlcCh0aGlzLml0ZW1zLGZ1bmN0aW9uKHQpe2Zvcih2YXIgaT0wO2UubGVuZ3RoPmk7aSsrKWlmKGVbaV09PT10Lml0ZW1bMF0pcmV0dXJuITE7cmV0dXJuITB9KX0sX3JlZnJlc2hJdGVtczpmdW5jdGlvbihlKXt0aGlzLml0ZW1zPVtdLHRoaXMuY29udGFpbmVycz1bdGhpc107dmFyIGkscyxuLG8sYSxyLGgsbCxjPXRoaXMuaXRlbXMsdT1bW3QuaXNGdW5jdGlvbih0aGlzLm9wdGlvbnMuaXRlbXMpP3RoaXMub3B0aW9ucy5pdGVtcy5jYWxsKHRoaXMuZWxlbWVudFswXSxlLHtpdGVtOnRoaXMuY3VycmVudEl0ZW19KTp0KHRoaXMub3B0aW9ucy5pdGVtcyx0aGlzLmVsZW1lbnQpLHRoaXNdXSxkPXRoaXMuX2Nvbm5lY3RXaXRoKCk7aWYoZCYmdGhpcy5yZWFkeSlmb3IoaT1kLmxlbmd0aC0xO2k+PTA7aS0tKWZvcihuPXQoZFtpXSx0aGlzLmRvY3VtZW50WzBdKSxzPW4ubGVuZ3RoLTE7cz49MDtzLS0pbz10LmRhdGEobltzXSx0aGlzLndpZGdldEZ1bGxOYW1lKSxvJiZvIT09dGhpcyYmIW8ub3B0aW9ucy5kaXNhYmxlZCYmKHUucHVzaChbdC5pc0Z1bmN0aW9uKG8ub3B0aW9ucy5pdGVtcyk/by5vcHRpb25zLml0ZW1zLmNhbGwoby5lbGVtZW50WzBdLGUse2l0ZW06dGhpcy5jdXJyZW50SXRlbX0pOnQoby5vcHRpb25zLml0ZW1zLG8uZWxlbWVudCksb10pLHRoaXMuY29udGFpbmVycy5wdXNoKG8pKTtmb3IoaT11Lmxlbmd0aC0xO2k+PTA7aS0tKWZvcihhPXVbaV1bMV0scj11W2ldWzBdLHM9MCxsPXIubGVuZ3RoO2w+cztzKyspaD10KHJbc10pLGguZGF0YSh0aGlzLndpZGdldE5hbWUrXCItaXRlbVwiLGEpLGMucHVzaCh7aXRlbTpoLGluc3RhbmNlOmEsd2lkdGg6MCxoZWlnaHQ6MCxsZWZ0OjAsdG9wOjB9KX0scmVmcmVzaFBvc2l0aW9uczpmdW5jdGlvbihlKXt0aGlzLmZsb2F0aW5nPXRoaXMuaXRlbXMubGVuZ3RoP1wieFwiPT09dGhpcy5vcHRpb25zLmF4aXN8fHRoaXMuX2lzRmxvYXRpbmcodGhpcy5pdGVtc1swXS5pdGVtKTohMSx0aGlzLm9mZnNldFBhcmVudCYmdGhpcy5oZWxwZXImJih0aGlzLm9mZnNldC5wYXJlbnQ9dGhpcy5fZ2V0UGFyZW50T2Zmc2V0KCkpO3ZhciBpLHMsbixvO2ZvcihpPXRoaXMuaXRlbXMubGVuZ3RoLTE7aT49MDtpLS0pcz10aGlzLml0ZW1zW2ldLHMuaW5zdGFuY2UhPT10aGlzLmN1cnJlbnRDb250YWluZXImJnRoaXMuY3VycmVudENvbnRhaW5lciYmcy5pdGVtWzBdIT09dGhpcy5jdXJyZW50SXRlbVswXXx8KG49dGhpcy5vcHRpb25zLnRvbGVyYW5jZUVsZW1lbnQ/dCh0aGlzLm9wdGlvbnMudG9sZXJhbmNlRWxlbWVudCxzLml0ZW0pOnMuaXRlbSxlfHwocy53aWR0aD1uLm91dGVyV2lkdGgoKSxzLmhlaWdodD1uLm91dGVySGVpZ2h0KCkpLG89bi5vZmZzZXQoKSxzLmxlZnQ9by5sZWZ0LHMudG9wPW8udG9wKTtpZih0aGlzLm9wdGlvbnMuY3VzdG9tJiZ0aGlzLm9wdGlvbnMuY3VzdG9tLnJlZnJlc2hDb250YWluZXJzKXRoaXMub3B0aW9ucy5jdXN0b20ucmVmcmVzaENvbnRhaW5lcnMuY2FsbCh0aGlzKTtlbHNlIGZvcihpPXRoaXMuY29udGFpbmVycy5sZW5ndGgtMTtpPj0wO2ktLSlvPXRoaXMuY29udGFpbmVyc1tpXS5lbGVtZW50Lm9mZnNldCgpLHRoaXMuY29udGFpbmVyc1tpXS5jb250YWluZXJDYWNoZS5sZWZ0PW8ubGVmdCx0aGlzLmNvbnRhaW5lcnNbaV0uY29udGFpbmVyQ2FjaGUudG9wPW8udG9wLHRoaXMuY29udGFpbmVyc1tpXS5jb250YWluZXJDYWNoZS53aWR0aD10aGlzLmNvbnRhaW5lcnNbaV0uZWxlbWVudC5vdXRlcldpZHRoKCksdGhpcy5jb250YWluZXJzW2ldLmNvbnRhaW5lckNhY2hlLmhlaWdodD10aGlzLmNvbnRhaW5lcnNbaV0uZWxlbWVudC5vdXRlckhlaWdodCgpO3JldHVybiB0aGlzfSxfY3JlYXRlUGxhY2Vob2xkZXI6ZnVuY3Rpb24oZSl7ZT1lfHx0aGlzO3ZhciBpLHM9ZS5vcHRpb25zO3MucGxhY2Vob2xkZXImJnMucGxhY2Vob2xkZXIuY29uc3RydWN0b3IhPT1TdHJpbmd8fChpPXMucGxhY2Vob2xkZXIscy5wbGFjZWhvbGRlcj17ZWxlbWVudDpmdW5jdGlvbigpe3ZhciBzPWUuY3VycmVudEl0ZW1bMF0ubm9kZU5hbWUudG9Mb3dlckNhc2UoKSxuPXQoXCI8XCIrcytcIj5cIixlLmRvY3VtZW50WzBdKTtyZXR1cm4gZS5fYWRkQ2xhc3MobixcInVpLXNvcnRhYmxlLXBsYWNlaG9sZGVyXCIsaXx8ZS5jdXJyZW50SXRlbVswXS5jbGFzc05hbWUpLl9yZW1vdmVDbGFzcyhuLFwidWktc29ydGFibGUtaGVscGVyXCIpLFwidGJvZHlcIj09PXM/ZS5fY3JlYXRlVHJQbGFjZWhvbGRlcihlLmN1cnJlbnRJdGVtLmZpbmQoXCJ0clwiKS5lcSgwKSx0KFwiPHRyPlwiLGUuZG9jdW1lbnRbMF0pLmFwcGVuZFRvKG4pKTpcInRyXCI9PT1zP2UuX2NyZWF0ZVRyUGxhY2Vob2xkZXIoZS5jdXJyZW50SXRlbSxuKTpcImltZ1wiPT09cyYmbi5hdHRyKFwic3JjXCIsZS5jdXJyZW50SXRlbS5hdHRyKFwic3JjXCIpKSxpfHxuLmNzcyhcInZpc2liaWxpdHlcIixcImhpZGRlblwiKSxufSx1cGRhdGU6ZnVuY3Rpb24odCxuKXsoIWl8fHMuZm9yY2VQbGFjZWhvbGRlclNpemUpJiYobi5oZWlnaHQoKXx8bi5oZWlnaHQoZS5jdXJyZW50SXRlbS5pbm5lckhlaWdodCgpLXBhcnNlSW50KGUuY3VycmVudEl0ZW0uY3NzKFwicGFkZGluZ1RvcFwiKXx8MCwxMCktcGFyc2VJbnQoZS5jdXJyZW50SXRlbS5jc3MoXCJwYWRkaW5nQm90dG9tXCIpfHwwLDEwKSksbi53aWR0aCgpfHxuLndpZHRoKGUuY3VycmVudEl0ZW0uaW5uZXJXaWR0aCgpLXBhcnNlSW50KGUuY3VycmVudEl0ZW0uY3NzKFwicGFkZGluZ0xlZnRcIil8fDAsMTApLXBhcnNlSW50KGUuY3VycmVudEl0ZW0uY3NzKFwicGFkZGluZ1JpZ2h0XCIpfHwwLDEwKSkpfX0pLGUucGxhY2Vob2xkZXI9dChzLnBsYWNlaG9sZGVyLmVsZW1lbnQuY2FsbChlLmVsZW1lbnQsZS5jdXJyZW50SXRlbSkpLGUuY3VycmVudEl0ZW0uYWZ0ZXIoZS5wbGFjZWhvbGRlcikscy5wbGFjZWhvbGRlci51cGRhdGUoZSxlLnBsYWNlaG9sZGVyKX0sX2NyZWF0ZVRyUGxhY2Vob2xkZXI6ZnVuY3Rpb24oZSxpKXt2YXIgcz10aGlzO2UuY2hpbGRyZW4oKS5lYWNoKGZ1bmN0aW9uKCl7dChcIjx0ZD4mIzE2MDs8L3RkPlwiLHMuZG9jdW1lbnRbMF0pLmF0dHIoXCJjb2xzcGFuXCIsdCh0aGlzKS5hdHRyKFwiY29sc3BhblwiKXx8MSkuYXBwZW5kVG8oaSl9KX0sX2NvbnRhY3RDb250YWluZXJzOmZ1bmN0aW9uKGUpe3ZhciBpLHMsbixvLGEscixoLGwsYyx1LGQ9bnVsbCxwPW51bGw7Zm9yKGk9dGhpcy5jb250YWluZXJzLmxlbmd0aC0xO2k+PTA7aS0tKWlmKCF0LmNvbnRhaW5zKHRoaXMuY3VycmVudEl0ZW1bMF0sdGhpcy5jb250YWluZXJzW2ldLmVsZW1lbnRbMF0pKWlmKHRoaXMuX2ludGVyc2VjdHNXaXRoKHRoaXMuY29udGFpbmVyc1tpXS5jb250YWluZXJDYWNoZSkpe2lmKGQmJnQuY29udGFpbnModGhpcy5jb250YWluZXJzW2ldLmVsZW1lbnRbMF0sZC5lbGVtZW50WzBdKSljb250aW51ZTtkPXRoaXMuY29udGFpbmVyc1tpXSxwPWl9ZWxzZSB0aGlzLmNvbnRhaW5lcnNbaV0uY29udGFpbmVyQ2FjaGUub3ZlciYmKHRoaXMuY29udGFpbmVyc1tpXS5fdHJpZ2dlcihcIm91dFwiLGUsdGhpcy5fdWlIYXNoKHRoaXMpKSx0aGlzLmNvbnRhaW5lcnNbaV0uY29udGFpbmVyQ2FjaGUub3Zlcj0wKTtpZihkKWlmKDE9PT10aGlzLmNvbnRhaW5lcnMubGVuZ3RoKXRoaXMuY29udGFpbmVyc1twXS5jb250YWluZXJDYWNoZS5vdmVyfHwodGhpcy5jb250YWluZXJzW3BdLl90cmlnZ2VyKFwib3ZlclwiLGUsdGhpcy5fdWlIYXNoKHRoaXMpKSx0aGlzLmNvbnRhaW5lcnNbcF0uY29udGFpbmVyQ2FjaGUub3Zlcj0xKTtlbHNle2ZvcihuPTFlNCxvPW51bGwsYz1kLmZsb2F0aW5nfHx0aGlzLl9pc0Zsb2F0aW5nKHRoaXMuY3VycmVudEl0ZW0pLGE9Yz9cImxlZnRcIjpcInRvcFwiLHI9Yz9cIndpZHRoXCI6XCJoZWlnaHRcIix1PWM/XCJwYWdlWFwiOlwicGFnZVlcIixzPXRoaXMuaXRlbXMubGVuZ3RoLTE7cz49MDtzLS0pdC5jb250YWlucyh0aGlzLmNvbnRhaW5lcnNbcF0uZWxlbWVudFswXSx0aGlzLml0ZW1zW3NdLml0ZW1bMF0pJiZ0aGlzLml0ZW1zW3NdLml0ZW1bMF0hPT10aGlzLmN1cnJlbnRJdGVtWzBdJiYoaD10aGlzLml0ZW1zW3NdLml0ZW0ub2Zmc2V0KClbYV0sbD0hMSxlW3VdLWg+dGhpcy5pdGVtc1tzXVtyXS8yJiYobD0hMCksbj5NYXRoLmFicyhlW3VdLWgpJiYobj1NYXRoLmFicyhlW3VdLWgpLG89dGhpcy5pdGVtc1tzXSx0aGlzLmRpcmVjdGlvbj1sP1widXBcIjpcImRvd25cIikpO2lmKCFvJiYhdGhpcy5vcHRpb25zLmRyb3BPbkVtcHR5KXJldHVybjtpZih0aGlzLmN1cnJlbnRDb250YWluZXI9PT10aGlzLmNvbnRhaW5lcnNbcF0pcmV0dXJuIHRoaXMuY3VycmVudENvbnRhaW5lci5jb250YWluZXJDYWNoZS5vdmVyfHwodGhpcy5jb250YWluZXJzW3BdLl90cmlnZ2VyKFwib3ZlclwiLGUsdGhpcy5fdWlIYXNoKCkpLHRoaXMuY3VycmVudENvbnRhaW5lci5jb250YWluZXJDYWNoZS5vdmVyPTEpLHZvaWQgMDtvP3RoaXMuX3JlYXJyYW5nZShlLG8sbnVsbCwhMCk6dGhpcy5fcmVhcnJhbmdlKGUsbnVsbCx0aGlzLmNvbnRhaW5lcnNbcF0uZWxlbWVudCwhMCksdGhpcy5fdHJpZ2dlcihcImNoYW5nZVwiLGUsdGhpcy5fdWlIYXNoKCkpLHRoaXMuY29udGFpbmVyc1twXS5fdHJpZ2dlcihcImNoYW5nZVwiLGUsdGhpcy5fdWlIYXNoKHRoaXMpKSx0aGlzLmN1cnJlbnRDb250YWluZXI9dGhpcy5jb250YWluZXJzW3BdLHRoaXMub3B0aW9ucy5wbGFjZWhvbGRlci51cGRhdGUodGhpcy5jdXJyZW50Q29udGFpbmVyLHRoaXMucGxhY2Vob2xkZXIpLHRoaXMuY29udGFpbmVyc1twXS5fdHJpZ2dlcihcIm92ZXJcIixlLHRoaXMuX3VpSGFzaCh0aGlzKSksdGhpcy5jb250YWluZXJzW3BdLmNvbnRhaW5lckNhY2hlLm92ZXI9MX19LF9jcmVhdGVIZWxwZXI6ZnVuY3Rpb24oZSl7dmFyIGk9dGhpcy5vcHRpb25zLHM9dC5pc0Z1bmN0aW9uKGkuaGVscGVyKT90KGkuaGVscGVyLmFwcGx5KHRoaXMuZWxlbWVudFswXSxbZSx0aGlzLmN1cnJlbnRJdGVtXSkpOlwiY2xvbmVcIj09PWkuaGVscGVyP3RoaXMuY3VycmVudEl0ZW0uY2xvbmUoKTp0aGlzLmN1cnJlbnRJdGVtO3JldHVybiBzLnBhcmVudHMoXCJib2R5XCIpLmxlbmd0aHx8dChcInBhcmVudFwiIT09aS5hcHBlbmRUbz9pLmFwcGVuZFRvOnRoaXMuY3VycmVudEl0ZW1bMF0ucGFyZW50Tm9kZSlbMF0uYXBwZW5kQ2hpbGQoc1swXSksc1swXT09PXRoaXMuY3VycmVudEl0ZW1bMF0mJih0aGlzLl9zdG9yZWRDU1M9e3dpZHRoOnRoaXMuY3VycmVudEl0ZW1bMF0uc3R5bGUud2lkdGgsaGVpZ2h0OnRoaXMuY3VycmVudEl0ZW1bMF0uc3R5bGUuaGVpZ2h0LHBvc2l0aW9uOnRoaXMuY3VycmVudEl0ZW0uY3NzKFwicG9zaXRpb25cIiksdG9wOnRoaXMuY3VycmVudEl0ZW0uY3NzKFwidG9wXCIpLGxlZnQ6dGhpcy5jdXJyZW50SXRlbS5jc3MoXCJsZWZ0XCIpfSksKCFzWzBdLnN0eWxlLndpZHRofHxpLmZvcmNlSGVscGVyU2l6ZSkmJnMud2lkdGgodGhpcy5jdXJyZW50SXRlbS53aWR0aCgpKSwoIXNbMF0uc3R5bGUuaGVpZ2h0fHxpLmZvcmNlSGVscGVyU2l6ZSkmJnMuaGVpZ2h0KHRoaXMuY3VycmVudEl0ZW0uaGVpZ2h0KCkpLHN9LF9hZGp1c3RPZmZzZXRGcm9tSGVscGVyOmZ1bmN0aW9uKGUpe1wic3RyaW5nXCI9PXR5cGVvZiBlJiYoZT1lLnNwbGl0KFwiIFwiKSksdC5pc0FycmF5KGUpJiYoZT17bGVmdDorZVswXSx0b3A6K2VbMV18fDB9KSxcImxlZnRcImluIGUmJih0aGlzLm9mZnNldC5jbGljay5sZWZ0PWUubGVmdCt0aGlzLm1hcmdpbnMubGVmdCksXCJyaWdodFwiaW4gZSYmKHRoaXMub2Zmc2V0LmNsaWNrLmxlZnQ9dGhpcy5oZWxwZXJQcm9wb3J0aW9ucy53aWR0aC1lLnJpZ2h0K3RoaXMubWFyZ2lucy5sZWZ0KSxcInRvcFwiaW4gZSYmKHRoaXMub2Zmc2V0LmNsaWNrLnRvcD1lLnRvcCt0aGlzLm1hcmdpbnMudG9wKSxcImJvdHRvbVwiaW4gZSYmKHRoaXMub2Zmc2V0LmNsaWNrLnRvcD10aGlzLmhlbHBlclByb3BvcnRpb25zLmhlaWdodC1lLmJvdHRvbSt0aGlzLm1hcmdpbnMudG9wKX0sX2dldFBhcmVudE9mZnNldDpmdW5jdGlvbigpe3RoaXMub2Zmc2V0UGFyZW50PXRoaXMuaGVscGVyLm9mZnNldFBhcmVudCgpO3ZhciBlPXRoaXMub2Zmc2V0UGFyZW50Lm9mZnNldCgpO3JldHVyblwiYWJzb2x1dGVcIj09PXRoaXMuY3NzUG9zaXRpb24mJnRoaXMuc2Nyb2xsUGFyZW50WzBdIT09dGhpcy5kb2N1bWVudFswXSYmdC5jb250YWlucyh0aGlzLnNjcm9sbFBhcmVudFswXSx0aGlzLm9mZnNldFBhcmVudFswXSkmJihlLmxlZnQrPXRoaXMuc2Nyb2xsUGFyZW50LnNjcm9sbExlZnQoKSxlLnRvcCs9dGhpcy5zY3JvbGxQYXJlbnQuc2Nyb2xsVG9wKCkpLCh0aGlzLm9mZnNldFBhcmVudFswXT09PXRoaXMuZG9jdW1lbnRbMF0uYm9keXx8dGhpcy5vZmZzZXRQYXJlbnRbMF0udGFnTmFtZSYmXCJodG1sXCI9PT10aGlzLm9mZnNldFBhcmVudFswXS50YWdOYW1lLnRvTG93ZXJDYXNlKCkmJnQudWkuaWUpJiYoZT17dG9wOjAsbGVmdDowfSkse3RvcDplLnRvcCsocGFyc2VJbnQodGhpcy5vZmZzZXRQYXJlbnQuY3NzKFwiYm9yZGVyVG9wV2lkdGhcIiksMTApfHwwKSxsZWZ0OmUubGVmdCsocGFyc2VJbnQodGhpcy5vZmZzZXRQYXJlbnQuY3NzKFwiYm9yZGVyTGVmdFdpZHRoXCIpLDEwKXx8MCl9fSxfZ2V0UmVsYXRpdmVPZmZzZXQ6ZnVuY3Rpb24oKXtpZihcInJlbGF0aXZlXCI9PT10aGlzLmNzc1Bvc2l0aW9uKXt2YXIgdD10aGlzLmN1cnJlbnRJdGVtLnBvc2l0aW9uKCk7cmV0dXJue3RvcDp0LnRvcC0ocGFyc2VJbnQodGhpcy5oZWxwZXIuY3NzKFwidG9wXCIpLDEwKXx8MCkrdGhpcy5zY3JvbGxQYXJlbnQuc2Nyb2xsVG9wKCksbGVmdDp0LmxlZnQtKHBhcnNlSW50KHRoaXMuaGVscGVyLmNzcyhcImxlZnRcIiksMTApfHwwKSt0aGlzLnNjcm9sbFBhcmVudC5zY3JvbGxMZWZ0KCl9fXJldHVybnt0b3A6MCxsZWZ0OjB9fSxfY2FjaGVNYXJnaW5zOmZ1bmN0aW9uKCl7dGhpcy5tYXJnaW5zPXtsZWZ0OnBhcnNlSW50KHRoaXMuY3VycmVudEl0ZW0uY3NzKFwibWFyZ2luTGVmdFwiKSwxMCl8fDAsdG9wOnBhcnNlSW50KHRoaXMuY3VycmVudEl0ZW0uY3NzKFwibWFyZ2luVG9wXCIpLDEwKXx8MH19LF9jYWNoZUhlbHBlclByb3BvcnRpb25zOmZ1bmN0aW9uKCl7dGhpcy5oZWxwZXJQcm9wb3J0aW9ucz17d2lkdGg6dGhpcy5oZWxwZXIub3V0ZXJXaWR0aCgpLGhlaWdodDp0aGlzLmhlbHBlci5vdXRlckhlaWdodCgpfX0sX3NldENvbnRhaW5tZW50OmZ1bmN0aW9uKCl7dmFyIGUsaSxzLG49dGhpcy5vcHRpb25zO1wicGFyZW50XCI9PT1uLmNvbnRhaW5tZW50JiYobi5jb250YWlubWVudD10aGlzLmhlbHBlclswXS5wYXJlbnROb2RlKSwoXCJkb2N1bWVudFwiPT09bi5jb250YWlubWVudHx8XCJ3aW5kb3dcIj09PW4uY29udGFpbm1lbnQpJiYodGhpcy5jb250YWlubWVudD1bMC10aGlzLm9mZnNldC5yZWxhdGl2ZS5sZWZ0LXRoaXMub2Zmc2V0LnBhcmVudC5sZWZ0LDAtdGhpcy5vZmZzZXQucmVsYXRpdmUudG9wLXRoaXMub2Zmc2V0LnBhcmVudC50b3AsXCJkb2N1bWVudFwiPT09bi5jb250YWlubWVudD90aGlzLmRvY3VtZW50LndpZHRoKCk6dGhpcy53aW5kb3cud2lkdGgoKS10aGlzLmhlbHBlclByb3BvcnRpb25zLndpZHRoLXRoaXMubWFyZ2lucy5sZWZ0LChcImRvY3VtZW50XCI9PT1uLmNvbnRhaW5tZW50P3RoaXMuZG9jdW1lbnQuaGVpZ2h0KCl8fGRvY3VtZW50LmJvZHkucGFyZW50Tm9kZS5zY3JvbGxIZWlnaHQ6dGhpcy53aW5kb3cuaGVpZ2h0KCl8fHRoaXMuZG9jdW1lbnRbMF0uYm9keS5wYXJlbnROb2RlLnNjcm9sbEhlaWdodCktdGhpcy5oZWxwZXJQcm9wb3J0aW9ucy5oZWlnaHQtdGhpcy5tYXJnaW5zLnRvcF0pLC9eKGRvY3VtZW50fHdpbmRvd3xwYXJlbnQpJC8udGVzdChuLmNvbnRhaW5tZW50KXx8KGU9dChuLmNvbnRhaW5tZW50KVswXSxpPXQobi5jb250YWlubWVudCkub2Zmc2V0KCkscz1cImhpZGRlblwiIT09dChlKS5jc3MoXCJvdmVyZmxvd1wiKSx0aGlzLmNvbnRhaW5tZW50PVtpLmxlZnQrKHBhcnNlSW50KHQoZSkuY3NzKFwiYm9yZGVyTGVmdFdpZHRoXCIpLDEwKXx8MCkrKHBhcnNlSW50KHQoZSkuY3NzKFwicGFkZGluZ0xlZnRcIiksMTApfHwwKS10aGlzLm1hcmdpbnMubGVmdCxpLnRvcCsocGFyc2VJbnQodChlKS5jc3MoXCJib3JkZXJUb3BXaWR0aFwiKSwxMCl8fDApKyhwYXJzZUludCh0KGUpLmNzcyhcInBhZGRpbmdUb3BcIiksMTApfHwwKS10aGlzLm1hcmdpbnMudG9wLGkubGVmdCsocz9NYXRoLm1heChlLnNjcm9sbFdpZHRoLGUub2Zmc2V0V2lkdGgpOmUub2Zmc2V0V2lkdGgpLShwYXJzZUludCh0KGUpLmNzcyhcImJvcmRlckxlZnRXaWR0aFwiKSwxMCl8fDApLShwYXJzZUludCh0KGUpLmNzcyhcInBhZGRpbmdSaWdodFwiKSwxMCl8fDApLXRoaXMuaGVscGVyUHJvcG9ydGlvbnMud2lkdGgtdGhpcy5tYXJnaW5zLmxlZnQsaS50b3ArKHM/TWF0aC5tYXgoZS5zY3JvbGxIZWlnaHQsZS5vZmZzZXRIZWlnaHQpOmUub2Zmc2V0SGVpZ2h0KS0ocGFyc2VJbnQodChlKS5jc3MoXCJib3JkZXJUb3BXaWR0aFwiKSwxMCl8fDApLShwYXJzZUludCh0KGUpLmNzcyhcInBhZGRpbmdCb3R0b21cIiksMTApfHwwKS10aGlzLmhlbHBlclByb3BvcnRpb25zLmhlaWdodC10aGlzLm1hcmdpbnMudG9wXSl9LF9jb252ZXJ0UG9zaXRpb25UbzpmdW5jdGlvbihlLGkpe2l8fChpPXRoaXMucG9zaXRpb24pO3ZhciBzPVwiYWJzb2x1dGVcIj09PWU/MTotMSxuPVwiYWJzb2x1dGVcIiE9PXRoaXMuY3NzUG9zaXRpb258fHRoaXMuc2Nyb2xsUGFyZW50WzBdIT09dGhpcy5kb2N1bWVudFswXSYmdC5jb250YWlucyh0aGlzLnNjcm9sbFBhcmVudFswXSx0aGlzLm9mZnNldFBhcmVudFswXSk/dGhpcy5zY3JvbGxQYXJlbnQ6dGhpcy5vZmZzZXRQYXJlbnQsbz0vKGh0bWx8Ym9keSkvaS50ZXN0KG5bMF0udGFnTmFtZSk7cmV0dXJue3RvcDppLnRvcCt0aGlzLm9mZnNldC5yZWxhdGl2ZS50b3Aqcyt0aGlzLm9mZnNldC5wYXJlbnQudG9wKnMtKFwiZml4ZWRcIj09PXRoaXMuY3NzUG9zaXRpb24/LXRoaXMuc2Nyb2xsUGFyZW50LnNjcm9sbFRvcCgpOm8/MDpuLnNjcm9sbFRvcCgpKSpzLGxlZnQ6aS5sZWZ0K3RoaXMub2Zmc2V0LnJlbGF0aXZlLmxlZnQqcyt0aGlzLm9mZnNldC5wYXJlbnQubGVmdCpzLShcImZpeGVkXCI9PT10aGlzLmNzc1Bvc2l0aW9uPy10aGlzLnNjcm9sbFBhcmVudC5zY3JvbGxMZWZ0KCk6bz8wOm4uc2Nyb2xsTGVmdCgpKSpzfX0sX2dlbmVyYXRlUG9zaXRpb246ZnVuY3Rpb24oZSl7dmFyIGkscyxuPXRoaXMub3B0aW9ucyxvPWUucGFnZVgsYT1lLnBhZ2VZLHI9XCJhYnNvbHV0ZVwiIT09dGhpcy5jc3NQb3NpdGlvbnx8dGhpcy5zY3JvbGxQYXJlbnRbMF0hPT10aGlzLmRvY3VtZW50WzBdJiZ0LmNvbnRhaW5zKHRoaXMuc2Nyb2xsUGFyZW50WzBdLHRoaXMub2Zmc2V0UGFyZW50WzBdKT90aGlzLnNjcm9sbFBhcmVudDp0aGlzLm9mZnNldFBhcmVudCxoPS8oaHRtbHxib2R5KS9pLnRlc3QoclswXS50YWdOYW1lKTtyZXR1cm5cInJlbGF0aXZlXCIhPT10aGlzLmNzc1Bvc2l0aW9ufHx0aGlzLnNjcm9sbFBhcmVudFswXSE9PXRoaXMuZG9jdW1lbnRbMF0mJnRoaXMuc2Nyb2xsUGFyZW50WzBdIT09dGhpcy5vZmZzZXRQYXJlbnRbMF18fCh0aGlzLm9mZnNldC5yZWxhdGl2ZT10aGlzLl9nZXRSZWxhdGl2ZU9mZnNldCgpKSx0aGlzLm9yaWdpbmFsUG9zaXRpb24mJih0aGlzLmNvbnRhaW5tZW50JiYoZS5wYWdlWC10aGlzLm9mZnNldC5jbGljay5sZWZ0PHRoaXMuY29udGFpbm1lbnRbMF0mJihvPXRoaXMuY29udGFpbm1lbnRbMF0rdGhpcy5vZmZzZXQuY2xpY2subGVmdCksZS5wYWdlWS10aGlzLm9mZnNldC5jbGljay50b3A8dGhpcy5jb250YWlubWVudFsxXSYmKGE9dGhpcy5jb250YWlubWVudFsxXSt0aGlzLm9mZnNldC5jbGljay50b3ApLGUucGFnZVgtdGhpcy5vZmZzZXQuY2xpY2subGVmdD50aGlzLmNvbnRhaW5tZW50WzJdJiYobz10aGlzLmNvbnRhaW5tZW50WzJdK3RoaXMub2Zmc2V0LmNsaWNrLmxlZnQpLGUucGFnZVktdGhpcy5vZmZzZXQuY2xpY2sudG9wPnRoaXMuY29udGFpbm1lbnRbM10mJihhPXRoaXMuY29udGFpbm1lbnRbM10rdGhpcy5vZmZzZXQuY2xpY2sudG9wKSksbi5ncmlkJiYoaT10aGlzLm9yaWdpbmFsUGFnZVkrTWF0aC5yb3VuZCgoYS10aGlzLm9yaWdpbmFsUGFnZVkpL24uZ3JpZFsxXSkqbi5ncmlkWzFdLGE9dGhpcy5jb250YWlubWVudD9pLXRoaXMub2Zmc2V0LmNsaWNrLnRvcD49dGhpcy5jb250YWlubWVudFsxXSYmaS10aGlzLm9mZnNldC5jbGljay50b3A8PXRoaXMuY29udGFpbm1lbnRbM10/aTppLXRoaXMub2Zmc2V0LmNsaWNrLnRvcD49dGhpcy5jb250YWlubWVudFsxXT9pLW4uZ3JpZFsxXTppK24uZ3JpZFsxXTppLHM9dGhpcy5vcmlnaW5hbFBhZ2VYK01hdGgucm91bmQoKG8tdGhpcy5vcmlnaW5hbFBhZ2VYKS9uLmdyaWRbMF0pKm4uZ3JpZFswXSxvPXRoaXMuY29udGFpbm1lbnQ/cy10aGlzLm9mZnNldC5jbGljay5sZWZ0Pj10aGlzLmNvbnRhaW5tZW50WzBdJiZzLXRoaXMub2Zmc2V0LmNsaWNrLmxlZnQ8PXRoaXMuY29udGFpbm1lbnRbMl0/czpzLXRoaXMub2Zmc2V0LmNsaWNrLmxlZnQ+PXRoaXMuY29udGFpbm1lbnRbMF0/cy1uLmdyaWRbMF06cytuLmdyaWRbMF06cykpLHt0b3A6YS10aGlzLm9mZnNldC5jbGljay50b3AtdGhpcy5vZmZzZXQucmVsYXRpdmUudG9wLXRoaXMub2Zmc2V0LnBhcmVudC50b3ArKFwiZml4ZWRcIj09PXRoaXMuY3NzUG9zaXRpb24/LXRoaXMuc2Nyb2xsUGFyZW50LnNjcm9sbFRvcCgpOmg/MDpyLnNjcm9sbFRvcCgpKSxsZWZ0Om8tdGhpcy5vZmZzZXQuY2xpY2subGVmdC10aGlzLm9mZnNldC5yZWxhdGl2ZS5sZWZ0LXRoaXMub2Zmc2V0LnBhcmVudC5sZWZ0KyhcImZpeGVkXCI9PT10aGlzLmNzc1Bvc2l0aW9uPy10aGlzLnNjcm9sbFBhcmVudC5zY3JvbGxMZWZ0KCk6aD8wOnIuc2Nyb2xsTGVmdCgpKX19LF9yZWFycmFuZ2U6ZnVuY3Rpb24odCxlLGkscyl7aT9pWzBdLmFwcGVuZENoaWxkKHRoaXMucGxhY2Vob2xkZXJbMF0pOmUuaXRlbVswXS5wYXJlbnROb2RlLmluc2VydEJlZm9yZSh0aGlzLnBsYWNlaG9sZGVyWzBdLFwiZG93blwiPT09dGhpcy5kaXJlY3Rpb24/ZS5pdGVtWzBdOmUuaXRlbVswXS5uZXh0U2libGluZyksdGhpcy5jb3VudGVyPXRoaXMuY291bnRlcj8rK3RoaXMuY291bnRlcjoxO3ZhciBuPXRoaXMuY291bnRlcjtcbnRoaXMuX2RlbGF5KGZ1bmN0aW9uKCl7bj09PXRoaXMuY291bnRlciYmdGhpcy5yZWZyZXNoUG9zaXRpb25zKCFzKX0pfSxfY2xlYXI6ZnVuY3Rpb24odCxlKXtmdW5jdGlvbiBpKHQsZSxpKXtyZXR1cm4gZnVuY3Rpb24ocyl7aS5fdHJpZ2dlcih0LHMsZS5fdWlIYXNoKGUpKX19dGhpcy5yZXZlcnRpbmc9ITE7dmFyIHMsbj1bXTtpZighdGhpcy5fbm9GaW5hbFNvcnQmJnRoaXMuY3VycmVudEl0ZW0ucGFyZW50KCkubGVuZ3RoJiZ0aGlzLnBsYWNlaG9sZGVyLmJlZm9yZSh0aGlzLmN1cnJlbnRJdGVtKSx0aGlzLl9ub0ZpbmFsU29ydD1udWxsLHRoaXMuaGVscGVyWzBdPT09dGhpcy5jdXJyZW50SXRlbVswXSl7Zm9yKHMgaW4gdGhpcy5fc3RvcmVkQ1NTKShcImF1dG9cIj09PXRoaXMuX3N0b3JlZENTU1tzXXx8XCJzdGF0aWNcIj09PXRoaXMuX3N0b3JlZENTU1tzXSkmJih0aGlzLl9zdG9yZWRDU1Nbc109XCJcIik7dGhpcy5jdXJyZW50SXRlbS5jc3ModGhpcy5fc3RvcmVkQ1NTKSx0aGlzLl9yZW1vdmVDbGFzcyh0aGlzLmN1cnJlbnRJdGVtLFwidWktc29ydGFibGUtaGVscGVyXCIpfWVsc2UgdGhpcy5jdXJyZW50SXRlbS5zaG93KCk7Zm9yKHRoaXMuZnJvbU91dHNpZGUmJiFlJiZuLnB1c2goZnVuY3Rpb24odCl7dGhpcy5fdHJpZ2dlcihcInJlY2VpdmVcIix0LHRoaXMuX3VpSGFzaCh0aGlzLmZyb21PdXRzaWRlKSl9KSwhdGhpcy5mcm9tT3V0c2lkZSYmdGhpcy5kb21Qb3NpdGlvbi5wcmV2PT09dGhpcy5jdXJyZW50SXRlbS5wcmV2KCkubm90KFwiLnVpLXNvcnRhYmxlLWhlbHBlclwiKVswXSYmdGhpcy5kb21Qb3NpdGlvbi5wYXJlbnQ9PT10aGlzLmN1cnJlbnRJdGVtLnBhcmVudCgpWzBdfHxlfHxuLnB1c2goZnVuY3Rpb24odCl7dGhpcy5fdHJpZ2dlcihcInVwZGF0ZVwiLHQsdGhpcy5fdWlIYXNoKCkpfSksdGhpcyE9PXRoaXMuY3VycmVudENvbnRhaW5lciYmKGV8fChuLnB1c2goZnVuY3Rpb24odCl7dGhpcy5fdHJpZ2dlcihcInJlbW92ZVwiLHQsdGhpcy5fdWlIYXNoKCkpfSksbi5wdXNoKGZ1bmN0aW9uKHQpe3JldHVybiBmdW5jdGlvbihlKXt0Ll90cmlnZ2VyKFwicmVjZWl2ZVwiLGUsdGhpcy5fdWlIYXNoKHRoaXMpKX19LmNhbGwodGhpcyx0aGlzLmN1cnJlbnRDb250YWluZXIpKSxuLnB1c2goZnVuY3Rpb24odCl7cmV0dXJuIGZ1bmN0aW9uKGUpe3QuX3RyaWdnZXIoXCJ1cGRhdGVcIixlLHRoaXMuX3VpSGFzaCh0aGlzKSl9fS5jYWxsKHRoaXMsdGhpcy5jdXJyZW50Q29udGFpbmVyKSkpKSxzPXRoaXMuY29udGFpbmVycy5sZW5ndGgtMTtzPj0wO3MtLSllfHxuLnB1c2goaShcImRlYWN0aXZhdGVcIix0aGlzLHRoaXMuY29udGFpbmVyc1tzXSkpLHRoaXMuY29udGFpbmVyc1tzXS5jb250YWluZXJDYWNoZS5vdmVyJiYobi5wdXNoKGkoXCJvdXRcIix0aGlzLHRoaXMuY29udGFpbmVyc1tzXSkpLHRoaXMuY29udGFpbmVyc1tzXS5jb250YWluZXJDYWNoZS5vdmVyPTApO2lmKHRoaXMuc3RvcmVkQ3Vyc29yJiYodGhpcy5kb2N1bWVudC5maW5kKFwiYm9keVwiKS5jc3MoXCJjdXJzb3JcIix0aGlzLnN0b3JlZEN1cnNvciksdGhpcy5zdG9yZWRTdHlsZXNoZWV0LnJlbW92ZSgpKSx0aGlzLl9zdG9yZWRPcGFjaXR5JiZ0aGlzLmhlbHBlci5jc3MoXCJvcGFjaXR5XCIsdGhpcy5fc3RvcmVkT3BhY2l0eSksdGhpcy5fc3RvcmVkWkluZGV4JiZ0aGlzLmhlbHBlci5jc3MoXCJ6SW5kZXhcIixcImF1dG9cIj09PXRoaXMuX3N0b3JlZFpJbmRleD9cIlwiOnRoaXMuX3N0b3JlZFpJbmRleCksdGhpcy5kcmFnZ2luZz0hMSxlfHx0aGlzLl90cmlnZ2VyKFwiYmVmb3JlU3RvcFwiLHQsdGhpcy5fdWlIYXNoKCkpLHRoaXMucGxhY2Vob2xkZXJbMF0ucGFyZW50Tm9kZS5yZW1vdmVDaGlsZCh0aGlzLnBsYWNlaG9sZGVyWzBdKSx0aGlzLmNhbmNlbEhlbHBlclJlbW92YWx8fCh0aGlzLmhlbHBlclswXSE9PXRoaXMuY3VycmVudEl0ZW1bMF0mJnRoaXMuaGVscGVyLnJlbW92ZSgpLHRoaXMuaGVscGVyPW51bGwpLCFlKXtmb3Iocz0wO24ubGVuZ3RoPnM7cysrKW5bc10uY2FsbCh0aGlzLHQpO3RoaXMuX3RyaWdnZXIoXCJzdG9wXCIsdCx0aGlzLl91aUhhc2goKSl9cmV0dXJuIHRoaXMuZnJvbU91dHNpZGU9ITEsIXRoaXMuY2FuY2VsSGVscGVyUmVtb3ZhbH0sX3RyaWdnZXI6ZnVuY3Rpb24oKXt0LldpZGdldC5wcm90b3R5cGUuX3RyaWdnZXIuYXBwbHkodGhpcyxhcmd1bWVudHMpPT09ITEmJnRoaXMuY2FuY2VsKCl9LF91aUhhc2g6ZnVuY3Rpb24oZSl7dmFyIGk9ZXx8dGhpcztyZXR1cm57aGVscGVyOmkuaGVscGVyLHBsYWNlaG9sZGVyOmkucGxhY2Vob2xkZXJ8fHQoW10pLHBvc2l0aW9uOmkucG9zaXRpb24sb3JpZ2luYWxQb3NpdGlvbjppLm9yaWdpbmFsUG9zaXRpb24sb2Zmc2V0OmkucG9zaXRpb25BYnMsaXRlbTppLmN1cnJlbnRJdGVtLHNlbmRlcjplP2UuZWxlbWVudDpudWxsfX19KSx0LndpZGdldChcInVpLnNwaW5uZXJcIix7dmVyc2lvbjpcIjEuMTIuMVwiLGRlZmF1bHRFbGVtZW50OlwiPGlucHV0PlwiLHdpZGdldEV2ZW50UHJlZml4Olwic3BpblwiLG9wdGlvbnM6e2NsYXNzZXM6e1widWktc3Bpbm5lclwiOlwidWktY29ybmVyLWFsbFwiLFwidWktc3Bpbm5lci1kb3duXCI6XCJ1aS1jb3JuZXItYnJcIixcInVpLXNwaW5uZXItdXBcIjpcInVpLWNvcm5lci10clwifSxjdWx0dXJlOm51bGwsaWNvbnM6e2Rvd246XCJ1aS1pY29uLXRyaWFuZ2xlLTEtc1wiLHVwOlwidWktaWNvbi10cmlhbmdsZS0xLW5cIn0saW5jcmVtZW50YWw6ITAsbWF4Om51bGwsbWluOm51bGwsbnVtYmVyRm9ybWF0Om51bGwscGFnZToxMCxzdGVwOjEsY2hhbmdlOm51bGwsc3BpbjpudWxsLHN0YXJ0Om51bGwsc3RvcDpudWxsfSxfY3JlYXRlOmZ1bmN0aW9uKCl7dGhpcy5fc2V0T3B0aW9uKFwibWF4XCIsdGhpcy5vcHRpb25zLm1heCksdGhpcy5fc2V0T3B0aW9uKFwibWluXCIsdGhpcy5vcHRpb25zLm1pbiksdGhpcy5fc2V0T3B0aW9uKFwic3RlcFwiLHRoaXMub3B0aW9ucy5zdGVwKSxcIlwiIT09dGhpcy52YWx1ZSgpJiZ0aGlzLl92YWx1ZSh0aGlzLmVsZW1lbnQudmFsKCksITApLHRoaXMuX2RyYXcoKSx0aGlzLl9vbih0aGlzLl9ldmVudHMpLHRoaXMuX3JlZnJlc2goKSx0aGlzLl9vbih0aGlzLndpbmRvdyx7YmVmb3JldW5sb2FkOmZ1bmN0aW9uKCl7dGhpcy5lbGVtZW50LnJlbW92ZUF0dHIoXCJhdXRvY29tcGxldGVcIil9fSl9LF9nZXRDcmVhdGVPcHRpb25zOmZ1bmN0aW9uKCl7dmFyIGU9dGhpcy5fc3VwZXIoKSxpPXRoaXMuZWxlbWVudDtyZXR1cm4gdC5lYWNoKFtcIm1pblwiLFwibWF4XCIsXCJzdGVwXCJdLGZ1bmN0aW9uKHQscyl7dmFyIG49aS5hdHRyKHMpO251bGwhPW4mJm4ubGVuZ3RoJiYoZVtzXT1uKX0pLGV9LF9ldmVudHM6e2tleWRvd246ZnVuY3Rpb24odCl7dGhpcy5fc3RhcnQodCkmJnRoaXMuX2tleWRvd24odCkmJnQucHJldmVudERlZmF1bHQoKX0sa2V5dXA6XCJfc3RvcFwiLGZvY3VzOmZ1bmN0aW9uKCl7dGhpcy5wcmV2aW91cz10aGlzLmVsZW1lbnQudmFsKCl9LGJsdXI6ZnVuY3Rpb24odCl7cmV0dXJuIHRoaXMuY2FuY2VsQmx1cj8oZGVsZXRlIHRoaXMuY2FuY2VsQmx1cix2b2lkIDApOih0aGlzLl9zdG9wKCksdGhpcy5fcmVmcmVzaCgpLHRoaXMucHJldmlvdXMhPT10aGlzLmVsZW1lbnQudmFsKCkmJnRoaXMuX3RyaWdnZXIoXCJjaGFuZ2VcIix0KSx2b2lkIDApfSxtb3VzZXdoZWVsOmZ1bmN0aW9uKHQsZSl7aWYoZSl7aWYoIXRoaXMuc3Bpbm5pbmcmJiF0aGlzLl9zdGFydCh0KSlyZXR1cm4hMTt0aGlzLl9zcGluKChlPjA/MTotMSkqdGhpcy5vcHRpb25zLnN0ZXAsdCksY2xlYXJUaW1lb3V0KHRoaXMubW91c2V3aGVlbFRpbWVyKSx0aGlzLm1vdXNld2hlZWxUaW1lcj10aGlzLl9kZWxheShmdW5jdGlvbigpe3RoaXMuc3Bpbm5pbmcmJnRoaXMuX3N0b3AodCl9LDEwMCksdC5wcmV2ZW50RGVmYXVsdCgpfX0sXCJtb3VzZWRvd24gLnVpLXNwaW5uZXItYnV0dG9uXCI6ZnVuY3Rpb24oZSl7ZnVuY3Rpb24gaSgpe3ZhciBlPXRoaXMuZWxlbWVudFswXT09PXQudWkuc2FmZUFjdGl2ZUVsZW1lbnQodGhpcy5kb2N1bWVudFswXSk7ZXx8KHRoaXMuZWxlbWVudC50cmlnZ2VyKFwiZm9jdXNcIiksdGhpcy5wcmV2aW91cz1zLHRoaXMuX2RlbGF5KGZ1bmN0aW9uKCl7dGhpcy5wcmV2aW91cz1zfSkpfXZhciBzO3M9dGhpcy5lbGVtZW50WzBdPT09dC51aS5zYWZlQWN0aXZlRWxlbWVudCh0aGlzLmRvY3VtZW50WzBdKT90aGlzLnByZXZpb3VzOnRoaXMuZWxlbWVudC52YWwoKSxlLnByZXZlbnREZWZhdWx0KCksaS5jYWxsKHRoaXMpLHRoaXMuY2FuY2VsQmx1cj0hMCx0aGlzLl9kZWxheShmdW5jdGlvbigpe2RlbGV0ZSB0aGlzLmNhbmNlbEJsdXIsaS5jYWxsKHRoaXMpfSksdGhpcy5fc3RhcnQoZSkhPT0hMSYmdGhpcy5fcmVwZWF0KG51bGwsdChlLmN1cnJlbnRUYXJnZXQpLmhhc0NsYXNzKFwidWktc3Bpbm5lci11cFwiKT8xOi0xLGUpfSxcIm1vdXNldXAgLnVpLXNwaW5uZXItYnV0dG9uXCI6XCJfc3RvcFwiLFwibW91c2VlbnRlciAudWktc3Bpbm5lci1idXR0b25cIjpmdW5jdGlvbihlKXtyZXR1cm4gdChlLmN1cnJlbnRUYXJnZXQpLmhhc0NsYXNzKFwidWktc3RhdGUtYWN0aXZlXCIpP3RoaXMuX3N0YXJ0KGUpPT09ITE/ITE6KHRoaXMuX3JlcGVhdChudWxsLHQoZS5jdXJyZW50VGFyZ2V0KS5oYXNDbGFzcyhcInVpLXNwaW5uZXItdXBcIik/MTotMSxlKSx2b2lkIDApOnZvaWQgMH0sXCJtb3VzZWxlYXZlIC51aS1zcGlubmVyLWJ1dHRvblwiOlwiX3N0b3BcIn0sX2VuaGFuY2U6ZnVuY3Rpb24oKXt0aGlzLnVpU3Bpbm5lcj10aGlzLmVsZW1lbnQuYXR0cihcImF1dG9jb21wbGV0ZVwiLFwib2ZmXCIpLndyYXAoXCI8c3Bhbj5cIikucGFyZW50KCkuYXBwZW5kKFwiPGE+PC9hPjxhPjwvYT5cIil9LF9kcmF3OmZ1bmN0aW9uKCl7dGhpcy5fZW5oYW5jZSgpLHRoaXMuX2FkZENsYXNzKHRoaXMudWlTcGlubmVyLFwidWktc3Bpbm5lclwiLFwidWktd2lkZ2V0IHVpLXdpZGdldC1jb250ZW50XCIpLHRoaXMuX2FkZENsYXNzKFwidWktc3Bpbm5lci1pbnB1dFwiKSx0aGlzLmVsZW1lbnQuYXR0cihcInJvbGVcIixcInNwaW5idXR0b25cIiksdGhpcy5idXR0b25zPXRoaXMudWlTcGlubmVyLmNoaWxkcmVuKFwiYVwiKS5hdHRyKFwidGFiSW5kZXhcIiwtMSkuYXR0cihcImFyaWEtaGlkZGVuXCIsITApLmJ1dHRvbih7Y2xhc3Nlczp7XCJ1aS1idXR0b25cIjpcIlwifX0pLHRoaXMuX3JlbW92ZUNsYXNzKHRoaXMuYnV0dG9ucyxcInVpLWNvcm5lci1hbGxcIiksdGhpcy5fYWRkQ2xhc3ModGhpcy5idXR0b25zLmZpcnN0KCksXCJ1aS1zcGlubmVyLWJ1dHRvbiB1aS1zcGlubmVyLXVwXCIpLHRoaXMuX2FkZENsYXNzKHRoaXMuYnV0dG9ucy5sYXN0KCksXCJ1aS1zcGlubmVyLWJ1dHRvbiB1aS1zcGlubmVyLWRvd25cIiksdGhpcy5idXR0b25zLmZpcnN0KCkuYnV0dG9uKHtpY29uOnRoaXMub3B0aW9ucy5pY29ucy51cCxzaG93TGFiZWw6ITF9KSx0aGlzLmJ1dHRvbnMubGFzdCgpLmJ1dHRvbih7aWNvbjp0aGlzLm9wdGlvbnMuaWNvbnMuZG93bixzaG93TGFiZWw6ITF9KSx0aGlzLmJ1dHRvbnMuaGVpZ2h0KCk+TWF0aC5jZWlsKC41KnRoaXMudWlTcGlubmVyLmhlaWdodCgpKSYmdGhpcy51aVNwaW5uZXIuaGVpZ2h0KCk+MCYmdGhpcy51aVNwaW5uZXIuaGVpZ2h0KHRoaXMudWlTcGlubmVyLmhlaWdodCgpKX0sX2tleWRvd246ZnVuY3Rpb24oZSl7dmFyIGk9dGhpcy5vcHRpb25zLHM9dC51aS5rZXlDb2RlO3N3aXRjaChlLmtleUNvZGUpe2Nhc2Ugcy5VUDpyZXR1cm4gdGhpcy5fcmVwZWF0KG51bGwsMSxlKSwhMDtjYXNlIHMuRE9XTjpyZXR1cm4gdGhpcy5fcmVwZWF0KG51bGwsLTEsZSksITA7Y2FzZSBzLlBBR0VfVVA6cmV0dXJuIHRoaXMuX3JlcGVhdChudWxsLGkucGFnZSxlKSwhMDtjYXNlIHMuUEFHRV9ET1dOOnJldHVybiB0aGlzLl9yZXBlYXQobnVsbCwtaS5wYWdlLGUpLCEwfXJldHVybiExfSxfc3RhcnQ6ZnVuY3Rpb24odCl7cmV0dXJuIHRoaXMuc3Bpbm5pbmd8fHRoaXMuX3RyaWdnZXIoXCJzdGFydFwiLHQpIT09ITE/KHRoaXMuY291bnRlcnx8KHRoaXMuY291bnRlcj0xKSx0aGlzLnNwaW5uaW5nPSEwLCEwKTohMX0sX3JlcGVhdDpmdW5jdGlvbih0LGUsaSl7dD10fHw1MDAsY2xlYXJUaW1lb3V0KHRoaXMudGltZXIpLHRoaXMudGltZXI9dGhpcy5fZGVsYXkoZnVuY3Rpb24oKXt0aGlzLl9yZXBlYXQoNDAsZSxpKX0sdCksdGhpcy5fc3BpbihlKnRoaXMub3B0aW9ucy5zdGVwLGkpfSxfc3BpbjpmdW5jdGlvbih0LGUpe3ZhciBpPXRoaXMudmFsdWUoKXx8MDt0aGlzLmNvdW50ZXJ8fCh0aGlzLmNvdW50ZXI9MSksaT10aGlzLl9hZGp1c3RWYWx1ZShpK3QqdGhpcy5faW5jcmVtZW50KHRoaXMuY291bnRlcikpLHRoaXMuc3Bpbm5pbmcmJnRoaXMuX3RyaWdnZXIoXCJzcGluXCIsZSx7dmFsdWU6aX0pPT09ITF8fCh0aGlzLl92YWx1ZShpKSx0aGlzLmNvdW50ZXIrKyl9LF9pbmNyZW1lbnQ6ZnVuY3Rpb24oZSl7dmFyIGk9dGhpcy5vcHRpb25zLmluY3JlbWVudGFsO3JldHVybiBpP3QuaXNGdW5jdGlvbihpKT9pKGUpOk1hdGguZmxvb3IoZSplKmUvNWU0LWUqZS81MDArMTcqZS8yMDArMSk6MX0sX3ByZWNpc2lvbjpmdW5jdGlvbigpe3ZhciB0PXRoaXMuX3ByZWNpc2lvbk9mKHRoaXMub3B0aW9ucy5zdGVwKTtyZXR1cm4gbnVsbCE9PXRoaXMub3B0aW9ucy5taW4mJih0PU1hdGgubWF4KHQsdGhpcy5fcHJlY2lzaW9uT2YodGhpcy5vcHRpb25zLm1pbikpKSx0fSxfcHJlY2lzaW9uT2Y6ZnVuY3Rpb24odCl7dmFyIGU9XCJcIit0LGk9ZS5pbmRleE9mKFwiLlwiKTtyZXR1cm4tMT09PWk/MDplLmxlbmd0aC1pLTF9LF9hZGp1c3RWYWx1ZTpmdW5jdGlvbih0KXt2YXIgZSxpLHM9dGhpcy5vcHRpb25zO3JldHVybiBlPW51bGwhPT1zLm1pbj9zLm1pbjowLGk9dC1lLGk9TWF0aC5yb3VuZChpL3Muc3RlcCkqcy5zdGVwLHQ9ZStpLHQ9cGFyc2VGbG9hdCh0LnRvRml4ZWQodGhpcy5fcHJlY2lzaW9uKCkpKSxudWxsIT09cy5tYXgmJnQ+cy5tYXg/cy5tYXg6bnVsbCE9PXMubWluJiZzLm1pbj50P3MubWluOnR9LF9zdG9wOmZ1bmN0aW9uKHQpe3RoaXMuc3Bpbm5pbmcmJihjbGVhclRpbWVvdXQodGhpcy50aW1lciksY2xlYXJUaW1lb3V0KHRoaXMubW91c2V3aGVlbFRpbWVyKSx0aGlzLmNvdW50ZXI9MCx0aGlzLnNwaW5uaW5nPSExLHRoaXMuX3RyaWdnZXIoXCJzdG9wXCIsdCkpfSxfc2V0T3B0aW9uOmZ1bmN0aW9uKHQsZSl7dmFyIGkscyxuO3JldHVyblwiY3VsdHVyZVwiPT09dHx8XCJudW1iZXJGb3JtYXRcIj09PXQ/KGk9dGhpcy5fcGFyc2UodGhpcy5lbGVtZW50LnZhbCgpKSx0aGlzLm9wdGlvbnNbdF09ZSx0aGlzLmVsZW1lbnQudmFsKHRoaXMuX2Zvcm1hdChpKSksdm9pZCAwKTooKFwibWF4XCI9PT10fHxcIm1pblwiPT09dHx8XCJzdGVwXCI9PT10KSYmXCJzdHJpbmdcIj09dHlwZW9mIGUmJihlPXRoaXMuX3BhcnNlKGUpKSxcImljb25zXCI9PT10JiYocz10aGlzLmJ1dHRvbnMuZmlyc3QoKS5maW5kKFwiLnVpLWljb25cIiksdGhpcy5fcmVtb3ZlQ2xhc3MocyxudWxsLHRoaXMub3B0aW9ucy5pY29ucy51cCksdGhpcy5fYWRkQ2xhc3MocyxudWxsLGUudXApLG49dGhpcy5idXR0b25zLmxhc3QoKS5maW5kKFwiLnVpLWljb25cIiksdGhpcy5fcmVtb3ZlQ2xhc3MobixudWxsLHRoaXMub3B0aW9ucy5pY29ucy5kb3duKSx0aGlzLl9hZGRDbGFzcyhuLG51bGwsZS5kb3duKSksdGhpcy5fc3VwZXIodCxlKSx2b2lkIDApfSxfc2V0T3B0aW9uRGlzYWJsZWQ6ZnVuY3Rpb24odCl7dGhpcy5fc3VwZXIodCksdGhpcy5fdG9nZ2xlQ2xhc3ModGhpcy51aVNwaW5uZXIsbnVsbCxcInVpLXN0YXRlLWRpc2FibGVkXCIsISF0KSx0aGlzLmVsZW1lbnQucHJvcChcImRpc2FibGVkXCIsISF0KSx0aGlzLmJ1dHRvbnMuYnV0dG9uKHQ/XCJkaXNhYmxlXCI6XCJlbmFibGVcIil9LF9zZXRPcHRpb25zOnIoZnVuY3Rpb24odCl7dGhpcy5fc3VwZXIodCl9KSxfcGFyc2U6ZnVuY3Rpb24odCl7cmV0dXJuXCJzdHJpbmdcIj09dHlwZW9mIHQmJlwiXCIhPT10JiYodD13aW5kb3cuR2xvYmFsaXplJiZ0aGlzLm9wdGlvbnMubnVtYmVyRm9ybWF0P0dsb2JhbGl6ZS5wYXJzZUZsb2F0KHQsMTAsdGhpcy5vcHRpb25zLmN1bHR1cmUpOit0KSxcIlwiPT09dHx8aXNOYU4odCk/bnVsbDp0fSxfZm9ybWF0OmZ1bmN0aW9uKHQpe3JldHVyblwiXCI9PT10P1wiXCI6d2luZG93Lkdsb2JhbGl6ZSYmdGhpcy5vcHRpb25zLm51bWJlckZvcm1hdD9HbG9iYWxpemUuZm9ybWF0KHQsdGhpcy5vcHRpb25zLm51bWJlckZvcm1hdCx0aGlzLm9wdGlvbnMuY3VsdHVyZSk6dH0sX3JlZnJlc2g6ZnVuY3Rpb24oKXt0aGlzLmVsZW1lbnQuYXR0cih7XCJhcmlhLXZhbHVlbWluXCI6dGhpcy5vcHRpb25zLm1pbixcImFyaWEtdmFsdWVtYXhcIjp0aGlzLm9wdGlvbnMubWF4LFwiYXJpYS12YWx1ZW5vd1wiOnRoaXMuX3BhcnNlKHRoaXMuZWxlbWVudC52YWwoKSl9KX0saXNWYWxpZDpmdW5jdGlvbigpe3ZhciB0PXRoaXMudmFsdWUoKTtyZXR1cm4gbnVsbD09PXQ/ITE6dD09PXRoaXMuX2FkanVzdFZhbHVlKHQpfSxfdmFsdWU6ZnVuY3Rpb24odCxlKXt2YXIgaTtcIlwiIT09dCYmKGk9dGhpcy5fcGFyc2UodCksbnVsbCE9PWkmJihlfHwoaT10aGlzLl9hZGp1c3RWYWx1ZShpKSksdD10aGlzLl9mb3JtYXQoaSkpKSx0aGlzLmVsZW1lbnQudmFsKHQpLHRoaXMuX3JlZnJlc2goKX0sX2Rlc3Ryb3k6ZnVuY3Rpb24oKXt0aGlzLmVsZW1lbnQucHJvcChcImRpc2FibGVkXCIsITEpLnJlbW92ZUF0dHIoXCJhdXRvY29tcGxldGUgcm9sZSBhcmlhLXZhbHVlbWluIGFyaWEtdmFsdWVtYXggYXJpYS12YWx1ZW5vd1wiKSx0aGlzLnVpU3Bpbm5lci5yZXBsYWNlV2l0aCh0aGlzLmVsZW1lbnQpfSxzdGVwVXA6cihmdW5jdGlvbih0KXt0aGlzLl9zdGVwVXAodCl9KSxfc3RlcFVwOmZ1bmN0aW9uKHQpe3RoaXMuX3N0YXJ0KCkmJih0aGlzLl9zcGluKCh0fHwxKSp0aGlzLm9wdGlvbnMuc3RlcCksdGhpcy5fc3RvcCgpKX0sc3RlcERvd246cihmdW5jdGlvbih0KXt0aGlzLl9zdGVwRG93bih0KX0pLF9zdGVwRG93bjpmdW5jdGlvbih0KXt0aGlzLl9zdGFydCgpJiYodGhpcy5fc3BpbigodHx8MSkqLXRoaXMub3B0aW9ucy5zdGVwKSx0aGlzLl9zdG9wKCkpfSxwYWdlVXA6cihmdW5jdGlvbih0KXt0aGlzLl9zdGVwVXAoKHR8fDEpKnRoaXMub3B0aW9ucy5wYWdlKX0pLHBhZ2VEb3duOnIoZnVuY3Rpb24odCl7dGhpcy5fc3RlcERvd24oKHR8fDEpKnRoaXMub3B0aW9ucy5wYWdlKX0pLHZhbHVlOmZ1bmN0aW9uKHQpe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPyhyKHRoaXMuX3ZhbHVlKS5jYWxsKHRoaXMsdCksdm9pZCAwKTp0aGlzLl9wYXJzZSh0aGlzLmVsZW1lbnQudmFsKCkpfSx3aWRnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy51aVNwaW5uZXJ9fSksdC51aUJhY2tDb21wYXQhPT0hMSYmdC53aWRnZXQoXCJ1aS5zcGlubmVyXCIsdC51aS5zcGlubmVyLHtfZW5oYW5jZTpmdW5jdGlvbigpe3RoaXMudWlTcGlubmVyPXRoaXMuZWxlbWVudC5hdHRyKFwiYXV0b2NvbXBsZXRlXCIsXCJvZmZcIikud3JhcCh0aGlzLl91aVNwaW5uZXJIdG1sKCkpLnBhcmVudCgpLmFwcGVuZCh0aGlzLl9idXR0b25IdG1sKCkpfSxfdWlTcGlubmVySHRtbDpmdW5jdGlvbigpe3JldHVyblwiPHNwYW4+XCJ9LF9idXR0b25IdG1sOmZ1bmN0aW9uKCl7cmV0dXJuXCI8YT48L2E+PGE+PC9hPlwifX0pLHQudWkuc3Bpbm5lcix0LndpZGdldChcInVpLnRhYnNcIix7dmVyc2lvbjpcIjEuMTIuMVwiLGRlbGF5OjMwMCxvcHRpb25zOnthY3RpdmU6bnVsbCxjbGFzc2VzOntcInVpLXRhYnNcIjpcInVpLWNvcm5lci1hbGxcIixcInVpLXRhYnMtbmF2XCI6XCJ1aS1jb3JuZXItYWxsXCIsXCJ1aS10YWJzLXBhbmVsXCI6XCJ1aS1jb3JuZXItYm90dG9tXCIsXCJ1aS10YWJzLXRhYlwiOlwidWktY29ybmVyLXRvcFwifSxjb2xsYXBzaWJsZTohMSxldmVudDpcImNsaWNrXCIsaGVpZ2h0U3R5bGU6XCJjb250ZW50XCIsaGlkZTpudWxsLHNob3c6bnVsbCxhY3RpdmF0ZTpudWxsLGJlZm9yZUFjdGl2YXRlOm51bGwsYmVmb3JlTG9hZDpudWxsLGxvYWQ6bnVsbH0sX2lzTG9jYWw6ZnVuY3Rpb24oKXt2YXIgdD0vIy4qJC87cmV0dXJuIGZ1bmN0aW9uKGUpe3ZhciBpLHM7aT1lLmhyZWYucmVwbGFjZSh0LFwiXCIpLHM9bG9jYXRpb24uaHJlZi5yZXBsYWNlKHQsXCJcIik7dHJ5e2k9ZGVjb2RlVVJJQ29tcG9uZW50KGkpfWNhdGNoKG4pe310cnl7cz1kZWNvZGVVUklDb21wb25lbnQocyl9Y2F0Y2gobil7fXJldHVybiBlLmhhc2gubGVuZ3RoPjEmJmk9PT1zfX0oKSxfY3JlYXRlOmZ1bmN0aW9uKCl7dmFyIGU9dGhpcyxpPXRoaXMub3B0aW9uczt0aGlzLnJ1bm5pbmc9ITEsdGhpcy5fYWRkQ2xhc3MoXCJ1aS10YWJzXCIsXCJ1aS13aWRnZXQgdWktd2lkZ2V0LWNvbnRlbnRcIiksdGhpcy5fdG9nZ2xlQ2xhc3MoXCJ1aS10YWJzLWNvbGxhcHNpYmxlXCIsbnVsbCxpLmNvbGxhcHNpYmxlKSx0aGlzLl9wcm9jZXNzVGFicygpLGkuYWN0aXZlPXRoaXMuX2luaXRpYWxBY3RpdmUoKSx0LmlzQXJyYXkoaS5kaXNhYmxlZCkmJihpLmRpc2FibGVkPXQudW5pcXVlKGkuZGlzYWJsZWQuY29uY2F0KHQubWFwKHRoaXMudGFicy5maWx0ZXIoXCIudWktc3RhdGUtZGlzYWJsZWRcIiksZnVuY3Rpb24odCl7cmV0dXJuIGUudGFicy5pbmRleCh0KX0pKSkuc29ydCgpKSx0aGlzLmFjdGl2ZT10aGlzLm9wdGlvbnMuYWN0aXZlIT09ITEmJnRoaXMuYW5jaG9ycy5sZW5ndGg/dGhpcy5fZmluZEFjdGl2ZShpLmFjdGl2ZSk6dCgpLHRoaXMuX3JlZnJlc2goKSx0aGlzLmFjdGl2ZS5sZW5ndGgmJnRoaXMubG9hZChpLmFjdGl2ZSl9LF9pbml0aWFsQWN0aXZlOmZ1bmN0aW9uKCl7dmFyIGU9dGhpcy5vcHRpb25zLmFjdGl2ZSxpPXRoaXMub3B0aW9ucy5jb2xsYXBzaWJsZSxzPWxvY2F0aW9uLmhhc2guc3Vic3RyaW5nKDEpO3JldHVybiBudWxsPT09ZSYmKHMmJnRoaXMudGFicy5lYWNoKGZ1bmN0aW9uKGksbil7cmV0dXJuIHQobikuYXR0cihcImFyaWEtY29udHJvbHNcIik9PT1zPyhlPWksITEpOnZvaWQgMH0pLG51bGw9PT1lJiYoZT10aGlzLnRhYnMuaW5kZXgodGhpcy50YWJzLmZpbHRlcihcIi51aS10YWJzLWFjdGl2ZVwiKSkpLChudWxsPT09ZXx8LTE9PT1lKSYmKGU9dGhpcy50YWJzLmxlbmd0aD8wOiExKSksZSE9PSExJiYoZT10aGlzLnRhYnMuaW5kZXgodGhpcy50YWJzLmVxKGUpKSwtMT09PWUmJihlPWk/ITE6MCkpLCFpJiZlPT09ITEmJnRoaXMuYW5jaG9ycy5sZW5ndGgmJihlPTApLGV9LF9nZXRDcmVhdGVFdmVudERhdGE6ZnVuY3Rpb24oKXtyZXR1cm57dGFiOnRoaXMuYWN0aXZlLHBhbmVsOnRoaXMuYWN0aXZlLmxlbmd0aD90aGlzLl9nZXRQYW5lbEZvclRhYih0aGlzLmFjdGl2ZSk6dCgpfX0sX3RhYktleWRvd246ZnVuY3Rpb24oZSl7dmFyIGk9dCh0LnVpLnNhZmVBY3RpdmVFbGVtZW50KHRoaXMuZG9jdW1lbnRbMF0pKS5jbG9zZXN0KFwibGlcIikscz10aGlzLnRhYnMuaW5kZXgoaSksbj0hMDtpZighdGhpcy5faGFuZGxlUGFnZU5hdihlKSl7c3dpdGNoKGUua2V5Q29kZSl7Y2FzZSB0LnVpLmtleUNvZGUuUklHSFQ6Y2FzZSB0LnVpLmtleUNvZGUuRE9XTjpzKys7YnJlYWs7Y2FzZSB0LnVpLmtleUNvZGUuVVA6Y2FzZSB0LnVpLmtleUNvZGUuTEVGVDpuPSExLHMtLTticmVhaztjYXNlIHQudWkua2V5Q29kZS5FTkQ6cz10aGlzLmFuY2hvcnMubGVuZ3RoLTE7YnJlYWs7Y2FzZSB0LnVpLmtleUNvZGUuSE9NRTpzPTA7YnJlYWs7Y2FzZSB0LnVpLmtleUNvZGUuU1BBQ0U6cmV0dXJuIGUucHJldmVudERlZmF1bHQoKSxjbGVhclRpbWVvdXQodGhpcy5hY3RpdmF0aW5nKSx0aGlzLl9hY3RpdmF0ZShzKSx2b2lkIDA7Y2FzZSB0LnVpLmtleUNvZGUuRU5URVI6cmV0dXJuIGUucHJldmVudERlZmF1bHQoKSxjbGVhclRpbWVvdXQodGhpcy5hY3RpdmF0aW5nKSx0aGlzLl9hY3RpdmF0ZShzPT09dGhpcy5vcHRpb25zLmFjdGl2ZT8hMTpzKSx2b2lkIDA7ZGVmYXVsdDpyZXR1cm59ZS5wcmV2ZW50RGVmYXVsdCgpLGNsZWFyVGltZW91dCh0aGlzLmFjdGl2YXRpbmcpLHM9dGhpcy5fZm9jdXNOZXh0VGFiKHMsbiksZS5jdHJsS2V5fHxlLm1ldGFLZXl8fChpLmF0dHIoXCJhcmlhLXNlbGVjdGVkXCIsXCJmYWxzZVwiKSx0aGlzLnRhYnMuZXEocykuYXR0cihcImFyaWEtc2VsZWN0ZWRcIixcInRydWVcIiksdGhpcy5hY3RpdmF0aW5nPXRoaXMuX2RlbGF5KGZ1bmN0aW9uKCl7dGhpcy5vcHRpb24oXCJhY3RpdmVcIixzKX0sdGhpcy5kZWxheSkpfX0sX3BhbmVsS2V5ZG93bjpmdW5jdGlvbihlKXt0aGlzLl9oYW5kbGVQYWdlTmF2KGUpfHxlLmN0cmxLZXkmJmUua2V5Q29kZT09PXQudWkua2V5Q29kZS5VUCYmKGUucHJldmVudERlZmF1bHQoKSx0aGlzLmFjdGl2ZS50cmlnZ2VyKFwiZm9jdXNcIikpfSxfaGFuZGxlUGFnZU5hdjpmdW5jdGlvbihlKXtyZXR1cm4gZS5hbHRLZXkmJmUua2V5Q29kZT09PXQudWkua2V5Q29kZS5QQUdFX1VQPyh0aGlzLl9hY3RpdmF0ZSh0aGlzLl9mb2N1c05leHRUYWIodGhpcy5vcHRpb25zLmFjdGl2ZS0xLCExKSksITApOmUuYWx0S2V5JiZlLmtleUNvZGU9PT10LnVpLmtleUNvZGUuUEFHRV9ET1dOPyh0aGlzLl9hY3RpdmF0ZSh0aGlzLl9mb2N1c05leHRUYWIodGhpcy5vcHRpb25zLmFjdGl2ZSsxLCEwKSksITApOnZvaWQgMH0sX2ZpbmROZXh0VGFiOmZ1bmN0aW9uKGUsaSl7ZnVuY3Rpb24gcygpe3JldHVybiBlPm4mJihlPTApLDA+ZSYmKGU9biksZX1mb3IodmFyIG49dGhpcy50YWJzLmxlbmd0aC0xOy0xIT09dC5pbkFycmF5KHMoKSx0aGlzLm9wdGlvbnMuZGlzYWJsZWQpOyllPWk/ZSsxOmUtMTtyZXR1cm4gZX0sX2ZvY3VzTmV4dFRhYjpmdW5jdGlvbih0LGUpe3JldHVybiB0PXRoaXMuX2ZpbmROZXh0VGFiKHQsZSksdGhpcy50YWJzLmVxKHQpLnRyaWdnZXIoXCJmb2N1c1wiKSx0fSxfc2V0T3B0aW9uOmZ1bmN0aW9uKHQsZSl7cmV0dXJuXCJhY3RpdmVcIj09PXQ/KHRoaXMuX2FjdGl2YXRlKGUpLHZvaWQgMCk6KHRoaXMuX3N1cGVyKHQsZSksXCJjb2xsYXBzaWJsZVwiPT09dCYmKHRoaXMuX3RvZ2dsZUNsYXNzKFwidWktdGFicy1jb2xsYXBzaWJsZVwiLG51bGwsZSksZXx8dGhpcy5vcHRpb25zLmFjdGl2ZSE9PSExfHx0aGlzLl9hY3RpdmF0ZSgwKSksXCJldmVudFwiPT09dCYmdGhpcy5fc2V0dXBFdmVudHMoZSksXCJoZWlnaHRTdHlsZVwiPT09dCYmdGhpcy5fc2V0dXBIZWlnaHRTdHlsZShlKSx2b2lkIDApfSxfc2FuaXRpemVTZWxlY3RvcjpmdW5jdGlvbih0KXtyZXR1cm4gdD90LnJlcGxhY2UoL1shXCIkJSYnKCkqKywuXFwvOjs8PT4/QFxcW1xcXVxcXmB7fH1+XS9nLFwiXFxcXCQmXCIpOlwiXCJ9LHJlZnJlc2g6ZnVuY3Rpb24oKXt2YXIgZT10aGlzLm9wdGlvbnMsaT10aGlzLnRhYmxpc3QuY2hpbGRyZW4oXCI6aGFzKGFbaHJlZl0pXCIpO2UuZGlzYWJsZWQ9dC5tYXAoaS5maWx0ZXIoXCIudWktc3RhdGUtZGlzYWJsZWRcIiksZnVuY3Rpb24odCl7cmV0dXJuIGkuaW5kZXgodCl9KSx0aGlzLl9wcm9jZXNzVGFicygpLGUuYWN0aXZlIT09ITEmJnRoaXMuYW5jaG9ycy5sZW5ndGg/dGhpcy5hY3RpdmUubGVuZ3RoJiYhdC5jb250YWlucyh0aGlzLnRhYmxpc3RbMF0sdGhpcy5hY3RpdmVbMF0pP3RoaXMudGFicy5sZW5ndGg9PT1lLmRpc2FibGVkLmxlbmd0aD8oZS5hY3RpdmU9ITEsdGhpcy5hY3RpdmU9dCgpKTp0aGlzLl9hY3RpdmF0ZSh0aGlzLl9maW5kTmV4dFRhYihNYXRoLm1heCgwLGUuYWN0aXZlLTEpLCExKSk6ZS5hY3RpdmU9dGhpcy50YWJzLmluZGV4KHRoaXMuYWN0aXZlKTooZS5hY3RpdmU9ITEsdGhpcy5hY3RpdmU9dCgpKSx0aGlzLl9yZWZyZXNoKCl9LF9yZWZyZXNoOmZ1bmN0aW9uKCl7dGhpcy5fc2V0T3B0aW9uRGlzYWJsZWQodGhpcy5vcHRpb25zLmRpc2FibGVkKSx0aGlzLl9zZXR1cEV2ZW50cyh0aGlzLm9wdGlvbnMuZXZlbnQpLHRoaXMuX3NldHVwSGVpZ2h0U3R5bGUodGhpcy5vcHRpb25zLmhlaWdodFN0eWxlKSx0aGlzLnRhYnMubm90KHRoaXMuYWN0aXZlKS5hdHRyKHtcImFyaWEtc2VsZWN0ZWRcIjpcImZhbHNlXCIsXCJhcmlhLWV4cGFuZGVkXCI6XCJmYWxzZVwiLHRhYkluZGV4Oi0xfSksdGhpcy5wYW5lbHMubm90KHRoaXMuX2dldFBhbmVsRm9yVGFiKHRoaXMuYWN0aXZlKSkuaGlkZSgpLmF0dHIoe1wiYXJpYS1oaWRkZW5cIjpcInRydWVcIn0pLHRoaXMuYWN0aXZlLmxlbmd0aD8odGhpcy5hY3RpdmUuYXR0cih7XCJhcmlhLXNlbGVjdGVkXCI6XCJ0cnVlXCIsXCJhcmlhLWV4cGFuZGVkXCI6XCJ0cnVlXCIsdGFiSW5kZXg6MH0pLHRoaXMuX2FkZENsYXNzKHRoaXMuYWN0aXZlLFwidWktdGFicy1hY3RpdmVcIixcInVpLXN0YXRlLWFjdGl2ZVwiKSx0aGlzLl9nZXRQYW5lbEZvclRhYih0aGlzLmFjdGl2ZSkuc2hvdygpLmF0dHIoe1wiYXJpYS1oaWRkZW5cIjpcImZhbHNlXCJ9KSk6dGhpcy50YWJzLmVxKDApLmF0dHIoXCJ0YWJJbmRleFwiLDApfSxfcHJvY2Vzc1RhYnM6ZnVuY3Rpb24oKXt2YXIgZT10aGlzLGk9dGhpcy50YWJzLHM9dGhpcy5hbmNob3JzLG49dGhpcy5wYW5lbHM7dGhpcy50YWJsaXN0PXRoaXMuX2dldExpc3QoKS5hdHRyKFwicm9sZVwiLFwidGFibGlzdFwiKSx0aGlzLl9hZGRDbGFzcyh0aGlzLnRhYmxpc3QsXCJ1aS10YWJzLW5hdlwiLFwidWktaGVscGVyLXJlc2V0IHVpLWhlbHBlci1jbGVhcmZpeCB1aS13aWRnZXQtaGVhZGVyXCIpLHRoaXMudGFibGlzdC5vbihcIm1vdXNlZG93blwiK3RoaXMuZXZlbnROYW1lc3BhY2UsXCI+IGxpXCIsZnVuY3Rpb24oZSl7dCh0aGlzKS5pcyhcIi51aS1zdGF0ZS1kaXNhYmxlZFwiKSYmZS5wcmV2ZW50RGVmYXVsdCgpfSkub24oXCJmb2N1c1wiK3RoaXMuZXZlbnROYW1lc3BhY2UsXCIudWktdGFicy1hbmNob3JcIixmdW5jdGlvbigpe3QodGhpcykuY2xvc2VzdChcImxpXCIpLmlzKFwiLnVpLXN0YXRlLWRpc2FibGVkXCIpJiZ0aGlzLmJsdXIoKX0pLHRoaXMudGFicz10aGlzLnRhYmxpc3QuZmluZChcIj4gbGk6aGFzKGFbaHJlZl0pXCIpLmF0dHIoe3JvbGU6XCJ0YWJcIix0YWJJbmRleDotMX0pLHRoaXMuX2FkZENsYXNzKHRoaXMudGFicyxcInVpLXRhYnMtdGFiXCIsXCJ1aS1zdGF0ZS1kZWZhdWx0XCIpLHRoaXMuYW5jaG9ycz10aGlzLnRhYnMubWFwKGZ1bmN0aW9uKCl7cmV0dXJuIHQoXCJhXCIsdGhpcylbMF19KS5hdHRyKHtyb2xlOlwicHJlc2VudGF0aW9uXCIsdGFiSW5kZXg6LTF9KSx0aGlzLl9hZGRDbGFzcyh0aGlzLmFuY2hvcnMsXCJ1aS10YWJzLWFuY2hvclwiKSx0aGlzLnBhbmVscz10KCksdGhpcy5hbmNob3JzLmVhY2goZnVuY3Rpb24oaSxzKXt2YXIgbixvLGEscj10KHMpLnVuaXF1ZUlkKCkuYXR0cihcImlkXCIpLGg9dChzKS5jbG9zZXN0KFwibGlcIiksbD1oLmF0dHIoXCJhcmlhLWNvbnRyb2xzXCIpO2UuX2lzTG9jYWwocyk/KG49cy5oYXNoLGE9bi5zdWJzdHJpbmcoMSksbz1lLmVsZW1lbnQuZmluZChlLl9zYW5pdGl6ZVNlbGVjdG9yKG4pKSk6KGE9aC5hdHRyKFwiYXJpYS1jb250cm9sc1wiKXx8dCh7fSkudW5pcXVlSWQoKVswXS5pZCxuPVwiI1wiK2Esbz1lLmVsZW1lbnQuZmluZChuKSxvLmxlbmd0aHx8KG89ZS5fY3JlYXRlUGFuZWwoYSksby5pbnNlcnRBZnRlcihlLnBhbmVsc1tpLTFdfHxlLnRhYmxpc3QpKSxvLmF0dHIoXCJhcmlhLWxpdmVcIixcInBvbGl0ZVwiKSksby5sZW5ndGgmJihlLnBhbmVscz1lLnBhbmVscy5hZGQobykpLGwmJmguZGF0YShcInVpLXRhYnMtYXJpYS1jb250cm9sc1wiLGwpLGguYXR0cih7XCJhcmlhLWNvbnRyb2xzXCI6YSxcImFyaWEtbGFiZWxsZWRieVwiOnJ9KSxvLmF0dHIoXCJhcmlhLWxhYmVsbGVkYnlcIixyKX0pLHRoaXMucGFuZWxzLmF0dHIoXCJyb2xlXCIsXCJ0YWJwYW5lbFwiKSx0aGlzLl9hZGRDbGFzcyh0aGlzLnBhbmVscyxcInVpLXRhYnMtcGFuZWxcIixcInVpLXdpZGdldC1jb250ZW50XCIpLGkmJih0aGlzLl9vZmYoaS5ub3QodGhpcy50YWJzKSksdGhpcy5fb2ZmKHMubm90KHRoaXMuYW5jaG9ycykpLHRoaXMuX29mZihuLm5vdCh0aGlzLnBhbmVscykpKX0sX2dldExpc3Q6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy50YWJsaXN0fHx0aGlzLmVsZW1lbnQuZmluZChcIm9sLCB1bFwiKS5lcSgwKX0sX2NyZWF0ZVBhbmVsOmZ1bmN0aW9uKGUpe3JldHVybiB0KFwiPGRpdj5cIikuYXR0cihcImlkXCIsZSkuZGF0YShcInVpLXRhYnMtZGVzdHJveVwiLCEwKX0sX3NldE9wdGlvbkRpc2FibGVkOmZ1bmN0aW9uKGUpe3ZhciBpLHMsbjtmb3IodC5pc0FycmF5KGUpJiYoZS5sZW5ndGg/ZS5sZW5ndGg9PT10aGlzLmFuY2hvcnMubGVuZ3RoJiYoZT0hMCk6ZT0hMSksbj0wO3M9dGhpcy50YWJzW25dO24rKylpPXQocyksZT09PSEwfHwtMSE9PXQuaW5BcnJheShuLGUpPyhpLmF0dHIoXCJhcmlhLWRpc2FibGVkXCIsXCJ0cnVlXCIpLHRoaXMuX2FkZENsYXNzKGksbnVsbCxcInVpLXN0YXRlLWRpc2FibGVkXCIpKTooaS5yZW1vdmVBdHRyKFwiYXJpYS1kaXNhYmxlZFwiKSx0aGlzLl9yZW1vdmVDbGFzcyhpLG51bGwsXCJ1aS1zdGF0ZS1kaXNhYmxlZFwiKSk7dGhpcy5vcHRpb25zLmRpc2FibGVkPWUsdGhpcy5fdG9nZ2xlQ2xhc3ModGhpcy53aWRnZXQoKSx0aGlzLndpZGdldEZ1bGxOYW1lK1wiLWRpc2FibGVkXCIsbnVsbCxlPT09ITApfSxfc2V0dXBFdmVudHM6ZnVuY3Rpb24oZSl7dmFyIGk9e307ZSYmdC5lYWNoKGUuc3BsaXQoXCIgXCIpLGZ1bmN0aW9uKHQsZSl7aVtlXT1cIl9ldmVudEhhbmRsZXJcIn0pLHRoaXMuX29mZih0aGlzLmFuY2hvcnMuYWRkKHRoaXMudGFicykuYWRkKHRoaXMucGFuZWxzKSksdGhpcy5fb24oITAsdGhpcy5hbmNob3JzLHtjbGljazpmdW5jdGlvbih0KXt0LnByZXZlbnREZWZhdWx0KCl9fSksdGhpcy5fb24odGhpcy5hbmNob3JzLGkpLHRoaXMuX29uKHRoaXMudGFicyx7a2V5ZG93bjpcIl90YWJLZXlkb3duXCJ9KSx0aGlzLl9vbih0aGlzLnBhbmVscyx7a2V5ZG93bjpcIl9wYW5lbEtleWRvd25cIn0pLHRoaXMuX2ZvY3VzYWJsZSh0aGlzLnRhYnMpLHRoaXMuX2hvdmVyYWJsZSh0aGlzLnRhYnMpfSxfc2V0dXBIZWlnaHRTdHlsZTpmdW5jdGlvbihlKXt2YXIgaSxzPXRoaXMuZWxlbWVudC5wYXJlbnQoKTtcImZpbGxcIj09PWU/KGk9cy5oZWlnaHQoKSxpLT10aGlzLmVsZW1lbnQub3V0ZXJIZWlnaHQoKS10aGlzLmVsZW1lbnQuaGVpZ2h0KCksdGhpcy5lbGVtZW50LnNpYmxpbmdzKFwiOnZpc2libGVcIikuZWFjaChmdW5jdGlvbigpe3ZhciBlPXQodGhpcykscz1lLmNzcyhcInBvc2l0aW9uXCIpO1wiYWJzb2x1dGVcIiE9PXMmJlwiZml4ZWRcIiE9PXMmJihpLT1lLm91dGVySGVpZ2h0KCEwKSl9KSx0aGlzLmVsZW1lbnQuY2hpbGRyZW4oKS5ub3QodGhpcy5wYW5lbHMpLmVhY2goZnVuY3Rpb24oKXtpLT10KHRoaXMpLm91dGVySGVpZ2h0KCEwKX0pLHRoaXMucGFuZWxzLmVhY2goZnVuY3Rpb24oKXt0KHRoaXMpLmhlaWdodChNYXRoLm1heCgwLGktdCh0aGlzKS5pbm5lckhlaWdodCgpK3QodGhpcykuaGVpZ2h0KCkpKX0pLmNzcyhcIm92ZXJmbG93XCIsXCJhdXRvXCIpKTpcImF1dG9cIj09PWUmJihpPTAsdGhpcy5wYW5lbHMuZWFjaChmdW5jdGlvbigpe2k9TWF0aC5tYXgoaSx0KHRoaXMpLmhlaWdodChcIlwiKS5oZWlnaHQoKSl9KS5oZWlnaHQoaSkpfSxfZXZlbnRIYW5kbGVyOmZ1bmN0aW9uKGUpe3ZhciBpPXRoaXMub3B0aW9ucyxzPXRoaXMuYWN0aXZlLG49dChlLmN1cnJlbnRUYXJnZXQpLG89bi5jbG9zZXN0KFwibGlcIiksYT1vWzBdPT09c1swXSxyPWEmJmkuY29sbGFwc2libGUsaD1yP3QoKTp0aGlzLl9nZXRQYW5lbEZvclRhYihvKSxsPXMubGVuZ3RoP3RoaXMuX2dldFBhbmVsRm9yVGFiKHMpOnQoKSxjPXtvbGRUYWI6cyxvbGRQYW5lbDpsLG5ld1RhYjpyP3QoKTpvLG5ld1BhbmVsOmh9O2UucHJldmVudERlZmF1bHQoKSxvLmhhc0NsYXNzKFwidWktc3RhdGUtZGlzYWJsZWRcIil8fG8uaGFzQ2xhc3MoXCJ1aS10YWJzLWxvYWRpbmdcIil8fHRoaXMucnVubmluZ3x8YSYmIWkuY29sbGFwc2libGV8fHRoaXMuX3RyaWdnZXIoXCJiZWZvcmVBY3RpdmF0ZVwiLGUsYyk9PT0hMXx8KGkuYWN0aXZlPXI/ITE6dGhpcy50YWJzLmluZGV4KG8pLHRoaXMuYWN0aXZlPWE/dCgpOm8sdGhpcy54aHImJnRoaXMueGhyLmFib3J0KCksbC5sZW5ndGh8fGgubGVuZ3RofHx0LmVycm9yKFwialF1ZXJ5IFVJIFRhYnM6IE1pc21hdGNoaW5nIGZyYWdtZW50IGlkZW50aWZpZXIuXCIpLGgubGVuZ3RoJiZ0aGlzLmxvYWQodGhpcy50YWJzLmluZGV4KG8pLGUpLHRoaXMuX3RvZ2dsZShlLGMpKX0sX3RvZ2dsZTpmdW5jdGlvbihlLGkpe2Z1bmN0aW9uIHMoKXtvLnJ1bm5pbmc9ITEsby5fdHJpZ2dlcihcImFjdGl2YXRlXCIsZSxpKX1mdW5jdGlvbiBuKCl7by5fYWRkQ2xhc3MoaS5uZXdUYWIuY2xvc2VzdChcImxpXCIpLFwidWktdGFicy1hY3RpdmVcIixcInVpLXN0YXRlLWFjdGl2ZVwiKSxhLmxlbmd0aCYmby5vcHRpb25zLnNob3c/by5fc2hvdyhhLG8ub3B0aW9ucy5zaG93LHMpOihhLnNob3coKSxzKCkpfXZhciBvPXRoaXMsYT1pLm5ld1BhbmVsLHI9aS5vbGRQYW5lbDt0aGlzLnJ1bm5pbmc9ITAsci5sZW5ndGgmJnRoaXMub3B0aW9ucy5oaWRlP3RoaXMuX2hpZGUocix0aGlzLm9wdGlvbnMuaGlkZSxmdW5jdGlvbigpe28uX3JlbW92ZUNsYXNzKGkub2xkVGFiLmNsb3Nlc3QoXCJsaVwiKSxcInVpLXRhYnMtYWN0aXZlXCIsXCJ1aS1zdGF0ZS1hY3RpdmVcIiksbigpfSk6KHRoaXMuX3JlbW92ZUNsYXNzKGkub2xkVGFiLmNsb3Nlc3QoXCJsaVwiKSxcInVpLXRhYnMtYWN0aXZlXCIsXCJ1aS1zdGF0ZS1hY3RpdmVcIiksci5oaWRlKCksbigpKSxyLmF0dHIoXCJhcmlhLWhpZGRlblwiLFwidHJ1ZVwiKSxpLm9sZFRhYi5hdHRyKHtcImFyaWEtc2VsZWN0ZWRcIjpcImZhbHNlXCIsXCJhcmlhLWV4cGFuZGVkXCI6XCJmYWxzZVwifSksYS5sZW5ndGgmJnIubGVuZ3RoP2kub2xkVGFiLmF0dHIoXCJ0YWJJbmRleFwiLC0xKTphLmxlbmd0aCYmdGhpcy50YWJzLmZpbHRlcihmdW5jdGlvbigpe3JldHVybiAwPT09dCh0aGlzKS5hdHRyKFwidGFiSW5kZXhcIil9KS5hdHRyKFwidGFiSW5kZXhcIiwtMSksYS5hdHRyKFwiYXJpYS1oaWRkZW5cIixcImZhbHNlXCIpLGkubmV3VGFiLmF0dHIoe1wiYXJpYS1zZWxlY3RlZFwiOlwidHJ1ZVwiLFwiYXJpYS1leHBhbmRlZFwiOlwidHJ1ZVwiLHRhYkluZGV4OjB9KX0sX2FjdGl2YXRlOmZ1bmN0aW9uKGUpe3ZhciBpLHM9dGhpcy5fZmluZEFjdGl2ZShlKTtzWzBdIT09dGhpcy5hY3RpdmVbMF0mJihzLmxlbmd0aHx8KHM9dGhpcy5hY3RpdmUpLGk9cy5maW5kKFwiLnVpLXRhYnMtYW5jaG9yXCIpWzBdLHRoaXMuX2V2ZW50SGFuZGxlcih7dGFyZ2V0OmksY3VycmVudFRhcmdldDppLHByZXZlbnREZWZhdWx0OnQubm9vcH0pKX0sX2ZpbmRBY3RpdmU6ZnVuY3Rpb24oZSl7cmV0dXJuIGU9PT0hMT90KCk6dGhpcy50YWJzLmVxKGUpfSxfZ2V0SW5kZXg6ZnVuY3Rpb24oZSl7cmV0dXJuXCJzdHJpbmdcIj09dHlwZW9mIGUmJihlPXRoaXMuYW5jaG9ycy5pbmRleCh0aGlzLmFuY2hvcnMuZmlsdGVyKFwiW2hyZWYkPSdcIit0LnVpLmVzY2FwZVNlbGVjdG9yKGUpK1wiJ11cIikpKSxlfSxfZGVzdHJveTpmdW5jdGlvbigpe3RoaXMueGhyJiZ0aGlzLnhoci5hYm9ydCgpLHRoaXMudGFibGlzdC5yZW1vdmVBdHRyKFwicm9sZVwiKS5vZmYodGhpcy5ldmVudE5hbWVzcGFjZSksdGhpcy5hbmNob3JzLnJlbW92ZUF0dHIoXCJyb2xlIHRhYkluZGV4XCIpLnJlbW92ZVVuaXF1ZUlkKCksdGhpcy50YWJzLmFkZCh0aGlzLnBhbmVscykuZWFjaChmdW5jdGlvbigpe3QuZGF0YSh0aGlzLFwidWktdGFicy1kZXN0cm95XCIpP3QodGhpcykucmVtb3ZlKCk6dCh0aGlzKS5yZW1vdmVBdHRyKFwicm9sZSB0YWJJbmRleCBhcmlhLWxpdmUgYXJpYS1idXN5IGFyaWEtc2VsZWN0ZWQgYXJpYS1sYWJlbGxlZGJ5IGFyaWEtaGlkZGVuIGFyaWEtZXhwYW5kZWRcIil9KSx0aGlzLnRhYnMuZWFjaChmdW5jdGlvbigpe3ZhciBlPXQodGhpcyksaT1lLmRhdGEoXCJ1aS10YWJzLWFyaWEtY29udHJvbHNcIik7aT9lLmF0dHIoXCJhcmlhLWNvbnRyb2xzXCIsaSkucmVtb3ZlRGF0YShcInVpLXRhYnMtYXJpYS1jb250cm9sc1wiKTplLnJlbW92ZUF0dHIoXCJhcmlhLWNvbnRyb2xzXCIpfSksdGhpcy5wYW5lbHMuc2hvdygpLFwiY29udGVudFwiIT09dGhpcy5vcHRpb25zLmhlaWdodFN0eWxlJiZ0aGlzLnBhbmVscy5jc3MoXCJoZWlnaHRcIixcIlwiKX0sZW5hYmxlOmZ1bmN0aW9uKGUpe3ZhciBpPXRoaXMub3B0aW9ucy5kaXNhYmxlZDtpIT09ITEmJih2b2lkIDA9PT1lP2k9ITE6KGU9dGhpcy5fZ2V0SW5kZXgoZSksaT10LmlzQXJyYXkoaSk/dC5tYXAoaSxmdW5jdGlvbih0KXtyZXR1cm4gdCE9PWU/dDpudWxsfSk6dC5tYXAodGhpcy50YWJzLGZ1bmN0aW9uKHQsaSl7cmV0dXJuIGkhPT1lP2k6bnVsbH0pKSx0aGlzLl9zZXRPcHRpb25EaXNhYmxlZChpKSl9LGRpc2FibGU6ZnVuY3Rpb24oZSl7dmFyIGk9dGhpcy5vcHRpb25zLmRpc2FibGVkO2lmKGkhPT0hMCl7aWYodm9pZCAwPT09ZSlpPSEwO2Vsc2V7aWYoZT10aGlzLl9nZXRJbmRleChlKSwtMSE9PXQuaW5BcnJheShlLGkpKXJldHVybjtpPXQuaXNBcnJheShpKT90Lm1lcmdlKFtlXSxpKS5zb3J0KCk6W2VdfXRoaXMuX3NldE9wdGlvbkRpc2FibGVkKGkpfX0sbG9hZDpmdW5jdGlvbihlLGkpe2U9dGhpcy5fZ2V0SW5kZXgoZSk7dmFyIHM9dGhpcyxuPXRoaXMudGFicy5lcShlKSxvPW4uZmluZChcIi51aS10YWJzLWFuY2hvclwiKSxhPXRoaXMuX2dldFBhbmVsRm9yVGFiKG4pLHI9e3RhYjpuLHBhbmVsOmF9LGg9ZnVuY3Rpb24odCxlKXtcImFib3J0XCI9PT1lJiZzLnBhbmVscy5zdG9wKCExLCEwKSxzLl9yZW1vdmVDbGFzcyhuLFwidWktdGFicy1sb2FkaW5nXCIpLGEucmVtb3ZlQXR0cihcImFyaWEtYnVzeVwiKSx0PT09cy54aHImJmRlbGV0ZSBzLnhocn07dGhpcy5faXNMb2NhbChvWzBdKXx8KHRoaXMueGhyPXQuYWpheCh0aGlzLl9hamF4U2V0dGluZ3MobyxpLHIpKSx0aGlzLnhociYmXCJjYW5jZWxlZFwiIT09dGhpcy54aHIuc3RhdHVzVGV4dCYmKHRoaXMuX2FkZENsYXNzKG4sXCJ1aS10YWJzLWxvYWRpbmdcIiksYS5hdHRyKFwiYXJpYS1idXN5XCIsXCJ0cnVlXCIpLHRoaXMueGhyLmRvbmUoZnVuY3Rpb24odCxlLG4pe3NldFRpbWVvdXQoZnVuY3Rpb24oKXthLmh0bWwodCkscy5fdHJpZ2dlcihcImxvYWRcIixpLHIpLGgobixlKX0sMSl9KS5mYWlsKGZ1bmN0aW9uKHQsZSl7c2V0VGltZW91dChmdW5jdGlvbigpe2godCxlKX0sMSl9KSkpfSxfYWpheFNldHRpbmdzOmZ1bmN0aW9uKGUsaSxzKXt2YXIgbj10aGlzO3JldHVybnt1cmw6ZS5hdHRyKFwiaHJlZlwiKS5yZXBsYWNlKC8jLiokLyxcIlwiKSxiZWZvcmVTZW5kOmZ1bmN0aW9uKGUsbyl7cmV0dXJuIG4uX3RyaWdnZXIoXCJiZWZvcmVMb2FkXCIsaSx0LmV4dGVuZCh7anFYSFI6ZSxhamF4U2V0dGluZ3M6b30scykpfX19LF9nZXRQYW5lbEZvclRhYjpmdW5jdGlvbihlKXt2YXIgaT10KGUpLmF0dHIoXCJhcmlhLWNvbnRyb2xzXCIpO3JldHVybiB0aGlzLmVsZW1lbnQuZmluZCh0aGlzLl9zYW5pdGl6ZVNlbGVjdG9yKFwiI1wiK2kpKX19KSx0LnVpQmFja0NvbXBhdCE9PSExJiZ0LndpZGdldChcInVpLnRhYnNcIix0LnVpLnRhYnMse19wcm9jZXNzVGFiczpmdW5jdGlvbigpe3RoaXMuX3N1cGVyQXBwbHkoYXJndW1lbnRzKSx0aGlzLl9hZGRDbGFzcyh0aGlzLnRhYnMsXCJ1aS10YWJcIil9fSksdC51aS50YWJzLHQud2lkZ2V0KFwidWkudG9vbHRpcFwiLHt2ZXJzaW9uOlwiMS4xMi4xXCIsb3B0aW9uczp7Y2xhc3Nlczp7XCJ1aS10b29sdGlwXCI6XCJ1aS1jb3JuZXItYWxsIHVpLXdpZGdldC1zaGFkb3dcIn0sY29udGVudDpmdW5jdGlvbigpe3ZhciBlPXQodGhpcykuYXR0cihcInRpdGxlXCIpfHxcIlwiO3JldHVybiB0KFwiPGE+XCIpLnRleHQoZSkuaHRtbCgpfSxoaWRlOiEwLGl0ZW1zOlwiW3RpdGxlXTpub3QoW2Rpc2FibGVkXSlcIixwb3NpdGlvbjp7bXk6XCJsZWZ0IHRvcCsxNVwiLGF0OlwibGVmdCBib3R0b21cIixjb2xsaXNpb246XCJmbGlwZml0IGZsaXBcIn0sc2hvdzohMCx0cmFjazohMSxjbG9zZTpudWxsLG9wZW46bnVsbH0sX2FkZERlc2NyaWJlZEJ5OmZ1bmN0aW9uKGUsaSl7dmFyIHM9KGUuYXR0cihcImFyaWEtZGVzY3JpYmVkYnlcIil8fFwiXCIpLnNwbGl0KC9cXHMrLyk7cy5wdXNoKGkpLGUuZGF0YShcInVpLXRvb2x0aXAtaWRcIixpKS5hdHRyKFwiYXJpYS1kZXNjcmliZWRieVwiLHQudHJpbShzLmpvaW4oXCIgXCIpKSl9LF9yZW1vdmVEZXNjcmliZWRCeTpmdW5jdGlvbihlKXt2YXIgaT1lLmRhdGEoXCJ1aS10b29sdGlwLWlkXCIpLHM9KGUuYXR0cihcImFyaWEtZGVzY3JpYmVkYnlcIil8fFwiXCIpLnNwbGl0KC9cXHMrLyksbj10LmluQXJyYXkoaSxzKTstMSE9PW4mJnMuc3BsaWNlKG4sMSksZS5yZW1vdmVEYXRhKFwidWktdG9vbHRpcC1pZFwiKSxzPXQudHJpbShzLmpvaW4oXCIgXCIpKSxzP2UuYXR0cihcImFyaWEtZGVzY3JpYmVkYnlcIixzKTplLnJlbW92ZUF0dHIoXCJhcmlhLWRlc2NyaWJlZGJ5XCIpfSxfY3JlYXRlOmZ1bmN0aW9uKCl7dGhpcy5fb24oe21vdXNlb3ZlcjpcIm9wZW5cIixmb2N1c2luOlwib3BlblwifSksdGhpcy50b29sdGlwcz17fSx0aGlzLnBhcmVudHM9e30sdGhpcy5saXZlUmVnaW9uPXQoXCI8ZGl2PlwiKS5hdHRyKHtyb2xlOlwibG9nXCIsXCJhcmlhLWxpdmVcIjpcImFzc2VydGl2ZVwiLFwiYXJpYS1yZWxldmFudFwiOlwiYWRkaXRpb25zXCJ9KS5hcHBlbmRUbyh0aGlzLmRvY3VtZW50WzBdLmJvZHkpLHRoaXMuX2FkZENsYXNzKHRoaXMubGl2ZVJlZ2lvbixudWxsLFwidWktaGVscGVyLWhpZGRlbi1hY2Nlc3NpYmxlXCIpLHRoaXMuZGlzYWJsZWRUaXRsZXM9dChbXSl9LF9zZXRPcHRpb246ZnVuY3Rpb24oZSxpKXt2YXIgcz10aGlzO3RoaXMuX3N1cGVyKGUsaSksXCJjb250ZW50XCI9PT1lJiZ0LmVhY2godGhpcy50b29sdGlwcyxmdW5jdGlvbih0LGUpe3MuX3VwZGF0ZUNvbnRlbnQoZS5lbGVtZW50KX0pfSxfc2V0T3B0aW9uRGlzYWJsZWQ6ZnVuY3Rpb24odCl7dGhpc1t0P1wiX2Rpc2FibGVcIjpcIl9lbmFibGVcIl0oKX0sX2Rpc2FibGU6ZnVuY3Rpb24oKXt2YXIgZT10aGlzO3QuZWFjaCh0aGlzLnRvb2x0aXBzLGZ1bmN0aW9uKGkscyl7dmFyIG49dC5FdmVudChcImJsdXJcIik7bi50YXJnZXQ9bi5jdXJyZW50VGFyZ2V0PXMuZWxlbWVudFswXSxlLmNsb3NlKG4sITApfSksdGhpcy5kaXNhYmxlZFRpdGxlcz10aGlzLmRpc2FibGVkVGl0bGVzLmFkZCh0aGlzLmVsZW1lbnQuZmluZCh0aGlzLm9wdGlvbnMuaXRlbXMpLmFkZEJhY2soKS5maWx0ZXIoZnVuY3Rpb24oKXt2YXIgZT10KHRoaXMpO3JldHVybiBlLmlzKFwiW3RpdGxlXVwiKT9lLmRhdGEoXCJ1aS10b29sdGlwLXRpdGxlXCIsZS5hdHRyKFwidGl0bGVcIikpLnJlbW92ZUF0dHIoXCJ0aXRsZVwiKTp2b2lkIDB9KSl9LF9lbmFibGU6ZnVuY3Rpb24oKXt0aGlzLmRpc2FibGVkVGl0bGVzLmVhY2goZnVuY3Rpb24oKXt2YXIgZT10KHRoaXMpO2UuZGF0YShcInVpLXRvb2x0aXAtdGl0bGVcIikmJmUuYXR0cihcInRpdGxlXCIsZS5kYXRhKFwidWktdG9vbHRpcC10aXRsZVwiKSl9KSx0aGlzLmRpc2FibGVkVGl0bGVzPXQoW10pfSxvcGVuOmZ1bmN0aW9uKGUpe3ZhciBpPXRoaXMscz10KGU/ZS50YXJnZXQ6dGhpcy5lbGVtZW50KS5jbG9zZXN0KHRoaXMub3B0aW9ucy5pdGVtcyk7cy5sZW5ndGgmJiFzLmRhdGEoXCJ1aS10b29sdGlwLWlkXCIpJiYocy5hdHRyKFwidGl0bGVcIikmJnMuZGF0YShcInVpLXRvb2x0aXAtdGl0bGVcIixzLmF0dHIoXCJ0aXRsZVwiKSkscy5kYXRhKFwidWktdG9vbHRpcC1vcGVuXCIsITApLGUmJlwibW91c2VvdmVyXCI9PT1lLnR5cGUmJnMucGFyZW50cygpLmVhY2goZnVuY3Rpb24oKXt2YXIgZSxzPXQodGhpcyk7cy5kYXRhKFwidWktdG9vbHRpcC1vcGVuXCIpJiYoZT10LkV2ZW50KFwiYmx1clwiKSxlLnRhcmdldD1lLmN1cnJlbnRUYXJnZXQ9dGhpcyxpLmNsb3NlKGUsITApKSxzLmF0dHIoXCJ0aXRsZVwiKSYmKHMudW5pcXVlSWQoKSxpLnBhcmVudHNbdGhpcy5pZF09e2VsZW1lbnQ6dGhpcyx0aXRsZTpzLmF0dHIoXCJ0aXRsZVwiKX0scy5hdHRyKFwidGl0bGVcIixcIlwiKSl9KSx0aGlzLl9yZWdpc3RlckNsb3NlSGFuZGxlcnMoZSxzKSx0aGlzLl91cGRhdGVDb250ZW50KHMsZSkpfSxfdXBkYXRlQ29udGVudDpmdW5jdGlvbih0LGUpe3ZhciBpLHM9dGhpcy5vcHRpb25zLmNvbnRlbnQsbj10aGlzLG89ZT9lLnR5cGU6bnVsbDtyZXR1cm5cInN0cmluZ1wiPT10eXBlb2Ygc3x8cy5ub2RlVHlwZXx8cy5qcXVlcnk/dGhpcy5fb3BlbihlLHQscyk6KGk9cy5jYWxsKHRbMF0sZnVuY3Rpb24oaSl7bi5fZGVsYXkoZnVuY3Rpb24oKXt0LmRhdGEoXCJ1aS10b29sdGlwLW9wZW5cIikmJihlJiYoZS50eXBlPW8pLHRoaXMuX29wZW4oZSx0LGkpKX0pfSksaSYmdGhpcy5fb3BlbihlLHQsaSksdm9pZCAwKX0sX29wZW46ZnVuY3Rpb24oZSxpLHMpe2Z1bmN0aW9uIG4odCl7bC5vZj10LGEuaXMoXCI6aGlkZGVuXCIpfHxhLnBvc2l0aW9uKGwpfXZhciBvLGEscixoLGw9dC5leHRlbmQoe30sdGhpcy5vcHRpb25zLnBvc2l0aW9uKTtpZihzKXtpZihvPXRoaXMuX2ZpbmQoaSkpcmV0dXJuIG8udG9vbHRpcC5maW5kKFwiLnVpLXRvb2x0aXAtY29udGVudFwiKS5odG1sKHMpLHZvaWQgMDtpLmlzKFwiW3RpdGxlXVwiKSYmKGUmJlwibW91c2VvdmVyXCI9PT1lLnR5cGU/aS5hdHRyKFwidGl0bGVcIixcIlwiKTppLnJlbW92ZUF0dHIoXCJ0aXRsZVwiKSksbz10aGlzLl90b29sdGlwKGkpLGE9by50b29sdGlwLHRoaXMuX2FkZERlc2NyaWJlZEJ5KGksYS5hdHRyKFwiaWRcIikpLGEuZmluZChcIi51aS10b29sdGlwLWNvbnRlbnRcIikuaHRtbChzKSx0aGlzLmxpdmVSZWdpb24uY2hpbGRyZW4oKS5oaWRlKCksaD10KFwiPGRpdj5cIikuaHRtbChhLmZpbmQoXCIudWktdG9vbHRpcC1jb250ZW50XCIpLmh0bWwoKSksaC5yZW1vdmVBdHRyKFwibmFtZVwiKS5maW5kKFwiW25hbWVdXCIpLnJlbW92ZUF0dHIoXCJuYW1lXCIpLGgucmVtb3ZlQXR0cihcImlkXCIpLmZpbmQoXCJbaWRdXCIpLnJlbW92ZUF0dHIoXCJpZFwiKSxoLmFwcGVuZFRvKHRoaXMubGl2ZVJlZ2lvbiksdGhpcy5vcHRpb25zLnRyYWNrJiZlJiYvXm1vdXNlLy50ZXN0KGUudHlwZSk/KHRoaXMuX29uKHRoaXMuZG9jdW1lbnQse21vdXNlbW92ZTpufSksbihlKSk6YS5wb3NpdGlvbih0LmV4dGVuZCh7b2Y6aX0sdGhpcy5vcHRpb25zLnBvc2l0aW9uKSksYS5oaWRlKCksdGhpcy5fc2hvdyhhLHRoaXMub3B0aW9ucy5zaG93KSx0aGlzLm9wdGlvbnMudHJhY2smJnRoaXMub3B0aW9ucy5zaG93JiZ0aGlzLm9wdGlvbnMuc2hvdy5kZWxheSYmKHI9dGhpcy5kZWxheWVkU2hvdz1zZXRJbnRlcnZhbChmdW5jdGlvbigpe2EuaXMoXCI6dmlzaWJsZVwiKSYmKG4obC5vZiksY2xlYXJJbnRlcnZhbChyKSl9LHQuZnguaW50ZXJ2YWwpKSx0aGlzLl90cmlnZ2VyKFwib3BlblwiLGUse3Rvb2x0aXA6YX0pfX0sX3JlZ2lzdGVyQ2xvc2VIYW5kbGVyczpmdW5jdGlvbihlLGkpe3ZhciBzPXtrZXl1cDpmdW5jdGlvbihlKXtpZihlLmtleUNvZGU9PT10LnVpLmtleUNvZGUuRVNDQVBFKXt2YXIgcz10LkV2ZW50KGUpO3MuY3VycmVudFRhcmdldD1pWzBdLHRoaXMuY2xvc2UocywhMCl9fX07aVswXSE9PXRoaXMuZWxlbWVudFswXSYmKHMucmVtb3ZlPWZ1bmN0aW9uKCl7dGhpcy5fcmVtb3ZlVG9vbHRpcCh0aGlzLl9maW5kKGkpLnRvb2x0aXApfSksZSYmXCJtb3VzZW92ZXJcIiE9PWUudHlwZXx8KHMubW91c2VsZWF2ZT1cImNsb3NlXCIpLGUmJlwiZm9jdXNpblwiIT09ZS50eXBlfHwocy5mb2N1c291dD1cImNsb3NlXCIpLHRoaXMuX29uKCEwLGkscyl9LGNsb3NlOmZ1bmN0aW9uKGUpe3ZhciBpLHM9dGhpcyxuPXQoZT9lLmN1cnJlbnRUYXJnZXQ6dGhpcy5lbGVtZW50KSxvPXRoaXMuX2ZpbmQobik7cmV0dXJuIG8/KGk9by50b29sdGlwLG8uY2xvc2luZ3x8KGNsZWFySW50ZXJ2YWwodGhpcy5kZWxheWVkU2hvdyksbi5kYXRhKFwidWktdG9vbHRpcC10aXRsZVwiKSYmIW4uYXR0cihcInRpdGxlXCIpJiZuLmF0dHIoXCJ0aXRsZVwiLG4uZGF0YShcInVpLXRvb2x0aXAtdGl0bGVcIikpLHRoaXMuX3JlbW92ZURlc2NyaWJlZEJ5KG4pLG8uaGlkaW5nPSEwLGkuc3RvcCghMCksdGhpcy5faGlkZShpLHRoaXMub3B0aW9ucy5oaWRlLGZ1bmN0aW9uKCl7cy5fcmVtb3ZlVG9vbHRpcCh0KHRoaXMpKX0pLG4ucmVtb3ZlRGF0YShcInVpLXRvb2x0aXAtb3BlblwiKSx0aGlzLl9vZmYobixcIm1vdXNlbGVhdmUgZm9jdXNvdXQga2V5dXBcIiksblswXSE9PXRoaXMuZWxlbWVudFswXSYmdGhpcy5fb2ZmKG4sXCJyZW1vdmVcIiksdGhpcy5fb2ZmKHRoaXMuZG9jdW1lbnQsXCJtb3VzZW1vdmVcIiksZSYmXCJtb3VzZWxlYXZlXCI9PT1lLnR5cGUmJnQuZWFjaCh0aGlzLnBhcmVudHMsZnVuY3Rpb24oZSxpKXt0KGkuZWxlbWVudCkuYXR0cihcInRpdGxlXCIsaS50aXRsZSksZGVsZXRlIHMucGFyZW50c1tlXX0pLG8uY2xvc2luZz0hMCx0aGlzLl90cmlnZ2VyKFwiY2xvc2VcIixlLHt0b29sdGlwOml9KSxvLmhpZGluZ3x8KG8uY2xvc2luZz0hMSkpLHZvaWQgMCk6KG4ucmVtb3ZlRGF0YShcInVpLXRvb2x0aXAtb3BlblwiKSx2b2lkIDApfSxfdG9vbHRpcDpmdW5jdGlvbihlKXt2YXIgaT10KFwiPGRpdj5cIikuYXR0cihcInJvbGVcIixcInRvb2x0aXBcIikscz10KFwiPGRpdj5cIikuYXBwZW5kVG8oaSksbj1pLnVuaXF1ZUlkKCkuYXR0cihcImlkXCIpO3JldHVybiB0aGlzLl9hZGRDbGFzcyhzLFwidWktdG9vbHRpcC1jb250ZW50XCIpLHRoaXMuX2FkZENsYXNzKGksXCJ1aS10b29sdGlwXCIsXCJ1aS13aWRnZXQgdWktd2lkZ2V0LWNvbnRlbnRcIiksaS5hcHBlbmRUbyh0aGlzLl9hcHBlbmRUbyhlKSksdGhpcy50b29sdGlwc1tuXT17ZWxlbWVudDplLHRvb2x0aXA6aX19LF9maW5kOmZ1bmN0aW9uKHQpe3ZhciBlPXQuZGF0YShcInVpLXRvb2x0aXAtaWRcIik7cmV0dXJuIGU/dGhpcy50b29sdGlwc1tlXTpudWxsfSxfcmVtb3ZlVG9vbHRpcDpmdW5jdGlvbih0KXt0LnJlbW92ZSgpLGRlbGV0ZSB0aGlzLnRvb2x0aXBzW3QuYXR0cihcImlkXCIpXX0sX2FwcGVuZFRvOmZ1bmN0aW9uKHQpe3ZhciBlPXQuY2xvc2VzdChcIi51aS1mcm9udCwgZGlhbG9nXCIpO3JldHVybiBlLmxlbmd0aHx8KGU9dGhpcy5kb2N1bWVudFswXS5ib2R5KSxlfSxfZGVzdHJveTpmdW5jdGlvbigpe3ZhciBlPXRoaXM7dC5lYWNoKHRoaXMudG9vbHRpcHMsZnVuY3Rpb24oaSxzKXt2YXIgbj10LkV2ZW50KFwiYmx1clwiKSxvPXMuZWxlbWVudDtuLnRhcmdldD1uLmN1cnJlbnRUYXJnZXQ9b1swXSxlLmNsb3NlKG4sITApLHQoXCIjXCIraSkucmVtb3ZlKCksby5kYXRhKFwidWktdG9vbHRpcC10aXRsZVwiKSYmKG8uYXR0cihcInRpdGxlXCIpfHxvLmF0dHIoXCJ0aXRsZVwiLG8uZGF0YShcInVpLXRvb2x0aXAtdGl0bGVcIikpLG8ucmVtb3ZlRGF0YShcInVpLXRvb2x0aXAtdGl0bGVcIikpfSksdGhpcy5saXZlUmVnaW9uLnJlbW92ZSgpfX0pLHQudWlCYWNrQ29tcGF0IT09ITEmJnQud2lkZ2V0KFwidWkudG9vbHRpcFwiLHQudWkudG9vbHRpcCx7b3B0aW9uczp7dG9vbHRpcENsYXNzOm51bGx9LF90b29sdGlwOmZ1bmN0aW9uKCl7dmFyIHQ9dGhpcy5fc3VwZXJBcHBseShhcmd1bWVudHMpO3JldHVybiB0aGlzLm9wdGlvbnMudG9vbHRpcENsYXNzJiZ0LnRvb2x0aXAuYWRkQ2xhc3ModGhpcy5vcHRpb25zLnRvb2x0aXBDbGFzcyksdH19KSx0LnVpLnRvb2x0aXB9KTsiLCIvKiFcbiAqIEBmaWxlT3ZlcnZpZXcgVG91Y2hTd2lwZSAtIGpRdWVyeSBQbHVnaW5cbiAqIEB2ZXJzaW9uIDEuNi4xOFxuICpcbiAqIEBhdXRob3IgTWF0dCBCcnlzb24gaHR0cDovL3d3dy5naXRodWIuY29tL21hdHRicnlzb25cbiAqIEBzZWUgaHR0cHM6Ly9naXRodWIuY29tL21hdHRicnlzb24vVG91Y2hTd2lwZS1KcXVlcnktUGx1Z2luXG4gKiBAc2VlIGh0dHA6Ly9sYWJzLnJhbXBpbnRlcmFjdGl2ZS5jby51ay90b3VjaFN3aXBlL1xuICogQHNlZSBodHRwOi8vcGx1Z2lucy5qcXVlcnkuY29tL3Byb2plY3QvdG91Y2hTd2lwZVxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCAoYykgMjAxMC0yMDE1IE1hdHQgQnJ5c29uXG4gKiBEdWFsIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgb3IgR1BMIFZlcnNpb24gMiBsaWNlbnNlcy5cbiAqXG4gKi9cblxuLypcbiAqXG4gKiBDaGFuZ2Vsb2dcbiAqICREYXRlOiAyMDEwLTEyLTEyIChXZWQsIDEyIERlYyAyMDEwKSAkXG4gKiAkdmVyc2lvbjogMS4wLjBcbiAqICR2ZXJzaW9uOiAxLjAuMSAtIHJlbW92ZWQgbXVsdGlieXRlIGNvbW1lbnRzXG4gKlxuICogJERhdGU6IDIwMTEtMjEtMDIgKE1vbiwgMjEgRmViIDIwMTEpICRcbiAqICR2ZXJzaW9uOiAxLjEuMCBcdC0gYWRkZWQgYWxsb3dQYWdlU2Nyb2xsIHByb3BlcnR5IHRvIGFsbG93IHN3aXBpbmcgYW5kIHNjcm9sbGluZyBvZiBwYWdlXG4gKlx0XHRcdFx0XHQtIGNoYW5nZWQgaGFuZGxlciBzaWduYXR1cmVzIHNvIG9uZSBoYW5kbGVyIGNhbiBiZSB1c2VkIGZvciBtdWx0aXBsZSBldmVudHNcbiAqICREYXRlOiAyMDExLTIzLTAyIChXZWQsIDIzIEZlYiAyMDExKSAkXG4gKiAkdmVyc2lvbjogMS4yLjAgXHQtIGFkZGVkIGNsaWNrIGhhbmRsZXIuIFRoaXMgaXMgZmlyZWQgaWYgdGhlIHVzZXIgc2ltcGx5IGNsaWNrcyBhbmQgZG9lcyBub3Qgc3dpcGUuIFRoZSBldmVudCBvYmplY3QgYW5kIGNsaWNrIHRhcmdldCBhcmUgcGFzc2VkIHRvIGhhbmRsZXIuXG4gKlx0XHRcdFx0XHQtIElmIHlvdSB1c2UgdGhlIGh0dHA6Ly9jb2RlLmdvb2dsZS5jb20vcC9qcXVlcnktdWktZm9yLWlwYWQtYW5kLWlwaG9uZS8gcGx1Z2luLCB5b3UgY2FuIGFsc28gYXNzaWduIGpRdWVyeSBtb3VzZSBldmVudHMgdG8gY2hpbGRyZW4gb2YgYSB0b3VjaFN3aXBlIG9iamVjdC5cbiAqICR2ZXJzaW9uOiAxLjIuMSBcdC0gcmVtb3ZlZCBjb25zb2xlIGxvZyFcbiAqXG4gKiAkdmVyc2lvbjogMS4yLjIgXHQtIEZpeGVkIGJ1ZyB3aGVyZSBzY29wZSB3YXMgbm90IHByZXNlcnZlZCBpbiBjYWxsYmFjayBtZXRob2RzLlxuICpcbiAqICREYXRlOiAyMDExLTI4LTA0IChUaHVycywgMjggQXByaWwgMjAxMSkgJFxuICogJHZlcnNpb246IDEuMi40IFx0LSBDaGFuZ2VkIGxpY2VuY2UgdGVybXMgdG8gYmUgTUlUIG9yIEdQTCBpbmxpbmUgd2l0aCBqUXVlcnkuIEFkZGVkIGNoZWNrIGZvciBzdXBwb3J0IG9mIHRvdWNoIGV2ZW50cyB0byBzdG9wIG5vbiBjb21wYXRpYmxlIGJyb3dzZXJzIGVycm9yaW5nLlxuICpcbiAqICREYXRlOiAyMDExLTI3LTA5IChUdWVzLCAyNyBTZXB0ZW1iZXIgMjAxMSkgJFxuICogJHZlcnNpb246IDEuMi41IFx0LSBBZGRlZCBzdXBwb3J0IGZvciB0ZXN0aW5nIHN3aXBlcyB3aXRoIG1vdXNlIG9uIGRlc2t0b3AgYnJvd3NlciAodGhhbmtzIHRvIGh0dHBzOi8vZ2l0aHViLmNvbS9qb2VsaHkpXG4gKlxuICogJERhdGU6IDIwMTItMTQtMDUgKE1vbiwgMTQgTWF5IDIwMTIpICRcbiAqICR2ZXJzaW9uOiAxLjIuNiBcdC0gQWRkZWQgdGltZVRocmVzaG9sZCBiZXR3ZWVuIHN0YXJ0IGFuZCBlbmQgdG91Y2gsIHNvIHVzZXIgY2FuIGlnbm9yZSBzbG93IHN3aXBlcyAodGhhbmtzIHRvIE1hcmsgQ2hhc2UpLiBEZWZhdWx0IGlzIG51bGwsIGFsbCBzd2lwZXMgYXJlIGRldGVjdGVkXG4gKlxuICogJERhdGU6IDIwMTItMDUtMDYgKFR1ZXMsIDA1IEp1bmUgMjAxMikgJFxuICogJHZlcnNpb246IDEuMi43IFx0LSBDaGFuZ2VkIHRpbWUgdGhyZXNob2xkIHRvIGhhdmUgbnVsbCBkZWZhdWx0IGZvciBiYWNrd2FyZHMgY29tcGF0aWJpbGl0eS4gQWRkZWQgZHVyYXRpb24gcGFyYW0gcGFzc2VkIGJhY2sgaW4gZXZlbnRzLCBhbmQgcmVmYWN0b3JlZCBob3cgdGltZSBpcyBoYW5kbGVkLlxuICpcbiAqICREYXRlOiAyMDEyLTA1LTA2IChUdWVzLCAwNSBKdW5lIDIwMTIpICRcbiAqICR2ZXJzaW9uOiAxLjIuOCBcdC0gQWRkZWQgdGhlIHBvc3NpYmlsaXR5IHRvIHJldHVybiBhIHZhbHVlIGxpa2UgbnVsbCBvciBmYWxzZSBpbiB0aGUgdHJpZ2dlciBjYWxsYmFjay4gSW4gdGhhdCB3YXkgd2UgY2FuIGNvbnRyb2wgd2hlbiB0aGUgdG91Y2ggc3RhcnQvbW92ZSBzaG91bGQgdGFrZSBlZmZlY3Qgb3Igbm90IChzaW1wbHkgYnkgcmV0dXJuaW5nIGluIHNvbWUgY2FzZXMgcmV0dXJuIG51bGw7IG9yIHJldHVybiBmYWxzZTspIFRoaXMgZWZmZWN0cyB0aGUgb250b3VjaHN0YXJ0L29udG91Y2htb3ZlIGV2ZW50LlxuICpcbiAqICREYXRlOiAyMDEyLTA2LTA2IChXZWQsIDA2IEp1bmUgMjAxMikgJFxuICogJHZlcnNpb246IDEuMy4wIFx0LSBSZWZhY3RvcmVkIHdob2xlIHBsdWdpbiB0byBhbGxvdyBmb3IgbWV0aG9kcyB0byBiZSBleGVjdXRlZCwgYXMgd2VsbCBhcyBleHBvc2VkIGRlZmF1bHRzIGZvciB1c2VyIG92ZXJyaWRlLiBBZGRlZCAnZW5hYmxlJywgJ2Rpc2FibGUnLCBhbmQgJ2Rlc3Ryb3knIG1ldGhvZHNcbiAqXG4gKiAkRGF0ZTogMjAxMi0wNS0wNiAoRnJpLCAwNSBKdW5lIDIwMTIpICRcbiAqICR2ZXJzaW9uOiAxLjMuMSBcdC0gQnVnIGZpeGVzICAtIGJpbmQoKSB3aXRoIGZhbHNlIGFzIGxhc3QgYXJndW1lbnQgaXMgbm8gbG9uZ2VyIHN1cHBvcnRlZCBpbiBqUXVlcnkgMS42LCBhbHNvLCBpZiB5b3UganVzdCBjbGljaywgdGhlIGR1cmF0aW9uIGlzIG5vdyByZXR1cm5lZCBjb3JyZWN0bHkuXG4gKlxuICogJERhdGU6IDIwMTItMjktMDcgKFN1biwgMjkgSnVseSAyMDEyKSAkXG4gKiAkdmVyc2lvbjogMS4zLjJcdC0gQWRkZWQgZmFsbGJhY2tUb01vdXNlRXZlbnRzIG9wdGlvbiB0byBOT1QgY2FwdHVyZSBtb3VzZSBldmVudHMgb24gbm9uIHRvdWNoIGRldmljZXMuXG4gKiBcdFx0XHQtIEFkZGVkIFwiYWxsXCIgZmluZ2VycyB2YWx1ZSB0byB0aGUgZmluZ2VycyBwcm9wZXJ0eSwgc28gYW55IGNvbWJpbmF0aW9uIG9mIGZpbmdlcnMgdHJpZ2dlcnMgdGhlIHN3aXBlLCBhbGxvd2luZyBldmVudCBoYW5kbGVycyB0byBjaGVjayB0aGUgZmluZ2VyIGNvdW50XG4gKlxuICogJERhdGU6IDIwMTItMDktMDggKFRodXJzLCA5IEF1ZyAyMDEyKSAkXG4gKiAkdmVyc2lvbjogMS4zLjNcdC0gQ29kZSB0aWR5IHByZXAgZm9yIG1pbiB2ZXJzaW9uXG4gKlxuICogJERhdGU6IDIwMTItMDQtMTAgKHdlZCwgNCBPY3QgMjAxMikgJFxuICogJHZlcnNpb246IDEuNC4wXHQtIEFkZGVkIHBpbmNoIHN1cHBvcnQsIHBpbmNoSW4gYW5kIHBpbmNoT3V0XG4gKlxuICogJERhdGU6IDIwMTItMTEtMTAgKFRodXJzLCAxMSBPY3QgMjAxMikgJFxuICogJHZlcnNpb246IDEuNS4wXHQtIEFkZGVkIGV4Y2x1ZGVkRWxlbWVudHMsIGEganF1ZXJ5IHNlbGVjdG9yIHRoYXQgc3BlY2lmaWVzIGNoaWxkIGVsZW1lbnRzIHRoYXQgZG8gTk9UIHRyaWdnZXIgc3dpcGVzLiBCeSBkZWZhdWx0LCB0aGlzIGlzIC5ub1N3aXBlXG4gKlxuICogJERhdGU6IDIwMTItMjItMTAgKE1vbiwgMjIgT2N0IDIwMTIpICRcbiAqICR2ZXJzaW9uOiAxLjUuMVx0LSBGaXhlZCBidWcgd2l0aCBqUXVlcnkgMS44IGFuZCB0cmFpbGluZyBjb21tYSBpbiBleGNsdWRlZEVsZW1lbnRzXG4gKlx0XHRcdFx0XHQtIEZpeGVkIGJ1ZyB3aXRoIElFIGFuZCBldmVudFByZXZlbnREZWZhdWx0KClcbiAqICREYXRlOiAyMDEzLTAxLTEyIChGcmksIDEyIEphbiAyMDEzKSAkXG4gKiAkdmVyc2lvbjogMS42LjBcdC0gRml4ZWQgYnVncyB3aXRoIHBpbmNoaW5nLCBtYWlubHkgd2hlbiBib3RoIHBpbmNoIGFuZCBzd2lwZSBlbmFibGVkLCBhcyB3ZWxsIGFzIGFkZGluZyB0aW1lIHRocmVzaG9sZCBmb3IgbXVsdGlmaW5nZXIgZ2VzdHVyZXMsIHNvIHJlbGVhc2luZyBvbmUgZmluZ2VyIGJlb2ZyZSB0aGUgb3RoZXIgZG9lc250IHRyaWdnZXIgYXMgc2luZ2xlIGZpbmdlciBnZXN0dXJlLlxuICpcdFx0XHRcdFx0LSBtYWRlIHRoZSBkZW1vIHNpdGUgYWxsIHN0YXRpYyBsb2NhbCBIVE1MIHBhZ2VzIHNvIHRoZXkgY2FuIGJlIHJ1biBsb2NhbGx5IGJ5IGEgZGV2ZWxvcGVyXG4gKlx0XHRcdFx0XHQtIGFkZGVkIGpzRG9jIGNvbW1lbnRzIGFuZCBhZGRlZCBkb2N1bWVudGF0aW9uIGZvciB0aGUgcGx1Z2luXG4gKlx0XHRcdFx0XHQtIGNvZGUgdGlkeVxuICpcdFx0XHRcdFx0LSBhZGRlZCB0cmlnZ2VyT25Ub3VjaExlYXZlIHByb3BlcnR5IHRoYXQgd2lsbCBlbmQgdGhlIGV2ZW50IHdoZW4gdGhlIHVzZXIgc3dpcGVzIG9mZiB0aGUgZWxlbWVudC5cbiAqICREYXRlOiAyMDEzLTAzLTIzIChTYXQsIDIzIE1hciAyMDEzKSAkXG4gKiAkdmVyc2lvbjogMS42LjFcdC0gQWRkZWQgc3VwcG9ydCBmb3IgaWU4IHRvdWNoIGV2ZW50c1xuICogJHZlcnNpb246IDEuNi4yXHQtIEFkZGVkIHN1cHBvcnQgZm9yIGV2ZW50cyBiaW5kaW5nIHdpdGggb24gLyBvZmYgLyBiaW5kIGluIGpRIGZvciBhbGwgY2FsbGJhY2sgbmFtZXMuXG4gKiAgICAgICAgICAgICAgICAgICAtIERlcHJlY2F0ZWQgdGhlICdjbGljaycgaGFuZGxlciBpbiBmYXZvdXIgb2YgdGFwLlxuICogICAgICAgICAgICAgICAgICAgLSBhZGRlZCBjYW5jZWxUaHJlc2hvbGQgcHJvcGVydHlcbiAqICAgICAgICAgICAgICAgICAgIC0gYWRkZWQgb3B0aW9uIG1ldGhvZCB0byB1cGRhdGUgaW5pdCBvcHRpb25zIGF0IHJ1bnRpbWVcbiAqICR2ZXJzaW9uIDEuNi4zICAgIC0gYWRkZWQgZG91YmxldGFwLCBsb25ndGFwIGV2ZW50cyBhbmQgbG9uZ1RhcFRocmVzaG9sZCwgZG91YmxlVGFwVGhyZXNob2xkIHByb3BlcnR5XG4gKlxuICogJERhdGU6IDIwMTMtMDQtMDQgKFRodXJzLCAwNCBBcHJpbCAyMDEzKSAkXG4gKiAkdmVyc2lvbiAxLjYuNCAgICAtIEZpeGVkIGJ1ZyB3aXRoIGNhbmNlbFRocmVzaG9sZCBpbnRyb2R1Y2VkIGluIDEuNi4zLCB3aGVyZSBzd2lwZSBzdGF0dXMgbm8gbG9uZ2VyIGZpcmVkIHN0YXJ0IGV2ZW50LCBhbmQgc3RvcHBlZCBvbmNlIHN3aXBpbmcgYmFjay5cbiAqXG4gKiAkRGF0ZTogMjAxMy0wOC0yNCAoU2F0LCAyNCBBdWcgMjAxMykgJFxuICogJHZlcnNpb24gMS42LjUgICAgLSBNZXJnZWQgYSBmZXcgcHVsbCByZXF1ZXN0cyBmaXhpbmcgdmFyaW91cyBidWdzLCBhZGRlZCBBTUQgc3VwcG9ydC5cbiAqXG4gKiAkRGF0ZTogMjAxNC0wNi0wNCAoV2VkLCAwNCBKdW5lIDIwMTQpICRcbiAqICR2ZXJzaW9uIDEuNi42IFx0LSBNZXJnZSBvZiBwdWxsIHJlcXVlc3RzLlxuICogICAgXHRcdFx0XHQtIElFMTAgdG91Y2ggc3VwcG9ydFxuICogICAgXHRcdFx0XHQtIE9ubHkgcHJldmVudCBkZWZhdWx0IGV2ZW50IGhhbmRsaW5nIG9uIHZhbGlkIHN3aXBlXG4gKiAgICBcdFx0XHRcdC0gU2VwYXJhdGUgbGljZW5zZS9jaGFuZ2Vsb2cgY29tbWVudFxuICogICAgXHRcdFx0XHQtIERldGVjdCBpZiB0aGUgc3dpcGUgaXMgdmFsaWQgYXQgdGhlIGVuZCBvZiB0aGUgdG91Y2ggZXZlbnQuXG4gKiAgICBcdFx0XHRcdC0gUGFzcyBmaW5nZXJkYXRhIHRvIGV2ZW50IGhhbmRsZXJzLlxuICogICAgXHRcdFx0XHQtIEFkZCAnaG9sZCcgZ2VzdHVyZVxuICogICAgXHRcdFx0XHQtIEJlIG1vcmUgdG9sZXJhbnQgYWJvdXQgdGhlIHRhcCBkaXN0YW5jZVxuICogICAgXHRcdFx0XHQtIFR5cG9zIGFuZCBtaW5vciBmaXhlc1xuICpcbiAqICREYXRlOiAyMDE1LTIyLTAxIChUaHVycywgMjIgSmFuIDIwMTUpICRcbiAqICR2ZXJzaW9uIDEuNi43ICAgIC0gQWRkZWQgcGF0Y2ggZnJvbSBodHRwczovL2dpdGh1Yi5jb20vbWF0dGJyeXNvbi9Ub3VjaFN3aXBlLUpxdWVyeS1QbHVnaW4vaXNzdWVzLzIwNiB0byBmaXggbWVtb3J5IGxlYWtcbiAqXG4gKiAkRGF0ZTogMjAxNS0yLTIgKE1vbiwgMiBGZWIgMjAxNSkgJFxuICogJHZlcnNpb24gMS42LjggICAgLSBBZGRlZCBwcmV2ZW50RGVmYXVsdEV2ZW50cyBvcHRpb24gdG8gcHJveHkgZXZlbnRzIHJlZ2FyZGxlc3MuXG4gKlx0XHRcdFx0XHQtIEZpeGVkIGlzc3VlIHdpdGggc3dpcGUgYW5kIHBpbmNoIG5vdCB0cmlnZ2VyaW5nIGF0IHRoZSBzYW1lIHRpbWVcbiAqXG4gKiAkRGF0ZTogMjAxNS05LTYgKFR1ZXMsIDkgSnVuZSAyMDE1KSAkXG4gKiAkdmVyc2lvbiAxLjYuOSAgICAtIEFkZGVkIFBSIGZyb20gamRhbHRvbi9oeWJyaWQgdG8gZml4IHBvaW50ZXIgZXZlbnRzXG4gKlx0XHRcdFx0XHQtIEFkZGVkIHNjcm9sbGluZyBkZW1vXG4gKlx0XHRcdFx0XHQtIEFkZGVkIHZlcnNpb24gcHJvcGVydHkgdG8gcGx1Z2luXG4gKlxuICogJERhdGU6IDIwMTUtMS0xMCAoV2VkLCAxIE9jdG9iZXIgMjAxNSkgJFxuICogJHZlcnNpb24gMS42LjEwICAgIC0gQWRkZWQgUFIgZnJvbSBiZWF0c3BhY2UgdG8gZml4IHRhcCBldmVudHNcbiAqICR2ZXJzaW9uIDEuNi4xMSAgICAtIEFkZGVkIFBScyBmcm9tIGluZHJpLWluZHJpICggRG9jIHRpZHl1cCksIGtraXJzY2hlICggQm93ZXIgdGlkeSB1cCApLCBVemlUZWNoIChwcmV2ZW50RGVmYXVsdEV2ZW50cyBmaXhlcyApXG4gKlx0XHRcdFx0XHQgLSBBbGxvd2VkIHNldHRpbmcgbXVsdGlwbGUgb3B0aW9ucyB2aWEgLnN3aXBlKFwib3B0aW9uc1wiLCBvcHRpb25zX2hhc2gpIGFuZCBtb3JlIHNpbXBseSAuc3dpcGUob3B0aW9uc19oYXNoKSBvciBleGlzaXRuZyBpbnN0YW5jZXNcbiAqICR2ZXJzaW9uIDEuNi4xMiAgICAtIEZpeGVkIGJ1ZyB3aXRoIG11bHRpIGZpbmdlciByZWxlYXNlcyBhYm92ZSAyIG5vdCB0cmlnZ2VyaW5nIGV2ZW50c1xuICpcbiAqICREYXRlOiAyMDE1LTEyLTE4IChGcmksIDE4IERlY2VtYmVyIDIwMTUpICRcbiAqICR2ZXJzaW9uIDEuNi4xMyAgICAtIEFkZGVkIFBSc1xuICogICAgICAgICAgICAgICAgICAgIC0gRml4ZWQgIzI2NyBhbGxvd1BhZ2VTY3JvbGwgbm90IHdvcmtpbmcgY29ycmVjdGx5XG4gKiAkdmVyc2lvbiAxLjYuMTQgICAgLSBGaXhlZCAjMjIwIC8gIzI0OCBkb3VibGV0YXAgbm90IGZpcmluZyB3aXRoIHN3aXBlcywgIzIyMyBjb21tb25KUyBjb21wYXRpYmxlXG4gKiAkdmVyc2lvbiAxLjYuMTUgICAgLSBNb3JlIGJ1ZyBmaXhlc1xuICpcbiAqICREYXRlOiAyMDE2LTA0LTI5IChGcmksIDI5IEFwcmlsIDIwMTYpICRcbiAqICR2ZXJzaW9uIDEuNi4xNiAgICAtIFN3aXBlcyB3aXRoIDAgZGlzdGFuY2Ugbm93IGFsbG93IGRlZmF1bHQgZXZlbnRzIHRvIHRyaWdnZXIuICBTbyB0YXBwaW5nIGFueSBmb3JtIGVsZW1lbnRzIG9yIEEgdGFncyB3aWxsIGFsbG93IGRlZmF1bHQgaW50ZXJhY3Rpb24sIGJ1dCBzd2lwaW5nIHdpbGwgdHJpZ2dlciBhIHN3aXBlLlxuICogICAgICAgICAgICAgICAgICAgICAgIFJlbW92ZWQgdGhlIGEsIGlucHV0LCBzZWxlY3QgZXRjIGZyb20gdGhlIGV4Y2x1ZGVkIENoaWxkcmVuIGxpc3QgYXMgdGhlIDAgZGlzdGFuY2UgdGFwIHNvbHZlcyB0aGF0IGlzc3VlLlxuICogJERhdGU6IDIwMTYtMDUtMTkgIChGcmksIDI5IEFwcmlsIDIwMTYpICRcbiAqICR2ZXJzaW9uIDEuNi4xNyAgICAgLSBGaXhlZCBjb250ZXh0IGlzc3VlIHdoZW4gY2FsbGluZyBpbnN0YW5jZSBtZXRob2RzIHZpYSAkKFwic2VsZWN0b3JcIikuc3dpcGUoXCJtZXRob2RcIik7XG4gKiAkdmVyc2lvbiAxLjYuMTggICAgIC0gbm93IGhvbm9ycyBmYWxsYmFja1RvTW91c2VFdmVudHM9ZmFsc2UgZm9yIE1TIFBvaW50ZXIgZXZlbnRzIHdoZW4gYSBNb3VzZSBpcyB1c2VkLlxuICogXG4gKiAkRGF0ZTogMjAxOC0wOS0xNyAgKE1vbiwgMTcgU2VwdGVtYmVyIDIwMTgpICRcbiAqICR2ZXJzaW9uIDEuNi4xOSAgICAgLSByZXBsYWNlZCBqUXVlcnkgYmluZCB3aXRoIG9uLCByZXBsYWNlZCBkZXByZWNhdGVkIGBuYXZpZ2F0b3IucG9pbnRlckV2ZW50c2Agd2l0aCBgd2luZG93LlBvaW50ZXJFdmVudHNgXG5cbiAqL1xuXG4vKipcbiAqIFNlZSAoaHR0cDovL2pxdWVyeS5jb20vKS5cbiAqIEBuYW1lICRcbiAqIEBjbGFzc1xuICogU2VlIHRoZSBqUXVlcnkgTGlicmFyeSAgKGh0dHA6Ly9qcXVlcnkuY29tLykgZm9yIGZ1bGwgZGV0YWlscy4gIFRoaXMganVzdFxuICogZG9jdW1lbnRzIHRoZSBmdW5jdGlvbiBhbmQgY2xhc3NlcyB0aGF0IGFyZSBhZGRlZCB0byBqUXVlcnkgYnkgdGhpcyBwbHVnLWluLlxuICovXG5cbi8qKlxuICogU2VlIChodHRwOi8vanF1ZXJ5LmNvbS8pXG4gKiBAbmFtZSBmblxuICogQGNsYXNzXG4gKiBTZWUgdGhlIGpRdWVyeSBMaWJyYXJ5ICAoaHR0cDovL2pxdWVyeS5jb20vKSBmb3IgZnVsbCBkZXRhaWxzLiAgVGhpcyBqdXN0XG4gKiBkb2N1bWVudHMgdGhlIGZ1bmN0aW9uIGFuZCBjbGFzc2VzIHRoYXQgYXJlIGFkZGVkIHRvIGpRdWVyeSBieSB0aGlzIHBsdWctaW4uXG4gKiBAbWVtYmVyT2YgJFxuICovXG5cblxuKGZ1bmN0aW9uKGZhY3RvcnkpIHtcbiAgaWYgKHR5cGVvZiBkZWZpbmUgPT09ICdmdW5jdGlvbicgJiYgZGVmaW5lLmFtZCAmJiBkZWZpbmUuYW1kLmpRdWVyeSkge1xuICAgIC8vIEFNRC4gUmVnaXN0ZXIgYXMgYW5vbnltb3VzIG1vZHVsZS5cbiAgICBkZWZpbmUoWydqcXVlcnknXSwgZmFjdG9yeSk7XG4gIH0gZWxzZSBpZiAodHlwZW9mIG1vZHVsZSAhPT0gJ3VuZGVmaW5lZCcgJiYgbW9kdWxlLmV4cG9ydHMpIHtcbiAgICAvLyBDb21tb25KUyBNb2R1bGVcbiAgICBmYWN0b3J5KHJlcXVpcmUoXCJqcXVlcnlcIikpO1xuICB9IGVsc2Uge1xuICAgIC8vIEJyb3dzZXIgZ2xvYmFscy5cbiAgICBmYWN0b3J5KGpRdWVyeSk7XG4gIH1cbn0oZnVuY3Rpb24oJCkge1xuICBcInVzZSBzdHJpY3RcIjtcblxuICAvL0NvbnN0YW50c1xuICB2YXIgVkVSU0lPTiA9IFwiMS42LjE4XCIsXG4gICAgTEVGVCA9IFwibGVmdFwiLFxuICAgIFJJR0hUID0gXCJyaWdodFwiLFxuICAgIFVQID0gXCJ1cFwiLFxuICAgIERPV04gPSBcImRvd25cIixcbiAgICBJTiA9IFwiaW5cIixcbiAgICBPVVQgPSBcIm91dFwiLFxuXG4gICAgTk9ORSA9IFwibm9uZVwiLFxuICAgIEFVVE8gPSBcImF1dG9cIixcblxuICAgIFNXSVBFID0gXCJzd2lwZVwiLFxuICAgIFBJTkNIID0gXCJwaW5jaFwiLFxuICAgIFRBUCA9IFwidGFwXCIsXG4gICAgRE9VQkxFX1RBUCA9IFwiZG91YmxldGFwXCIsXG4gICAgTE9OR19UQVAgPSBcImxvbmd0YXBcIixcbiAgICBIT0xEID0gXCJob2xkXCIsXG5cbiAgICBIT1JJWk9OVEFMID0gXCJob3Jpem9udGFsXCIsXG4gICAgVkVSVElDQUwgPSBcInZlcnRpY2FsXCIsXG5cbiAgICBBTExfRklOR0VSUyA9IFwiYWxsXCIsXG5cbiAgICBET1VCTEVfVEFQX1RIUkVTSE9MRCA9IDEwLFxuXG4gICAgUEhBU0VfU1RBUlQgPSBcInN0YXJ0XCIsXG4gICAgUEhBU0VfTU9WRSA9IFwibW92ZVwiLFxuICAgIFBIQVNFX0VORCA9IFwiZW5kXCIsXG4gICAgUEhBU0VfQ0FOQ0VMID0gXCJjYW5jZWxcIixcblxuICAgIFNVUFBPUlRTX1RPVUNIID0gJ29udG91Y2hzdGFydCcgaW4gd2luZG93LFxuXG4gICAgU1VQUE9SVFNfUE9JTlRFUl9JRTEwID0gd2luZG93Lm5hdmlnYXRvci5tc1BvaW50ZXJFbmFibGVkICYmICF3aW5kb3cuUG9pbnRlckV2ZW50ICYmICFTVVBQT1JUU19UT1VDSCxcblxuICAgIFNVUFBPUlRTX1BPSU5URVIgPSAod2luZG93LlBvaW50ZXJFdmVudCB8fCB3aW5kb3cubmF2aWdhdG9yLm1zUG9pbnRlckVuYWJsZWQpICYmICFTVVBQT1JUU19UT1VDSCxcblxuICAgIFBMVUdJTl9OUyA9ICdUb3VjaFN3aXBlJztcblxuXG5cbiAgLyoqXG4gICogVGhlIGRlZmF1bHQgY29uZmlndXJhdGlvbiwgYW5kIGF2YWlsYWJsZSBvcHRpb25zIHRvIGNvbmZpZ3VyZSB0b3VjaCBzd2lwZSB3aXRoLlxuICAqIFlvdSBjYW4gc2V0IHRoZSBkZWZhdWx0IHZhbHVlcyBieSB1cGRhdGluZyBhbnkgb2YgdGhlIHByb3BlcnRpZXMgcHJpb3IgdG8gaW5zdGFudGlhdGlvbi5cbiAgKiBAbmFtZSAkLmZuLnN3aXBlLmRlZmF1bHRzXG4gICogQG5hbWVzcGFjZVxuICAqIEBwcm9wZXJ0eSB7aW50fSBbZmluZ2Vycz0xXSBUaGUgbnVtYmVyIG9mIGZpbmdlcnMgdG8gZGV0ZWN0IGluIGEgc3dpcGUuIEFueSBzd2lwZXMgdGhhdCBkbyBub3QgbWVldCB0aGlzIHJlcXVpcmVtZW50IHdpbGwgTk9UIHRyaWdnZXIgc3dpcGUgaGFuZGxlcnMuXG4gICogQHByb3BlcnR5IHtpbnR9IFt0aHJlc2hvbGQ9NzVdIFRoZSBudW1iZXIgb2YgcGl4ZWxzIHRoYXQgdGhlIHVzZXIgbXVzdCBtb3ZlIHRoZWlyIGZpbmdlciBieSBiZWZvcmUgaXQgaXMgY29uc2lkZXJlZCBhIHN3aXBlLlxuICAqIEBwcm9wZXJ0eSB7aW50fSBbY2FuY2VsVGhyZXNob2xkPW51bGxdIFRoZSBudW1iZXIgb2YgcGl4ZWxzIHRoYXQgdGhlIHVzZXIgbXVzdCBtb3ZlIHRoZWlyIGZpbmdlciBiYWNrIGZyb20gdGhlIG9yaWdpbmFsIHN3aXBlIGRpcmVjdGlvbiB0byBjYW5jZWwgdGhlIGdlc3R1cmUuXG4gICogQHByb3BlcnR5IHtpbnR9IFtwaW5jaFRocmVzaG9sZD0yMF0gVGhlIG51bWJlciBvZiBwaXhlbHMgdGhhdCB0aGUgdXNlciBtdXN0IHBpbmNoIHRoZWlyIGZpbmdlciBieSBiZWZvcmUgaXQgaXMgY29uc2lkZXJlZCBhIHBpbmNoLlxuICAqIEBwcm9wZXJ0eSB7aW50fSBbbWF4VGltZVRocmVzaG9sZD1udWxsXSBUaW1lLCBpbiBtaWxsaXNlY29uZHMsIGJldHdlZW4gdG91Y2hTdGFydCBhbmQgdG91Y2hFbmQgbXVzdCBOT1QgZXhjZWVkIGluIG9yZGVyIHRvIGJlIGNvbnNpZGVyZWQgYSBzd2lwZS5cbiAgKiBAcHJvcGVydHkge2ludH0gW2ZpbmdlclJlbGVhc2VUaHJlc2hvbGQ9MjUwXSBUaW1lIGluIG1pbGxpc2Vjb25kcyBiZXR3ZWVuIHJlbGVhc2luZyBtdWx0aXBsZSBmaW5nZXJzLiAgSWYgMiBmaW5nZXJzIGFyZSBkb3duLCBhbmQgYXJlIHJlbGVhc2VkIG9uZSBhZnRlciB0aGUgb3RoZXIsIGlmIHRoZXkgYXJlIHdpdGhpbiB0aGlzIHRocmVzaG9sZCwgaXQgY291bnRzIGFzIGEgc2ltdWx0YW5lb3VzIHJlbGVhc2UuXG4gICogQHByb3BlcnR5IHtpbnR9IFtsb25nVGFwVGhyZXNob2xkPTUwMF0gVGltZSBpbiBtaWxsaXNlY29uZHMgYmV0d2VlbiB0YXAgYW5kIHJlbGVhc2UgZm9yIGEgbG9uZyB0YXBcbiAgKiBAcHJvcGVydHkge2ludH0gW2RvdWJsZVRhcFRocmVzaG9sZD0yMDBdIFRpbWUgaW4gbWlsbGlzZWNvbmRzIGJldHdlZW4gMiB0YXBzIHRvIGNvdW50IGFzIGEgZG91YmxlIHRhcFxuICAqIEBwcm9wZXJ0eSB7ZnVuY3Rpb259IFtzd2lwZT1udWxsXSBBIGhhbmRsZXIgdG8gY2F0Y2ggYWxsIHN3aXBlcy4gU2VlIHtAbGluayAkLmZuLnN3aXBlI2V2ZW50OnN3aXBlfVxuICAqIEBwcm9wZXJ0eSB7ZnVuY3Rpb259IFtzd2lwZUxlZnQ9bnVsbF0gQSBoYW5kbGVyIHRoYXQgaXMgdHJpZ2dlcmVkIGZvciBcImxlZnRcIiBzd2lwZXMuIFNlZSB7QGxpbmsgJC5mbi5zd2lwZSNldmVudDpzd2lwZUxlZnR9XG4gICogQHByb3BlcnR5IHtmdW5jdGlvbn0gW3N3aXBlUmlnaHQ9bnVsbF0gQSBoYW5kbGVyIHRoYXQgaXMgdHJpZ2dlcmVkIGZvciBcInJpZ2h0XCIgc3dpcGVzLiBTZWUge0BsaW5rICQuZm4uc3dpcGUjZXZlbnQ6c3dpcGVSaWdodH1cbiAgKiBAcHJvcGVydHkge2Z1bmN0aW9ufSBbc3dpcGVVcD1udWxsXSBBIGhhbmRsZXIgdGhhdCBpcyB0cmlnZ2VyZWQgZm9yIFwidXBcIiBzd2lwZXMuIFNlZSB7QGxpbmsgJC5mbi5zd2lwZSNldmVudDpzd2lwZVVwfVxuICAqIEBwcm9wZXJ0eSB7ZnVuY3Rpb259IFtzd2lwZURvd249bnVsbF0gQSBoYW5kbGVyIHRoYXQgaXMgdHJpZ2dlcmVkIGZvciBcImRvd25cIiBzd2lwZXMuIFNlZSB7QGxpbmsgJC5mbi5zd2lwZSNldmVudDpzd2lwZURvd259XG4gICogQHByb3BlcnR5IHtmdW5jdGlvbn0gW3N3aXBlU3RhdHVzPW51bGxdIEEgaGFuZGxlciB0cmlnZ2VyZWQgZm9yIGV2ZXJ5IHBoYXNlIG9mIHRoZSBzd2lwZS4gU2VlIHtAbGluayAkLmZuLnN3aXBlI2V2ZW50OnN3aXBlU3RhdHVzfVxuICAqIEBwcm9wZXJ0eSB7ZnVuY3Rpb259IFtwaW5jaEluPW51bGxdIEEgaGFuZGxlciB0cmlnZ2VyZWQgZm9yIHBpbmNoIGluIGV2ZW50cy4gU2VlIHtAbGluayAkLmZuLnN3aXBlI2V2ZW50OnBpbmNoSW59XG4gICogQHByb3BlcnR5IHtmdW5jdGlvbn0gW3BpbmNoT3V0PW51bGxdIEEgaGFuZGxlciB0cmlnZ2VyZWQgZm9yIHBpbmNoIG91dCBldmVudHMuIFNlZSB7QGxpbmsgJC5mbi5zd2lwZSNldmVudDpwaW5jaE91dH1cbiAgKiBAcHJvcGVydHkge2Z1bmN0aW9ufSBbcGluY2hTdGF0dXM9bnVsbF0gQSBoYW5kbGVyIHRyaWdnZXJlZCBmb3IgZXZlcnkgcGhhc2Ugb2YgYSBwaW5jaC4gU2VlIHtAbGluayAkLmZuLnN3aXBlI2V2ZW50OnBpbmNoU3RhdHVzfVxuICAqIEBwcm9wZXJ0eSB7ZnVuY3Rpb259IFt0YXA9bnVsbF0gQSBoYW5kbGVyIHRyaWdnZXJlZCB3aGVuIGEgdXNlciBqdXN0IHRhcHMgb24gdGhlIGl0ZW0sIHJhdGhlciB0aGFuIHN3aXBlcyBpdC4gSWYgdGhleSBkbyBub3QgbW92ZSwgdGFwIGlzIHRyaWdnZXJlZCwgaWYgdGhleSBkbyBtb3ZlLCBpdCBpcyBub3QuXG4gICogQHByb3BlcnR5IHtmdW5jdGlvbn0gW2RvdWJsZVRhcD1udWxsXSBBIGhhbmRsZXIgdHJpZ2dlcmVkIHdoZW4gYSB1c2VyIGRvdWJsZSB0YXBzIG9uIHRoZSBpdGVtLiBUaGUgZGVsYXkgYmV0d2VlbiB0YXBzIGNhbiBiZSBzZXQgd2l0aCB0aGUgZG91YmxlVGFwVGhyZXNob2xkIHByb3BlcnR5LiBTZWUge0BsaW5rICQuZm4uc3dpcGUuZGVmYXVsdHMjZG91YmxlVGFwVGhyZXNob2xkfVxuICAqIEBwcm9wZXJ0eSB7ZnVuY3Rpb259IFtsb25nVGFwPW51bGxdIEEgaGFuZGxlciB0cmlnZ2VyZWQgd2hlbiBhIHVzZXIgbG9uZyB0YXBzIG9uIHRoZSBpdGVtLiBUaGUgZGVsYXkgYmV0d2VlbiBzdGFydCBhbmQgZW5kIGNhbiBiZSBzZXQgd2l0aCB0aGUgbG9uZ1RhcFRocmVzaG9sZCBwcm9wZXJ0eS4gU2VlIHtAbGluayAkLmZuLnN3aXBlLmRlZmF1bHRzI2xvbmdUYXBUaHJlc2hvbGR9XG4gICogQHByb3BlcnR5IChmdW5jdGlvbikgW2hvbGQ9bnVsbF0gQSBoYW5kbGVyIHRyaWdnZXJlZCB3aGVuIGEgdXNlciByZWFjaGVzIGxvbmdUYXBUaHJlc2hvbGQgb24gdGhlIGl0ZW0uIFNlZSB7QGxpbmsgJC5mbi5zd2lwZS5kZWZhdWx0cyNsb25nVGFwVGhyZXNob2xkfVxuICAqIEBwcm9wZXJ0eSB7Ym9vbGVhbn0gW3RyaWdnZXJPblRvdWNoRW5kPXRydWVdIElmIHRydWUsIHRoZSBzd2lwZSBldmVudHMgYXJlIHRyaWdnZXJlZCB3aGVuIHRoZSB0b3VjaCBlbmQgZXZlbnQgaXMgcmVjZWl2ZWQgKHVzZXIgcmVsZWFzZXMgZmluZ2VyKS4gIElmIGZhbHNlLCBpdCB3aWxsIGJlIHRyaWdnZXJlZCBvbiByZWFjaGluZyB0aGUgdGhyZXNob2xkLCBhbmQgdGhlbiBjYW5jZWwgdGhlIHRvdWNoIGV2ZW50IGF1dG9tYXRpY2FsbHkuXG4gICogQHByb3BlcnR5IHtib29sZWFufSBbdHJpZ2dlck9uVG91Y2hMZWF2ZT1mYWxzZV0gSWYgdHJ1ZSwgdGhlbiB3aGVuIHRoZSB1c2VyIGxlYXZlcyB0aGUgc3dpcGUgb2JqZWN0LCB0aGUgc3dpcGUgd2lsbCBlbmQgYW5kIHRyaWdnZXIgYXBwcm9wcmlhdGUgaGFuZGxlcnMuXG4gICogQHByb3BlcnR5IHtzdHJpbmd8dW5kZWZpbmVkfSBbYWxsb3dQYWdlU2Nyb2xsPSdhdXRvJ10gSG93IHRoZSBicm93c2VyIGhhbmRsZXMgcGFnZSBzY3JvbGxzIHdoZW4gdGhlIHVzZXIgaXMgc3dpcGluZyBvbiBhIHRvdWNoU3dpcGUgb2JqZWN0LiBTZWUge0BsaW5rICQuZm4uc3dpcGUucGFnZVNjcm9sbH0uICA8YnIvPjxici8+XG4gICAgICAgICAgICAgICAgICAgIDxjb2RlPlwiYXV0b1wiPC9jb2RlPiA6IGFsbCB1bmRlZmluZWQgc3dpcGVzIHdpbGwgY2F1c2UgdGhlIHBhZ2UgdG8gc2Nyb2xsIGluIHRoYXQgZGlyZWN0aW9uLiA8YnIvPlxuICAgICAgICAgICAgICAgICAgICA8Y29kZT5cIm5vbmVcIjwvY29kZT4gOiB0aGUgcGFnZSB3aWxsIG5vdCBzY3JvbGwgd2hlbiB1c2VyIHN3aXBlcy4gPGJyLz5cbiAgICAgICAgICAgICAgICAgICAgPGNvZGU+XCJob3Jpem9udGFsXCI8L2NvZGU+IDogd2lsbCBmb3JjZSBwYWdlIHRvIHNjcm9sbCBvbiBob3Jpem9udGFsIHN3aXBlcy4gPGJyLz5cbiAgICAgICAgICAgICAgICAgICAgPGNvZGU+XCJ2ZXJ0aWNhbFwiPC9jb2RlPiA6IHdpbGwgZm9yY2UgcGFnZSB0byBzY3JvbGwgb24gdmVydGljYWwgc3dpcGVzLiA8YnIvPlxuICAqIEBwcm9wZXJ0eSB7Ym9vbGVhbn0gW2ZhbGxiYWNrVG9Nb3VzZUV2ZW50cz10cnVlXSBJZiB0cnVlIG1vdXNlIGV2ZW50cyBhcmUgdXNlZCB3aGVuIHJ1biBvbiBhIG5vbiB0b3VjaCBkZXZpY2UsIGZhbHNlIHdpbGwgc3RvcCBzd2lwZXMgYmVpbmcgdHJpZ2dlcmVkIGJ5IG1vdXNlIGV2ZW50cyBvbiBub24gdG91Y2ggZGV2aWNlcy5cbiAgKiBAcHJvcGVydHkge3N0cmluZ30gW2V4Y2x1ZGVkRWxlbWVudHM9XCIubm9Td2lwZVwiXSBBIGpxdWVyeSBzZWxlY3RvciB0aGF0IHNwZWNpZmllcyBjaGlsZCBlbGVtZW50cyB0aGF0IGRvIE5PVCB0cmlnZ2VyIHN3aXBlcy4gQnkgZGVmYXVsdCB0aGlzIGV4Y2x1ZGVzIGVsZW1lbnRzIHdpdGggdGhlIGNsYXNzIC5ub1N3aXBlIC5cbiAgKiBAcHJvcGVydHkge2Jvb2xlYW59IFtwcmV2ZW50RGVmYXVsdEV2ZW50cz10cnVlXSBieSBkZWZhdWx0IGRlZmF1bHQgZXZlbnRzIGFyZSBjYW5jZWxsZWQsIHNvIHRoZSBwYWdlIGRvZXNuJ3QgbW92ZS4gIFlvdSBjYW4gZGlzYWJsZSB0aGlzIHNvIGJvdGggbmF0aXZlIGV2ZW50cyBmaXJlIGFzIHdlbGwgYXMgeW91ciBoYW5kbGVycy5cblxuICAqL1xuICB2YXIgZGVmYXVsdHMgPSB7XG4gICAgZmluZ2VyczogMSxcbiAgICB0aHJlc2hvbGQ6IDc1LFxuICAgIGNhbmNlbFRocmVzaG9sZDogbnVsbCxcbiAgICBwaW5jaFRocmVzaG9sZDogMjAsXG4gICAgbWF4VGltZVRocmVzaG9sZDogbnVsbCxcbiAgICBmaW5nZXJSZWxlYXNlVGhyZXNob2xkOiAyNTAsXG4gICAgbG9uZ1RhcFRocmVzaG9sZDogNTAwLFxuICAgIGRvdWJsZVRhcFRocmVzaG9sZDogMjAwLFxuICAgIHN3aXBlOiBudWxsLFxuICAgIHN3aXBlTGVmdDogbnVsbCxcbiAgICBzd2lwZVJpZ2h0OiBudWxsLFxuICAgIHN3aXBlVXA6IG51bGwsXG4gICAgc3dpcGVEb3duOiBudWxsLFxuICAgIHN3aXBlU3RhdHVzOiBudWxsLFxuICAgIHBpbmNoSW46IG51bGwsXG4gICAgcGluY2hPdXQ6IG51bGwsXG4gICAgcGluY2hTdGF0dXM6IG51bGwsXG4gICAgY2xpY2s6IG51bGwsIC8vRGVwcmVjYXRlZCBzaW5jZSAxLjYuMlxuICAgIHRhcDogbnVsbCxcbiAgICBkb3VibGVUYXA6IG51bGwsXG4gICAgbG9uZ1RhcDogbnVsbCxcbiAgICBob2xkOiBudWxsLFxuICAgIHRyaWdnZXJPblRvdWNoRW5kOiB0cnVlLFxuICAgIHRyaWdnZXJPblRvdWNoTGVhdmU6IGZhbHNlLFxuICAgIGFsbG93UGFnZVNjcm9sbDogXCJhdXRvXCIsXG4gICAgZmFsbGJhY2tUb01vdXNlRXZlbnRzOiB0cnVlLFxuICAgIGV4Y2x1ZGVkRWxlbWVudHM6IFwiLm5vU3dpcGVcIixcbiAgICBwcmV2ZW50RGVmYXVsdEV2ZW50czogdHJ1ZVxuICB9O1xuXG5cblxuICAvKipcbiAgICogQXBwbGllcyBUb3VjaFN3aXBlIGJlaGF2aW91ciB0byBvbmUgb3IgbW9yZSBqUXVlcnkgb2JqZWN0cy5cbiAgICogVGhlIFRvdWNoU3dpcGUgcGx1Z2luIGNhbiBiZSBpbnN0YW50aWF0ZWQgdmlhIHRoaXMgbWV0aG9kLCBvciBtZXRob2RzIHdpdGhpblxuICAgKiBUb3VjaFN3aXBlIGNhbiBiZSBleGVjdXRlZCB2aWEgdGhpcyBtZXRob2QgYXMgcGVyIGpRdWVyeSBwbHVnaW4gYXJjaGl0ZWN0dXJlLlxuICAgKiBBbiBleGlzdGluZyBwbHVnaW4gY2FuIGhhdmUgaXRzIG9wdGlvbnMgY2hhbmdlZCBzaW1wbHkgYnkgcmUgY2FsbGluZyAuc3dpcGUob3B0aW9ucylcbiAgICogQHNlZSBUb3VjaFN3aXBlXG4gICAqIEBjbGFzc1xuICAgKiBAcGFyYW0ge01peGVkfSBtZXRob2QgSWYgdGhlIGN1cnJlbnQgRE9NTm9kZSBpcyBhIFRvdWNoU3dpcGUgb2JqZWN0LCBhbmQgPGNvZGU+bWV0aG9kPC9jb2RlPiBpcyBhIFRvdWNoU3dpcGUgbWV0aG9kLCB0aGVuXG4gICAqIHRoZSA8Y29kZT5tZXRob2Q8L2NvZGU+IGlzIGV4ZWN1dGVkLCBhbmQgYW55IGZvbGxvd2luZyBhcmd1bWVudHMgYXJlIHBhc3NlZCB0byB0aGUgVG91Y2hTd2lwZSBtZXRob2QuXG4gICAqIElmIDxjb2RlPm1ldGhvZDwvY29kZT4gaXMgYW4gb2JqZWN0LCB0aGVuIHRoZSBUb3VjaFN3aXBlIGNsYXNzIGlzIGluc3RhbnRpYXRlZCBvbiB0aGUgY3VycmVudCBET01Ob2RlLCBwYXNzaW5nIHRoZVxuICAgKiBjb25maWd1cmF0aW9uIHByb3BlcnRpZXMgZGVmaW5lZCBpbiB0aGUgb2JqZWN0LiBTZWUgVG91Y2hTd2lwZVxuICAgKlxuICAgKi9cbiAgJC5mbi5zd2lwZSA9IGZ1bmN0aW9uKG1ldGhvZCkge1xuICAgIHZhciAkdGhpcyA9ICQodGhpcyksXG4gICAgICBwbHVnaW4gPSAkdGhpcy5kYXRhKFBMVUdJTl9OUyk7XG5cbiAgICAvL0NoZWNrIGlmIHdlIGFyZSBhbHJlYWR5IGluc3RhbnRpYXRlZCBhbmQgdHJ5aW5nIHRvIGV4ZWN1dGUgYSBtZXRob2RcbiAgICBpZiAocGx1Z2luICYmIHR5cGVvZiBtZXRob2QgPT09ICdzdHJpbmcnKSB7XG4gICAgICBpZiAocGx1Z2luW21ldGhvZF0pIHtcbiAgICAgICAgcmV0dXJuIHBsdWdpblttZXRob2RdLmFwcGx5KHBsdWdpbiwgQXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwoYXJndW1lbnRzLCAxKSk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICAkLmVycm9yKCdNZXRob2QgJyArIG1ldGhvZCArICcgZG9lcyBub3QgZXhpc3Qgb24galF1ZXJ5LnN3aXBlJyk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgLy9FbHNlIHVwZGF0ZSBleGlzdGluZyBwbHVnaW4gd2l0aCBuZXcgb3B0aW9ucyBoYXNoXG4gICAgZWxzZSBpZiAocGx1Z2luICYmIHR5cGVvZiBtZXRob2QgPT09ICdvYmplY3QnKSB7XG4gICAgICBwbHVnaW5bJ29wdGlvbiddLmFwcGx5KHBsdWdpbiwgYXJndW1lbnRzKTtcbiAgICB9XG5cbiAgICAvL0Vsc2Ugbm90IGluc3RhbnRpYXRlZCBhbmQgdHJ5aW5nIHRvIHBhc3MgaW5pdCBvYmplY3QgKG9yIG5vdGhpbmcpXG4gICAgZWxzZSBpZiAoIXBsdWdpbiAmJiAodHlwZW9mIG1ldGhvZCA9PT0gJ29iamVjdCcgfHwgIW1ldGhvZCkpIHtcbiAgICAgIHJldHVybiBpbml0LmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG4gICAgfVxuXG4gICAgcmV0dXJuICR0aGlzO1xuICB9O1xuXG4gIC8qKlxuICAgKiBUaGUgdmVyc2lvbiBvZiB0aGUgcGx1Z2luXG4gICAqIEByZWFkb25seVxuICAgKi9cbiAgJC5mbi5zd2lwZS52ZXJzaW9uID0gVkVSU0lPTjtcblxuXG5cbiAgLy9FeHBvc2Ugb3VyIGRlZmF1bHRzIHNvIGEgdXNlciBjb3VsZCBvdmVycmlkZSB0aGUgcGx1Z2luIGRlZmF1bHRzXG4gICQuZm4uc3dpcGUuZGVmYXVsdHMgPSBkZWZhdWx0cztcblxuICAvKipcbiAgICogVGhlIHBoYXNlcyB0aGF0IGEgdG91Y2ggZXZlbnQgZ29lcyB0aHJvdWdoLiAgVGhlIDxjb2RlPnBoYXNlPC9jb2RlPiBpcyBwYXNzZWQgdG8gdGhlIGV2ZW50IGhhbmRsZXJzLlxuICAgKiBUaGVzZSBwcm9wZXJ0aWVzIGFyZSByZWFkIG9ubHksIGF0dGVtcHRpbmcgdG8gY2hhbmdlIHRoZW0gd2lsbCBub3QgYWx0ZXIgdGhlIHZhbHVlcyBwYXNzZWQgdG8gdGhlIGV2ZW50IGhhbmRsZXJzLlxuICAgKiBAbmFtZXNwYWNlXG4gICAqIEByZWFkb25seVxuICAgKiBAcHJvcGVydHkge3N0cmluZ30gUEhBU0VfU1RBUlQgQ29uc3RhbnQgaW5kaWNhdGluZyB0aGUgc3RhcnQgcGhhc2Ugb2YgdGhlIHRvdWNoIGV2ZW50LiBWYWx1ZSBpcyA8Y29kZT5cInN0YXJ0XCI8L2NvZGU+LlxuICAgKiBAcHJvcGVydHkge3N0cmluZ30gUEhBU0VfTU9WRSBDb25zdGFudCBpbmRpY2F0aW5nIHRoZSBtb3ZlIHBoYXNlIG9mIHRoZSB0b3VjaCBldmVudC4gVmFsdWUgaXMgPGNvZGU+XCJtb3ZlXCI8L2NvZGU+LlxuICAgKiBAcHJvcGVydHkge3N0cmluZ30gUEhBU0VfRU5EIENvbnN0YW50IGluZGljYXRpbmcgdGhlIGVuZCBwaGFzZSBvZiB0aGUgdG91Y2ggZXZlbnQuIFZhbHVlIGlzIDxjb2RlPlwiZW5kXCI8L2NvZGU+LlxuICAgKiBAcHJvcGVydHkge3N0cmluZ30gUEhBU0VfQ0FOQ0VMIENvbnN0YW50IGluZGljYXRpbmcgdGhlIGNhbmNlbCBwaGFzZSBvZiB0aGUgdG91Y2ggZXZlbnQuIFZhbHVlIGlzIDxjb2RlPlwiY2FuY2VsXCI8L2NvZGU+LlxuICAgKi9cbiAgJC5mbi5zd2lwZS5waGFzZXMgPSB7XG4gICAgUEhBU0VfU1RBUlQ6IFBIQVNFX1NUQVJULFxuICAgIFBIQVNFX01PVkU6IFBIQVNFX01PVkUsXG4gICAgUEhBU0VfRU5EOiBQSEFTRV9FTkQsXG4gICAgUEhBU0VfQ0FOQ0VMOiBQSEFTRV9DQU5DRUxcbiAgfTtcblxuICAvKipcbiAgICogVGhlIGRpcmVjdGlvbiBjb25zdGFudHMgdGhhdCBhcmUgcGFzc2VkIHRvIHRoZSBldmVudCBoYW5kbGVycy5cbiAgICogVGhlc2UgcHJvcGVydGllcyBhcmUgcmVhZCBvbmx5LCBhdHRlbXB0aW5nIHRvIGNoYW5nZSB0aGVtIHdpbGwgbm90IGFsdGVyIHRoZSB2YWx1ZXMgcGFzc2VkIHRvIHRoZSBldmVudCBoYW5kbGVycy5cbiAgICogQG5hbWVzcGFjZVxuICAgKiBAcmVhZG9ubHlcbiAgICogQHByb3BlcnR5IHtzdHJpbmd9IExFRlQgQ29uc3RhbnQgaW5kaWNhdGluZyB0aGUgbGVmdCBkaXJlY3Rpb24uIFZhbHVlIGlzIDxjb2RlPlwibGVmdFwiPC9jb2RlPi5cbiAgICogQHByb3BlcnR5IHtzdHJpbmd9IFJJR0hUIENvbnN0YW50IGluZGljYXRpbmcgdGhlIHJpZ2h0IGRpcmVjdGlvbi4gVmFsdWUgaXMgPGNvZGU+XCJyaWdodFwiPC9jb2RlPi5cbiAgICogQHByb3BlcnR5IHtzdHJpbmd9IFVQIENvbnN0YW50IGluZGljYXRpbmcgdGhlIHVwIGRpcmVjdGlvbi4gVmFsdWUgaXMgPGNvZGU+XCJ1cFwiPC9jb2RlPi5cbiAgICogQHByb3BlcnR5IHtzdHJpbmd9IERPV04gQ29uc3RhbnQgaW5kaWNhdGluZyB0aGUgZG93biBkaXJlY3Rpb24uIFZhbHVlIGlzIDxjb2RlPlwiY2FuY2VsXCI8L2NvZGU+LlxuICAgKiBAcHJvcGVydHkge3N0cmluZ30gSU4gQ29uc3RhbnQgaW5kaWNhdGluZyB0aGUgaW4gZGlyZWN0aW9uLiBWYWx1ZSBpcyA8Y29kZT5cImluXCI8L2NvZGU+LlxuICAgKiBAcHJvcGVydHkge3N0cmluZ30gT1VUIENvbnN0YW50IGluZGljYXRpbmcgdGhlIG91dCBkaXJlY3Rpb24uIFZhbHVlIGlzIDxjb2RlPlwib3V0XCI8L2NvZGU+LlxuICAgKi9cbiAgJC5mbi5zd2lwZS5kaXJlY3Rpb25zID0ge1xuICAgIExFRlQ6IExFRlQsXG4gICAgUklHSFQ6IFJJR0hULFxuICAgIFVQOiBVUCxcbiAgICBET1dOOiBET1dOLFxuICAgIElOOiBJTixcbiAgICBPVVQ6IE9VVFxuICB9O1xuXG4gIC8qKlxuICAgKiBUaGUgcGFnZSBzY3JvbGwgY29uc3RhbnRzIHRoYXQgY2FuIGJlIHVzZWQgdG8gc2V0IHRoZSB2YWx1ZSBvZiA8Y29kZT5hbGxvd1BhZ2VTY3JvbGw8L2NvZGU+IG9wdGlvblxuICAgKiBUaGVzZSBwcm9wZXJ0aWVzIGFyZSByZWFkIG9ubHlcbiAgICogQG5hbWVzcGFjZVxuICAgKiBAcmVhZG9ubHlcbiAgICogQHNlZSAkLmZuLnN3aXBlLmRlZmF1bHRzI2FsbG93UGFnZVNjcm9sbFxuICAgKiBAcHJvcGVydHkge3N0cmluZ30gTk9ORSBDb25zdGFudCBpbmRpY2F0aW5nIG5vIHBhZ2Ugc2Nyb2xsaW5nIGlzIGFsbG93ZWQuIFZhbHVlIGlzIDxjb2RlPlwibm9uZVwiPC9jb2RlPi5cbiAgICogQHByb3BlcnR5IHtzdHJpbmd9IEhPUklaT05UQUwgQ29uc3RhbnQgaW5kaWNhdGluZyBob3Jpem9udGFsIHBhZ2Ugc2Nyb2xsaW5nIGlzIGFsbG93ZWQuIFZhbHVlIGlzIDxjb2RlPlwiaG9yaXpvbnRhbFwiPC9jb2RlPi5cbiAgICogQHByb3BlcnR5IHtzdHJpbmd9IFZFUlRJQ0FMIENvbnN0YW50IGluZGljYXRpbmcgdmVydGljYWwgcGFnZSBzY3JvbGxpbmcgaXMgYWxsb3dlZC4gVmFsdWUgaXMgPGNvZGU+XCJ2ZXJ0aWNhbFwiPC9jb2RlPi5cbiAgICogQHByb3BlcnR5IHtzdHJpbmd9IEFVVE8gQ29uc3RhbnQgaW5kaWNhdGluZyBlaXRoZXIgaG9yaXpvbnRhbCBvciB2ZXJ0aWNhbCB3aWxsIGJlIGFsbG93ZWQsIGRlcGVuZGluZyBvbiB0aGUgc3dpcGUgaGFuZGxlcnMgcmVnaXN0ZXJlZC4gVmFsdWUgaXMgPGNvZGU+XCJhdXRvXCI8L2NvZGU+LlxuICAgKi9cbiAgJC5mbi5zd2lwZS5wYWdlU2Nyb2xsID0ge1xuICAgIE5PTkU6IE5PTkUsXG4gICAgSE9SSVpPTlRBTDogSE9SSVpPTlRBTCxcbiAgICBWRVJUSUNBTDogVkVSVElDQUwsXG4gICAgQVVUTzogQVVUT1xuICB9O1xuXG4gIC8qKlxuICAgKiBDb25zdGFudHMgcmVwcmVzZW50aW5nIHRoZSBudW1iZXIgb2YgZmluZ2VycyB1c2VkIGluIGEgc3dpcGUuICBUaGVzZSBhcmUgdXNlZCB0byBzZXQgYm90aCB0aGUgdmFsdWUgb2YgPGNvZGU+ZmluZ2VyczwvY29kZT4gaW4gdGhlXG4gICAqIG9wdGlvbnMgb2JqZWN0LCBhcyB3ZWxsIGFzIHRoZSB2YWx1ZSBvZiB0aGUgPGNvZGU+ZmluZ2VyczwvY29kZT4gZXZlbnQgcHJvcGVydHkuXG4gICAqIFRoZXNlIHByb3BlcnRpZXMgYXJlIHJlYWQgb25seSwgYXR0ZW1wdGluZyB0byBjaGFuZ2UgdGhlbSB3aWxsIG5vdCBhbHRlciB0aGUgdmFsdWVzIHBhc3NlZCB0byB0aGUgZXZlbnQgaGFuZGxlcnMuXG4gICAqIEBuYW1lc3BhY2VcbiAgICogQHJlYWRvbmx5XG4gICAqIEBzZWUgJC5mbi5zd2lwZS5kZWZhdWx0cyNmaW5nZXJzXG4gICAqIEBwcm9wZXJ0eSB7c3RyaW5nfSBPTkUgQ29uc3RhbnQgaW5kaWNhdGluZyAxIGZpbmdlciBpcyB0byBiZSBkZXRlY3RlZCAvIHdhcyBkZXRlY3RlZC4gVmFsdWUgaXMgPGNvZGU+MTwvY29kZT4uXG4gICAqIEBwcm9wZXJ0eSB7c3RyaW5nfSBUV08gQ29uc3RhbnQgaW5kaWNhdGluZyAyIGZpbmdlcnMgYXJlIHRvIGJlIGRldGVjdGVkIC8gd2VyZSBkZXRlY3RlZC4gVmFsdWUgaXMgPGNvZGU+MjwvY29kZT4uXG4gICAqIEBwcm9wZXJ0eSB7c3RyaW5nfSBUSFJFRSBDb25zdGFudCBpbmRpY2F0aW5nIDMgZmluZ2VyIGFyZSB0byBiZSBkZXRlY3RlZCAvIHdlcmUgZGV0ZWN0ZWQuIFZhbHVlIGlzIDxjb2RlPjM8L2NvZGU+LlxuICAgKiBAcHJvcGVydHkge3N0cmluZ30gRk9VUiBDb25zdGFudCBpbmRpY2F0aW5nIDQgZmluZ2VyIGFyZSB0byBiZSBkZXRlY3RlZCAvIHdlcmUgZGV0ZWN0ZWQuIE5vdCBhbGwgZGV2aWNlcyBzdXBwb3J0IHRoaXMuIFZhbHVlIGlzIDxjb2RlPjQ8L2NvZGU+LlxuICAgKiBAcHJvcGVydHkge3N0cmluZ30gRklWRSBDb25zdGFudCBpbmRpY2F0aW5nIDUgZmluZ2VyIGFyZSB0byBiZSBkZXRlY3RlZCAvIHdlcmUgZGV0ZWN0ZWQuIE5vdCBhbGwgZGV2aWNlcyBzdXBwb3J0IHRoaXMuIFZhbHVlIGlzIDxjb2RlPjU8L2NvZGU+LlxuICAgKiBAcHJvcGVydHkge3N0cmluZ30gQUxMIENvbnN0YW50IGluZGljYXRpbmcgYW55IGNvbWJpbmF0aW9uIG9mIGZpbmdlciBhcmUgdG8gYmUgZGV0ZWN0ZWQuICBWYWx1ZSBpcyA8Y29kZT5cImFsbFwiPC9jb2RlPi5cbiAgICovXG4gICQuZm4uc3dpcGUuZmluZ2VycyA9IHtcbiAgICBPTkU6IDEsXG4gICAgVFdPOiAyLFxuICAgIFRIUkVFOiAzLFxuICAgIEZPVVI6IDQsXG4gICAgRklWRTogNSxcbiAgICBBTEw6IEFMTF9GSU5HRVJTXG4gIH07XG5cbiAgLyoqXG4gICAqIEluaXRpYWxpc2UgdGhlIHBsdWdpbiBmb3IgZWFjaCBET00gZWxlbWVudCBtYXRjaGVkXG4gICAqIFRoaXMgY3JlYXRlcyBhIG5ldyBpbnN0YW5jZSBvZiB0aGUgbWFpbiBUb3VjaFN3aXBlIGNsYXNzIGZvciBlYWNoIERPTSBlbGVtZW50LCBhbmQgdGhlblxuICAgKiBzYXZlcyBhIHJlZmVyZW5jZSB0byB0aGF0IGluc3RhbmNlIGluIHRoZSBlbGVtZW50cyBkYXRhIHByb3BlcnR5LlxuICAgKiBAaW50ZXJuYWxcbiAgICovXG4gIGZ1bmN0aW9uIGluaXQob3B0aW9ucykge1xuICAgIC8vUHJlcCBhbmQgZXh0ZW5kIHRoZSBvcHRpb25zXG4gICAgaWYgKG9wdGlvbnMgJiYgKG9wdGlvbnMuYWxsb3dQYWdlU2Nyb2xsID09PSB1bmRlZmluZWQgJiYgKG9wdGlvbnMuc3dpcGUgIT09IHVuZGVmaW5lZCB8fCBvcHRpb25zLnN3aXBlU3RhdHVzICE9PSB1bmRlZmluZWQpKSkge1xuICAgICAgb3B0aW9ucy5hbGxvd1BhZ2VTY3JvbGwgPSBOT05FO1xuICAgIH1cblxuICAgIC8vQ2hlY2sgZm9yIGRlcHJlY2F0ZWQgb3B0aW9uc1xuICAgIC8vRW5zdXJlIHRoYXQgYW55IG9sZCBjbGljayBoYW5kbGVycyBhcmUgYXNzaWduZWQgdG8gdGhlIG5ldyB0YXAsIHVubGVzcyB3ZSBoYXZlIGEgdGFwXG4gICAgaWYgKG9wdGlvbnMuY2xpY2sgIT09IHVuZGVmaW5lZCAmJiBvcHRpb25zLnRhcCA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICBvcHRpb25zLnRhcCA9IG9wdGlvbnMuY2xpY2s7XG4gICAgfVxuXG4gICAgaWYgKCFvcHRpb25zKSB7XG4gICAgICBvcHRpb25zID0ge307XG4gICAgfVxuXG4gICAgLy9wYXNzIGVtcHR5IG9iamVjdCBzbyB3ZSBkb250IG1vZGlmeSB0aGUgZGVmYXVsdHNcbiAgICBvcHRpb25zID0gJC5leHRlbmQoe30sICQuZm4uc3dpcGUuZGVmYXVsdHMsIG9wdGlvbnMpO1xuXG4gICAgLy9Gb3IgZWFjaCBlbGVtZW50IGluc3RhbnRpYXRlIHRoZSBwbHVnaW5cbiAgICByZXR1cm4gdGhpcy5lYWNoKGZ1bmN0aW9uKCkge1xuICAgICAgdmFyICR0aGlzID0gJCh0aGlzKTtcblxuICAgICAgLy9DaGVjayB3ZSBoYXZlbnQgYWxyZWFkeSBpbml0aWFsaXNlZCB0aGUgcGx1Z2luXG4gICAgICB2YXIgcGx1Z2luID0gJHRoaXMuZGF0YShQTFVHSU5fTlMpO1xuXG4gICAgICBpZiAoIXBsdWdpbikge1xuICAgICAgICBwbHVnaW4gPSBuZXcgVG91Y2hTd2lwZSh0aGlzLCBvcHRpb25zKTtcbiAgICAgICAgJHRoaXMuZGF0YShQTFVHSU5fTlMsIHBsdWdpbik7XG4gICAgICB9XG4gICAgfSk7XG4gIH1cblxuICAvKipcbiAgICogTWFpbiBUb3VjaFN3aXBlIFBsdWdpbiBDbGFzcy5cbiAgICogRG8gbm90IHVzZSB0aGlzIHRvIGNvbnN0cnVjdCB5b3VyIFRvdWNoU3dpcGUgb2JqZWN0LCB1c2UgdGhlIGpRdWVyeSBwbHVnaW4gbWV0aG9kICQuZm4uc3dpcGUoKTsge0BsaW5rICQuZm4uc3dpcGV9XG4gICAqIEBwcml2YXRlXG4gICAqIEBuYW1lIFRvdWNoU3dpcGVcbiAgICogQHBhcmFtIHtET01Ob2RlfSBlbGVtZW50IFRoZSBIVE1MIERPTSBvYmplY3QgdG8gYXBwbHkgdG8gcGx1Z2luIHRvXG4gICAqIEBwYXJhbSB7T2JqZWN0fSBvcHRpb25zIFRoZSBvcHRpb25zIHRvIGNvbmZpZ3VyZSB0aGUgcGx1Z2luIHdpdGguICBAbGluayB7JC5mbi5zd2lwZS5kZWZhdWx0c31cbiAgICogQHNlZSAkLmZoLnN3aXBlLmRlZmF1bHRzXG4gICAqIEBzZWUgJC5maC5zd2lwZVxuICAgKiBAY2xhc3NcbiAgICovXG4gIGZ1bmN0aW9uIFRvdWNoU3dpcGUoZWxlbWVudCwgb3B0aW9ucykge1xuXG4gICAgLy90YWtlIGEgbG9jYWwvaW5zdGFjbmUgbGV2ZWwgY29weSBvZiB0aGUgb3B0aW9ucyAtIHNob3VsZCBtYWtlIGl0IHRoaXMub3B0aW9ucyByZWFsbHkuLi5cbiAgICB2YXIgb3B0aW9ucyA9ICQuZXh0ZW5kKHt9LCBvcHRpb25zKTtcblxuICAgIHZhciB1c2VUb3VjaEV2ZW50cyA9IChTVVBQT1JUU19UT1VDSCB8fCBTVVBQT1JUU19QT0lOVEVSIHx8ICFvcHRpb25zLmZhbGxiYWNrVG9Nb3VzZUV2ZW50cyksXG4gICAgICBTVEFSVF9FViA9IHVzZVRvdWNoRXZlbnRzID8gKFNVUFBPUlRTX1BPSU5URVIgPyAoU1VQUE9SVFNfUE9JTlRFUl9JRTEwID8gJ01TUG9pbnRlckRvd24nIDogJ3BvaW50ZXJkb3duJykgOiAndG91Y2hzdGFydCcpIDogJ21vdXNlZG93bicsXG4gICAgICBNT1ZFX0VWID0gdXNlVG91Y2hFdmVudHMgPyAoU1VQUE9SVFNfUE9JTlRFUiA/IChTVVBQT1JUU19QT0lOVEVSX0lFMTAgPyAnTVNQb2ludGVyTW92ZScgOiAncG9pbnRlcm1vdmUnKSA6ICd0b3VjaG1vdmUnKSA6ICdtb3VzZW1vdmUnLFxuICAgICAgRU5EX0VWID0gdXNlVG91Y2hFdmVudHMgPyAoU1VQUE9SVFNfUE9JTlRFUiA/IChTVVBQT1JUU19QT0lOVEVSX0lFMTAgPyAnTVNQb2ludGVyVXAnIDogJ3BvaW50ZXJ1cCcpIDogJ3RvdWNoZW5kJykgOiAnbW91c2V1cCcsXG4gICAgICBMRUFWRV9FViA9IHVzZVRvdWNoRXZlbnRzID8gKFNVUFBPUlRTX1BPSU5URVIgPyAnbW91c2VsZWF2ZScgOiBudWxsKSA6ICdtb3VzZWxlYXZlJywgLy93ZSBtYW51YWxseSBkZXRlY3QgbGVhdmUgb24gdG91Y2ggZGV2aWNlcywgc28gbnVsbCBldmVudCBoZXJlXG4gICAgICBDQU5DRUxfRVYgPSAoU1VQUE9SVFNfUE9JTlRFUiA/IChTVVBQT1JUU19QT0lOVEVSX0lFMTAgPyAnTVNQb2ludGVyQ2FuY2VsJyA6ICdwb2ludGVyY2FuY2VsJykgOiAndG91Y2hjYW5jZWwnKTtcblxuXG5cbiAgICAvL3RvdWNoIHByb3BlcnRpZXNcbiAgICB2YXIgZGlzdGFuY2UgPSAwLFxuICAgICAgZGlyZWN0aW9uID0gbnVsbCxcbiAgICAgIGN1cnJlbnREaXJlY3Rpb24gPSBudWxsLFxuICAgICAgZHVyYXRpb24gPSAwLFxuICAgICAgc3RhcnRUb3VjaGVzRGlzdGFuY2UgPSAwLFxuICAgICAgZW5kVG91Y2hlc0Rpc3RhbmNlID0gMCxcbiAgICAgIHBpbmNoWm9vbSA9IDEsXG4gICAgICBwaW5jaERpc3RhbmNlID0gMCxcbiAgICAgIHBpbmNoRGlyZWN0aW9uID0gMCxcbiAgICAgIG1heGltdW1zTWFwID0gbnVsbDtcblxuXG5cbiAgICAvL2pRdWVyeSB3cmFwcGVkIGVsZW1lbnQgZm9yIHRoaXMgaW5zdGFuY2VcbiAgICB2YXIgJGVsZW1lbnQgPSAkKGVsZW1lbnQpO1xuXG4gICAgLy9DdXJyZW50IHBoYXNlIG9mIHRoIHRvdWNoIGN5Y2xlXG4gICAgdmFyIHBoYXNlID0gXCJzdGFydFwiO1xuXG4gICAgLy8gdGhlIGN1cnJlbnQgbnVtYmVyIG9mIGZpbmdlcnMgYmVpbmcgdXNlZC5cbiAgICB2YXIgZmluZ2VyQ291bnQgPSAwO1xuXG4gICAgLy90cmFjayBtb3VzZSBwb2ludHMgLyBkZWx0YVxuICAgIHZhciBmaW5nZXJEYXRhID0ge307XG5cbiAgICAvL3RyYWNrIHRpbWVzXG4gICAgdmFyIHN0YXJ0VGltZSA9IDAsXG4gICAgICBlbmRUaW1lID0gMCxcbiAgICAgIHByZXZpb3VzVG91Y2hFbmRUaW1lID0gMCxcbiAgICAgIGZpbmdlckNvdW50QXRSZWxlYXNlID0gMCxcbiAgICAgIGRvdWJsZVRhcFN0YXJ0VGltZSA9IDA7XG5cbiAgICAvL1RpbWVvdXRzXG4gICAgdmFyIHNpbmdsZVRhcFRpbWVvdXQgPSBudWxsLFxuICAgICAgaG9sZFRpbWVvdXQgPSBudWxsO1xuXG4gICAgLy8gQWRkIGdlc3R1cmVzIHRvIGFsbCBzd2lwYWJsZSBhcmVhcyBpZiBzdXBwb3J0ZWRcbiAgICB0cnkge1xuICAgICAgJGVsZW1lbnQub24oU1RBUlRfRVYsIHRvdWNoU3RhcnQpO1xuICAgICAgJGVsZW1lbnQub24oQ0FOQ0VMX0VWLCB0b3VjaENhbmNlbCk7XG4gICAgfSBjYXRjaCAoZSkge1xuICAgICAgJC5lcnJvcignZXZlbnRzIG5vdCBzdXBwb3J0ZWQgJyArIFNUQVJUX0VWICsgJywnICsgQ0FOQ0VMX0VWICsgJyBvbiBqUXVlcnkuc3dpcGUnKTtcbiAgICB9XG5cbiAgICAvL1xuICAgIC8vUHVibGljIG1ldGhvZHNcbiAgICAvL1xuXG4gICAgLyoqXG4gICAgICogcmUtZW5hYmxlcyB0aGUgc3dpcGUgcGx1Z2luIHdpdGggdGhlIHByZXZpb3VzIGNvbmZpZ3VyYXRpb25cbiAgICAgKiBAZnVuY3Rpb25cbiAgICAgKiBAbmFtZSAkLmZuLnN3aXBlI2VuYWJsZVxuICAgICAqIEByZXR1cm4ge0RPTU5vZGV9IFRoZSBEb20gZWxlbWVudCB0aGF0IHdhcyByZWdpc3RlcmVkIHdpdGggVG91Y2hTd2lwZVxuICAgICAqIEBleGFtcGxlICQoXCIjZWxlbWVudFwiKS5zd2lwZShcImVuYWJsZVwiKTtcbiAgICAgKi9cbiAgICB0aGlzLmVuYWJsZSA9IGZ1bmN0aW9uKCkge1xuICAgICAgLy9JbmNhc2Ugd2UgYXJlIGFscmVhZHkgZW5hYmxlZCwgY2xlYW4gdXAuLi5cbiAgICAgIHRoaXMuZGlzYWJsZSgpO1xuICAgICAgJGVsZW1lbnQub24oU1RBUlRfRVYsIHRvdWNoU3RhcnQpO1xuICAgICAgJGVsZW1lbnQub24oQ0FOQ0VMX0VWLCB0b3VjaENhbmNlbCk7XG4gICAgICByZXR1cm4gJGVsZW1lbnQ7XG4gICAgfTtcblxuICAgIC8qKlxuICAgICAqIGRpc2FibGVzIHRoZSBzd2lwZSBwbHVnaW5cbiAgICAgKiBAZnVuY3Rpb25cbiAgICAgKiBAbmFtZSAkLmZuLnN3aXBlI2Rpc2FibGVcbiAgICAgKiBAcmV0dXJuIHtET01Ob2RlfSBUaGUgRG9tIGVsZW1lbnQgdGhhdCBpcyBub3cgcmVnaXN0ZXJlZCB3aXRoIFRvdWNoU3dpcGVcbiAgICAgKiBAZXhhbXBsZSAkKFwiI2VsZW1lbnRcIikuc3dpcGUoXCJkaXNhYmxlXCIpO1xuICAgICAqL1xuICAgIHRoaXMuZGlzYWJsZSA9IGZ1bmN0aW9uKCkge1xuICAgICAgcmVtb3ZlTGlzdGVuZXJzKCk7XG4gICAgICByZXR1cm4gJGVsZW1lbnQ7XG4gICAgfTtcblxuICAgIC8qKlxuICAgICAqIERlc3Ryb3kgdGhlIHN3aXBlIHBsdWdpbiBjb21wbGV0ZWx5LiBUbyB1c2UgYW55IHN3aXBlIG1ldGhvZHMsIHlvdSBtdXN0IHJlIGluaXRpYWxpc2UgdGhlIHBsdWdpbi5cbiAgICAgKiBAZnVuY3Rpb25cbiAgICAgKiBAbmFtZSAkLmZuLnN3aXBlI2Rlc3Ryb3lcbiAgICAgKiBAZXhhbXBsZSAkKFwiI2VsZW1lbnRcIikuc3dpcGUoXCJkZXN0cm95XCIpO1xuICAgICAqL1xuICAgIHRoaXMuZGVzdHJveSA9IGZ1bmN0aW9uKCkge1xuICAgICAgcmVtb3ZlTGlzdGVuZXJzKCk7XG4gICAgICAkZWxlbWVudC5kYXRhKFBMVUdJTl9OUywgbnVsbCk7XG4gICAgICAkZWxlbWVudCA9IG51bGw7XG4gICAgfTtcblxuXG4gICAgLyoqXG4gICAgICogQWxsb3dzIHJ1biB0aW1lIHVwZGF0aW5nIG9mIHRoZSBzd2lwZSBjb25maWd1cmF0aW9uIG9wdGlvbnMuXG4gICAgICogQGZ1bmN0aW9uXG4gICAgICogQG5hbWUgJC5mbi5zd2lwZSNvcHRpb25cbiAgICAgKiBAcGFyYW0ge1N0cmluZ30gcHJvcGVydHkgVGhlIG9wdGlvbiBwcm9wZXJ0eSB0byBnZXQgb3Igc2V0LCBvciBhIGhhcyBvZiBtdWx0aXBsZSBvcHRpb25zIHRvIHNldFxuICAgICAqIEBwYXJhbSB7T2JqZWN0fSBbdmFsdWVdIFRoZSB2YWx1ZSB0byBzZXQgdGhlIHByb3BlcnR5IHRvXG4gICAgICogQHJldHVybiB7T2JqZWN0fSBJZiBvbmx5IGEgcHJvcGVydHkgbmFtZSBpcyBwYXNzZWQsIHRoZW4gdGhhdCBwcm9wZXJ0eSB2YWx1ZSBpcyByZXR1cm5lZC4gSWYgbm90aGluZyBpcyBwYXNzZWQgdGhlIGN1cnJlbnQgb3B0aW9ucyBoYXNoIGlzIHJldHVybmVkLlxuICAgICAqIEBleGFtcGxlICQoXCIjZWxlbWVudFwiKS5zd2lwZShcIm9wdGlvblwiLCBcInRocmVzaG9sZFwiKTsgLy8gcmV0dXJuIHRoZSB0aHJlc2hvbGRcbiAgICAgKiBAZXhhbXBsZSAkKFwiI2VsZW1lbnRcIikuc3dpcGUoXCJvcHRpb25cIiwgXCJ0aHJlc2hvbGRcIiwgMTAwKTsgLy8gc2V0IHRoZSB0aHJlc2hvbGQgYWZ0ZXIgaW5pdFxuICAgICAqIEBleGFtcGxlICQoXCIjZWxlbWVudFwiKS5zd2lwZShcIm9wdGlvblwiLCB7dGhyZXNob2xkOjEwMCwgZmluZ2VyczozfSApOyAvLyBzZXQgbXVsdGlwbGUgcHJvcGVydGllcyBhZnRlciBpbml0XG4gICAgICogQGV4YW1wbGUgJChcIiNlbGVtZW50XCIpLnN3aXBlKHt0aHJlc2hvbGQ6MTAwLCBmaW5nZXJzOjN9ICk7IC8vIHNldCBtdWx0aXBsZSBwcm9wZXJ0aWVzIGFmdGVyIGluaXQgLSB0aGUgXCJvcHRpb25cIiBtZXRob2QgaXMgb3B0aW9uYWwhXG4gICAgICogQGV4YW1wbGUgJChcIiNlbGVtZW50XCIpLnN3aXBlKFwib3B0aW9uXCIpOyAvLyBSZXR1cm4gdGhlIGN1cnJlbnQgb3B0aW9ucyBoYXNoXG4gICAgICogQHNlZSAkLmZuLnN3aXBlLmRlZmF1bHRzXG4gICAgICpcbiAgICAgKi9cbiAgICB0aGlzLm9wdGlvbiA9IGZ1bmN0aW9uKHByb3BlcnR5LCB2YWx1ZSkge1xuXG4gICAgICBpZiAodHlwZW9mIHByb3BlcnR5ID09PSAnb2JqZWN0Jykge1xuICAgICAgICBvcHRpb25zID0gJC5leHRlbmQob3B0aW9ucywgcHJvcGVydHkpO1xuICAgICAgfSBlbHNlIGlmIChvcHRpb25zW3Byb3BlcnR5XSAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgIGlmICh2YWx1ZSA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgcmV0dXJuIG9wdGlvbnNbcHJvcGVydHldO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIG9wdGlvbnNbcHJvcGVydHldID0gdmFsdWU7XG4gICAgICAgIH1cbiAgICAgIH0gZWxzZSBpZiAoIXByb3BlcnR5KSB7XG4gICAgICAgIHJldHVybiBvcHRpb25zO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgJC5lcnJvcignT3B0aW9uICcgKyBwcm9wZXJ0eSArICcgZG9lcyBub3QgZXhpc3Qgb24galF1ZXJ5LnN3aXBlLm9wdGlvbnMnKTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIG51bGw7XG4gICAgfVxuXG5cblxuICAgIC8vXG4gICAgLy8gUHJpdmF0ZSBtZXRob2RzXG4gICAgLy9cblxuICAgIC8vXG4gICAgLy8gRVZFTlRTXG4gICAgLy9cbiAgICAvKipcbiAgICAgKiBFdmVudCBoYW5kbGVyIGZvciBhIHRvdWNoIHN0YXJ0IGV2ZW50LlxuICAgICAqIFN0b3BzIHRoZSBkZWZhdWx0IGNsaWNrIGV2ZW50IGZyb20gdHJpZ2dlcmluZyBhbmQgc3RvcmVzIHdoZXJlIHdlIHRvdWNoZWRcbiAgICAgKiBAaW5uZXJcbiAgICAgKiBAcGFyYW0ge29iamVjdH0ganFFdmVudCBUaGUgbm9ybWFsaXNlZCBqUXVlcnkgZXZlbnQgb2JqZWN0LlxuICAgICAqL1xuICAgIGZ1bmN0aW9uIHRvdWNoU3RhcnQoanFFdmVudCkge1xuXG4gICAgICAvL0lmIHdlIGFscmVhZHkgaW4gYSB0b3VjaCBldmVudCAoYSBmaW5nZXIgYWxyZWFkeSBpbiB1c2UpIHRoZW4gaWdub3JlIHN1YnNlcXVlbnQgb25lcy4uXG4gICAgICBpZiAoZ2V0VG91Y2hJblByb2dyZXNzKCkpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuXG4gICAgICAvL0NoZWNrIGlmIHRoaXMgZWxlbWVudCBtYXRjaGVzIGFueSBpbiB0aGUgZXhjbHVkZWQgZWxlbWVudHMgc2VsZWN0b3JzLCAgb3IgaXRzIHBhcmVudCBpcyBleGNsdWRlZCwgaWYgc28sIERPTidUIHN3aXBlXG4gICAgICBpZiAoJChqcUV2ZW50LnRhcmdldCkuY2xvc2VzdChvcHRpb25zLmV4Y2x1ZGVkRWxlbWVudHMsICRlbGVtZW50KS5sZW5ndGggPiAwKSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgLy9BcyB3ZSB1c2UgSnF1ZXJ5IGJpbmQgZm9yIGV2ZW50cywgd2UgbmVlZCB0byB0YXJnZXQgdGhlIG9yaWdpbmFsIGV2ZW50IG9iamVjdFxuICAgICAgLy9JZiB0aGVzZSBldmVudHMgYXJlIGJlaW5nIHByb2dyYW1tYXRpY2FsbHkgdHJpZ2dlcmVkLCB3ZSBkb24ndCBoYXZlIGFuIG9yaWdpbmFsIGV2ZW50IG9iamVjdCwgc28gdXNlIHRoZSBKcSBvbmUuXG4gICAgICB2YXIgZXZlbnQgPSBqcUV2ZW50Lm9yaWdpbmFsRXZlbnQgPyBqcUV2ZW50Lm9yaWdpbmFsRXZlbnQgOiBqcUV2ZW50O1xuXG5cbiAgICAgIC8vSWYgd2UgaGF2ZSBhIHBvaW50ZXIgZXZlbnQsIHdob2VzIHR5cGUgaXMgJ21vdXNlJyBhbmQgd2UgaGF2ZSBzYWlkIE5PIG1vdXNlIGV2ZW50cywgdGhlbiBkb250IGRvIGFueXRoaW5nLlxuICAgICAgaWYoZXZlbnQucG9pbnRlclR5cGUgJiYgZXZlbnQucG9pbnRlclR5cGU9PVwibW91c2VcIiAmJiBvcHRpb25zLmZhbGxiYWNrVG9Nb3VzZUV2ZW50cz09ZmFsc2UpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfTtcblxuICAgICAgdmFyIHJldCxcbiAgICAgICAgdG91Y2hlcyA9IGV2ZW50LnRvdWNoZXMsXG4gICAgICAgIGV2dCA9IHRvdWNoZXMgPyB0b3VjaGVzWzBdIDogZXZlbnQ7XG5cbiAgICAgIHBoYXNlID0gUEhBU0VfU1RBUlQ7XG5cbiAgICAgIC8vSWYgd2Ugc3VwcG9ydCB0b3VjaGVzLCBnZXQgdGhlIGZpbmdlciBjb3VudFxuICAgICAgaWYgKHRvdWNoZXMpIHtcbiAgICAgICAgLy8gZ2V0IHRoZSB0b3RhbCBudW1iZXIgb2YgZmluZ2VycyB0b3VjaGluZyB0aGUgc2NyZWVuXG4gICAgICAgIGZpbmdlckNvdW50ID0gdG91Y2hlcy5sZW5ndGg7XG4gICAgICB9XG4gICAgICAvL0Vsc2UgdGhpcyBpcyB0aGUgZGVza3RvcCwgc28gc3RvcCB0aGUgYnJvd3NlciBmcm9tIGRyYWdnaW5nIGNvbnRlbnRcbiAgICAgIGVsc2UgaWYgKG9wdGlvbnMucHJldmVudERlZmF1bHRFdmVudHMgIT09IGZhbHNlKSB7XG4gICAgICAgIGpxRXZlbnQucHJldmVudERlZmF1bHQoKTsgLy9jYWxsIHRoaXMgb24ganEgZXZlbnQgc28gd2UgYXJlIGNyb3NzIGJyb3dzZXJcbiAgICAgIH1cblxuICAgICAgLy9jbGVhciB2YXJzLi5cbiAgICAgIGRpc3RhbmNlID0gMDtcbiAgICAgIGRpcmVjdGlvbiA9IG51bGw7XG4gICAgICBjdXJyZW50RGlyZWN0aW9uPW51bGw7XG4gICAgICBwaW5jaERpcmVjdGlvbiA9IG51bGw7XG4gICAgICBkdXJhdGlvbiA9IDA7XG4gICAgICBzdGFydFRvdWNoZXNEaXN0YW5jZSA9IDA7XG4gICAgICBlbmRUb3VjaGVzRGlzdGFuY2UgPSAwO1xuICAgICAgcGluY2hab29tID0gMTtcbiAgICAgIHBpbmNoRGlzdGFuY2UgPSAwO1xuICAgICAgbWF4aW11bXNNYXAgPSBjcmVhdGVNYXhpbXVtc0RhdGEoKTtcbiAgICAgIGNhbmNlbE11bHRpRmluZ2VyUmVsZWFzZSgpO1xuXG4gICAgICAvL0NyZWF0ZSB0aGUgZGVmYXVsdCBmaW5nZXIgZGF0YVxuICAgICAgY3JlYXRlRmluZ2VyRGF0YSgwLCBldnQpO1xuXG4gICAgICAvLyBjaGVjayB0aGUgbnVtYmVyIG9mIGZpbmdlcnMgaXMgd2hhdCB3ZSBhcmUgbG9va2luZyBmb3IsIG9yIHdlIGFyZSBjYXB0dXJpbmcgcGluY2hlc1xuICAgICAgaWYgKCF0b3VjaGVzIHx8IChmaW5nZXJDb3VudCA9PT0gb3B0aW9ucy5maW5nZXJzIHx8IG9wdGlvbnMuZmluZ2VycyA9PT0gQUxMX0ZJTkdFUlMpIHx8IGhhc1BpbmNoZXMoKSkge1xuICAgICAgICAvLyBnZXQgdGhlIGNvb3JkaW5hdGVzIG9mIHRoZSB0b3VjaFxuICAgICAgICBzdGFydFRpbWUgPSBnZXRUaW1lU3RhbXAoKTtcblxuICAgICAgICBpZiAoZmluZ2VyQ291bnQgPT0gMikge1xuICAgICAgICAgIC8vS2VlcCB0cmFjayBvZiB0aGUgaW5pdGlhbCBwaW5jaCBkaXN0YW5jZSwgc28gd2UgY2FuIGNhbGN1bGF0ZSB0aGUgZGlmZiBsYXRlclxuICAgICAgICAgIC8vU3RvcmUgc2Vjb25kIGZpbmdlciBkYXRhIGFzIHN0YXJ0XG4gICAgICAgICAgY3JlYXRlRmluZ2VyRGF0YSgxLCB0b3VjaGVzWzFdKTtcbiAgICAgICAgICBzdGFydFRvdWNoZXNEaXN0YW5jZSA9IGVuZFRvdWNoZXNEaXN0YW5jZSA9IGNhbGN1bGF0ZVRvdWNoZXNEaXN0YW5jZShmaW5nZXJEYXRhWzBdLnN0YXJ0LCBmaW5nZXJEYXRhWzFdLnN0YXJ0KTtcbiAgICAgICAgfVxuXG4gICAgICAgIGlmIChvcHRpb25zLnN3aXBlU3RhdHVzIHx8IG9wdGlvbnMucGluY2hTdGF0dXMpIHtcbiAgICAgICAgICByZXQgPSB0cmlnZ2VySGFuZGxlcihldmVudCwgcGhhc2UpO1xuICAgICAgICB9XG4gICAgICB9IGVsc2Uge1xuICAgICAgICAvL0EgdG91Y2ggd2l0aCBtb3JlIG9yIGxlc3MgdGhhbiB0aGUgZmluZ2VycyB3ZSBhcmUgbG9va2luZyBmb3IsIHNvIGNhbmNlbFxuICAgICAgICByZXQgPSBmYWxzZTtcbiAgICAgIH1cblxuICAgICAgLy9JZiB3ZSBoYXZlIGEgcmV0dXJuIHZhbHVlIGZyb20gdGhlIHVzZXJzIGhhbmRsZXIsIHRoZW4gcmV0dXJuIGFuZCBjYW5jZWxcbiAgICAgIGlmIChyZXQgPT09IGZhbHNlKSB7XG4gICAgICAgIHBoYXNlID0gUEhBU0VfQ0FOQ0VMO1xuICAgICAgICB0cmlnZ2VySGFuZGxlcihldmVudCwgcGhhc2UpO1xuICAgICAgICByZXR1cm4gcmV0O1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgaWYgKG9wdGlvbnMuaG9sZCkge1xuICAgICAgICAgIGhvbGRUaW1lb3V0ID0gc2V0VGltZW91dCgkLnByb3h5KGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgLy9UcmlnZ2VyIHRoZSBldmVudFxuICAgICAgICAgICAgJGVsZW1lbnQudHJpZ2dlcignaG9sZCcsIFtldmVudC50YXJnZXRdKTtcbiAgICAgICAgICAgIC8vRmlyZSB0aGUgY2FsbGJhY2tcbiAgICAgICAgICAgIGlmIChvcHRpb25zLmhvbGQpIHtcbiAgICAgICAgICAgICAgcmV0ID0gb3B0aW9ucy5ob2xkLmNhbGwoJGVsZW1lbnQsIGV2ZW50LCBldmVudC50YXJnZXQpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH0sIHRoaXMpLCBvcHRpb25zLmxvbmdUYXBUaHJlc2hvbGQpO1xuICAgICAgICB9XG5cbiAgICAgICAgc2V0VG91Y2hJblByb2dyZXNzKHRydWUpO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gbnVsbDtcbiAgICB9O1xuXG5cblxuICAgIC8qKlxuICAgICAqIEV2ZW50IGhhbmRsZXIgZm9yIGEgdG91Y2ggbW92ZSBldmVudC5cbiAgICAgKiBJZiB3ZSBjaGFuZ2UgZmluZ2VycyBkdXJpbmcgbW92ZSwgdGhlbiBjYW5jZWwgdGhlIGV2ZW50XG4gICAgICogQGlubmVyXG4gICAgICogQHBhcmFtIHtvYmplY3R9IGpxRXZlbnQgVGhlIG5vcm1hbGlzZWQgalF1ZXJ5IGV2ZW50IG9iamVjdC5cbiAgICAgKi9cbiAgICBmdW5jdGlvbiB0b3VjaE1vdmUoanFFdmVudCkge1xuXG4gICAgICAvL0FzIHdlIHVzZSBKcXVlcnkgYmluZCBmb3IgZXZlbnRzLCB3ZSBuZWVkIHRvIHRhcmdldCB0aGUgb3JpZ2luYWwgZXZlbnQgb2JqZWN0XG4gICAgICAvL0lmIHRoZXNlIGV2ZW50cyBhcmUgYmVpbmcgcHJvZ3JhbW1hdGljYWxseSB0cmlnZ2VyZWQsIHdlIGRvbid0IGhhdmUgYW4gb3JpZ2luYWwgZXZlbnQgb2JqZWN0LCBzbyB1c2UgdGhlIEpxIG9uZS5cbiAgICAgIHZhciBldmVudCA9IGpxRXZlbnQub3JpZ2luYWxFdmVudCA/IGpxRXZlbnQub3JpZ2luYWxFdmVudCA6IGpxRXZlbnQ7XG5cbiAgICAgIC8vSWYgd2UgYXJlIGVuZGluZywgY2FuY2VsbGluZywgb3Igd2l0aGluIHRoZSB0aHJlc2hvbGQgb2YgMiBmaW5nZXJzIGJlaW5nIHJlbGVhc2VkLCBkb24ndCB0cmFjayBhbnl0aGluZy4uXG4gICAgICBpZiAocGhhc2UgPT09IFBIQVNFX0VORCB8fCBwaGFzZSA9PT0gUEhBU0VfQ0FOQ0VMIHx8IGluTXVsdGlGaW5nZXJSZWxlYXNlKCkpXG4gICAgICAgIHJldHVybjtcblxuICAgICAgdmFyIHJldCxcbiAgICAgICAgdG91Y2hlcyA9IGV2ZW50LnRvdWNoZXMsXG4gICAgICAgIGV2dCA9IHRvdWNoZXMgPyB0b3VjaGVzWzBdIDogZXZlbnQ7XG5cblxuICAgICAgLy9VcGRhdGUgdGhlICBmaW5nZXIgZGF0YVxuICAgICAgdmFyIGN1cnJlbnRGaW5nZXIgPSB1cGRhdGVGaW5nZXJEYXRhKGV2dCk7XG4gICAgICBlbmRUaW1lID0gZ2V0VGltZVN0YW1wKCk7XG5cbiAgICAgIGlmICh0b3VjaGVzKSB7XG4gICAgICAgIGZpbmdlckNvdW50ID0gdG91Y2hlcy5sZW5ndGg7XG4gICAgICB9XG5cbiAgICAgIGlmIChvcHRpb25zLmhvbGQpIHtcbiAgICAgICAgY2xlYXJUaW1lb3V0KGhvbGRUaW1lb3V0KTtcbiAgICAgIH1cblxuICAgICAgcGhhc2UgPSBQSEFTRV9NT1ZFO1xuXG4gICAgICAvL0lmIHdlIGhhdmUgMiBmaW5nZXJzIGdldCBUb3VjaGVzIGRpc3RhbmNlIGFzIHdlbGxcbiAgICAgIGlmIChmaW5nZXJDb3VudCA9PSAyKSB7XG5cbiAgICAgICAgLy9LZWVwIHRyYWNrIG9mIHRoZSBpbml0aWFsIHBpbmNoIGRpc3RhbmNlLCBzbyB3ZSBjYW4gY2FsY3VsYXRlIHRoZSBkaWZmIGxhdGVyXG4gICAgICAgIC8vV2UgZG8gdGhpcyBoZXJlIGFzIHdlbGwgYXMgdGhlIHN0YXJ0IGV2ZW50LCBpbiBjYXNlIHRoZXkgc3RhcnQgd2l0aCAxIGZpbmdlciwgYW5kIHRoZSBwcmVzcyAyIGZpbmdlcnNcbiAgICAgICAgaWYgKHN0YXJ0VG91Y2hlc0Rpc3RhbmNlID09IDApIHtcbiAgICAgICAgICAvL0NyZWF0ZSBzZWNvbmQgZmluZ2VyIGlmIHRoaXMgaXMgdGhlIGZpcnN0IHRpbWUuLi5cbiAgICAgICAgICBjcmVhdGVGaW5nZXJEYXRhKDEsIHRvdWNoZXNbMV0pO1xuXG4gICAgICAgICAgc3RhcnRUb3VjaGVzRGlzdGFuY2UgPSBlbmRUb3VjaGVzRGlzdGFuY2UgPSBjYWxjdWxhdGVUb3VjaGVzRGlzdGFuY2UoZmluZ2VyRGF0YVswXS5zdGFydCwgZmluZ2VyRGF0YVsxXS5zdGFydCk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgLy9FbHNlIGp1c3QgdXBkYXRlIHRoZSBzZWNvbmQgZmluZ2VyXG4gICAgICAgICAgdXBkYXRlRmluZ2VyRGF0YSh0b3VjaGVzWzFdKTtcblxuICAgICAgICAgIGVuZFRvdWNoZXNEaXN0YW5jZSA9IGNhbGN1bGF0ZVRvdWNoZXNEaXN0YW5jZShmaW5nZXJEYXRhWzBdLmVuZCwgZmluZ2VyRGF0YVsxXS5lbmQpO1xuICAgICAgICAgIHBpbmNoRGlyZWN0aW9uID0gY2FsY3VsYXRlUGluY2hEaXJlY3Rpb24oZmluZ2VyRGF0YVswXS5lbmQsIGZpbmdlckRhdGFbMV0uZW5kKTtcbiAgICAgICAgfVxuXG4gICAgICAgIHBpbmNoWm9vbSA9IGNhbGN1bGF0ZVBpbmNoWm9vbShzdGFydFRvdWNoZXNEaXN0YW5jZSwgZW5kVG91Y2hlc0Rpc3RhbmNlKTtcbiAgICAgICAgcGluY2hEaXN0YW5jZSA9IE1hdGguYWJzKHN0YXJ0VG91Y2hlc0Rpc3RhbmNlIC0gZW5kVG91Y2hlc0Rpc3RhbmNlKTtcbiAgICAgIH1cblxuICAgICAgaWYgKChmaW5nZXJDb3VudCA9PT0gb3B0aW9ucy5maW5nZXJzIHx8IG9wdGlvbnMuZmluZ2VycyA9PT0gQUxMX0ZJTkdFUlMpIHx8ICF0b3VjaGVzIHx8IGhhc1BpbmNoZXMoKSkge1xuXG4gICAgICAgIC8vVGhlIG92ZXJhbGwgZGlyZWN0aW9uIG9mIHRoZSBzd2lwZS4gRnJvbSBzdGFydCB0byBub3cuXG4gICAgICAgIGRpcmVjdGlvbiA9IGNhbGN1bGF0ZURpcmVjdGlvbihjdXJyZW50RmluZ2VyLnN0YXJ0LCBjdXJyZW50RmluZ2VyLmVuZCk7XG5cbiAgICAgICAgLy9UaGUgaW1tZWRpYXRlIGRpcmVjdGlvbiBvZiB0aGUgc3dpcGUsIGRpcmVjdGlvbiBiZXR3ZWVuIHRoZSBsYXN0IG1vdmVtZW50IGFuZCB0aGlzIG9uZS5cbiAgICAgICAgY3VycmVudERpcmVjdGlvbiA9IGNhbGN1bGF0ZURpcmVjdGlvbihjdXJyZW50RmluZ2VyLmxhc3QsIGN1cnJlbnRGaW5nZXIuZW5kKTtcblxuICAgICAgICAvL0NoZWNrIGlmIHdlIG5lZWQgdG8gcHJldmVudCBkZWZhdWx0IGV2ZW50IChwYWdlIHNjcm9sbCAvIHBpbmNoIHpvb20pIG9yIG5vdFxuICAgICAgICB2YWxpZGF0ZURlZmF1bHRFdmVudChqcUV2ZW50LCBjdXJyZW50RGlyZWN0aW9uKTtcblxuICAgICAgICAvL0Rpc3RhbmNlIGFuZCBkdXJhdGlvbiBhcmUgYWxsIG9mZiB0aGUgbWFpbiBmaW5nZXJcbiAgICAgICAgZGlzdGFuY2UgPSBjYWxjdWxhdGVEaXN0YW5jZShjdXJyZW50RmluZ2VyLnN0YXJ0LCBjdXJyZW50RmluZ2VyLmVuZCk7XG4gICAgICAgIGR1cmF0aW9uID0gY2FsY3VsYXRlRHVyYXRpb24oKTtcblxuICAgICAgICAvL0NhY2hlIHRoZSBtYXhpbXVtIGRpc3RhbmNlIHdlIG1hZGUgaW4gdGhpcyBkaXJlY3Rpb25cbiAgICAgICAgc2V0TWF4RGlzdGFuY2UoZGlyZWN0aW9uLCBkaXN0YW5jZSk7XG5cbiAgICAgICAgLy9UcmlnZ2VyIHN0YXR1cyBoYW5kbGVyXG4gICAgICAgIHJldCA9IHRyaWdnZXJIYW5kbGVyKGV2ZW50LCBwaGFzZSk7XG5cblxuICAgICAgICAvL0lmIHdlIHRyaWdnZXIgZW5kIGV2ZW50cyB3aGVuIHRocmVzaG9sZCBhcmUgbWV0LCBvciB0cmlnZ2VyIGV2ZW50cyB3aGVuIHRvdWNoIGxlYXZlcyBlbGVtZW50XG4gICAgICAgIGlmICghb3B0aW9ucy50cmlnZ2VyT25Ub3VjaEVuZCB8fCBvcHRpb25zLnRyaWdnZXJPblRvdWNoTGVhdmUpIHtcblxuICAgICAgICAgIHZhciBpbkJvdW5kcyA9IHRydWU7XG5cbiAgICAgICAgICAvL0lmIGNoZWNraW5nIGlmIHdlIGxlYXZlIHRoZSBlbGVtZW50LCBydW4gdGhlIGJvdW5kcyBjaGVjayAod2UgY2FuIHVzZSB0b3VjaGxlYXZlIGFzIGl0cyBub3Qgc3VwcG9ydGVkIG9uIHdlYmtpdClcbiAgICAgICAgICBpZiAob3B0aW9ucy50cmlnZ2VyT25Ub3VjaExlYXZlKSB7XG4gICAgICAgICAgICB2YXIgYm91bmRzID0gZ2V0Ym91bmRzKHRoaXMpO1xuICAgICAgICAgICAgaW5Cb3VuZHMgPSBpc0luQm91bmRzKGN1cnJlbnRGaW5nZXIuZW5kLCBib3VuZHMpO1xuICAgICAgICAgIH1cblxuICAgICAgICAgIC8vVHJpZ2dlciBlbmQgaGFuZGxlcyBhcyB3ZSBzd2lwZSBpZiB0aHJlc2hvbGRzIG1ldCBvciBpZiB3ZSBoYXZlIGxlZnQgdGhlIGVsZW1lbnQgaWYgdGhlIHVzZXIgaGFzIGFza2VkIHRvIGNoZWNrIHRoZXNlLi5cbiAgICAgICAgICBpZiAoIW9wdGlvbnMudHJpZ2dlck9uVG91Y2hFbmQgJiYgaW5Cb3VuZHMpIHtcbiAgICAgICAgICAgIHBoYXNlID0gZ2V0TmV4dFBoYXNlKFBIQVNFX01PVkUpO1xuICAgICAgICAgIH1cbiAgICAgICAgICAvL1dlIGVuZCBpZiBvdXQgb2YgYm91bmRzIGhlcmUsIHNvIHNldCBjdXJyZW50IHBoYXNlIHRvIEVORCwgYW5kIGNoZWNrIGlmIGl0cyBtb2RpZmllZFxuICAgICAgICAgIGVsc2UgaWYgKG9wdGlvbnMudHJpZ2dlck9uVG91Y2hMZWF2ZSAmJiAhaW5Cb3VuZHMpIHtcbiAgICAgICAgICAgIHBoYXNlID0gZ2V0TmV4dFBoYXNlKFBIQVNFX0VORCk7XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgaWYgKHBoYXNlID09IFBIQVNFX0NBTkNFTCB8fCBwaGFzZSA9PSBQSEFTRV9FTkQpIHtcbiAgICAgICAgICAgIHRyaWdnZXJIYW5kbGVyKGV2ZW50LCBwaGFzZSk7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBwaGFzZSA9IFBIQVNFX0NBTkNFTDtcbiAgICAgICAgdHJpZ2dlckhhbmRsZXIoZXZlbnQsIHBoYXNlKTtcbiAgICAgIH1cblxuICAgICAgaWYgKHJldCA9PT0gZmFsc2UpIHtcbiAgICAgICAgcGhhc2UgPSBQSEFTRV9DQU5DRUw7XG4gICAgICAgIHRyaWdnZXJIYW5kbGVyKGV2ZW50LCBwaGFzZSk7XG4gICAgICB9XG4gICAgfVxuXG5cblxuXG4gICAgLyoqXG4gICAgICogRXZlbnQgaGFuZGxlciBmb3IgYSB0b3VjaCBlbmQgZXZlbnQuXG4gICAgICogQ2FsY3VsYXRlIHRoZSBkaXJlY3Rpb24gYW5kIHRyaWdnZXIgZXZlbnRzXG4gICAgICogQGlubmVyXG4gICAgICogQHBhcmFtIHtvYmplY3R9IGpxRXZlbnQgVGhlIG5vcm1hbGlzZWQgalF1ZXJ5IGV2ZW50IG9iamVjdC5cbiAgICAgKi9cbiAgICBmdW5jdGlvbiB0b3VjaEVuZChqcUV2ZW50KSB7XG4gICAgICAvL0FzIHdlIHVzZSBKcXVlcnkgYmluZCBmb3IgZXZlbnRzLCB3ZSBuZWVkIHRvIHRhcmdldCB0aGUgb3JpZ2luYWwgZXZlbnQgb2JqZWN0XG4gICAgICAvL0lmIHRoZXNlIGV2ZW50cyBhcmUgYmVpbmcgcHJvZ3JhbW1hdGljYWxseSB0cmlnZ2VyZWQsIHdlIGRvbid0IGhhdmUgYW4gb3JpZ2luYWwgZXZlbnQgb2JqZWN0LCBzbyB1c2UgdGhlIEpxIG9uZS5cbiAgICAgIHZhciBldmVudCA9IGpxRXZlbnQub3JpZ2luYWxFdmVudCA/IGpxRXZlbnQub3JpZ2luYWxFdmVudCA6IGpxRXZlbnQsXG4gICAgICAgIHRvdWNoZXMgPSBldmVudC50b3VjaGVzO1xuXG4gICAgICAvL0lmIHdlIGFyZSBzdGlsbCBpbiBhIHRvdWNoIHdpdGggdGhlIGRldmljZSB3YWl0IGEgZnJhY3Rpb24gYW5kIHNlZSBpZiB0aGUgb3RoZXIgZmluZ2VyIGNvbWVzIHVwXG4gICAgICAvL2lmIGl0IGRvZXMgd2l0aGluIHRoZSB0aHJlc2hvbGQsIHRoZW4gd2UgdHJlYXQgaXQgYXMgYSBtdWx0aSByZWxlYXNlLCBub3QgYSBzaW5nbGUgcmVsZWFzZSBhbmQgZW5kIHRoZSB0b3VjaCAvIHN3aXBlXG4gICAgICBpZiAodG91Y2hlcykge1xuICAgICAgICBpZiAodG91Y2hlcy5sZW5ndGggJiYgIWluTXVsdGlGaW5nZXJSZWxlYXNlKCkpIHtcbiAgICAgICAgICBzdGFydE11bHRpRmluZ2VyUmVsZWFzZShldmVudCk7XG4gICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgIH0gZWxzZSBpZiAodG91Y2hlcy5sZW5ndGggJiYgaW5NdWx0aUZpbmdlclJlbGVhc2UoKSkge1xuICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIC8vSWYgYSBwcmV2aW91cyBmaW5nZXIgaGFzIGJlZW4gcmVsZWFzZWQsIGNoZWNrIGhvdyBsb25nIGFnbywgaWYgd2l0aGluIHRoZSB0aHJlc2hvbGQsIHRoZW4gYXNzdW1lIGl0IHdhcyBhIG11bHRpZmluZ2VyIHJlbGVhc2UuXG4gICAgICAvL1RoaXMgaXMgdXNlZCB0byBhbGxvdyAyIGZpbmdlcnMgdG8gcmVsZWFzZSBmcmFjdGlvbmFsbHkgYWZ0ZXIgZWFjaCBvdGhlciwgd2hpbHN0IG1haW50YWluaW5nIHRoZSBldmVudCBhcyBjb250YWluaW5nIDIgZmluZ2Vycywgbm90IDFcbiAgICAgIGlmIChpbk11bHRpRmluZ2VyUmVsZWFzZSgpKSB7XG4gICAgICAgIGZpbmdlckNvdW50ID0gZmluZ2VyQ291bnRBdFJlbGVhc2U7XG4gICAgICB9XG5cbiAgICAgIC8vU2V0IGVuZCBvZiBzd2lwZVxuICAgICAgZW5kVGltZSA9IGdldFRpbWVTdGFtcCgpO1xuXG4gICAgICAvL0dldCBkdXJhdGlvbiBpbmNhc2UgbW92ZSB3YXMgbmV2ZXIgZmlyZWRcbiAgICAgIGR1cmF0aW9uID0gY2FsY3VsYXRlRHVyYXRpb24oKTtcblxuICAgICAgLy9JZiB3ZSB0cmlnZ2VyIGhhbmRsZXJzIGF0IGVuZCBvZiBzd2lwZSBPUiwgd2UgdHJpZ2dlciBkdXJpbmcsIGJ1dCB0aGV5IGRpZG50IHRyaWdnZXIgYW5kIHdlIGFyZSBzdGlsbCBpbiB0aGUgbW92ZSBwaGFzZVxuICAgICAgaWYgKGRpZFN3aXBlQmFja1RvQ2FuY2VsKCkgfHwgIXZhbGlkYXRlU3dpcGVEaXN0YW5jZSgpKSB7XG4gICAgICAgIHBoYXNlID0gUEhBU0VfQ0FOQ0VMO1xuICAgICAgICB0cmlnZ2VySGFuZGxlcihldmVudCwgcGhhc2UpO1xuICAgICAgfSBlbHNlIGlmIChvcHRpb25zLnRyaWdnZXJPblRvdWNoRW5kIHx8IChvcHRpb25zLnRyaWdnZXJPblRvdWNoRW5kID09PSBmYWxzZSAmJiBwaGFzZSA9PT0gUEhBU0VfTU9WRSkpIHtcbiAgICAgICAgLy9jYWxsIHRoaXMgb24ganEgZXZlbnQgc28gd2UgYXJlIGNyb3NzIGJyb3dzZXJcbiAgICAgICAgaWYgKG9wdGlvbnMucHJldmVudERlZmF1bHRFdmVudHMgIT09IGZhbHNlICYmIGpxRXZlbnQuY2FuY2VsYWJsZSAhPT0gZmFsc2UpIHtcbiAgICAgICAgICBqcUV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgIH1cbiAgICAgICAgcGhhc2UgPSBQSEFTRV9FTkQ7XG4gICAgICAgIHRyaWdnZXJIYW5kbGVyKGV2ZW50LCBwaGFzZSk7XG4gICAgICB9XG4gICAgICAvL1NwZWNpYWwgY2FzZXMgLSBBIHRhcCBzaG91bGQgYWx3YXlzIGZpcmUgb24gdG91Y2ggZW5kIHJlZ2FyZGxlc3MsXG4gICAgICAvL1NvIGhlcmUgd2UgbWFudWFsbHkgdHJpZ2dlciB0aGUgdGFwIGVuZCBoYW5kbGVyIGJ5IGl0c2VsZlxuICAgICAgLy9XZSBkb250IHJ1biB0cmlnZ2VyIGhhbmRsZXIgYXMgaXQgd2lsbCByZS10cmlnZ2VyIGV2ZW50cyB0aGF0IG1heSBoYXZlIGZpcmVkIGFscmVhZHlcbiAgICAgIGVsc2UgaWYgKCFvcHRpb25zLnRyaWdnZXJPblRvdWNoRW5kICYmIGhhc1RhcCgpKSB7XG4gICAgICAgIC8vVHJpZ2dlciB0aGUgcGluY2ggZXZlbnRzLi4uXG4gICAgICAgIHBoYXNlID0gUEhBU0VfRU5EO1xuICAgICAgICB0cmlnZ2VySGFuZGxlckZvckdlc3R1cmUoZXZlbnQsIHBoYXNlLCBUQVApO1xuICAgICAgfSBlbHNlIGlmIChwaGFzZSA9PT0gUEhBU0VfTU9WRSkge1xuICAgICAgICBwaGFzZSA9IFBIQVNFX0NBTkNFTDtcbiAgICAgICAgdHJpZ2dlckhhbmRsZXIoZXZlbnQsIHBoYXNlKTtcbiAgICAgIH1cblxuICAgICAgc2V0VG91Y2hJblByb2dyZXNzKGZhbHNlKTtcblxuICAgICAgcmV0dXJuIG51bGw7XG4gICAgfVxuXG5cblxuICAgIC8qKlxuICAgICAqIEV2ZW50IGhhbmRsZXIgZm9yIGEgdG91Y2ggY2FuY2VsIGV2ZW50LlxuICAgICAqIENsZWFycyBjdXJyZW50IHZhcnNcbiAgICAgKiBAaW5uZXJcbiAgICAgKi9cbiAgICBmdW5jdGlvbiB0b3VjaENhbmNlbCgpIHtcbiAgICAgIC8vIHJlc2V0IHRoZSB2YXJpYWJsZXMgYmFjayB0byBkZWZhdWx0IHZhbHVlc1xuICAgICAgZmluZ2VyQ291bnQgPSAwO1xuICAgICAgZW5kVGltZSA9IDA7XG4gICAgICBzdGFydFRpbWUgPSAwO1xuICAgICAgc3RhcnRUb3VjaGVzRGlzdGFuY2UgPSAwO1xuICAgICAgZW5kVG91Y2hlc0Rpc3RhbmNlID0gMDtcbiAgICAgIHBpbmNoWm9vbSA9IDE7XG5cbiAgICAgIC8vSWYgd2Ugd2VyZSBpbiBwcm9ncmVzcyBvZiB0cmFja2luZyBhIHBvc3NpYmxlIG11bHRpIHRvdWNoIGVuZCwgdGhlbiByZSBzZXQgaXQuXG4gICAgICBjYW5jZWxNdWx0aUZpbmdlclJlbGVhc2UoKTtcblxuICAgICAgc2V0VG91Y2hJblByb2dyZXNzKGZhbHNlKTtcbiAgICB9XG5cblxuICAgIC8qKlxuICAgICAqIEV2ZW50IGhhbmRsZXIgZm9yIGEgdG91Y2ggbGVhdmUgZXZlbnQuXG4gICAgICogVGhpcyBpcyBvbmx5IHRyaWdnZXJlZCBvbiBkZXNrdG9wcywgaW4gdG91Y2ggd2Ugd29yayB0aGlzIG91dCBtYW51YWxseVxuICAgICAqIGFzIHRoZSB0b3VjaGxlYXZlIGV2ZW50IGlzIG5vdCBzdXBwb3J0ZWQgaW4gd2Via2l0XG4gICAgICogQGlubmVyXG4gICAgICovXG4gICAgZnVuY3Rpb24gdG91Y2hMZWF2ZShqcUV2ZW50KSB7XG4gICAgICAvL0lmIHRoZXNlIGV2ZW50cyBhcmUgYmVpbmcgcHJvZ3JhbW1hdGljYWxseSB0cmlnZ2VyZWQsIHdlIGRvbid0IGhhdmUgYW4gb3JpZ2luYWwgZXZlbnQgb2JqZWN0LCBzbyB1c2UgdGhlIEpxIG9uZS5cbiAgICAgIHZhciBldmVudCA9IGpxRXZlbnQub3JpZ2luYWxFdmVudCA/IGpxRXZlbnQub3JpZ2luYWxFdmVudCA6IGpxRXZlbnQ7XG5cbiAgICAgIC8vSWYgd2UgaGF2ZSB0aGUgdHJpZ2dlciBvbiBsZWF2ZSBwcm9wZXJ0eSBzZXQuLi4uXG4gICAgICBpZiAob3B0aW9ucy50cmlnZ2VyT25Ub3VjaExlYXZlKSB7XG4gICAgICAgIHBoYXNlID0gZ2V0TmV4dFBoYXNlKFBIQVNFX0VORCk7XG4gICAgICAgIHRyaWdnZXJIYW5kbGVyKGV2ZW50LCBwaGFzZSk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogUmVtb3ZlcyBhbGwgbGlzdGVuZXJzIHRoYXQgd2VyZSBhc3NvY2lhdGVkIHdpdGggdGhlIHBsdWdpblxuICAgICAqIEBpbm5lclxuICAgICAqL1xuICAgIGZ1bmN0aW9uIHJlbW92ZUxpc3RlbmVycygpIHtcbiAgICAgICRlbGVtZW50Lm9mZihTVEFSVF9FViwgdG91Y2hTdGFydCk7XG4gICAgICAkZWxlbWVudC5vZmYoQ0FOQ0VMX0VWLCB0b3VjaENhbmNlbCk7XG4gICAgICAkZWxlbWVudC5vZmYoTU9WRV9FViwgdG91Y2hNb3ZlKTtcbiAgICAgICRlbGVtZW50Lm9mZihFTkRfRVYsIHRvdWNoRW5kKTtcblxuICAgICAgLy93ZSBvbmx5IGhhdmUgbGVhdmUgZXZlbnRzIG9uIGRlc2t0b3AsIHdlIG1hbnVhbGx5IGNhbGN1bGF0ZSBsZWF2ZSBvbiB0b3VjaCBhcyBpdHMgbm90IHN1cHBvcnRlZCBpbiB3ZWJraXRcbiAgICAgIGlmIChMRUFWRV9FVikge1xuICAgICAgICAkZWxlbWVudC5vZmYoTEVBVkVfRVYsIHRvdWNoTGVhdmUpO1xuICAgICAgfVxuXG4gICAgICBzZXRUb3VjaEluUHJvZ3Jlc3MoZmFsc2UpO1xuICAgIH1cblxuXG4gICAgLyoqXG4gICAgICogQ2hlY2tzIGlmIHRoZSB0aW1lIGFuZCBkaXN0YW5jZSB0aHJlc2hvbGRzIGhhdmUgYmVlbiBtZXQsIGFuZCBpZiBzbyB0aGVuIHRoZSBhcHByb3ByaWF0ZSBoYW5kbGVycyBhcmUgZmlyZWQuXG4gICAgICovXG4gICAgZnVuY3Rpb24gZ2V0TmV4dFBoYXNlKGN1cnJlbnRQaGFzZSkge1xuXG4gICAgICB2YXIgbmV4dFBoYXNlID0gY3VycmVudFBoYXNlO1xuXG4gICAgICAvLyBFbnN1cmUgd2UgaGF2ZSB2YWxpZCBzd2lwZSAodW5kZXIgdGltZSBhbmQgb3ZlciBkaXN0YW5jZSAgYW5kIGNoZWNrIGlmIHdlIGFyZSBvdXQgb2YgYm91bmQuLi4pXG4gICAgICB2YXIgdmFsaWRUaW1lID0gdmFsaWRhdGVTd2lwZVRpbWUoKTtcbiAgICAgIHZhciB2YWxpZERpc3RhbmNlID0gdmFsaWRhdGVTd2lwZURpc3RhbmNlKCk7XG4gICAgICB2YXIgZGlkQ2FuY2VsID0gZGlkU3dpcGVCYWNrVG9DYW5jZWwoKTtcblxuICAgICAgLy9JZiB3ZSBoYXZlIGV4Y2VlZGVkIG91ciB0aW1lLCB0aGVuIGNhbmNlbFxuICAgICAgaWYgKCF2YWxpZFRpbWUgfHwgZGlkQ2FuY2VsKSB7XG4gICAgICAgIG5leHRQaGFzZSA9IFBIQVNFX0NBTkNFTDtcbiAgICAgIH1cbiAgICAgIC8vRWxzZSBpZiB3ZSBhcmUgbW92aW5nLCBhbmQgaGF2ZSByZWFjaGVkIGRpc3RhbmNlIHRoZW4gZW5kXG4gICAgICBlbHNlIGlmICh2YWxpZERpc3RhbmNlICYmIGN1cnJlbnRQaGFzZSA9PSBQSEFTRV9NT1ZFICYmICghb3B0aW9ucy50cmlnZ2VyT25Ub3VjaEVuZCB8fCBvcHRpb25zLnRyaWdnZXJPblRvdWNoTGVhdmUpKSB7XG4gICAgICAgIG5leHRQaGFzZSA9IFBIQVNFX0VORDtcbiAgICAgIH1cbiAgICAgIC8vRWxzZSBpZiB3ZSBoYXZlIGVuZGVkIGJ5IGxlYXZpbmcgYW5kIGRpZG4ndCByZWFjaCBkaXN0YW5jZSwgdGhlbiBjYW5jZWxcbiAgICAgIGVsc2UgaWYgKCF2YWxpZERpc3RhbmNlICYmIGN1cnJlbnRQaGFzZSA9PSBQSEFTRV9FTkQgJiYgb3B0aW9ucy50cmlnZ2VyT25Ub3VjaExlYXZlKSB7XG4gICAgICAgIG5leHRQaGFzZSA9IFBIQVNFX0NBTkNFTDtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIG5leHRQaGFzZTtcbiAgICB9XG5cblxuICAgIC8qKlxuICAgICAqIFRyaWdnZXIgdGhlIHJlbGV2YW50IGV2ZW50IGhhbmRsZXJcbiAgICAgKiBUaGUgaGFuZGxlcnMgYXJlIHBhc3NlZCB0aGUgb3JpZ2luYWwgZXZlbnQsIHRoZSBlbGVtZW50IHRoYXQgd2FzIHN3aXBlZCwgYW5kIGluIHRoZSBjYXNlIG9mIHRoZSBjYXRjaCBhbGwgaGFuZGxlciwgdGhlIGRpcmVjdGlvbiB0aGF0IHdhcyBzd2lwZWQsIFwibGVmdFwiLCBcInJpZ2h0XCIsIFwidXBcIiwgb3IgXCJkb3duXCJcbiAgICAgKiBAcGFyYW0ge29iamVjdH0gZXZlbnQgdGhlIG9yaWdpbmFsIGV2ZW50IG9iamVjdFxuICAgICAqIEBwYXJhbSB7c3RyaW5nfSBwaGFzZSB0aGUgcGhhc2Ugb2YgdGhlIHN3aXBlIChzdGFydCwgZW5kIGNhbmNlbCBldGMpIHtAbGluayAkLmZuLnN3aXBlLnBoYXNlc31cbiAgICAgKiBAaW5uZXJcbiAgICAgKi9cbiAgICBmdW5jdGlvbiB0cmlnZ2VySGFuZGxlcihldmVudCwgcGhhc2UpIHtcblxuXG5cbiAgICAgIHZhciByZXQsXG4gICAgICAgIHRvdWNoZXMgPSBldmVudC50b3VjaGVzO1xuXG4gICAgICAvLyBTV0lQRSBHRVNUVVJFU1xuICAgICAgaWYgKGRpZFN3aXBlKCkgfHwgaGFzU3dpcGVzKCkpIHtcbiAgICAgICAgICByZXQgPSB0cmlnZ2VySGFuZGxlckZvckdlc3R1cmUoZXZlbnQsIHBoYXNlLCBTV0lQRSk7XG4gICAgICB9XG5cbiAgICAgIC8vIFBJTkNIIEdFU1RVUkVTIChpZiB0aGUgYWJvdmUgZGlkbid0IGNhbmNlbClcbiAgICAgIGlmICgoZGlkUGluY2goKSB8fCBoYXNQaW5jaGVzKCkpICYmIHJldCAhPT0gZmFsc2UpIHtcbiAgICAgICAgICByZXQgPSB0cmlnZ2VySGFuZGxlckZvckdlc3R1cmUoZXZlbnQsIHBoYXNlLCBQSU5DSCk7XG4gICAgICB9XG5cbiAgICAgIC8vIENMSUNLIC8gVEFQIChpZiB0aGUgYWJvdmUgZGlkbid0IGNhbmNlbClcbiAgICAgIGlmIChkaWREb3VibGVUYXAoKSAmJiByZXQgIT09IGZhbHNlKSB7XG4gICAgICAgIC8vVHJpZ2dlciB0aGUgdGFwIGV2ZW50cy4uLlxuICAgICAgICByZXQgPSB0cmlnZ2VySGFuZGxlckZvckdlc3R1cmUoZXZlbnQsIHBoYXNlLCBET1VCTEVfVEFQKTtcbiAgICAgIH1cblxuICAgICAgLy8gQ0xJQ0sgLyBUQVAgKGlmIHRoZSBhYm92ZSBkaWRuJ3QgY2FuY2VsKVxuICAgICAgZWxzZSBpZiAoZGlkTG9uZ1RhcCgpICYmIHJldCAhPT0gZmFsc2UpIHtcbiAgICAgICAgLy9UcmlnZ2VyIHRoZSB0YXAgZXZlbnRzLi4uXG4gICAgICAgIHJldCA9IHRyaWdnZXJIYW5kbGVyRm9yR2VzdHVyZShldmVudCwgcGhhc2UsIExPTkdfVEFQKTtcbiAgICAgIH1cblxuICAgICAgLy8gQ0xJQ0sgLyBUQVAgKGlmIHRoZSBhYm92ZSBkaWRuJ3QgY2FuY2VsKVxuICAgICAgZWxzZSBpZiAoZGlkVGFwKCkgJiYgcmV0ICE9PSBmYWxzZSkge1xuICAgICAgICAvL1RyaWdnZXIgdGhlIHRhcCBldmVudC4uXG4gICAgICAgIHJldCA9IHRyaWdnZXJIYW5kbGVyRm9yR2VzdHVyZShldmVudCwgcGhhc2UsIFRBUCk7XG4gICAgICB9XG5cblxuXG4gICAgICAvLyBJZiB3ZSBhcmUgY2FuY2VsbGluZyB0aGUgZ2VzdHVyZSwgdGhlbiBtYW51YWxseSB0cmlnZ2VyIHRoZSByZXNldCBoYW5kbGVyXG4gICAgICBpZiAocGhhc2UgPT09IFBIQVNFX0NBTkNFTCkge1xuXG4gICAgICAgIHRvdWNoQ2FuY2VsKGV2ZW50KTtcbiAgICAgIH1cblxuXG5cblxuICAgICAgLy8gSWYgd2UgYXJlIGVuZGluZyB0aGUgZ2VzdHVyZSwgdGhlbiBtYW51YWxseSB0cmlnZ2VyIHRoZSByZXNldCBoYW5kbGVyIElGIGFsbCBmaW5nZXJzIGFyZSBvZmZcbiAgICAgIGlmIChwaGFzZSA9PT0gUEhBU0VfRU5EKSB7XG4gICAgICAgIC8vSWYgd2Ugc3VwcG9ydCB0b3VjaCwgdGhlbiBjaGVjayB0aGF0IGFsbCBmaW5nZXJzIGFyZSBvZmYgYmVmb3JlIHdlIGNhbmNlbFxuICAgICAgICBpZiAodG91Y2hlcykge1xuICAgICAgICAgIGlmICghdG91Y2hlcy5sZW5ndGgpIHtcbiAgICAgICAgICAgIHRvdWNoQ2FuY2VsKGV2ZW50KTtcbiAgICAgICAgICB9XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgdG91Y2hDYW5jZWwoZXZlbnQpO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIHJldHVybiByZXQ7XG4gICAgfVxuXG5cblxuICAgIC8qKlxuICAgICAqIFRyaWdnZXIgdGhlIHJlbGV2YW50IGV2ZW50IGhhbmRsZXJcbiAgICAgKiBUaGUgaGFuZGxlcnMgYXJlIHBhc3NlZCB0aGUgb3JpZ2luYWwgZXZlbnQsIHRoZSBlbGVtZW50IHRoYXQgd2FzIHN3aXBlZCwgYW5kIGluIHRoZSBjYXNlIG9mIHRoZSBjYXRjaCBhbGwgaGFuZGxlciwgdGhlIGRpcmVjdGlvbiB0aGF0IHdhcyBzd2lwZWQsIFwibGVmdFwiLCBcInJpZ2h0XCIsIFwidXBcIiwgb3IgXCJkb3duXCJcbiAgICAgKiBAcGFyYW0ge29iamVjdH0gZXZlbnQgdGhlIG9yaWdpbmFsIGV2ZW50IG9iamVjdFxuICAgICAqIEBwYXJhbSB7c3RyaW5nfSBwaGFzZSB0aGUgcGhhc2Ugb2YgdGhlIHN3aXBlIChzdGFydCwgZW5kIGNhbmNlbCBldGMpIHtAbGluayAkLmZuLnN3aXBlLnBoYXNlc31cbiAgICAgKiBAcGFyYW0ge3N0cmluZ30gZ2VzdHVyZSB0aGUgZ2VzdHVyZSB0byB0cmlnZ2VyIGEgaGFuZGxlciBmb3IgOiBQSU5DSCBvciBTV0lQRSB7QGxpbmsgJC5mbi5zd2lwZS5nZXN0dXJlc31cbiAgICAgKiBAcmV0dXJuIEJvb2xlYW4gRmFsc2UsIHRvIGluZGljYXRlIHRoYXQgdGhlIGV2ZW50IHNob3VsZCBzdG9wIHByb3BhZ2F0aW9uLCBvciB2b2lkLlxuICAgICAqIEBpbm5lclxuICAgICAqL1xuICAgIGZ1bmN0aW9uIHRyaWdnZXJIYW5kbGVyRm9yR2VzdHVyZShldmVudCwgcGhhc2UsIGdlc3R1cmUpIHtcblxuICAgICAgdmFyIHJldDtcblxuICAgICAgLy9TV0lQRVMuLi4uXG4gICAgICBpZiAoZ2VzdHVyZSA9PSBTV0lQRSkge1xuICAgICAgICAvL1RyaWdnZXIgc3RhdHVzIGV2ZXJ5IHRpbWUuLlxuICAgICAgICAkZWxlbWVudC50cmlnZ2VyKCdzd2lwZVN0YXR1cycsIFtwaGFzZSwgZGlyZWN0aW9uIHx8IG51bGwsIGRpc3RhbmNlIHx8IDAsIGR1cmF0aW9uIHx8IDAsIGZpbmdlckNvdW50LCBmaW5nZXJEYXRhLCBjdXJyZW50RGlyZWN0aW9uXSk7XG5cbiAgICAgICAgaWYgKG9wdGlvbnMuc3dpcGVTdGF0dXMpIHtcbiAgICAgICAgICByZXQgPSBvcHRpb25zLnN3aXBlU3RhdHVzLmNhbGwoJGVsZW1lbnQsIGV2ZW50LCBwaGFzZSwgZGlyZWN0aW9uIHx8IG51bGwsIGRpc3RhbmNlIHx8IDAsIGR1cmF0aW9uIHx8IDAsIGZpbmdlckNvdW50LCBmaW5nZXJEYXRhLCBjdXJyZW50RGlyZWN0aW9uKTtcbiAgICAgICAgICAvL0lmIHRoZSBzdGF0dXMgY2FuY2VscywgdGhlbiBkb250IHJ1biB0aGUgc3Vic2VxdWVudCBldmVudCBoYW5kbGVycy4uXG4gICAgICAgICAgaWYgKHJldCA9PT0gZmFsc2UpIHJldHVybiBmYWxzZTtcbiAgICAgICAgfVxuXG4gICAgICAgIGlmIChwaGFzZSA9PSBQSEFTRV9FTkQgJiYgdmFsaWRhdGVTd2lwZSgpKSB7XG5cbiAgICAgICAgICAvL0NhbmNlbCBhbnkgdGFwcyB0aGF0IHdlcmUgaW4gcHJvZ3Jlc3MuLi5cbiAgICAgICAgICBjbGVhclRpbWVvdXQoc2luZ2xlVGFwVGltZW91dCk7XG4gICAgICAgICAgY2xlYXJUaW1lb3V0KGhvbGRUaW1lb3V0KTtcblxuICAgICAgICAgICRlbGVtZW50LnRyaWdnZXIoJ3N3aXBlJywgW2RpcmVjdGlvbiwgZGlzdGFuY2UsIGR1cmF0aW9uLCBmaW5nZXJDb3VudCwgZmluZ2VyRGF0YSwgY3VycmVudERpcmVjdGlvbl0pO1xuXG4gICAgICAgICAgaWYgKG9wdGlvbnMuc3dpcGUpIHtcbiAgICAgICAgICAgIHJldCA9IG9wdGlvbnMuc3dpcGUuY2FsbCgkZWxlbWVudCwgZXZlbnQsIGRpcmVjdGlvbiwgZGlzdGFuY2UsIGR1cmF0aW9uLCBmaW5nZXJDb3VudCwgZmluZ2VyRGF0YSwgY3VycmVudERpcmVjdGlvbik7XG4gICAgICAgICAgICAvL0lmIHRoZSBzdGF0dXMgY2FuY2VscywgdGhlbiBkb250IHJ1biB0aGUgc3Vic2VxdWVudCBldmVudCBoYW5kbGVycy4uXG4gICAgICAgICAgICBpZiAocmV0ID09PSBmYWxzZSkgcmV0dXJuIGZhbHNlO1xuICAgICAgICAgIH1cblxuICAgICAgICAgIC8vdHJpZ2dlciBkaXJlY3Rpb24gc3BlY2lmaWMgZXZlbnQgaGFuZGxlcnNcbiAgICAgICAgICBzd2l0Y2ggKGRpcmVjdGlvbikge1xuICAgICAgICAgICAgY2FzZSBMRUZUOlxuICAgICAgICAgICAgICAkZWxlbWVudC50cmlnZ2VyKCdzd2lwZUxlZnQnLCBbZGlyZWN0aW9uLCBkaXN0YW5jZSwgZHVyYXRpb24sIGZpbmdlckNvdW50LCBmaW5nZXJEYXRhLCBjdXJyZW50RGlyZWN0aW9uXSk7XG5cbiAgICAgICAgICAgICAgaWYgKG9wdGlvbnMuc3dpcGVMZWZ0KSB7XG4gICAgICAgICAgICAgICAgcmV0ID0gb3B0aW9ucy5zd2lwZUxlZnQuY2FsbCgkZWxlbWVudCwgZXZlbnQsIGRpcmVjdGlvbiwgZGlzdGFuY2UsIGR1cmF0aW9uLCBmaW5nZXJDb3VudCwgZmluZ2VyRGF0YSwgY3VycmVudERpcmVjdGlvbik7XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgYnJlYWs7XG5cbiAgICAgICAgICAgIGNhc2UgUklHSFQ6XG4gICAgICAgICAgICAgICRlbGVtZW50LnRyaWdnZXIoJ3N3aXBlUmlnaHQnLCBbZGlyZWN0aW9uLCBkaXN0YW5jZSwgZHVyYXRpb24sIGZpbmdlckNvdW50LCBmaW5nZXJEYXRhLCBjdXJyZW50RGlyZWN0aW9uXSk7XG5cbiAgICAgICAgICAgICAgaWYgKG9wdGlvbnMuc3dpcGVSaWdodCkge1xuICAgICAgICAgICAgICAgIHJldCA9IG9wdGlvbnMuc3dpcGVSaWdodC5jYWxsKCRlbGVtZW50LCBldmVudCwgZGlyZWN0aW9uLCBkaXN0YW5jZSwgZHVyYXRpb24sIGZpbmdlckNvdW50LCBmaW5nZXJEYXRhLCBjdXJyZW50RGlyZWN0aW9uKTtcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICBicmVhaztcblxuICAgICAgICAgICAgY2FzZSBVUDpcbiAgICAgICAgICAgICAgJGVsZW1lbnQudHJpZ2dlcignc3dpcGVVcCcsIFtkaXJlY3Rpb24sIGRpc3RhbmNlLCBkdXJhdGlvbiwgZmluZ2VyQ291bnQsIGZpbmdlckRhdGEsIGN1cnJlbnREaXJlY3Rpb25dKTtcblxuICAgICAgICAgICAgICBpZiAob3B0aW9ucy5zd2lwZVVwKSB7XG4gICAgICAgICAgICAgICAgcmV0ID0gb3B0aW9ucy5zd2lwZVVwLmNhbGwoJGVsZW1lbnQsIGV2ZW50LCBkaXJlY3Rpb24sIGRpc3RhbmNlLCBkdXJhdGlvbiwgZmluZ2VyQ291bnQsIGZpbmdlckRhdGEsIGN1cnJlbnREaXJlY3Rpb24pO1xuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIGJyZWFrO1xuXG4gICAgICAgICAgICBjYXNlIERPV046XG4gICAgICAgICAgICAgICRlbGVtZW50LnRyaWdnZXIoJ3N3aXBlRG93bicsIFtkaXJlY3Rpb24sIGRpc3RhbmNlLCBkdXJhdGlvbiwgZmluZ2VyQ291bnQsIGZpbmdlckRhdGEsIGN1cnJlbnREaXJlY3Rpb25dKTtcblxuICAgICAgICAgICAgICBpZiAob3B0aW9ucy5zd2lwZURvd24pIHtcbiAgICAgICAgICAgICAgICByZXQgPSBvcHRpb25zLnN3aXBlRG93bi5jYWxsKCRlbGVtZW50LCBldmVudCwgZGlyZWN0aW9uLCBkaXN0YW5jZSwgZHVyYXRpb24sIGZpbmdlckNvdW50LCBmaW5nZXJEYXRhLCBjdXJyZW50RGlyZWN0aW9uKTtcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH1cblxuXG4gICAgICAvL1BJTkNIRVMuLi4uXG4gICAgICBpZiAoZ2VzdHVyZSA9PSBQSU5DSCkge1xuICAgICAgICAkZWxlbWVudC50cmlnZ2VyKCdwaW5jaFN0YXR1cycsIFtwaGFzZSwgcGluY2hEaXJlY3Rpb24gfHwgbnVsbCwgcGluY2hEaXN0YW5jZSB8fCAwLCBkdXJhdGlvbiB8fCAwLCBmaW5nZXJDb3VudCwgcGluY2hab29tLCBmaW5nZXJEYXRhXSk7XG5cbiAgICAgICAgaWYgKG9wdGlvbnMucGluY2hTdGF0dXMpIHtcbiAgICAgICAgICByZXQgPSBvcHRpb25zLnBpbmNoU3RhdHVzLmNhbGwoJGVsZW1lbnQsIGV2ZW50LCBwaGFzZSwgcGluY2hEaXJlY3Rpb24gfHwgbnVsbCwgcGluY2hEaXN0YW5jZSB8fCAwLCBkdXJhdGlvbiB8fCAwLCBmaW5nZXJDb3VudCwgcGluY2hab29tLCBmaW5nZXJEYXRhKTtcbiAgICAgICAgICAvL0lmIHRoZSBzdGF0dXMgY2FuY2VscywgdGhlbiBkb250IHJ1biB0aGUgc3Vic2VxdWVudCBldmVudCBoYW5kbGVycy4uXG4gICAgICAgICAgaWYgKHJldCA9PT0gZmFsc2UpIHJldHVybiBmYWxzZTtcbiAgICAgICAgfVxuXG4gICAgICAgIGlmIChwaGFzZSA9PSBQSEFTRV9FTkQgJiYgdmFsaWRhdGVQaW5jaCgpKSB7XG5cbiAgICAgICAgICBzd2l0Y2ggKHBpbmNoRGlyZWN0aW9uKSB7XG4gICAgICAgICAgICBjYXNlIElOOlxuICAgICAgICAgICAgICAkZWxlbWVudC50cmlnZ2VyKCdwaW5jaEluJywgW3BpbmNoRGlyZWN0aW9uIHx8IG51bGwsIHBpbmNoRGlzdGFuY2UgfHwgMCwgZHVyYXRpb24gfHwgMCwgZmluZ2VyQ291bnQsIHBpbmNoWm9vbSwgZmluZ2VyRGF0YV0pO1xuXG4gICAgICAgICAgICAgIGlmIChvcHRpb25zLnBpbmNoSW4pIHtcbiAgICAgICAgICAgICAgICByZXQgPSBvcHRpb25zLnBpbmNoSW4uY2FsbCgkZWxlbWVudCwgZXZlbnQsIHBpbmNoRGlyZWN0aW9uIHx8IG51bGwsIHBpbmNoRGlzdGFuY2UgfHwgMCwgZHVyYXRpb24gfHwgMCwgZmluZ2VyQ291bnQsIHBpbmNoWm9vbSwgZmluZ2VyRGF0YSk7XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgYnJlYWs7XG5cbiAgICAgICAgICAgIGNhc2UgT1VUOlxuICAgICAgICAgICAgICAkZWxlbWVudC50cmlnZ2VyKCdwaW5jaE91dCcsIFtwaW5jaERpcmVjdGlvbiB8fCBudWxsLCBwaW5jaERpc3RhbmNlIHx8IDAsIGR1cmF0aW9uIHx8IDAsIGZpbmdlckNvdW50LCBwaW5jaFpvb20sIGZpbmdlckRhdGFdKTtcblxuICAgICAgICAgICAgICBpZiAob3B0aW9ucy5waW5jaE91dCkge1xuICAgICAgICAgICAgICAgIHJldCA9IG9wdGlvbnMucGluY2hPdXQuY2FsbCgkZWxlbWVudCwgZXZlbnQsIHBpbmNoRGlyZWN0aW9uIHx8IG51bGwsIHBpbmNoRGlzdGFuY2UgfHwgMCwgZHVyYXRpb24gfHwgMCwgZmluZ2VyQ291bnQsIHBpbmNoWm9vbSwgZmluZ2VyRGF0YSk7XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIGlmIChnZXN0dXJlID09IFRBUCkge1xuICAgICAgICBpZiAocGhhc2UgPT09IFBIQVNFX0NBTkNFTCB8fCBwaGFzZSA9PT0gUEhBU0VfRU5EKSB7XG5cbiAgICAgICAgICBjbGVhclRpbWVvdXQoc2luZ2xlVGFwVGltZW91dCk7XG4gICAgICAgICAgY2xlYXJUaW1lb3V0KGhvbGRUaW1lb3V0KTtcblxuICAgICAgICAgIC8vSWYgd2UgYXJlIGFsc28gbG9va2luZyBmb3IgZG91YmVsVGFwcywgd2FpdCBpbmNhc2UgdGhpcyBpcyBvbmUuLi5cbiAgICAgICAgICBpZiAoaGFzRG91YmxlVGFwKCkgJiYgIWluRG91YmxlVGFwKCkpIHtcbiAgICAgICAgICAgIGRvdWJsZVRhcFN0YXJ0VGltZSA9IGdldFRpbWVTdGFtcCgpO1xuXG4gICAgICAgICAgICAvL05vdyB3YWl0IGZvciB0aGUgZG91YmxlIHRhcCB0aW1lb3V0LCBhbmQgdHJpZ2dlciB0aGlzIHNpbmdsZSB0YXBcbiAgICAgICAgICAgIC8vaWYgaXRzIG5vdCBjYW5jZWxsZWQgYnkgYSBkb3VibGUgdGFwXG4gICAgICAgICAgICBzaW5nbGVUYXBUaW1lb3V0ID0gc2V0VGltZW91dCgkLnByb3h5KGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgICBkb3VibGVUYXBTdGFydFRpbWUgPSBudWxsO1xuICAgICAgICAgICAgICAkZWxlbWVudC50cmlnZ2VyKCd0YXAnLCBbZXZlbnQudGFyZ2V0XSk7XG5cbiAgICAgICAgICAgICAgaWYgKG9wdGlvbnMudGFwKSB7XG4gICAgICAgICAgICAgICAgcmV0ID0gb3B0aW9ucy50YXAuY2FsbCgkZWxlbWVudCwgZXZlbnQsIGV2ZW50LnRhcmdldCk7XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0sIHRoaXMpLCBvcHRpb25zLmRvdWJsZVRhcFRocmVzaG9sZCk7XG5cbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgZG91YmxlVGFwU3RhcnRUaW1lID0gbnVsbDtcbiAgICAgICAgICAgICRlbGVtZW50LnRyaWdnZXIoJ3RhcCcsIFtldmVudC50YXJnZXRdKTtcbiAgICAgICAgICAgIGlmIChvcHRpb25zLnRhcCkge1xuICAgICAgICAgICAgICByZXQgPSBvcHRpb25zLnRhcC5jYWxsKCRlbGVtZW50LCBldmVudCwgZXZlbnQudGFyZ2V0KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH0gZWxzZSBpZiAoZ2VzdHVyZSA9PSBET1VCTEVfVEFQKSB7XG4gICAgICAgIGlmIChwaGFzZSA9PT0gUEhBU0VfQ0FOQ0VMIHx8IHBoYXNlID09PSBQSEFTRV9FTkQpIHtcbiAgICAgICAgICBjbGVhclRpbWVvdXQoc2luZ2xlVGFwVGltZW91dCk7XG4gICAgICAgICAgY2xlYXJUaW1lb3V0KGhvbGRUaW1lb3V0KTtcbiAgICAgICAgICBkb3VibGVUYXBTdGFydFRpbWUgPSBudWxsO1xuICAgICAgICAgICRlbGVtZW50LnRyaWdnZXIoJ2RvdWJsZXRhcCcsIFtldmVudC50YXJnZXRdKTtcblxuICAgICAgICAgIGlmIChvcHRpb25zLmRvdWJsZVRhcCkge1xuICAgICAgICAgICAgcmV0ID0gb3B0aW9ucy5kb3VibGVUYXAuY2FsbCgkZWxlbWVudCwgZXZlbnQsIGV2ZW50LnRhcmdldCk7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9IGVsc2UgaWYgKGdlc3R1cmUgPT0gTE9OR19UQVApIHtcbiAgICAgICAgaWYgKHBoYXNlID09PSBQSEFTRV9DQU5DRUwgfHwgcGhhc2UgPT09IFBIQVNFX0VORCkge1xuICAgICAgICAgIGNsZWFyVGltZW91dChzaW5nbGVUYXBUaW1lb3V0KTtcbiAgICAgICAgICBkb3VibGVUYXBTdGFydFRpbWUgPSBudWxsO1xuXG4gICAgICAgICAgJGVsZW1lbnQudHJpZ2dlcignbG9uZ3RhcCcsIFtldmVudC50YXJnZXRdKTtcbiAgICAgICAgICBpZiAob3B0aW9ucy5sb25nVGFwKSB7XG4gICAgICAgICAgICByZXQgPSBvcHRpb25zLmxvbmdUYXAuY2FsbCgkZWxlbWVudCwgZXZlbnQsIGV2ZW50LnRhcmdldCk7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIHJldHVybiByZXQ7XG4gICAgfVxuXG5cbiAgICAvL1xuICAgIC8vIEdFU1RVUkUgVkFMSURBVElPTlxuICAgIC8vXG5cbiAgICAvKipcbiAgICAgKiBDaGVja3MgdGhlIHVzZXIgaGFzIHN3aXBlIGZhciBlbm91Z2hcbiAgICAgKiBAcmV0dXJuIEJvb2xlYW4gaWYgPGNvZGU+dGhyZXNob2xkPC9jb2RlPiBoYXMgYmVlbiBzZXQsIHJldHVybiB0cnVlIGlmIHRoZSB0aHJlc2hvbGQgd2FzIG1ldCwgZWxzZSBmYWxzZS5cbiAgICAgKiBJZiBubyB0aHJlc2hvbGQgd2FzIHNldCwgdGhlbiB3ZSByZXR1cm4gdHJ1ZS5cbiAgICAgKiBAaW5uZXJcbiAgICAgKi9cbiAgICBmdW5jdGlvbiB2YWxpZGF0ZVN3aXBlRGlzdGFuY2UoKSB7XG4gICAgICB2YXIgdmFsaWQgPSB0cnVlO1xuICAgICAgLy9JZiB3ZSBtYWRlIGl0IHBhc3QgdGhlIG1pbiBzd2lwZSBkaXN0YW5jZS4uXG4gICAgICBpZiAob3B0aW9ucy50aHJlc2hvbGQgIT09IG51bGwpIHtcbiAgICAgICAgdmFsaWQgPSBkaXN0YW5jZSA+PSBvcHRpb25zLnRocmVzaG9sZDtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIHZhbGlkO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIENoZWNrcyB0aGUgdXNlciBoYXMgc3dpcGVkIGJhY2sgdG8gY2FuY2VsLlxuICAgICAqIEByZXR1cm4gQm9vbGVhbiBpZiA8Y29kZT5jYW5jZWxUaHJlc2hvbGQ8L2NvZGU+IGhhcyBiZWVuIHNldCwgcmV0dXJuIHRydWUgaWYgdGhlIGNhbmNlbFRocmVzaG9sZCB3YXMgbWV0LCBlbHNlIGZhbHNlLlxuICAgICAqIElmIG5vIGNhbmNlbFRocmVzaG9sZCB3YXMgc2V0LCB0aGVuIHdlIHJldHVybiB0cnVlLlxuICAgICAqIEBpbm5lclxuICAgICAqL1xuICAgIGZ1bmN0aW9uIGRpZFN3aXBlQmFja1RvQ2FuY2VsKCkge1xuICAgICAgdmFyIGNhbmNlbGxlZCA9IGZhbHNlO1xuICAgICAgaWYgKG9wdGlvbnMuY2FuY2VsVGhyZXNob2xkICE9PSBudWxsICYmIGRpcmVjdGlvbiAhPT0gbnVsbCkge1xuICAgICAgICBjYW5jZWxsZWQgPSAoZ2V0TWF4RGlzdGFuY2UoZGlyZWN0aW9uKSAtIGRpc3RhbmNlKSA+PSBvcHRpb25zLmNhbmNlbFRocmVzaG9sZDtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIGNhbmNlbGxlZDtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBDaGVja3MgdGhlIHVzZXIgaGFzIHBpbmNoZWQgZmFyIGVub3VnaFxuICAgICAqIEByZXR1cm4gQm9vbGVhbiBpZiA8Y29kZT5waW5jaFRocmVzaG9sZDwvY29kZT4gaGFzIGJlZW4gc2V0LCByZXR1cm4gdHJ1ZSBpZiB0aGUgdGhyZXNob2xkIHdhcyBtZXQsIGVsc2UgZmFsc2UuXG4gICAgICogSWYgbm8gdGhyZXNob2xkIHdhcyBzZXQsIHRoZW4gd2UgcmV0dXJuIHRydWUuXG4gICAgICogQGlubmVyXG4gICAgICovXG4gICAgZnVuY3Rpb24gdmFsaWRhdGVQaW5jaERpc3RhbmNlKCkge1xuICAgICAgaWYgKG9wdGlvbnMucGluY2hUaHJlc2hvbGQgIT09IG51bGwpIHtcbiAgICAgICAgcmV0dXJuIHBpbmNoRGlzdGFuY2UgPj0gb3B0aW9ucy5waW5jaFRocmVzaG9sZDtcbiAgICAgIH1cbiAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIENoZWNrcyB0aGF0IHRoZSB0aW1lIHRha2VuIHRvIHN3aXBlIG1lZXRzIHRoZSBtaW5pbXVtIC8gbWF4aW11bSByZXF1aXJlbWVudHNcbiAgICAgKiBAcmV0dXJuIEJvb2xlYW5cbiAgICAgKiBAaW5uZXJcbiAgICAgKi9cbiAgICBmdW5jdGlvbiB2YWxpZGF0ZVN3aXBlVGltZSgpIHtcbiAgICAgIHZhciByZXN1bHQ7XG4gICAgICAvL0lmIG5vIHRpbWUgc2V0LCB0aGVuIHJldHVybiB0cnVlXG4gICAgICBpZiAob3B0aW9ucy5tYXhUaW1lVGhyZXNob2xkKSB7XG4gICAgICAgIGlmIChkdXJhdGlvbiA+PSBvcHRpb25zLm1heFRpbWVUaHJlc2hvbGQpIHtcbiAgICAgICAgICByZXN1bHQgPSBmYWxzZTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICByZXN1bHQgPSB0cnVlO1xuICAgICAgICB9XG4gICAgICB9IGVsc2Uge1xuICAgICAgICByZXN1bHQgPSB0cnVlO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gcmVzdWx0O1xuICAgIH1cblxuXG4gICAgLyoqXG4gICAgICogQ2hlY2tzIGRpcmVjdGlvbiBvZiB0aGUgc3dpcGUgYW5kIHRoZSB2YWx1ZSBhbGxvd1BhZ2VTY3JvbGwgdG8gc2VlIGlmIHdlIHNob3VsZCBhbGxvdyBvciBwcmV2ZW50IHRoZSBkZWZhdWx0IGJlaGF2aW91ciBmcm9tIG9jY3VycmluZy5cbiAgICAgKiBUaGlzIHdpbGwgZXNzZW50aWFsbHkgYWxsb3cgcGFnZSBzY3JvbGxpbmcgb3Igbm90IHdoZW4gdGhlIHVzZXIgaXMgc3dpcGluZyBvbiBhIHRvdWNoU3dpcGUgb2JqZWN0LlxuICAgICAqIEBwYXJhbSB7b2JqZWN0fSBqcUV2ZW50IFRoZSBub3JtYWxpc2VkIGpRdWVyeSByZXByZXNlbnRhdGlvbiBvZiB0aGUgZXZlbnQgb2JqZWN0LlxuICAgICAqIEBwYXJhbSB7c3RyaW5nfSBkaXJlY3Rpb24gVGhlIGRpcmVjdGlvbiBvZiB0aGUgZXZlbnQuIFNlZSB7QGxpbmsgJC5mbi5zd2lwZS5kaXJlY3Rpb25zfVxuICAgICAqIEBzZWUgJC5mbi5zd2lwZS5kaXJlY3Rpb25zXG4gICAgICogQGlubmVyXG4gICAgICovXG4gICAgZnVuY3Rpb24gdmFsaWRhdGVEZWZhdWx0RXZlbnQoanFFdmVudCwgZGlyZWN0aW9uKSB7XG5cbiAgICAgIC8vSWYgdGhlIG9wdGlvbiBpcyBzZXQsIGFsbHdheXMgYWxsb3cgdGhlIGV2ZW50IHRvIGJ1YmJsZSB1cCAobGV0IHVzZXIgaGFuZGxlIHdlaXJkbmVzcylcbiAgICAgIGlmIChvcHRpb25zLnByZXZlbnREZWZhdWx0RXZlbnRzID09PSBmYWxzZSkge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIGlmIChvcHRpb25zLmFsbG93UGFnZVNjcm9sbCA9PT0gTk9ORSkge1xuICAgICAgICBqcUV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB2YXIgYXV0byA9IG9wdGlvbnMuYWxsb3dQYWdlU2Nyb2xsID09PSBBVVRPO1xuXG4gICAgICAgIHN3aXRjaCAoZGlyZWN0aW9uKSB7XG4gICAgICAgICAgY2FzZSBMRUZUOlxuICAgICAgICAgICAgaWYgKChvcHRpb25zLnN3aXBlTGVmdCAmJiBhdXRvKSB8fCAoIWF1dG8gJiYgb3B0aW9ucy5hbGxvd1BhZ2VTY3JvbGwgIT0gSE9SSVpPTlRBTCkpIHtcbiAgICAgICAgICAgICAganFFdmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgYnJlYWs7XG5cbiAgICAgICAgICBjYXNlIFJJR0hUOlxuICAgICAgICAgICAgaWYgKChvcHRpb25zLnN3aXBlUmlnaHQgJiYgYXV0bykgfHwgKCFhdXRvICYmIG9wdGlvbnMuYWxsb3dQYWdlU2Nyb2xsICE9IEhPUklaT05UQUwpKSB7XG4gICAgICAgICAgICAgIGpxRXZlbnQucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGJyZWFrO1xuXG4gICAgICAgICAgY2FzZSBVUDpcbiAgICAgICAgICAgIGlmICgob3B0aW9ucy5zd2lwZVVwICYmIGF1dG8pIHx8ICghYXV0byAmJiBvcHRpb25zLmFsbG93UGFnZVNjcm9sbCAhPSBWRVJUSUNBTCkpIHtcbiAgICAgICAgICAgICAganFFdmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgYnJlYWs7XG5cbiAgICAgICAgICBjYXNlIERPV046XG4gICAgICAgICAgICBpZiAoKG9wdGlvbnMuc3dpcGVEb3duICYmIGF1dG8pIHx8ICghYXV0byAmJiBvcHRpb25zLmFsbG93UGFnZVNjcm9sbCAhPSBWRVJUSUNBTCkpIHtcbiAgICAgICAgICAgICAganFFdmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgYnJlYWs7XG5cbiAgICAgICAgICBjYXNlIE5PTkU6XG5cbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuXG5cbiAgICAvLyBQSU5DSEVTXG4gICAgLyoqXG4gICAgICogUmV0dXJucyB0cnVlIG9mIHRoZSBjdXJyZW50IHBpbmNoIG1lZXRzIHRoZSB0aHJlc2hvbGRzXG4gICAgICogQHJldHVybiBCb29sZWFuXG4gICAgICogQGlubmVyXG4gICAgICovXG4gICAgZnVuY3Rpb24gdmFsaWRhdGVQaW5jaCgpIHtcbiAgICAgIHZhciBoYXNDb3JyZWN0RmluZ2VyQ291bnQgPSB2YWxpZGF0ZUZpbmdlcnMoKTtcbiAgICAgIHZhciBoYXNFbmRQb2ludCA9IHZhbGlkYXRlRW5kUG9pbnQoKTtcbiAgICAgIHZhciBoYXNDb3JyZWN0RGlzdGFuY2UgPSB2YWxpZGF0ZVBpbmNoRGlzdGFuY2UoKTtcbiAgICAgIHJldHVybiBoYXNDb3JyZWN0RmluZ2VyQ291bnQgJiYgaGFzRW5kUG9pbnQgJiYgaGFzQ29ycmVjdERpc3RhbmNlO1xuXG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogUmV0dXJucyB0cnVlIGlmIGFueSBQaW5jaCBldmVudHMgaGF2ZSBiZWVuIHJlZ2lzdGVyZWRcbiAgICAgKiBAcmV0dXJuIEJvb2xlYW5cbiAgICAgKiBAaW5uZXJcbiAgICAgKi9cbiAgICBmdW5jdGlvbiBoYXNQaW5jaGVzKCkge1xuICAgICAgLy9FbnVyZSB3ZSBkb250IHJldHVybiAwIG9yIG51bGwgZm9yIGZhbHNlIHZhbHVlc1xuICAgICAgcmV0dXJuICEhKG9wdGlvbnMucGluY2hTdGF0dXMgfHwgb3B0aW9ucy5waW5jaEluIHx8IG9wdGlvbnMucGluY2hPdXQpO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIFJldHVybnMgdHJ1ZSBpZiB3ZSBhcmUgZGV0ZWN0aW5nIHBpbmNoZXMsIGFuZCBoYXZlIG9uZVxuICAgICAqIEByZXR1cm4gQm9vbGVhblxuICAgICAqIEBpbm5lclxuICAgICAqL1xuICAgIGZ1bmN0aW9uIGRpZFBpbmNoKCkge1xuICAgICAgLy9FbnVyZSB3ZSBkb250IHJldHVybiAwIG9yIG51bGwgZm9yIGZhbHNlIHZhbHVlc1xuICAgICAgcmV0dXJuICEhKHZhbGlkYXRlUGluY2goKSAmJiBoYXNQaW5jaGVzKCkpO1xuICAgIH1cblxuXG5cblxuICAgIC8vIFNXSVBFU1xuICAgIC8qKlxuICAgICAqIFJldHVybnMgdHJ1ZSBpZiB0aGUgY3VycmVudCBzd2lwZSBtZWV0cyB0aGUgdGhyZXNob2xkc1xuICAgICAqIEByZXR1cm4gQm9vbGVhblxuICAgICAqIEBpbm5lclxuICAgICAqL1xuICAgIGZ1bmN0aW9uIHZhbGlkYXRlU3dpcGUoKSB7XG4gICAgICAvL0NoZWNrIHZhbGlkaXR5IG9mIHN3aXBlXG4gICAgICB2YXIgaGFzVmFsaWRUaW1lID0gdmFsaWRhdGVTd2lwZVRpbWUoKTtcbiAgICAgIHZhciBoYXNWYWxpZERpc3RhbmNlID0gdmFsaWRhdGVTd2lwZURpc3RhbmNlKCk7XG4gICAgICB2YXIgaGFzQ29ycmVjdEZpbmdlckNvdW50ID0gdmFsaWRhdGVGaW5nZXJzKCk7XG4gICAgICB2YXIgaGFzRW5kUG9pbnQgPSB2YWxpZGF0ZUVuZFBvaW50KCk7XG4gICAgICB2YXIgZGlkQ2FuY2VsID0gZGlkU3dpcGVCYWNrVG9DYW5jZWwoKTtcblxuICAgICAgLy8gaWYgdGhlIHVzZXIgc3dpcGVkIG1vcmUgdGhhbiB0aGUgbWluaW11bSBsZW5ndGgsIHBlcmZvcm0gdGhlIGFwcHJvcHJpYXRlIGFjdGlvblxuICAgICAgLy8gaGFzVmFsaWREaXN0YW5jZSBpcyBudWxsIHdoZW4gbm8gZGlzdGFuY2UgaXMgc2V0XG4gICAgICB2YXIgdmFsaWQgPSAhZGlkQ2FuY2VsICYmIGhhc0VuZFBvaW50ICYmIGhhc0NvcnJlY3RGaW5nZXJDb3VudCAmJiBoYXNWYWxpZERpc3RhbmNlICYmIGhhc1ZhbGlkVGltZTtcblxuICAgICAgcmV0dXJuIHZhbGlkO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIFJldHVybnMgdHJ1ZSBpZiBhbnkgU3dpcGUgZXZlbnRzIGhhdmUgYmVlbiByZWdpc3RlcmVkXG4gICAgICogQHJldHVybiBCb29sZWFuXG4gICAgICogQGlubmVyXG4gICAgICovXG4gICAgZnVuY3Rpb24gaGFzU3dpcGVzKCkge1xuICAgICAgLy9FbnVyZSB3ZSBkb250IHJldHVybiAwIG9yIG51bGwgZm9yIGZhbHNlIHZhbHVlc1xuICAgICAgcmV0dXJuICEhKG9wdGlvbnMuc3dpcGUgfHwgb3B0aW9ucy5zd2lwZVN0YXR1cyB8fCBvcHRpb25zLnN3aXBlTGVmdCB8fCBvcHRpb25zLnN3aXBlUmlnaHQgfHwgb3B0aW9ucy5zd2lwZVVwIHx8IG9wdGlvbnMuc3dpcGVEb3duKTtcbiAgICB9XG5cblxuICAgIC8qKlxuICAgICAqIFJldHVybnMgdHJ1ZSBpZiB3ZSBhcmUgZGV0ZWN0aW5nIHN3aXBlcyBhbmQgaGF2ZSBvbmVcbiAgICAgKiBAcmV0dXJuIEJvb2xlYW5cbiAgICAgKiBAaW5uZXJcbiAgICAgKi9cbiAgICBmdW5jdGlvbiBkaWRTd2lwZSgpIHtcbiAgICAgIC8vRW51cmUgd2UgZG9udCByZXR1cm4gMCBvciBudWxsIGZvciBmYWxzZSB2YWx1ZXNcbiAgICAgIHJldHVybiAhISh2YWxpZGF0ZVN3aXBlKCkgJiYgaGFzU3dpcGVzKCkpO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIFJldHVybnMgdHJ1ZSBpZiB3ZSBoYXZlIG1hdGNoZWQgdGhlIG51bWJlciBvZiBmaW5nZXJzIHdlIGFyZSBsb29raW5nIGZvclxuICAgICAqIEByZXR1cm4gQm9vbGVhblxuICAgICAqIEBpbm5lclxuICAgICAqL1xuICAgIGZ1bmN0aW9uIHZhbGlkYXRlRmluZ2VycygpIHtcbiAgICAgIC8vVGhlIG51bWJlciBvZiBmaW5nZXJzIHdlIHdhbnQgd2VyZSBtYXRjaGVkLCBvciBvbiBkZXNrdG9wIHdlIGlnbm9yZVxuICAgICAgcmV0dXJuICgoZmluZ2VyQ291bnQgPT09IG9wdGlvbnMuZmluZ2VycyB8fCBvcHRpb25zLmZpbmdlcnMgPT09IEFMTF9GSU5HRVJTKSB8fCAhU1VQUE9SVFNfVE9VQ0gpO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIFJldHVybnMgdHJ1ZSBpZiB3ZSBoYXZlIGFuIGVuZCBwb2ludCBmb3IgdGhlIHN3aXBlXG4gICAgICogQHJldHVybiBCb29sZWFuXG4gICAgICogQGlubmVyXG4gICAgICovXG4gICAgZnVuY3Rpb24gdmFsaWRhdGVFbmRQb2ludCgpIHtcbiAgICAgIC8vV2UgaGF2ZSBhbiBlbmQgdmFsdWUgZm9yIHRoZSBmaW5nZXJcbiAgICAgIHJldHVybiBmaW5nZXJEYXRhWzBdLmVuZC54ICE9PSAwO1xuICAgIH1cblxuICAgIC8vIFRBUCAvIENMSUNLXG4gICAgLyoqXG4gICAgICogUmV0dXJucyB0cnVlIGlmIGEgY2xpY2sgLyB0YXAgZXZlbnRzIGhhdmUgYmVlbiByZWdpc3RlcmVkXG4gICAgICogQHJldHVybiBCb29sZWFuXG4gICAgICogQGlubmVyXG4gICAgICovXG4gICAgZnVuY3Rpb24gaGFzVGFwKCkge1xuICAgICAgLy9FbnVyZSB3ZSBkb250IHJldHVybiAwIG9yIG51bGwgZm9yIGZhbHNlIHZhbHVlc1xuICAgICAgcmV0dXJuICEhKG9wdGlvbnMudGFwKTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBSZXR1cm5zIHRydWUgaWYgYSBkb3VibGUgdGFwIGV2ZW50cyBoYXZlIGJlZW4gcmVnaXN0ZXJlZFxuICAgICAqIEByZXR1cm4gQm9vbGVhblxuICAgICAqIEBpbm5lclxuICAgICAqL1xuICAgIGZ1bmN0aW9uIGhhc0RvdWJsZVRhcCgpIHtcbiAgICAgIC8vRW51cmUgd2UgZG9udCByZXR1cm4gMCBvciBudWxsIGZvciBmYWxzZSB2YWx1ZXNcbiAgICAgIHJldHVybiAhIShvcHRpb25zLmRvdWJsZVRhcCk7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogUmV0dXJucyB0cnVlIGlmIGFueSBsb25nIHRhcCBldmVudHMgaGF2ZSBiZWVuIHJlZ2lzdGVyZWRcbiAgICAgKiBAcmV0dXJuIEJvb2xlYW5cbiAgICAgKiBAaW5uZXJcbiAgICAgKi9cbiAgICBmdW5jdGlvbiBoYXNMb25nVGFwKCkge1xuICAgICAgLy9FbnVyZSB3ZSBkb250IHJldHVybiAwIG9yIG51bGwgZm9yIGZhbHNlIHZhbHVlc1xuICAgICAgcmV0dXJuICEhKG9wdGlvbnMubG9uZ1RhcCk7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogUmV0dXJucyB0cnVlIGlmIHdlIGNvdWxkIGJlIGluIHRoZSBwcm9jZXNzIG9mIGEgZG91YmxlIHRhcCAob25lIHRhcCBoYXMgb2NjdXJyZWQsIHdlIGFyZSBsaXN0ZW5pbmcgZm9yIGRvdWJsZSB0YXBzLCBhbmQgdGhlIHRocmVzaG9sZCBoYXNuJ3QgcGFzdC5cbiAgICAgKiBAcmV0dXJuIEJvb2xlYW5cbiAgICAgKiBAaW5uZXJcbiAgICAgKi9cbiAgICBmdW5jdGlvbiB2YWxpZGF0ZURvdWJsZVRhcCgpIHtcbiAgICAgIGlmIChkb3VibGVUYXBTdGFydFRpbWUgPT0gbnVsbCkge1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICB9XG4gICAgICB2YXIgbm93ID0gZ2V0VGltZVN0YW1wKCk7XG4gICAgICByZXR1cm4gKGhhc0RvdWJsZVRhcCgpICYmICgobm93IC0gZG91YmxlVGFwU3RhcnRUaW1lKSA8PSBvcHRpb25zLmRvdWJsZVRhcFRocmVzaG9sZCkpO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIFJldHVybnMgdHJ1ZSBpZiB3ZSBjb3VsZCBiZSBpbiB0aGUgcHJvY2VzcyBvZiBhIGRvdWJsZSB0YXAgKG9uZSB0YXAgaGFzIG9jY3VycmVkLCB3ZSBhcmUgbGlzdGVuaW5nIGZvciBkb3VibGUgdGFwcywgYW5kIHRoZSB0aHJlc2hvbGQgaGFzbid0IHBhc3QuXG4gICAgICogQHJldHVybiBCb29sZWFuXG4gICAgICogQGlubmVyXG4gICAgICovXG4gICAgZnVuY3Rpb24gaW5Eb3VibGVUYXAoKSB7XG4gICAgICByZXR1cm4gdmFsaWRhdGVEb3VibGVUYXAoKTtcbiAgICB9XG5cblxuICAgIC8qKlxuICAgICAqIFJldHVybnMgdHJ1ZSBpZiB3ZSBoYXZlIGEgdmFsaWQgdGFwXG4gICAgICogQHJldHVybiBCb29sZWFuXG4gICAgICogQGlubmVyXG4gICAgICovXG4gICAgZnVuY3Rpb24gdmFsaWRhdGVUYXAoKSB7XG4gICAgICByZXR1cm4gKChmaW5nZXJDb3VudCA9PT0gMSB8fCAhU1VQUE9SVFNfVE9VQ0gpICYmIChpc05hTihkaXN0YW5jZSkgfHwgZGlzdGFuY2UgPCBvcHRpb25zLnRocmVzaG9sZCkpO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIFJldHVybnMgdHJ1ZSBpZiB3ZSBoYXZlIGEgdmFsaWQgbG9uZyB0YXBcbiAgICAgKiBAcmV0dXJuIEJvb2xlYW5cbiAgICAgKiBAaW5uZXJcbiAgICAgKi9cbiAgICBmdW5jdGlvbiB2YWxpZGF0ZUxvbmdUYXAoKSB7XG4gICAgICAvL3NsaWdodCB0aHJlc2hvbGQgb24gbW92aW5nIGZpbmdlclxuICAgICAgcmV0dXJuICgoZHVyYXRpb24gPiBvcHRpb25zLmxvbmdUYXBUaHJlc2hvbGQpICYmIChkaXN0YW5jZSA8IERPVUJMRV9UQVBfVEhSRVNIT0xEKSk7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogUmV0dXJucyB0cnVlIGlmIHdlIGFyZSBkZXRlY3RpbmcgdGFwcyBhbmQgaGF2ZSBvbmVcbiAgICAgKiBAcmV0dXJuIEJvb2xlYW5cbiAgICAgKiBAaW5uZXJcbiAgICAgKi9cbiAgICBmdW5jdGlvbiBkaWRUYXAoKSB7XG4gICAgICAvL0VudXJlIHdlIGRvbnQgcmV0dXJuIDAgb3IgbnVsbCBmb3IgZmFsc2UgdmFsdWVzXG4gICAgICByZXR1cm4gISEodmFsaWRhdGVUYXAoKSAmJiBoYXNUYXAoKSk7XG4gICAgfVxuXG5cbiAgICAvKipcbiAgICAgKiBSZXR1cm5zIHRydWUgaWYgd2UgYXJlIGRldGVjdGluZyBkb3VibGUgdGFwcyBhbmQgaGF2ZSBvbmVcbiAgICAgKiBAcmV0dXJuIEJvb2xlYW5cbiAgICAgKiBAaW5uZXJcbiAgICAgKi9cbiAgICBmdW5jdGlvbiBkaWREb3VibGVUYXAoKSB7XG4gICAgICAvL0VudXJlIHdlIGRvbnQgcmV0dXJuIDAgb3IgbnVsbCBmb3IgZmFsc2UgdmFsdWVzXG4gICAgICByZXR1cm4gISEodmFsaWRhdGVEb3VibGVUYXAoKSAmJiBoYXNEb3VibGVUYXAoKSk7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogUmV0dXJucyB0cnVlIGlmIHdlIGFyZSBkZXRlY3RpbmcgbG9uZyB0YXBzIGFuZCBoYXZlIG9uZVxuICAgICAqIEByZXR1cm4gQm9vbGVhblxuICAgICAqIEBpbm5lclxuICAgICAqL1xuICAgIGZ1bmN0aW9uIGRpZExvbmdUYXAoKSB7XG4gICAgICAvL0VudXJlIHdlIGRvbnQgcmV0dXJuIDAgb3IgbnVsbCBmb3IgZmFsc2UgdmFsdWVzXG4gICAgICByZXR1cm4gISEodmFsaWRhdGVMb25nVGFwKCkgJiYgaGFzTG9uZ1RhcCgpKTtcbiAgICB9XG5cblxuXG5cbiAgICAvLyBNVUxUSSBGSU5HRVIgVE9VQ0hcbiAgICAvKipcbiAgICAgKiBTdGFydHMgdHJhY2tpbmcgdGhlIHRpbWUgYmV0d2VlbiAyIGZpbmdlciByZWxlYXNlcywgYW5kIGtlZXBzIHRyYWNrIG9mIGhvdyBtYW55IGZpbmdlcnMgd2UgaW5pdGlhbGx5IGhhZCB1cFxuICAgICAqIEBpbm5lclxuICAgICAqL1xuICAgIGZ1bmN0aW9uIHN0YXJ0TXVsdGlGaW5nZXJSZWxlYXNlKGV2ZW50KSB7XG4gICAgICBwcmV2aW91c1RvdWNoRW5kVGltZSA9IGdldFRpbWVTdGFtcCgpO1xuICAgICAgZmluZ2VyQ291bnRBdFJlbGVhc2UgPSBldmVudC50b3VjaGVzLmxlbmd0aCArIDE7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogQ2FuY2VscyB0aGUgdHJhY2tpbmcgb2YgdGltZSBiZXR3ZWVuIDIgZmluZ2VyIHJlbGVhc2VzLCBhbmQgcmVzZXRzIGNvdW50ZXJzXG4gICAgICogQGlubmVyXG4gICAgICovXG4gICAgZnVuY3Rpb24gY2FuY2VsTXVsdGlGaW5nZXJSZWxlYXNlKCkge1xuICAgICAgcHJldmlvdXNUb3VjaEVuZFRpbWUgPSAwO1xuICAgICAgZmluZ2VyQ291bnRBdFJlbGVhc2UgPSAwO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIENoZWNrcyBpZiB3ZSBhcmUgaW4gdGhlIHRocmVzaG9sZCBiZXR3ZWVuIDIgZmluZ2VycyBiZWluZyByZWxlYXNlZFxuICAgICAqIEByZXR1cm4gQm9vbGVhblxuICAgICAqIEBpbm5lclxuICAgICAqL1xuICAgIGZ1bmN0aW9uIGluTXVsdGlGaW5nZXJSZWxlYXNlKCkge1xuXG4gICAgICB2YXIgd2l0aGluVGhyZXNob2xkID0gZmFsc2U7XG5cbiAgICAgIGlmIChwcmV2aW91c1RvdWNoRW5kVGltZSkge1xuICAgICAgICB2YXIgZGlmZiA9IGdldFRpbWVTdGFtcCgpIC0gcHJldmlvdXNUb3VjaEVuZFRpbWVcbiAgICAgICAgaWYgKGRpZmYgPD0gb3B0aW9ucy5maW5nZXJSZWxlYXNlVGhyZXNob2xkKSB7XG4gICAgICAgICAgd2l0aGluVGhyZXNob2xkID0gdHJ1ZTtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICByZXR1cm4gd2l0aGluVGhyZXNob2xkO1xuICAgIH1cblxuXG4gICAgLyoqXG4gICAgICogZ2V0cyBhIGRhdGEgZmxhZyB0byBpbmRpY2F0ZSB0aGF0IGEgdG91Y2ggaXMgaW4gcHJvZ3Jlc3NcbiAgICAgKiBAcmV0dXJuIEJvb2xlYW5cbiAgICAgKiBAaW5uZXJcbiAgICAgKi9cbiAgICBmdW5jdGlvbiBnZXRUb3VjaEluUHJvZ3Jlc3MoKSB7XG4gICAgICAvL3N0cmljdCBlcXVhbGl0eSB0byBlbnN1cmUgb25seSB0cnVlIGFuZCBmYWxzZSBhcmUgcmV0dXJuZWRcbiAgICAgIHJldHVybiAhISgkZWxlbWVudC5kYXRhKFBMVUdJTl9OUyArICdfaW50b3VjaCcpID09PSB0cnVlKTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBTZXRzIGEgZGF0YSBmbGFnIHRvIGluZGljYXRlIHRoYXQgYSB0b3VjaCBpcyBpbiBwcm9ncmVzc1xuICAgICAqIEBwYXJhbSB7Ym9vbGVhbn0gdmFsIFRoZSB2YWx1ZSB0byBzZXQgdGhlIHByb3BlcnR5IHRvXG4gICAgICogQGlubmVyXG4gICAgICovXG4gICAgZnVuY3Rpb24gc2V0VG91Y2hJblByb2dyZXNzKHZhbCkge1xuXG4gICAgICAvL0lmIGRlc3Ryb3kgaXMgY2FsbGVkIGluIGFuIGV2ZW50IGhhbmRsZXIsIHdlIGhhdmUgbm8gZWwsIGFuZCB3ZSBoYXZlIGFscmVhZHkgY2xlYW5lZCB1cCwgc28gcmV0dXJuLlxuICAgICAgaWYoISRlbGVtZW50KSB7IHJldHVybjsgfVxuXG4gICAgICAvL0FkZCBvciByZW1vdmUgZXZlbnQgbGlzdGVuZXJzIGRlcGVuZGluZyBvbiB0b3VjaCBzdGF0dXNcbiAgICAgIGlmICh2YWwgPT09IHRydWUpIHtcbiAgICAgICAgJGVsZW1lbnQub24oTU9WRV9FViwgdG91Y2hNb3ZlKTtcbiAgICAgICAgJGVsZW1lbnQub24oRU5EX0VWLCB0b3VjaEVuZCk7XG5cbiAgICAgICAgLy93ZSBvbmx5IGhhdmUgbGVhdmUgZXZlbnRzIG9uIGRlc2t0b3AsIHdlIG1hbnVhbGx5IGNhbGN1YXRlIGxlYXZlIG9uIHRvdWNoIGFzIGl0cyBub3Qgc3VwcG9ydGVkIGluIHdlYmtpdFxuICAgICAgICBpZiAoTEVBVkVfRVYpIHtcbiAgICAgICAgICAkZWxlbWVudC5vbihMRUFWRV9FViwgdG91Y2hMZWF2ZSk7XG4gICAgICAgIH1cbiAgICAgIH0gZWxzZSB7XG5cbiAgICAgICAgJGVsZW1lbnQub2ZmKE1PVkVfRVYsIHRvdWNoTW92ZSwgZmFsc2UpO1xuICAgICAgICAkZWxlbWVudC5vZmYoRU5EX0VWLCB0b3VjaEVuZCwgZmFsc2UpO1xuXG4gICAgICAgIC8vd2Ugb25seSBoYXZlIGxlYXZlIGV2ZW50cyBvbiBkZXNrdG9wLCB3ZSBtYW51YWxseSBjYWxjdWF0ZSBsZWF2ZSBvbiB0b3VjaCBhcyBpdHMgbm90IHN1cHBvcnRlZCBpbiB3ZWJraXRcbiAgICAgICAgaWYgKExFQVZFX0VWKSB7XG4gICAgICAgICAgJGVsZW1lbnQub2ZmKExFQVZFX0VWLCB0b3VjaExlYXZlLCBmYWxzZSk7XG4gICAgICAgIH1cbiAgICAgIH1cblxuXG4gICAgICAvL3N0cmljdCBlcXVhbGl0eSB0byBlbnN1cmUgb25seSB0cnVlIGFuZCBmYWxzZSBjYW4gdXBkYXRlIHRoZSB2YWx1ZVxuICAgICAgJGVsZW1lbnQuZGF0YShQTFVHSU5fTlMgKyAnX2ludG91Y2gnLCB2YWwgPT09IHRydWUpO1xuICAgIH1cblxuXG4gICAgLyoqXG4gICAgICogQ3JlYXRlcyB0aGUgZmluZ2VyIGRhdGEgZm9yIHRoZSB0b3VjaC9maW5nZXIgaW4gdGhlIGV2ZW50IG9iamVjdC5cbiAgICAgKiBAcGFyYW0ge2ludH0gaWQgVGhlIGlkIHRvIHN0b3JlIHRoZSBmaW5nZXIgZGF0YSB1bmRlciAodXN1YWxseSB0aGUgb3JkZXIgdGhlIGZpbmdlcnMgd2VyZSBwcmVzc2VkKVxuICAgICAqIEBwYXJhbSB7b2JqZWN0fSBldnQgVGhlIGV2ZW50IG9iamVjdCBjb250YWluaW5nIGZpbmdlciBkYXRhXG4gICAgICogQHJldHVybiBmaW5nZXIgZGF0YSBvYmplY3RcbiAgICAgKiBAaW5uZXJcbiAgICAgKi9cbiAgICBmdW5jdGlvbiBjcmVhdGVGaW5nZXJEYXRhKGlkLCBldnQpIHtcbiAgICAgIHZhciBmID0ge1xuICAgICAgICBzdGFydDoge1xuICAgICAgICAgIHg6IDAsXG4gICAgICAgICAgeTogMFxuICAgICAgICB9LFxuICAgICAgICBsYXN0OiB7XG4gICAgICAgICAgeDogMCxcbiAgICAgICAgICB5OiAwXG4gICAgICAgIH0sXG4gICAgICAgIGVuZDoge1xuICAgICAgICAgIHg6IDAsXG4gICAgICAgICAgeTogMFxuICAgICAgICB9XG4gICAgICB9O1xuICAgICAgZi5zdGFydC54ID0gZi5sYXN0LnggPSBmLmVuZC54ID0gZXZ0LnBhZ2VYIHx8IGV2dC5jbGllbnRYO1xuICAgICAgZi5zdGFydC55ID0gZi5sYXN0LnkgPSBmLmVuZC55ID0gZXZ0LnBhZ2VZIHx8IGV2dC5jbGllbnRZO1xuICAgICAgZmluZ2VyRGF0YVtpZF0gPSBmO1xuICAgICAgcmV0dXJuIGY7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogVXBkYXRlcyB0aGUgZmluZ2VyIGRhdGEgZm9yIGEgcGFydGljdWxhciBldmVudCBvYmplY3RcbiAgICAgKiBAcGFyYW0ge29iamVjdH0gZXZ0IFRoZSBldmVudCBvYmplY3QgY29udGFpbmluZyB0aGUgdG91Y2gvZmluZ2VyIGRhdGEgdG8gdXBhZHRlXG4gICAgICogQHJldHVybiBhIGZpbmdlciBkYXRhIG9iamVjdC5cbiAgICAgKiBAaW5uZXJcbiAgICAgKi9cbiAgICBmdW5jdGlvbiB1cGRhdGVGaW5nZXJEYXRhKGV2dCkge1xuICAgICAgdmFyIGlkID0gZXZ0LmlkZW50aWZpZXIgIT09IHVuZGVmaW5lZCA/IGV2dC5pZGVudGlmaWVyIDogMDtcbiAgICAgIHZhciBmID0gZ2V0RmluZ2VyRGF0YShpZCk7XG5cbiAgICAgIGlmIChmID09PSBudWxsKSB7XG4gICAgICAgIGYgPSBjcmVhdGVGaW5nZXJEYXRhKGlkLCBldnQpO1xuICAgICAgfVxuXG4gICAgICBmLmxhc3QueCA9IGYuZW5kLng7XG4gICAgICBmLmxhc3QueSA9IGYuZW5kLnk7XG5cbiAgICAgIGYuZW5kLnggPSBldnQucGFnZVggfHwgZXZ0LmNsaWVudFg7XG4gICAgICBmLmVuZC55ID0gZXZ0LnBhZ2VZIHx8IGV2dC5jbGllbnRZO1xuXG4gICAgICByZXR1cm4gZjtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBSZXR1cm5zIGEgZmluZ2VyIGRhdGEgb2JqZWN0IGJ5IGl0cyBldmVudCBJRC5cbiAgICAgKiBFYWNoIHRvdWNoIGV2ZW50IGhhcyBhbiBpZGVudGlmaWVyIHByb3BlcnR5LCB3aGljaCBpcyB1c2VkXG4gICAgICogdG8gdHJhY2sgcmVwZWF0IHRvdWNoZXNcbiAgICAgKiBAcGFyYW0ge2ludH0gaWQgVGhlIHVuaXF1ZSBpZCBvZiB0aGUgZmluZ2VyIGluIHRoZSBzZXF1ZW5jZSBvZiB0b3VjaCBldmVudHMuXG4gICAgICogQHJldHVybiBhIGZpbmdlciBkYXRhIG9iamVjdC5cbiAgICAgKiBAaW5uZXJcbiAgICAgKi9cbiAgICBmdW5jdGlvbiBnZXRGaW5nZXJEYXRhKGlkKSB7XG4gICAgICByZXR1cm4gZmluZ2VyRGF0YVtpZF0gfHwgbnVsbDtcbiAgICB9XG5cblxuICAgIC8qKlxuICAgICAqIFNldHMgdGhlIG1heGltdW0gZGlzdGFuY2Ugc3dpcGVkIGluIHRoZSBnaXZlbiBkaXJlY3Rpb24uXG4gICAgICogSWYgdGhlIG5ldyB2YWx1ZSBpcyBsb3dlciB0aGFuIHRoZSBjdXJyZW50IHZhbHVlLCB0aGUgbWF4IHZhbHVlIGlzIG5vdCBjaGFuZ2VkLlxuICAgICAqIEBwYXJhbSB7c3RyaW5nfSAgZGlyZWN0aW9uIFRoZSBkaXJlY3Rpb24gb2YgdGhlIHN3aXBlXG4gICAgICogQHBhcmFtIHtpbnR9ICBkaXN0YW5jZSBUaGUgZGlzdGFuY2Ugb2YgdGhlIHN3aXBlXG4gICAgICogQGlubmVyXG4gICAgICovXG4gICAgZnVuY3Rpb24gc2V0TWF4RGlzdGFuY2UoZGlyZWN0aW9uLCBkaXN0YW5jZSkge1xuICAgICAgaWYoZGlyZWN0aW9uPT1OT05FKSByZXR1cm47XG4gICAgICBkaXN0YW5jZSA9IE1hdGgubWF4KGRpc3RhbmNlLCBnZXRNYXhEaXN0YW5jZShkaXJlY3Rpb24pKTtcbiAgICAgIG1heGltdW1zTWFwW2RpcmVjdGlvbl0uZGlzdGFuY2UgPSBkaXN0YW5jZTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBnZXRzIHRoZSBtYXhpbXVtIGRpc3RhbmNlIHN3aXBlZCBpbiB0aGUgZ2l2ZW4gZGlyZWN0aW9uLlxuICAgICAqIEBwYXJhbSB7c3RyaW5nfSAgZGlyZWN0aW9uIFRoZSBkaXJlY3Rpb24gb2YgdGhlIHN3aXBlXG4gICAgICogQHJldHVybiBpbnQgIFRoZSBkaXN0YW5jZSBvZiB0aGUgc3dpcGVcbiAgICAgKiBAaW5uZXJcbiAgICAgKi9cbiAgICBmdW5jdGlvbiBnZXRNYXhEaXN0YW5jZShkaXJlY3Rpb24pIHtcbiAgICAgIGlmIChtYXhpbXVtc01hcFtkaXJlY3Rpb25dKSByZXR1cm4gbWF4aW11bXNNYXBbZGlyZWN0aW9uXS5kaXN0YW5jZTtcbiAgICAgIHJldHVybiB1bmRlZmluZWQ7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogQ3JlYXRzIGEgbWFwIG9mIGRpcmVjdGlvbnMgdG8gbWF4aW11bSBzd2lwZWQgdmFsdWVzLlxuICAgICAqIEByZXR1cm4gT2JqZWN0IEEgZGljdGlvbmFyeSBvZiBtYXhpbXVtIHZhbHVlcywgaW5kZXhlZCBieSBkaXJlY3Rpb24uXG4gICAgICogQGlubmVyXG4gICAgICovXG4gICAgZnVuY3Rpb24gY3JlYXRlTWF4aW11bXNEYXRhKCkge1xuICAgICAgdmFyIG1heERhdGEgPSB7fTtcbiAgICAgIG1heERhdGFbTEVGVF0gPSBjcmVhdGVNYXhpbXVtVk8oTEVGVCk7XG4gICAgICBtYXhEYXRhW1JJR0hUXSA9IGNyZWF0ZU1heGltdW1WTyhSSUdIVCk7XG4gICAgICBtYXhEYXRhW1VQXSA9IGNyZWF0ZU1heGltdW1WTyhVUCk7XG4gICAgICBtYXhEYXRhW0RPV05dID0gY3JlYXRlTWF4aW11bVZPKERPV04pO1xuXG4gICAgICByZXR1cm4gbWF4RGF0YTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBDcmVhdGVzIGEgbWFwIG1heGltdW0gc3dpcGVkIHZhbHVlcyBmb3IgYSBnaXZlbiBzd2lwZSBkaXJlY3Rpb25cbiAgICAgKiBAcGFyYW0ge3N0cmluZ30gVGhlIGRpcmVjdGlvbiB0aGF0IHRoZXNlIHZhbHVlcyB3aWxsIGJlIGFzc29jaWF0ZWQgd2l0aFxuICAgICAqIEByZXR1cm4gT2JqZWN0IE1heGltdW0gdmFsdWVzXG4gICAgICogQGlubmVyXG4gICAgICovXG4gICAgZnVuY3Rpb24gY3JlYXRlTWF4aW11bVZPKGRpcikge1xuICAgICAgcmV0dXJuIHtcbiAgICAgICAgZGlyZWN0aW9uOiBkaXIsXG4gICAgICAgIGRpc3RhbmNlOiAwXG4gICAgICB9XG4gICAgfVxuXG5cbiAgICAvL1xuICAgIC8vIE1BVEhTIC8gVVRJTFNcbiAgICAvL1xuXG4gICAgLyoqXG4gICAgICogQ2FsY3VsYXRlIHRoZSBkdXJhdGlvbiBvZiB0aGUgc3dpcGVcbiAgICAgKiBAcmV0dXJuIGludFxuICAgICAqIEBpbm5lclxuICAgICAqL1xuICAgIGZ1bmN0aW9uIGNhbGN1bGF0ZUR1cmF0aW9uKCkge1xuICAgICAgcmV0dXJuIGVuZFRpbWUgLSBzdGFydFRpbWU7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogQ2FsY3VsYXRlIHRoZSBkaXN0YW5jZSBiZXR3ZWVuIDIgdG91Y2hlcyAocGluY2gpXG4gICAgICogQHBhcmFtIHtwb2ludH0gc3RhcnRQb2ludCBBIHBvaW50IG9iamVjdCBjb250YWluaW5nIHggYW5kIHkgY28tb3JkaW5hdGVzXG4gICAgICogQHBhcmFtIHtwb2ludH0gZW5kUG9pbnQgQSBwb2ludCBvYmplY3QgY29udGFpbmluZyB4IGFuZCB5IGNvLW9yZGluYXRlc1xuICAgICAqIEByZXR1cm4gaW50O1xuICAgICAqIEBpbm5lclxuICAgICAqL1xuICAgIGZ1bmN0aW9uIGNhbGN1bGF0ZVRvdWNoZXNEaXN0YW5jZShzdGFydFBvaW50LCBlbmRQb2ludCkge1xuICAgICAgdmFyIGRpZmZYID0gTWF0aC5hYnMoc3RhcnRQb2ludC54IC0gZW5kUG9pbnQueCk7XG4gICAgICB2YXIgZGlmZlkgPSBNYXRoLmFicyhzdGFydFBvaW50LnkgLSBlbmRQb2ludC55KTtcblxuICAgICAgcmV0dXJuIE1hdGgucm91bmQoTWF0aC5zcXJ0KGRpZmZYICogZGlmZlggKyBkaWZmWSAqIGRpZmZZKSk7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogQ2FsY3VsYXRlIHRoZSB6b29tIGZhY3RvciBiZXR3ZWVuIHRoZSBzdGFydCBhbmQgZW5kIGRpc3RhbmNlc1xuICAgICAqIEBwYXJhbSB7aW50fSBzdGFydERpc3RhbmNlIERpc3RhbmNlIChiZXR3ZWVuIDIgZmluZ2VycykgdGhlIHVzZXIgc3RhcnRlZCBwaW5jaGluZyBhdFxuICAgICAqIEBwYXJhbSB7aW50fSBlbmREaXN0YW5jZSBEaXN0YW5jZSAoYmV0d2VlbiAyIGZpbmdlcnMpIHRoZSB1c2VyIGVuZGVkIHBpbmNoaW5nIGF0XG4gICAgICogQHJldHVybiBmbG9hdCBUaGUgem9vbSB2YWx1ZSBmcm9tIDAgdG8gMS5cbiAgICAgKiBAaW5uZXJcbiAgICAgKi9cbiAgICBmdW5jdGlvbiBjYWxjdWxhdGVQaW5jaFpvb20oc3RhcnREaXN0YW5jZSwgZW5kRGlzdGFuY2UpIHtcbiAgICAgIHZhciBwZXJjZW50ID0gKGVuZERpc3RhbmNlIC8gc3RhcnREaXN0YW5jZSkgKiAxO1xuICAgICAgcmV0dXJuIHBlcmNlbnQudG9GaXhlZCgyKTtcbiAgICB9XG5cblxuICAgIC8qKlxuICAgICAqIFJldHVybnMgdGhlIHBpbmNoIGRpcmVjdGlvbiwgZWl0aGVyIElOIG9yIE9VVCBmb3IgdGhlIGdpdmVuIHBvaW50c1xuICAgICAqIEByZXR1cm4gc3RyaW5nIEVpdGhlciB7QGxpbmsgJC5mbi5zd2lwZS5kaXJlY3Rpb25zLklOfSBvciB7QGxpbmsgJC5mbi5zd2lwZS5kaXJlY3Rpb25zLk9VVH1cbiAgICAgKiBAc2VlICQuZm4uc3dpcGUuZGlyZWN0aW9uc1xuICAgICAqIEBpbm5lclxuICAgICAqL1xuICAgIGZ1bmN0aW9uIGNhbGN1bGF0ZVBpbmNoRGlyZWN0aW9uKCkge1xuICAgICAgaWYgKHBpbmNoWm9vbSA8IDEpIHtcbiAgICAgICAgcmV0dXJuIE9VVDtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHJldHVybiBJTjtcbiAgICAgIH1cbiAgICB9XG5cblxuICAgIC8qKlxuICAgICAqIENhbGN1bGF0ZSB0aGUgbGVuZ3RoIC8gZGlzdGFuY2Ugb2YgdGhlIHN3aXBlXG4gICAgICogQHBhcmFtIHtwb2ludH0gc3RhcnRQb2ludCBBIHBvaW50IG9iamVjdCBjb250YWluaW5nIHggYW5kIHkgY28tb3JkaW5hdGVzXG4gICAgICogQHBhcmFtIHtwb2ludH0gZW5kUG9pbnQgQSBwb2ludCBvYmplY3QgY29udGFpbmluZyB4IGFuZCB5IGNvLW9yZGluYXRlc1xuICAgICAqIEByZXR1cm4gaW50XG4gICAgICogQGlubmVyXG4gICAgICovXG4gICAgZnVuY3Rpb24gY2FsY3VsYXRlRGlzdGFuY2Uoc3RhcnRQb2ludCwgZW5kUG9pbnQpIHtcbiAgICAgIHJldHVybiBNYXRoLnJvdW5kKE1hdGguc3FydChNYXRoLnBvdyhlbmRQb2ludC54IC0gc3RhcnRQb2ludC54LCAyKSArIE1hdGgucG93KGVuZFBvaW50LnkgLSBzdGFydFBvaW50LnksIDIpKSk7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogQ2FsY3VsYXRlIHRoZSBhbmdsZSBvZiB0aGUgc3dpcGVcbiAgICAgKiBAcGFyYW0ge3BvaW50fSBzdGFydFBvaW50IEEgcG9pbnQgb2JqZWN0IGNvbnRhaW5pbmcgeCBhbmQgeSBjby1vcmRpbmF0ZXNcbiAgICAgKiBAcGFyYW0ge3BvaW50fSBlbmRQb2ludCBBIHBvaW50IG9iamVjdCBjb250YWluaW5nIHggYW5kIHkgY28tb3JkaW5hdGVzXG4gICAgICogQHJldHVybiBpbnRcbiAgICAgKiBAaW5uZXJcbiAgICAgKi9cbiAgICBmdW5jdGlvbiBjYWxjdWxhdGVBbmdsZShzdGFydFBvaW50LCBlbmRQb2ludCkge1xuICAgICAgdmFyIHggPSBzdGFydFBvaW50LnggLSBlbmRQb2ludC54O1xuICAgICAgdmFyIHkgPSBlbmRQb2ludC55IC0gc3RhcnRQb2ludC55O1xuICAgICAgdmFyIHIgPSBNYXRoLmF0YW4yKHksIHgpOyAvL3JhZGlhbnNcbiAgICAgIHZhciBhbmdsZSA9IE1hdGgucm91bmQociAqIDE4MCAvIE1hdGguUEkpOyAvL2RlZ3JlZXNcblxuICAgICAgLy9lbnN1cmUgdmFsdWUgaXMgcG9zaXRpdmVcbiAgICAgIGlmIChhbmdsZSA8IDApIHtcbiAgICAgICAgYW5nbGUgPSAzNjAgLSBNYXRoLmFicyhhbmdsZSk7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiBhbmdsZTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBDYWxjdWxhdGUgdGhlIGRpcmVjdGlvbiBvZiB0aGUgc3dpcGVcbiAgICAgKiBUaGlzIHdpbGwgYWxzbyBjYWxsIGNhbGN1bGF0ZUFuZ2xlIHRvIGdldCB0aGUgbGF0ZXN0IGFuZ2xlIG9mIHN3aXBlXG4gICAgICogQHBhcmFtIHtwb2ludH0gc3RhcnRQb2ludCBBIHBvaW50IG9iamVjdCBjb250YWluaW5nIHggYW5kIHkgY28tb3JkaW5hdGVzXG4gICAgICogQHBhcmFtIHtwb2ludH0gZW5kUG9pbnQgQSBwb2ludCBvYmplY3QgY29udGFpbmluZyB4IGFuZCB5IGNvLW9yZGluYXRlc1xuICAgICAqIEByZXR1cm4gc3RyaW5nIEVpdGhlciB7QGxpbmsgJC5mbi5zd2lwZS5kaXJlY3Rpb25zLkxFRlR9IC8ge0BsaW5rICQuZm4uc3dpcGUuZGlyZWN0aW9ucy5SSUdIVH0gLyB7QGxpbmsgJC5mbi5zd2lwZS5kaXJlY3Rpb25zLkRPV059IC8ge0BsaW5rICQuZm4uc3dpcGUuZGlyZWN0aW9ucy5VUH1cbiAgICAgKiBAc2VlICQuZm4uc3dpcGUuZGlyZWN0aW9uc1xuICAgICAqIEBpbm5lclxuICAgICAqL1xuICAgIGZ1bmN0aW9uIGNhbGN1bGF0ZURpcmVjdGlvbihzdGFydFBvaW50LCBlbmRQb2ludCkge1xuXG4gICAgICBpZiggY29tcGFyZVBvaW50cyhzdGFydFBvaW50LCBlbmRQb2ludCkgKSB7XG4gICAgICAgIHJldHVybiBOT05FO1xuICAgICAgfVxuXG4gICAgICB2YXIgYW5nbGUgPSBjYWxjdWxhdGVBbmdsZShzdGFydFBvaW50LCBlbmRQb2ludCk7XG5cbiAgICAgIGlmICgoYW5nbGUgPD0gNDUpICYmIChhbmdsZSA+PSAwKSkge1xuICAgICAgICByZXR1cm4gTEVGVDtcbiAgICAgIH0gZWxzZSBpZiAoKGFuZ2xlIDw9IDM2MCkgJiYgKGFuZ2xlID49IDMxNSkpIHtcbiAgICAgICAgcmV0dXJuIExFRlQ7XG4gICAgICB9IGVsc2UgaWYgKChhbmdsZSA+PSAxMzUpICYmIChhbmdsZSA8PSAyMjUpKSB7XG4gICAgICAgIHJldHVybiBSSUdIVDtcbiAgICAgIH0gZWxzZSBpZiAoKGFuZ2xlID4gNDUpICYmIChhbmdsZSA8IDEzNSkpIHtcbiAgICAgICAgcmV0dXJuIERPV047XG4gICAgICB9IGVsc2Uge1xuICAgICAgICByZXR1cm4gVVA7XG4gICAgICB9XG4gICAgfVxuXG5cbiAgICAvKipcbiAgICAgKiBSZXR1cm5zIGEgTVMgdGltZSBzdGFtcCBvZiB0aGUgY3VycmVudCB0aW1lXG4gICAgICogQHJldHVybiBpbnRcbiAgICAgKiBAaW5uZXJcbiAgICAgKi9cbiAgICBmdW5jdGlvbiBnZXRUaW1lU3RhbXAoKSB7XG4gICAgICB2YXIgbm93ID0gbmV3IERhdGUoKTtcbiAgICAgIHJldHVybiBub3cuZ2V0VGltZSgpO1xuICAgIH1cblxuXG5cbiAgICAvKipcbiAgICAgKiBSZXR1cm5zIGEgYm91bmRzIG9iamVjdCB3aXRoIGxlZnQsIHJpZ2h0LCB0b3AgYW5kIGJvdHRvbSBwcm9wZXJ0aWVzIGZvciB0aGUgZWxlbWVudCBzcGVjaWZpZWQuXG4gICAgICogQHBhcmFtIHtEb21Ob2RlfSBUaGUgRE9NIG5vZGUgdG8gZ2V0IHRoZSBib3VuZHMgZm9yLlxuICAgICAqL1xuICAgIGZ1bmN0aW9uIGdldGJvdW5kcyhlbCkge1xuICAgICAgZWwgPSAkKGVsKTtcbiAgICAgIHZhciBvZmZzZXQgPSBlbC5vZmZzZXQoKTtcblxuICAgICAgdmFyIGJvdW5kcyA9IHtcbiAgICAgICAgbGVmdDogb2Zmc2V0LmxlZnQsXG4gICAgICAgIHJpZ2h0OiBvZmZzZXQubGVmdCArIGVsLm91dGVyV2lkdGgoKSxcbiAgICAgICAgdG9wOiBvZmZzZXQudG9wLFxuICAgICAgICBib3R0b206IG9mZnNldC50b3AgKyBlbC5vdXRlckhlaWdodCgpXG4gICAgICB9XG5cbiAgICAgIHJldHVybiBib3VuZHM7XG4gICAgfVxuXG5cbiAgICAvKipcbiAgICAgKiBDaGVja3MgaWYgdGhlIHBvaW50IG9iamVjdCBpcyBpbiB0aGUgYm91bmRzIG9iamVjdC5cbiAgICAgKiBAcGFyYW0ge29iamVjdH0gcG9pbnQgQSBwb2ludCBvYmplY3QuXG4gICAgICogQHBhcmFtIHtpbnR9IHBvaW50LnggVGhlIHggdmFsdWUgb2YgdGhlIHBvaW50LlxuICAgICAqIEBwYXJhbSB7aW50fSBwb2ludC55IFRoZSB4IHZhbHVlIG9mIHRoZSBwb2ludC5cbiAgICAgKiBAcGFyYW0ge29iamVjdH0gYm91bmRzIFRoZSBib3VuZHMgb2JqZWN0IHRvIHRlc3RcbiAgICAgKiBAcGFyYW0ge2ludH0gYm91bmRzLmxlZnQgVGhlIGxlZnRtb3N0IHZhbHVlXG4gICAgICogQHBhcmFtIHtpbnR9IGJvdW5kcy5yaWdodCBUaGUgcmlnaHR0bW9zdCB2YWx1ZVxuICAgICAqIEBwYXJhbSB7aW50fSBib3VuZHMudG9wIFRoZSB0b3Btb3N0IHZhbHVlXG4gICAgICogQHBhcmFtIHtpbnR9IGJvdW5kcy5ib3R0b20gVGhlIGJvdHRvbW1vc3QgdmFsdWVcbiAgICAgKi9cbiAgICBmdW5jdGlvbiBpc0luQm91bmRzKHBvaW50LCBib3VuZHMpIHtcbiAgICAgIHJldHVybiAocG9pbnQueCA+IGJvdW5kcy5sZWZ0ICYmIHBvaW50LnggPCBib3VuZHMucmlnaHQgJiYgcG9pbnQueSA+IGJvdW5kcy50b3AgJiYgcG9pbnQueSA8IGJvdW5kcy5ib3R0b20pO1xuICAgIH07XG5cbiAgICAvKipcbiAgICAgKiBDaGVja3MgaWYgdGhlIHR3byBwb2ludHMgYXJlIGVxdWFsXG4gICAgICogQHBhcmFtIHtvYmplY3R9IHBvaW50IEEgcG9pbnQgb2JqZWN0LlxuICAgICAqIEBwYXJhbSB7b2JqZWN0fSBwb2ludCBCIHBvaW50IG9iamVjdC5cbiAgICAgKiBAcmV0dXJuIHRydWUgb2YgdGhlIHBvaW50cyBtYXRjaFxuICAgICAqL1xuICAgIGZ1bmN0aW9uIGNvbXBhcmVQb2ludHMocG9pbnRBLCBwb2ludEIpIHtcbiAgICAgIHJldHVybiAocG9pbnRBLnggPT0gcG9pbnRCLnggJiYgcG9pbnRBLnkgPT0gcG9pbnRCLnkpO1xuICAgIH1cblxuXG4gIH1cblxuXG5cblxuICAvKipcbiAgICogQSBjYXRjaCBhbGwgaGFuZGxlciB0aGF0IGlzIHRyaWdnZXJlZCBmb3IgYWxsIHN3aXBlIGRpcmVjdGlvbnMuXG4gICAqIEBuYW1lICQuZm4uc3dpcGUjc3dpcGVcbiAgICogQGV2ZW50XG4gICAqIEBkZWZhdWx0IG51bGxcbiAgICogQHBhcmFtIHtFdmVudE9iamVjdH0gZXZlbnQgVGhlIG9yaWdpbmFsIGV2ZW50IG9iamVjdFxuICAgKiBAcGFyYW0ge2ludH0gZGlyZWN0aW9uIFRoZSBkaXJlY3Rpb24gdGhlIHVzZXIgc3dpcGVkIGluLiBTZWUge0BsaW5rICQuZm4uc3dpcGUuZGlyZWN0aW9uc31cbiAgICogQHBhcmFtIHtpbnR9IGRpc3RhbmNlIFRoZSBkaXN0YW5jZSB0aGUgdXNlciBzd2lwZWRcbiAgICogQHBhcmFtIHtpbnR9IGR1cmF0aW9uIFRoZSBkdXJhdGlvbiBvZiB0aGUgc3dpcGUgaW4gbWlsbGlzZWNvbmRzXG4gICAqIEBwYXJhbSB7aW50fSBmaW5nZXJDb3VudCBUaGUgbnVtYmVyIG9mIGZpbmdlcnMgdXNlZC4gU2VlIHtAbGluayAkLmZuLnN3aXBlLmZpbmdlcnN9XG4gICAqIEBwYXJhbSB7b2JqZWN0fSBmaW5nZXJEYXRhIFRoZSBjb29yZGluYXRlcyBvZiBmaW5nZXJzIGluIGV2ZW50XG4gICAqIEBwYXJhbSB7c3RyaW5nfSBjdXJyZW50RGlyZWN0aW9uIFRoZSBjdXJyZW50IGRpcmVjdGlvbiB0aGUgdXNlciBpcyBzd2lwaW5nLlxuICAgKi9cblxuXG5cblxuICAvKipcbiAgICogQSBoYW5kbGVyIHRoYXQgaXMgdHJpZ2dlcmVkIGZvciBcImxlZnRcIiBzd2lwZXMuXG4gICAqIEBuYW1lICQuZm4uc3dpcGUjc3dpcGVMZWZ0XG4gICAqIEBldmVudFxuICAgKiBAZGVmYXVsdCBudWxsXG4gICAqIEBwYXJhbSB7RXZlbnRPYmplY3R9IGV2ZW50IFRoZSBvcmlnaW5hbCBldmVudCBvYmplY3RcbiAgICogQHBhcmFtIHtpbnR9IGRpcmVjdGlvbiBUaGUgZGlyZWN0aW9uIHRoZSB1c2VyIHN3aXBlZCBpbi4gU2VlIHtAbGluayAkLmZuLnN3aXBlLmRpcmVjdGlvbnN9XG4gICAqIEBwYXJhbSB7aW50fSBkaXN0YW5jZSBUaGUgZGlzdGFuY2UgdGhlIHVzZXIgc3dpcGVkXG4gICAqIEBwYXJhbSB7aW50fSBkdXJhdGlvbiBUaGUgZHVyYXRpb24gb2YgdGhlIHN3aXBlIGluIG1pbGxpc2Vjb25kc1xuICAgKiBAcGFyYW0ge2ludH0gZmluZ2VyQ291bnQgVGhlIG51bWJlciBvZiBmaW5nZXJzIHVzZWQuIFNlZSB7QGxpbmsgJC5mbi5zd2lwZS5maW5nZXJzfVxuICAgKiBAcGFyYW0ge29iamVjdH0gZmluZ2VyRGF0YSBUaGUgY29vcmRpbmF0ZXMgb2YgZmluZ2VycyBpbiBldmVudFxuICAgKiBAcGFyYW0ge3N0cmluZ30gY3VycmVudERpcmVjdGlvbiBUaGUgY3VycmVudCBkaXJlY3Rpb24gdGhlIHVzZXIgaXMgc3dpcGluZy5cbiAgICovXG5cbiAgLyoqXG4gICAqIEEgaGFuZGxlciB0aGF0IGlzIHRyaWdnZXJlZCBmb3IgXCJyaWdodFwiIHN3aXBlcy5cbiAgICogQG5hbWUgJC5mbi5zd2lwZSNzd2lwZVJpZ2h0XG4gICAqIEBldmVudFxuICAgKiBAZGVmYXVsdCBudWxsXG4gICAqIEBwYXJhbSB7RXZlbnRPYmplY3R9IGV2ZW50IFRoZSBvcmlnaW5hbCBldmVudCBvYmplY3RcbiAgICogQHBhcmFtIHtpbnR9IGRpcmVjdGlvbiBUaGUgZGlyZWN0aW9uIHRoZSB1c2VyIHN3aXBlZCBpbi4gU2VlIHtAbGluayAkLmZuLnN3aXBlLmRpcmVjdGlvbnN9XG4gICAqIEBwYXJhbSB7aW50fSBkaXN0YW5jZSBUaGUgZGlzdGFuY2UgdGhlIHVzZXIgc3dpcGVkXG4gICAqIEBwYXJhbSB7aW50fSBkdXJhdGlvbiBUaGUgZHVyYXRpb24gb2YgdGhlIHN3aXBlIGluIG1pbGxpc2Vjb25kc1xuICAgKiBAcGFyYW0ge2ludH0gZmluZ2VyQ291bnQgVGhlIG51bWJlciBvZiBmaW5nZXJzIHVzZWQuIFNlZSB7QGxpbmsgJC5mbi5zd2lwZS5maW5nZXJzfVxuICAgKiBAcGFyYW0ge29iamVjdH0gZmluZ2VyRGF0YSBUaGUgY29vcmRpbmF0ZXMgb2YgZmluZ2VycyBpbiBldmVudFxuICAgKiBAcGFyYW0ge3N0cmluZ30gY3VycmVudERpcmVjdGlvbiBUaGUgY3VycmVudCBkaXJlY3Rpb24gdGhlIHVzZXIgaXMgc3dpcGluZy5cbiAgICovXG5cbiAgLyoqXG4gICAqIEEgaGFuZGxlciB0aGF0IGlzIHRyaWdnZXJlZCBmb3IgXCJ1cFwiIHN3aXBlcy5cbiAgICogQG5hbWUgJC5mbi5zd2lwZSNzd2lwZVVwXG4gICAqIEBldmVudFxuICAgKiBAZGVmYXVsdCBudWxsXG4gICAqIEBwYXJhbSB7RXZlbnRPYmplY3R9IGV2ZW50IFRoZSBvcmlnaW5hbCBldmVudCBvYmplY3RcbiAgICogQHBhcmFtIHtpbnR9IGRpcmVjdGlvbiBUaGUgZGlyZWN0aW9uIHRoZSB1c2VyIHN3aXBlZCBpbi4gU2VlIHtAbGluayAkLmZuLnN3aXBlLmRpcmVjdGlvbnN9XG4gICAqIEBwYXJhbSB7aW50fSBkaXN0YW5jZSBUaGUgZGlzdGFuY2UgdGhlIHVzZXIgc3dpcGVkXG4gICAqIEBwYXJhbSB7aW50fSBkdXJhdGlvbiBUaGUgZHVyYXRpb24gb2YgdGhlIHN3aXBlIGluIG1pbGxpc2Vjb25kc1xuICAgKiBAcGFyYW0ge2ludH0gZmluZ2VyQ291bnQgVGhlIG51bWJlciBvZiBmaW5nZXJzIHVzZWQuIFNlZSB7QGxpbmsgJC5mbi5zd2lwZS5maW5nZXJzfVxuICAgKiBAcGFyYW0ge29iamVjdH0gZmluZ2VyRGF0YSBUaGUgY29vcmRpbmF0ZXMgb2YgZmluZ2VycyBpbiBldmVudFxuICAgKiBAcGFyYW0ge3N0cmluZ30gY3VycmVudERpcmVjdGlvbiBUaGUgY3VycmVudCBkaXJlY3Rpb24gdGhlIHVzZXIgaXMgc3dpcGluZy5cbiAgICovXG5cbiAgLyoqXG4gICAqIEEgaGFuZGxlciB0aGF0IGlzIHRyaWdnZXJlZCBmb3IgXCJkb3duXCIgc3dpcGVzLlxuICAgKiBAbmFtZSAkLmZuLnN3aXBlI3N3aXBlRG93blxuICAgKiBAZXZlbnRcbiAgICogQGRlZmF1bHQgbnVsbFxuICAgKiBAcGFyYW0ge0V2ZW50T2JqZWN0fSBldmVudCBUaGUgb3JpZ2luYWwgZXZlbnQgb2JqZWN0XG4gICAqIEBwYXJhbSB7aW50fSBkaXJlY3Rpb24gVGhlIGRpcmVjdGlvbiB0aGUgdXNlciBzd2lwZWQgaW4uIFNlZSB7QGxpbmsgJC5mbi5zd2lwZS5kaXJlY3Rpb25zfVxuICAgKiBAcGFyYW0ge2ludH0gZGlzdGFuY2UgVGhlIGRpc3RhbmNlIHRoZSB1c2VyIHN3aXBlZFxuICAgKiBAcGFyYW0ge2ludH0gZHVyYXRpb24gVGhlIGR1cmF0aW9uIG9mIHRoZSBzd2lwZSBpbiBtaWxsaXNlY29uZHNcbiAgICogQHBhcmFtIHtpbnR9IGZpbmdlckNvdW50IFRoZSBudW1iZXIgb2YgZmluZ2VycyB1c2VkLiBTZWUge0BsaW5rICQuZm4uc3dpcGUuZmluZ2Vyc31cbiAgICogQHBhcmFtIHtvYmplY3R9IGZpbmdlckRhdGEgVGhlIGNvb3JkaW5hdGVzIG9mIGZpbmdlcnMgaW4gZXZlbnRcbiAgICogQHBhcmFtIHtzdHJpbmd9IGN1cnJlbnREaXJlY3Rpb24gVGhlIGN1cnJlbnQgZGlyZWN0aW9uIHRoZSB1c2VyIGlzIHN3aXBpbmcuXG4gICAqL1xuXG4gIC8qKlxuICAgKiBBIGhhbmRsZXIgdHJpZ2dlcmVkIGZvciBldmVyeSBwaGFzZSBvZiB0aGUgc3dpcGUuIFRoaXMgaGFuZGxlciBpcyBjb25zdGFudGx5IGZpcmVkIGZvciB0aGUgZHVyYXRpb24gb2YgdGhlIHBpbmNoLlxuICAgKiBUaGlzIGlzIHRyaWdnZXJlZCByZWdhcmRsZXNzIG9mIHN3aXBlIHRocmVzaG9sZHMuXG4gICAqIEBuYW1lICQuZm4uc3dpcGUjc3dpcGVTdGF0dXNcbiAgICogQGV2ZW50XG4gICAqIEBkZWZhdWx0IG51bGxcbiAgICogQHBhcmFtIHtFdmVudE9iamVjdH0gZXZlbnQgVGhlIG9yaWdpbmFsIGV2ZW50IG9iamVjdFxuICAgKiBAcGFyYW0ge3N0cmluZ30gcGhhc2UgVGhlIHBoYXNlIG9mIHRoZSBzd2lwZSBldmVudC4gU2VlIHtAbGluayAkLmZuLnN3aXBlLnBoYXNlc31cbiAgICogQHBhcmFtIHtzdHJpbmd9IGRpcmVjdGlvbiBUaGUgZGlyZWN0aW9uIHRoZSB1c2VyIHN3aXBlZCBpbi4gVGhpcyBpcyBudWxsIGlmIHRoZSB1c2VyIGhhcyB5ZXQgdG8gbW92ZS4gU2VlIHtAbGluayAkLmZuLnN3aXBlLmRpcmVjdGlvbnN9XG4gICAqIEBwYXJhbSB7aW50fSBkaXN0YW5jZSBUaGUgZGlzdGFuY2UgdGhlIHVzZXIgc3dpcGVkLiBUaGlzIGlzIDAgaWYgdGhlIHVzZXIgaGFzIHlldCB0byBtb3ZlLlxuICAgKiBAcGFyYW0ge2ludH0gZHVyYXRpb24gVGhlIGR1cmF0aW9uIG9mIHRoZSBzd2lwZSBpbiBtaWxsaXNlY29uZHNcbiAgICogQHBhcmFtIHtpbnR9IGZpbmdlckNvdW50IFRoZSBudW1iZXIgb2YgZmluZ2VycyB1c2VkLiBTZWUge0BsaW5rICQuZm4uc3dpcGUuZmluZ2Vyc31cbiAgICogQHBhcmFtIHtvYmplY3R9IGZpbmdlckRhdGEgVGhlIGNvb3JkaW5hdGVzIG9mIGZpbmdlcnMgaW4gZXZlbnRcbiAgICogQHBhcmFtIHtzdHJpbmd9IGN1cnJlbnREaXJlY3Rpb24gVGhlIGN1cnJlbnQgZGlyZWN0aW9uIHRoZSB1c2VyIGlzIHN3aXBpbmcuXG4gICAqL1xuXG4gIC8qKlxuICAgKiBBIGhhbmRsZXIgdHJpZ2dlcmVkIGZvciBwaW5jaCBpbiBldmVudHMuXG4gICAqIEBuYW1lICQuZm4uc3dpcGUjcGluY2hJblxuICAgKiBAZXZlbnRcbiAgICogQGRlZmF1bHQgbnVsbFxuICAgKiBAcGFyYW0ge0V2ZW50T2JqZWN0fSBldmVudCBUaGUgb3JpZ2luYWwgZXZlbnQgb2JqZWN0XG4gICAqIEBwYXJhbSB7aW50fSBkaXJlY3Rpb24gVGhlIGRpcmVjdGlvbiB0aGUgdXNlciBwaW5jaGVkIGluLiBTZWUge0BsaW5rICQuZm4uc3dpcGUuZGlyZWN0aW9uc31cbiAgICogQHBhcmFtIHtpbnR9IGRpc3RhbmNlIFRoZSBkaXN0YW5jZSB0aGUgdXNlciBwaW5jaGVkXG4gICAqIEBwYXJhbSB7aW50fSBkdXJhdGlvbiBUaGUgZHVyYXRpb24gb2YgdGhlIHN3aXBlIGluIG1pbGxpc2Vjb25kc1xuICAgKiBAcGFyYW0ge2ludH0gZmluZ2VyQ291bnQgVGhlIG51bWJlciBvZiBmaW5nZXJzIHVzZWQuIFNlZSB7QGxpbmsgJC5mbi5zd2lwZS5maW5nZXJzfVxuICAgKiBAcGFyYW0ge2ludH0gem9vbSBUaGUgem9vbS9zY2FsZSBsZXZlbCB0aGUgdXNlciBwaW5jaGVkIHRvbywgMC0xLlxuICAgKiBAcGFyYW0ge29iamVjdH0gZmluZ2VyRGF0YSBUaGUgY29vcmRpbmF0ZXMgb2YgZmluZ2VycyBpbiBldmVudFxuICAgKi9cblxuICAvKipcbiAgICogQSBoYW5kbGVyIHRyaWdnZXJlZCBmb3IgcGluY2ggb3V0IGV2ZW50cy5cbiAgICogQG5hbWUgJC5mbi5zd2lwZSNwaW5jaE91dFxuICAgKiBAZXZlbnRcbiAgICogQGRlZmF1bHQgbnVsbFxuICAgKiBAcGFyYW0ge0V2ZW50T2JqZWN0fSBldmVudCBUaGUgb3JpZ2luYWwgZXZlbnQgb2JqZWN0XG4gICAqIEBwYXJhbSB7aW50fSBkaXJlY3Rpb24gVGhlIGRpcmVjdGlvbiB0aGUgdXNlciBwaW5jaGVkIGluLiBTZWUge0BsaW5rICQuZm4uc3dpcGUuZGlyZWN0aW9uc31cbiAgICogQHBhcmFtIHtpbnR9IGRpc3RhbmNlIFRoZSBkaXN0YW5jZSB0aGUgdXNlciBwaW5jaGVkXG4gICAqIEBwYXJhbSB7aW50fSBkdXJhdGlvbiBUaGUgZHVyYXRpb24gb2YgdGhlIHN3aXBlIGluIG1pbGxpc2Vjb25kc1xuICAgKiBAcGFyYW0ge2ludH0gZmluZ2VyQ291bnQgVGhlIG51bWJlciBvZiBmaW5nZXJzIHVzZWQuIFNlZSB7QGxpbmsgJC5mbi5zd2lwZS5maW5nZXJzfVxuICAgKiBAcGFyYW0ge2ludH0gem9vbSBUaGUgem9vbS9zY2FsZSBsZXZlbCB0aGUgdXNlciBwaW5jaGVkIHRvbywgMC0xLlxuICAgKiBAcGFyYW0ge29iamVjdH0gZmluZ2VyRGF0YSBUaGUgY29vcmRpbmF0ZXMgb2YgZmluZ2VycyBpbiBldmVudFxuICAgKi9cblxuICAvKipcbiAgICogQSBoYW5kbGVyIHRyaWdnZXJlZCBmb3IgYWxsIHBpbmNoIGV2ZW50cy4gVGhpcyBoYW5kbGVyIGlzIGNvbnN0YW50bHkgZmlyZWQgZm9yIHRoZSBkdXJhdGlvbiBvZiB0aGUgcGluY2guIFRoaXMgaXMgdHJpZ2dlcmVkIHJlZ2FyZGxlc3Mgb2YgdGhyZXNob2xkcy5cbiAgICogQG5hbWUgJC5mbi5zd2lwZSNwaW5jaFN0YXR1c1xuICAgKiBAZXZlbnRcbiAgICogQGRlZmF1bHQgbnVsbFxuICAgKiBAcGFyYW0ge0V2ZW50T2JqZWN0fSBldmVudCBUaGUgb3JpZ2luYWwgZXZlbnQgb2JqZWN0XG4gICAqIEBwYXJhbSB7aW50fSBkaXJlY3Rpb24gVGhlIGRpcmVjdGlvbiB0aGUgdXNlciBwaW5jaGVkIGluLiBTZWUge0BsaW5rICQuZm4uc3dpcGUuZGlyZWN0aW9uc31cbiAgICogQHBhcmFtIHtpbnR9IGRpc3RhbmNlIFRoZSBkaXN0YW5jZSB0aGUgdXNlciBwaW5jaGVkXG4gICAqIEBwYXJhbSB7aW50fSBkdXJhdGlvbiBUaGUgZHVyYXRpb24gb2YgdGhlIHN3aXBlIGluIG1pbGxpc2Vjb25kc1xuICAgKiBAcGFyYW0ge2ludH0gZmluZ2VyQ291bnQgVGhlIG51bWJlciBvZiBmaW5nZXJzIHVzZWQuIFNlZSB7QGxpbmsgJC5mbi5zd2lwZS5maW5nZXJzfVxuICAgKiBAcGFyYW0ge2ludH0gem9vbSBUaGUgem9vbS9zY2FsZSBsZXZlbCB0aGUgdXNlciBwaW5jaGVkIHRvbywgMC0xLlxuICAgKiBAcGFyYW0ge29iamVjdH0gZmluZ2VyRGF0YSBUaGUgY29vcmRpbmF0ZXMgb2YgZmluZ2VycyBpbiBldmVudFxuICAgKi9cblxuICAvKipcbiAgICogQSBjbGljayBoYW5kbGVyIHRyaWdnZXJlZCB3aGVuIGEgdXNlciBzaW1wbHkgY2xpY2tzLCByYXRoZXIgdGhhbiBzd2lwZXMgb24gYW4gZWxlbWVudC5cbiAgICogVGhpcyBpcyBkZXByZWNhdGVkIHNpbmNlIHZlcnNpb24gMS42LjIsIGFueSBhc3NpZ25tZW50IHRvIGNsaWNrIHdpbGwgYmUgYXNzaWduZWQgdG8gdGhlIHRhcCBoYW5kbGVyLlxuICAgKiBZb3UgY2Fubm90IHVzZSA8Y29kZT5vbjwvY29kZT4gdG8gYmluZCB0byB0aGlzIGV2ZW50IGFzIHRoZSBkZWZhdWx0IGpRIDxjb2RlPmNsaWNrPC9jb2RlPiBldmVudCB3aWxsIGJlIHRyaWdnZXJlZC5cbiAgICogVXNlIHRoZSA8Y29kZT50YXA8L2NvZGU+IGV2ZW50IGluc3RlYWQuXG4gICAqIEBuYW1lICQuZm4uc3dpcGUjY2xpY2tcbiAgICogQGV2ZW50XG4gICAqIEBkZXByZWNhdGVkIHNpbmNlIHZlcnNpb24gMS42LjIsIHBsZWFzZSB1c2Uge0BsaW5rICQuZm4uc3dpcGUjdGFwfSBpbnN0ZWFkXG4gICAqIEBkZWZhdWx0IG51bGxcbiAgICogQHBhcmFtIHtFdmVudE9iamVjdH0gZXZlbnQgVGhlIG9yaWdpbmFsIGV2ZW50IG9iamVjdFxuICAgKiBAcGFyYW0ge0RvbU9iamVjdH0gdGFyZ2V0IFRoZSBlbGVtZW50IGNsaWNrZWQgb24uXG4gICAqL1xuXG4gIC8qKlxuICAgKiBBIGNsaWNrIC8gdGFwIGhhbmRsZXIgdHJpZ2dlcmVkIHdoZW4gYSB1c2VyIHNpbXBseSBjbGlja3Mgb3IgdGFwcywgcmF0aGVyIHRoYW4gc3dpcGVzIG9uIGFuIGVsZW1lbnQuXG4gICAqIEBuYW1lICQuZm4uc3dpcGUjdGFwXG4gICAqIEBldmVudFxuICAgKiBAZGVmYXVsdCBudWxsXG4gICAqIEBwYXJhbSB7RXZlbnRPYmplY3R9IGV2ZW50IFRoZSBvcmlnaW5hbCBldmVudCBvYmplY3RcbiAgICogQHBhcmFtIHtEb21PYmplY3R9IHRhcmdldCBUaGUgZWxlbWVudCBjbGlja2VkIG9uLlxuICAgKi9cblxuICAvKipcbiAgICogQSBkb3VibGUgdGFwIGhhbmRsZXIgdHJpZ2dlcmVkIHdoZW4gYSB1c2VyIGRvdWJsZSBjbGlja3Mgb3IgdGFwcyBvbiBhbiBlbGVtZW50LlxuICAgKiBZb3UgY2FuIHNldCB0aGUgdGltZSBkZWxheSBmb3IgYSBkb3VibGUgdGFwIHdpdGggdGhlIHtAbGluayAkLmZuLnN3aXBlLmRlZmF1bHRzI2RvdWJsZVRhcFRocmVzaG9sZH0gcHJvcGVydHkuXG4gICAqIE5vdGU6IElmIHlvdSBzZXQgYm90aCA8Y29kZT5kb3VibGVUYXA8L2NvZGU+IGFuZCA8Y29kZT50YXA8L2NvZGU+IGhhbmRsZXJzLCB0aGUgPGNvZGU+dGFwPC9jb2RlPiBldmVudCB3aWxsIGJlIGRlbGF5ZWQgYnkgdGhlIDxjb2RlPmRvdWJsZVRhcFRocmVzaG9sZDwvY29kZT5cbiAgICogYXMgdGhlIHNjcmlwdCBuZWVkcyB0byBjaGVjayBpZiBpdHMgYSBkb3VibGUgdGFwLlxuICAgKiBAbmFtZSAkLmZuLnN3aXBlI2RvdWJsZVRhcFxuICAgKiBAc2VlICAkLmZuLnN3aXBlLmRlZmF1bHRzI2RvdWJsZVRhcFRocmVzaG9sZFxuICAgKiBAZXZlbnRcbiAgICogQGRlZmF1bHQgbnVsbFxuICAgKiBAcGFyYW0ge0V2ZW50T2JqZWN0fSBldmVudCBUaGUgb3JpZ2luYWwgZXZlbnQgb2JqZWN0XG4gICAqIEBwYXJhbSB7RG9tT2JqZWN0fSB0YXJnZXQgVGhlIGVsZW1lbnQgY2xpY2tlZCBvbi5cbiAgICovXG5cbiAgLyoqXG4gICAqIEEgbG9uZyB0YXAgaGFuZGxlciB0cmlnZ2VyZWQgb25jZSBhIHRhcCBoYXMgYmVlbiByZWxlYXNlIGlmIHRoZSB0YXAgd2FzIGxvbmdlciB0aGFuIHRoZSBsb25nVGFwVGhyZXNob2xkLlxuICAgKiBZb3UgY2FuIHNldCB0aGUgdGltZSBkZWxheSBmb3IgYSBsb25nIHRhcCB3aXRoIHRoZSB7QGxpbmsgJC5mbi5zd2lwZS5kZWZhdWx0cyNsb25nVGFwVGhyZXNob2xkfSBwcm9wZXJ0eS5cbiAgICogQG5hbWUgJC5mbi5zd2lwZSNsb25nVGFwXG4gICAqIEBzZWUgICQuZm4uc3dpcGUuZGVmYXVsdHMjbG9uZ1RhcFRocmVzaG9sZFxuICAgKiBAZXZlbnRcbiAgICogQGRlZmF1bHQgbnVsbFxuICAgKiBAcGFyYW0ge0V2ZW50T2JqZWN0fSBldmVudCBUaGUgb3JpZ2luYWwgZXZlbnQgb2JqZWN0XG4gICAqIEBwYXJhbSB7RG9tT2JqZWN0fSB0YXJnZXQgVGhlIGVsZW1lbnQgY2xpY2tlZCBvbi5cbiAgICovXG5cbiAgLyoqXG4gICAqIEEgaG9sZCB0YXAgaGFuZGxlciB0cmlnZ2VyZWQgYXMgc29vbiBhcyB0aGUgbG9uZ1RhcFRocmVzaG9sZCBpcyByZWFjaGVkXG4gICAqIFlvdSBjYW4gc2V0IHRoZSB0aW1lIGRlbGF5IGZvciBhIGxvbmcgdGFwIHdpdGggdGhlIHtAbGluayAkLmZuLnN3aXBlLmRlZmF1bHRzI2xvbmdUYXBUaHJlc2hvbGR9IHByb3BlcnR5LlxuICAgKiBAbmFtZSAkLmZuLnN3aXBlI2hvbGRcbiAgICogQHNlZSAgJC5mbi5zd2lwZS5kZWZhdWx0cyNsb25nVGFwVGhyZXNob2xkXG4gICAqIEBldmVudFxuICAgKiBAZGVmYXVsdCBudWxsXG4gICAqIEBwYXJhbSB7RXZlbnRPYmplY3R9IGV2ZW50IFRoZSBvcmlnaW5hbCBldmVudCBvYmplY3RcbiAgICogQHBhcmFtIHtEb21PYmplY3R9IHRhcmdldCBUaGUgZWxlbWVudCBjbGlja2VkIG9uLlxuICAgKi9cblxufSkpO1xuIiwiLy8gVEhJUyBGSUxFIElTIEdFTkVSQVRFRCAtIERPIE5PVCBFRElUIVxuLyohbW9iaWxlLWRldGVjdCB2MS40LjQgMjAxOS0wOS0yMSovXG4vKmdsb2JhbCBtb2R1bGU6ZmFsc2UsIGRlZmluZTpmYWxzZSovXG4vKmpzaGludCBsYXRlZGVmOmZhbHNlKi9cbi8qIUBsaWNlbnNlIENvcHlyaWdodCAyMDEzLCBIZWlucmljaCBHb2VibCwgTGljZW5zZTogTUlULCBzZWUgaHR0cHM6Ly9naXRodWIuY29tL2hnb2VibC9tb2JpbGUtZGV0ZWN0LmpzKi9cbihmdW5jdGlvbiAoZGVmaW5lLCB1bmRlZmluZWQpIHtcbmRlZmluZShmdW5jdGlvbiAoKSB7XG4gICAgJ3VzZSBzdHJpY3QnO1xuXG4gICAgdmFyIGltcGwgPSB7fTtcblxuICAgIGltcGwubW9iaWxlRGV0ZWN0UnVsZXMgPSB7XG4gICAgXCJwaG9uZXNcIjoge1xuICAgICAgICBcImlQaG9uZVwiOiBcIlxcXFxiaVBob25lXFxcXGJ8XFxcXGJpUG9kXFxcXGJcIixcbiAgICAgICAgXCJCbGFja0JlcnJ5XCI6IFwiQmxhY2tCZXJyeXxcXFxcYkJCMTBcXFxcYnxyaW1bMC05XSt8XFxcXGIoQkJBMTAwfEJCQjEwMHxCQkQxMDB8QkJFMTAwfEJCRjEwMHxTVEgxMDApXFxcXGItWzAtOV0rXCIsXG4gICAgICAgIFwiSFRDXCI6IFwiSFRDfEhUQy4qKFNlbnNhdGlvbnxFdm98VmlzaW9ufEV4cGxvcmVyfDY4MDB8ODEwMHw4OTAwfEE3MjcyfFM1MTBlfEMxMTBlfExlZ2VuZHxEZXNpcmV8VDgyODIpfEFQWDUxNUNLVHxRdGVrOTA5MHxBUEE5MjkyS1R8SERfbWluaXxTZW5zYXRpb24uKlo3MTBlfFBHODYxMDB8WjcxNWV8RGVzaXJlLiooQTgxODF8SEQpfEFEUjYyMDB8QURSNjQwMEx8QURSNjQyNXwwMDFIVHxJbnNwaXJlIDRHfEFuZHJvaWQuKlxcXFxiRVZPXFxcXGJ8VC1Nb2JpbGUgRzF8WjUyMG18QW5kcm9pZCBbMC05Ll0rOyBQaXhlbFwiLFxuICAgICAgICBcIk5leHVzXCI6IFwiTmV4dXMgT25lfE5leHVzIFN8R2FsYXh5LipOZXh1c3xBbmRyb2lkLipOZXh1cy4qTW9iaWxlfE5leHVzIDR8TmV4dXMgNXxOZXh1cyA2XCIsXG4gICAgICAgIFwiRGVsbFwiOiBcIkRlbGxbO10/IChTdHJlYWt8QWVyb3xWZW51ZXxWZW51ZSBQcm98Rmxhc2h8U21va2V8TWluaSAzaVgpfFhDRDI4fFhDRDM1fFxcXFxiMDAxRExcXFxcYnxcXFxcYjEwMURMXFxcXGJ8XFxcXGJHUzAxXFxcXGJcIixcbiAgICAgICAgXCJNb3Rvcm9sYVwiOiBcIk1vdG9yb2xhfERST0lEWHxEUk9JRCBCSU9OSUN8XFxcXGJEcm9pZFxcXFxiLipCdWlsZHxBbmRyb2lkLipYb29tfEhSSTM5fE1PVC18QTEyNjB8QTE2ODB8QTU1NXxBODUzfEE4NTV8QTk1M3xBOTU1fEE5NTZ8TW90b3JvbGEuKkVMRUNUUklGWXxNb3Rvcm9sYS4qaTF8aTg2N3xpOTQwfE1CMjAwfE1CMzAwfE1CNTAxfE1CNTAyfE1CNTA4fE1CNTExfE1CNTIwfE1CNTI1fE1CNTI2fE1CNjExfE1CNjEyfE1CNjMyfE1CODEwfE1CODU1fE1CODYwfE1CODYxfE1CODY1fE1CODcwfE1FNTAxfE1FNTAyfE1FNTExfE1FNTI1fE1FNjAwfE1FNjMyfE1FNzIyfE1FODExfE1FODYwfE1FODYzfE1FODY1fE1UNjIwfE1UNzEwfE1UNzE2fE1UNzIwfE1UODEwfE1UODcwfE1UOTE3fE1vdG9yb2xhLipUSVRBTklVTXxXWDQzNXxXWDQ0NXxYVDMwMHxYVDMwMXxYVDMxMXxYVDMxNnxYVDMxN3xYVDMxOXxYVDMyMHxYVDM5MHxYVDUwMnxYVDUzMHxYVDUzMXxYVDUzMnxYVDUzNXxYVDYwM3xYVDYxMHxYVDYxMXxYVDYxNXxYVDY4MXxYVDcwMXxYVDcwMnxYVDcxMXxYVDcyMHxYVDgwMHxYVDgwNnxYVDg2MHxYVDg2MnxYVDg3NXxYVDg4MnxYVDg4M3xYVDg5NHxYVDkwMXxYVDkwN3xYVDkwOXxYVDkxMHxYVDkxMnxYVDkyOHxYVDkyNnxYVDkxNXxYVDkxOXxYVDkyNXxYVDEwMjF8XFxcXGJNb3RvIEVcXFxcYnxYVDEwNjh8WFQxMDkyfFhUMTA1MlwiLFxuICAgICAgICBcIlNhbXN1bmdcIjogXCJcXFxcYlNhbXN1bmdcXFxcYnxTTS1HOTUwRnxTTS1HOTU1RnxTTS1HOTI1MHxHVC0xOTMwMHxTR0gtSTMzN3xCR1QtUzUyMzB8R1QtQjIxMDB8R1QtQjI3MDB8R1QtQjI3MTB8R1QtQjMyMTB8R1QtQjMzMTB8R1QtQjM0MTB8R1QtQjM3MzB8R1QtQjM3NDB8R1QtQjU1MTB8R1QtQjU1MTJ8R1QtQjU3MjJ8R1QtQjY1MjB8R1QtQjczMDB8R1QtQjczMjB8R1QtQjczMzB8R1QtQjczNTB8R1QtQjc1MTB8R1QtQjc3MjJ8R1QtQjc4MDB8R1QtQzMwMTB8R1QtQzMwMTF8R1QtQzMwNjB8R1QtQzMyMDB8R1QtQzMyMTJ8R1QtQzMyMTJJfEdULUMzMjYyfEdULUMzMjIyfEdULUMzMzAwfEdULUMzMzAwS3xHVC1DMzMwM3xHVC1DMzMwM0t8R1QtQzMzMTB8R1QtQzMzMjJ8R1QtQzMzMzB8R1QtQzMzNTB8R1QtQzM1MDB8R1QtQzM1MTB8R1QtQzM1MzB8R1QtQzM2MzB8R1QtQzM3ODB8R1QtQzUwMTB8R1QtQzUyMTJ8R1QtQzY2MjB8R1QtQzY2MjV8R1QtQzY3MTJ8R1QtRTEwNTB8R1QtRTEwNzB8R1QtRTEwNzV8R1QtRTEwODB8R1QtRTEwODF8R1QtRTEwODV8R1QtRTEwODd8R1QtRTExMDB8R1QtRTExMDd8R1QtRTExMTB8R1QtRTExMjB8R1QtRTExMjV8R1QtRTExMzB8R1QtRTExNjB8R1QtRTExNzB8R1QtRTExNzV8R1QtRTExODB8R1QtRTExODJ8R1QtRTEyMDB8R1QtRTEyMTB8R1QtRTEyMjV8R1QtRTEyMzB8R1QtRTEzOTB8R1QtRTIxMDB8R1QtRTIxMjB8R1QtRTIxMjF8R1QtRTIxNTJ8R1QtRTIyMjB8R1QtRTIyMjJ8R1QtRTIyMzB8R1QtRTIyMzJ8R1QtRTIyNTB8R1QtRTIzNzB8R1QtRTI1NTB8R1QtRTI2NTJ8R1QtRTMyMTB8R1QtRTMyMTN8R1QtSTU1MDB8R1QtSTU1MDN8R1QtSTU3MDB8R1QtSTU4MDB8R1QtSTU4MDF8R1QtSTY0MTB8R1QtSTY0MjB8R1QtSTcxMTB8R1QtSTc0MTB8R1QtSTc1MDB8R1QtSTgwMDB8R1QtSTgxNTB8R1QtSTgxNjB8R1QtSTgxOTB8R1QtSTgzMjB8R1QtSTgzMzB8R1QtSTgzNTB8R1QtSTg1MzB8R1QtSTg3MDB8R1QtSTg3MDN8R1QtSTg5MTB8R1QtSTkwMDB8R1QtSTkwMDF8R1QtSTkwMDN8R1QtSTkwMTB8R1QtSTkwMjB8R1QtSTkwMjN8R1QtSTkwNzB8R1QtSTkwODJ8R1QtSTkxMDB8R1QtSTkxMDN8R1QtSTkyMjB8R1QtSTkyNTB8R1QtSTkzMDB8R1QtSTkzMDV8R1QtSTk1MDB8R1QtSTk1MDV8R1QtTTM1MTB8R1QtTTU2NTB8R1QtTTc1MDB8R1QtTTc2MDB8R1QtTTc2MDN8R1QtTTg4MDB8R1QtTTg5MTB8R1QtTjcwMDB8R1QtUzMxMTB8R1QtUzMzMTB8R1QtUzMzNTB8R1QtUzMzNTN8R1QtUzMzNzB8R1QtUzM2NTB8R1QtUzM2NTN8R1QtUzM3NzB8R1QtUzM4NTB8R1QtUzUyMTB8R1QtUzUyMjB8R1QtUzUyMjl8R1QtUzUyMzB8R1QtUzUyMzN8R1QtUzUyNTB8R1QtUzUyNTN8R1QtUzUyNjB8R1QtUzUyNjN8R1QtUzUyNzB8R1QtUzUzMDB8R1QtUzUzMzB8R1QtUzUzNTB8R1QtUzUzNjB8R1QtUzUzNjN8R1QtUzUzNjl8R1QtUzUzODB8R1QtUzUzODBEfEdULVM1NTYwfEdULVM1NTcwfEdULVM1NjAwfEdULVM1NjAzfEdULVM1NjEwfEdULVM1NjIwfEdULVM1NjYwfEdULVM1NjcwfEdULVM1NjkwfEdULVM1NzUwfEdULVM1NzgwfEdULVM1ODMwfEdULVM1ODM5fEdULVM2MTAyfEdULVM2NTAwfEdULVM3MDcwfEdULVM3MjAwfEdULVM3MjIwfEdULVM3MjMwfEdULVM3MjMzfEdULVM3MjUwfEdULVM3NTAwfEdULVM3NTMwfEdULVM3NTUwfEdULVM3NTYyfEdULVM3NzEwfEdULVM4MDAwfEdULVM4MDAzfEdULVM4NTAwfEdULVM4NTMwfEdULVM4NjAwfFNDSC1BMzEwfFNDSC1BNTMwfFNDSC1BNTcwfFNDSC1BNjEwfFNDSC1BNjMwfFNDSC1BNjUwfFNDSC1BNzkwfFNDSC1BNzk1fFNDSC1BODUwfFNDSC1BODcwfFNDSC1BODkwfFNDSC1BOTMwfFNDSC1BOTUwfFNDSC1BOTcwfFNDSC1BOTkwfFNDSC1JMTAwfFNDSC1JMTEwfFNDSC1JNDAwfFNDSC1JNDA1fFNDSC1JNTAwfFNDSC1JNTEwfFNDSC1JNTE1fFNDSC1JNjAwfFNDSC1JNzMwfFNDSC1JNzYwfFNDSC1JNzcwfFNDSC1JODMwfFNDSC1JOTEwfFNDSC1JOTIwfFNDSC1JOTU5fFNDSC1MQzExfFNDSC1OMTUwfFNDSC1OMzAwfFNDSC1SMTAwfFNDSC1SMzAwfFNDSC1SMzUxfFNDSC1SNDAwfFNDSC1SNDEwfFNDSC1UMzAwfFNDSC1VMzEwfFNDSC1VMzIwfFNDSC1VMzUwfFNDSC1VMzYwfFNDSC1VMzY1fFNDSC1VMzcwfFNDSC1VMzgwfFNDSC1VNDEwfFNDSC1VNDMwfFNDSC1VNDUwfFNDSC1VNDYwfFNDSC1VNDcwfFNDSC1VNDkwfFNDSC1VNTQwfFNDSC1VNTUwfFNDSC1VNjIwfFNDSC1VNjQwfFNDSC1VNjUwfFNDSC1VNjYwfFNDSC1VNzAwfFNDSC1VNzQwfFNDSC1VNzUwfFNDSC1VODEwfFNDSC1VODIwfFNDSC1VOTAwfFNDSC1VOTQwfFNDSC1VOTYwfFNDUy0yNlVDfFNHSC1BMTA3fFNHSC1BMTE3fFNHSC1BMTI3fFNHSC1BMTM3fFNHSC1BMTU3fFNHSC1BMTY3fFNHSC1BMTc3fFNHSC1BMTg3fFNHSC1BMTk3fFNHSC1BMjI3fFNHSC1BMjM3fFNHSC1BMjU3fFNHSC1BNDM3fFNHSC1BNTE3fFNHSC1BNTk3fFNHSC1BNjM3fFNHSC1BNjU3fFNHSC1BNjY3fFNHSC1BNjg3fFNHSC1BNjk3fFNHSC1BNzA3fFNHSC1BNzE3fFNHSC1BNzI3fFNHSC1BNzM3fFNHSC1BNzQ3fFNHSC1BNzY3fFNHSC1BNzc3fFNHSC1BNzk3fFNHSC1BODE3fFNHSC1BODI3fFNHSC1BODM3fFNHSC1BODQ3fFNHSC1BODY3fFNHSC1BODc3fFNHSC1BODg3fFNHSC1BODk3fFNHSC1BOTI3fFNHSC1CMTAwfFNHSC1CMTMwfFNHSC1CMjAwfFNHSC1CMjIwfFNHSC1DMTAwfFNHSC1DMTEwfFNHSC1DMTIwfFNHSC1DMTMwfFNHSC1DMTQwfFNHSC1DMTYwfFNHSC1DMTcwfFNHSC1DMTgwfFNHSC1DMjAwfFNHSC1DMjA3fFNHSC1DMjEwfFNHSC1DMjI1fFNHSC1DMjMwfFNHSC1DNDE3fFNHSC1DNDUwfFNHSC1EMzA3fFNHSC1EMzQ3fFNHSC1EMzU3fFNHSC1ENDA3fFNHSC1ENDE1fFNHSC1ENzgwfFNHSC1EODA3fFNHSC1EOTgwfFNHSC1FMTA1fFNHSC1FMjAwfFNHSC1FMzE1fFNHSC1FMzE2fFNHSC1FMzE3fFNHSC1FMzM1fFNHSC1FNTkwfFNHSC1FNjM1fFNHSC1FNzE1fFNHSC1FODkwfFNHSC1GMzAwfFNHSC1GNDgwfFNHSC1JMjAwfFNHSC1JMzAwfFNHSC1JMzIwfFNHSC1JNTUwfFNHSC1JNTc3fFNHSC1JNjAwfFNHSC1JNjA3fFNHSC1JNjE3fFNHSC1JNjI3fFNHSC1JNjM3fFNHSC1JNjc3fFNHSC1JNzAwfFNHSC1JNzE3fFNHSC1JNzI3fFNHSC1pNzQ3TXxTR0gtSTc3N3xTR0gtSTc4MHxTR0gtSTgyN3xTR0gtSTg0N3xTR0gtSTg1N3xTR0gtSTg5NnxTR0gtSTg5N3xTR0gtSTkwMHxTR0gtSTkwN3xTR0gtSTkxN3xTR0gtSTkyN3xTR0gtSTkzN3xTR0gtSTk5N3xTR0gtSjE1MHxTR0gtSjIwMHxTR0gtTDE3MHxTR0gtTDcwMHxTR0gtTTExMHxTR0gtTTE1MHxTR0gtTTIwMHxTR0gtTjEwNXxTR0gtTjUwMHxTR0gtTjYwMHxTR0gtTjYyMHxTR0gtTjYyNXxTR0gtTjcwMHxTR0gtTjcxMHxTR0gtUDEwN3xTR0gtUDIwN3xTR0gtUDMwMHxTR0gtUDMxMHxTR0gtUDUyMHxTR0gtUDczNXxTR0gtUDc3N3xTR0gtUTEwNXxTR0gtUjIxMHxTR0gtUjIyMHxTR0gtUjIyNXxTR0gtUzEwNXxTR0gtUzMwN3xTR0gtVDEwOXxTR0gtVDExOXxTR0gtVDEzOXxTR0gtVDIwOXxTR0gtVDIxOXxTR0gtVDIyOXxTR0gtVDIzOXxTR0gtVDI0OXxTR0gtVDI1OXxTR0gtVDMwOXxTR0gtVDMxOXxTR0gtVDMyOXxTR0gtVDMzOXxTR0gtVDM0OXxTR0gtVDM1OXxTR0gtVDM2OXxTR0gtVDM3OXxTR0gtVDQwOXxTR0gtVDQyOXxTR0gtVDQzOXxTR0gtVDQ1OXxTR0gtVDQ2OXxTR0gtVDQ3OXxTR0gtVDQ5OXxTR0gtVDUwOXxTR0gtVDUxOXxTR0gtVDUzOXxTR0gtVDU1OXxTR0gtVDU4OXxTR0gtVDYwOXxTR0gtVDYxOXxTR0gtVDYyOXxTR0gtVDYzOXxTR0gtVDY1OXxTR0gtVDY2OXxTR0gtVDY3OXxTR0gtVDcwOXxTR0gtVDcxOXxTR0gtVDcyOXxTR0gtVDczOXxTR0gtVDc0NnxTR0gtVDc0OXxTR0gtVDc1OXxTR0gtVDc2OXxTR0gtVDgwOXxTR0gtVDgxOXxTR0gtVDgzOXxTR0gtVDkxOXxTR0gtVDkyOXxTR0gtVDkzOXxTR0gtVDk1OXxTR0gtVDk4OXxTR0gtVTEwMHxTR0gtVTIwMHxTR0gtVTgwMHxTR0gtVjIwNXxTR0gtVjIwNnxTR0gtWDEwMHxTR0gtWDEwNXxTR0gtWDEyMHxTR0gtWDE0MHxTR0gtWDQyNnxTR0gtWDQyN3xTR0gtWDQ3NXxTR0gtWDQ5NXxTR0gtWDQ5N3xTR0gtWDUwN3xTR0gtWDYwMHxTR0gtWDYxMHxTR0gtWDYyMHxTR0gtWDYzMHxTR0gtWDcwMHxTR0gtWDgyMHxTR0gtWDg5MHxTR0gtWjEzMHxTR0gtWjE1MHxTR0gtWjE3MHxTR0gtWlgxMHxTR0gtWlgyMHxTSFctTTExMHxTUEgtQTEyMHxTUEgtQTQwMHxTUEgtQTQyMHxTUEgtQTQ2MHxTUEgtQTUwMHxTUEgtQTU2MHxTUEgtQTYwMHxTUEgtQTYyMHxTUEgtQTY2MHxTUEgtQTcwMHxTUEgtQTc0MHxTUEgtQTc2MHxTUEgtQTc5MHxTUEgtQTgwMHxTUEgtQTgyMHxTUEgtQTg0MHxTUEgtQTg4MHxTUEgtQTkwMHxTUEgtQTk0MHxTUEgtQTk2MHxTUEgtRDYwMHxTUEgtRDcwMHxTUEgtRDcxMHxTUEgtRDcyMHxTUEgtSTMwMHxTUEgtSTMyNXxTUEgtSTMzMHxTUEgtSTM1MHxTUEgtSTUwMHxTUEgtSTYwMHxTUEgtSTcwMHxTUEgtTDcwMHxTUEgtTTEwMHxTUEgtTTIyMHxTUEgtTTI0MHxTUEgtTTMwMHxTUEgtTTMwNXxTUEgtTTMyMHxTUEgtTTMzMHxTUEgtTTM1MHxTUEgtTTM2MHxTUEgtTTM3MHxTUEgtTTM4MHxTUEgtTTUxMHxTUEgtTTU0MHxTUEgtTTU1MHxTUEgtTTU2MHxTUEgtTTU3MHxTUEgtTTU4MHxTUEgtTTYxMHxTUEgtTTYyMHxTUEgtTTYzMHxTUEgtTTgwMHxTUEgtTTgxMHxTUEgtTTg1MHxTUEgtTTkwMHxTUEgtTTkxMHxTUEgtTTkyMHxTUEgtTTkzMHxTUEgtTjEwMHxTUEgtTjIwMHxTUEgtTjI0MHxTUEgtTjMwMHxTUEgtTjQwMHxTUEgtWjQwMHxTV0MtRTEwMHxTQ0gtaTkwOXxHVC1ONzEwMHxHVC1ONzEwNXxTQ0gtSTUzNXxTTS1OOTAwQXxTR0gtSTMxN3xTR0gtVDk5OUx8R1QtUzUzNjBCfEdULUk4MjYyfEdULVM2ODAyfEdULVM2MzEyfEdULVM2MzEwfEdULVM1MzEyfEdULVM1MzEwfEdULUk5MTA1fEdULUk4NTEwfEdULVM2NzkwTnxTTS1HNzEwNXxTTS1OOTAwNXxHVC1TNTMwMXxHVC1JOTI5NXxHVC1JOTE5NXxTTS1DMTAxfEdULVM3MzkyfEdULVM3NTYwfEdULUI3NjEwfEdULUk1NTEwfEdULVM3NTgyfEdULVM3NTMwRXxHVC1JODc1MHxTTS1HOTAwNlZ8U00tRzkwMDhWfFNNLUc5MDA5RHxTTS1HOTAwQXxTTS1HOTAwRHxTTS1HOTAwRnxTTS1HOTAwSHxTTS1HOTAwSXxTTS1HOTAwSnxTTS1HOTAwS3xTTS1HOTAwTHxTTS1HOTAwTXxTTS1HOTAwUHxTTS1HOTAwUjR8U00tRzkwMFN8U00tRzkwMFR8U00tRzkwMFZ8U00tRzkwMFc4fFNIVi1FMTYwS3xTQ0gtUDcwOXxTQ0gtUDcyOXxTTS1UMjU1OHxHVC1JOTIwNXxTTS1HOTM1MHxTTS1KMTIwRnxTTS1HOTIwRnxTTS1HOTIwVnxTTS1HOTMwRnxTTS1OOTEwQ3xTTS1BMzEwRnxHVC1JOTE5MHxTTS1KNTAwRk58U00tRzkwM0Z8U00tSjMzMEZcIixcbiAgICAgICAgXCJMR1wiOiBcIlxcXFxiTEdcXFxcYjt8TEdbLSBdPyhDODAwfEM5MDB8RTQwMHxFNjEwfEU5MDB8RS05MDB8RjE2MHxGMTgwS3xGMTgwTHxGMTgwU3w3MzB8ODU1fEwxNjB8TFM3NDB8TFM4NDB8TFM5NzB8TFU2MjAwfE1TNjkwfE1TNjk1fE1TNzcwfE1TODQwfE1TODcwfE1TOTEwfFA1MDB8UDcwMHxQNzA1fFZNNjk2fEFTNjgwfEFTNjk1fEFYODQwfEM3Mjl8RTk3MHxHUzUwNXwyNzJ8QzM5NXxFNzM5Qkt8RTk2MHxMNTVDfEw3NUN8TFM2OTZ8TFM4NjB8UDc2OUJLfFAzNTB8UDUwMHxQNTA5fFA4NzB8VU4yNzJ8VVM3MzB8VlM4NDB8VlM5NTB8TE4yNzJ8TE41MTB8TFM2NzB8TFM4NTV8TFc2OTB8TU4yNzB8TU41MTB8UDUwOXxQNzY5fFA5MzB8VU4yMDB8VU4yNzB8VU41MTB8VU42MTB8VVM2NzB8VVM3NDB8VVM3NjB8VVgyNjV8VVg4NDB8Vk4yNzF8Vk41MzB8VlM2NjB8VlM3MDB8VlM3NDB8VlM3NTB8VlM5MTB8VlM5MjB8VlM5MzB8Vlg5MjAwfFZYMTEwMDB8QVg4NDBBfExXNzcwfFA1MDZ8UDkyNXxQOTk5fEU2MTJ8RDk1NXxEODAyfE1TMzIzfE0yNTcpfExNLUc3MTBcIixcbiAgICAgICAgXCJTb255XCI6IFwiU29ueVNUfFNvbnlMVHxTb255RXJpY3Nzb258U29ueUVyaWNzc29uTFQxNWl2fExUMThpfEUxMGl8TFQyOGh8TFQyNnd8U29ueUVyaWNzc29uTVQyN2l8QzUzMDN8QzY5MDJ8QzY5MDN8QzY5MDZ8QzY5NDN8RDI1MzNcIixcbiAgICAgICAgXCJBc3VzXCI6IFwiQXN1cy4qR2FsYXh5fFBhZEZvbmUuKk1vYmlsZVwiLFxuICAgICAgICBcIk5va2lhTHVtaWFcIjogXCJMdW1pYSBbMC05XXszLDR9XCIsXG4gICAgICAgIFwiTWljcm9tYXhcIjogXCJNaWNyb21heC4qXFxcXGIoQTIxMHxBOTJ8QTg4fEE3MnxBMTExfEExMTBRfEExMTV8QTExNnxBMTEwfEE5MFN8QTI2fEE1MXxBMzV8QTU0fEEyNXxBMjd8QTg5fEE2OHxBNjV8QTU3fEE5MClcXFxcYlwiLFxuICAgICAgICBcIlBhbG1cIjogXCJQYWxtU291cmNlfFBhbG1cIixcbiAgICAgICAgXCJWZXJ0dVwiOiBcIlZlcnR1fFZlcnR1LipMdGR8VmVydHUuKkFzY2VudHxWZXJ0dS4qQXl4dGF8VmVydHUuKkNvbnN0ZWxsYXRpb24oRnxRdWVzdCk/fFZlcnR1LipNb25pa2F8VmVydHUuKlNpZ25hdHVyZVwiLFxuICAgICAgICBcIlBhbnRlY2hcIjogXCJQQU5URUNIfElNLUE4NTBTfElNLUE4NDBTfElNLUE4MzBMfElNLUE4MzBLfElNLUE4MzBTfElNLUE4MjBMfElNLUE4MTBLfElNLUE4MTBTfElNLUE4MDBTfElNLVQxMDBLfElNLUE3MjVMfElNLUE3ODBMfElNLUE3NzVDfElNLUE3NzBLfElNLUE3NjBTfElNLUE3NTBLfElNLUE3NDBTfElNLUE3MzBTfElNLUE3MjBMfElNLUE3MTBLfElNLUE2OTBMfElNLUE2OTBTfElNLUE2NTBTfElNLUE2MzBLfElNLUE2MDBTfFZFR0EgUFRMMjF8UFQwMDN8UDgwMTB8QURSOTEwTHxQNjAzMHxQNjAyMHxQOTA3MHxQNDEwMHxQOTA2MHxQNTAwMHxDRE04OTkyfFRYVDgwNDV8QURSODk5NXxJUzExUFR8UDIwMzB8UDYwMTB8UDgwMDB8UFQwMDJ8SVMwNnxDRE04OTk5fFA5MDUwfFBUMDAxfFRYVDgwNDB8UDIwMjB8UDkwMjB8UDIwMDB8UDcwNDB8UDcwMDB8Qzc5MFwiLFxuICAgICAgICBcIkZseVwiOiBcIklRMjMwfElRNDQ0fElRNDUwfElRNDQwfElRNDQyfElRNDQxfElRMjQ1fElRMjU2fElRMjM2fElRMjU1fElRMjM1fElRMjQ1fElRMjc1fElRMjQwfElRMjg1fElRMjgwfElRMjcwfElRMjYwfElRMjUwXCIsXG4gICAgICAgIFwiV2lrb1wiOiBcIktJVEUgNEd8SElHSFdBWXxHRVRBV0FZfFNUQUlSV0FZfERBUktTSURFfERBUktGVUxMfERBUktOSUdIVHxEQVJLTU9PTnxTTElERXxXQVggNEd8UkFJTkJPV3xCTE9PTXxTVU5TRVR8R09BKD8hbm5hKXxMRU5OWXxCQVJSWXxJR0dZfE9aWll8Q0lOSyBGSVZFfENJTksgUEVBWHxDSU5LIFBFQVggMnxDSU5LIFNMSU18Q0lOSyBTTElNIDJ8Q0lOSyArfENJTksgS0lOR3xDSU5LIFBFQVh8Q0lOSyBTTElNfFNVQkxJTVwiLFxuICAgICAgICBcImlNb2JpbGVcIjogXCJpLW1vYmlsZSAoSVF8aS1TVFlMRXxpZGVhfFpBQXxIaXR6KVwiLFxuICAgICAgICBcIlNpbVZhbGxleVwiOiBcIlxcXFxiKFNQLTgwfFhULTkzMHxTWC0zNDB8WFQtOTMwfFNYLTMxMHxTUC0zNjB8U1A2MHxTUFQtODAwfFNQLTEyMHxTUFQtODAwfFNQLTE0MHxTUFgtNXxTUFgtOHxTUC0xMDB8U1BYLTh8U1BYLTEyKVxcXFxiXCIsXG4gICAgICAgIFwiV29sZmdhbmdcIjogXCJBVC1CMjREfEFULUFTNTBIRHxBVC1BUzQwV3xBVC1BUzU1SER8QVQtQVM0NXEyfEFULUIyNkR8QVQtQVM1MFFcIixcbiAgICAgICAgXCJBbGNhdGVsXCI6IFwiQWxjYXRlbFwiLFxuICAgICAgICBcIk5pbnRlbmRvXCI6IFwiTmludGVuZG8gKDNEU3xTd2l0Y2gpXCIsXG4gICAgICAgIFwiQW1vaVwiOiBcIkFtb2lcIixcbiAgICAgICAgXCJJTlFcIjogXCJJTlFcIixcbiAgICAgICAgXCJPbmVQbHVzXCI6IFwiT05FUExVU1wiLFxuICAgICAgICBcIkdlbmVyaWNQaG9uZVwiOiBcIlRhcGF0YWxrfFBEQTt8U0FHRU18XFxcXGJtbXBcXFxcYnxwb2NrZXR8XFxcXGJwc3BcXFxcYnxzeW1iaWFufFNtYXJ0cGhvbmV8c21hcnRmb258dHJlb3x1cC5icm93c2VyfHVwLmxpbmt8dm9kYWZvbmV8XFxcXGJ3YXBcXFxcYnxub2tpYXxTZXJpZXM0MHxTZXJpZXM2MHxTNjB8U29ueUVyaWNzc29ufE45MDB8TUFVSS4qV0FQLipCcm93c2VyXCJcbiAgICB9LFxuICAgIFwidGFibGV0c1wiOiB7XG4gICAgICAgIFwiaVBhZFwiOiBcImlQYWR8aVBhZC4qTW9iaWxlXCIsXG4gICAgICAgIFwiTmV4dXNUYWJsZXRcIjogXCJBbmRyb2lkLipOZXh1c1tcXFxcc10rKDd8OXwxMClcIixcbiAgICAgICAgXCJHb29nbGVUYWJsZXRcIjogXCJBbmRyb2lkLipQaXhlbCBDXCIsXG4gICAgICAgIFwiU2Ftc3VuZ1RhYmxldFwiOiBcIlNBTVNVTkcuKlRhYmxldHxHYWxheHkuKlRhYnxTQy0wMUN8R1QtUDEwMDB8R1QtUDEwMDN8R1QtUDEwMTB8R1QtUDMxMDV8R1QtUDYyMTB8R1QtUDY4MDB8R1QtUDY4MTB8R1QtUDcxMDB8R1QtUDczMDB8R1QtUDczMTB8R1QtUDc1MDB8R1QtUDc1MTB8U0NILUk4MDB8U0NILUk4MTV8U0NILUk5MDV8U0dILUk5NTd8U0dILUk5ODd8U0dILVQ4NDl8U0dILVQ4NTl8U0dILVQ4Njl8U1BILVAxMDB8R1QtUDMxMDB8R1QtUDMxMDh8R1QtUDMxMTB8R1QtUDUxMDB8R1QtUDUxMTB8R1QtUDYyMDB8R1QtUDczMjB8R1QtUDc1MTF8R1QtTjgwMDB8R1QtUDg1MTB8U0dILUk0OTd8U1BILVA1MDB8U0dILVQ3Nzl8U0NILUk3MDV8U0NILUk5MTV8R1QtTjgwMTN8R1QtUDMxMTN8R1QtUDUxMTN8R1QtUDgxMTB8R1QtTjgwMTB8R1QtTjgwMDV8R1QtTjgwMjB8R1QtUDEwMTN8R1QtUDYyMDF8R1QtUDc1MDF8R1QtTjUxMDB8R1QtTjUxMDV8R1QtTjUxMTB8U0hWLUUxNDBLfFNIVi1FMTQwTHxTSFYtRTE0MFN8U0hWLUUxNTBTfFNIVi1FMjMwS3xTSFYtRTIzMEx8U0hWLUUyMzBTfFNIVy1NMTgwS3xTSFctTTE4MEx8U0hXLU0xODBTfFNIVy1NMTgwV3xTSFctTTMwMFd8U0hXLU0zMDVXfFNIVy1NMzgwS3xTSFctTTM4MFN8U0hXLU0zODBXfFNIVy1NNDMwV3xTSFctTTQ4MEt8U0hXLU00ODBTfFNIVy1NNDgwV3xTSFctTTQ4NVd8U0hXLU00ODZXfFNIVy1NNTAwV3xHVC1JOTIyOHxTQ0gtUDczOXxTQ0gtSTkyNXxHVC1JOTIwMHxHVC1QNTIwMHxHVC1QNTIxMHxHVC1QNTIxMFh8U00tVDMxMXxTTS1UMzEwfFNNLVQzMTBYfFNNLVQyMTB8U00tVDIxMFJ8U00tVDIxMXxTTS1QNjAwfFNNLVA2MDF8U00tUDYwNXxTTS1QOTAwfFNNLVA5MDF8U00tVDIxN3xTTS1UMjE3QXxTTS1UMjE3U3xTTS1QNjAwMHxTTS1UMzEwMHxTR0gtSTQ2N3xYRTUwMHxTTS1UMTEwfEdULVA1MjIwfEdULUk5MjAwWHxHVC1ONTExMFh8R1QtTjUxMjB8U00tUDkwNXxTTS1UMTExfFNNLVQyMTA1fFNNLVQzMTV8U00tVDMyMHxTTS1UMzIwWHxTTS1UMzIxfFNNLVQ1MjB8U00tVDUyNXxTTS1UNTMwTlV8U00tVDIzME5VfFNNLVQzMzBOVXxTTS1UOTAwfFhFNTAwVDFDfFNNLVA2MDVWfFNNLVA5MDVWfFNNLVQzMzdWfFNNLVQ1MzdWfFNNLVQ3MDdWfFNNLVQ4MDdWfFNNLVA2MDBYfFNNLVA5MDBYfFNNLVQyMTBYfFNNLVQyMzB8U00tVDIzMFh8U00tVDMyNXxHVC1QNzUwM3xTTS1UNTMxfFNNLVQzMzB8U00tVDUzMHxTTS1UNzA1fFNNLVQ3MDVDfFNNLVQ1MzV8U00tVDMzMXxTTS1UODAwfFNNLVQ3MDB8U00tVDUzN3xTTS1UODA3fFNNLVA5MDdBfFNNLVQzMzdBfFNNLVQ1MzdBfFNNLVQ3MDdBfFNNLVQ4MDdBfFNNLVQyMzd8U00tVDgwN1B8U00tUDYwN1R8U00tVDIxN1R8U00tVDMzN1R8U00tVDgwN1R8U00tVDExNk5RfFNNLVQxMTZCVXxTTS1QNTUwfFNNLVQzNTB8U00tVDU1MHxTTS1UOTAwMHxTTS1QOTAwMHxTTS1UNzA1WXxTTS1UODA1fEdULVAzMTEzfFNNLVQ3MTB8U00tVDgxMHxTTS1UODE1fFNNLVQzNjB8U00tVDUzM3xTTS1UMTEzfFNNLVQzMzV8U00tVDcxNXxTTS1UNTYwfFNNLVQ2NzB8U00tVDY3N3xTTS1UMzc3fFNNLVQ1Njd8U00tVDM1N1R8U00tVDU1NXxTTS1UNTYxfFNNLVQ3MTN8U00tVDcxOXxTTS1UODEzfFNNLVQ4MTl8U00tVDU4MHxTTS1UMzU1WT98U00tVDI4MHxTTS1UODE3QXxTTS1UODIwfFNNLVc3MDB8U00tUDU4MHxTTS1UNTg3fFNNLVAzNTB8U00tUDU1NU18U00tUDM1NU18U00tVDExM05VfFNNLVQ4MTVZfFNNLVQ1ODV8U00tVDI4NXxTTS1UODI1fFNNLVc3MDh8U00tVDgzNXxTTS1UODMwfFNNLVQ4MzdWfFNNLVQ3MjB8U00tVDUxMHxTTS1UMzg3VlwiLFxuICAgICAgICBcIktpbmRsZVwiOiBcIktpbmRsZXxTaWxrLipBY2NlbGVyYXRlZHxBbmRyb2lkLipcXFxcYihLRk9UfEtGVFR8S0ZKV0l8S0ZKV0F8S0ZPVEV8S0ZTT1dJfEtGVEhXSXxLRlRIV0F8S0ZBUFdJfEtGQVBXQXxXRkpXQUV8S0ZTQVdBfEtGU0FXSXxLRkFTV0l8S0ZBUldJfEtGRk9XSXxLRkdJV0l8S0ZNRVdJKVxcXFxifEFuZHJvaWQuKlNpbGtcXC9bMC05Ll0rIGxpa2UgQ2hyb21lXFwvWzAtOS5dKyAoPyFNb2JpbGUpXCIsXG4gICAgICAgIFwiU3VyZmFjZVRhYmxldFwiOiBcIldpbmRvd3MgTlQgWzAtOS5dKzsgQVJNOy4qKFRhYmxldHxBUk1CSlMpXCIsXG4gICAgICAgIFwiSFBUYWJsZXRcIjogXCJIUCBTbGF0ZSAoN3w4fDEwKXxIUCBFbGl0ZVBhZCA5MDB8aHAtdGFibGV0fEVsaXRlQm9vay4qVG91Y2h8SFAgOHxTbGF0ZSAyMXxIUCBTbGF0ZUJvb2sgMTBcIixcbiAgICAgICAgXCJBc3VzVGFibGV0XCI6IFwiXi4qUGFkRm9uZSgoPyFNb2JpbGUpLikqJHxUcmFuc2Zvcm1lcnxURjEwMXxURjEwMUd8VEYzMDBUfFRGMzAwVEd8VEYzMDBUTHxURjcwMFR8VEY3MDBLTHxURjcwMVR8VEY4MTBDfE1FMTcxfE1FMzAxVHxNRTMwMkN8TUUzNzFNR3xNRTM3MFR8TUUzNzJNR3xNRTE3MlZ8TUUxNzNYfE1FNDAwQ3xTbGlkZXIgU0wxMDF8XFxcXGJLMDBGXFxcXGJ8XFxcXGJLMDBDXFxcXGJ8XFxcXGJLMDBFXFxcXGJ8XFxcXGJLMDBMXFxcXGJ8VFgyMDFMQXxNRTE3NkN8TUUxMDJBfFxcXFxiTTgwVEFcXFxcYnxNRTM3MkNMfE1FNTYwQ0d8TUUzNzJDR3xNRTMwMktMfCBLMDEwIHwgSzAxMSB8IEswMTcgfCBLMDFFIHxNRTU3MkN8TUUxMDNLfE1FMTcwQ3xNRTE3MUN8XFxcXGJNRTcwQ1xcXFxifE1FNTgxQ3xNRTU4MUNMfE1FODUxMEN8TUUxODFDfFAwMVl8UE8xTUF8UDAxWnxcXFxcYlAwMjdcXFxcYnxcXFxcYlAwMjRcXFxcYnxcXFxcYlAwMENcXFxcYlwiLFxuICAgICAgICBcIkJsYWNrQmVycnlUYWJsZXRcIjogXCJQbGF5Qm9va3xSSU0gVGFibGV0XCIsXG4gICAgICAgIFwiSFRDdGFibGV0XCI6IFwiSFRDX0ZseWVyX1A1MTJ8SFRDIEZseWVyfEhUQyBKZXRzdHJlYW18SFRDLVA3MTVhfEhUQyBFVk8gVmlldyA0R3xQRzQxMjAwfFBHMDk0MTBcIixcbiAgICAgICAgXCJNb3Rvcm9sYVRhYmxldFwiOiBcInhvb218c2hvbGVzdHxNWjYxNXxNWjYwNXxNWjUwNXxNWjYwMXxNWjYwMnxNWjYwM3xNWjYwNHxNWjYwNnxNWjYwN3xNWjYwOHxNWjYwOXxNWjYxNXxNWjYxNnxNWjYxN1wiLFxuICAgICAgICBcIk5vb2tUYWJsZXRcIjogXCJBbmRyb2lkLipOb29rfE5vb2tDb2xvcnxub29rIGJyb3dzZXJ8Qk5SVjIwMHxCTlJWMjAwQXxCTlRWMjUwfEJOVFYyNTBBfEJOVFY0MDB8Qk5UVjYwMHxMb2dpY1BEIFpvb20yXCIsXG4gICAgICAgIFwiQWNlclRhYmxldFwiOiBcIkFuZHJvaWQuKjsgXFxcXGIoQTEwMHxBMTAxfEExMTB8QTIwMHxBMjEwfEEyMTF8QTUwMHxBNTAxfEE1MTB8QTUxMXxBNzAwfEE3MDF8VzUwMHxXNTAwUHxXNTAxfFc1MDFQfFc1MTB8VzUxMXxXNzAwfEcxMDB8RzEwMFd8QjEtQTcxfEIxLTcxMHxCMS03MTF8QTEtODEwfEExLTgxMXxBMS04MzApXFxcXGJ8VzMtODEwfFxcXFxiQTMtQTEwXFxcXGJ8XFxcXGJBMy1BMTFcXFxcYnxcXFxcYkEzLUEyMFxcXFxifFxcXFxiQTMtQTMwXCIsXG4gICAgICAgIFwiVG9zaGliYVRhYmxldFwiOiBcIkFuZHJvaWQuKihBVDEwMHxBVDEwNXxBVDIwMHxBVDIwNXxBVDI3MHxBVDI3NXxBVDMwMHxBVDMwNXxBVDFTNXxBVDUwMHxBVDU3MHxBVDcwMHxBVDgzMCl8VE9TSElCQS4qRk9MSU9cIixcbiAgICAgICAgXCJMR1RhYmxldFwiOiBcIlxcXFxiTC0wNkN8TEctVjkwOXxMRy1WOTAwfExHLVY3MDB8TEctVjUxMHxMRy1WNTAwfExHLVY0MTB8TEctVjQwMHxMRy1WSzgxMFxcXFxiXCIsXG4gICAgICAgIFwiRnVqaXRzdVRhYmxldFwiOiBcIkFuZHJvaWQuKlxcXFxiKEYtMDFEfEYtMDJGfEYtMDVFfEYtMTBEfE01MzJ8UTU3MilcXFxcYlwiLFxuICAgICAgICBcIlByZXN0aWdpb1RhYmxldFwiOiBcIlBNUDMxNzBCfFBNUDMyNzBCfFBNUDM0NzBCfFBNUDcxNzBCfFBNUDMzNzBCfFBNUDM1NzBDfFBNUDU4NzBDfFBNUDM2NzBCfFBNUDU1NzBDfFBNUDU3NzBEfFBNUDM5NzBCfFBNUDM4NzBDfFBNUDU1ODBDfFBNUDU4ODBEfFBNUDU3ODBEfFBNUDU1ODhDfFBNUDcyODBDfFBNUDcyODBDM0d8UE1QNzI4MHxQTVA3ODgwRHxQTVA1NTk3RHxQTVA1NTk3fFBNUDcxMDBEfFBFUjM0NjR8UEVSMzI3NHxQRVIzNTc0fFBFUjM4ODR8UEVSNTI3NHxQRVI1NDc0fFBNUDUwOTdDUFJPfFBNUDUwOTd8UE1QNzM4MER8UE1QNTI5N0N8UE1QNTI5N0NfUVVBRHxQTVA4MTJFfFBNUDgxMkUzR3xQTVA4MTJGfFBNUDgxMEV8UE1QODgwVER8UE1UMzAxN3xQTVQzMDM3fFBNVDMwNDd8UE1UMzA1N3xQTVQ3MDA4fFBNVDU4ODd8UE1UNTAwMXxQTVQ1MDAyXCIsXG4gICAgICAgIFwiTGVub3ZvVGFibGV0XCI6IFwiTGVub3ZvIFRBQnxJZGVhKFRhYnxQYWQpKCBBMXxBMTB8IEsxfCl8VGhpbmtQYWQoWyBdKyk/VGFibGV0fFlUMy04NTBNfFlUMy1YOTBMfFlUMy1YOTBGfFlUMy1YOTBYfExlbm92by4qKFMyMTA5fFMyMTEwfFM1MDAwfFM2MDAwfEszMDExfEEzMDAwfEEzNTAwfEExMDAwfEEyMTA3fEEyMTA5fEExMTA3fEE1NTAwfEE3NjAwfEI2MDAwfEI4MDAwfEI4MDgwKSgtfCkoRkx8RnxIVnxIfCl8VEItWDEwM0Z8VEItWDMwNFh8VEItWDMwNEZ8VEItWDMwNEx8VEItWDUwNUZ8VEItWDUwNUx8VEItWDUwNVh8VEItWDYwNUZ8VEItWDYwNUx8VEItODcwM0Z8VEItODcwM1h8VEItODcwM058VEItODcwNE58VEItODcwNEZ8VEItODcwNFh8VEItODcwNFZ8VEItNzMwNEZ8VEItNzMwNEl8VEItNzMwNFh8VGFiMkE3LTEwRnxUYWIyQTctMjBGfFRCMi1YMzBMfFlUMy1YNTBMfFlUMy1YNTBGfFlUMy1YNTBNfFlULVg3MDVGfFlULVg3MDNGfFlULVg3MDNMfFlULVg3MDVMfFlULVg3MDVYfFRCMi1YMzBGfFRCMi1YMzBMfFRCMi1YMzBNfEEyMTA3QS1GfEEyMTA3QS1IfFRCMy03MzBGfFRCMy03MzBNfFRCMy03MzBYfFRCLTc1MDRGfFRCLTc1MDRYXCIsXG4gICAgICAgIFwiRGVsbFRhYmxldFwiOiBcIlZlbnVlIDExfFZlbnVlIDh8VmVudWUgN3xEZWxsIFN0cmVhayAxMHxEZWxsIFN0cmVhayA3XCIsXG4gICAgICAgIFwiWWFydmlrVGFibGV0XCI6IFwiQW5kcm9pZC4qXFxcXGIoVEFCMjEwfFRBQjIxMXxUQUIyMjR8VEFCMjUwfFRBQjI2MHxUQUIyNjR8VEFCMzEwfFRBQjM2MHxUQUIzNjR8VEFCNDEwfFRBQjQxMXxUQUI0MjB8VEFCNDI0fFRBQjQ1MHxUQUI0NjB8VEFCNDYxfFRBQjQ2NHxUQUI0NjV8VEFCNDY3fFRBQjQ2OHxUQUIwNy0xMDB8VEFCMDctMTAxfFRBQjA3LTE1MHxUQUIwNy0xNTF8VEFCMDctMTUyfFRBQjA3LTIwMHxUQUIwNy0yMDEtM0d8VEFCMDctMjEwfFRBQjA3LTIxMXxUQUIwNy0yMTJ8VEFCMDctMjE0fFRBQjA3LTIyMHxUQUIwNy00MDB8VEFCMDctNDg1fFRBQjA4LTE1MHxUQUIwOC0yMDB8VEFCMDgtMjAxLTNHfFRBQjA4LTIwMS0zMHxUQUIwOS0xMDB8VEFCMDktMjExfFRBQjA5LTQxMHxUQUIxMC0xNTB8VEFCMTAtMjAxfFRBQjEwLTIxMXxUQUIxMC00MDB8VEFCMTAtNDEwfFRBQjEzLTIwMXxUQUIyNzRFVUt8VEFCMjc1RVVLfFRBQjM3NEVVS3xUQUI0NjJFVUt8VEFCNDc0RVVLfFRBQjktMjAwKVxcXFxiXCIsXG4gICAgICAgIFwiTWVkaW9uVGFibGV0XCI6IFwiQW5kcm9pZC4qXFxcXGJPWU9cXFxcYnxMSUZFLiooUDkyMTJ8UDk1MTR8UDk1MTZ8Uzk1MTIpfExJRkVUQUJcIixcbiAgICAgICAgXCJBcm5vdmFUYWJsZXRcIjogXCI5N0c0fEFOMTBHMnxBTjdiRzN8QU43ZkczfEFOOEczfEFOOGNHM3xBTjdHM3xBTjlHM3xBTjdkRzN8QU43ZEczU1R8QU43ZEczQ2hpbGRQYWR8QU4xMGJHM3xBTjEwYkczRFR8QU45RzJcIixcbiAgICAgICAgXCJJbnRlbnNvVGFibGV0XCI6IFwiSU5NODAwMktQfElOTTEwMTBGUHxJTk04MDVORHxJbnRlbnNvIFRhYnxUQUIxMDA0XCIsXG4gICAgICAgIFwiSVJVVGFibGV0XCI6IFwiTTcwMnByb1wiLFxuICAgICAgICBcIk1lZ2Fmb25UYWJsZXRcIjogXCJNZWdhRm9uIFY5fFxcXFxiWlRFIFY5XFxcXGJ8QW5kcm9pZC4qXFxcXGJNVDdBXFxcXGJcIixcbiAgICAgICAgXCJFYm9kYVRhYmxldFwiOiBcIkUtQm9kYSAoU3VwcmVtZXxJbXByZXNzcGVlZHxJenp5Y29tbXxFc3NlbnRpYWwpXCIsXG4gICAgICAgIFwiQWxsVmlld1RhYmxldFwiOiBcIkFsbHZpZXcuKihWaXZhfEFsbGRyb3xDaXR5fFNwZWVkfEFsbCBUVnxGcmVuenl8UXVhc2FyfFNoaW5lfFRYMXxBWDF8QVgyKVwiLFxuICAgICAgICBcIkFyY2hvc1RhYmxldFwiOiBcIlxcXFxiKDEwMUc5fDgwRzl8QTEwMUlUKVxcXFxifFFpbGl2ZSA5N1J8QXJjaG9zNXxcXFxcYkFSQ0hPUyAoNzB8Nzl8ODB8OTB8OTd8MTAxfEZBTUlMWVBBRHwpKGJ8Y3wpKEcxMHwgQ29iYWx0fCBUSVRBTklVTShIRHwpfCBYZW5vbnwgTmVvbnxYU0t8IDJ8IFhTIDJ8IFBMQVRJTlVNfCBDQVJCT058R0FNRVBBRClcXFxcYlwiLFxuICAgICAgICBcIkFpbm9sVGFibGV0XCI6IFwiTk9WTzd8Tk9WTzh8Tk9WTzEwfE5vdm83QXVyb3JhfE5vdm83QmFzaWN8Tk9WTzdQQUxBRElOfG5vdm85LVNwYXJrXCIsXG4gICAgICAgIFwiTm9raWFMdW1pYVRhYmxldFwiOiBcIkx1bWlhIDI1MjBcIixcbiAgICAgICAgXCJTb255VGFibGV0XCI6IFwiU29ueS4qVGFibGV0fFhwZXJpYSBUYWJsZXR8U29ueSBUYWJsZXQgU3xTTy0wM0V8U0dQVDEyfFNHUFQxM3xTR1BUMTE0fFNHUFQxMjF8U0dQVDEyMnxTR1BUMTIzfFNHUFQxMTF8U0dQVDExMnxTR1BUMTEzfFNHUFQxMzF8U0dQVDEzMnxTR1BUMTMzfFNHUFQyMTF8U0dQVDIxMnxTR1BUMjEzfFNHUDMxMXxTR1AzMTJ8U0dQMzIxfEVCUkQxMTAxfEVCUkQxMTAyfEVCUkQxMjAxfFNHUDM1MXxTR1AzNDF8U0dQNTExfFNHUDUxMnxTR1A1MjF8U0dQNTQxfFNHUDU1MXxTR1A2MjF8U0dQNjQxfFNHUDYxMnxTT1QzMXxTR1A3NzF8U0dQNjExfFNHUDYxMnxTR1A3MTJcIixcbiAgICAgICAgXCJQaGlsaXBzVGFibGV0XCI6IFwiXFxcXGIoUEkyMDEwfFBJMzAwMHxQSTMxMDB8UEkzMTA1fFBJMzExMHxQSTMyMDV8UEkzMjEwfFBJMzkwMHxQSTQwMTB8UEk3MDAwfFBJNzEwMClcXFxcYlwiLFxuICAgICAgICBcIkN1YmVUYWJsZXRcIjogXCJBbmRyb2lkLiooSzhHVHxVOUdUfFUxMEdUfFUxNkdUfFUxN0dUfFUxOEdUfFUxOUdUfFUyMEdUfFUyM0dUfFUzMEdUKXxDVUJFIFU4R1RcIixcbiAgICAgICAgXCJDb2J5VGFibGV0XCI6IFwiTUlEMTA0MnxNSUQxMDQ1fE1JRDExMjV8TUlEMTEyNnxNSUQ3MDEyfE1JRDcwMTR8TUlENzAxNXxNSUQ3MDM0fE1JRDcwMzV8TUlENzAzNnxNSUQ3MDQyfE1JRDcwNDh8TUlENzEyN3xNSUQ4MDQyfE1JRDgwNDh8TUlEODEyN3xNSUQ5MDQyfE1JRDk3NDB8TUlEOTc0MnxNSUQ3MDIyfE1JRDcwMTBcIixcbiAgICAgICAgXCJNSURUYWJsZXRcIjogXCJNOTcwMXxNOTAwMHxNOTEwMHxNODA2fE0xMDUyfE04MDZ8VDcwM3xNSUQ3MDF8TUlENzEzfE1JRDcxMHxNSUQ3Mjd8TUlENzYwfE1JRDgzMHxNSUQ3Mjh8TUlEOTMzfE1JRDEyNXxNSUQ4MTB8TUlENzMyfE1JRDEyMHxNSUQ5MzB8TUlEODAwfE1JRDczMXxNSUQ5MDB8TUlEMTAwfE1JRDgyMHxNSUQ3MzV8TUlEOTgwfE1JRDEzMHxNSUQ4MzN8TUlENzM3fE1JRDk2MHxNSUQxMzV8TUlEODYwfE1JRDczNnxNSUQxNDB8TUlEOTMwfE1JRDgzNXxNSUQ3MzN8TUlENFgxMFwiLFxuICAgICAgICBcIk1TSVRhYmxldFwiOiBcIk1TSSBcXFxcYihQcmltbyA3M0t8UHJpbW8gNzNMfFByaW1vIDgxTHxQcmltbyA3N3xQcmltbyA5M3xQcmltbyA3NXxQcmltbyA3NnxQcmltbyA3M3xQcmltbyA4MXxQcmltbyA5MXxQcmltbyA5MHxFbmpveSA3MXxFbmpveSA3fEVuam95IDEwKVxcXFxiXCIsXG4gICAgICAgIFwiU01pVFRhYmxldFwiOiBcIkFuZHJvaWQuKihcXFxcYk1JRFxcXFxifE1JRC01NjB8TVRWLVQxMjAwfE1UVi1QTkQ1MzF8TVRWLVAxMTAxfE1UVi1QTkQ1MzApXCIsXG4gICAgICAgIFwiUm9ja0NoaXBUYWJsZXRcIjogXCJBbmRyb2lkLiooUksyODE4fFJLMjgwOEF8UksyOTE4fFJLMzA2Nil8UksyNzM4fFJLMjgwOEFcIixcbiAgICAgICAgXCJGbHlUYWJsZXRcIjogXCJJUTMxMHxGbHkgVmlzaW9uXCIsXG4gICAgICAgIFwiYnFUYWJsZXRcIjogXCJBbmRyb2lkLiooYnEpPy4qXFxcXGIoRWxjYW5vfEN1cmllfEVkaXNvbnxNYXh3ZWxsfEtlcGxlcnxQYXNjYWx8VGVzbGF8SHlwYXRpYXxQbGF0b258TmV3dG9ufExpdmluZ3N0b25lfENlcnZhbnRlc3xBdmFudHxBcXVhcmlzIChbRXxNXTEwfE04KSlcXFxcYnxNYXh3ZWxsLipMaXRlfE1heHdlbGwuKlBsdXNcIixcbiAgICAgICAgXCJIdWF3ZWlUYWJsZXRcIjogXCJNZWRpYVBhZHxNZWRpYVBhZCA3IFlvdXRofElERU9TIFM3fFM3LTIwMWN8UzctMjAydXxTNy0xMDF8UzctMTAzfFM3LTEwNHxTNy0xMDV8UzctMTA2fFM3LTIwMXxTNy1TbGltfE0yLUEwMUx8QkFILUwwOXxCQUgtVzA5fEFHUy1MMDl8Q01SLUFMMTlcIixcbiAgICAgICAgXCJOZWNUYWJsZXRcIjogXCJcXFxcYk4tMDZEfFxcXFxiTi0wOERcIixcbiAgICAgICAgXCJQYW50ZWNoVGFibGV0XCI6IFwiUGFudGVjaC4qUDQxMDBcIixcbiAgICAgICAgXCJCcm9uY2hvVGFibGV0XCI6IFwiQnJvbmNoby4qKE43MDF8TjcwOHxOODAyfGE3MTApXCIsXG4gICAgICAgIFwiVmVyc3VzVGFibGV0XCI6IFwiVE9VQ0hQQUQuKls3ODkxMF18XFxcXGJUT1VDSFRBQlxcXFxiXCIsXG4gICAgICAgIFwiWnluY1RhYmxldFwiOiBcInoxMDAwfFo5OSAyR3x6OTMwfHo5OTB8ejkwOXxaOTE5fHo5MDBcIixcbiAgICAgICAgXCJQb3NpdGl2b1RhYmxldFwiOiBcIlRCMDdTVEF8VEIxMFNUQXxUQjA3RlRBfFRCMTBGVEFcIixcbiAgICAgICAgXCJOYWJpVGFibGV0XCI6IFwiQW5kcm9pZC4qXFxcXGJOYWJpXCIsXG4gICAgICAgIFwiS29ib1RhYmxldFwiOiBcIktvYm8gVG91Y2h8XFxcXGJLMDgwXFxcXGJ8XFxcXGJWb3hcXFxcYiBCdWlsZHxcXFxcYkFyY1xcXFxiIEJ1aWxkXCIsXG4gICAgICAgIFwiRGFuZXdUYWJsZXRcIjogXCJEU2xpZGUuKlxcXFxiKDcwMHw3MDFSfDcwMnw3MDNSfDcwNHw4MDJ8OTcwfDk3MXw5NzJ8OTczfDk3NHwxMDEwfDEwMTIpXFxcXGJcIixcbiAgICAgICAgXCJUZXhldFRhYmxldFwiOiBcIk5hdmlQYWR8VEItNzcyQXxUTS03MDQ1fFRNLTcwNTV8VE0tOTc1MHxUTS03MDE2fFRNLTcwMjR8VE0tNzAyNnxUTS03MDQxfFRNLTcwNDN8VE0tNzA0N3xUTS04MDQxfFRNLTk3NDF8VE0tOTc0N3xUTS05NzQ4fFRNLTk3NTF8VE0tNzAyMnxUTS03MDIxfFRNLTcwMjB8VE0tNzAxMXxUTS03MDEwfFRNLTcwMjN8VE0tNzAyNXxUTS03MDM3V3xUTS03MDM4V3xUTS03MDI3V3xUTS05NzIwfFRNLTk3MjV8VE0tOTczN1d8VE0tMTAyMHxUTS05NzM4V3xUTS05NzQwfFRNLTk3NDNXfFRCLTgwN0F8VEItNzcxQXxUQi03MjdBfFRCLTcyNUF8VEItNzE5QXxUQi04MjNBfFRCLTgwNUF8VEItNzIzQXxUQi03MTVBfFRCLTcwN0F8VEItNzA1QXxUQi03MDlBfFRCLTcxMUF8VEItODkwSER8VEItODgwSER8VEItNzkwSER8VEItNzgwSER8VEItNzcwSER8VEItNzIxSER8VEItNzEwSER8VEItNDM0SER8VEItODYwSER8VEItODQwSER8VEItNzYwSER8VEItNzUwSER8VEItNzQwSER8VEItNzMwSER8VEItNzIySER8VEItNzIwSER8VEItNzAwSER8VEItNTAwSER8VEItNDcwSER8VEItNDMxSER8VEItNDMwSER8VEItNTA2fFRCLTUwNHxUQi00NDZ8VEItNDM2fFRCLTQxNnxUQi0xNDZTRXxUQi0xMjZTRVwiLFxuICAgICAgICBcIlBsYXlzdGF0aW9uVGFibGV0XCI6IFwiUGxheXN0YXRpb24uKihQb3J0YWJsZXxWaXRhKVwiLFxuICAgICAgICBcIlRyZWtzdG9yVGFibGV0XCI6IFwiU1QxMDQxNi0xfFZUMTA0MTYtMXxTVDcwNDA4LTF8U1Q3MDJ4eC0xfFNUNzAyeHgtMnxTVDgwMjA4fFNUOTcyMTZ8U1Q3MDEwNC0yfFZUMTA0MTYtMnxTVDEwMjE2LTJBfFN1cmZUYWJcIixcbiAgICAgICAgXCJQeWxlQXVkaW9UYWJsZXRcIjogXCJcXFxcYihQVEJMMTBDRVV8UFRCTDEwQ3xQVEJMNzJCQ3xQVEJMNzJCQ0VVfFBUQkw3Q0VVfFBUQkw3Q3xQVEJMOTJCQ3xQVEJMOTJCQ0VVfFBUQkw5Q0VVfFBUQkw5Q1VLfFBUQkw5QylcXFxcYlwiLFxuICAgICAgICBcIkFkdmFuVGFibGV0XCI6IFwiQW5kcm9pZC4qIFxcXFxiKEUzQXxUM1h8VDVDfFQ1QnxUM0V8VDNDfFQzQnxUMUp8VDFGfFQyQXxUMUh8VDFpfEUxQ3xUMS1FfFQ1LUF8VDR8RTEtQnxUMkNpfFQxLUJ8VDEtRHxPMS1BfEUxLUF8VDEtQXxUM0F8VDRpKVxcXFxiIFwiLFxuICAgICAgICBcIkRhbnlUZWNoVGFibGV0XCI6IFwiR2VuaXVzIFRhYiBHM3xHZW5pdXMgVGFiIFMyfEdlbml1cyBUYWIgUTN8R2VuaXVzIFRhYiBHNHxHZW5pdXMgVGFiIFE0fEdlbml1cyBUYWIgRy1JSXxHZW5pdXMgVEFCIEdJSXxHZW5pdXMgVEFCIEdJSUl8R2VuaXVzIFRhYiBTMVwiLFxuICAgICAgICBcIkdhbGFwYWRUYWJsZXRcIjogXCJBbmRyb2lkLipcXFxcYkcxXFxcXGIoPyFcXFxcKSlcIixcbiAgICAgICAgXCJNaWNyb21heFRhYmxldFwiOiBcIkZ1bmJvb2t8TWljcm9tYXguKlxcXFxiKFAyNTB8UDU2MHxQMzYwfFAzNjJ8UDYwMHxQMzAwfFAzNTB8UDUwMHxQMjc1KVxcXFxiXCIsXG4gICAgICAgIFwiS2FyYm9ublRhYmxldFwiOiBcIkFuZHJvaWQuKlxcXFxiKEEzOXxBMzd8QTM0fFNUOHxTVDEwfFNUN3xTbWFydCBUYWIzfFNtYXJ0IFRhYjIpXFxcXGJcIixcbiAgICAgICAgXCJBbGxGaW5lVGFibGV0XCI6IFwiRmluZTcgR2VuaXVzfEZpbmU3IFNoaW5lfEZpbmU3IEFpcnxGaW5lOCBTdHlsZXxGaW5lOSBNb3JlfEZpbmUxMCBKb3l8RmluZTExIFdpZGVcIixcbiAgICAgICAgXCJQUk9TQ0FOVGFibGV0XCI6IFwiXFxcXGIoUEVNNjN8UExUMTAyM0d8UExUMTA0MXxQTFQxMDQ0fFBMVDEwNDRHfFBMVDEwOTF8UExUNDMxMXxQTFQ0MzExUEx8UExUNDMxNXxQTFQ3MDMwfFBMVDcwMzN8UExUNzAzM0R8UExUNzAzNXxQTFQ3MDM1RHxQTFQ3MDQ0S3xQTFQ3MDQ1S3xQTFQ3MDQ1S0J8UExUNzA3MUtHfFBMVDcwNzJ8UExUNzIyM0d8UExUNzIyNUd8UExUNzc3N0d8UExUNzgxMEt8UExUNzg0OUd8UExUNzg1MUd8UExUNzg1Mkd8UExUODAxNXxQTFQ4MDMxfFBMVDgwMzR8UExUODAzNnxQTFQ4MDgwS3xQTFQ4MDgyfFBMVDgwODh8UExUODIyM0d8UExUODIzNEd8UExUODIzNUd8UExUODgxNkt8UExUOTAxMXxQTFQ5MDQ1S3xQTFQ5MjMzR3xQTFQ5NzM1fFBMVDk3NjBHfFBMVDk3NzBHKVxcXFxiXCIsXG4gICAgICAgIFwiWU9ORVNUYWJsZXRcIjogXCJCUTEwNzh8QkMxMDAzfEJDMTA3N3xSSzk3MDJ8QkM5NzMwfEJDOTAwMXxJVDkwMDF8QkM3MDA4fEJDNzAxMHxCQzcwOHxCQzcyOHxCQzcwMTJ8QkM3MDMwfEJDNzAyN3xCQzcwMjZcIixcbiAgICAgICAgXCJDaGFuZ0ppYVRhYmxldFwiOiBcIlRQQzcxMDJ8VFBDNzEwM3xUUEM3MTA1fFRQQzcxMDZ8VFBDNzEwN3xUUEM3MjAxfFRQQzcyMDN8VFBDNzIwNXxUUEM3MjEwfFRQQzc3MDh8VFBDNzcwOXxUUEM3NzEyfFRQQzcxMTB8VFBDODEwMXxUUEM4MTAzfFRQQzgxMDV8VFBDODEwNnxUUEM4MjAzfFRQQzgyMDV8VFBDODUwM3xUUEM5MTA2fFRQQzk3MDF8VFBDOTcxMDF8VFBDOTcxMDN8VFBDOTcxMDV8VFBDOTcxMDZ8VFBDOTcxMTF8VFBDOTcxMTN8VFBDOTcyMDN8VFBDOTc2MDN8VFBDOTc4MDl8VFBDOTcyMDV8VFBDMTAxMDF8VFBDMTAxMDN8VFBDMTAxMDZ8VFBDMTAxMTF8VFBDMTAyMDN8VFBDMTAyMDV8VFBDMTA1MDNcIixcbiAgICAgICAgXCJHVVRhYmxldFwiOiBcIlRYLUExMzAxfFRYLU05MDAyfFE3MDJ8a2YwMjZcIixcbiAgICAgICAgXCJQb2ludE9mVmlld1RhYmxldFwiOiBcIlRBQi1QNTA2fFRBQi1uYXZpLTctM0ctTXxUQUItUDUxN3xUQUItUC01Mjd8VEFCLVA3MDF8VEFCLVA3MDN8VEFCLVA3MjF8VEFCLVA3MzFOfFRBQi1QNzQxfFRBQi1QODI1fFRBQi1QOTA1fFRBQi1QOTI1fFRBQi1QUjk0NXxUQUItUEwxMDE1fFRBQi1QMTAyNXxUQUItUEkxMDQ1fFRBQi1QMTMyNXxUQUItUFJPVEFCWzAtOV0rfFRBQi1QUk9UQUIyNXxUQUItUFJPVEFCMjZ8VEFCLVBST1RBQjI3fFRBQi1QUk9UQUIyNlhMfFRBQi1QUk9UQUIyLUlQUzl8VEFCLVBST1RBQjMwLUlQUzl8VEFCLVBST1RBQjI1WFhMfFRBQi1QUk9UQUIyNi1JUFMxMHxUQUItUFJPVEFCMzAtSVBTMTBcIixcbiAgICAgICAgXCJPdmVybWF4VGFibGV0XCI6IFwiT1YtKFN0ZWVsQ29yZXxOZXdCYXNlfEJhc2Vjb3JlfEJhc2VvbmV8RXhlbGxlbnxRdWF0dG9yfEVkdVRhYnxTb2x1dGlvbnxBQ1RJT058QmFzaWNUYWJ8VGVkZHlUYWJ8TWFnaWNUYWJ8U3RyZWFtfFRCLTA4fFRCLTA5KXxRdWFsY29yZSAxMDI3XCIsXG4gICAgICAgIFwiSENMVGFibGV0XCI6IFwiSENMLipUYWJsZXR8Q29ubmVjdC0zRy0yLjB8Q29ubmVjdC0yRy0yLjB8TUUgVGFibGV0IFUxfE1FIFRhYmxldCBVMnxNRSBUYWJsZXQgRzF8TUUgVGFibGV0IFgxfE1FIFRhYmxldCBZMnxNRSBUYWJsZXQgU3luY1wiLFxuICAgICAgICBcIkRQU1RhYmxldFwiOiBcIkRQUyBEcmVhbSA5fERQUyBEdWFsIDdcIixcbiAgICAgICAgXCJWaXN0dXJlVGFibGV0XCI6IFwiVjk3IEhEfGk3NSAzR3xWaXN0dXJlIFY0KCBIRCk/fFZpc3R1cmUgVjUoIEhEKT98VmlzdHVyZSBWMTBcIixcbiAgICAgICAgXCJDcmVzdGFUYWJsZXRcIjogXCJDVFAoLSk/ODEwfENUUCgtKT84MTh8Q1RQKC0pPzgyOHxDVFAoLSk/ODM4fENUUCgtKT84ODh8Q1RQKC0pPzk3OHxDVFAoLSk/OTgwfENUUCgtKT85ODd8Q1RQKC0pPzk4OHxDVFAoLSk/OTg5XCIsXG4gICAgICAgIFwiTWVkaWF0ZWtUYWJsZXRcIjogXCJcXFxcYk1UODEyNXxNVDgzODl8TVQ4MTM1fE1UODM3N1xcXFxiXCIsXG4gICAgICAgIFwiQ29uY29yZGVUYWJsZXRcIjogXCJDb25jb3JkZShbIF0rKT9UYWJ8Q29uQ29yZGUgUmVhZE1hblwiLFxuICAgICAgICBcIkdvQ2xldmVyVGFibGV0XCI6IFwiR09DTEVWRVIgVEFCfEE3R09DTEVWRVJ8TTEwNDJ8TTc4NDF8TTc0MnxSMTA0MkJLfFIxMDQxfFRBQiBBOTc1fFRBQiBBNzg0MnxUQUIgQTc0MXxUQUIgQTc0MUx8VEFCIE03MjNHfFRBQiBNNzIxfFRBQiBBMTAyMXxUQUIgSTkyMXxUQUIgUjcyMXxUQUIgSTcyMHxUQUIgVDc2fFRBQiBSNzB8VEFCIFI3Ni4yfFRBQiBSMTA2fFRBQiBSODMuMnxUQUIgTTgxM0d8VEFCIEk3MjF8R0NUQTcyMnxUQUIgSTcwfFRBQiBJNzF8VEFCIFM3M3xUQUIgUjczfFRBQiBSNzR8VEFCIFI5M3xUQUIgUjc1fFRBQiBSNzYuMXxUQUIgQTczfFRBQiBBOTN8VEFCIEE5My4yfFRBQiBUNzJ8VEFCIFI4M3xUQUIgUjk3NHxUQUIgUjk3M3xUQUIgQTEwMXxUQUIgQTEwM3xUQUIgQTEwNHxUQUIgQTEwNC4yfFIxMDVCS3xNNzEzR3xBOTcyQkt8VEFCIEE5NzF8VEFCIFI5NzQuMnxUQUIgUjEwNHxUQUIgUjgzLjN8VEFCIEExMDQyXCIsXG4gICAgICAgIFwiTW9kZWNvbVRhYmxldFwiOiBcIkZyZWVUQUIgOTAwMHxGcmVlVEFCIDcuNHxGcmVlVEFCIDcwMDR8RnJlZVRBQiA3ODAwfEZyZWVUQUIgMjA5NnxGcmVlVEFCIDcuNXxGcmVlVEFCIDEwMTR8RnJlZVRBQiAxMDAxIHxGcmVlVEFCIDgwMDF8RnJlZVRBQiA5NzA2fEZyZWVUQUIgOTcwMnxGcmVlVEFCIDcwMDN8RnJlZVRBQiA3MDAyfEZyZWVUQUIgMTAwMnxGcmVlVEFCIDc4MDF8RnJlZVRBQiAxMzMxfEZyZWVUQUIgMTAwNHxGcmVlVEFCIDgwMDJ8RnJlZVRBQiA4MDE0fEZyZWVUQUIgOTcwNHxGcmVlVEFCIDEwMDNcIixcbiAgICAgICAgXCJWb25pbm9UYWJsZXRcIjogXCJcXFxcYihBcmd1c1sgX10/U3xEaWFtb25kWyBfXT83OUhEfEVtZXJhbGRbIF9dPzc4RXxMdW5hWyBfXT83MEN8T255eFsgX10/U3xPbnl4WyBfXT9afE9yaW5bIF9dP0hEfE9yaW5bIF9dP1N8T3Rpc1sgX10/U3xTcGVlZFN0YXJbIF9dP1N8TWFnbmV0WyBfXT9NOXxQcmltdXNbIF9dPzk0WyBfXT8zR3xQcmltdXNbIF9dPzk0SER8UHJpbXVzWyBfXT9RU3xBbmRyb2lkLipcXFxcYlE4XFxcXGJ8U2lyaXVzWyBfXT9FVk9bIF9dP1FTfFNpcml1c1sgX10/UVN8U3Bpcml0WyBfXT9TKVxcXFxiXCIsXG4gICAgICAgIFwiRUNTVGFibGV0XCI6IFwiVjA3T1QyfFRNMTA1QXxTMTBPVDF8VFIxMENTMVwiLFxuICAgICAgICBcIlN0b3JleFRhYmxldFwiOiBcImVaZWVbXyddPyhUYWJ8R28pWzAtOV0rfFRhYkxDN3xMb29uZXkgVHVuZXMgVGFiXCIsXG4gICAgICAgIFwiVm9kYWZvbmVUYWJsZXRcIjogXCJTbWFydFRhYihbIF0rKT9bMC05XSt8U21hcnRUYWJJSTEwfFNtYXJ0VGFiSUk3fFZGLTE0OTd8VkZEIDE0MDBcIixcbiAgICAgICAgXCJFc3NlbnRpZWxCVGFibGV0XCI6IFwiU21hcnRbICddP1RBQlsgXSs/WzAtOV0rfEZhbWlseVsgJ10/VEFCMlwiLFxuICAgICAgICBcIlJvc3NNb29yVGFibGV0XCI6IFwiUk0tNzkwfFJNLTk5N3xSTUQtODc4R3xSTUQtOTc0UnxSTVQtNzA1QXxSTVQtNzAxfFJNRS02MDF8Uk1ULTUwMXxSTVQtNzExXCIsXG4gICAgICAgIFwiaU1vYmlsZVRhYmxldFwiOiBcImktbW9iaWxlIGktbm90ZVwiLFxuICAgICAgICBcIlRvbGlub1RhYmxldFwiOiBcInRvbGlubyB0YWIgWzAtOS5dK3x0b2xpbm8gc2hpbmVcIixcbiAgICAgICAgXCJBdWRpb1NvbmljVGFibGV0XCI6IFwiXFxcXGJDLTIyUXxUNy1RQ3xULTE3QnxULTE3UFxcXFxiXCIsXG4gICAgICAgIFwiQU1QRVRhYmxldFwiOiBcIkFuZHJvaWQuKiBBNzggXCIsXG4gICAgICAgIFwiU2trVGFibGV0XCI6IFwiQW5kcm9pZC4qIChTS1lQQUR8UEhPRU5JWHxDWUNMT1BTKVwiLFxuICAgICAgICBcIlRlY25vVGFibGV0XCI6IFwiVEVDTk8gUDl8VEVDTk8gRFA4RFwiLFxuICAgICAgICBcIkpYRFRhYmxldFwiOiBcIkFuZHJvaWQuKiBcXFxcYihGMzAwMHxBMzMwMHxKWEQ1MDAwfEpYRDMwMDB8SlhEMjAwMHxKWEQzMDBCfEpYRDMwMHxTNTgwMHxTNzgwMHxTNjAyYnxTNTExMGJ8UzczMDB8UzUzMDB8UzYwMnxTNjAzfFM1MTAwfFM1MTEwfFM2MDF8UzcxMDBhfFAzMDAwRnxQMzAwMHN8UDEwMXxQMjAwc3xQMTAwMG18UDIwMG18UDkxMDB8UDEwMDBzfFM2NjAwYnxTOTA4fFAxMDAwfFAzMDB8UzE4fFM2NjAwfFM5MTAwKVxcXFxiXCIsXG4gICAgICAgIFwiaUpveVRhYmxldFwiOiBcIlRhYmxldCAoU3Bpcml0IDd8RXNzZW50aWF8R2FsYXRlYXxGdXNpb258T25peCA3fExhbmRhfFRpdGFufFNjb29ieXxEZW94fFN0ZWxsYXxUaGVtaXN8QXJnb258VW5pcXVlIDd8U3lnbnVzfEhleGVufEZpbml0eSA3fENyZWFtfENyZWFtIFgyfEphZGV8TmVvbiA3fE5lcm9uIDd8S2FuZHl8U2NhcGV8U2FwaHlyIDd8UmViZWx8QmlveHxSZWJlbHxSZWJlbCA4R0J8TXlzdHxEcmFjbyA3fE15c3R8VGFiNy0wMDR8TXlzdHxUYWRlbyBKb25lc3xUYWJsZXQgQm9pbmd8QXJyb3d8RHJhY28gRHVhbCBDYW18QXVyaXh8TWludHxBbWl0eXxSZXZvbHV0aW9ufEZpbml0eSA5fE5lb24gOXxUOXd8QW1pdHkgNEdCIER1YWwgQ2FtfFN0b25lIDRHQnxTdG9uZSA4R0J8QW5kcm9tZWRhfFNpbGtlbnxYMnxBbmRyb21lZGEgSUl8SGFsbGV5fEZsYW1lfFNhcGh5ciA5LDd8VG91Y2ggOHxQbGFuZXR8VHJpdG9ufFVuaXF1ZSAxMHxIZXhlbiAxMHxNZW1waGlzIDRHQnxNZW1waGlzIDhHQnxPbml4IDEwKVwiLFxuICAgICAgICBcIkZYMlRhYmxldFwiOiBcIkZYMiBQQUQ3fEZYMiBQQUQxMFwiLFxuICAgICAgICBcIlhvcm9UYWJsZXRcIjogXCJLaWRzUEFEIDcwMXxQQURbIF0/NzEyfFBBRFsgXT83MTR8UEFEWyBdPzcxNnxQQURbIF0/NzE3fFBBRFsgXT83MTh8UEFEWyBdPzcyMHxQQURbIF0/NzIxfFBBRFsgXT83MjJ8UEFEWyBdPzc5MHxQQURbIF0/NzkyfFBBRFsgXT85MDB8UEFEWyBdPzk3MTVEfFBBRFsgXT85NzE2RFJ8UEFEWyBdPzk3MThEUnxQQURbIF0/OTcxOVFSfFBBRFsgXT85NzIwUVJ8VGVsZVBBRDEwMzB8VGVsZXBhZDEwMzJ8VGVsZVBBRDczMHxUZWxlUEFENzMxfFRlbGVQQUQ3MzJ8VGVsZVBBRDczNVF8VGVsZVBBRDgzMHxUZWxlUEFEOTczMHxUZWxlUEFENzk1fE1lZ2FQQUQgMTMzMXxNZWdhUEFEIDE4NTF8TWVnYVBBRCAyMTUxXCIsXG4gICAgICAgIFwiVmlld3NvbmljVGFibGV0XCI6IFwiVmlld1BhZCAxMHBpfFZpZXdQYWQgMTBlfFZpZXdQYWQgMTBzfFZpZXdQYWQgRTcyfFZpZXdQYWQ3fFZpZXdQYWQgRTEwMHxWaWV3UGFkIDdlfFZpZXdTb25pYyBWQjczM3xWQjEwMGFcIixcbiAgICAgICAgXCJWZXJpem9uVGFibGV0XCI6IFwiUVRBUVozfFFUQUlSN3xRVEFRVFozfFFUQVNVTjF8UVRBU1VOMnxRVEFYSUExXCIsXG4gICAgICAgIFwiT2R5c1RhYmxldFwiOiBcIkxPT1h8WEVOTzEwfE9EWVNbIC1dKFNwYWNlfEVWT3xYcHJlc3N8Tk9PTil8XFxcXGJYRUxJT1xcXFxifFhlbGlvMTBQcm98WEVMSU83UEhPTkVUQUJ8WEVMSU8xMEVYVFJFTUV8WEVMSU9QVDJ8TkVPX1FVQUQxMFwiLFxuICAgICAgICBcIkNhcHRpdmFUYWJsZXRcIjogXCJDQVBUSVZBIFBBRFwiLFxuICAgICAgICBcIkljb25iaXRUYWJsZXRcIjogXCJOZXRUQUJ8TlQtMzcwMnxOVC0zNzAyU3xOVC0zNzAyU3xOVC0zNjAzUHxOVC0zNjAzUHxOVC0wNzA0U3xOVC0wNzA0U3xOVC0zODA1Q3xOVC0zODA1Q3xOVC0wODA2Q3xOVC0wODA2Q3xOVC0wOTA5VHxOVC0wOTA5VHxOVC0wOTA3U3xOVC0wOTA3U3xOVC0wOTAyU3xOVC0wOTAyU1wiLFxuICAgICAgICBcIlRlY2xhc3RUYWJsZXRcIjogXCJUOTggNEd8XFxcXGJQODBcXFxcYnxcXFxcYlg5MEhEXFxcXGJ8WDk4IEFpcnxYOTggQWlyIDNHfFxcXFxiWDg5XFxcXGJ8UDgwIDNHfFxcXFxiWDgwaFxcXFxifFA5OCBBaXJ8XFxcXGJYODlIRFxcXFxifFA5OCAzR3xcXFxcYlA5MEhEXFxcXGJ8UDg5IDNHfFg5OCAzR3xcXFxcYlA3MGhcXFxcYnxQNzlIRCAzR3xHMThkIDNHfFxcXFxiUDc5SERcXFxcYnxcXFxcYlA4OXNcXFxcYnxcXFxcYkE4OFxcXFxifFxcXFxiUDEwSERcXFxcYnxcXFxcYlAxOUhEXFxcXGJ8RzE4IDNHfFxcXFxiUDc4SERcXFxcYnxcXFxcYkE3OFxcXFxifFxcXFxiUDc1XFxcXGJ8RzE3cyAzR3xHMTdoIDNHfFxcXFxiUDg1dFxcXFxifFxcXFxiUDkwXFxcXGJ8XFxcXGJQMTFcXFxcYnxcXFxcYlA5OHRcXFxcYnxcXFxcYlA5OEhEXFxcXGJ8XFxcXGJHMThkXFxcXGJ8XFxcXGJQODVzXFxcXGJ8XFxcXGJQMTFIRFxcXFxifFxcXFxiUDg4c1xcXFxifFxcXFxiQTgwSERcXFxcYnxcXFxcYkE4MHNlXFxcXGJ8XFxcXGJBMTBoXFxcXGJ8XFxcXGJQODlcXFxcYnxcXFxcYlA3OHNcXFxcYnxcXFxcYkcxOFxcXFxifFxcXFxiUDg1XFxcXGJ8XFxcXGJBNzBoXFxcXGJ8XFxcXGJBNzBcXFxcYnxcXFxcYkcxN1xcXFxifFxcXFxiUDE4XFxcXGJ8XFxcXGJBODBzXFxcXGJ8XFxcXGJBMTFzXFxcXGJ8XFxcXGJQODhIRFxcXFxifFxcXFxiQTgwaFxcXFxifFxcXFxiUDc2c1xcXFxifFxcXFxiUDc2aFxcXFxifFxcXFxiUDk4XFxcXGJ8XFxcXGJBMTBIRFxcXFxifFxcXFxiUDc4XFxcXGJ8XFxcXGJQODhcXFxcYnxcXFxcYkExMVxcXFxifFxcXFxiQTEwdFxcXFxifFxcXFxiUDc2YVxcXFxifFxcXFxiUDc2dFxcXFxifFxcXFxiUDc2ZVxcXFxifFxcXFxiUDg1SERcXFxcYnxcXFxcYlA4NWFcXFxcYnxcXFxcYlA4NlxcXFxifFxcXFxiUDc1SERcXFxcYnxcXFxcYlA3NnZcXFxcYnxcXFxcYkExMlxcXFxifFxcXFxiUDc1YVxcXFxifFxcXFxiQTE1XFxcXGJ8XFxcXGJQNzZUaVxcXFxifFxcXFxiUDgxSERcXFxcYnxcXFxcYkExMFxcXFxifFxcXFxiVDc2MFZFXFxcXGJ8XFxcXGJUNzIwSERcXFxcYnxcXFxcYlA3NlxcXFxifFxcXFxiUDczXFxcXGJ8XFxcXGJQNzFcXFxcYnxcXFxcYlA3MlxcXFxifFxcXFxiVDcyMFNFXFxcXGJ8XFxcXGJDNTIwVGlcXFxcYnxcXFxcYlQ3NjBcXFxcYnxcXFxcYlQ3MjBWRVxcXFxifFQ3MjAtM0dFfFQ3MjAtV2lGaVwiLFxuICAgICAgICBcIk9uZGFUYWJsZXRcIjogXCJcXFxcYihWOTc1aXxWaTMwfFZYNTMwfFY3MDF8Vmk2MHxWNzAxc3xWaTUwfFY4MDFzfFY3MTl8Vng2MTB3fFZYNjEwV3xWODE5aXxWaTEwfFZYNTgwV3xWaTEwfFY3MTFzfFY4MTN8VjgxMXxWODIwd3xWODIwfFZpMjB8VjcxMXxWSTMwV3xWNzEyfFY4OTF3fFY5NzJ8VjgxOXd8VjgyMHd8Vmk2MHxWODIwd3xWNzExfFY4MTNzfFY4MDF8VjgxOXxWOTc1c3xWODAxfFY4MTl8VjgxOXxWODE4fFY4MTF8VjcxMnxWOTc1bXxWMTAxd3xWOTYxd3xWODEyfFY4MTh8Vjk3MXxWOTcxc3xWOTE5fFY5ODl8VjExNnd8VjEwMnd8Vjk3M3xWaTQwKVxcXFxiW1xcXFxzXSt8VjEwIFxcXFxiNEdcXFxcYlwiLFxuICAgICAgICBcIkpheXRlY2hUYWJsZXRcIjogXCJUUEMtUEE3NjJcIixcbiAgICAgICAgXCJCbGF1cHVua3RUYWJsZXRcIjogXCJFbmRlYXZvdXIgODAwTkd8RW5kZWF2b3VyIDEwMTBcIixcbiAgICAgICAgXCJEaWdtYVRhYmxldFwiOiBcIlxcXFxiKGlEeDEwfGlEeDl8aUR4OHxpRHg3fGlEeEQ3fGlEeEQ4fGlEc1E4fGlEc1E3fGlEc1E4fGlEc0QxMHxpRG5EN3wzVFM4MDRIfGlEc1ExMXxpRGo3fGlEczEwKVxcXFxiXCIsXG4gICAgICAgIFwiRXZvbGlvVGFibGV0XCI6IFwiQVJJQV9NaW5pX3dpZml8QXJpYVsgX11NaW5pfEV2b2xpbyBYMTB8RXZvbGlvIFg3fEV2b2xpbyBYOHxcXFxcYkV2b3RhYlxcXFxifFxcXFxiTmV1cmFcXFxcYlwiLFxuICAgICAgICBcIkxhdmFUYWJsZXRcIjogXCJRUEFEIEU3MDR8XFxcXGJJdm9yeVNcXFxcYnxFLVRBQiBJVk9SWXxcXFxcYkUtVEFCXFxcXGJcIixcbiAgICAgICAgXCJBb2NUYWJsZXRcIjogXCJNVzA4MTF8TVcwODEyfE1XMDkyMnxNVEs4MzgyfE1XMTAzMXxNVzA4MzF8TVcwODIxfE1XMDkzMXxNVzA3MTJcIixcbiAgICAgICAgXCJNcG1hblRhYmxldFwiOiBcIk1QMTEgT0NUQXxNUDEwIE9DVEF8TVBRQzExMTR8TVBRQzEwMDR8TVBRQzk5NHxNUFFDOTc0fE1QUUM5NzN8TVBRQzgwNHxNUFFDNzg0fE1QUUM3ODB8XFxcXGJNUEc3XFxcXGJ8TVBEQ0c3NXxNUERDRzcxfE1QREMxMDA2fE1QMTAxREN8TVBEQzkwMDB8TVBEQzkwNXxNUERDNzA2SER8TVBEQzcwNnxNUERDNzA1fE1QREMxMTB8TVBEQzEwMHxNUERDOTl8TVBEQzk3fE1QREM4OHxNUERDOHxNUERDNzd8TVA3MDl8TUlENzAxfE1JRDcxMXxNSUQxNzB8TVBEQzcwM3xNUFFDMTAxMFwiLFxuICAgICAgICBcIkNlbGtvblRhYmxldFwiOiBcIkNUNjk1fENUODg4fENUW1xcXFxzXT85MTB8Q1Q3IFRhYnxDVDkgVGFifENUMyBUYWJ8Q1QyIFRhYnxDVDEgVGFifEM4MjB8QzcyMHxcXFxcYkNULTFcXFxcYlwiLFxuICAgICAgICBcIldvbGRlclRhYmxldFwiOiBcIm1pVGFiIFxcXFxiKERJQU1PTkR8U1BBQ0V8QlJPT0tMWU58TkVPfEZMWXxNQU5IQVRUQU58RlVOS3xFVk9MVVRJT058U0tZfEdPQ0FSfElST058R0VOSVVTfFBPUHxNSU5UfEVQU0lMT058QlJPQURXQVl8SlVNUHxIT1B8TEVHRU5EfE5FVyBBR0V8TElORXxBRFZBTkNFfEZFRUx8Rk9MTE9XfExJS0V8TElOS3xMSVZFfFRISU5LfEZSRUVET018Q0hJQ0FHT3xDTEVWRUxBTkR8QkFMVElNT1JFLUdIfElPV0F8Qk9TVE9OfFNFQVRUTEV8UEhPRU5JWHxEQUxMQVN8SU4gMTAxfE1hc3RlckNoZWYpXFxcXGJcIixcbiAgICAgICAgXCJNZWRpYWNvbVRhYmxldFwiOiBcIk0tTVBJMTBDM0d8TS1TUDEwRUd8TS1TUDEwRUdQfE0tU1AxMEhYQUh8TS1TUDdIWEFIfE0tU1AxMEhYQkh8TS1TUDhIWEFIfE0tU1A4TVhBXCIsXG4gICAgICAgIFwiTWlUYWJsZXRcIjogXCJcXFxcYk1JIFBBRFxcXFxifFxcXFxiSE0gTk9URSAxV1xcXFxiXCIsXG4gICAgICAgIFwiTmliaXJ1VGFibGV0XCI6IFwiTmliaXJ1IE0xfE5pYmlydSBKdXBpdGVyIE9uZVwiLFxuICAgICAgICBcIk5leG9UYWJsZXRcIjogXCJORVhPIE5PVkF8TkVYTyAxMHxORVhPIEFWSU98TkVYTyBGUkVFfE5FWE8gR098TkVYTyBFVk98TkVYTyAzR3xORVhPIFNNQVJUfE5FWE8gS0lERE98TkVYTyBNT0JJXCIsXG4gICAgICAgIFwiTGVhZGVyVGFibGV0XCI6IFwiVEJMVDEwUXxUQkxUMTBJfFRCTC0xMFdES0J8VEJMLTEwV0RLQk8yMDEzfFRCTC1XMjMwVjJ8VEJMLVc0NTB8VEJMLVc1MDB8U1Y1NzJ8VEJMVDdJfFRCQS1BQzctOEd8VEJMVDc5fFRCTC04VzE2fFRCTC0xMFczMnxUQkwtMTBXS0J8VEJMLVcxMDBcIixcbiAgICAgICAgXCJVYmlzbGF0ZVRhYmxldFwiOiBcIlViaVNsYXRlW1xcXFxzXT83Q1wiLFxuICAgICAgICBcIlBvY2tldEJvb2tUYWJsZXRcIjogXCJQb2NrZXRib29rXCIsXG4gICAgICAgIFwiS29jYXNvVGFibGV0XCI6IFwiXFxcXGIoVEItMTIwNylcXFxcYlwiLFxuICAgICAgICBcIkhpc2Vuc2VUYWJsZXRcIjogXCJcXFxcYihGNTI4MXxFMjM3MSlcXFxcYlwiLFxuICAgICAgICBcIkh1ZGxcIjogXCJIdWRsIEhUN1MzfEh1ZGwgMlwiLFxuICAgICAgICBcIlRlbHN0cmFUYWJsZXRcIjogXCJULUh1YjJcIixcbiAgICAgICAgXCJHZW5lcmljVGFibGV0XCI6IFwiQW5kcm9pZC4qXFxcXGI5N0RcXFxcYnxUYWJsZXQoPyEuKlBDKXxCTlRWMjUwQXxNSUQtV0NETUF8TG9naWNQRCBab29tMnxcXFxcYkE3RUJcXFxcYnxDYXROb3ZhOHxBMV8wN3xDVDcwNHxDVDEwMDJ8XFxcXGJNNzIxXFxcXGJ8cmszMHNka3xcXFxcYkVWT1RBQlxcXFxifE03NThBfEVUOTA0fEFMVU1JVU0xMHxTbWFydGZyZW4gVGFifEVuZGVhdm91ciAxMDEwfFRhYmxldC1QQy00fFRhZ2kgVGFifFxcXFxiTTZwcm9cXFxcYnxDVDEwMjBXfGFyYyAxMEhEfFxcXFxiVFA3NTBcXFxcYnxcXFxcYlFUQVFaM1xcXFxifFdWVDEwMXxUTTEwODh8S1QxMDdcIlxuICAgIH0sXG4gICAgXCJvc3NcIjoge1xuICAgICAgICBcIkFuZHJvaWRPU1wiOiBcIkFuZHJvaWRcIixcbiAgICAgICAgXCJCbGFja0JlcnJ5T1NcIjogXCJibGFja2JlcnJ5fFxcXFxiQkIxMFxcXFxifHJpbSB0YWJsZXQgb3NcIixcbiAgICAgICAgXCJQYWxtT1NcIjogXCJQYWxtT1N8YXZhbnRnb3xibGF6ZXJ8ZWxhaW5lfGhpcHRvcHxwYWxtfHBsdWNrZXJ8eGlpbm9cIixcbiAgICAgICAgXCJTeW1iaWFuT1NcIjogXCJTeW1iaWFufFN5bWJPU3xTZXJpZXM2MHxTZXJpZXM0MHxTWUItWzAtOV0rfFxcXFxiUzYwXFxcXGJcIixcbiAgICAgICAgXCJXaW5kb3dzTW9iaWxlT1NcIjogXCJXaW5kb3dzIENFLiooUFBDfFNtYXJ0cGhvbmV8TW9iaWxlfFswLTldezN9eFswLTldezN9KXxXaW5kb3dzIE1vYmlsZXxXaW5kb3dzIFBob25lIFswLTkuXSt8V0NFO1wiLFxuICAgICAgICBcIldpbmRvd3NQaG9uZU9TXCI6IFwiV2luZG93cyBQaG9uZSAxMC4wfFdpbmRvd3MgUGhvbmUgOC4xfFdpbmRvd3MgUGhvbmUgOC4wfFdpbmRvd3MgUGhvbmUgT1N8WEJMV1A3fFp1bmVXUDd8V2luZG93cyBOVCA2LlsyM107IEFSTTtcIixcbiAgICAgICAgXCJpT1NcIjogXCJcXFxcYmlQaG9uZS4qTW9iaWxlfFxcXFxiaVBvZHxcXFxcYmlQYWR8QXBwbGVDb3JlTWVkaWFcIixcbiAgICAgICAgXCJpUGFkT1NcIjogXCJDUFUgT1MgMTNcIixcbiAgICAgICAgXCJNZWVHb09TXCI6IFwiTWVlR29cIixcbiAgICAgICAgXCJNYWVtb09TXCI6IFwiTWFlbW9cIixcbiAgICAgICAgXCJKYXZhT1NcIjogXCJKMk1FXFwvfFxcXFxiTUlEUFxcXFxifFxcXFxiQ0xEQ1xcXFxiXCIsXG4gICAgICAgIFwid2ViT1NcIjogXCJ3ZWJPU3xocHdPU1wiLFxuICAgICAgICBcImJhZGFPU1wiOiBcIlxcXFxiQmFkYVxcXFxiXCIsXG4gICAgICAgIFwiQlJFV09TXCI6IFwiQlJFV1wiXG4gICAgfSxcbiAgICBcInVhc1wiOiB7XG4gICAgICAgIFwiQ2hyb21lXCI6IFwiXFxcXGJDck1vXFxcXGJ8Q3JpT1N8QW5kcm9pZC4qQ2hyb21lXFwvWy4wLTldKiAoTW9iaWxlKT9cIixcbiAgICAgICAgXCJEb2xmaW5cIjogXCJcXFxcYkRvbGZpblxcXFxiXCIsXG4gICAgICAgIFwiT3BlcmFcIjogXCJPcGVyYS4qTWluaXxPcGVyYS4qTW9iaXxBbmRyb2lkLipPcGVyYXxNb2JpbGUuKk9QUlxcL1swLTkuXSskfENvYXN0XFwvWzAtOS5dK1wiLFxuICAgICAgICBcIlNreWZpcmVcIjogXCJTa3lmaXJlXCIsXG4gICAgICAgIFwiRWRnZVwiOiBcIk1vYmlsZSBTYWZhcmlcXC9bLjAtOV0qIEVkZ2VcIixcbiAgICAgICAgXCJJRVwiOiBcIklFTW9iaWxlfE1TSUVNb2JpbGVcIixcbiAgICAgICAgXCJGaXJlZm94XCI6IFwiZmVubmVjfGZpcmVmb3guKm1hZW1vfChNb2JpbGV8VGFibGV0KS4qRmlyZWZveHxGaXJlZm94LipNb2JpbGV8RnhpT1NcIixcbiAgICAgICAgXCJCb2x0XCI6IFwiYm9sdFwiLFxuICAgICAgICBcIlRlYVNoYXJrXCI6IFwidGVhc2hhcmtcIixcbiAgICAgICAgXCJCbGF6ZXJcIjogXCJCbGF6ZXJcIixcbiAgICAgICAgXCJTYWZhcmlcIjogXCJWZXJzaW9uLipNb2JpbGUuKlNhZmFyaXxTYWZhcmkuKk1vYmlsZXxNb2JpbGVTYWZhcmlcIixcbiAgICAgICAgXCJXZUNoYXRcIjogXCJcXFxcYk1pY3JvTWVzc2VuZ2VyXFxcXGJcIixcbiAgICAgICAgXCJVQ0Jyb3dzZXJcIjogXCJVQy4qQnJvd3NlcnxVQ1dFQlwiLFxuICAgICAgICBcImJhaWR1Ym94YXBwXCI6IFwiYmFpZHVib3hhcHBcIixcbiAgICAgICAgXCJiYWlkdWJyb3dzZXJcIjogXCJiYWlkdWJyb3dzZXJcIixcbiAgICAgICAgXCJEaWlnb0Jyb3dzZXJcIjogXCJEaWlnb0Jyb3dzZXJcIixcbiAgICAgICAgXCJNZXJjdXJ5XCI6IFwiXFxcXGJNZXJjdXJ5XFxcXGJcIixcbiAgICAgICAgXCJPYmlnb0Jyb3dzZXJcIjogXCJPYmlnb1wiLFxuICAgICAgICBcIk5ldEZyb250XCI6IFwiTkYtQnJvd3NlclwiLFxuICAgICAgICBcIkdlbmVyaWNCcm93c2VyXCI6IFwiTm9raWFCcm93c2VyfE92aUJyb3dzZXJ8T25lQnJvd3NlcnxUd29ua3lCZWFtQnJvd3NlcnxTRU1DLipCcm93c2VyfEZseUZsb3d8TWluaW1vfE5ldEZyb250fE5vdmFycmEtVmlzaW9ufE1RUUJyb3dzZXJ8TWljcm9NZXNzZW5nZXJcIixcbiAgICAgICAgXCJQYWxlTW9vblwiOiBcIkFuZHJvaWQuKlBhbGVNb29ufE1vYmlsZS4qUGFsZU1vb25cIlxuICAgIH0sXG4gICAgXCJwcm9wc1wiOiB7XG4gICAgICAgIFwiTW9iaWxlXCI6IFwiTW9iaWxlXFwvW1ZFUl1cIixcbiAgICAgICAgXCJCdWlsZFwiOiBcIkJ1aWxkXFwvW1ZFUl1cIixcbiAgICAgICAgXCJWZXJzaW9uXCI6IFwiVmVyc2lvblxcL1tWRVJdXCIsXG4gICAgICAgIFwiVmVuZG9ySURcIjogXCJWZW5kb3JJRFxcL1tWRVJdXCIsXG4gICAgICAgIFwiaVBhZFwiOiBcImlQYWQuKkNQVVthLXogXStbVkVSXVwiLFxuICAgICAgICBcImlQaG9uZVwiOiBcImlQaG9uZS4qQ1BVW2EteiBdK1tWRVJdXCIsXG4gICAgICAgIFwiaVBvZFwiOiBcImlQb2QuKkNQVVthLXogXStbVkVSXVwiLFxuICAgICAgICBcIktpbmRsZVwiOiBcIktpbmRsZVxcL1tWRVJdXCIsXG4gICAgICAgIFwiQ2hyb21lXCI6IFtcbiAgICAgICAgICAgIFwiQ2hyb21lXFwvW1ZFUl1cIixcbiAgICAgICAgICAgIFwiQ3JpT1NcXC9bVkVSXVwiLFxuICAgICAgICAgICAgXCJDck1vXFwvW1ZFUl1cIlxuICAgICAgICBdLFxuICAgICAgICBcIkNvYXN0XCI6IFtcbiAgICAgICAgICAgIFwiQ29hc3RcXC9bVkVSXVwiXG4gICAgICAgIF0sXG4gICAgICAgIFwiRG9sZmluXCI6IFwiRG9sZmluXFwvW1ZFUl1cIixcbiAgICAgICAgXCJGaXJlZm94XCI6IFtcbiAgICAgICAgICAgIFwiRmlyZWZveFxcL1tWRVJdXCIsXG4gICAgICAgICAgICBcIkZ4aU9TXFwvW1ZFUl1cIlxuICAgICAgICBdLFxuICAgICAgICBcIkZlbm5lY1wiOiBcIkZlbm5lY1xcL1tWRVJdXCIsXG4gICAgICAgIFwiRWRnZVwiOiBcIkVkZ2VcXC9bVkVSXVwiLFxuICAgICAgICBcIklFXCI6IFtcbiAgICAgICAgICAgIFwiSUVNb2JpbGVcXC9bVkVSXTtcIixcbiAgICAgICAgICAgIFwiSUVNb2JpbGUgW1ZFUl1cIixcbiAgICAgICAgICAgIFwiTVNJRSBbVkVSXTtcIixcbiAgICAgICAgICAgIFwiVHJpZGVudFxcL1swLTkuXSs7LipydjpbVkVSXVwiXG4gICAgICAgIF0sXG4gICAgICAgIFwiTmV0RnJvbnRcIjogXCJOZXRGcm9udFxcL1tWRVJdXCIsXG4gICAgICAgIFwiTm9raWFCcm93c2VyXCI6IFwiTm9raWFCcm93c2VyXFwvW1ZFUl1cIixcbiAgICAgICAgXCJPcGVyYVwiOiBbXG4gICAgICAgICAgICBcIiBPUFJcXC9bVkVSXVwiLFxuICAgICAgICAgICAgXCJPcGVyYSBNaW5pXFwvW1ZFUl1cIixcbiAgICAgICAgICAgIFwiVmVyc2lvblxcL1tWRVJdXCJcbiAgICAgICAgXSxcbiAgICAgICAgXCJPcGVyYSBNaW5pXCI6IFwiT3BlcmEgTWluaVxcL1tWRVJdXCIsXG4gICAgICAgIFwiT3BlcmEgTW9iaVwiOiBcIlZlcnNpb25cXC9bVkVSXVwiLFxuICAgICAgICBcIlVDQnJvd3NlclwiOiBbXG4gICAgICAgICAgICBcIlVDV0VCW1ZFUl1cIixcbiAgICAgICAgICAgIFwiVUMuKkJyb3dzZXJcXC9bVkVSXVwiXG4gICAgICAgIF0sXG4gICAgICAgIFwiTVFRQnJvd3NlclwiOiBcIk1RUUJyb3dzZXJcXC9bVkVSXVwiLFxuICAgICAgICBcIk1pY3JvTWVzc2VuZ2VyXCI6IFwiTWljcm9NZXNzZW5nZXJcXC9bVkVSXVwiLFxuICAgICAgICBcImJhaWR1Ym94YXBwXCI6IFwiYmFpZHVib3hhcHBcXC9bVkVSXVwiLFxuICAgICAgICBcImJhaWR1YnJvd3NlclwiOiBcImJhaWR1YnJvd3NlclxcL1tWRVJdXCIsXG4gICAgICAgIFwiU2Ftc3VuZ0Jyb3dzZXJcIjogXCJTYW1zdW5nQnJvd3NlclxcL1tWRVJdXCIsXG4gICAgICAgIFwiSXJvblwiOiBcIklyb25cXC9bVkVSXVwiLFxuICAgICAgICBcIlNhZmFyaVwiOiBbXG4gICAgICAgICAgICBcIlZlcnNpb25cXC9bVkVSXVwiLFxuICAgICAgICAgICAgXCJTYWZhcmlcXC9bVkVSXVwiXG4gICAgICAgIF0sXG4gICAgICAgIFwiU2t5ZmlyZVwiOiBcIlNreWZpcmVcXC9bVkVSXVwiLFxuICAgICAgICBcIlRpemVuXCI6IFwiVGl6ZW5cXC9bVkVSXVwiLFxuICAgICAgICBcIldlYmtpdFwiOiBcIndlYmtpdFsgXFwvXVtWRVJdXCIsXG4gICAgICAgIFwiUGFsZU1vb25cIjogXCJQYWxlTW9vblxcL1tWRVJdXCIsXG4gICAgICAgIFwiR2Vja29cIjogXCJHZWNrb1xcL1tWRVJdXCIsXG4gICAgICAgIFwiVHJpZGVudFwiOiBcIlRyaWRlbnRcXC9bVkVSXVwiLFxuICAgICAgICBcIlByZXN0b1wiOiBcIlByZXN0b1xcL1tWRVJdXCIsXG4gICAgICAgIFwiR29hbm5hXCI6IFwiR29hbm5hXFwvW1ZFUl1cIixcbiAgICAgICAgXCJpT1NcIjogXCIgXFxcXGJpP09TXFxcXGIgW1ZFUl1bIDtdezF9XCIsXG4gICAgICAgIFwiQW5kcm9pZFwiOiBcIkFuZHJvaWQgW1ZFUl1cIixcbiAgICAgICAgXCJCbGFja0JlcnJ5XCI6IFtcbiAgICAgICAgICAgIFwiQmxhY2tCZXJyeVtcXFxcd10rXFwvW1ZFUl1cIixcbiAgICAgICAgICAgIFwiQmxhY2tCZXJyeS4qVmVyc2lvblxcL1tWRVJdXCIsXG4gICAgICAgICAgICBcIlZlcnNpb25cXC9bVkVSXVwiXG4gICAgICAgIF0sXG4gICAgICAgIFwiQlJFV1wiOiBcIkJSRVcgW1ZFUl1cIixcbiAgICAgICAgXCJKYXZhXCI6IFwiSmF2YVxcL1tWRVJdXCIsXG4gICAgICAgIFwiV2luZG93cyBQaG9uZSBPU1wiOiBbXG4gICAgICAgICAgICBcIldpbmRvd3MgUGhvbmUgT1MgW1ZFUl1cIixcbiAgICAgICAgICAgIFwiV2luZG93cyBQaG9uZSBbVkVSXVwiXG4gICAgICAgIF0sXG4gICAgICAgIFwiV2luZG93cyBQaG9uZVwiOiBcIldpbmRvd3MgUGhvbmUgW1ZFUl1cIixcbiAgICAgICAgXCJXaW5kb3dzIENFXCI6IFwiV2luZG93cyBDRVxcL1tWRVJdXCIsXG4gICAgICAgIFwiV2luZG93cyBOVFwiOiBcIldpbmRvd3MgTlQgW1ZFUl1cIixcbiAgICAgICAgXCJTeW1iaWFuXCI6IFtcbiAgICAgICAgICAgIFwiU3ltYmlhbk9TXFwvW1ZFUl1cIixcbiAgICAgICAgICAgIFwiU3ltYmlhblxcL1tWRVJdXCJcbiAgICAgICAgXSxcbiAgICAgICAgXCJ3ZWJPU1wiOiBbXG4gICAgICAgICAgICBcIndlYk9TXFwvW1ZFUl1cIixcbiAgICAgICAgICAgIFwiaHB3T1NcXC9bVkVSXTtcIlxuICAgICAgICBdXG4gICAgfSxcbiAgICBcInV0aWxzXCI6IHtcbiAgICAgICAgXCJCb3RcIjogXCJHb29nbGVib3R8ZmFjZWJvb2tleHRlcm5hbGhpdHxHb29nbGUtQU1QSFRNTHxzfmFtcC12YWxpZGF0b3J8QWRzQm90LUdvb2dsZXxHb29nbGUgS2V5d29yZCBTdWdnZXN0aW9ufEZhY2Vib3R8WWFuZGV4Qm90fFlhbmRleE1vYmlsZUJvdHxiaW5nYm90fGlhX2FyY2hpdmVyfEFocmVmc0JvdHxFem9vbXN8R1NMRmJvdHxXQlNlYXJjaEJvdHxUd2l0dGVyYm90fFR3ZWV0bWVtZUJvdHxUd2lrbGV8UGFwZXJMaUJvdHxXb3Rib3h8VW53aW5kRmV0Y2hvcnxFeGFib3R8TUoxMmJvdHxZYW5kZXhJbWFnZXN8VHVybml0aW5Cb3R8UGluZ2RvbXxjb250ZW50a2luZ2FwcFwiLFxuICAgICAgICBcIk1vYmlsZUJvdFwiOiBcIkdvb2dsZWJvdC1Nb2JpbGV8QWRzQm90LUdvb2dsZS1Nb2JpbGV8WWFob29TZWVrZXJcXC9NMUExLVIyRDJcIixcbiAgICAgICAgXCJEZXNrdG9wTW9kZVwiOiBcIldQRGVza3RvcFwiLFxuICAgICAgICBcIlRWXCI6IFwiU29ueURUVnxIYmJUVlwiLFxuICAgICAgICBcIldlYktpdFwiOiBcIih3ZWJraXQpWyBcXC9dKFtcXFxcdy5dKylcIixcbiAgICAgICAgXCJDb25zb2xlXCI6IFwiXFxcXGIoTmludGVuZG98TmludGVuZG8gV2lpVXxOaW50ZW5kbyAzRFN8TmludGVuZG8gU3dpdGNofFBMQVlTVEFUSU9OfFhib3gpXFxcXGJcIixcbiAgICAgICAgXCJXYXRjaFwiOiBcIlNNLVY3MDBcIlxuICAgIH1cbn07XG5cbiAgICAvLyBmb2xsb3dpbmcgcGF0dGVybnMgY29tZSBmcm9tIGh0dHA6Ly9kZXRlY3Rtb2JpbGVicm93c2Vycy5jb20vXG4gICAgaW1wbC5kZXRlY3RNb2JpbGVCcm93c2VycyA9IHtcbiAgICAgICAgZnVsbFBhdHRlcm46IC8oYW5kcm9pZHxiYlxcZCt8bWVlZ28pLittb2JpbGV8YXZhbnRnb3xiYWRhXFwvfGJsYWNrYmVycnl8YmxhemVyfGNvbXBhbHxlbGFpbmV8ZmVubmVjfGhpcHRvcHxpZW1vYmlsZXxpcChob25lfG9kKXxpcmlzfGtpbmRsZXxsZ2UgfG1hZW1vfG1pZHB8bW1wfG1vYmlsZS4rZmlyZWZveHxuZXRmcm9udHxvcGVyYSBtKG9ifGluKWl8cGFsbSggb3MpP3xwaG9uZXxwKGl4aXxyZSlcXC98cGx1Y2tlcnxwb2NrZXR8cHNwfHNlcmllcyg0fDYpMHxzeW1iaWFufHRyZW98dXBcXC4oYnJvd3NlcnxsaW5rKXx2b2RhZm9uZXx3YXB8d2luZG93cyBjZXx4ZGF8eGlpbm8vaSxcbiAgICAgICAgc2hvcnRQYXR0ZXJuOiAvMTIwN3w2MzEwfDY1OTB8M2dzb3w0dGhwfDUwWzEtNl1pfDc3MHN8ODAyc3xhIHdhfGFiYWN8YWMoZXJ8b298c1xcLSl8YWkoa298cm4pfGFsKGF2fGNhfGNvKXxhbW9pfGFuKGV4fG55fHl3KXxhcHR1fGFyKGNofGdvKXxhcyh0ZXx1cyl8YXR0d3xhdShkaXxcXC1tfHIgfHMgKXxhdmFufGJlKGNrfGxsfG5xKXxiaShsYnxyZCl8YmwoYWN8YXopfGJyKGV8dil3fGJ1bWJ8YndcXC0obnx1KXxjNTVcXC98Y2FwaXxjY3dhfGNkbVxcLXxjZWxsfGNodG18Y2xkY3xjbWRcXC18Y28obXB8bmQpfGNyYXd8ZGEoaXR8bGx8bmcpfGRidGV8ZGNcXC1zfGRldml8ZGljYXxkbW9ifGRvKGN8cClvfGRzKDEyfFxcLWQpfGVsKDQ5fGFpKXxlbShsMnx1bCl8ZXIoaWN8azApfGVzbDh8ZXooWzQtN10wfG9zfHdhfHplKXxmZXRjfGZseShcXC18Xyl8ZzEgdXxnNTYwfGdlbmV8Z2ZcXC01fGdcXC1tb3xnbyhcXC53fG9kKXxncihhZHx1bil8aGFpZXxoY2l0fGhkXFwtKG18cHx0KXxoZWlcXC18aGkocHR8dGEpfGhwKCBpfGlwKXxoc1xcLWN8aHQoYyhcXC18IHxffGF8Z3xwfHN8dCl8dHApfGh1KGF3fHRjKXxpXFwtKDIwfGdvfG1hKXxpMjMwfGlhYyggfFxcLXxcXC8pfGlicm98aWRlYXxpZzAxfGlrb218aW0xa3xpbm5vfGlwYXF8aXJpc3xqYSh0fHYpYXxqYnJvfGplbXV8amlnc3xrZGRpfGtlaml8a2d0KCB8XFwvKXxrbG9ufGtwdCB8a3djXFwtfGt5byhjfGspfGxlKG5vfHhpKXxsZyggZ3xcXC8oa3xsfHUpfDUwfDU0fFxcLVthLXddKXxsaWJ3fGx5bnh8bTFcXC13fG0zZ2F8bTUwXFwvfG1hKHRlfHVpfHhvKXxtYygwMXwyMXxjYSl8bVxcLWNyfG1lKHJjfHJpKXxtaShvOHxvYXx0cyl8bW1lZnxtbygwMXwwMnxiaXxkZXxkb3x0KFxcLXwgfG98dil8enopfG10KDUwfHAxfHYgKXxtd2JwfG15d2F8bjEwWzAtMl18bjIwWzItM118bjMwKDB8Mil8bjUwKDB8Mnw1KXxuNygwKDB8MSl8MTApfG5lKChjfG0pXFwtfG9ufHRmfHdmfHdnfHd0KXxub2soNnxpKXxuenBofG8yaW18b3AodGl8d3YpfG9yYW58b3dnMXxwODAwfHBhbihhfGR8dCl8cGR4Z3xwZygxM3xcXC0oWzEtOF18YykpfHBoaWx8cGlyZXxwbChheXx1Yyl8cG5cXC0yfHBvKGNrfHJ0fHNlKXxwcm94fHBzaW98cHRcXC1nfHFhXFwtYXxxYygwN3wxMnwyMXwzMnw2MHxcXC1bMi03XXxpXFwtKXxxdGVrfHIzODB8cjYwMHxyYWtzfHJpbTl8cm8odmV8em8pfHM1NVxcL3xzYShnZXxtYXxtbXxtc3xueXx2YSl8c2MoMDF8aFxcLXxvb3xwXFwtKXxzZGtcXC98c2UoYyhcXC18MHwxKXw0N3xtY3xuZHxyaSl8c2doXFwtfHNoYXJ8c2llKFxcLXxtKXxza1xcLTB8c2woNDV8aWQpfHNtKGFsfGFyfGIzfGl0fHQ1KXxzbyhmdHxueSl8c3AoMDF8aFxcLXx2XFwtfHYgKXxzeSgwMXxtYil8dDIoMTh8NTApfHQ2KDAwfDEwfDE4KXx0YShndHxsayl8dGNsXFwtfHRkZ1xcLXx0ZWwoaXxtKXx0aW1cXC18dFxcLW1vfHRvKHBsfHNoKXx0cyg3MHxtXFwtfG0zfG01KXx0eFxcLTl8dXAoXFwuYnxnMXxzaSl8dXRzdHx2NDAwfHY3NTB8dmVyaXx2aShyZ3x0ZSl8dmsoNDB8NVswLTNdfFxcLXYpfHZtNDB8dm9kYXx2dWxjfHZ4KDUyfDUzfDYwfDYxfDcwfDgwfDgxfDgzfDg1fDk4KXx3M2MoXFwtfCApfHdlYmN8d2hpdHx3aShnIHxuY3xudyl8d21sYnx3b251fHg3MDB8eWFzXFwtfHlvdXJ8emV0b3x6dGVcXC0vaSxcbiAgICAgICAgdGFibGV0UGF0dGVybjogL2FuZHJvaWR8aXBhZHxwbGF5Ym9va3xzaWxrL2lcbiAgICB9O1xuXG4gICAgdmFyIGhhc093blByb3AgPSBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LFxuICAgICAgICBpc0FycmF5O1xuXG4gICAgaW1wbC5GQUxMQkFDS19QSE9ORSA9ICdVbmtub3duUGhvbmUnO1xuICAgIGltcGwuRkFMTEJBQ0tfVEFCTEVUID0gJ1Vua25vd25UYWJsZXQnO1xuICAgIGltcGwuRkFMTEJBQ0tfTU9CSUxFID0gJ1Vua25vd25Nb2JpbGUnO1xuXG4gICAgaXNBcnJheSA9ICgnaXNBcnJheScgaW4gQXJyYXkpID9cbiAgICAgICAgQXJyYXkuaXNBcnJheSA6IGZ1bmN0aW9uICh2YWx1ZSkgeyByZXR1cm4gT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKHZhbHVlKSA9PT0gJ1tvYmplY3QgQXJyYXldJzsgfTtcblxuICAgIGZ1bmN0aW9uIGVxdWFsSUMoYSwgYikge1xuICAgICAgICByZXR1cm4gYSAhPSBudWxsICYmIGIgIT0gbnVsbCAmJiBhLnRvTG93ZXJDYXNlKCkgPT09IGIudG9Mb3dlckNhc2UoKTtcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBjb250YWluc0lDKGFycmF5LCB2YWx1ZSkge1xuICAgICAgICB2YXIgdmFsdWVMQywgaSwgbGVuID0gYXJyYXkubGVuZ3RoO1xuICAgICAgICBpZiAoIWxlbiB8fCAhdmFsdWUpIHtcbiAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgfVxuICAgICAgICB2YWx1ZUxDID0gdmFsdWUudG9Mb3dlckNhc2UoKTtcbiAgICAgICAgZm9yIChpID0gMDsgaSA8IGxlbjsgKytpKSB7XG4gICAgICAgICAgICBpZiAodmFsdWVMQyA9PT0gYXJyYXlbaV0udG9Mb3dlckNhc2UoKSkge1xuICAgICAgICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBjb252ZXJ0UHJvcHNUb1JlZ0V4cChvYmplY3QpIHtcbiAgICAgICAgZm9yICh2YXIga2V5IGluIG9iamVjdCkge1xuICAgICAgICAgICAgaWYgKGhhc093blByb3AuY2FsbChvYmplY3QsIGtleSkpIHtcbiAgICAgICAgICAgICAgICBvYmplY3Rba2V5XSA9IG5ldyBSZWdFeHAob2JqZWN0W2tleV0sICdpJyk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBmdW5jdGlvbiBwcmVwYXJlVXNlckFnZW50KHVzZXJBZ2VudCkge1xuICAgICAgICByZXR1cm4gKHVzZXJBZ2VudCB8fCAnJykuc3Vic3RyKDAsIDUwMCk7IC8vIG1pdGlnYXRlIHZ1bG5lcmFibGUgdG8gUmVEb1NcbiAgICB9XG5cbiAgICAoZnVuY3Rpb24gaW5pdCgpIHtcbiAgICAgICAgdmFyIGtleSwgdmFsdWVzLCB2YWx1ZSwgaSwgbGVuLCB2ZXJQb3MsIG1vYmlsZURldGVjdFJ1bGVzID0gaW1wbC5tb2JpbGVEZXRlY3RSdWxlcztcbiAgICAgICAgZm9yIChrZXkgaW4gbW9iaWxlRGV0ZWN0UnVsZXMucHJvcHMpIHtcbiAgICAgICAgICAgIGlmIChoYXNPd25Qcm9wLmNhbGwobW9iaWxlRGV0ZWN0UnVsZXMucHJvcHMsIGtleSkpIHtcbiAgICAgICAgICAgICAgICB2YWx1ZXMgPSBtb2JpbGVEZXRlY3RSdWxlcy5wcm9wc1trZXldO1xuICAgICAgICAgICAgICAgIGlmICghaXNBcnJheSh2YWx1ZXMpKSB7XG4gICAgICAgICAgICAgICAgICAgIHZhbHVlcyA9IFt2YWx1ZXNdO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBsZW4gPSB2YWx1ZXMubGVuZ3RoO1xuICAgICAgICAgICAgICAgIGZvciAoaSA9IDA7IGkgPCBsZW47ICsraSkge1xuICAgICAgICAgICAgICAgICAgICB2YWx1ZSA9IHZhbHVlc1tpXTtcbiAgICAgICAgICAgICAgICAgICAgdmVyUG9zID0gdmFsdWUuaW5kZXhPZignW1ZFUl0nKTtcbiAgICAgICAgICAgICAgICAgICAgaWYgKHZlclBvcyA+PSAwKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZSA9IHZhbHVlLnN1YnN0cmluZygwLCB2ZXJQb3MpICsgJyhbXFxcXHcuX1xcXFwrXSspJyArIHZhbHVlLnN1YnN0cmluZyh2ZXJQb3MgKyA1KTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB2YWx1ZXNbaV0gPSBuZXcgUmVnRXhwKHZhbHVlLCAnaScpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBtb2JpbGVEZXRlY3RSdWxlcy5wcm9wc1trZXldID0gdmFsdWVzO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGNvbnZlcnRQcm9wc1RvUmVnRXhwKG1vYmlsZURldGVjdFJ1bGVzLm9zcyk7XG4gICAgICAgIGNvbnZlcnRQcm9wc1RvUmVnRXhwKG1vYmlsZURldGVjdFJ1bGVzLnBob25lcyk7XG4gICAgICAgIGNvbnZlcnRQcm9wc1RvUmVnRXhwKG1vYmlsZURldGVjdFJ1bGVzLnRhYmxldHMpO1xuICAgICAgICBjb252ZXJ0UHJvcHNUb1JlZ0V4cChtb2JpbGVEZXRlY3RSdWxlcy51YXMpO1xuICAgICAgICBjb252ZXJ0UHJvcHNUb1JlZ0V4cChtb2JpbGVEZXRlY3RSdWxlcy51dGlscyk7XG5cbiAgICAgICAgLy8gY29weSBzb21lIHBhdHRlcm5zIHRvIG9zczAgd2hpY2ggYXJlIHRlc3RlZCBmaXJzdCAoc2VlIGlzc3VlIzE1KVxuICAgICAgICBtb2JpbGVEZXRlY3RSdWxlcy5vc3MwID0ge1xuICAgICAgICAgICAgV2luZG93c1Bob25lT1M6IG1vYmlsZURldGVjdFJ1bGVzLm9zcy5XaW5kb3dzUGhvbmVPUyxcbiAgICAgICAgICAgIFdpbmRvd3NNb2JpbGVPUzogbW9iaWxlRGV0ZWN0UnVsZXMub3NzLldpbmRvd3NNb2JpbGVPU1xuICAgICAgICB9O1xuICAgIH0oKSk7XG5cbiAgICAvKipcbiAgICAgKiBUZXN0IHVzZXJBZ2VudCBzdHJpbmcgYWdhaW5zdCBhIHNldCBvZiBydWxlcyBhbmQgZmluZCB0aGUgZmlyc3QgbWF0Y2hlZCBrZXkuXG4gICAgICogQHBhcmFtIHtPYmplY3R9IHJ1bGVzIChrZXkgaXMgU3RyaW5nLCB2YWx1ZSBpcyBSZWdFeHApXG4gICAgICogQHBhcmFtIHtTdHJpbmd9IHVzZXJBZ2VudCB0aGUgbmF2aWdhdG9yLnVzZXJBZ2VudCAob3IgSFRUUC1IZWFkZXIgJ1VzZXItQWdlbnQnKS5cbiAgICAgKiBAcmV0dXJucyB7U3RyaW5nfG51bGx9IHRoZSBtYXRjaGVkIGtleSBpZiBmb3VuZCwgb3RoZXJ3aXNlIDx0dD5udWxsPC90dD5cbiAgICAgKiBAcHJpdmF0ZVxuICAgICAqL1xuICAgIGltcGwuZmluZE1hdGNoID0gZnVuY3Rpb24ocnVsZXMsIHVzZXJBZ2VudCkge1xuICAgICAgICBmb3IgKHZhciBrZXkgaW4gcnVsZXMpIHtcbiAgICAgICAgICAgIGlmIChoYXNPd25Qcm9wLmNhbGwocnVsZXMsIGtleSkpIHtcbiAgICAgICAgICAgICAgICBpZiAocnVsZXNba2V5XS50ZXN0KHVzZXJBZ2VudCkpIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGtleTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgfTtcblxuICAgIC8qKlxuICAgICAqIFRlc3QgdXNlckFnZW50IHN0cmluZyBhZ2FpbnN0IGEgc2V0IG9mIHJ1bGVzIGFuZCByZXR1cm4gYW4gYXJyYXkgb2YgbWF0Y2hlZCBrZXlzLlxuICAgICAqIEBwYXJhbSB7T2JqZWN0fSBydWxlcyAoa2V5IGlzIFN0cmluZywgdmFsdWUgaXMgUmVnRXhwKVxuICAgICAqIEBwYXJhbSB7U3RyaW5nfSB1c2VyQWdlbnQgdGhlIG5hdmlnYXRvci51c2VyQWdlbnQgKG9yIEhUVFAtSGVhZGVyICdVc2VyLUFnZW50JykuXG4gICAgICogQHJldHVybnMge0FycmF5fSBhbiBhcnJheSBvZiBtYXRjaGVkIGtleXMsIG1heSBiZSBlbXB0eSB3aGVuIHRoZXJlIGlzIG5vIG1hdGNoLCBidXQgbm90IDx0dD5udWxsPC90dD5cbiAgICAgKiBAcHJpdmF0ZVxuICAgICAqL1xuICAgIGltcGwuZmluZE1hdGNoZXMgPSBmdW5jdGlvbihydWxlcywgdXNlckFnZW50KSB7XG4gICAgICAgIHZhciByZXN1bHQgPSBbXTtcbiAgICAgICAgZm9yICh2YXIga2V5IGluIHJ1bGVzKSB7XG4gICAgICAgICAgICBpZiAoaGFzT3duUHJvcC5jYWxsKHJ1bGVzLCBrZXkpKSB7XG4gICAgICAgICAgICAgICAgaWYgKHJ1bGVzW2tleV0udGVzdCh1c2VyQWdlbnQpKSB7XG4gICAgICAgICAgICAgICAgICAgIHJlc3VsdC5wdXNoKGtleSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgfTtcblxuICAgIC8qKlxuICAgICAqIENoZWNrIHRoZSB2ZXJzaW9uIG9mIHRoZSBnaXZlbiBwcm9wZXJ0eSBpbiB0aGUgVXNlci1BZ2VudC5cbiAgICAgKlxuICAgICAqIEBwYXJhbSB7U3RyaW5nfSBwcm9wZXJ0eU5hbWVcbiAgICAgKiBAcGFyYW0ge1N0cmluZ30gdXNlckFnZW50XG4gICAgICogQHJldHVybiB7U3RyaW5nfSB2ZXJzaW9uIG9yIDx0dD5udWxsPC90dD4gaWYgdmVyc2lvbiBub3QgZm91bmRcbiAgICAgKiBAcHJpdmF0ZVxuICAgICAqL1xuICAgIGltcGwuZ2V0VmVyc2lvblN0ciA9IGZ1bmN0aW9uIChwcm9wZXJ0eU5hbWUsIHVzZXJBZ2VudCkge1xuICAgICAgICB2YXIgcHJvcHMgPSBpbXBsLm1vYmlsZURldGVjdFJ1bGVzLnByb3BzLCBwYXR0ZXJucywgaSwgbGVuLCBtYXRjaDtcbiAgICAgICAgaWYgKGhhc093blByb3AuY2FsbChwcm9wcywgcHJvcGVydHlOYW1lKSkge1xuICAgICAgICAgICAgcGF0dGVybnMgPSBwcm9wc1twcm9wZXJ0eU5hbWVdO1xuICAgICAgICAgICAgbGVuID0gcGF0dGVybnMubGVuZ3RoO1xuICAgICAgICAgICAgZm9yIChpID0gMDsgaSA8IGxlbjsgKytpKSB7XG4gICAgICAgICAgICAgICAgbWF0Y2ggPSBwYXR0ZXJuc1tpXS5leGVjKHVzZXJBZ2VudCk7XG4gICAgICAgICAgICAgICAgaWYgKG1hdGNoICE9PSBudWxsKSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBtYXRjaFsxXTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgfTtcblxuICAgIC8qKlxuICAgICAqIENoZWNrIHRoZSB2ZXJzaW9uIG9mIHRoZSBnaXZlbiBwcm9wZXJ0eSBpbiB0aGUgVXNlci1BZ2VudC5cbiAgICAgKiBXaWxsIHJldHVybiBhIGZsb2F0IG51bWJlci4gKGVnLiAyXzAgd2lsbCByZXR1cm4gMi4wLCA0LjMuMSB3aWxsIHJldHVybiA0LjMxKVxuICAgICAqXG4gICAgICogQHBhcmFtIHtTdHJpbmd9IHByb3BlcnR5TmFtZVxuICAgICAqIEBwYXJhbSB7U3RyaW5nfSB1c2VyQWdlbnRcbiAgICAgKiBAcmV0dXJuIHtOdW1iZXJ9IHZlcnNpb24gb3IgPHR0Pk5hTjwvdHQ+IGlmIHZlcnNpb24gbm90IGZvdW5kXG4gICAgICogQHByaXZhdGVcbiAgICAgKi9cbiAgICBpbXBsLmdldFZlcnNpb24gPSBmdW5jdGlvbiAocHJvcGVydHlOYW1lLCB1c2VyQWdlbnQpIHtcbiAgICAgICAgdmFyIHZlcnNpb24gPSBpbXBsLmdldFZlcnNpb25TdHIocHJvcGVydHlOYW1lLCB1c2VyQWdlbnQpO1xuICAgICAgICByZXR1cm4gdmVyc2lvbiA/IGltcGwucHJlcGFyZVZlcnNpb25Obyh2ZXJzaW9uKSA6IE5hTjtcbiAgICB9O1xuXG4gICAgLyoqXG4gICAgICogUHJlcGFyZSB0aGUgdmVyc2lvbiBudW1iZXIuXG4gICAgICpcbiAgICAgKiBAcGFyYW0ge1N0cmluZ30gdmVyc2lvblxuICAgICAqIEByZXR1cm4ge051bWJlcn0gdGhlIHZlcnNpb24gbnVtYmVyIGFzIGEgZmxvYXRpbmcgbnVtYmVyXG4gICAgICogQHByaXZhdGVcbiAgICAgKi9cbiAgICBpbXBsLnByZXBhcmVWZXJzaW9uTm8gPSBmdW5jdGlvbiAodmVyc2lvbikge1xuICAgICAgICB2YXIgbnVtYmVycztcblxuICAgICAgICBudW1iZXJzID0gdmVyc2lvbi5zcGxpdCgvW2Etei5fIFxcL1xcLV0vaSk7XG4gICAgICAgIGlmIChudW1iZXJzLmxlbmd0aCA9PT0gMSkge1xuICAgICAgICAgICAgdmVyc2lvbiA9IG51bWJlcnNbMF07XG4gICAgICAgIH1cbiAgICAgICAgaWYgKG51bWJlcnMubGVuZ3RoID4gMSkge1xuICAgICAgICAgICAgdmVyc2lvbiA9IG51bWJlcnNbMF0gKyAnLic7XG4gICAgICAgICAgICBudW1iZXJzLnNoaWZ0KCk7XG4gICAgICAgICAgICB2ZXJzaW9uICs9IG51bWJlcnMuam9pbignJyk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIE51bWJlcih2ZXJzaW9uKTtcbiAgICB9O1xuXG4gICAgaW1wbC5pc01vYmlsZUZhbGxiYWNrID0gZnVuY3Rpb24gKHVzZXJBZ2VudCkge1xuICAgICAgICByZXR1cm4gaW1wbC5kZXRlY3RNb2JpbGVCcm93c2Vycy5mdWxsUGF0dGVybi50ZXN0KHVzZXJBZ2VudCkgfHxcbiAgICAgICAgICAgIGltcGwuZGV0ZWN0TW9iaWxlQnJvd3NlcnMuc2hvcnRQYXR0ZXJuLnRlc3QodXNlckFnZW50LnN1YnN0cigwLDQpKTtcbiAgICB9O1xuXG4gICAgaW1wbC5pc1RhYmxldEZhbGxiYWNrID0gZnVuY3Rpb24gKHVzZXJBZ2VudCkge1xuICAgICAgICByZXR1cm4gaW1wbC5kZXRlY3RNb2JpbGVCcm93c2Vycy50YWJsZXRQYXR0ZXJuLnRlc3QodXNlckFnZW50KTtcbiAgICB9O1xuXG4gICAgaW1wbC5wcmVwYXJlRGV0ZWN0aW9uQ2FjaGUgPSBmdW5jdGlvbiAoY2FjaGUsIHVzZXJBZ2VudCwgbWF4UGhvbmVXaWR0aCkge1xuICAgICAgICBpZiAoY2FjaGUubW9iaWxlICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICB2YXIgcGhvbmUsIHRhYmxldCwgcGhvbmVTaXplZDtcblxuICAgICAgICAvLyBmaXJzdCBjaGVjayBmb3Igc3Ryb25nZXIgdGFibGV0IHJ1bGVzLCB0aGVuIHBob25lIChzZWUgaXNzdWUjNSlcbiAgICAgICAgdGFibGV0ID0gaW1wbC5maW5kTWF0Y2goaW1wbC5tb2JpbGVEZXRlY3RSdWxlcy50YWJsZXRzLCB1c2VyQWdlbnQpO1xuICAgICAgICBpZiAodGFibGV0KSB7XG4gICAgICAgICAgICBjYWNoZS5tb2JpbGUgPSBjYWNoZS50YWJsZXQgPSB0YWJsZXQ7XG4gICAgICAgICAgICBjYWNoZS5waG9uZSA9IG51bGw7XG4gICAgICAgICAgICByZXR1cm47IC8vIHVuYW1iaWd1b3VzbHkgaWRlbnRpZmllZCBhcyB0YWJsZXRcbiAgICAgICAgfVxuXG4gICAgICAgIHBob25lID0gaW1wbC5maW5kTWF0Y2goaW1wbC5tb2JpbGVEZXRlY3RSdWxlcy5waG9uZXMsIHVzZXJBZ2VudCk7XG4gICAgICAgIGlmIChwaG9uZSkge1xuICAgICAgICAgICAgY2FjaGUubW9iaWxlID0gY2FjaGUucGhvbmUgPSBwaG9uZTtcbiAgICAgICAgICAgIGNhY2hlLnRhYmxldCA9IG51bGw7XG4gICAgICAgICAgICByZXR1cm47IC8vIHVuYW1iaWd1b3VzbHkgaWRlbnRpZmllZCBhcyBwaG9uZVxuICAgICAgICB9XG5cbiAgICAgICAgLy8gb3VyIHJ1bGVzIGhhdmVuJ3QgZm91bmQgYSBtYXRjaCAtPiB0cnkgbW9yZSBnZW5lcmFsIGZhbGxiYWNrIHJ1bGVzXG4gICAgICAgIGlmIChpbXBsLmlzTW9iaWxlRmFsbGJhY2sodXNlckFnZW50KSkge1xuICAgICAgICAgICAgcGhvbmVTaXplZCA9IE1vYmlsZURldGVjdC5pc1Bob25lU2l6ZWQobWF4UGhvbmVXaWR0aCk7XG4gICAgICAgICAgICBpZiAocGhvbmVTaXplZCA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICAgICAgY2FjaGUubW9iaWxlID0gaW1wbC5GQUxMQkFDS19NT0JJTEU7XG4gICAgICAgICAgICAgICAgY2FjaGUudGFibGV0ID0gY2FjaGUucGhvbmUgPSBudWxsO1xuICAgICAgICAgICAgfSBlbHNlIGlmIChwaG9uZVNpemVkKSB7XG4gICAgICAgICAgICAgICAgY2FjaGUubW9iaWxlID0gY2FjaGUucGhvbmUgPSBpbXBsLkZBTExCQUNLX1BIT05FO1xuICAgICAgICAgICAgICAgIGNhY2hlLnRhYmxldCA9IG51bGw7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIGNhY2hlLm1vYmlsZSA9IGNhY2hlLnRhYmxldCA9IGltcGwuRkFMTEJBQ0tfVEFCTEVUO1xuICAgICAgICAgICAgICAgIGNhY2hlLnBob25lID0gbnVsbDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSBlbHNlIGlmIChpbXBsLmlzVGFibGV0RmFsbGJhY2sodXNlckFnZW50KSkge1xuICAgICAgICAgICAgY2FjaGUubW9iaWxlID0gY2FjaGUudGFibGV0ID0gaW1wbC5GQUxMQkFDS19UQUJMRVQ7XG4gICAgICAgICAgICBjYWNoZS5waG9uZSA9IG51bGw7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAvLyBub3QgbW9iaWxlIGF0IGFsbCFcbiAgICAgICAgICAgIGNhY2hlLm1vYmlsZSA9IGNhY2hlLnRhYmxldCA9IGNhY2hlLnBob25lID0gbnVsbDtcbiAgICAgICAgfVxuICAgIH07XG5cbiAgICAvLyB0IGlzIGEgcmVmZXJlbmNlIHRvIGEgTW9iaWxlRGV0ZWN0IGluc3RhbmNlXG4gICAgaW1wbC5tb2JpbGVHcmFkZSA9IGZ1bmN0aW9uICh0KSB7XG4gICAgICAgIC8vIGltcGwgbm90ZTpcbiAgICAgICAgLy8gVG8ga2VlcCBpbiBzeW5jIHcvIE1vYmlsZV9EZXRlY3QucGhwIGVhc2lseSwgdGhlIGZvbGxvd2luZyBjb2RlIGlzIHRpZ2h0bHkgYWxpZ25lZCB0byB0aGUgUEhQIHZlcnNpb24uXG4gICAgICAgIC8vIFdoZW4gY2hhbmdlcyBhcmUgbWFkZSBpbiBNb2JpbGVfRGV0ZWN0LnBocCwgY29weSB0aGlzIG1ldGhvZCBhbmQgcmVwbGFjZTpcbiAgICAgICAgLy8gICAgICR0aGlzLT4gLyB0LlxuICAgICAgICAvLyAgICAgc2VsZjo6TU9CSUxFX0dSQURFXyguKSAvICckMSdcbiAgICAgICAgLy8gICAgICwgc2VsZjo6VkVSU0lPTl9UWVBFX0ZMT0FUIC8gKG5vdGhpbmcpXG4gICAgICAgIC8vICAgICBpc0lPUygpIC8gb3MoJ2lPUycpXG4gICAgICAgIC8vICAgICBbcmVnXSAvIChub3RoaW5nKSAgIDwtLSBqc2RlbGl2ciBjb21wbGFpbmluZyBhYm91dCB1bmVzY2FwZWQgdW5pY29kZSBjaGFyYWN0ZXIgVSswMEFFXG4gICAgICAgIHZhciAkaXNNb2JpbGUgPSB0Lm1vYmlsZSgpICE9PSBudWxsO1xuXG4gICAgICAgIGlmIChcbiAgICAgICAgICAgIC8vIEFwcGxlIGlPUyAzLjItNS4xIC0gVGVzdGVkIG9uIHRoZSBvcmlnaW5hbCBpUGFkICg0LjMgLyA1LjApLCBpUGFkIDIgKDQuMyksIGlQYWQgMyAoNS4xKSwgb3JpZ2luYWwgaVBob25lICgzLjEpLCBpUGhvbmUgMyAoMy4yKSwgM0dTICg0LjMpLCA0ICg0LjMgLyA1LjApLCBhbmQgNFMgKDUuMSlcbiAgICAgICAgICAgIHQub3MoJ2lPUycpICYmIHQudmVyc2lvbignaVBhZCcpPj00LjMgfHxcbiAgICAgICAgICAgIHQub3MoJ2lPUycpICYmIHQudmVyc2lvbignaVBob25lJyk+PTMuMSB8fFxuICAgICAgICAgICAgdC5vcygnaU9TJykgJiYgdC52ZXJzaW9uKCdpUG9kJyk+PTMuMSB8fFxuXG4gICAgICAgICAgICAvLyBBbmRyb2lkIDIuMS0yLjMgLSBUZXN0ZWQgb24gdGhlIEhUQyBJbmNyZWRpYmxlICgyLjIpLCBvcmlnaW5hbCBEcm9pZCAoMi4yKSwgSFRDIEFyaWEgKDIuMSksIEdvb2dsZSBOZXh1cyBTICgyLjMpLiBGdW5jdGlvbmFsIG9uIDEuNSAmIDEuNiBidXQgcGVyZm9ybWFuY2UgbWF5IGJlIHNsdWdnaXNoLCB0ZXN0ZWQgb24gR29vZ2xlIEcxICgxLjUpXG4gICAgICAgICAgICAvLyBBbmRyb2lkIDMuMSAoSG9uZXljb21iKSAgLSBUZXN0ZWQgb24gdGhlIFNhbXN1bmcgR2FsYXh5IFRhYiAxMC4xIGFuZCBNb3Rvcm9sYSBYT09NXG4gICAgICAgICAgICAvLyBBbmRyb2lkIDQuMCAoSUNTKSAgLSBUZXN0ZWQgb24gYSBHYWxheHkgTmV4dXMuIE5vdGU6IHRyYW5zaXRpb24gcGVyZm9ybWFuY2UgY2FuIGJlIHBvb3Igb24gdXBncmFkZWQgZGV2aWNlc1xuICAgICAgICAgICAgLy8gQW5kcm9pZCA0LjEgKEplbGx5IEJlYW4pICAtIFRlc3RlZCBvbiBhIEdhbGF4eSBOZXh1cyBhbmQgR2FsYXh5IDdcbiAgICAgICAgICAgICggdC52ZXJzaW9uKCdBbmRyb2lkJyk+Mi4xICYmIHQuaXMoJ1dlYmtpdCcpICkgfHxcblxuICAgICAgICAgICAgLy8gV2luZG93cyBQaG9uZSA3LTcuNSAtIFRlc3RlZCBvbiB0aGUgSFRDIFN1cnJvdW5kICg3LjApIEhUQyBUcm9waHkgKDcuNSksIExHLUU5MDAgKDcuNSksIE5va2lhIEx1bWlhIDgwMFxuICAgICAgICAgICAgdC52ZXJzaW9uKCdXaW5kb3dzIFBob25lIE9TJyk+PTcuMCB8fFxuXG4gICAgICAgICAgICAvLyBCbGFja2JlcnJ5IDcgLSBUZXN0ZWQgb24gQmxhY2tCZXJyeSBUb3JjaCA5ODEwXG4gICAgICAgICAgICAvLyBCbGFja2JlcnJ5IDYuMCAtIFRlc3RlZCBvbiB0aGUgVG9yY2ggOTgwMCBhbmQgU3R5bGUgOTY3MFxuICAgICAgICAgICAgdC5pcygnQmxhY2tCZXJyeScpICYmIHQudmVyc2lvbignQmxhY2tCZXJyeScpPj02LjAgfHxcbiAgICAgICAgICAgIC8vIEJsYWNrYmVycnkgUGxheWJvb2sgKDEuMC0yLjApIC0gVGVzdGVkIG9uIFBsYXlCb29rXG4gICAgICAgICAgICB0Lm1hdGNoKCdQbGF5Ym9vay4qVGFibGV0JykgfHxcblxuICAgICAgICAgICAgLy8gUGFsbSBXZWJPUyAoMS40LTIuMCkgLSBUZXN0ZWQgb24gdGhlIFBhbG0gUGl4aSAoMS40KSwgUHJlICgxLjQpLCBQcmUgMiAoMi4wKVxuICAgICAgICAgICAgKCB0LnZlcnNpb24oJ3dlYk9TJyk+PTEuNCAmJiB0Lm1hdGNoKCdQYWxtfFByZXxQaXhpJykgKSB8fFxuICAgICAgICAgICAgLy8gUGFsbSBXZWJPUyAzLjAgIC0gVGVzdGVkIG9uIEhQIFRvdWNoUGFkXG4gICAgICAgICAgICB0Lm1hdGNoKCdocC4qVG91Y2hQYWQnKSB8fFxuXG4gICAgICAgICAgICAvLyBGaXJlZm94IE1vYmlsZSAoMTIgQmV0YSkgLSBUZXN0ZWQgb24gQW5kcm9pZCAyLjMgZGV2aWNlXG4gICAgICAgICAgICAoIHQuaXMoJ0ZpcmVmb3gnKSAmJiB0LnZlcnNpb24oJ0ZpcmVmb3gnKT49MTIgKSB8fFxuXG4gICAgICAgICAgICAvLyBDaHJvbWUgZm9yIEFuZHJvaWQgLSBUZXN0ZWQgb24gQW5kcm9pZCA0LjAsIDQuMSBkZXZpY2VcbiAgICAgICAgICAgICggdC5pcygnQ2hyb21lJykgJiYgdC5pcygnQW5kcm9pZE9TJykgJiYgdC52ZXJzaW9uKCdBbmRyb2lkJyk+PTQuMCApIHx8XG5cbiAgICAgICAgICAgIC8vIFNreWZpcmUgNC4xIC0gVGVzdGVkIG9uIEFuZHJvaWQgMi4zIGRldmljZVxuICAgICAgICAgICAgKCB0LmlzKCdTa3lmaXJlJykgJiYgdC52ZXJzaW9uKCdTa3lmaXJlJyk+PTQuMSAmJiB0LmlzKCdBbmRyb2lkT1MnKSAmJiB0LnZlcnNpb24oJ0FuZHJvaWQnKT49Mi4zICkgfHxcblxuICAgICAgICAgICAgLy8gT3BlcmEgTW9iaWxlIDExLjUtMTI6IFRlc3RlZCBvbiBBbmRyb2lkIDIuM1xuICAgICAgICAgICAgKCB0LmlzKCdPcGVyYScpICYmIHQudmVyc2lvbignT3BlcmEgTW9iaScpPjExICYmIHQuaXMoJ0FuZHJvaWRPUycpICkgfHxcblxuICAgICAgICAgICAgLy8gTWVlZ28gMS4yIC0gVGVzdGVkIG9uIE5va2lhIDk1MCBhbmQgTjlcbiAgICAgICAgICAgIHQuaXMoJ01lZUdvT1MnKSB8fFxuXG4gICAgICAgICAgICAvLyBUaXplbiAocHJlLXJlbGVhc2UpIC0gVGVzdGVkIG9uIGVhcmx5IGhhcmR3YXJlXG4gICAgICAgICAgICB0LmlzKCdUaXplbicpIHx8XG5cbiAgICAgICAgICAgIC8vIFNhbXN1bmcgQmFkYSAyLjAgLSBUZXN0ZWQgb24gYSBTYW1zdW5nIFdhdmUgMywgRG9scGhpbiBicm93c2VyXG4gICAgICAgICAgICAvLyBAdG9kbzogbW9yZSB0ZXN0cyBoZXJlIVxuICAgICAgICAgICAgdC5pcygnRG9sZmluJykgJiYgdC52ZXJzaW9uKCdCYWRhJyk+PTIuMCB8fFxuXG4gICAgICAgICAgICAvLyBVQyBCcm93c2VyIC0gVGVzdGVkIG9uIEFuZHJvaWQgMi4zIGRldmljZVxuICAgICAgICAgICAgKCAodC5pcygnVUMgQnJvd3NlcicpIHx8IHQuaXMoJ0RvbGZpbicpKSAmJiB0LnZlcnNpb24oJ0FuZHJvaWQnKT49Mi4zICkgfHxcblxuICAgICAgICAgICAgLy8gS2luZGxlIDMgYW5kIEZpcmUgIC0gVGVzdGVkIG9uIHRoZSBidWlsdC1pbiBXZWJLaXQgYnJvd3NlciBmb3IgZWFjaFxuICAgICAgICAgICAgKCB0Lm1hdGNoKCdLaW5kbGUgRmlyZScpIHx8XG4gICAgICAgICAgICAgICAgdC5pcygnS2luZGxlJykgJiYgdC52ZXJzaW9uKCdLaW5kbGUnKT49My4wICkgfHxcblxuICAgICAgICAgICAgLy8gTm9vayBDb2xvciAxLjQuMSAtIFRlc3RlZCBvbiBvcmlnaW5hbCBOb29rIENvbG9yLCBub3QgTm9vayBUYWJsZXRcbiAgICAgICAgICAgIHQuaXMoJ0FuZHJvaWRPUycpICYmIHQuaXMoJ05vb2tUYWJsZXQnKSB8fFxuXG4gICAgICAgICAgICAvLyBDaHJvbWUgRGVza3RvcCAxMS0yMSAtIFRlc3RlZCBvbiBPUyBYIDEwLjcgYW5kIFdpbmRvd3MgN1xuICAgICAgICAgICAgdC52ZXJzaW9uKCdDaHJvbWUnKT49MTEgJiYgISRpc01vYmlsZSB8fFxuXG4gICAgICAgICAgICAvLyBTYWZhcmkgRGVza3RvcCA0LTUgLSBUZXN0ZWQgb24gT1MgWCAxMC43IGFuZCBXaW5kb3dzIDdcbiAgICAgICAgICAgIHQudmVyc2lvbignU2FmYXJpJyk+PTUuMCAmJiAhJGlzTW9iaWxlIHx8XG5cbiAgICAgICAgICAgIC8vIEZpcmVmb3ggRGVza3RvcCA0LTEzIC0gVGVzdGVkIG9uIE9TIFggMTAuNyBhbmQgV2luZG93cyA3XG4gICAgICAgICAgICB0LnZlcnNpb24oJ0ZpcmVmb3gnKT49NC4wICYmICEkaXNNb2JpbGUgfHxcblxuICAgICAgICAgICAgLy8gSW50ZXJuZXQgRXhwbG9yZXIgNy05IC0gVGVzdGVkIG9uIFdpbmRvd3MgWFAsIFZpc3RhIGFuZCA3XG4gICAgICAgICAgICB0LnZlcnNpb24oJ01TSUUnKT49Ny4wICYmICEkaXNNb2JpbGUgfHxcblxuICAgICAgICAgICAgLy8gT3BlcmEgRGVza3RvcCAxMC0xMiAtIFRlc3RlZCBvbiBPUyBYIDEwLjcgYW5kIFdpbmRvd3MgN1xuICAgICAgICAgICAgLy8gQHJlZmVyZW5jZTogaHR0cDovL215Lm9wZXJhLmNvbS9jb21tdW5pdHkvb3BlbndlYi9pZG9wZXJhL1xuICAgICAgICAgICAgdC52ZXJzaW9uKCdPcGVyYScpPj0xMCAmJiAhJGlzTW9iaWxlXG5cbiAgICAgICAgICAgICl7XG4gICAgICAgICAgICByZXR1cm4gJ0EnO1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKFxuICAgICAgICAgICAgdC5vcygnaU9TJykgJiYgdC52ZXJzaW9uKCdpUGFkJyk8NC4zIHx8XG4gICAgICAgICAgICB0Lm9zKCdpT1MnKSAmJiB0LnZlcnNpb24oJ2lQaG9uZScpPDMuMSB8fFxuICAgICAgICAgICAgdC5vcygnaU9TJykgJiYgdC52ZXJzaW9uKCdpUG9kJyk8My4xIHx8XG5cbiAgICAgICAgICAgIC8vIEJsYWNrYmVycnkgNS4wOiBUZXN0ZWQgb24gdGhlIFN0b3JtIDIgOTU1MCwgQm9sZCA5NzcwXG4gICAgICAgICAgICB0LmlzKCdCbGFja2JlcnJ5JykgJiYgdC52ZXJzaW9uKCdCbGFja0JlcnJ5Jyk+PTUgJiYgdC52ZXJzaW9uKCdCbGFja0JlcnJ5Jyk8NiB8fFxuXG4gICAgICAgICAgICAvL09wZXJhIE1pbmkgKDUuMC02LjUpIC0gVGVzdGVkIG9uIGlPUyAzLjIvNC4zIGFuZCBBbmRyb2lkIDIuM1xuICAgICAgICAgICAgKCB0LnZlcnNpb24oJ09wZXJhIE1pbmknKT49NS4wICYmIHQudmVyc2lvbignT3BlcmEgTWluaScpPD02LjUgJiZcbiAgICAgICAgICAgICAgICAodC52ZXJzaW9uKCdBbmRyb2lkJyk+PTIuMyB8fCB0LmlzKCdpT1MnKSkgKSB8fFxuXG4gICAgICAgICAgICAvLyBOb2tpYSBTeW1iaWFuXjMgLSBUZXN0ZWQgb24gTm9raWEgTjggKFN5bWJpYW5eMyksIEM3IChTeW1iaWFuXjMpLCBhbHNvIHdvcmtzIG9uIE45NyAoU3ltYmlhbl4xKVxuICAgICAgICAgICAgdC5tYXRjaCgnTm9raWFOOHxOb2tpYUM3fE45Ny4qU2VyaWVzNjB8U3ltYmlhbi8zJykgfHxcblxuICAgICAgICAgICAgLy8gQHRvZG86IHJlcG9ydCB0aGlzICh0ZXN0ZWQgb24gTm9raWEgTjcxKVxuICAgICAgICAgICAgdC52ZXJzaW9uKCdPcGVyYSBNb2JpJyk+PTExICYmIHQuaXMoJ1N5bWJpYW5PUycpXG4gICAgICAgICAgICApe1xuICAgICAgICAgICAgcmV0dXJuICdCJztcbiAgICAgICAgfVxuXG4gICAgICAgIGlmIChcbiAgICAgICAgLy8gQmxhY2tiZXJyeSA0LnggLSBUZXN0ZWQgb24gdGhlIEN1cnZlIDgzMzBcbiAgICAgICAgICAgIHQudmVyc2lvbignQmxhY2tCZXJyeScpPDUuMCB8fFxuICAgICAgICAgICAgLy8gV2luZG93cyBNb2JpbGUgLSBUZXN0ZWQgb24gdGhlIEhUQyBMZW8gKFdpbk1vIDUuMilcbiAgICAgICAgICAgIHQubWF0Y2goJ01TSUVNb2JpbGV8V2luZG93cyBDRS4qTW9iaWxlJykgfHwgdC52ZXJzaW9uKCdXaW5kb3dzIE1vYmlsZScpPD01LjJcblxuICAgICAgICAgICAgKXtcbiAgICAgICAgICAgIHJldHVybiAnQyc7XG4gICAgICAgIH1cblxuICAgICAgICAvL0FsbCBvbGRlciBzbWFydHBob25lIHBsYXRmb3JtcyBhbmQgZmVhdHVyZXBob25lcyAtIEFueSBkZXZpY2UgdGhhdCBkb2Vzbid0IHN1cHBvcnQgbWVkaWEgcXVlcmllc1xuICAgICAgICAvL3dpbGwgcmVjZWl2ZSB0aGUgYmFzaWMsIEMgZ3JhZGUgZXhwZXJpZW5jZS5cbiAgICAgICAgcmV0dXJuICdDJztcbiAgICB9O1xuXG4gICAgaW1wbC5kZXRlY3RPUyA9IGZ1bmN0aW9uICh1YSkge1xuICAgICAgICByZXR1cm4gaW1wbC5maW5kTWF0Y2goaW1wbC5tb2JpbGVEZXRlY3RSdWxlcy5vc3MwLCB1YSkgfHxcbiAgICAgICAgICAgIGltcGwuZmluZE1hdGNoKGltcGwubW9iaWxlRGV0ZWN0UnVsZXMub3NzLCB1YSk7XG4gICAgfTtcblxuICAgIGltcGwuZ2V0RGV2aWNlU21hbGxlclNpZGUgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHJldHVybiB3aW5kb3cuc2NyZWVuLndpZHRoIDwgd2luZG93LnNjcmVlbi5oZWlnaHQgP1xuICAgICAgICAgICAgd2luZG93LnNjcmVlbi53aWR0aCA6XG4gICAgICAgICAgICB3aW5kb3cuc2NyZWVuLmhlaWdodDtcbiAgICB9O1xuXG4gICAgLyoqXG4gICAgICogQ29uc3RydWN0b3IgZm9yIE1vYmlsZURldGVjdCBvYmplY3QuXG4gICAgICogPGJyPlxuICAgICAqIFN1Y2ggYW4gb2JqZWN0IHdpbGwga2VlcCBhIHJlZmVyZW5jZSB0byB0aGUgZ2l2ZW4gdXNlci1hZ2VudCBzdHJpbmcgYW5kIGNhY2hlIG1vc3Qgb2YgdGhlIGRldGVjdCBxdWVyaWVzLjxicj5cbiAgICAgKiA8ZGl2IHN0eWxlPVwiYmFja2dyb3VuZC1jb2xvcjogI2Q5ZWRmNzsgYm9yZGVyOiAxcHggc29saWQgI2JjZThmMTsgY29sb3I6ICMzYTg3YWQ7IHBhZGRpbmc6IDE0cHg7IGJvcmRlci1yYWRpdXM6IDJweDsgbWFyZ2luLXRvcDogMjBweFwiPlxuICAgICAqICAgICA8c3Ryb25nPkZpbmQgaW5mb3JtYXRpb24gaG93IHRvIGRvd25sb2FkIGFuZCBpbnN0YWxsOjwvc3Ryb25nPlxuICAgICAqICAgICA8YSBocmVmPVwiaHR0cHM6Ly9naXRodWIuY29tL2hnb2VibC9tb2JpbGUtZGV0ZWN0LmpzL1wiPmdpdGh1Yi5jb20vaGdvZWJsL21vYmlsZS1kZXRlY3QuanMvPC9hPlxuICAgICAqIDwvZGl2PlxuICAgICAqXG4gICAgICogQGV4YW1wbGUgPHByZT5cbiAgICAgKiAgICAgdmFyIG1kID0gbmV3IE1vYmlsZURldGVjdCh3aW5kb3cubmF2aWdhdG9yLnVzZXJBZ2VudCk7XG4gICAgICogICAgIGlmIChtZC5tb2JpbGUoKSkge1xuICAgICAqICAgICAgICAgbG9jYXRpb24uaHJlZiA9IChtZC5tb2JpbGVHcmFkZSgpID09PSAnQScpID8gJy9tb2JpbGUvJyA6ICcvbHlueC8nO1xuICAgICAqICAgICB9XG4gICAgICogPC9wcmU+XG4gICAgICpcbiAgICAgKiBAcGFyYW0ge3N0cmluZ30gdXNlckFnZW50IHR5cGljYWxseSB0YWtlbiBmcm9tIHdpbmRvdy5uYXZpZ2F0b3IudXNlckFnZW50IG9yIGh0dHBfaGVhZGVyWydVc2VyLUFnZW50J11cbiAgICAgKiBAcGFyYW0ge251bWJlcn0gW21heFBob25lV2lkdGg9NjAwXSA8c3Ryb25nPm9ubHkgZm9yIGJyb3dzZXJzPC9zdHJvbmc+IHNwZWNpZnkgYSB2YWx1ZSBmb3IgdGhlIG1heGltdW1cbiAgICAgKiAgICAgICAgd2lkdGggb2Ygc21hbGxlc3QgZGV2aWNlIHNpZGUgKGluIGxvZ2ljYWwgXCJDU1NcIiBwaXhlbHMpIHVudGlsIGEgZGV2aWNlIGRldGVjdGVkIGFzIG1vYmlsZSB3aWxsIGJlIGhhbmRsZWRcbiAgICAgKiAgICAgICAgYXMgcGhvbmUuXG4gICAgICogICAgICAgIFRoaXMgaXMgb25seSB1c2VkIGluIGNhc2VzIHdoZXJlIHRoZSBkZXZpY2UgY2Fubm90IGJlIGNsYXNzaWZpZWQgYXMgcGhvbmUgb3IgdGFibGV0Ljxicj5cbiAgICAgKiAgICAgICAgU2VlIDxhIGhyZWY9XCJodHRwOi8vZGV2ZWxvcGVyLmFuZHJvaWQuY29tL2d1aWRlL3ByYWN0aWNlcy9zY3JlZW5zX3N1cHBvcnQuaHRtbFwiPkRlY2xhcmluZyBUYWJsZXQgTGF5b3V0c1xuICAgICAqICAgICAgICBmb3IgQW5kcm9pZDwvYT4uPGJyPlxuICAgICAqICAgICAgICBJZiB5b3UgcHJvdmlkZSBhIHZhbHVlIDwgMCwgdGhlbiB0aGlzIFwiZnV6enlcIiBjaGVjayBpcyBkaXNhYmxlZC5cbiAgICAgKiBAY29uc3RydWN0b3JcbiAgICAgKiBAZ2xvYmFsXG4gICAgICovXG4gICAgZnVuY3Rpb24gTW9iaWxlRGV0ZWN0KHVzZXJBZ2VudCwgbWF4UGhvbmVXaWR0aCkge1xuICAgICAgICB0aGlzLnVhID0gcHJlcGFyZVVzZXJBZ2VudCh1c2VyQWdlbnQpO1xuICAgICAgICB0aGlzLl9jYWNoZSA9IHt9O1xuICAgICAgICAvLzYwMGRwIGlzIHR5cGljYWwgN1wiIHRhYmxldCBtaW5pbXVtIHdpZHRoXG4gICAgICAgIHRoaXMubWF4UGhvbmVXaWR0aCA9IG1heFBob25lV2lkdGggfHwgNjAwO1xuICAgIH1cblxuICAgIE1vYmlsZURldGVjdC5wcm90b3R5cGUgPSB7XG4gICAgICAgIGNvbnN0cnVjdG9yOiBNb2JpbGVEZXRlY3QsXG5cbiAgICAgICAgLyoqXG4gICAgICAgICAqIFJldHVybnMgdGhlIGRldGVjdGVkIHBob25lIG9yIHRhYmxldCB0eXBlIG9yIDx0dD5udWxsPC90dD4gaWYgaXQgaXMgbm90IGEgbW9iaWxlIGRldmljZS5cbiAgICAgICAgICogPGJyPlxuICAgICAgICAgKiBGb3IgYSBsaXN0IG9mIHBvc3NpYmxlIHJldHVybiB2YWx1ZXMgc2VlIHtAbGluayBNb2JpbGVEZXRlY3QjcGhvbmV9IGFuZCB7QGxpbmsgTW9iaWxlRGV0ZWN0I3RhYmxldH0uPGJyPlxuICAgICAgICAgKiA8YnI+XG4gICAgICAgICAqIElmIHRoZSBkZXZpY2UgaXMgbm90IGRldGVjdGVkIGJ5IHRoZSByZWd1bGFyIGV4cHJlc3Npb25zIGZyb20gTW9iaWxlLURldGVjdCwgYSB0ZXN0IGlzIG1hZGUgYWdhaW5zdFxuICAgICAgICAgKiB0aGUgcGF0dGVybnMgb2YgPGEgaHJlZj1cImh0dHA6Ly9kZXRlY3Rtb2JpbGVicm93c2Vycy5jb20vXCI+ZGV0ZWN0bW9iaWxlYnJvd3NlcnMuY29tPC9hPi4gSWYgdGhpcyB0ZXN0XG4gICAgICAgICAqIGlzIHBvc2l0aXZlLCBhIHZhbHVlIG9mIDxjb2RlPlVua25vd25QaG9uZTwvY29kZT4sIDxjb2RlPlVua25vd25UYWJsZXQ8L2NvZGU+IG9yXG4gICAgICAgICAqIDxjb2RlPlVua25vd25Nb2JpbGU8L2NvZGU+IGlzIHJldHVybmVkLjxicj5cbiAgICAgICAgICogV2hlbiB1c2VkIGluIGJyb3dzZXIsIHRoZSBkZWNpc2lvbiB3aGV0aGVyIHBob25lIG9yIHRhYmxldCBpcyBtYWRlIGJhc2VkIG9uIDxjb2RlPnNjcmVlbi53aWR0aC9oZWlnaHQ8L2NvZGU+Ljxicj5cbiAgICAgICAgICogPGJyPlxuICAgICAgICAgKiBXaGVuIHVzZWQgc2VydmVyLXNpZGUgKG5vZGUuanMpLCB0aGVyZSBpcyBubyB3YXkgdG8gdGVsbCB0aGUgZGlmZmVyZW5jZSBiZXR3ZWVuIDxjb2RlPlVua25vd25UYWJsZXQ8L2NvZGU+XG4gICAgICAgICAqIGFuZCA8Y29kZT5Vbmtub3duTW9iaWxlPC9jb2RlPiwgc28geW91IHdpbGwgZ2V0IDxjb2RlPlVua25vd25Nb2JpbGU8L2NvZGU+IGhlcmUuPGJyPlxuICAgICAgICAgKiBCZSBhd2FyZSB0aGF0IHNpbmNlIHYxLjAuMCBpbiB0aGlzIHNwZWNpYWwgY2FzZSB5b3Ugd2lsbCBnZXQgPGNvZGU+VW5rbm93bk1vYmlsZTwvY29kZT4gb25seSBmb3I6XG4gICAgICAgICAqIHtAbGluayBNb2JpbGVEZXRlY3QjbW9iaWxlfSwgbm90IGZvciB7QGxpbmsgTW9iaWxlRGV0ZWN0I3Bob25lfSBhbmQge0BsaW5rIE1vYmlsZURldGVjdCN0YWJsZXR9LlxuICAgICAgICAgKiBJbiB2ZXJzaW9ucyBiZWZvcmUgdjEuMC4wIGFsbCAzIG1ldGhvZHMgcmV0dXJuZWQgPGNvZGU+VW5rbm93bk1vYmlsZTwvY29kZT4gd2hpY2ggd2FzIHRlZGlvdXMgdG8gdXNlLlxuICAgICAgICAgKiA8YnI+XG4gICAgICAgICAqIEluIG1vc3QgY2FzZXMgeW91IHdpbGwgdXNlIHRoZSByZXR1cm4gdmFsdWUganVzdCBhcyBhIGJvb2xlYW4uXG4gICAgICAgICAqXG4gICAgICAgICAqIEByZXR1cm5zIHtTdHJpbmd9IHRoZSBrZXkgZm9yIHRoZSBwaG9uZSBmYW1pbHkgb3IgdGFibGV0IGZhbWlseSwgZS5nLiBcIk5leHVzXCIuXG4gICAgICAgICAqIEBmdW5jdGlvbiBNb2JpbGVEZXRlY3QjbW9iaWxlXG4gICAgICAgICAqL1xuICAgICAgICBtb2JpbGU6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIGltcGwucHJlcGFyZURldGVjdGlvbkNhY2hlKHRoaXMuX2NhY2hlLCB0aGlzLnVhLCB0aGlzLm1heFBob25lV2lkdGgpO1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMuX2NhY2hlLm1vYmlsZTtcbiAgICAgICAgfSxcblxuICAgICAgICAvKipcbiAgICAgICAgICogUmV0dXJucyB0aGUgZGV0ZWN0ZWQgcGhvbmUgdHlwZS9mYW1pbHkgc3RyaW5nIG9yIDx0dD5udWxsPC90dD4uXG4gICAgICAgICAqIDxicj5cbiAgICAgICAgICogVGhlIHJldHVybmVkIHRhYmxldCAoZmFtaWx5IG9yIHByb2R1Y2VyKSBpcyBvbmUgb2YgZm9sbG93aW5nIGtleXM6PGJyPlxuICAgICAgICAgKiA8YnI+PHR0PmlQaG9uZSwgQmxhY2tCZXJyeSwgSFRDLCBOZXh1cywgRGVsbCwgTW90b3JvbGEsIFNhbXN1bmcsIExHLCBTb255LCBBc3VzLFxuICAgICAgICAgKiBOb2tpYUx1bWlhLCBNaWNyb21heCwgUGFsbSwgVmVydHUsIFBhbnRlY2gsIEZseSwgV2lrbywgaU1vYmlsZSwgU2ltVmFsbGV5LFxuICAgICAgICAgKiBXb2xmZ2FuZywgQWxjYXRlbCwgTmludGVuZG8sIEFtb2ksIElOUSwgT25lUGx1cywgR2VuZXJpY1Bob25lPC90dD48YnI+XG4gICAgICAgICAqIDxicj5cbiAgICAgICAgICogSWYgdGhlIGRldmljZSBpcyBub3QgZGV0ZWN0ZWQgYnkgdGhlIHJlZ3VsYXIgZXhwcmVzc2lvbnMgZnJvbSBNb2JpbGUtRGV0ZWN0LCBhIHRlc3QgaXMgbWFkZSBhZ2FpbnN0XG4gICAgICAgICAqIHRoZSBwYXR0ZXJucyBvZiA8YSBocmVmPVwiaHR0cDovL2RldGVjdG1vYmlsZWJyb3dzZXJzLmNvbS9cIj5kZXRlY3Rtb2JpbGVicm93c2Vycy5jb208L2E+LiBJZiB0aGlzIHRlc3RcbiAgICAgICAgICogaXMgcG9zaXRpdmUsIGEgdmFsdWUgb2YgPGNvZGU+VW5rbm93blBob25lPC9jb2RlPiBvciA8Y29kZT5Vbmtub3duTW9iaWxlPC9jb2RlPiBpcyByZXR1cm5lZC48YnI+XG4gICAgICAgICAqIFdoZW4gdXNlZCBpbiBicm93c2VyLCB0aGUgZGVjaXNpb24gd2hldGhlciBwaG9uZSBvciB0YWJsZXQgaXMgbWFkZSBiYXNlZCBvbiA8Y29kZT5zY3JlZW4ud2lkdGgvaGVpZ2h0PC9jb2RlPi48YnI+XG4gICAgICAgICAqIDxicj5cbiAgICAgICAgICogV2hlbiB1c2VkIHNlcnZlci1zaWRlIChub2RlLmpzKSwgdGhlcmUgaXMgbm8gd2F5IHRvIHRlbGwgdGhlIGRpZmZlcmVuY2UgYmV0d2VlbiA8Y29kZT5Vbmtub3duVGFibGV0PC9jb2RlPlxuICAgICAgICAgKiBhbmQgPGNvZGU+VW5rbm93bk1vYmlsZTwvY29kZT4sIHNvIHlvdSB3aWxsIGdldCA8Y29kZT5udWxsPC9jb2RlPiBoZXJlLCB3aGlsZSB7QGxpbmsgTW9iaWxlRGV0ZWN0I21vYmlsZX1cbiAgICAgICAgICogd2lsbCByZXR1cm4gPGNvZGU+VW5rbm93bk1vYmlsZTwvY29kZT4uPGJyPlxuICAgICAgICAgKiBCZSBhd2FyZSB0aGF0IHNpbmNlIHYxLjAuMCBpbiB0aGlzIHNwZWNpYWwgY2FzZSB5b3Ugd2lsbCBnZXQgPGNvZGU+VW5rbm93bk1vYmlsZTwvY29kZT4gb25seSBmb3I6XG4gICAgICAgICAqIHtAbGluayBNb2JpbGVEZXRlY3QjbW9iaWxlfSwgbm90IGZvciB7QGxpbmsgTW9iaWxlRGV0ZWN0I3Bob25lfSBhbmQge0BsaW5rIE1vYmlsZURldGVjdCN0YWJsZXR9LlxuICAgICAgICAgKiBJbiB2ZXJzaW9ucyBiZWZvcmUgdjEuMC4wIGFsbCAzIG1ldGhvZHMgcmV0dXJuZWQgPGNvZGU+VW5rbm93bk1vYmlsZTwvY29kZT4gd2hpY2ggd2FzIHRlZGlvdXMgdG8gdXNlLlxuICAgICAgICAgKiA8YnI+XG4gICAgICAgICAqIEluIG1vc3QgY2FzZXMgeW91IHdpbGwgdXNlIHRoZSByZXR1cm4gdmFsdWUganVzdCBhcyBhIGJvb2xlYW4uXG4gICAgICAgICAqXG4gICAgICAgICAqIEByZXR1cm5zIHtTdHJpbmd9IHRoZSBrZXkgb2YgdGhlIHBob25lIGZhbWlseSBvciBwcm9kdWNlciwgZS5nLiBcImlQaG9uZVwiXG4gICAgICAgICAqIEBmdW5jdGlvbiBNb2JpbGVEZXRlY3QjcGhvbmVcbiAgICAgICAgICovXG4gICAgICAgIHBob25lOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICBpbXBsLnByZXBhcmVEZXRlY3Rpb25DYWNoZSh0aGlzLl9jYWNoZSwgdGhpcy51YSwgdGhpcy5tYXhQaG9uZVdpZHRoKTtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLl9jYWNoZS5waG9uZTtcbiAgICAgICAgfSxcblxuICAgICAgICAvKipcbiAgICAgICAgICogUmV0dXJucyB0aGUgZGV0ZWN0ZWQgdGFibGV0IHR5cGUvZmFtaWx5IHN0cmluZyBvciA8dHQ+bnVsbDwvdHQ+LlxuICAgICAgICAgKiA8YnI+XG4gICAgICAgICAqIFRoZSByZXR1cm5lZCB0YWJsZXQgKGZhbWlseSBvciBwcm9kdWNlcikgaXMgb25lIG9mIGZvbGxvd2luZyBrZXlzOjxicj5cbiAgICAgICAgICogPGJyPjx0dD5pUGFkLCBOZXh1c1RhYmxldCwgR29vZ2xlVGFibGV0LCBTYW1zdW5nVGFibGV0LCBLaW5kbGUsIFN1cmZhY2VUYWJsZXQsXG4gICAgICAgICAqIEhQVGFibGV0LCBBc3VzVGFibGV0LCBCbGFja0JlcnJ5VGFibGV0LCBIVEN0YWJsZXQsIE1vdG9yb2xhVGFibGV0LCBOb29rVGFibGV0LFxuICAgICAgICAgKiBBY2VyVGFibGV0LCBUb3NoaWJhVGFibGV0LCBMR1RhYmxldCwgRnVqaXRzdVRhYmxldCwgUHJlc3RpZ2lvVGFibGV0LFxuICAgICAgICAgKiBMZW5vdm9UYWJsZXQsIERlbGxUYWJsZXQsIFlhcnZpa1RhYmxldCwgTWVkaW9uVGFibGV0LCBBcm5vdmFUYWJsZXQsXG4gICAgICAgICAqIEludGVuc29UYWJsZXQsIElSVVRhYmxldCwgTWVnYWZvblRhYmxldCwgRWJvZGFUYWJsZXQsIEFsbFZpZXdUYWJsZXQsXG4gICAgICAgICAqIEFyY2hvc1RhYmxldCwgQWlub2xUYWJsZXQsIE5va2lhTHVtaWFUYWJsZXQsIFNvbnlUYWJsZXQsIFBoaWxpcHNUYWJsZXQsXG4gICAgICAgICAqIEN1YmVUYWJsZXQsIENvYnlUYWJsZXQsIE1JRFRhYmxldCwgTVNJVGFibGV0LCBTTWlUVGFibGV0LCBSb2NrQ2hpcFRhYmxldCxcbiAgICAgICAgICogRmx5VGFibGV0LCBicVRhYmxldCwgSHVhd2VpVGFibGV0LCBOZWNUYWJsZXQsIFBhbnRlY2hUYWJsZXQsIEJyb25jaG9UYWJsZXQsXG4gICAgICAgICAqIFZlcnN1c1RhYmxldCwgWnluY1RhYmxldCwgUG9zaXRpdm9UYWJsZXQsIE5hYmlUYWJsZXQsIEtvYm9UYWJsZXQsIERhbmV3VGFibGV0LFxuICAgICAgICAgKiBUZXhldFRhYmxldCwgUGxheXN0YXRpb25UYWJsZXQsIFRyZWtzdG9yVGFibGV0LCBQeWxlQXVkaW9UYWJsZXQsIEFkdmFuVGFibGV0LFxuICAgICAgICAgKiBEYW55VGVjaFRhYmxldCwgR2FsYXBhZFRhYmxldCwgTWljcm9tYXhUYWJsZXQsIEthcmJvbm5UYWJsZXQsIEFsbEZpbmVUYWJsZXQsXG4gICAgICAgICAqIFBST1NDQU5UYWJsZXQsIFlPTkVTVGFibGV0LCBDaGFuZ0ppYVRhYmxldCwgR1VUYWJsZXQsIFBvaW50T2ZWaWV3VGFibGV0LFxuICAgICAgICAgKiBPdmVybWF4VGFibGV0LCBIQ0xUYWJsZXQsIERQU1RhYmxldCwgVmlzdHVyZVRhYmxldCwgQ3Jlc3RhVGFibGV0LFxuICAgICAgICAgKiBNZWRpYXRla1RhYmxldCwgQ29uY29yZGVUYWJsZXQsIEdvQ2xldmVyVGFibGV0LCBNb2RlY29tVGFibGV0LCBWb25pbm9UYWJsZXQsXG4gICAgICAgICAqIEVDU1RhYmxldCwgU3RvcmV4VGFibGV0LCBWb2RhZm9uZVRhYmxldCwgRXNzZW50aWVsQlRhYmxldCwgUm9zc01vb3JUYWJsZXQsXG4gICAgICAgICAqIGlNb2JpbGVUYWJsZXQsIFRvbGlub1RhYmxldCwgQXVkaW9Tb25pY1RhYmxldCwgQU1QRVRhYmxldCwgU2trVGFibGV0LFxuICAgICAgICAgKiBUZWNub1RhYmxldCwgSlhEVGFibGV0LCBpSm95VGFibGV0LCBGWDJUYWJsZXQsIFhvcm9UYWJsZXQsIFZpZXdzb25pY1RhYmxldCxcbiAgICAgICAgICogVmVyaXpvblRhYmxldCwgT2R5c1RhYmxldCwgQ2FwdGl2YVRhYmxldCwgSWNvbmJpdFRhYmxldCwgVGVjbGFzdFRhYmxldCxcbiAgICAgICAgICogT25kYVRhYmxldCwgSmF5dGVjaFRhYmxldCwgQmxhdXB1bmt0VGFibGV0LCBEaWdtYVRhYmxldCwgRXZvbGlvVGFibGV0LFxuICAgICAgICAgKiBMYXZhVGFibGV0LCBBb2NUYWJsZXQsIE1wbWFuVGFibGV0LCBDZWxrb25UYWJsZXQsIFdvbGRlclRhYmxldCwgTWVkaWFjb21UYWJsZXQsXG4gICAgICAgICAqIE1pVGFibGV0LCBOaWJpcnVUYWJsZXQsIE5leG9UYWJsZXQsIExlYWRlclRhYmxldCwgVWJpc2xhdGVUYWJsZXQsXG4gICAgICAgICAqIFBvY2tldEJvb2tUYWJsZXQsIEtvY2Fzb1RhYmxldCwgSGlzZW5zZVRhYmxldCwgSHVkbCwgVGVsc3RyYVRhYmxldCxcbiAgICAgICAgICogR2VuZXJpY1RhYmxldDwvdHQ+PGJyPlxuICAgICAgICAgKiA8YnI+XG4gICAgICAgICAqIElmIHRoZSBkZXZpY2UgaXMgbm90IGRldGVjdGVkIGJ5IHRoZSByZWd1bGFyIGV4cHJlc3Npb25zIGZyb20gTW9iaWxlLURldGVjdCwgYSB0ZXN0IGlzIG1hZGUgYWdhaW5zdFxuICAgICAgICAgKiB0aGUgcGF0dGVybnMgb2YgPGEgaHJlZj1cImh0dHA6Ly9kZXRlY3Rtb2JpbGVicm93c2Vycy5jb20vXCI+ZGV0ZWN0bW9iaWxlYnJvd3NlcnMuY29tPC9hPi4gSWYgdGhpcyB0ZXN0XG4gICAgICAgICAqIGlzIHBvc2l0aXZlLCBhIHZhbHVlIG9mIDxjb2RlPlVua25vd25UYWJsZXQ8L2NvZGU+IG9yIDxjb2RlPlVua25vd25Nb2JpbGU8L2NvZGU+IGlzIHJldHVybmVkLjxicj5cbiAgICAgICAgICogV2hlbiB1c2VkIGluIGJyb3dzZXIsIHRoZSBkZWNpc2lvbiB3aGV0aGVyIHBob25lIG9yIHRhYmxldCBpcyBtYWRlIGJhc2VkIG9uIDxjb2RlPnNjcmVlbi53aWR0aC9oZWlnaHQ8L2NvZGU+Ljxicj5cbiAgICAgICAgICogPGJyPlxuICAgICAgICAgKiBXaGVuIHVzZWQgc2VydmVyLXNpZGUgKG5vZGUuanMpLCB0aGVyZSBpcyBubyB3YXkgdG8gdGVsbCB0aGUgZGlmZmVyZW5jZSBiZXR3ZWVuIDxjb2RlPlVua25vd25UYWJsZXQ8L2NvZGU+XG4gICAgICAgICAqIGFuZCA8Y29kZT5Vbmtub3duTW9iaWxlPC9jb2RlPiwgc28geW91IHdpbGwgZ2V0IDxjb2RlPm51bGw8L2NvZGU+IGhlcmUsIHdoaWxlIHtAbGluayBNb2JpbGVEZXRlY3QjbW9iaWxlfVxuICAgICAgICAgKiB3aWxsIHJldHVybiA8Y29kZT5Vbmtub3duTW9iaWxlPC9jb2RlPi48YnI+XG4gICAgICAgICAqIEJlIGF3YXJlIHRoYXQgc2luY2UgdjEuMC4wIGluIHRoaXMgc3BlY2lhbCBjYXNlIHlvdSB3aWxsIGdldCA8Y29kZT5Vbmtub3duTW9iaWxlPC9jb2RlPiBvbmx5IGZvcjpcbiAgICAgICAgICoge0BsaW5rIE1vYmlsZURldGVjdCNtb2JpbGV9LCBub3QgZm9yIHtAbGluayBNb2JpbGVEZXRlY3QjcGhvbmV9IGFuZCB7QGxpbmsgTW9iaWxlRGV0ZWN0I3RhYmxldH0uXG4gICAgICAgICAqIEluIHZlcnNpb25zIGJlZm9yZSB2MS4wLjAgYWxsIDMgbWV0aG9kcyByZXR1cm5lZCA8Y29kZT5Vbmtub3duTW9iaWxlPC9jb2RlPiB3aGljaCB3YXMgdGVkaW91cyB0byB1c2UuXG4gICAgICAgICAqIDxicj5cbiAgICAgICAgICogSW4gbW9zdCBjYXNlcyB5b3Ugd2lsbCB1c2UgdGhlIHJldHVybiB2YWx1ZSBqdXN0IGFzIGEgYm9vbGVhbi5cbiAgICAgICAgICpcbiAgICAgICAgICogQHJldHVybnMge1N0cmluZ30gdGhlIGtleSBvZiB0aGUgdGFibGV0IGZhbWlseSBvciBwcm9kdWNlciwgZS5nLiBcIlNhbXN1bmdUYWJsZXRcIlxuICAgICAgICAgKiBAZnVuY3Rpb24gTW9iaWxlRGV0ZWN0I3RhYmxldFxuICAgICAgICAgKi9cbiAgICAgICAgdGFibGV0OiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICBpbXBsLnByZXBhcmVEZXRlY3Rpb25DYWNoZSh0aGlzLl9jYWNoZSwgdGhpcy51YSwgdGhpcy5tYXhQaG9uZVdpZHRoKTtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLl9jYWNoZS50YWJsZXQ7XG4gICAgICAgIH0sXG5cbiAgICAgICAgLyoqXG4gICAgICAgICAqIFJldHVybnMgdGhlIChmaXJzdCkgZGV0ZWN0ZWQgdXNlci1hZ2VudCBzdHJpbmcgb3IgPHR0Pm51bGw8L3R0Pi5cbiAgICAgICAgICogPGJyPlxuICAgICAgICAgKiBUaGUgcmV0dXJuZWQgdXNlci1hZ2VudCBpcyBvbmUgb2YgZm9sbG93aW5nIGtleXM6PGJyPlxuICAgICAgICAgKiA8YnI+PHR0PkNocm9tZSwgRG9sZmluLCBPcGVyYSwgU2t5ZmlyZSwgRWRnZSwgSUUsIEZpcmVmb3gsIEJvbHQsIFRlYVNoYXJrLCBCbGF6ZXIsXG4gICAgICAgICAqIFNhZmFyaSwgV2VDaGF0LCBVQ0Jyb3dzZXIsIGJhaWR1Ym94YXBwLCBiYWlkdWJyb3dzZXIsIERpaWdvQnJvd3NlciwgTWVyY3VyeSxcbiAgICAgICAgICogT2JpZ29Ccm93c2VyLCBOZXRGcm9udCwgR2VuZXJpY0Jyb3dzZXIsIFBhbGVNb29uPC90dD48YnI+XG4gICAgICAgICAqIDxicj5cbiAgICAgICAgICogSW4gbW9zdCBjYXNlcyBjYWxsaW5nIHtAbGluayBNb2JpbGVEZXRlY3QjdXNlckFnZW50fSB3aWxsIGJlIHN1ZmZpY2llbnQuIEJ1dCB0aGVyZSBhcmUgcmFyZVxuICAgICAgICAgKiBjYXNlcyB3aGVyZSBhIG1vYmlsZSBkZXZpY2UgcHJldGVuZHMgdG8gYmUgbW9yZSB0aGFuIG9uZSBwYXJ0aWN1bGFyIGJyb3dzZXIuIFlvdSBjYW4gZ2V0IHRoZVxuICAgICAgICAgKiBsaXN0IG9mIGFsbCBtYXRjaGVzIHdpdGgge0BsaW5rIE1vYmlsZURldGVjdCN1c2VyQWdlbnRzfSBvciBjaGVjayBmb3IgYSBwYXJ0aWN1bGFyIHZhbHVlIGJ5XG4gICAgICAgICAqIHByb3ZpZGluZyBvbmUgb2YgdGhlIGRlZmluZWQga2V5cyBhcyBmaXJzdCBhcmd1bWVudCB0byB7QGxpbmsgTW9iaWxlRGV0ZWN0I2lzfS5cbiAgICAgICAgICpcbiAgICAgICAgICogQHJldHVybnMge1N0cmluZ30gdGhlIGtleSBmb3IgdGhlIGRldGVjdGVkIHVzZXItYWdlbnQgb3IgPHR0Pm51bGw8L3R0PlxuICAgICAgICAgKiBAZnVuY3Rpb24gTW9iaWxlRGV0ZWN0I3VzZXJBZ2VudFxuICAgICAgICAgKi9cbiAgICAgICAgdXNlckFnZW50OiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICBpZiAodGhpcy5fY2FjaGUudXNlckFnZW50ID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgICAgICB0aGlzLl9jYWNoZS51c2VyQWdlbnQgPSBpbXBsLmZpbmRNYXRjaChpbXBsLm1vYmlsZURldGVjdFJ1bGVzLnVhcywgdGhpcy51YSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gdGhpcy5fY2FjaGUudXNlckFnZW50O1xuICAgICAgICB9LFxuXG4gICAgICAgIC8qKlxuICAgICAgICAgKiBSZXR1cm5zIGFsbCBkZXRlY3RlZCB1c2VyLWFnZW50IHN0cmluZ3MuXG4gICAgICAgICAqIDxicj5cbiAgICAgICAgICogVGhlIGFycmF5IGlzIGVtcHR5IG9yIGNvbnRhaW5zIG9uZSBvciBtb3JlIG9mIGZvbGxvd2luZyBrZXlzOjxicj5cbiAgICAgICAgICogPGJyPjx0dD5DaHJvbWUsIERvbGZpbiwgT3BlcmEsIFNreWZpcmUsIEVkZ2UsIElFLCBGaXJlZm94LCBCb2x0LCBUZWFTaGFyaywgQmxhemVyLFxuICAgICAgICAgKiBTYWZhcmksIFdlQ2hhdCwgVUNCcm93c2VyLCBiYWlkdWJveGFwcCwgYmFpZHVicm93c2VyLCBEaWlnb0Jyb3dzZXIsIE1lcmN1cnksXG4gICAgICAgICAqIE9iaWdvQnJvd3NlciwgTmV0RnJvbnQsIEdlbmVyaWNCcm93c2VyLCBQYWxlTW9vbjwvdHQ+PGJyPlxuICAgICAgICAgKiA8YnI+XG4gICAgICAgICAqIEluIG1vc3QgY2FzZXMgY2FsbGluZyB7QGxpbmsgTW9iaWxlRGV0ZWN0I3VzZXJBZ2VudH0gd2lsbCBiZSBzdWZmaWNpZW50LiBCdXQgdGhlcmUgYXJlIHJhcmVcbiAgICAgICAgICogY2FzZXMgd2hlcmUgYSBtb2JpbGUgZGV2aWNlIHByZXRlbmRzIHRvIGJlIG1vcmUgdGhhbiBvbmUgcGFydGljdWxhciBicm93c2VyLiBZb3UgY2FuIGdldCB0aGVcbiAgICAgICAgICogbGlzdCBvZiBhbGwgbWF0Y2hlcyB3aXRoIHtAbGluayBNb2JpbGVEZXRlY3QjdXNlckFnZW50c30gb3IgY2hlY2sgZm9yIGEgcGFydGljdWxhciB2YWx1ZSBieVxuICAgICAgICAgKiBwcm92aWRpbmcgb25lIG9mIHRoZSBkZWZpbmVkIGtleXMgYXMgZmlyc3QgYXJndW1lbnQgdG8ge0BsaW5rIE1vYmlsZURldGVjdCNpc30uXG4gICAgICAgICAqXG4gICAgICAgICAqIEByZXR1cm5zIHtBcnJheX0gdGhlIGFycmF5IG9mIGRldGVjdGVkIHVzZXItYWdlbnQga2V5cyBvciA8dHQ+W108L3R0PlxuICAgICAgICAgKiBAZnVuY3Rpb24gTW9iaWxlRGV0ZWN0I3VzZXJBZ2VudHNcbiAgICAgICAgICovXG4gICAgICAgIHVzZXJBZ2VudHM6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIGlmICh0aGlzLl9jYWNoZS51c2VyQWdlbnRzID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgICAgICB0aGlzLl9jYWNoZS51c2VyQWdlbnRzID0gaW1wbC5maW5kTWF0Y2hlcyhpbXBsLm1vYmlsZURldGVjdFJ1bGVzLnVhcywgdGhpcy51YSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gdGhpcy5fY2FjaGUudXNlckFnZW50cztcbiAgICAgICAgfSxcblxuICAgICAgICAvKipcbiAgICAgICAgICogUmV0dXJucyB0aGUgZGV0ZWN0ZWQgb3BlcmF0aW5nIHN5c3RlbSBzdHJpbmcgb3IgPHR0Pm51bGw8L3R0Pi5cbiAgICAgICAgICogPGJyPlxuICAgICAgICAgKiBUaGUgb3BlcmF0aW5nIHN5c3RlbSBpcyBvbmUgb2YgZm9sbG93aW5nIGtleXM6PGJyPlxuICAgICAgICAgKiA8YnI+PHR0PkFuZHJvaWRPUywgQmxhY2tCZXJyeU9TLCBQYWxtT1MsIFN5bWJpYW5PUywgV2luZG93c01vYmlsZU9TLCBXaW5kb3dzUGhvbmVPUyxcbiAgICAgICAgICogaU9TLCBpUGFkT1MsIE1lZUdvT1MsIE1hZW1vT1MsIEphdmFPUywgd2ViT1MsIGJhZGFPUywgQlJFV09TPC90dD48YnI+XG4gICAgICAgICAqXG4gICAgICAgICAqIEByZXR1cm5zIHtTdHJpbmd9IHRoZSBrZXkgZm9yIHRoZSBkZXRlY3RlZCBvcGVyYXRpbmcgc3lzdGVtLlxuICAgICAgICAgKiBAZnVuY3Rpb24gTW9iaWxlRGV0ZWN0I29zXG4gICAgICAgICAqL1xuICAgICAgICBvczogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgaWYgKHRoaXMuX2NhY2hlLm9zID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgICAgICB0aGlzLl9jYWNoZS5vcyA9IGltcGwuZGV0ZWN0T1ModGhpcy51YSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gdGhpcy5fY2FjaGUub3M7XG4gICAgICAgIH0sXG5cbiAgICAgICAgLyoqXG4gICAgICAgICAqIEdldCB0aGUgdmVyc2lvbiAoYXMgTnVtYmVyKSBvZiB0aGUgZ2l2ZW4gcHJvcGVydHkgaW4gdGhlIFVzZXItQWdlbnQuXG4gICAgICAgICAqIDxicj5cbiAgICAgICAgICogV2lsbCByZXR1cm4gYSBmbG9hdCBudW1iZXIuIChlZy4gMl8wIHdpbGwgcmV0dXJuIDIuMCwgNC4zLjEgd2lsbCByZXR1cm4gNC4zMSlcbiAgICAgICAgICpcbiAgICAgICAgICogQHBhcmFtIHtTdHJpbmd9IGtleSBhIGtleSBkZWZpbmluZyBhIHRoaW5nIHdoaWNoIGhhcyBhIHZlcnNpb24uPGJyPlxuICAgICAgICAgKiAgICAgICAgWW91IGNhbiB1c2Ugb25lIG9mIGZvbGxvd2luZyBrZXlzOjxicj5cbiAgICAgICAgICogPGJyPjx0dD5Nb2JpbGUsIEJ1aWxkLCBWZXJzaW9uLCBWZW5kb3JJRCwgaVBhZCwgaVBob25lLCBpUG9kLCBLaW5kbGUsIENocm9tZSwgQ29hc3QsXG4gICAgICAgICAqIERvbGZpbiwgRmlyZWZveCwgRmVubmVjLCBFZGdlLCBJRSwgTmV0RnJvbnQsIE5va2lhQnJvd3NlciwgT3BlcmEsIE9wZXJhIE1pbmksXG4gICAgICAgICAqIE9wZXJhIE1vYmksIFVDQnJvd3NlciwgTVFRQnJvd3NlciwgTWljcm9NZXNzZW5nZXIsIGJhaWR1Ym94YXBwLCBiYWlkdWJyb3dzZXIsXG4gICAgICAgICAqIFNhbXN1bmdCcm93c2VyLCBJcm9uLCBTYWZhcmksIFNreWZpcmUsIFRpemVuLCBXZWJraXQsIFBhbGVNb29uLCBHZWNrbywgVHJpZGVudCxcbiAgICAgICAgICogUHJlc3RvLCBHb2FubmEsIGlPUywgQW5kcm9pZCwgQmxhY2tCZXJyeSwgQlJFVywgSmF2YSwgV2luZG93cyBQaG9uZSBPUywgV2luZG93c1xuICAgICAgICAgKiBQaG9uZSwgV2luZG93cyBDRSwgV2luZG93cyBOVCwgU3ltYmlhbiwgd2ViT1M8L3R0Pjxicj5cbiAgICAgICAgICpcbiAgICAgICAgICogQHJldHVybnMge051bWJlcn0gdGhlIHZlcnNpb24gYXMgZmxvYXQgb3IgPHR0Pk5hTjwvdHQ+IGlmIFVzZXItQWdlbnQgZG9lc24ndCBjb250YWluIHRoaXMgdmVyc2lvbi5cbiAgICAgICAgICogICAgICAgICAgQmUgY2FyZWZ1bCB3aGVuIGNvbXBhcmluZyB0aGlzIHZhbHVlIHdpdGggJz09JyBvcGVyYXRvciFcbiAgICAgICAgICogQGZ1bmN0aW9uIE1vYmlsZURldGVjdCN2ZXJzaW9uXG4gICAgICAgICAqL1xuICAgICAgICB2ZXJzaW9uOiBmdW5jdGlvbiAoa2V5KSB7XG4gICAgICAgICAgICByZXR1cm4gaW1wbC5nZXRWZXJzaW9uKGtleSwgdGhpcy51YSk7XG4gICAgICAgIH0sXG5cbiAgICAgICAgLyoqXG4gICAgICAgICAqIEdldCB0aGUgdmVyc2lvbiAoYXMgU3RyaW5nKSBvZiB0aGUgZ2l2ZW4gcHJvcGVydHkgaW4gdGhlIFVzZXItQWdlbnQuXG4gICAgICAgICAqIDxicj5cbiAgICAgICAgICpcbiAgICAgICAgICogQHBhcmFtIHtTdHJpbmd9IGtleSBhIGtleSBkZWZpbmluZyBhIHRoaW5nIHdoaWNoIGhhcyBhIHZlcnNpb24uPGJyPlxuICAgICAgICAgKiAgICAgICAgWW91IGNhbiB1c2Ugb25lIG9mIGZvbGxvd2luZyBrZXlzOjxicj5cbiAgICAgICAgICogPGJyPjx0dD5Nb2JpbGUsIEJ1aWxkLCBWZXJzaW9uLCBWZW5kb3JJRCwgaVBhZCwgaVBob25lLCBpUG9kLCBLaW5kbGUsIENocm9tZSwgQ29hc3QsXG4gICAgICAgICAqIERvbGZpbiwgRmlyZWZveCwgRmVubmVjLCBFZGdlLCBJRSwgTmV0RnJvbnQsIE5va2lhQnJvd3NlciwgT3BlcmEsIE9wZXJhIE1pbmksXG4gICAgICAgICAqIE9wZXJhIE1vYmksIFVDQnJvd3NlciwgTVFRQnJvd3NlciwgTWljcm9NZXNzZW5nZXIsIGJhaWR1Ym94YXBwLCBiYWlkdWJyb3dzZXIsXG4gICAgICAgICAqIFNhbXN1bmdCcm93c2VyLCBJcm9uLCBTYWZhcmksIFNreWZpcmUsIFRpemVuLCBXZWJraXQsIFBhbGVNb29uLCBHZWNrbywgVHJpZGVudCxcbiAgICAgICAgICogUHJlc3RvLCBHb2FubmEsIGlPUywgQW5kcm9pZCwgQmxhY2tCZXJyeSwgQlJFVywgSmF2YSwgV2luZG93cyBQaG9uZSBPUywgV2luZG93c1xuICAgICAgICAgKiBQaG9uZSwgV2luZG93cyBDRSwgV2luZG93cyBOVCwgU3ltYmlhbiwgd2ViT1M8L3R0Pjxicj5cbiAgICAgICAgICpcbiAgICAgICAgICogQHJldHVybnMge1N0cmluZ30gdGhlIFwicmF3XCIgdmVyc2lvbiBhcyBTdHJpbmcgb3IgPHR0Pm51bGw8L3R0PiBpZiBVc2VyLUFnZW50IGRvZXNuJ3QgY29udGFpbiB0aGlzIHZlcnNpb24uXG4gICAgICAgICAqXG4gICAgICAgICAqIEBmdW5jdGlvbiBNb2JpbGVEZXRlY3QjdmVyc2lvblN0clxuICAgICAgICAgKi9cbiAgICAgICAgdmVyc2lvblN0cjogZnVuY3Rpb24gKGtleSkge1xuICAgICAgICAgICAgcmV0dXJuIGltcGwuZ2V0VmVyc2lvblN0cihrZXksIHRoaXMudWEpO1xuICAgICAgICB9LFxuXG4gICAgICAgIC8qKlxuICAgICAgICAgKiBHbG9iYWwgdGVzdCBrZXkgYWdhaW5zdCB1c2VyQWdlbnQsIG9zLCBwaG9uZSwgdGFibGV0IGFuZCBzb21lIG90aGVyIHByb3BlcnRpZXMgb2YgdXNlckFnZW50IHN0cmluZy5cbiAgICAgICAgICpcbiAgICAgICAgICogQHBhcmFtIHtTdHJpbmd9IGtleSB0aGUga2V5IChjYXNlLWluc2Vuc2l0aXZlKSBvZiBhIHVzZXJBZ2VudCwgYW4gb3BlcmF0aW5nIHN5c3RlbSwgcGhvbmUgb3JcbiAgICAgICAgICogICAgICAgIHRhYmxldCBmYW1pbHkuPGJyPlxuICAgICAgICAgKiAgICAgICAgRm9yIGEgY29tcGxldGUgbGlzdCBvZiBwb3NzaWJsZSB2YWx1ZXMsIHNlZSB7QGxpbmsgTW9iaWxlRGV0ZWN0I3VzZXJBZ2VudH0sXG4gICAgICAgICAqICAgICAgICB7QGxpbmsgTW9iaWxlRGV0ZWN0I29zfSwge0BsaW5rIE1vYmlsZURldGVjdCNwaG9uZX0sIHtAbGluayBNb2JpbGVEZXRlY3QjdGFibGV0fS48YnI+XG4gICAgICAgICAqICAgICAgICBBZGRpdGlvbmFsbHkgeW91IGhhdmUgZm9sbG93aW5nIGtleXM6PGJyPlxuICAgICAgICAgKiA8YnI+PHR0PkJvdCwgTW9iaWxlQm90LCBEZXNrdG9wTW9kZSwgVFYsIFdlYktpdCwgQ29uc29sZSwgV2F0Y2g8L3R0Pjxicj5cbiAgICAgICAgICpcbiAgICAgICAgICogQHJldHVybnMge2Jvb2xlYW59IDx0dD50cnVlPC90dD4gd2hlbiB0aGUgZ2l2ZW4ga2V5IGlzIG9uZSBvZiB0aGUgZGVmaW5lZCBrZXlzIG9mIHVzZXJBZ2VudCwgb3MsIHBob25lLFxuICAgICAgICAgKiAgICAgICAgICAgICAgICAgICAgdGFibGV0IG9yIG9uZSBvZiB0aGUgbGlzdGVkIGFkZGl0aW9uYWwga2V5cywgb3RoZXJ3aXNlIDx0dD5mYWxzZTwvdHQ+XG4gICAgICAgICAqIEBmdW5jdGlvbiBNb2JpbGVEZXRlY3QjaXNcbiAgICAgICAgICovXG4gICAgICAgIGlzOiBmdW5jdGlvbiAoa2V5KSB7XG4gICAgICAgICAgICByZXR1cm4gY29udGFpbnNJQyh0aGlzLnVzZXJBZ2VudHMoKSwga2V5KSB8fFxuICAgICAgICAgICAgICAgICAgIGVxdWFsSUMoa2V5LCB0aGlzLm9zKCkpIHx8XG4gICAgICAgICAgICAgICAgICAgZXF1YWxJQyhrZXksIHRoaXMucGhvbmUoKSkgfHxcbiAgICAgICAgICAgICAgICAgICBlcXVhbElDKGtleSwgdGhpcy50YWJsZXQoKSkgfHxcbiAgICAgICAgICAgICAgICAgICBjb250YWluc0lDKGltcGwuZmluZE1hdGNoZXMoaW1wbC5tb2JpbGVEZXRlY3RSdWxlcy51dGlscywgdGhpcy51YSksIGtleSk7XG4gICAgICAgIH0sXG5cbiAgICAgICAgLyoqXG4gICAgICAgICAqIERvIGEgcXVpY2sgdGVzdCBhZ2FpbnN0IG5hdmlnYXRvcjo6dXNlckFnZW50LlxuICAgICAgICAgKlxuICAgICAgICAgKiBAcGFyYW0ge1N0cmluZ3xSZWdFeHB9IHBhdHRlcm4gdGhlIHBhdHRlcm4sIGVpdGhlciBhcyBTdHJpbmcgb3IgUmVnRXhwXG4gICAgICAgICAqICAgICAgICAgICAgICAgICAgICAgICAgKGEgc3RyaW5nIHdpbGwgYmUgY29udmVydGVkIHRvIGEgY2FzZS1pbnNlbnNpdGl2ZSBSZWdFeHApLlxuICAgICAgICAgKiBAcmV0dXJucyB7Ym9vbGVhbn0gPHR0PnRydWU8L3R0PiB3aGVuIHRoZSBwYXR0ZXJuIG1hdGNoZXMsIG90aGVyd2lzZSA8dHQ+ZmFsc2U8L3R0PlxuICAgICAgICAgKiBAZnVuY3Rpb24gTW9iaWxlRGV0ZWN0I21hdGNoXG4gICAgICAgICAqL1xuICAgICAgICBtYXRjaDogZnVuY3Rpb24gKHBhdHRlcm4pIHtcbiAgICAgICAgICAgIGlmICghKHBhdHRlcm4gaW5zdGFuY2VvZiBSZWdFeHApKSB7XG4gICAgICAgICAgICAgICAgcGF0dGVybiA9IG5ldyBSZWdFeHAocGF0dGVybiwgJ2knKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiBwYXR0ZXJuLnRlc3QodGhpcy51YSk7XG4gICAgICAgIH0sXG5cbiAgICAgICAgLyoqXG4gICAgICAgICAqIENoZWNrcyB3aGV0aGVyIHRoZSBtb2JpbGUgZGV2aWNlIGNhbiBiZSBjb25zaWRlcmVkIGFzIHBob25lIHJlZ2FyZGluZyA8Y29kZT5zY3JlZW4ud2lkdGg8L2NvZGU+LlxuICAgICAgICAgKiA8YnI+XG4gICAgICAgICAqIE9idmlvdXNseSB0aGlzIG1ldGhvZCBtYWtlcyBzZW5zZSBpbiBicm93c2VyIGVudmlyb25tZW50cyBvbmx5IChub3QgZm9yIE5vZGUuanMpIVxuICAgICAgICAgKiBAcGFyYW0ge251bWJlcn0gW21heFBob25lV2lkdGhdIHRoZSBtYXhpbXVtIGxvZ2ljYWwgcGl4ZWxzIChha2EuIENTUy1waXhlbHMpIHRvIGJlIGNvbnNpZGVyZWQgYXMgcGhvbmUuPGJyPlxuICAgICAgICAgKiAgICAgICAgVGhlIGFyZ3VtZW50IGlzIG9wdGlvbmFsIGFuZCBpZiBub3QgcHJlc2VudCBvciBmYWxzeSwgdGhlIHZhbHVlIG9mIHRoZSBjb25zdHJ1Y3RvciBpcyB0YWtlbi5cbiAgICAgICAgICogQHJldHVybnMge2Jvb2xlYW58dW5kZWZpbmVkfSA8Y29kZT51bmRlZmluZWQ8L2NvZGU+IGlmIHNjcmVlbiBzaXplIHdhc24ndCBkZXRlY3RhYmxlLCBlbHNlIDxjb2RlPnRydWU8L2NvZGU+XG4gICAgICAgICAqICAgICAgICAgIHdoZW4gc2NyZWVuLndpZHRoIGlzIGxlc3Mgb3IgZXF1YWwgdG8gbWF4UGhvbmVXaWR0aCwgb3RoZXJ3aXNlIDxjb2RlPmZhbHNlPC9jb2RlPi48YnI+XG4gICAgICAgICAqICAgICAgICAgIFdpbGwgYWx3YXlzIHJldHVybiA8Y29kZT51bmRlZmluZWQ8L2NvZGU+IHNlcnZlci1zaWRlLlxuICAgICAgICAgKi9cbiAgICAgICAgaXNQaG9uZVNpemVkOiBmdW5jdGlvbiAobWF4UGhvbmVXaWR0aCkge1xuICAgICAgICAgICAgcmV0dXJuIE1vYmlsZURldGVjdC5pc1Bob25lU2l6ZWQobWF4UGhvbmVXaWR0aCB8fCB0aGlzLm1heFBob25lV2lkdGgpO1xuICAgICAgICB9LFxuXG4gICAgICAgIC8qKlxuICAgICAgICAgKiBSZXR1cm5zIHRoZSBtb2JpbGUgZ3JhZGUgKCdBJywgJ0InLCAnQycpLlxuICAgICAgICAgKlxuICAgICAgICAgKiBAcmV0dXJucyB7U3RyaW5nfSBvbmUgb2YgdGhlIG1vYmlsZSBncmFkZXMgKCdBJywgJ0InLCAnQycpLlxuICAgICAgICAgKiBAZnVuY3Rpb24gTW9iaWxlRGV0ZWN0I21vYmlsZUdyYWRlXG4gICAgICAgICAqL1xuICAgICAgICBtb2JpbGVHcmFkZTogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgaWYgKHRoaXMuX2NhY2hlLmdyYWRlID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgICAgICB0aGlzLl9jYWNoZS5ncmFkZSA9IGltcGwubW9iaWxlR3JhZGUodGhpcyk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gdGhpcy5fY2FjaGUuZ3JhZGU7XG4gICAgICAgIH1cbiAgICB9O1xuXG4gICAgLy8gZW52aXJvbm1lbnQtZGVwZW5kZW50XG4gICAgaWYgKHR5cGVvZiB3aW5kb3cgIT09ICd1bmRlZmluZWQnICYmIHdpbmRvdy5zY3JlZW4pIHtcbiAgICAgICAgTW9iaWxlRGV0ZWN0LmlzUGhvbmVTaXplZCA9IGZ1bmN0aW9uIChtYXhQaG9uZVdpZHRoKSB7XG4gICAgICAgICAgICByZXR1cm4gbWF4UGhvbmVXaWR0aCA8IDAgPyB1bmRlZmluZWQgOiBpbXBsLmdldERldmljZVNtYWxsZXJTaWRlKCkgPD0gbWF4UGhvbmVXaWR0aDtcbiAgICAgICAgfTtcbiAgICB9IGVsc2Uge1xuICAgICAgICBNb2JpbGVEZXRlY3QuaXNQaG9uZVNpemVkID0gZnVuY3Rpb24gKCkge307XG4gICAgfVxuXG4gICAgLy8gc2hvdWxkIG5vdCBiZSByZXBsYWNlZCBieSBhIGNvbXBsZXRlbHkgbmV3IG9iamVjdCAtIGp1c3Qgb3ZlcndyaXRlIGV4aXN0aW5nIG1ldGhvZHNcbiAgICBNb2JpbGVEZXRlY3QuX2ltcGwgPSBpbXBsO1xuICAgIFxuICAgIE1vYmlsZURldGVjdC52ZXJzaW9uID0gJzEuNC40IDIwMTktMDktMjEnO1xuXG4gICAgcmV0dXJuIE1vYmlsZURldGVjdDtcbn0pOyAvLyBlbmQgb2YgY2FsbCBvZiBkZWZpbmUoKVxufSkoKGZ1bmN0aW9uICh1bmRlZmluZWQpIHtcbiAgICBpZiAodHlwZW9mIG1vZHVsZSAhPT0gJ3VuZGVmaW5lZCcgJiYgbW9kdWxlLmV4cG9ydHMpIHtcbiAgICAgICAgcmV0dXJuIGZ1bmN0aW9uIChmYWN0b3J5KSB7IG1vZHVsZS5leHBvcnRzID0gZmFjdG9yeSgpOyB9O1xuICAgIH0gZWxzZSBpZiAodHlwZW9mIGRlZmluZSA9PT0gJ2Z1bmN0aW9uJyAmJiBkZWZpbmUuYW1kKSB7XG4gICAgICAgIHJldHVybiBkZWZpbmU7XG4gICAgfSBlbHNlIGlmICh0eXBlb2Ygd2luZG93ICE9PSAndW5kZWZpbmVkJykge1xuICAgICAgICByZXR1cm4gZnVuY3Rpb24gKGZhY3RvcnkpIHsgd2luZG93Lk1vYmlsZURldGVjdCA9IGZhY3RvcnkoKTsgfTtcbiAgICB9IGVsc2Uge1xuICAgICAgICAvLyBwbGVhc2UgZmlsZSBhIGJ1ZyBpZiB5b3UgZ2V0IHRoaXMgZXJyb3IhXG4gICAgICAgIHRocm93IG5ldyBFcnJvcigndW5rbm93biBlbnZpcm9ubWVudCcpO1xuICAgIH1cbn0pKCkpOyIsImNvbnN0IGNlcnRpZmljYXRpb25Gb3JtID0gJCgnLmNlcnRpZmljYXRpb25fX2Zvcm0nKTtcclxuXHJcbmNlcnRpZmljYXRpb25Gb3JtLnN1Ym1pdChlID0+IHtcclxuXHRlLnByZXZlbnREZWZhdWx0KCk7XHJcblxyXG5cdGxldCBwZXJzb25OYW1lID0gZS5jdXJyZW50VGFyZ2V0LmVsZW1lbnRzLm5hbWUudmFsdWU7XHJcblx0bGV0IHBlcnNvblN1cm5hbWUgPSBlLmN1cnJlbnRUYXJnZXQuZWxlbWVudHMuc3VybmFtZS52YWx1ZTtcclxuXHRsZXQgc3BlY2lhbHRpZXNBcnJheSA9IGUuY3VycmVudFRhcmdldC5lbGVtZW50cy5mb3JtU3BlY2lhbHRpZXM7XHJcblx0bGV0IHNwZWNpYWx0aWVzTmFtZUFycmF5ID0gW107XHJcblxyXG5cdHNwZWNpYWx0aWVzQXJyYXkuZm9yRWFjaChlbGVtZW50ID0+IHtcclxuXHRcdGlmIChlbGVtZW50LmNoZWNrZWQpIHtcclxuXHRcdFx0c3BlY2lhbHRpZXNOYW1lQXJyYXkucHVzaCgkKGVsZW1lbnQpLnNpYmxpbmdzKCdzcGFuJylbMF0ub3V0ZXJUZXh0KTtcclxuXHRcdH1cclxuXHR9KTtcclxuXHJcblx0c2V0U2VydGlnaWNhdGUocGVyc29uTmFtZSwgcGVyc29uU3VybmFtZSwgc3BlY2lhbHRpZXNOYW1lQXJyYXkpO1xyXG59KVxyXG5cclxuZnVuY3Rpb24gc2V0U2VydGlnaWNhdGUobmFtZSwgc3VybmFtZSwgc3BlY2lhbHRpZXMpIHtcclxuXHRpZiAobG9jYWxTdG9yYWdlLmdldEl0ZW0oJ21yY29pbnMnKSA8IDYwMCkge1xyXG5cdFx0YWxlcnQoJ9Cd0LXQtNC+0YHRgtCw0YLQvtGH0L3QviBNUkNvaW5zLiDQn9GA0L7QudC00LjRgtC1IDMg0LvRjtCx0YvQtSDQuNCz0YDRiywg0YfRgtC+0LHRiyDQv9C+0LvRg9GH0LjRgtGMINGB0LXRgNGC0LjRhNC40LrQsNGCJyk7XHJcblx0XHRyZXR1cm47XHJcblx0fVxyXG5cclxuXHRjb25zdCB3aW5kb3dJbm5lcldpZHRoID0gd2luZG93LmlubmVyV2lkdGg7XHJcblxyXG5cdGlmICh3aW5kb3dJbm5lcldpZHRoIDw9IDEwMjQpIHtcclxuXHRcdGNvbnN0IG1vZGFsID0gJCgnI2NlcnRpZmljYXRlX19tb2RhbCcpO1xyXG5cdFx0Y29uc3QgbW9kYWxDb250ZW50ID0gbW9kYWwuZmluZCgnLm92ZXJsYXlfX2NvbnRlbnQnKTtcclxuXHJcblx0XHRjb25zdCBzZXJ0aWZpY2F0ZU5hbWUgPSBtb2RhbC5maW5kKCcuY2VydGlmaWNhdGVfX25hbWUnKTtcclxuXHRcdGNvbnN0IHNlcnRpZmljYXRlU3VybmFtZSA9IG1vZGFsLmZpbmQoJy5jZXJ0aWZpY2F0ZV9fc3VybmFtZScpO1xyXG5cdFx0Y29uc3Qgc2VydGlmaWNhdGVTcGVjaWFsdGllcyA9IG1vZGFsLmZpbmQoJy5jZXJ0aWZpY2F0ZV9fc3BlY2lhbHRpZXMtbGlzdCcpO1xyXG5cclxuXHRcdHNlcnRpZmljYXRlU3BlY2lhbHRpZXMuZW1wdHkoKTtcclxuXHJcblx0XHRzZXJ0aWZpY2F0ZU5hbWVbMF0ubGFzdEVsZW1lbnRDaGlsZC50ZXh0Q29udGVudCA9IG5hbWU7XHJcblx0XHRzZXJ0aWZpY2F0ZVN1cm5hbWVbMF0ubGFzdEVsZW1lbnRDaGlsZC50ZXh0Q29udGVudCA9IHN1cm5hbWU7XHJcblx0XHRzcGVjaWFsdGllcy5mb3JFYWNoKGVsID0+IHtcclxuXHRcdFx0bGV0IGxpID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImxpXCIpO1xyXG5cdFx0XHRsaS50ZXh0Q29udGVudCA9IGVsO1xyXG5cdFx0XHRzZXJ0aWZpY2F0ZVNwZWNpYWx0aWVzLmFwcGVuZChsaSk7XHJcblx0XHR9KVxyXG5cclxuXHRcdG1vZGFsLmNzcygnZGlzcGxheScsICdmbGV4Jyk7XHJcblx0XHRtb2RhbENvbnRlbnQuc3RvcCh0cnVlLCBmYWxzZSkuYW5pbWF0ZSh7XHJcblx0XHRcdCd0b3AnOiAnLTIlJ1xyXG5cdFx0fSwgNDAwKS5hbmltYXRlKHtcclxuXHRcdFx0J3RvcCc6ICcwJ1xyXG5cdFx0fSwgMTAwKTtcclxuXHRcdG1vZGFsLnN0b3AodHJ1ZSwgZmFsc2UpLmFuaW1hdGUoe1xyXG5cdFx0XHQnb3BhY2l0eSc6ICcxJ1xyXG5cdFx0fSwgMzAwKTtcclxuXHRcclxuXHRcdHdhc1Njcm9sbC0tO1xyXG5cclxuXHRcdHJldHVybjtcclxuXHR9XHJcblxyXG5cdGNvbnN0IHNlcnRpZmljYXRlTmFtZSA9ICQoJy5jZXJ0aWZpY2F0ZV9fbmFtZScpO1xyXG5cdGNvbnN0IHNlcnRpZmljYXRlU3VybmFtZSA9ICQoJy5jZXJ0aWZpY2F0ZV9fc3VybmFtZScpO1xyXG5cdGNvbnN0IHNlcnRpZmljYXRlU3BlY2lhbHRpZXMgPSAkKCcuY2VydGlmaWNhdGVfX3NwZWNpYWx0aWVzLWxpc3QnKTtcclxuXHJcblx0c2VydGlmaWNhdGVTcGVjaWFsdGllcy5lbXB0eSgpO1xyXG5cclxuXHRzZXJ0aWZpY2F0ZU5hbWVbMF0ubGFzdEVsZW1lbnRDaGlsZC50ZXh0Q29udGVudCA9IG5hbWU7XHJcblx0c2VydGlmaWNhdGVTdXJuYW1lWzBdLmxhc3RFbGVtZW50Q2hpbGQudGV4dENvbnRlbnQgPSBzdXJuYW1lO1xyXG5cdHNwZWNpYWx0aWVzLmZvckVhY2goZWwgPT4ge1xyXG5cdFx0bGV0IGxpID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImxpXCIpO1xyXG5cdFx0bGkudGV4dENvbnRlbnQgPSBlbDtcclxuXHRcdHNlcnRpZmljYXRlU3BlY2lhbHRpZXMuYXBwZW5kKGxpKTtcclxuXHR9KVxyXG59XHJcblxyXG4kKCcub3ZlcmxheS1jZXJ0aWZpY2F0ZV9fYnRuJykuY2xpY2soKCkgPT4ge1xyXG5cdGNvbnN0IG1vZGFsID0gJCgnI2NlcnRpZmljYXRlX19tb2RhbCcpO1xyXG5cdGNvbnN0IG1vZGFsQ29udGVudCA9IG1vZGFsLmZpbmQoJy5vdmVybGF5X19jb250ZW50Jyk7XHJcblxyXG5cdG1vZGFsQ29udGVudC5zdG9wKHRydWUsIGZhbHNlKS5hbmltYXRlKHtcclxuXHRcdCd0b3AnOiAnLTIlJ1xyXG5cdH0sIDIwMCkuYW5pbWF0ZSh7XHJcblx0XHQndG9wJzogJzEwMCUnXHJcblx0fSwgMzAwKTtcclxuXHRtb2RhbC5zdG9wKHRydWUsIGZhbHNlKS5hbmltYXRlKHtcclxuXHRcdCdvcGFjaXR5JzogJzAnXHJcblx0fSwgNTAwKTtcclxuXHRzZXRUaW1lb3V0KCgpID0+IHtcclxuXHRcdG1vZGFsLmNzcygnZGlzcGxheScsICdub25lJyk7XHJcblx0fSwgNTAwKTtcclxuXHJcblx0d2FzU2Nyb2xsKys7XHJcbn0pIiwiY29uc3QgY29sb3JzID0ge1xyXG5cdGdyZWVuOiBbJzRDRTYzNicsICcxMzk5M0MnXSxcclxuXHRkYXJrR3JlZW46IFsnMjk4QjQxJywgJzIyNUU0MSddLFxyXG5cdHdoaXRlOiBbJ0Q5RTNGMScsICc4RkEwQzUnXSxcclxuXHRwdXJwbGU6IFsnNzk0MUMzJywgJzRDMjc4OSddLFxyXG5cdG9yYW5nZTogWydGMDhBMUUnLCAnQkI1MDI1J10sXHJcblx0ZGFya0JsdWU6IFsnMkE0M0Q2JywgJzIxMkM5OSddLFxyXG5cdGJsdWU6IFsnNEFGRERGJywgJzM1QjNDNSddLFxyXG5cdHBpbms6IFsnRUY2M0MwJywgJ0I1M0RCNiddLFxyXG5cdGJyb3duOiBbJzgwNTkyRicsICc2QzM3MjQnXSxcclxuXHRibGFjazogWycyNjJFMzEnLCAnMTIxMjE3J10sXHJcblx0cmVkOiBbJ0ZBMTgxOScsICdBMDA5MzcnXSxcclxuXHR5ZWxsb3c6IFsnRUVFRTUzJywgJ0I3ODQyNyddLFxyXG59XHJcblxyXG4kKCcuY2hhcmFjdGVyLWNvbG9yX19idG4nKS5jbGljayhlID0+IHtcclxuXHRsZXQgbmV3Q29sb3JzID0gY29sb3JzW2UudGFyZ2V0LmdldEF0dHJpYnV0ZSgnZGF0YS1jb2xvcicpXTtcclxuXHQkKCdib2R5JykuY3NzKCctLWNvbG9yLTEnLCBgIyR7bmV3Q29sb3JzWzBdfWApO1xyXG5cdCQoJ2JvZHknKS5jc3MoJy0tY29sb3ItMicsIGAjJHtuZXdDb2xvcnNbMV19YCk7XHJcbn0pIiwiJChkb2N1bWVudCkucmVhZHkoZnVuY3Rpb24gKCkge1xyXG5cdHN0YXJ0RXZzR2FtZSgpO1xyXG59KTtcclxuXHJcbmNvbnN0IGV2c0NvbG9ycyA9IHtcclxuXHR5ZWxsb3c6ICcjRUVFRTUzJyxcclxuXHRyZWQ6ICcjRkExODE5JyxcclxuXHRncmVlbjogJyMyOThCNDEnLFxyXG5cdGJsdWU6ICcjMkE0M0Q2JyxcclxufVxyXG5cclxuY29uc3Qgb3V0cHV0UmVjdCA9IHtcclxuXHR5ZWxsb3c6IFs0OCwgMjNdLFxyXG5cdHJlZDogWzQ4LCAxMjNdLFxyXG5cdGdyZWVuOiBbNDgsIDIyM10sXHJcblx0Ymx1ZTogWzQ4LCAzMjNdLFxyXG59XHJcblxyXG5jb25zdCBpbnB1dFJlY3QgPSB7XHJcblx0eWVsbG93OiBbNDUyLCAyMjVdLFxyXG5cdHJlZDogWzQ1MiwgMjVdLFxyXG5cdGdyZWVuOiBbNDUyLCAzMjVdLFxyXG5cdGJsdWU6IFs0NTIsIDEyNV0sXHJcbn1cclxuXHJcbmxldCBldnNDb25uZWN0aW9uSGlzdG9yeSA9IFtdO1xyXG5cclxuZnVuY3Rpb24gc3RhcnRFdnNHYW1lKCkge1xyXG5cdGxldCBjYW52YXMgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImV2c19fY2FudmFzXCIpO1xyXG5cdGxldCBjb250ZXh0ID0gY2FudmFzLmdldENvbnRleHQoXCIyZFwiKTtcclxuXHRjb250ZXh0LmNsZWFyUmVjdCgwLCAwLCBjYW52YXMud2lkdGgsIGNhbnZhcy5oZWlnaHQpO1xyXG5cdGRyYXdPdXRwdXQoY29udGV4dCk7XHJcblxyXG5cdGxldCBpc0FjaXZlQ2xlYXJCdXR0b24gPSB0cnVlO1xyXG5cclxuXHQkKCcuZXZzX19idG4tY2xlYXInKS5jbGljaygoKSA9PiB7XHJcblx0XHRpZiAoaXNBY2l2ZUNsZWFyQnV0dG9uKSB7XHJcblx0XHRcdGNvbnRleHQuY2xlYXJSZWN0KDAsIDAsIGNhbnZhcy53aWR0aCwgY2FudmFzLmhlaWdodCk7XHJcblx0XHRcdGNvb3JkT3V0cHV0ID0gW107XHJcblx0XHRcdGRyYXdPdXRwdXQoY29udGV4dCk7XHJcblx0XHRcdCQoJy5ldnNfX291dHB1dC1yZWN0JykucmVtb3ZlQ2xhc3MoJ2NsaWNrZWQnKTtcclxuXHRcdFx0ZXZzQ29ubmVjdGlvbkhpc3RvcnkgPSBbXTtcclxuXHRcdH1cclxuXHR9KVxyXG5cclxuXHRsZXQgY29vcmRPdXRwdXQgPSBbXTtcclxuXHRsZXQgZGF0YUNvbG9yT3V0cHV0ID0gJyc7XHJcblx0bGV0IG91dHB1dEJ1dHRvbjtcclxuXHQkKCcuZXZzX19vdXRwdXQtcmVjdCcpLmNsaWNrKGUgPT4ge1xyXG5cdFx0b3V0cHV0QnV0dG9uID0gZS50YXJnZXQ7XHJcblx0XHRpZiAob3V0cHV0QnV0dG9uLmdldEF0dHJpYnV0ZSgnY2xhc3MnKS5pbmRleE9mKCdjbGlja2VkJykgPCAwKSB7XHJcblx0XHRcdGRhdGFDb2xvck91dHB1dCA9IG91dHB1dEJ1dHRvbi5nZXRBdHRyaWJ1dGUoXCJkYXRhLWNvbG9yXCIpO1xyXG5cdFx0XHRjb29yZE91dHB1dCA9IG91dHB1dFJlY3RbZGF0YUNvbG9yT3V0cHV0XTtcclxuXHRcdFx0ZXZzQ29ubmVjdGlvbkhpc3RvcnkucHVzaChkYXRhQ29sb3JPdXRwdXQpO1xyXG5cdFx0fSBlbHNlIHtcclxuXHRcdFx0Y29vcmRPdXRwdXQgPSBbXTtcclxuXHRcdH1cclxuXHR9KVxyXG5cclxuXHQkKCcuZXZzX19pbnB1dC1yZWN0JykuY2xpY2soZSA9PiB7XHJcblx0XHRsZXQgZGF0YSA9IGUudGFyZ2V0LmdldEF0dHJpYnV0ZShcImRhdGEtY29sb3JcIik7XHJcblx0XHRsZXQgY29vcmQgPSBpbnB1dFJlY3RbZGF0YV07XHJcblx0XHRpZiAoY29vcmRPdXRwdXQubGVuZ3RoID4gMCkge1xyXG5cdFx0XHRvdXRwdXRCdXR0b24uY2xhc3NMaXN0LmFkZCgnY2xpY2tlZCcpO1xyXG5cdFx0XHRldnNDb25uZWN0aW9uSGlzdG9yeS5wdXNoKGRhdGEpO1xyXG5cdFx0XHRkcmF3TGluZXMoY29udGV4dCwgY29vcmRPdXRwdXRbMF0sIGNvb3JkT3V0cHV0WzFdLCBjb29yZFswXSwgY29vcmRbMV0sIGV2c0NvbG9yc1tkYXRhQ29sb3JPdXRwdXRdKTtcclxuXHRcdFx0ZHJhd091dHB1dChjb250ZXh0KTtcclxuXHRcdFx0Y29vcmRPdXRwdXQgPSBbXTtcclxuXHRcdFx0Y29vcmQgPSBcIlwiO1xyXG5cdFx0XHRzZXRUaW1lb3V0KCgpID0+IHtcclxuXHRcdFx0XHRpZiAoY2hlY2tDb3JyZWN0Q29ubmVjdGlvbigpKSB7XHJcblx0XHRcdFx0XHRsZXQgbXJjb2lucyA9ICtsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgnbXJjb2lucycpO1xyXG5cdFx0XHRcdFx0bXJjb2lucyArPSAyMDA7XHJcblx0XHRcdFx0XHRsb2NhbFN0b3JhZ2Uuc2V0SXRlbSgnbXJjb2lucycsIG1yY29pbnMpO1xyXG5cclxuXHRcdFx0XHRcdGNvbnN0IG1yY29pbnNWaWV3ID0gJCgnLnBlcnNvbmFsLWJhbGFuY2VfX251bWJlcicpO1xyXG5cdFx0XHRcdFx0bXJjb2luc1ZpZXcudGV4dChsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgnbXJjb2lucycpKTtcclxuXHJcblx0XHRcdFx0XHRsZXQgZ2FtZXNDb21wbGl0ZWQgPSBsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgnZ2FtZXNDb21wbGl0ZWQnKTtcclxuXHRcdFx0XHRcdGxldCBnYW1lc0NvbXBsaXRlZE5ldyA9IGdhbWVzQ29tcGxpdGVkLnNwbGl0KCcsJyk7XHJcblx0XHRcdFx0XHRnYW1lc0NvbXBsaXRlZE5ldy5wdXNoKCdldnMnKTtcclxuXHRcdFx0XHRcdGxvY2FsU3RvcmFnZS5zZXRJdGVtKCdnYW1lc0NvbXBsaXRlZCcsIGdhbWVzQ29tcGxpdGVkTmV3KTtcclxuXHJcblx0XHRcdFx0XHRhbGVydCgnKzIwMCBNUkNvaW5zJyk7XHJcblx0XHRcdFx0XHRpc0FjaXZlQ2xlYXJCdXR0b24gPSBmYWxzZTtcclxuXHRcdFx0XHRcdCQoJy5ldnNfX2J0bi1jbGVhcicpLmNzcygnYmFja2dyb3VuZC1jb2xvcicsICcjNzU3NTc1JylcclxuXHRcdFx0XHR9XHJcblx0XHRcdH0sIDEwMCk7XHJcblx0XHR9XHJcblx0fSlcclxufVxyXG5cclxuZnVuY3Rpb24gZHJhd091dHB1dChjdHgpIHtcclxuXHQvLyDQttC10LvRgtGL0Lkg0L/RgNC+0LLQvtC0XHJcblx0Y3R4LmJlZ2luUGF0aCgpO1xyXG5cdGN0eC5saW5lV2lkdGggPSBcIjNcIjtcclxuXHRjdHguZmlsbFN0eWxlID0gXCIjRUVFRTUzXCJcclxuXHRjdHgucmVjdCg1LCA1LCA1MCwgNDApO1xyXG5cdGN0eC5maWxsKCk7XHJcblxyXG5cdC8vINC20LXQu9GC0YvQuSDQv9GA0L7QstC+0LQgMlxyXG5cdGN0eC5iZWdpblBhdGgoKTtcclxuXHRjdHgubGluZVdpZHRoID0gXCIzXCI7XHJcblx0Y3R4LmZpbGxTdHlsZSA9IFwiI0VFRUU1M1wiXHJcblx0Y3R4LnJlY3QoNDQ4LCAyMDUsIDUwLCA0MCk7XHJcblx0Y3R4LmZpbGwoKTtcclxuXHJcblx0Ly8g0LrRgNCw0YHQvdGL0Lkg0L/RgNC+0LLQvtC0XHJcblx0Y3R4LmJlZ2luUGF0aCgpO1xyXG5cdGN0eC5saW5lV2lkdGggPSBcIjNcIjtcclxuXHRjdHguZmlsbFN0eWxlID0gXCIjRkExODE5XCJcclxuXHRjdHgucmVjdCg1LCAxMDUsIDUwLCA0MCk7XHJcblx0Y3R4LmZpbGwoKTtcclxuXHJcblx0Ly8g0LrRgNCw0YHQvdGL0Lkg0L/RgNC+0LLQvtC0IDJcclxuXHRjdHguYmVnaW5QYXRoKCk7XHJcblx0Y3R4LmxpbmVXaWR0aCA9IFwiM1wiO1xyXG5cdGN0eC5maWxsU3R5bGUgPSBcIiNGQTE4MTlcIlxyXG5cdGN0eC5yZWN0KDQ0OCwgNSwgNTAsIDQwKTtcclxuXHRjdHguZmlsbCgpO1xyXG5cclxuXHQvLyDQt9C10LvQtdC90YvQuSDQv9GA0L7QstC+0LRcclxuXHRjdHguYmVnaW5QYXRoKCk7XHJcblx0Y3R4LmxpbmVXaWR0aCA9IFwiM1wiO1xyXG5cdGN0eC5maWxsU3R5bGUgPSBcIiMyOThCNDFcIlxyXG5cdGN0eC5yZWN0KDUsIDIwNSwgNTAsIDQwKTtcclxuXHRjdHguZmlsbCgpO1xyXG5cclxuXHQvLyDQt9C10LvQtdC90YvQuSDQv9GA0L7QstC+0LQgMlxyXG5cdGN0eC5iZWdpblBhdGgoKTtcclxuXHRjdHgubGluZVdpZHRoID0gXCIzXCI7XHJcblx0Y3R4LmZpbGxTdHlsZSA9IFwiIzI5OEI0MVwiXHJcblx0Y3R4LnJlY3QoNDQ4LCAzMDUsIDUwLCA0MCk7XHJcblx0Y3R4LmZpbGwoKTtcclxuXHJcblx0Ly8g0LPQvtC70YPQsdC+0Lkg0L/RgNC+0LLQvtC0XHJcblx0Y3R4LmJlZ2luUGF0aCgpO1xyXG5cdGN0eC5saW5lV2lkdGggPSBcIjNcIjtcclxuXHRjdHguZmlsbFN0eWxlID0gXCIjMkE0M0Q2XCJcclxuXHRjdHgucmVjdCg1LCAzMDUsIDUwLCA0MCk7XHJcblx0Y3R4LmZpbGwoKTtcclxuXHJcblx0Ly8g0LPQvtC70YPQsdC+0Lkg0L/RgNC+0LLQvtC0IDJcclxuXHRjdHguYmVnaW5QYXRoKCk7XHJcblx0Y3R4LmxpbmVXaWR0aCA9IFwiM1wiO1xyXG5cdGN0eC5maWxsU3R5bGUgPSBcIiMyQTQzRDZcIlxyXG5cdGN0eC5yZWN0KDQ0OCwgMTA1LCA1MCwgNDApO1xyXG5cdGN0eC5maWxsKCk7XHJcbn1cclxuXHJcbmZ1bmN0aW9uIGRyYXdMaW5lcyhjdHgsIG91dHB1dFgsIG91dHB1dFksIGlucHV0WCwgaW5wdXRZLCBjb2xvcikge1xyXG5cdGN0eC5iZWdpblBhdGgoKTtcclxuXHRjdHgubGluZVdpZHRoID0gXCIxNVwiO1xyXG5cdGN0eC5zdHJva2VTdHlsZSA9IGNvbG9yO1xyXG5cdGN0eC5tb3ZlVG8ob3V0cHV0WCwgb3V0cHV0WSk7XHJcblx0Y3R4LmxpbmVUbyhpbnB1dFgsIGlucHV0WSk7XHJcblx0Y3R4LnN0cm9rZSgpO1xyXG59XHJcblxyXG5mdW5jdGlvbiBjaGVja0NvcnJlY3RDb25uZWN0aW9uKCkge1xyXG5cdGxldCBpc0NvcnJlY3RDb25uZWN0aW9uID0gZmFsc2U7XHJcblx0aWYgKGV2c0Nvbm5lY3Rpb25IaXN0b3J5Lmxlbmd0aCA9PSA4KSB7XHJcblx0XHRmb3IgKGxldCBpID0gMDsgaSA8IGV2c0Nvbm5lY3Rpb25IaXN0b3J5Lmxlbmd0aDsgaSArPSAyKSB7XHJcblx0XHRcdGlmIChldnNDb25uZWN0aW9uSGlzdG9yeVtpXSA9PT0gZXZzQ29ubmVjdGlvbkhpc3RvcnlbaSArIDFdKSB7XHJcblx0XHRcdFx0aXNDb3JyZWN0Q29ubmVjdGlvbiA9IHRydWU7XHJcblx0XHRcdH0gZWxzZSB7XHJcblx0XHRcdFx0aXNDb3JyZWN0Q29ubmVjdGlvbiA9IGZhbHNlO1xyXG5cdFx0XHR9XHJcblx0XHR9XHJcblx0fVxyXG5cdHJldHVybiBpc0NvcnJlY3RDb25uZWN0aW9uO1xyXG59IiwibGV0IGlzQ29tcGxpdGVQcm9jID0gZmFsc2U7XHJcbmxldCBpc0NvbXBsaXRlQ2hpcCA9IGZhbHNlO1xyXG5cclxuJCgnLm1pY3JvX19wcm9jZXNzb3InKS5kcmFnZ2FibGUoe1xyXG5cdGNvbnRhaW5tZW50OiAnLnNwZWNpYWx0aWVzX19nYW1lcycsXHJcblx0Y3Vyc29yOiAnbW92ZScsXHJcblx0c25hcDogJy5taWNyb19fcHJvY2Vzc29yLXNuYXAnLFxyXG5cdHNuYXBNb2RlOiAnaW5uZXInLFxyXG5cdHNuYXBUb2xlcmFuY2U6IDEsXHJcbn0pO1xyXG5cclxuJChcIi5taWNyb19fcHJvY2Vzc29yLXNuYXBcIikuZHJvcHBhYmxlKHtcclxuXHRkcm9wOiBmdW5jdGlvbiAoZXZlbnQsIHVpKSB7XHJcblx0XHQkKCcubWljcm9fX3Byb2Nlc3NvcicpLmRyYWdnYWJsZSgnZGlzYWJsZScpO1xyXG5cdFx0aXNDb21wbGl0ZVByb2MgPSB0cnVlO1xyXG5cdFx0Y2hlY2tNaWNyb0NvbXBsaXRlKCk7XHJcblx0fSxcclxuXHR0b2xlcmFuY2U6IFwiZml0XCIsXHJcblx0YWN0aXZhdGU6IGZ1bmN0aW9uICgpIHtcclxuXHRcdCQoJy5taWNyb19fcHJvY2Vzc29yLXNuYXAnKS5jc3Moe1xyXG5cdFx0XHRib3JkZXI6IFwiMnB4IHNvbGlkICNGRjUyNTJcIixcclxuXHRcdFx0YmFja2dyb3VuZENvbG9yOiBcInJnYmEoMTc4LCAyMzUsIDI0MiwgLjUpO1wiXHJcblx0XHR9KTtcclxuXHR9LFxyXG5cdGRlYWN0aXZhdGU6IGZ1bmN0aW9uICgpIHtcclxuXHRcdCQoJy5taWNyb19fcHJvY2Vzc29yLXNuYXAnKS5jc3MoXCJib3JkZXJcIiwgXCJcIikuY3NzKFwiYmFja2dyb3VuZC1jb2xvclwiLCBcIlwiKTtcclxuXHR9XHJcbn0pO1xyXG5cclxuJCgnLm1pY3JvX19jaGlwJykuZHJhZ2dhYmxlKHtcclxuXHRjb250YWlubWVudDogJy5zcGVjaWFsdGllc19fZ2FtZXMnLFxyXG5cdGN1cnNvcjogJ21vdmUnLFxyXG5cdHNuYXA6ICcubWljcm9fX2NoaXAtc25hcCcsXHJcblx0c25hcE1vZGU6ICdpbm5lcicsXHJcblx0c25hcFRvbGVyYW5jZTogMSxcclxufSk7XHJcblxyXG4kKFwiLm1pY3JvX19jaGlwLXNuYXBcIikuZHJvcHBhYmxlKHtcclxuXHRkcm9wOiBmdW5jdGlvbiAoZXZlbnQsIHVpKSB7XHJcblx0XHQkKCcubWljcm9fX2NoaXAnKS5kcmFnZ2FibGUoJ2Rpc2FibGUnKTtcclxuXHRcdGlzQ29tcGxpdGVDaGlwID0gdHJ1ZTtcclxuXHRcdGNoZWNrTWljcm9Db21wbGl0ZSgpO1xyXG5cdH0sXHJcblx0dG9sZXJhbmNlOiBcImZpdFwiLFxyXG5cdGFjdGl2YXRlOiBmdW5jdGlvbiAoKSB7XHJcblx0XHQkKCcubWljcm9fX2NoaXAtc25hcCcpLmNzcyh7XHJcblx0XHRcdGJvcmRlcjogXCIycHggc29saWQgI0ZGNTI1MlwiLFxyXG5cdFx0XHRiYWNrZ3JvdW5kQ29sb3I6IFwicmdiYSgxNzgsIDIzNSwgMjQyLCAuNSk7XCJcclxuXHRcdH0pO1xyXG5cdH0sXHJcblx0ZGVhY3RpdmF0ZTogZnVuY3Rpb24gKCkge1xyXG5cdFx0JCgnLm1pY3JvX19jaGlwLXNuYXAnKS5jc3MoXCJib3JkZXJcIiwgXCJcIikuY3NzKFwiYmFja2dyb3VuZC1jb2xvclwiLCBcIlwiKTtcclxuXHR9XHJcbn0pO1xyXG5cclxuZnVuY3Rpb24gY2hlY2tNaWNyb0NvbXBsaXRlKCkge1xyXG5cdGlmIChpc0NvbXBsaXRlUHJvYyAmJiBpc0NvbXBsaXRlQ2hpcCkge1xyXG5cdFx0bGV0IG1yY29pbnMgPSArbG9jYWxTdG9yYWdlLmdldEl0ZW0oJ21yY29pbnMnKTtcclxuXHRcdG1yY29pbnMgKz0gMjAwO1xyXG5cdFx0bG9jYWxTdG9yYWdlLnNldEl0ZW0oJ21yY29pbnMnLCBtcmNvaW5zKTtcclxuXHJcblx0XHRjb25zdCBtcmNvaW5zVmlldyA9ICQoJy5wZXJzb25hbC1iYWxhbmNlX19udW1iZXInKTtcclxuXHRcdG1yY29pbnNWaWV3LnRleHQobG9jYWxTdG9yYWdlLmdldEl0ZW0oJ21yY29pbnMnKSk7XHJcblxyXG5cdFx0XHJcblx0XHRsZXQgZ2FtZXNDb21wbGl0ZWQgPSBsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgnZ2FtZXNDb21wbGl0ZWQnKTtcclxuXHRcdGxldCBnYW1lc0NvbXBsaXRlZE5ldyA9IGdhbWVzQ29tcGxpdGVkLnNwbGl0KCcsJyk7XHJcblx0XHRnYW1lc0NvbXBsaXRlZE5ldy5wdXNoKCdtaWNybycpO1xyXG5cdFx0bG9jYWxTdG9yYWdlLnNldEl0ZW0oJ2dhbWVzQ29tcGxpdGVkJywgZ2FtZXNDb21wbGl0ZWROZXcpO1xyXG5cclxuXHRcdGFsZXJ0KCcrMjAwIE1SQ29pbnMnKTtcclxuXHR9XHJcbn0iLCIkKGRvY3VtZW50KS5yZWFkeShmdW5jdGlvbiAoKSB7XHJcbiAgc3RhcnRQaXByZXNHYW1lKCk7XHJcbn0pO1xyXG5cclxubGV0IGFtcGxpdHVkZSA9IGdldFJhbmRvbUludCgtMjI1LCAyMjUpO1xyXG5sZXQgY2hhbmdlc0FtcGxpdHVkZSA9IGdldFJhbmRvbUludCgtMjI1LCAyMjUpO1xyXG5jb25zdCBjb250cm9sbGVyID0gJCgnLnBpcHJlc19fY29udHJvbGxlci1pbnB1dCcpO1xyXG5cclxuZnVuY3Rpb24gc3RhcnRQaXByZXNHYW1lKCkge1xyXG4gIGxldCBjYW52YXMgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInBpcHJlc19fY2FudmFzXCIpO1xyXG4gIGxldCBjb250ZXh0ID0gY2FudmFzLmdldENvbnRleHQoXCIyZFwiKTtcclxuICBjb250ZXh0LmNsZWFyUmVjdCgwLCAwLCBjYW52YXMud2lkdGgsIGNhbnZhcy5oZWlnaHQpO1xyXG4gIGRyYXdTdGF0aWNDdXJ2ZXMoY29udGV4dCwgc3RlcCk7XHJcbiAgZHJhd0N1cnZlcyhjb250ZXh0LCBzdGVwKTtcclxuXHJcbiAgc3RlcCArPSA1O1xyXG4gIHdpbmRvdy5yZXF1ZXN0QW5pbWF0aW9uRnJhbWUoc3RhcnRQaXByZXNHYW1lKTtcclxufVxyXG5cclxuY29udHJvbGxlci5jaGFuZ2UoZnVuY3Rpb24gKCkge1xyXG4gIGNoYW5nZXNBbXBsaXR1ZGUgPSB0aGlzLnZhbHVlO1xyXG4gIGlmIChhbXBsaXR1ZGUgLSAxMCA8PSBjaGFuZ2VzQW1wbGl0dWRlICYmIGNoYW5nZXNBbXBsaXR1ZGUgPD0gYW1wbGl0dWRlICsgMTApIHtcclxuICAgIGNoYW5nZXNBbXBsaXR1ZGUgPSBhbXBsaXR1ZGU7XHJcbiAgICBjb250cm9sbGVyLnByb3AoJ2Rpc2FibGVkJywgdHJ1ZSk7XHJcbiAgICBzZXRUaW1lb3V0KCgpID0+IHtcclxuICAgICAgbGV0IG1yY29pbnMgPSArbG9jYWxTdG9yYWdlLmdldEl0ZW0oJ21yY29pbnMnKTtcclxuICAgICAgbXJjb2lucyArPSAyMDA7XHJcbiAgICAgIGxvY2FsU3RvcmFnZS5zZXRJdGVtKCdtcmNvaW5zJywgbXJjb2lucyk7XHJcblxyXG4gICAgICBjb25zdCBtcmNvaW5zVmlldyA9ICQoJy5wZXJzb25hbC1iYWxhbmNlX19udW1iZXInKTtcclxuICAgICAgbXJjb2luc1ZpZXcudGV4dChsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgnbXJjb2lucycpKTtcclxuXHJcbiAgICAgIGxldCBnYW1lc0NvbXBsaXRlZCA9IGxvY2FsU3RvcmFnZS5nZXRJdGVtKCdnYW1lc0NvbXBsaXRlZCcpO1xyXG4gICAgICBsZXQgZ2FtZXNDb21wbGl0ZWROZXcgPSBnYW1lc0NvbXBsaXRlZC5zcGxpdCgnLCcpO1xyXG4gICAgICBnYW1lc0NvbXBsaXRlZE5ldy5wdXNoKCdwaXByZXMnKTtcclxuICAgICAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oJ2dhbWVzQ29tcGxpdGVkJywgZ2FtZXNDb21wbGl0ZWROZXcpO1xyXG5cclxuICAgICAgYWxlcnQoJysyMDAgTVJDb2lucycpO1xyXG4gICAgfSwgMTAwKTtcclxuICB9XHJcbn0pXHJcblxyXG5sZXQgc3RlcCA9IC00O1xyXG5cclxuZnVuY3Rpb24gZHJhd0N1cnZlcyhjdHgsIHN0ZXApIHtcclxuICBsZXQgd2lkdGggPSBjdHguY2FudmFzLndpZHRoO1xyXG4gIGxldCBoZWlnaHQgPSBjdHguY2FudmFzLmhlaWdodDtcclxuICBjdHguYmVnaW5QYXRoKCk7XHJcbiAgY3R4LmxpbmVXaWR0aCA9IDY7XHJcbiAgY3R4LnN0cm9rZVN0eWxlID0gXCJyZ2IoMCwgMTg4LCAyMTIpXCI7XHJcblxyXG4gIGxldCB4ID0gMDtcclxuICBsZXQgeSA9IDA7XHJcbiAgbGV0IGZyZXF1ZW5jeSA9IDkwO1xyXG4gIHdoaWxlICh5IDwgaGVpZ2h0KSB7XHJcbiAgICB4ID0gd2lkdGggLyAyICsgY2hhbmdlc0FtcGxpdHVkZSAqIE1hdGguc2luKCh5ICsgc3RlcCkgLyBmcmVxdWVuY3kpO1xyXG4gICAgY3R4LmxpbmVUbyh4LCB5KTtcclxuICAgIHkrKztcclxuICB9XHJcbiAgY3R4LnN0cm9rZSgpO1xyXG59XHJcblxyXG5mdW5jdGlvbiBkcmF3U3RhdGljQ3VydmVzKGN0eCwgc3RlcCkge1xyXG4gIGxldCB3aWR0aCA9IGN0eC5jYW52YXMud2lkdGg7XHJcbiAgbGV0IGhlaWdodCA9IGN0eC5jYW52YXMuaGVpZ2h0O1xyXG4gIGN0eC5iZWdpblBhdGgoKTtcclxuICBjdHgubGluZVdpZHRoID0gNDtcclxuICBjdHguc3Ryb2tlU3R5bGUgPSBcInJnYmEoMTg2LCAxODYsIDE4NiwgLjQpXCI7XHJcblxyXG4gIGxldCB4ID0gMDtcclxuICBsZXQgeSA9IDA7XHJcbiAgbGV0IGZyZXF1ZW5jeSA9IDkwO1xyXG4gIHdoaWxlICh5IDwgaGVpZ2h0KSB7XHJcbiAgICB4ID0gd2lkdGggLyAyICsgYW1wbGl0dWRlICogTWF0aC5zaW4oKHkgKyBzdGVwKSAvIGZyZXF1ZW5jeSk7XHJcbiAgICBjdHgubGluZVRvKHgsIHkpO1xyXG4gICAgeSsrO1xyXG4gIH1cclxuICBjdHguc3Ryb2tlKCk7XHJcbn1cclxuXHJcbmZ1bmN0aW9uIGdldFJhbmRvbUludChtaW4sIG1heCkge1xyXG4gIHJldHVybiBNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiAobWF4IC0gbWluKSkgKyBtaW47XHJcbn0iLCJjb25zdCBwbXNCdXR0b24gPSAkKCcucG1zX19nYW1lLWJ0bicpO1xyXG5jb25zdCBwbXNTdGFydEdhbWVCdXR0b24gPSAkKCcucG1zX19nYW1lLXN0YXJ0LWJ0bicpO1xyXG5cclxuY29uc3QgcG1zQ29tYmluYXRpb25BcnJheSA9IHNodWZmbGUoWzMsIDcsIDIsIDEsIDQsIDYsIDgsIDVdKTtcclxubGV0IHBtc0NsaWNrc0FycmF5ID0gW107XHJcblxyXG5sZXQgcG1zTnVtYmVyT2ZJbXByZXNzaW9ucyA9IDE7XHJcbmxldCBwbXNFZGl0TW9kZSA9IGZhbHNlO1xyXG5sZXQgcG1zV2FzQ29tcGxpdGVkID0gZmFsc2U7XHJcblxyXG5wbXNTdGFydEdhbWVCdXR0b24uY2xpY2soKGUpID0+IHtcclxuXHRpZiAoIXBtc1dhc0NvbXBsaXRlZCkge1xyXG5cdFx0c2V0VGltZW91dCgoKSA9PiB7XHJcblx0XHRcdHBtc1N0YXJ0R2FtZSgpO1xyXG5cdFx0fSwgNTAwKTtcclxuXHR9XHJcbn0pXHJcblxyXG5wbXNCdXR0b24uY2xpY2soKGUpID0+IHtcclxuXHRpZiAocG1zRWRpdE1vZGUpIHtcclxuXHRcdGUudGFyZ2V0LmNsYXNzTGlzdC50b2dnbGUoJ3Btc19fZ2FtZS1idG5fYWN0aXZlJyk7XHJcblx0XHRwbXNDbGlja3NBcnJheS5wdXNoKHBtc0J1dHRvbi5pbmRleChlLnRhcmdldCkgKyAxKTtcclxuXHRcdGlmIChwbXNDbGlja3NBcnJheS5sZW5ndGggPT09IHBtc051bWJlck9mSW1wcmVzc2lvbnMpIHtcclxuXHRcdFx0cG1zQ2hlY2tDb21wbGl0ZSgpO1xyXG5cdFx0fVxyXG5cdH1cclxufSlcclxuXHJcbmZ1bmN0aW9uIHNodWZmbGUoYXJyYXkpIHtcclxuXHR2YXIgY3VycmVudEluZGV4ID0gYXJyYXkubGVuZ3RoLFxyXG5cdFx0dGVtcG9yYXJ5VmFsdWUsIHJhbmRvbUluZGV4O1xyXG5cclxuXHQvLyBXaGlsZSB0aGVyZSByZW1haW4gZWxlbWVudHMgdG8gc2h1ZmZsZS4uLlxyXG5cdHdoaWxlICgwICE9PSBjdXJyZW50SW5kZXgpIHtcclxuXHJcblx0XHQvLyBQaWNrIGEgcmVtYWluaW5nIGVsZW1lbnQuLi5cclxuXHRcdHJhbmRvbUluZGV4ID0gTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogY3VycmVudEluZGV4KTtcclxuXHRcdGN1cnJlbnRJbmRleCAtPSAxO1xyXG5cclxuXHRcdC8vIEFuZCBzd2FwIGl0IHdpdGggdGhlIGN1cnJlbnQgZWxlbWVudC5cclxuXHRcdHRlbXBvcmFyeVZhbHVlID0gYXJyYXlbY3VycmVudEluZGV4XTtcclxuXHRcdGFycmF5W2N1cnJlbnRJbmRleF0gPSBhcnJheVtyYW5kb21JbmRleF07XHJcblx0XHRhcnJheVtyYW5kb21JbmRleF0gPSB0ZW1wb3JhcnlWYWx1ZTtcclxuXHR9XHJcblxyXG5cdHJldHVybiBhcnJheTtcclxufVxyXG5cclxuZnVuY3Rpb24gcG1zQ2hlY2tDb21wbGl0ZSgpIHtcclxuXHRwbXNFZGl0TW9kZSA9IGZhbHNlO1xyXG5cclxuXHRmb3IgKGxldCBpID0gMDsgaSA8IHBtc0NsaWNrc0FycmF5Lmxlbmd0aDsgaSsrKSB7XHJcblx0XHRpZiAocG1zQ2xpY2tzQXJyYXlbaV0gIT09IHBtc0NvbWJpbmF0aW9uQXJyYXlbaV0pIHtcclxuXHRcdFx0cG1zQnV0dG9uLmFkZENsYXNzKCdwbXNfX2dhbWUtYnRuX2FjdGl2ZScpO1xyXG5cdFx0XHRzZXRUaW1lb3V0KCgpID0+IHtcclxuXHRcdFx0XHRwbXNSZXNldCgpO1xyXG5cdFx0XHR9LCA1MDApO1xyXG5cdFx0XHRwbXNOdW1iZXJPZkltcHJlc3Npb25zID0gMTtcclxuXHRcdFx0cmV0dXJuO1xyXG5cdFx0fVxyXG5cdH1cclxuXHJcblx0aWYgKHBtc0NsaWNrc0FycmF5Lmxlbmd0aCA9PT0gOCkge1xyXG5cdFx0bGV0IG1yY29pbnMgPSArbG9jYWxTdG9yYWdlLmdldEl0ZW0oJ21yY29pbnMnKTtcclxuXHRcdG1yY29pbnMgKz0gMjAwO1xyXG5cdFx0bG9jYWxTdG9yYWdlLnNldEl0ZW0oJ21yY29pbnMnLCBtcmNvaW5zKTtcclxuXHJcblx0XHRjb25zdCBtcmNvaW5zVmlldyA9ICQoJy5wZXJzb25hbC1iYWxhbmNlX19udW1iZXInKTtcclxuXHRcdG1yY29pbnNWaWV3LnRleHQobG9jYWxTdG9yYWdlLmdldEl0ZW0oJ21yY29pbnMnKSk7XHJcblxyXG5cdFx0bGV0IGdhbWVzQ29tcGxpdGVkID0gbG9jYWxTdG9yYWdlLmdldEl0ZW0oJ2dhbWVzQ29tcGxpdGVkJyk7XHJcblx0XHRsZXQgZ2FtZXNDb21wbGl0ZWROZXcgPSBnYW1lc0NvbXBsaXRlZC5zcGxpdCgnLCcpO1xyXG5cdFx0Z2FtZXNDb21wbGl0ZWROZXcucHVzaCgncG1zJyk7XHJcblx0XHRsb2NhbFN0b3JhZ2Uuc2V0SXRlbSgnZ2FtZXNDb21wbGl0ZWQnLCBnYW1lc0NvbXBsaXRlZE5ldyk7XHJcblxyXG5cdFx0YWxlcnQoJysyMDAgTVJDb2lucycpO1xyXG5cdFx0cG1zV2FzQ29tcGxpdGVkID0gdHJ1ZTtcclxuXHRcdHJldHVybjtcclxuXHR9XHJcblxyXG5cdHNldFRpbWVvdXQoKCkgPT4ge1xyXG5cdFx0cG1zUmVzZXQoKTtcclxuXHR9LCA1MDApO1xyXG5cdHNldFRpbWVvdXQoKCkgPT4ge1xyXG5cdFx0cG1zU3RhcnRHYW1lKCk7XHJcblx0fSwgMTAwMCk7XHJcblx0cG1zTnVtYmVyT2ZJbXByZXNzaW9ucysrO1xyXG5cdHJldHVybjtcclxufVxyXG5cclxuZnVuY3Rpb24gcG1zU3RhcnRHYW1lKCkge1xyXG5cdGxldCB0aW1lID0gMDtcclxuXHRmb3IgKGxldCBpID0gMDsgaSA8IHBtc051bWJlck9mSW1wcmVzc2lvbnM7IGkrKykge1xyXG5cdFx0c2V0VGltZW91dChmdW5jdGlvbiAoKSB7XHJcblx0XHRcdHBtc0J1dHRvbltwbXNDb21iaW5hdGlvbkFycmF5W2ldIC0gMV0uY2xhc3NMaXN0LmFkZCgncG1zX19nYW1lLWJ0bl9hY3RpdmUnKTtcclxuXHRcdH0sIDUwMCAqIHRpbWUrKylcclxuXHR9XHJcblx0c2V0VGltZW91dCgoKSA9PiB7XHJcblx0XHRwbXNSZXNldCgpO1xyXG5cdFx0cG1zRWRpdE1vZGUgPSB0cnVlO1xyXG5cdH0sIDUwMCAqIHBtc051bWJlck9mSW1wcmVzc2lvbnMpO1xyXG59XHJcblxyXG5mdW5jdGlvbiBwbXNSZXNldCgpIHtcclxuXHRwbXNDbGlja3NBcnJheSA9IFtdO1xyXG5cdHBtc0J1dHRvbi5yZW1vdmVDbGFzcygncG1zX19nYW1lLWJ0bl9hY3RpdmUnKTtcclxufSIsImNvbnN0IHB1enpsZSA9ICQoJy5wb2l0X19wdXp6bGUnKTtcclxuY29uc3QgcHV6emxlQmxvY2tzID0gJCgnLnBvaXRfX3B1enpsZS1ibG9jaycpO1xyXG5jb25zdCBwdXp6bGVCbG9ja0VtcHR5ID0gJCgnLnBvaXRfX3B1enpsZS1ibG9ja19lbXB0eScpO1xyXG5jb25zdCBwdXp6bGVTdGFydEJ1dHRvbiA9ICQoJy5wb2l0X19wdXp6bGUtYnRuJyk7XHJcblxyXG5sZXQgcHV6emxlSXNBbmltYXRlID0gZmFsc2U7XHJcbmxldCBwdXp6bGVJc1N0YXJ0ID0gZmFsc2U7XHJcbmxldCBwdXp6bGVJc0NvbXBsaXRlZCA9IGZhbHNlO1xyXG5sZXQgcHV6emxlRGF0YVBvc2l0aW9uQXJyYXkgPSBbXTtcclxubGV0IG1peGVkUHV6emxlRGF0YVBvc2l0aW9uQXJyYXkgPSBbXTtcclxuXHJcbi8vINC/0LXRgNC10LzQtdGJ0LrQsCDQvNCw0YHRgdC40LLQsCDQuNC3IGRhdGFcclxuZnVuY3Rpb24gc2h1ZmZsZUFycmF5KGFycmF5KSB7XHJcblx0bGV0IHNvcnRlZEFycmF5ID0gYXJyYXkuc2xpY2UoKTtcclxuXHJcblx0Zm9yIChsZXQgaSA9IDA7IGkgPCAxMDA7IGkrKykge1xyXG5cdFx0bGV0IGRhdGFQb3NpdGlvbiA9IFtdO1xyXG5cclxuXHRcdGRhdGFQb3NpdGlvbi5wdXNoKHNvcnRlZEFycmF5WzE1XVswXSk7XHJcblx0XHRkYXRhUG9zaXRpb24ucHVzaChzb3J0ZWRBcnJheVsxNV1bMV0pO1xyXG5cclxuXHRcdGxldCBjb2xPclJvdyA9IE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIDIpO1xyXG5cclxuXHRcdC8vINGC0L7Qu9GM0LrQviDQtdGB0LvQuCDRjdC70LXQvNC10L3RgiDRgdC+0YHQtdC00L3QuNC5INGBINC/0YPRgdGC0YvQvCDQsdC70L7QutC+0LxcclxuXHRcdGxldCBzaW1pbGFyQ29sc09yUm93c0FycmF5ID0gc29ydGVkQXJyYXkuZmlsdGVyKGl0ZW0gPT4ge1xyXG5cdFx0XHRyZXR1cm4gaXRlbVtjb2xPclJvd10gPT09IGRhdGFQb3NpdGlvbltjb2xPclJvd10gJiYgKCtpdGVtW2l0ZW0ubGVuZ3RoIC0gMSAtIGNvbE9yUm93XSArIDEgPT09ICtkYXRhUG9zaXRpb25bZGF0YVBvc2l0aW9uLmxlbmd0aCAtIDEgLSBjb2xPclJvd10gfHwgK2l0ZW1baXRlbS5sZW5ndGggLSAxIC0gY29sT3JSb3ddIC0gMSA9PT0gK2RhdGFQb3NpdGlvbltkYXRhUG9zaXRpb24ubGVuZ3RoIC0gMSAtIGNvbE9yUm93XSk7XHJcblx0XHR9KVxyXG5cclxuXHRcdGRhdGFQb3NpdGlvbiA9IFtdO1xyXG5cclxuXHRcdGxldCBkaXJlY3Rpb24gPSBNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiBzaW1pbGFyQ29sc09yUm93c0FycmF5Lmxlbmd0aCk7XHJcblxyXG5cdFx0bGV0IHdoZXJlV2VHb0luZGV4ID0gc29ydGVkQXJyYXkuaW5kZXhPZihzaW1pbGFyQ29sc09yUm93c0FycmF5W2RpcmVjdGlvbl0pO1xyXG5cclxuXHRcdHNvcnRlZEFycmF5W3doZXJlV2VHb0luZGV4XSA9IHNvcnRlZEFycmF5WzE1XTtcclxuXHRcdHNvcnRlZEFycmF5WzE1XSA9IHNpbWlsYXJDb2xzT3JSb3dzQXJyYXlbZGlyZWN0aW9uXTtcclxuXHR9XHJcblxyXG5cdHJldHVybiBzb3J0ZWRBcnJheTtcclxufVxyXG5cclxuLy8g0YHQvtC30LTQsNC90LjQtSDQvNCw0YHRgdC40LLQsCDQuNC3IGRhdGFcclxuZnVuY3Rpb24gZ2V0UG9pdERhdGFQb3NpdGlvbigpIHtcclxuXHRmb3IgKGxldCBpID0gMDsgaSA8IHB1enpsZUJsb2Nrcy5sZW5ndGg7IGkrKykge1xyXG5cdFx0bGV0IHJvd1N0YXJ0ID0gcHV6emxlQmxvY2tzW2ldLmdldEF0dHJpYnV0ZSgnZGF0YS1yb3cnKTtcclxuXHRcdGxldCBjb2xTdGFydCA9IHB1enpsZUJsb2Nrc1tpXS5nZXRBdHRyaWJ1dGUoJ2RhdGEtY29sJyk7XHJcblxyXG5cdFx0cHV6emxlRGF0YVBvc2l0aW9uQXJyYXkucHVzaChbcm93U3RhcnQsIGNvbFN0YXJ0XSk7XHJcblx0fVxyXG59XHJcblxyXG4vLyDRg9GB0YLQsNC90L7QstC60LAg0LrQsNC20LTQvtC80YMg0LHQu9C+0LrRgyDQtdCz0L4g0L/QvtC30LjRhtC40Lgg0L/QvtGB0LvQtSDQv9C10YDQtdC80LXRiNC60LguINCh0LzQtdC90LAgZGF0YSDRgyDQsdC70L7QutCwXHJcbmZ1bmN0aW9uIHNldHRpbmdCbG9ja3NQb3NpdGlvbnNJblRoZVBvaXRHYW1lKCkge1xyXG5cdGZvciAobGV0IGkgPSAwOyBpIDwgcHV6emxlQmxvY2tzLmxlbmd0aDsgaSsrKSB7XHJcblx0XHQkKHB1enpsZUJsb2Nrc1tpXSkuY3NzKCdncmlkLXJvdy1zdGFydCcsIGAke21peGVkUHV6emxlRGF0YVBvc2l0aW9uQXJyYXlbaV1bMF19YCk7XHJcblx0XHQkKHB1enpsZUJsb2Nrc1tpXSkuY3NzKCdncmlkLWNvbHVtbi1zdGFydCcsIGAke21peGVkUHV6emxlRGF0YVBvc2l0aW9uQXJyYXlbaV1bMV19YCk7XHJcblx0XHQkKHB1enpsZUJsb2Nrc1tpXSkuYXR0cignZGF0YS1yb3cnLCBgJHttaXhlZFB1enpsZURhdGFQb3NpdGlvbkFycmF5W2ldWzBdfWApO1xyXG5cdFx0JChwdXp6bGVCbG9ja3NbaV0pLmF0dHIoJ2RhdGEtY29sJywgYCR7bWl4ZWRQdXp6bGVEYXRhUG9zaXRpb25BcnJheVtpXVsxXX1gKTtcclxuXHR9XHJcbn1cclxuXHJcbi8vINC60L3QvtC/0LrQsCBcItCd0LDRh9Cw0YLRjFwiXHJcbnB1enpsZVN0YXJ0QnV0dG9uLmNsaWNrKCgpID0+IHtcclxuXHRpZiAoIXB1enpsZUlzU3RhcnQgJiYgIXB1enpsZUlzQ29tcGxpdGVkKSB7XHJcblx0XHRwdXp6bGVJc1N0YXJ0ID0gdHJ1ZTtcclxuXHRcdGdldFBvaXREYXRhUG9zaXRpb24oKTtcclxuXHJcblx0XHRtaXhlZFB1enpsZURhdGFQb3NpdGlvbkFycmF5ID0gc2h1ZmZsZUFycmF5KHB1enpsZURhdGFQb3NpdGlvbkFycmF5KTtcclxuXHJcblx0XHRzZXR0aW5nQmxvY2tzUG9zaXRpb25zSW5UaGVQb2l0R2FtZSgpO1xyXG5cdH1cclxufSlcclxuXHJcbi8vINCd0LDQttCw0YLQuNC1INC90LAg0LHQu9C+0LpcclxucHV6emxlQmxvY2tzLmNsaWNrKGUgPT4ge1xyXG5cdGlmICghcHV6emxlSXNBbmltYXRlICYmIHB1enpsZUlzU3RhcnQpIHtcclxuXHRcdHB1enpsZUlzQW5pbWF0ZSA9IHRydWU7XHJcblx0XHRsZXQgbSA9IGUuY3VycmVudFRhcmdldC5nZXRBdHRyaWJ1dGUoJ2RhdGEtcm93JykgLSAxO1xyXG5cdFx0bGV0IG4gPSBlLmN1cnJlbnRUYXJnZXQuZ2V0QXR0cmlidXRlKCdkYXRhLWNvbCcpIC0gMTtcclxuXHJcblx0XHRtb3ZlUGF6emxlRWxlbWVudChlLmN1cnJlbnRUYXJnZXQsIG0sIG4pO1xyXG5cdH1cclxufSlcclxuXHJcbi8vINCf0LXRgNC10LzQtdGJ0LXQvdC40LUg0LHQu9C+0LrQsCDQv9C+0YHQu9C1INC90LDQttCw0YLQuNGPXHJcbmZ1bmN0aW9uIG1vdmVQYXp6bGVFbGVtZW50KGJsb2NrLCBtLCBuKSB7XHJcblx0bGV0IGVtcHR5TSA9IHB1enpsZUJsb2NrRW1wdHkuYXR0cignZGF0YS1yb3cnKTtcclxuXHRsZXQgZW1wdHlOID0gcHV6emxlQmxvY2tFbXB0eS5hdHRyKCdkYXRhLWNvbCcpO1xyXG5cclxuXHRpZiAobSArIDEgPT0gZW1wdHlNIC0gMSAmJiBuICsgMSA9PSBlbXB0eU4pIHtcclxuXHRcdGxldCBibG9ja0hlaWdodCA9ICQoYmxvY2spLmhlaWdodCgpICsgMjtcclxuXHJcblx0XHQkKGJsb2NrKS5zdG9wKHRydWUsIGZhbHNlKS5hbmltYXRlKHtcclxuXHRcdFx0J3RvcCc6IGJsb2NrSGVpZ2h0LFxyXG5cdFx0fSwgNTAwKTtcclxuXHRcdHNldFRpbWVvdXQoKCkgPT4ge1xyXG5cdFx0XHQkKGJsb2NrKS5jc3MoJ3RvcCcsICcwJyk7XHJcblx0XHRcdCQoYmxvY2spLmNzcygnbGVmdCcsICcwJyk7XHJcblx0XHRcdGNoYW5nZUdyaWRQYXJhbWV0ZXJzKGJsb2NrLCBtLCBuLCBlbXB0eU0sIGVtcHR5Tik7XHJcblx0XHR9LCA1MzApO1xyXG5cdH0gZWxzZSBpZiAobSA9PSBlbXB0eU0gJiYgbiArIDEgPT0gZW1wdHlOKSB7XHJcblx0XHRsZXQgYmxvY2tIZWlnaHQgPSAkKGJsb2NrKS5oZWlnaHQoKSArIDI7XHJcblxyXG5cdFx0JChibG9jaykuc3RvcCh0cnVlLCBmYWxzZSkuYW5pbWF0ZSh7XHJcblx0XHRcdCd0b3AnOiAtYmxvY2tIZWlnaHQsXHJcblx0XHR9LCA1MDApO1xyXG5cdFx0c2V0VGltZW91dCgoKSA9PiB7XHJcblx0XHRcdCQoYmxvY2spLmNzcygndG9wJywgJzAnKTtcclxuXHRcdFx0JChibG9jaykuY3NzKCdsZWZ0JywgJzAnKTtcclxuXHRcdFx0Y2hhbmdlR3JpZFBhcmFtZXRlcnMoYmxvY2ssIG0sIG4sIGVtcHR5TSwgZW1wdHlOKTtcclxuXHRcdH0sIDUzMCk7XHJcblx0fSBlbHNlIGlmIChtICsgMSA9PSBlbXB0eU0gJiYgbiArIDEgPT0gZW1wdHlOIC0gMSkge1xyXG5cdFx0bGV0IGJsb2NrSGVpZ2h0ID0gJChibG9jaykud2lkdGgoKSArIDI7XHJcblxyXG5cdFx0JChibG9jaykuc3RvcCh0cnVlLCBmYWxzZSkuYW5pbWF0ZSh7XHJcblx0XHRcdCdsZWZ0JzogYmxvY2tIZWlnaHQsXHJcblx0XHR9LCA1MDApO1xyXG5cdFx0c2V0VGltZW91dCgoKSA9PiB7XHJcblx0XHRcdCQoYmxvY2spLmNzcygndG9wJywgJzAnKTtcclxuXHRcdFx0JChibG9jaykuY3NzKCdsZWZ0JywgJzAnKTtcclxuXHRcdFx0Y2hhbmdlR3JpZFBhcmFtZXRlcnMoYmxvY2ssIG0sIG4sIGVtcHR5TSwgZW1wdHlOKTtcclxuXHRcdH0sIDUzMCk7XHJcblx0fSBlbHNlIGlmIChtICsgMSA9PSBlbXB0eU0gJiYgbiA9PSBlbXB0eU4pIHtcclxuXHRcdGxldCBibG9ja0hlaWdodCA9ICQoYmxvY2spLndpZHRoKCkgKyAyO1xyXG5cclxuXHRcdCQoYmxvY2spLnN0b3AodHJ1ZSwgZmFsc2UpLmFuaW1hdGUoe1xyXG5cdFx0XHQnbGVmdCc6IC1ibG9ja0hlaWdodCxcclxuXHRcdH0sIDUwMCk7XHJcblx0XHRzZXRUaW1lb3V0KCgpID0+IHtcclxuXHRcdFx0JChibG9jaykuY3NzKCd0b3AnLCAnMCcpO1xyXG5cdFx0XHQkKGJsb2NrKS5jc3MoJ2xlZnQnLCAnMCcpO1xyXG5cdFx0XHRjaGFuZ2VHcmlkUGFyYW1ldGVycyhibG9jaywgbSwgbiwgZW1wdHlNLCBlbXB0eU4pO1xyXG5cdFx0fSwgNTMwKTtcclxuXHR9IGVsc2Uge1xyXG5cdFx0c2V0VGltZW91dCgoKSA9PiB7XHJcblx0XHRcdHB1enpsZUlzQW5pbWF0ZSA9IGZhbHNlO1xyXG5cdFx0fSwgNTMwKTtcclxuXHR9XHJcbn1cclxuXHJcbi8vINCY0LfQvNC10L3QtdC90LjQtSDQv9C+0LfQuNGG0LjQuCDQuCBkYXRhINCx0LvQvtC60LAg0L/QvtGB0LvQtSDQv9C10YDQtdC80LXRidC10L3QuNGPXHJcbmZ1bmN0aW9uIGNoYW5nZUdyaWRQYXJhbWV0ZXJzKGJsb2NrLCBtLCBuLCBlbXB0eU0sIGVtcHR5Tikge1xyXG5cdCQoYmxvY2spLmNzcygnZ3JpZC1yb3ctc3RhcnQnLCBgJHtlbXB0eU19YCk7XHJcblx0JChibG9jaykuY3NzKCdncmlkLWNvbHVtbi1zdGFydCcsIGAke2VtcHR5Tn1gKTtcclxuXHQkKHB1enpsZUJsb2NrRW1wdHkpLmNzcygnZ3JpZC1yb3ctc3RhcnQnLCBgJHttKzF9YCk7XHJcblx0JChwdXp6bGVCbG9ja0VtcHR5KS5jc3MoJ2dyaWQtY29sdW1uLXN0YXJ0JywgYCR7bisxfWApO1xyXG5cclxuXHQkKGJsb2NrKS5hdHRyKCdkYXRhLXJvdycsIGAke2VtcHR5TX1gKTtcclxuXHQkKGJsb2NrKS5hdHRyKCdkYXRhLWNvbCcsIGAke2VtcHR5Tn1gKTtcclxuXHRwdXp6bGVCbG9ja0VtcHR5LmF0dHIoJ2RhdGEtcm93JywgYCR7bSsxfWApO1xyXG5cdHB1enpsZUJsb2NrRW1wdHkuYXR0cignZGF0YS1jb2wnLCBgJHtuKzF9YCk7XHJcblxyXG5cdHB1enpsZUlzQW5pbWF0ZSA9IGZhbHNlO1xyXG5cclxuXHRwdXp6bGVJc0NvcnJlY3RseUFzc2VtYmxlZCgpO1xyXG59XHJcblxyXG4vLyDQn9GA0L7QstC10YDQutCwINC/0YDQsNCy0LjQu9GM0L3QvtGB0YLQuCDRgdCx0L7RgNC60Lgg0L/Rj9GC0L3QsNGI0LXQulxyXG5cclxuZnVuY3Rpb24gcHV6emxlSXNDb3JyZWN0bHlBc3NlbWJsZWQoKSB7XHJcblx0bWl4ZWRQdXp6bGVEYXRhUG9zaXRpb25BcnJheSA9IFtdO1xyXG5cclxuXHRmb3IgKGxldCBpID0gMDsgaSA8IHB1enpsZUJsb2Nrcy5sZW5ndGg7IGkrKykge1xyXG5cdFx0bGV0IHJvd1N0YXJ0ID0gcHV6emxlQmxvY2tzW2ldLmdldEF0dHJpYnV0ZSgnZGF0YS1yb3cnKTtcclxuXHRcdGxldCBjb2xTdGFydCA9IHB1enpsZUJsb2Nrc1tpXS5nZXRBdHRyaWJ1dGUoJ2RhdGEtY29sJyk7XHJcblxyXG5cdFx0bWl4ZWRQdXp6bGVEYXRhUG9zaXRpb25BcnJheS5wdXNoKFtyb3dTdGFydCwgY29sU3RhcnRdKTtcclxuXHR9XHJcblxyXG5cdGlmIChpc0FycmF5c1RoZVNhbWUoKSkge1xyXG5cdFx0bGV0IG1yY29pbnMgPSArbG9jYWxTdG9yYWdlLmdldEl0ZW0oJ21yY29pbnMnKTtcclxuXHRcdG1yY29pbnMgKz0gMjAwO1xyXG5cdFx0bG9jYWxTdG9yYWdlLnNldEl0ZW0oJ21yY29pbnMnLCBtcmNvaW5zKTtcclxuXHJcblx0XHRjb25zdCBtcmNvaW5zVmlldyA9ICQoJy5wZXJzb25hbC1iYWxhbmNlX19udW1iZXInKTtcclxuXHRcdG1yY29pbnNWaWV3LnRleHQobG9jYWxTdG9yYWdlLmdldEl0ZW0oJ21yY29pbnMnKSk7XHJcblxyXG5cdFx0bGV0IGdhbWVzQ29tcGxpdGVkID0gbG9jYWxTdG9yYWdlLmdldEl0ZW0oJ2dhbWVzQ29tcGxpdGVkJyk7XHJcblx0XHRsZXQgZ2FtZXNDb21wbGl0ZWROZXcgPSBnYW1lc0NvbXBsaXRlZC5zcGxpdCgnLCcpO1xyXG5cdFx0Z2FtZXNDb21wbGl0ZWROZXcucHVzaCgncG9pdCcpO1xyXG5cdFx0bG9jYWxTdG9yYWdlLnNldEl0ZW0oJ2dhbWVzQ29tcGxpdGVkJywgZ2FtZXNDb21wbGl0ZWROZXcpO1xyXG5cclxuXHRcdGFsZXJ0KCcrMjAwIE1SQ29pbnMnKTtcclxuXHRcdHB1enpsZUlzU3RhcnQgPSBmYWxzZTtcclxuXHRcdHB1enpsZUlzQ29tcGxpdGVkID0gdHJ1ZTtcclxuXHRcdHB1enpsZVN0YXJ0QnV0dG9uLmFkZENsYXNzKCdwb2l0X19wdXp6bGUtYnRuX2Rpc2FibGVkJyk7XHJcblx0fVxyXG59XHJcblxyXG5mdW5jdGlvbiBpc0FycmF5c1RoZVNhbWUoKSB7XHJcblx0Zm9yIChsZXQgaSA9IDA7IGkgPCBwdXp6bGVEYXRhUG9zaXRpb25BcnJheS5sZW5ndGg7IGkrKykge1xyXG5cdFx0aWYgKHB1enpsZURhdGFQb3NpdGlvbkFycmF5W2ldWzBdICE9PSBtaXhlZFB1enpsZURhdGFQb3NpdGlvbkFycmF5W2ldWzBdIHx8IHB1enpsZURhdGFQb3NpdGlvbkFycmF5W2ldWzFdICE9PSBtaXhlZFB1enpsZURhdGFQb3NpdGlvbkFycmF5W2ldWzFdKSB7XHJcblx0XHRcdHJldHVybiBmYWxzZTtcclxuXHRcdH1cclxuXHR9XHJcblxyXG5cdHJldHVybiB0cnVlO1xyXG59IiwiY29uc3QgdGVyZXNIYW5kbGUgPSAkKCcudGVyZXNfX2hhbmRsZScpO1xyXG5jb25zdCB0ZXJlc0hhbmRsZUltZyA9IHRlcmVzSGFuZGxlLmZpbmQoJy50ZXJlc19faGFuZGxlLWltZycpO1xyXG5jb25zdCB0ZXJlc1NjcmVlbkltZyA9ICQoJy50ZXJlc19faW1nJyk7XHJcblxyXG5jb25zdCB0ZXJlc0NvbnRlbnRJbWcgPSAkKCcudGVyZXNfX2ltZy1jb250ZW50Jyk7XHJcbmNvbnN0IHRlcmVzQW50ZW5uYXMgPSAkKCcudGVyZXNfX2FudGVubmFzJyk7XHJcbmNvbnN0IHRlcmVzQW50ZW5uYXNJbWcgPSB0ZXJlc0FudGVubmFzLmZpbmQoJy50ZXJlc19fYW50ZW5uYXMtaW1nJyk7XHJcblxyXG5sZXQgdGVyZXNJc09uID0gZmFsc2U7XHJcbmxldCB0ZXJlc0FudGVubmFzSXNVcCA9IGZhbHNlO1xyXG5sZXQgdGVyZXNJc0NvbXBsaXRlZCA9IGZhbHNlO1xyXG5cclxudGVyZXNIYW5kbGUuY2xpY2soZSA9PiB7XHJcblx0aWYgKCF0ZXJlc0lzQ29tcGxpdGVkKSB7XHJcblx0XHR0ZXJlc0hhbmRsZUltZy50b2dnbGVDbGFzcygndGVyZXNfX2hhbmRsZS1pbWdfY2xpY2tlZCcpO1xyXG5cclxuXHRcdHNldFRpbWVvdXQoKCkgPT4ge1xyXG5cdFx0XHR0ZXJlc1NjcmVlbkltZy50b2dnbGVDbGFzcygndGVyZXNfX2hhbmRsZS1pbWdfYWN0aXZlJyk7XHJcblx0XHR9LCAzMDApO1xyXG5cclxuXHRcdGlmICh0ZXJlc0FudGVubmFzSXNVcCkge1xyXG5cdFx0XHR0ZXJlc0NoYW5nZUNvbXBsaXRlZFN0YXR1cygpO1xyXG5cdFx0fVxyXG5cclxuXHRcdHRlcmVzSXNPbiA9ICF0ZXJlc0lzT247XHJcblx0fVxyXG59KVxyXG5cclxudGVyZXNBbnRlbm5hc0ltZy5jbGljayhlID0+IHtcclxuXHRpZiAoIXRlcmVzSXNDb21wbGl0ZWQpIHtcclxuXHRcdHRlcmVzQW50ZW5uYXNJbWcudG9nZ2xlQ2xhc3MoJ3RlcmVzX19hbnRlbm5hcy1pbWdfY2xpY2tlZCcpO1xyXG5cclxuXHRcdGlmICh0ZXJlc0lzT24pIHtcclxuXHRcdFx0dGVyZXNDaGFuZ2VDb21wbGl0ZWRTdGF0dXMoKTtcclxuXHRcdH1cclxuXHJcblx0XHR0ZXJlc0FudGVubmFzSXNVcCA9ICF0ZXJlc0FudGVubmFzSXNVcDtcclxuXHR9XHJcbn0pXHJcblxyXG5mdW5jdGlvbiB0ZXJlc0NoYW5nZUNvbXBsaXRlZFN0YXR1cygpIHtcclxuXHR0ZXJlc0NvbnRlbnRJbWcuYWRkQ2xhc3MoJ3RlcmVzX19pbWctY29udGVudF9hY3RpdmUnKTtcclxuXHR0ZXJlc0lzQ29tcGxpdGVkID0gdHJ1ZTtcclxuXHRzZXRUaW1lb3V0KCgpID0+IHtcclxuXHRcdGxldCBtcmNvaW5zID0gK2xvY2FsU3RvcmFnZS5nZXRJdGVtKCdtcmNvaW5zJyk7XHJcblx0XHRtcmNvaW5zICs9IDIwMDtcclxuXHRcdGxvY2FsU3RvcmFnZS5zZXRJdGVtKCdtcmNvaW5zJywgbXJjb2lucyk7XHJcblxyXG5cdFx0Y29uc3QgbXJjb2luc1ZpZXcgPSAkKCcucGVyc29uYWwtYmFsYW5jZV9fbnVtYmVyJyk7XHJcblx0XHRtcmNvaW5zVmlldy50ZXh0KGxvY2FsU3RvcmFnZS5nZXRJdGVtKCdtcmNvaW5zJykpO1xyXG5cclxuXHRcdGxldCBnYW1lc0NvbXBsaXRlZCA9IGxvY2FsU3RvcmFnZS5nZXRJdGVtKCdnYW1lc0NvbXBsaXRlZCcpO1xyXG5cdFx0bGV0IGdhbWVzQ29tcGxpdGVkTmV3ID0gZ2FtZXNDb21wbGl0ZWQuc3BsaXQoJywnKTtcclxuXHRcdGdhbWVzQ29tcGxpdGVkTmV3LnB1c2goJ3RlcmVzJyk7XHJcblx0XHRsb2NhbFN0b3JhZ2Uuc2V0SXRlbSgnZ2FtZXNDb21wbGl0ZWQnLCBnYW1lc0NvbXBsaXRlZE5ldyk7XHJcblxyXG5cdFx0YWxlcnQoJysyMDAgTVJDb2lucycpO1xyXG5cdH0sIDUwMCk7XHJcbn0iLCJjb25zdCBtb2RhbCA9ICQoJyNtb2RhbCcpO1xyXG5jb25zdCBtb2RhbENvbnRlbnQgPSBtb2RhbC5maW5kKCcub3ZlcmxheV9fY29udGVudCcpO1xyXG5cclxuXHJcbiQoJy5vdmVybGF5X19idG4nKS5jbGljaygoKSA9PiB7XHJcblx0bW9kYWxDb250ZW50LnN0b3AodHJ1ZSwgZmFsc2UpLmFuaW1hdGUoe1xyXG5cdFx0J3RvcCc6ICctMiUnXHJcblx0fSwgMjAwKS5hbmltYXRlKHtcclxuXHRcdCd0b3AnOiAnMTAwJSdcclxuXHR9LCAzMDApO1xyXG5cdG1vZGFsLnN0b3AodHJ1ZSwgZmFsc2UpLmFuaW1hdGUoe1xyXG5cdFx0J29wYWNpdHknOiAnMCdcclxuXHR9LCA1MDApO1xyXG5cdHNldFRpbWVvdXQoKCkgPT4ge1xyXG5cdFx0bW9kYWwuY3NzKCdkaXNwbGF5JywgJ25vbmUnKTtcclxuXHR9LCA1MDApO1xyXG5cclxuXHR3YXNTY3JvbGwrKztcclxufSlcclxuXHJcbiQoJy5oZXJvX19vcGVuLW92ZXJsYXknKS5jbGljaygoKSA9PiB7XHJcblx0bW9kYWwuY3NzKCdkaXNwbGF5JywgJ2ZsZXgnKTtcclxuXHRtb2RhbENvbnRlbnQuc3RvcCh0cnVlLCBmYWxzZSkuYW5pbWF0ZSh7XHJcblx0XHQndG9wJzogJy0yJSdcclxuXHR9LCA0MDApLmFuaW1hdGUoe1xyXG5cdFx0J3RvcCc6ICcwJ1xyXG5cdH0sIDEwMCk7XHJcblx0bW9kYWwuc3RvcCh0cnVlLCBmYWxzZSkuYW5pbWF0ZSh7XHJcblx0XHQnb3BhY2l0eSc6ICcxJ1xyXG5cdH0sIDMwMCk7XHJcblxyXG5cdHdhc1Njcm9sbC0tO1xyXG59KSIsIiQoZG9jdW1lbnQpLnJlYWR5KCgpID0+IHtcclxuXHRsZXQgbG9jYWxTdG9yYWdlRGF0ZSA9IGxvY2FsU3RvcmFnZS5nZXRJdGVtKCdkYXRlJyk7XHJcblx0bGV0IGRhdGUgPSBuZXcgRGF0ZTtcclxuXHJcblx0aWYgKGRhdGUgLSBsb2NhbFN0b3JhZ2VEYXRlID4gMzYwMDAwMCkge1xyXG5cdFx0bGV0IGdhbWVzQ29tcGxpdGVkID0gW107XHJcblx0XHRsb2NhbFN0b3JhZ2Uuc2V0SXRlbSgnZ2FtZXNDb21wbGl0ZWQnLCBnYW1lc0NvbXBsaXRlZCk7XHJcblxyXG5cdFx0bG9jYWxTdG9yYWdlLnNldEl0ZW0oJ21yY29pbnMnLCAwKTtcclxuXHRcdGxvY2FsU3RvcmFnZS5zZXRJdGVtKCdkYXRlJywgZGF0ZS5nZXRUaW1lKCkpO1xyXG5cdH0gZWxzZSBpZiAoZGF0ZSAtIGxvY2FsU3RvcmFnZURhdGUgPT09IE5hTikge1xyXG5cdFx0bG9jYWxTdG9yYWdlLnNldEl0ZW0oJ2RhdGUnLCBkYXRlLmdldFRpbWUoKSk7XHJcblx0fVxyXG5cclxuXHRsZXQgZ2FtZXNDb21wbGl0ZWQgPSBsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgnZ2FtZXNDb21wbGl0ZWQnKTtcclxuXHRsZXQgZ2FtZXNDb21wbGl0ZWROZXcgPSBnYW1lc0NvbXBsaXRlZC5zcGxpdCgnLCcpO1xyXG5cclxuXHRpZiAoZ2FtZXNDb21wbGl0ZWROZXcuaW5kZXhPZignbWljcm8nKSAhPT0gLTEpIHtcclxuXHRcdGNvbnN0IGdhbWUgPSAkKCcuZ2FtZV9fbWljcm8nKTtcclxuXHRcdGdhbWUuYWRkQ2xhc3MoJ2dhbWVfY29tcGxpdGVkJyk7XHJcblx0fVxyXG5cclxuXHRpZiAoZ2FtZXNDb21wbGl0ZWROZXcuaW5kZXhPZigncGlwcmVzJykgIT09IC0xKSB7XHJcblx0XHRjb25zdCBnYW1lID0gJCgnLmdhbWVfX3BpcHJlcycpO1xyXG5cdFx0Z2FtZS5hZGRDbGFzcygnZ2FtZV9jb21wbGl0ZWQnKTtcclxuXHR9XHJcblxyXG5cdGlmIChnYW1lc0NvbXBsaXRlZE5ldy5pbmRleE9mKCd0ZXJlcycpICE9PSAtMSkge1xyXG5cdFx0Y29uc3QgZ2FtZSA9ICQoJy5nYW1lX190ZXJlcycpO1xyXG5cdFx0Z2FtZS5hZGRDbGFzcygnZ2FtZV9jb21wbGl0ZWQnKTtcclxuXHR9XHJcblxyXG5cdGlmIChnYW1lc0NvbXBsaXRlZE5ldy5pbmRleE9mKCdldnMnKSAhPT0gLTEpIHtcclxuXHRcdGNvbnN0IGdhbWUgPSAkKCcuZ2FtZV9fZXZzJyk7XHJcblx0XHRnYW1lLmFkZENsYXNzKCdnYW1lX2NvbXBsaXRlZCcpO1xyXG5cdH1cclxuXHJcblx0aWYgKGdhbWVzQ29tcGxpdGVkTmV3LmluZGV4T2YoJ3BtcycpICE9PSAtMSkge1xyXG5cdFx0Y29uc3QgZ2FtZSA9ICQoJy5nYW1lX19wbXMnKTtcclxuXHRcdGdhbWUuYWRkQ2xhc3MoJ2dhbWVfY29tcGxpdGVkJyk7XHJcblx0fVxyXG5cclxuXHRpZiAoZ2FtZXNDb21wbGl0ZWROZXcuaW5kZXhPZigncG9pdCcpICE9PSAtMSkge1xyXG5cdFx0Y29uc3QgZ2FtZSA9ICQoJy5nYW1lX19wb2l0Jyk7XHJcblx0XHRnYW1lLmFkZENsYXNzKCdnYW1lX2NvbXBsaXRlZCcpO1xyXG5cdH1cclxuXHJcblx0Y29uc3QgbXJjb2luc1ZpZXcgPSAkKCcucGVyc29uYWwtYmFsYW5jZV9fbnVtYmVyJyk7XHJcblx0bXJjb2luc1ZpZXcudGV4dChsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgnbXJjb2lucycpKTtcclxufSkiLCJjb25zdCBzZWN0aW9ucyA9ICQoJ3NlY3Rpb24nKTtcclxuY29uc3QgZGlzcGxheSA9ICQoJy5tYWluY29udGVudCcpO1xyXG5jb25zdCBzZWN0aW9uU3BlY2lhbHRpZXMgPSAkKCcuc2VjdGlvbl9fc3BlY2lhbHRpZXMnKTtcclxuXHJcbmxldCB3YXNTY3JvbGwgPSAwO1xyXG5cclxuY29uc3QgbW9iaWxlRGV0ZWN0ID0gbmV3IE1vYmlsZURldGVjdCh3aW5kb3cubmF2aWdhdG9yLnVzZXJBZ2VudCk7XHJcbmNvbnN0IGlzTW9iaWxlID0gbW9iaWxlRGV0ZWN0Lm1vYmlsZSgpO1xyXG5cclxuc2VjdGlvbnMuZmlyc3QoKS5hZGRDbGFzcygnYWN0aXZlJyk7XHJcblxyXG5sZXQgaW5TY3JvbGwgPSBmYWxzZTtcclxuXHJcbmNvbnN0IGNvdW50U2VjdGlvblBvc2l0aW9uID0gc2VjdGlvbkVxID0+IHtcclxuXHRjb25zdCBwb3NpdGlvbiA9IHNlY3Rpb25FcSAqIC0xMDA7XHJcblxyXG5cdGlmIChpc05hTihwb3NpdGlvbikpIHtcclxuXHRcdGNvbnNvbGUuZXJyb3IoJ9Cf0LXRgNC10LTQsNC90L4g0L3QtSDQstC10YDQvdC+0LUg0LfQvdCw0YfQtdC90LjQtSDQsiBjb3VudFNlY3Rpb25Qb3NpdGlvbicpO1xyXG5cdFx0cmV0dXJuIDA7XHJcblx0fVxyXG5cclxuXHRyZXR1cm4gcG9zaXRpb247XHJcbn1cclxuXHJcbmNvbnN0IHJlc2V0QWN0aXZlQ2xhc3NGb3JJdGVtID0gKGl0ZW1zLCBpdGVtRXEsIGFjdGl2ZUNsYXNzKSA9PiB7XHJcblx0aXRlbXMuZXEoaXRlbUVxKS5hZGRDbGFzcyhhY3RpdmVDbGFzcykuc2libGluZ3MoKS5yZW1vdmVDbGFzcyhhY3RpdmVDbGFzcyk7XHJcbn1cclxuXHJcbmZ1bmN0aW9uIHNjcm9sbERpc3BsYXlOb25lKHNjcm9sbCkge1xyXG5cdHNldFRpbWVvdXQoKCkgPT4ge1xyXG5cdFx0c2Nyb2xsLmNzcygnZGlzcGxheScsICdub25lJyk7XHJcblx0fSwgNTAwKTtcclxufVxyXG5cclxuY29uc3QgcGVyZm9tVHJhbnNpdGlvbiA9IChzZWN0aW9uRXEsIGRpcmVjdGlvbikgPT4ge1xyXG5cdGlmIChpblNjcm9sbCkgcmV0dXJuO1xyXG5cdGNvbnN0IHNjcm9sbEJ1dHRvbnMgPSAkKCcuc2Nyb2xsX19idXR0b25zJyk7XHJcblxyXG5cdGlmIChzZWN0aW9uRXEgLSAxID09PSAwICYmIGRpcmVjdGlvbiA9PT0gJ25leHQnKSB7XHJcblx0XHRzY3JvbGxCdXR0b25zLmNzcygnZGlzcGxheScsICdmbGV4Jykuc3RvcCh0cnVlLCB0cnVlKS5hbmltYXRlKHtcclxuXHRcdFx0J29wYWNpdHknOiAnMSdcclxuXHRcdH0sIDMwMCk7XHJcblx0fSBlbHNlIGlmIChzZWN0aW9uRXEgKyAxID09PSBzZWN0aW9ucy5sZW5ndGggJiYgZGlyZWN0aW9uID09PSAnbmV4dCcpIHtcclxuXHRcdHNjcm9sbEJ1dHRvbnMuc3RvcCh0cnVlLCB0cnVlKS5hbmltYXRlKHtcclxuXHRcdFx0J29wYWNpdHknOiAnMCdcclxuXHRcdH0sIDMwMCwgc2Nyb2xsRGlzcGxheU5vbmUoc2Nyb2xsQnV0dG9ucykpO1xyXG5cdH1cclxuXHJcblx0aWYgKHNlY3Rpb25FcSArIDIgPT09IHNlY3Rpb25zLmxlbmd0aCAmJiBkaXJlY3Rpb24gPT09ICdwcmV2Jykge1xyXG5cdFx0c2Nyb2xsQnV0dG9ucy5jc3MoJ2Rpc3BsYXknLCAnZmxleCcpLnN0b3AodHJ1ZSwgdHJ1ZSkuYW5pbWF0ZSh7XHJcblx0XHRcdCdvcGFjaXR5JzogJzEnXHJcblx0XHR9LCAzMDApO1xyXG5cdH0gZWxzZSBpZiAoc2VjdGlvbkVxID09PSAwICYmIGRpcmVjdGlvbiA9PT0gJ3ByZXYnKSB7XHJcblx0XHRzY3JvbGxCdXR0b25zLnN0b3AodHJ1ZSwgdHJ1ZSkuYW5pbWF0ZSh7XHJcblx0XHRcdCdvcGFjaXR5JzogJzAnXHJcblx0XHR9LCAzMDAsIHNjcm9sbERpc3BsYXlOb25lKHNjcm9sbEJ1dHRvbnMpKTtcclxuXHR9XHJcblxyXG5cdGNvbnN0IHRyYW5zaXRpb25PdmVyID0gMTAwMDtcclxuXHRjb25zdCBtb3VzZUluZXJ0aW9uT3ZlciA9IDMwMDtcclxuXHJcblx0aW5TY3JvbGwgPSB0cnVlO1xyXG5cclxuXHRjb25zdCBwb3NpdGlvbiA9IGNvdW50U2VjdGlvblBvc2l0aW9uKHNlY3Rpb25FcSk7XHJcblxyXG5cdGRpc3BsYXkuY3NzKHtcclxuXHRcdHRyYW5zZm9ybTogYHRyYW5zbGF0ZVkoJHtwb3NpdGlvbn0lKWBcclxuXHR9KTtcclxuXHJcblx0cmVzZXRBY3RpdmVDbGFzc0Zvckl0ZW0oc2VjdGlvbnMsIHNlY3Rpb25FcSwgJ2FjdGl2ZScpO1xyXG5cclxuXHRzZXRUaW1lb3V0KCgpID0+IHtcclxuXHRcdGluU2Nyb2xsID0gZmFsc2U7XHJcblxyXG5cdH0sIHRyYW5zaXRpb25PdmVyICsgbW91c2VJbmVydGlvbk92ZXIpO1xyXG59XHJcblxyXG5jb25zdCB2aWV3cG9ydFNjcm9sbGVyID0gKCkgPT4ge1xyXG5cdGNvbnN0IGFjdGl2ZVNlY3Rpb24gPSBzZWN0aW9ucy5maWx0ZXIoJy5hY3RpdmUnKTtcclxuXHRjb25zdCBuZXh0U2VjdGlvbiA9IGFjdGl2ZVNlY3Rpb24ubmV4dCgnc2VjdGlvbicpO1xyXG5cdGNvbnN0IHByZXZTZWN0aW9uID0gYWN0aXZlU2VjdGlvbi5wcmV2KCdzZWN0aW9uJyk7XHJcblxyXG5cdHJldHVybiB7XHJcblx0XHRuZXh0KCkge1xyXG5cdFx0XHRpZiAobmV4dFNlY3Rpb24ubGVuZ3RoKSB7XHJcblx0XHRcdFx0cGVyZm9tVHJhbnNpdGlvbihuZXh0U2VjdGlvbi5pbmRleCgpLCAnbmV4dCcpO1xyXG5cdFx0XHR9XHJcblx0XHR9LFxyXG5cdFx0cHJldigpIHtcclxuXHRcdFx0aWYgKHByZXZTZWN0aW9uLmxlbmd0aCkge1xyXG5cdFx0XHRcdHBlcmZvbVRyYW5zaXRpb24ocHJldlNlY3Rpb24uaW5kZXgoKSwgJ3ByZXYnKTtcclxuXHRcdFx0fVxyXG5cdFx0fVxyXG5cdH07XHJcbn1cclxuXHJcbiQod2luZG93KS5vbignd2hlZWwnLCBlID0+IHtcclxuXHRjb25zdCBkZWx0YVkgPSBlLm9yaWdpbmFsRXZlbnQuZGVsdGFZO1xyXG5cdGNvbnN0IHNjcm9sbGVyID0gdmlld3BvcnRTY3JvbGxlcigpO1xyXG5cdFxyXG5cdGlmIChzZWN0aW9uU3BlY2lhbHRpZXMuaGFzQ2xhc3MoJ2FjdGl2ZScpKSB7XHJcblx0XHRpZiAoKGNoZWNrUG9pbnQgPj0gMCAmJiBjaGVja1BvaW50IDwgMzMgJiYgZGVsdGFZID4gMCkgfHwgKGNoZWNrUG9pbnQgPD0gMzMgJiYgY2hlY2tQb2ludCA+IDAgJiYgZGVsdGFZIDwgMCkpIHtcclxuXHRcdFx0c2VjdGlvblNwZWNpYWx0aWVzLmFkZENsYXNzKCdzcGVjaWFsaXRlc19hY3RpdmUnKTtcclxuXHRcdH0gZWxzZSBpZiAoKGNoZWNrUG9pbnQgPT09IDAgJiYgZGVsdGFZIDwgMCkgfHwgKGNoZWNrUG9pbnQgPT09IDMzICYmIGRlbHRhWSA+IDApKSB7XHJcblx0XHRcdHNlY3Rpb25TcGVjaWFsdGllcy5yZW1vdmVDbGFzcygnc3BlY2lhbGl0ZXNfYWN0aXZlJyk7XHJcblx0XHR9XHJcblx0fVxyXG5cclxuXHRpZiAoIXNlY3Rpb25TcGVjaWFsdGllcy5oYXNDbGFzcygnc3BlY2lhbGl0ZXNfYWN0aXZlJykgJiYgd2FzU2Nyb2xsICE9PSAwKSB7XHJcblx0XHRpZiAoZGVsdGFZID4gMCkge1xyXG5cdFx0XHRzY3JvbGxlci5uZXh0KCk7XHJcblx0XHR9XHJcblx0XHRpZiAoZGVsdGFZIDwgMCkge1xyXG5cdFx0XHRzY3JvbGxlci5wcmV2KCk7XHJcblx0XHR9XHJcblx0fVxyXG59KVxyXG5cclxuJCgnLnNjcm9sbF9fYnRuJykuY2xpY2soZSA9PiB7XHJcblx0Y29uc3Qgc2Nyb2xsZXIgPSB2aWV3cG9ydFNjcm9sbGVyKCk7XHJcblx0c2VjdGlvblNwZWNpYWx0aWVzLnJlbW92ZUNsYXNzKCdzcGVjaWFsaXRlc19hY3RpdmUnKTtcclxuXHJcblx0aWYgKGUuY3VycmVudFRhcmdldC5nZXRBdHRyaWJ1dGUoJ2RhdGEtd2F5JykgPT09ICduZXh0Jykge1xyXG5cdFx0c2Nyb2xsZXIubmV4dCgpO1xyXG5cdH0gZWxzZSB7XHJcblx0XHRzY3JvbGxlci5wcmV2KCk7XHJcblx0fVxyXG59KVxyXG5cclxuJCgnLndyYXBwZXInKS5vbigndG91Y2htb3ZlJywgZSA9PiBlLnByZXZlbnREZWZhdWx0KCkpO1xyXG5cclxuaWYgKGlzTW9iaWxlKSB7XHJcblx0Ly8gaHR0cHM6Ly9naXRodWIuY29tL21hdHRicnlzb24vVG91Y2hTd2lwZS1KcXVlcnktUGx1Z2luXHJcblxyXG5cdCQoXCJib2R5XCIpLnN3aXBlKHtcclxuXHRcdFx0c3dpcGU6IGZ1bmN0aW9uIChldmVudCwgZGlyZWN0aW9uKSB7XHJcblx0XHRcdFx0XHRjb25zdCBzY3JvbGxlciA9IHZpZXdwb3J0U2Nyb2xsZXIoKTtcclxuXHRcdFx0XHRcdGxldCBzY3JvbGxEaXJlY3Rpb247XHJcblxyXG5cdFx0XHRcdFx0aWYgKHNlY3Rpb25TcGVjaWFsdGllcy5oYXNDbGFzcygnYWN0aXZlJykpIHtcclxuXHRcdFx0XHRcdFx0aWYgKChjaGVja1BvaW50ID49IDAgJiYgY2hlY2tQb2ludCA8IDMzICYmIGRpcmVjdGlvbiA9PT0gXCJ1cFwiKSB8fCAoY2hlY2tQb2ludCA8PSAzMyAmJiBjaGVja1BvaW50ID4gMCAmJiBkaXJlY3Rpb24gPT09IFwiZG93blwiKSkge1xyXG5cdFx0XHRcdFx0XHRcdHNlY3Rpb25TcGVjaWFsdGllcy5hZGRDbGFzcygnc3BlY2lhbGl0ZXNfYWN0aXZlJyk7XHJcblx0XHRcdFx0XHRcdH0gZWxzZSBpZiAoKGNoZWNrUG9pbnQgPT09IDAgJiYgZGlyZWN0aW9uID09PSBcImRvd25cIikgfHwgKGNoZWNrUG9pbnQgPT09IDMzICYmIGRpcmVjdGlvbiA9PT0gXCJ1cFwiKSkge1xyXG5cdFx0XHRcdFx0XHRcdHNlY3Rpb25TcGVjaWFsdGllcy5yZW1vdmVDbGFzcygnc3BlY2lhbGl0ZXNfYWN0aXZlJyk7XHJcblx0XHRcdFx0XHRcdH1cclxuXHRcdFx0XHRcdH1cclxuXHRcdFx0XHRcclxuXHRcdFx0XHRcdGlmICghc2VjdGlvblNwZWNpYWx0aWVzLmhhc0NsYXNzKCdzcGVjaWFsaXRlc19hY3RpdmUnKSAmJiB3YXNTY3JvbGwgIT09IDApIHtcclxuXHRcdFx0XHRcdFx0aWYgKGRpcmVjdGlvbiA9PT0gXCJ1cFwiKSBzY3JvbGxEaXJlY3Rpb24gPSAnbmV4dCc7XHJcblx0XHRcdFx0XHRcdGlmIChkaXJlY3Rpb24gPT09IFwiZG93blwiKSBzY3JvbGxEaXJlY3Rpb24gPSAncHJldic7XHJcblx0XHRcdFx0XHRcdHNjcm9sbGVyW3Njcm9sbERpcmVjdGlvbl0oKTtcclxuXHRcdFx0XHRcdH1cclxuXHJcblx0XHRcdFx0XHRpZiAoc2VjdGlvblNwZWNpYWx0aWVzLmhhc0NsYXNzKCdzcGVjaWFsaXRlc19hY3RpdmUnKSkge1xyXG5cdFx0XHRcdFx0XHRjb25zdCBhY3Rpb24gPSBwdXNrQW5pbWF0aW9uKCk7XHJcblx0XHRcdFxyXG5cdFx0XHRcdFx0XHRpZiAoZGlyZWN0aW9uID09PSBcInVwXCIgJiYgY2hlY2tBbmltRXhpc3QgPT09IDApIGFjdGlvbi5uZXh0KCk7XHJcblx0XHRcdFx0XHRcdGlmIChkaXJlY3Rpb24gPT09IFwiZG93blwiICYmIGNoZWNrQW5pbUV4aXN0ID09PSAwKSBhY3Rpb24ucHJldigpO1xyXG5cdFx0XHRcdFx0fVxyXG5cdFx0XHR9XHJcblx0fSk7XHJcbn0iLCJjb25zdCBjaGFyYWN0ZXIgPSAkKCcuc3BlY2lhbHRpZXNfX3dheS1jaGFyYWN0ZXInKTtcclxuY29uc3QgdGl0bGUgPSAkKCcuc3BlY2lhbHRpZXNfX3RpdGxlJyk7XHJcbmNvbnN0IHN1YnRpdGxlID0gJCgnLnNwZWNpYWx0aWVzX19zdWJ0aXRsZScpO1xyXG5jb25zdCBnYW1lcyA9ICQoJy5nYW1lJyk7XHJcblxyXG5jb25zdCBwb2ludHMgPSBbXHJcblx0Wy05LCAxM10sXHJcblx0Wy04LjUsIDI3XSxcclxuXHRbLTcuNSwgNDFdLFxyXG5cdFstNi41LCA1NV0sXHJcblx0Wy00LCA2OS41XSxcclxuXHRbLTEsIDgyLjVdLFxyXG5cdFs5LCA4OF0sXHJcblx0WzEzLCA3NC41XSxcclxuXHRbMTQsIDYwLjVdLFxyXG5cdFsxNSwgNDddLFxyXG5cdFsxNS41LCAzMi41XSxcclxuXHRbMTYuNSwgMTguNV0sXHJcblx0WzE5LCA0LjVdLFxyXG5cdFsyOCwgLTVdLFxyXG5cdFszNS41LCA2XSxcclxuXHRbMzcuNSwgMjBdLFxyXG5cdFszOC41LCAzNF0sXHJcblx0WzM5LCA0OC41XSxcclxuXHRbNDAsIDYyLjVdLFxyXG5cdFs0MywgNzYuNV0sXHJcblx0WzQ2LCA5MF0sXHJcblx0WzU3LCA5MC41XSxcclxuXHRbNjIsIDc3LjVdLFxyXG5cdFs2NCwgNjMuNV0sXHJcblx0WzY1LCA0OS41XSxcclxuXHRbNjYsIDM1LjVdLFxyXG5cdFs2NiwgMjFdLFxyXG5cdFs2OSwgN10sXHJcblx0Wzc5LCAyXSxcclxuXHRbODUsIDE1XSxcclxuXHRbODcsIDI5XSxcclxuXHRbODcsIDQzXSxcclxuXHRbODcsIDU3XSxcclxuXHRbODcsIDcyXSxcclxuXTtcclxuY29uc3Qgc3BlY2lhbHRpZXMgPSBbXHJcblx0XCLQnNC40LrRgNC+LSDQuCDQvdCw0L3QvtGN0LvQtdC60YLRgNC+0L3QvdGL0LUg0YLQtdGF0L3QvtC70L7Qs9C40Lgg0Lgg0YHQuNGB0YLQtdC80YtcIixcclxuXHRcItCf0YDQvtC10LrRgtC40YDQvtCy0LDQvdC40LUg0Lgg0L/RgNC+0LjQt9Cy0L7QtNGB0YLQstC+INGA0LDQtNC40L7RjdC70LXQutGC0YDQvtC90L3Ri9GFINGB0YDQtdC00YHRgtCyXCIsXHJcblx0XCLQotC10YXQvdC40YfQtdGB0LrQsNGPINGN0LrRgdC/0LvRg9Cw0YLQsNGG0LjRjyDRgNCw0LTQuNC+0Y3Qu9C10LrRgtGA0L7QvdC90YvRhSDRgdGA0LXQtNGB0YLQslwiLFxyXG5cdFwi0K3Qu9C10LrRgtGA0L7QvdC90YvQtSDQstGL0YfQuNGB0LvQuNGC0LXQu9GM0L3Ri9C1INGB0YDQtdC00YHRgtCy0LBcIixcclxuXHRcItCf0YDQvtCz0YDQsNC80LzQuNGA0YPQtdC80YvQtSDQvNC+0LHQuNC70YzQvdGL0LUg0YHQuNGB0YLQtdC80YtcIixcclxuXHRcItCf0YDQvtCz0YDQsNC80LzQvdC+0LUg0L7QsdC10YHQv9C10YfQtdC90LjQtSDQuNC90YTQvtGA0LzQsNGG0LjQvtC90L3Ri9GFINGC0LXRhdC90L7Qu9C+0LPQuNC5XCIsXHJcbl07XHJcblxyXG5jb25zdCBpbnN0cnVjdGlvbnMgPSBbXHJcblx0XCLQn9C10YDQtdGC0LDRidC40YLQtSDRjdC70LXQvNC10L3RgtGLINC90LAg0YHQstC+0LUg0LzQtdGB0YLQvlwiLFxyXG5cdFwi0J3QsNGB0YLRgNC+0LnRgtC1INCw0LzQv9C70LjRgtGD0LTRgyDRgdC40L3QtdC5INCy0L7Qu9C90Ysg0L/QviDRiNCw0LHQu9C+0L3RgyDRgdC10YDQvtC5INCy0L7Qu9C90YtcIixcclxuXHRcItCS0LrQu9GO0YfQuNGC0LUg0YLQtdC70LXQstC40LfQvtGAINC4INC90LDRgdGC0YDQvtC50YLQtSDRgdC40LPQvdCw0LtcIixcclxuXHRcItCh0L7QtdC00LjQvdC40YLQtSDQv9GA0L7QstC+0LTQsCDQvtC00LjQvdCw0LrQvtCz0L4g0YbQstC10YLQsCAo0KHQvdCw0YfQsNC70LAg0LrQu9C40Log0L/QviDQu9C10LLQvtC80YMg0L/RgNC+0LLQvtC00YMsINC/0L7RgtC+0Lwg0L/QviDQv9GA0LDQstC+0LzRgylcIixcclxuXHRcItCX0LDQv9GD0YHRgtC40YLQtSDQuNCz0YDRgyDQvdCw0LbQsNCyINC90LAg0LrRgNCw0YHQvdGD0Y4g0LrQvdC+0L/QutGDLiDQl9Cw0L/QvtC80LjQvdCw0LnRgtC1INC/0L7RgNGP0LTQvtC6INCy0LrQu9GO0YfQtdC90LjRjyDQuCDQv9C+0LLRgtC+0YDRj9C50YLQtSDQtdCz0L5cIixcclxuXHRcItCX0LDQv9GD0YHRgtC40YLQtSDQuNCz0YDRgyDQuCDRgdC+0LHQtdGA0LjRgtC1INC40YHRhdC+0LTQvdGD0Y4g0LrQsNGA0YLQuNC90LrRg1wiLFxyXG5dO1xyXG5cclxubGV0IGNoZWNrUG9pbnQgPSAwO1xyXG5sZXQgY2hlY2tUZXh0ID0gMDtcclxubGV0IGNoZWNrR2FtZSA9IDA7XHJcbmxldCBjaGVja0FuaW1FeGlzdCA9IDA7XHJcblxyXG5mdW5jdGlvbiByZXNldENoZWNrQW5pbUV4aXN0KCkge1xyXG5cdGNoZWNrQW5pbUV4aXN0ID0gMDtcclxufVxyXG5cclxuZnVuY3Rpb24gY2hhbmdlR2FtZSh0eXBlKSB7XHJcblx0aWYgKGNoZWNrR2FtZSA9PT0gNiAmJiB0eXBlID09PSBcIm5leHRcIikge1xyXG5cdFx0Z2FtZXMuZXEoY2hlY2tHYW1lIC0gMSkuY3NzKCdvcGFjaXR5JywgJzAnKTtcclxuXHRcdHNldFRpbWVvdXQoKCkgPT4ge1xyXG5cdFx0XHRnYW1lcy5lcShjaGVja0dhbWUgLSAxKS5jc3MoJ2Rpc3BsYXknLCAnbm9uZScpO1xyXG5cdFx0XHRjaGVja0dhbWUrKztcclxuXHRcdH0sIDMwMCk7XHJcblx0fSBlbHNlIGlmICh0eXBlID09PSBcIm5leHRcIikge1xyXG5cdFx0Z2FtZXMuZXEoY2hlY2tHYW1lIC0gMSkuY3NzKCdvcGFjaXR5JywgJzAnKTtcclxuXHRcdHNldFRpbWVvdXQoKCkgPT4ge1xyXG5cdFx0XHRnYW1lcy5lcShjaGVja0dhbWUgLSAxKS5jc3MoJ2Rpc3BsYXknLCAnbm9uZScpO1xyXG5cdFx0XHRnYW1lcy5lcShjaGVja0dhbWUpLmNzcygnZGlzcGxheScsICdmbGV4Jyk7XHJcblx0XHRcdGdhbWVzLmVxKGNoZWNrR2FtZSkuY3NzKCdvcGFjaXR5JywgJzEnKTtcclxuXHRcdFx0Y2hlY2tHYW1lKys7XHJcblx0XHR9LCAzMDApO1xyXG5cdH1cclxuXHJcblx0aWYgKGNoZWNrR2FtZSA9PT0gMSAmJiB0eXBlID09PSBcInByZXZcIikge1xyXG5cdFx0Z2FtZXMuZXEoY2hlY2tHYW1lIC0gMSkuY3NzKCdvcGFjaXR5JywgJzAnKTtcclxuXHRcdHNldFRpbWVvdXQoKCkgPT4ge1xyXG5cdFx0XHRnYW1lcy5lcShjaGVja0dhbWUgLSAxKS5jc3MoJ2Rpc3BsYXknLCAnbm9uZScpO1xyXG5cdFx0XHRjaGVja0dhbWUtLTtcclxuXHRcdH0sIDMwMCk7XHJcblx0fSBlbHNlIGlmICh0eXBlID09PSBcInByZXZcIikge1xyXG5cdFx0Z2FtZXMuZXEoY2hlY2tHYW1lIC0gMSkuY3NzKCdvcGFjaXR5JywgJzAnKTtcclxuXHRcdHNldFRpbWVvdXQoKCkgPT4ge1xyXG5cdFx0XHRnYW1lcy5lcShjaGVja0dhbWUgLSAxKS5jc3MoJ2Rpc3BsYXknLCAnbm9uZScpO1xyXG5cdFx0XHRnYW1lcy5lcShjaGVja0dhbWUgLSAyKS5jc3MoJ2Rpc3BsYXknLCAnZmxleCcpO1xyXG5cdFx0XHRnYW1lcy5lcShjaGVja0dhbWUgLSAyKS5jc3MoJ29wYWNpdHknLCAnMScpO1xyXG5cdFx0XHRjaGVja0dhbWUtLTtcclxuXHRcdH0sIDMwMCk7XHJcblx0fVxyXG59XHJcblxyXG5mdW5jdGlvbiBjaGFuZ2VUZXh0KHR5cGUpIHtcclxuXHRpZiAoY2hlY2tUZXh0ID4gNSAmJiB0eXBlID09PSBcIm5leHRcIikge1xyXG5cdFx0dGl0bGUuY3NzKCdvcGFjaXR5JywgJzAnKTtcclxuXHRcdHN1YnRpdGxlLmNzcygnb3BhY2l0eScsICcwJyk7XHJcblx0XHRzZXRUaW1lb3V0KCgpID0+IHtcclxuXHRcdFx0dGl0bGUudGV4dChcItCQINCy0YHQtdC1LCDRgdC/0LXRhtC40LDQu9GM0L3QvtGB0YLQuCDQt9Cw0LrQvtC90YfQuNC70LjRgdGMXCIpO1xyXG5cdFx0XHR0aXRsZS5jc3MoJ29wYWNpdHknLCAnMScpO1xyXG5cclxuXHRcdFx0c3VidGl0bGUudGV4dChcIlwiKTtcclxuXHRcdFx0c3VidGl0bGUuY3NzKCdvcGFjaXR5JywgJzAnKTtcclxuXHJcblx0XHRcdGNoZWNrVGV4dCsrO1xyXG5cdFx0fSwgMzAwKTtcclxuXHR9IGVsc2UgaWYgKHR5cGUgPT09IFwibmV4dFwiKSB7XHJcblx0XHR0aXRsZS5jc3MoJ29wYWNpdHknLCAnMCcpO1xyXG5cdFx0c3VidGl0bGUuY3NzKCdvcGFjaXR5JywgJzAnKTtcclxuXHRcdHNldFRpbWVvdXQoKCkgPT4ge1xyXG5cdFx0XHR0aXRsZS50ZXh0KHNwZWNpYWx0aWVzW2NoZWNrVGV4dCsrXSk7XHJcblx0XHRcdHRpdGxlLmNzcygnb3BhY2l0eScsICcxJyk7XHJcblxyXG5cdFx0XHRzdWJ0aXRsZS50ZXh0KGluc3RydWN0aW9uc1tjaGVja1RleHQgLSAxXSk7XHJcblx0XHRcdHN1YnRpdGxlLmNzcygnb3BhY2l0eScsICcxJyk7XHJcblxyXG5cdFx0fSwgMzAwKTtcclxuXHR9XHJcblxyXG5cdGlmIChjaGVja1RleHQgPD0gMSAmJiB0eXBlID09PSBcInByZXZcIikge1xyXG5cdFx0dGl0bGUuY3NzKCdvcGFjaXR5JywgJzAnKTtcclxuXHRcdHN1YnRpdGxlLmNzcygnb3BhY2l0eScsICcwJyk7XHJcblx0XHRzZXRUaW1lb3V0KCgpID0+IHtcclxuXHRcdFx0dGl0bGUudGV4dChcItCl0L7RgtC10YjRjCDQtdGJ0LUg0YDQsNC3INC/0L7RgdC80L7RgtGA0LXRgtGMPyDQmtGA0YPRgtC4IVwiKTtcclxuXHRcdFx0dGl0bGUuY3NzKCdvcGFjaXR5JywgJzEnKTtcclxuXHJcblx0XHRcdHN1YnRpdGxlLnRleHQoXCJcIik7XHJcblx0XHRcdHN1YnRpdGxlLmNzcygnb3BhY2l0eScsICcwJyk7XHJcblxyXG5cdFx0XHRjaGVja1RleHQtLTtcclxuXHRcdH0sIDMwMCk7XHJcblx0fSBlbHNlIGlmICh0eXBlID09PSBcInByZXZcIikge1xyXG5cdFx0dGl0bGUuY3NzKCdvcGFjaXR5JywgJzAnKTtcclxuXHRcdHN1YnRpdGxlLmNzcygnb3BhY2l0eScsICcwJyk7XHJcblx0XHRzZXRUaW1lb3V0KCgpID0+IHtcclxuXHRcdFx0dGl0bGUudGV4dChzcGVjaWFsdGllc1stLWNoZWNrVGV4dCAtIDFdKTtcclxuXHRcdFx0dGl0bGUuY3NzKCdvcGFjaXR5JywgJzEnKTtcclxuXHJcblx0XHRcdHN1YnRpdGxlLnRleHQoaW5zdHJ1Y3Rpb25zW2NoZWNrVGV4dCAtIDFdKTtcclxuXHRcdFx0c3VidGl0bGUuY3NzKCdvcGFjaXR5JywgJzEnKTtcclxuXHJcblx0XHR9LCAzMDApO1xyXG5cdH1cclxufVxyXG5cclxuY29uc3QgcHVza0FuaW1hdGlvbiA9ICgpID0+IHtcclxuXHRjb25zdCB3aW5kb3dJbm5lcldpZHRoID0gd2luZG93LmlubmVyV2lkdGg7XHJcblxyXG5cdHJldHVybiB7XHJcblx0XHRuZXh0KCkge1xyXG5cdFx0XHRpZiAoY2hlY2tQb2ludCA8IDMzKSB7XHJcblx0XHRcdFx0Y2hlY2tBbmltRXhpc3QgPSAxO1xyXG5cdFx0XHRcdGlmIChjaGVja1BvaW50ID09PSAwKSB7XHJcblx0XHRcdFx0XHRjaGFyYWN0ZXIuc3RvcCh0cnVlLCBmYWxzZSkuYW5pbWF0ZSh7XHJcblx0XHRcdFx0XHRcdCdsZWZ0JzogYCR7cG9pbnRzWysrY2hlY2tQb2ludF1bMV19JWAsXHJcblx0XHRcdFx0XHRcdCd0b3AnOiBgJHtwb2ludHNbY2hlY2tQb2ludF1bMF19JWBcclxuXHRcdFx0XHRcdH0sIDUwMCkuYW5pbWF0ZSh7XHJcblx0XHRcdFx0XHRcdCdsZWZ0JzogYCR7cG9pbnRzWysrY2hlY2tQb2ludF1bMV19JWAsXHJcblx0XHRcdFx0XHRcdCd0b3AnOiBgJHtwb2ludHNbY2hlY2tQb2ludF1bMF19JWBcclxuXHRcdFx0XHRcdH0sIDUwMCkuYW5pbWF0ZSh7XHJcblx0XHRcdFx0XHRcdCdsZWZ0JzogYCR7cG9pbnRzWysrY2hlY2tQb2ludF1bMV19JWAsXHJcblx0XHRcdFx0XHRcdCd0b3AnOiBgJHtwb2ludHNbY2hlY2tQb2ludF1bMF19JWBcclxuXHRcdFx0XHRcdH0sIDUwMCkuYW5pbWF0ZSh7XHJcblx0XHRcdFx0XHRcdCdsZWZ0JzogYCR7cG9pbnRzWysrY2hlY2tQb2ludF1bMV19JWAsXHJcblx0XHRcdFx0XHRcdCd0b3AnOiBgJHtwb2ludHNbY2hlY2tQb2ludF1bMF19JWBcclxuXHRcdFx0XHRcdH0sIDUwMCk7XHJcblx0XHRcdFx0XHRpZiAod2luZG93SW5uZXJXaWR0aCA+IDEwMjQpIHtcclxuXHRcdFx0XHRcdFx0c2V0VGltZW91dCgoKSA9PiB7XHJcblx0XHRcdFx0XHRcdFx0cmVzZXRDaGVja0FuaW1FeGlzdCgpO1xyXG5cdFx0XHRcdFx0XHRcdGNoYW5nZVRleHQoJ25leHQnKTtcclxuXHRcdFx0XHRcdFx0XHRjaGFuZ2VHYW1lKCduZXh0Jyk7XHJcblx0XHRcdFx0XHRcdH0sIDIzMDApO1xyXG5cdFx0XHRcdFx0fSBlbHNlIHtcclxuXHRcdFx0XHRcdFx0c2V0VGltZW91dCgoKSA9PiB7XHJcblx0XHRcdFx0XHRcdFx0cmVzZXRDaGVja0FuaW1FeGlzdCgpO1xyXG5cdFx0XHRcdFx0XHRcdGNoYW5nZVRleHQoJ25leHQnKTtcclxuXHRcdFx0XHRcdFx0XHRjaGFuZ2VHYW1lKCduZXh0Jyk7XHJcblx0XHRcdFx0XHRcdH0sIDIwMCk7XHJcblx0XHRcdFx0XHR9XHJcblx0XHRcdFx0fSBlbHNlIGlmIChjaGVja1BvaW50ID09PSAyNCkge1xyXG5cdFx0XHRcdFx0Y2hhcmFjdGVyLnN0b3AodHJ1ZSwgZmFsc2UpLmFuaW1hdGUoe1xyXG5cdFx0XHRcdFx0XHQnbGVmdCc6IGAke3BvaW50c1srK2NoZWNrUG9pbnRdWzFdfSVgLFxyXG5cdFx0XHRcdFx0XHQndG9wJzogYCR7cG9pbnRzW2NoZWNrUG9pbnRdWzBdfSVgXHJcblx0XHRcdFx0XHR9LCA1MDApLmFuaW1hdGUoe1xyXG5cdFx0XHRcdFx0XHQnbGVmdCc6IGAke3BvaW50c1srK2NoZWNrUG9pbnRdWzFdfSVgLFxyXG5cdFx0XHRcdFx0XHQndG9wJzogYCR7cG9pbnRzW2NoZWNrUG9pbnRdWzBdfSVgXHJcblx0XHRcdFx0XHR9LCA1MDApLmFuaW1hdGUoe1xyXG5cdFx0XHRcdFx0XHQnbGVmdCc6IGAke3BvaW50c1srK2NoZWNrUG9pbnRdWzFdfSVgLFxyXG5cdFx0XHRcdFx0XHQndG9wJzogYCR7cG9pbnRzW2NoZWNrUG9pbnRdWzBdfSVgXHJcblx0XHRcdFx0XHR9LCA1MDApLmFuaW1hdGUoe1xyXG5cdFx0XHRcdFx0XHQnbGVmdCc6IGAke3BvaW50c1srK2NoZWNrUG9pbnRdWzFdfSVgLFxyXG5cdFx0XHRcdFx0XHQndG9wJzogYCR7cG9pbnRzW2NoZWNrUG9pbnRdWzBdfSVgXHJcblx0XHRcdFx0XHR9LCA1MDApLmFuaW1hdGUoe1xyXG5cdFx0XHRcdFx0XHQnbGVmdCc6IGAke3BvaW50c1srK2NoZWNrUG9pbnRdWzFdfSVgLFxyXG5cdFx0XHRcdFx0XHQndG9wJzogYCR7cG9pbnRzW2NoZWNrUG9pbnRdWzBdfSVgXHJcblx0XHRcdFx0XHR9LCA1MDApLmFuaW1hdGUoe1xyXG5cdFx0XHRcdFx0XHQnbGVmdCc6IGAke3BvaW50c1srK2NoZWNrUG9pbnRdWzFdfSVgLFxyXG5cdFx0XHRcdFx0XHQndG9wJzogYCR7cG9pbnRzW2NoZWNrUG9pbnRdWzBdfSVgXHJcblx0XHRcdFx0XHR9LCA1MDApO1xyXG5cdFx0XHRcdFx0aWYgKHdpbmRvd0lubmVyV2lkdGggPiAxMDI0KSB7XHJcblx0XHRcdFx0XHRcdHNldFRpbWVvdXQoKCkgPT4ge1xyXG5cdFx0XHRcdFx0XHRcdHJlc2V0Q2hlY2tBbmltRXhpc3QoKTtcclxuXHRcdFx0XHRcdFx0XHRjaGFuZ2VUZXh0KCduZXh0Jyk7XHJcblx0XHRcdFx0XHRcdFx0Y2hhbmdlR2FtZSgnbmV4dCcpO1xyXG5cdFx0XHRcdFx0XHR9LCAzMzAwKTtcclxuXHRcdFx0XHRcdH0gZWxzZSB7XHJcblx0XHRcdFx0XHRcdHNldFRpbWVvdXQoKCkgPT4ge1xyXG5cdFx0XHRcdFx0XHRcdHJlc2V0Q2hlY2tBbmltRXhpc3QoKTtcclxuXHRcdFx0XHRcdFx0XHRjaGFuZ2VUZXh0KCduZXh0Jyk7XHJcblx0XHRcdFx0XHRcdFx0Y2hhbmdlR2FtZSgnbmV4dCcpO1xyXG5cdFx0XHRcdFx0XHR9LCAyMDApO1xyXG5cdFx0XHRcdFx0fVxyXG5cdFx0XHRcdH0gZWxzZSBpZiAoY2hlY2tQb2ludCA9PT0gMzApIHtcclxuXHRcdFx0XHRcdGNoYXJhY3Rlci5zdG9wKHRydWUsIGZhbHNlKS5hbmltYXRlKHtcclxuXHRcdFx0XHRcdFx0J2xlZnQnOiBgJHtwb2ludHNbKytjaGVja1BvaW50XVsxXX0lYCxcclxuXHRcdFx0XHRcdFx0J3RvcCc6IGAke3BvaW50c1tjaGVja1BvaW50XVswXX0lYFxyXG5cdFx0XHRcdFx0fSwgNTAwKS5hbmltYXRlKHtcclxuXHRcdFx0XHRcdFx0J2xlZnQnOiBgJHtwb2ludHNbKytjaGVja1BvaW50XVsxXX0lYCxcclxuXHRcdFx0XHRcdFx0J3RvcCc6IGAke3BvaW50c1tjaGVja1BvaW50XVswXX0lYFxyXG5cdFx0XHRcdFx0fSwgNTAwKS5hbmltYXRlKHtcclxuXHRcdFx0XHRcdFx0J2xlZnQnOiBgJHtwb2ludHNbKytjaGVja1BvaW50XVsxXX0lYCxcclxuXHRcdFx0XHRcdFx0J3RvcCc6IGAke3BvaW50c1tjaGVja1BvaW50XVswXX0lYFxyXG5cdFx0XHRcdFx0fSwgNTAwKTtcclxuXHRcdFx0XHRcdGlmICh3aW5kb3dJbm5lcldpZHRoID4gMTAyNCkge1xyXG5cdFx0XHRcdFx0XHRzZXRUaW1lb3V0KCgpID0+IHtcclxuXHRcdFx0XHRcdFx0XHRyZXNldENoZWNrQW5pbUV4aXN0KCk7XHJcblx0XHRcdFx0XHRcdFx0Y2hhbmdlVGV4dCgnbmV4dCcpO1xyXG5cdFx0XHRcdFx0XHRcdGNoYW5nZUdhbWUoJ25leHQnKTtcclxuXHRcdFx0XHRcdFx0XHR3YXNTY3JvbGwrKztcclxuXHRcdFx0XHRcdFx0fSwgMTgwMCk7XHJcblx0XHRcdFx0XHR9IGVsc2Uge1xyXG5cdFx0XHRcdFx0XHRzZXRUaW1lb3V0KCgpID0+IHtcclxuXHRcdFx0XHRcdFx0XHRyZXNldENoZWNrQW5pbUV4aXN0KCk7XHJcblx0XHRcdFx0XHRcdFx0Y2hhbmdlVGV4dCgnbmV4dCcpO1xyXG5cdFx0XHRcdFx0XHRcdGNoYW5nZUdhbWUoJ25leHQnKTtcclxuXHRcdFx0XHRcdFx0fSwgMjAwKTtcclxuXHRcdFx0XHRcdH1cclxuXHRcdFx0XHR9IGVsc2Uge1xyXG5cdFx0XHRcdFx0Y2hhcmFjdGVyLnN0b3AodHJ1ZSwgZmFsc2UpLmFuaW1hdGUoe1xyXG5cdFx0XHRcdFx0XHQnbGVmdCc6IGAke3BvaW50c1srK2NoZWNrUG9pbnRdWzFdfSVgLFxyXG5cdFx0XHRcdFx0XHQndG9wJzogYCR7cG9pbnRzW2NoZWNrUG9pbnRdWzBdfSVgXHJcblx0XHRcdFx0XHR9LCA1MDApLmFuaW1hdGUoe1xyXG5cdFx0XHRcdFx0XHQnbGVmdCc6IGAke3BvaW50c1srK2NoZWNrUG9pbnRdWzFdfSVgLFxyXG5cdFx0XHRcdFx0XHQndG9wJzogYCR7cG9pbnRzW2NoZWNrUG9pbnRdWzBdfSVgXHJcblx0XHRcdFx0XHR9LCA1MDApLmFuaW1hdGUoe1xyXG5cdFx0XHRcdFx0XHQnbGVmdCc6IGAke3BvaW50c1srK2NoZWNrUG9pbnRdWzFdfSVgLFxyXG5cdFx0XHRcdFx0XHQndG9wJzogYCR7cG9pbnRzW2NoZWNrUG9pbnRdWzBdfSVgXHJcblx0XHRcdFx0XHR9LCA1MDApLmFuaW1hdGUoe1xyXG5cdFx0XHRcdFx0XHQnbGVmdCc6IGAke3BvaW50c1srK2NoZWNrUG9pbnRdWzFdfSVgLFxyXG5cdFx0XHRcdFx0XHQndG9wJzogYCR7cG9pbnRzW2NoZWNrUG9pbnRdWzBdfSVgXHJcblx0XHRcdFx0XHR9LCA1MDApLmFuaW1hdGUoe1xyXG5cdFx0XHRcdFx0XHQnbGVmdCc6IGAke3BvaW50c1srK2NoZWNrUG9pbnRdWzFdfSVgLFxyXG5cdFx0XHRcdFx0XHQndG9wJzogYCR7cG9pbnRzW2NoZWNrUG9pbnRdWzBdfSVgXHJcblx0XHRcdFx0XHR9LCA1MDApO1xyXG5cdFx0XHRcdFx0aWYgKHdpbmRvd0lubmVyV2lkdGggPiAxMDI0KSB7XHJcblx0XHRcdFx0XHRcdHNldFRpbWVvdXQoKCkgPT4ge1xyXG5cdFx0XHRcdFx0XHRcdHJlc2V0Q2hlY2tBbmltRXhpc3QoKTtcclxuXHRcdFx0XHRcdFx0XHRjaGFuZ2VUZXh0KCduZXh0Jyk7XHJcblx0XHRcdFx0XHRcdFx0Y2hhbmdlR2FtZSgnbmV4dCcpO1xyXG5cdFx0XHRcdFx0XHR9LCAyODAwKTtcclxuXHRcdFx0XHRcdH0gZWxzZSB7XHJcblx0XHRcdFx0XHRcdHNldFRpbWVvdXQoKCkgPT4ge1xyXG5cdFx0XHRcdFx0XHRcdHJlc2V0Q2hlY2tBbmltRXhpc3QoKTtcclxuXHRcdFx0XHRcdFx0XHRjaGFuZ2VUZXh0KCduZXh0Jyk7XHJcblx0XHRcdFx0XHRcdFx0Y2hhbmdlR2FtZSgnbmV4dCcpO1xyXG5cdFx0XHRcdFx0XHR9LCAyMDApO1xyXG5cdFx0XHRcdFx0fVxyXG5cdFx0XHRcdH1cclxuXHRcdFx0fVxyXG5cdFx0fSxcclxuXHRcdHByZXYoKSB7XHJcblx0XHRcdGlmIChjaGVja1BvaW50ID4gMCkge1xyXG5cdFx0XHRcdGNoZWNrQW5pbUV4aXN0ID0gMTtcclxuXHRcdFx0XHRpZiAoY2hlY2tQb2ludCA9PT0gNCkge1xyXG5cdFx0XHRcdFx0Y2hhcmFjdGVyLnN0b3AodHJ1ZSwgZmFsc2UpLmFuaW1hdGUoe1xyXG5cdFx0XHRcdFx0XHQnbGVmdCc6IGAke3BvaW50c1stLWNoZWNrUG9pbnRdWzFdfSVgLFxyXG5cdFx0XHRcdFx0XHQndG9wJzogYCR7cG9pbnRzW2NoZWNrUG9pbnRdWzBdfSVgXHJcblx0XHRcdFx0XHR9LCA1MDApLmFuaW1hdGUoe1xyXG5cdFx0XHRcdFx0XHQnbGVmdCc6IGAke3BvaW50c1stLWNoZWNrUG9pbnRdWzFdfSVgLFxyXG5cdFx0XHRcdFx0XHQndG9wJzogYCR7cG9pbnRzW2NoZWNrUG9pbnRdWzBdfSVgXHJcblx0XHRcdFx0XHR9LCA1MDApLmFuaW1hdGUoe1xyXG5cdFx0XHRcdFx0XHQnbGVmdCc6IGAke3BvaW50c1stLWNoZWNrUG9pbnRdWzFdfSVgLFxyXG5cdFx0XHRcdFx0XHQndG9wJzogYCR7cG9pbnRzW2NoZWNrUG9pbnRdWzBdfSVgXHJcblx0XHRcdFx0XHR9LCA1MDApLmFuaW1hdGUoe1xyXG5cdFx0XHRcdFx0XHQnbGVmdCc6IGAke3BvaW50c1stLWNoZWNrUG9pbnRdWzFdfSVgLFxyXG5cdFx0XHRcdFx0XHQndG9wJzogYCR7cG9pbnRzW2NoZWNrUG9pbnRdWzBdfSVgXHJcblx0XHRcdFx0XHR9LCA1MDApO1xyXG5cdFx0XHRcdFx0aWYgKHdpbmRvd0lubmVyV2lkdGggPiAxMDI0KSB7XHJcblx0XHRcdFx0XHRcdHNldFRpbWVvdXQoKCkgPT4ge1xyXG5cdFx0XHRcdFx0XHRcdHJlc2V0Q2hlY2tBbmltRXhpc3QoKTtcclxuXHRcdFx0XHRcdFx0XHRjaGFuZ2VUZXh0KCdwcmV2Jyk7XHJcblx0XHRcdFx0XHRcdFx0Y2hhbmdlR2FtZSgncHJldicpO1xyXG5cdFx0XHRcdFx0XHR9LCAyMzAwKTtcclxuXHRcdFx0XHRcdH0gZWxzZSB7XHJcblx0XHRcdFx0XHRcdHNldFRpbWVvdXQoKCkgPT4ge1xyXG5cdFx0XHRcdFx0XHRcdHJlc2V0Q2hlY2tBbmltRXhpc3QoKTtcclxuXHRcdFx0XHRcdFx0XHRjaGFuZ2VUZXh0KCdwcmV2Jyk7XHJcblx0XHRcdFx0XHRcdFx0Y2hhbmdlR2FtZSgncHJldicpO1xyXG5cdFx0XHRcdFx0XHR9LCAyMDApO1xyXG5cdFx0XHRcdFx0fVxyXG5cdFx0XHRcdH0gZWxzZSBpZiAoY2hlY2tQb2ludCA9PT0gMzApIHtcclxuXHRcdFx0XHRcdGNoYXJhY3Rlci5zdG9wKHRydWUsIGZhbHNlKS5hbmltYXRlKHtcclxuXHRcdFx0XHRcdFx0J2xlZnQnOiBgJHtwb2ludHNbLS1jaGVja1BvaW50XVsxXX0lYCxcclxuXHRcdFx0XHRcdFx0J3RvcCc6IGAke3BvaW50c1tjaGVja1BvaW50XVswXX0lYFxyXG5cdFx0XHRcdFx0fSwgNTAwKS5hbmltYXRlKHtcclxuXHRcdFx0XHRcdFx0J2xlZnQnOiBgJHtwb2ludHNbLS1jaGVja1BvaW50XVsxXX0lYCxcclxuXHRcdFx0XHRcdFx0J3RvcCc6IGAke3BvaW50c1tjaGVja1BvaW50XVswXX0lYFxyXG5cdFx0XHRcdFx0fSwgNTAwKS5hbmltYXRlKHtcclxuXHRcdFx0XHRcdFx0J2xlZnQnOiBgJHtwb2ludHNbLS1jaGVja1BvaW50XVsxXX0lYCxcclxuXHRcdFx0XHRcdFx0J3RvcCc6IGAke3BvaW50c1tjaGVja1BvaW50XVswXX0lYFxyXG5cdFx0XHRcdFx0fSwgNTAwKS5hbmltYXRlKHtcclxuXHRcdFx0XHRcdFx0J2xlZnQnOiBgJHtwb2ludHNbLS1jaGVja1BvaW50XVsxXX0lYCxcclxuXHRcdFx0XHRcdFx0J3RvcCc6IGAke3BvaW50c1tjaGVja1BvaW50XVswXX0lYFxyXG5cdFx0XHRcdFx0fSwgNTAwKS5hbmltYXRlKHtcclxuXHRcdFx0XHRcdFx0J2xlZnQnOiBgJHtwb2ludHNbLS1jaGVja1BvaW50XVsxXX0lYCxcclxuXHRcdFx0XHRcdFx0J3RvcCc6IGAke3BvaW50c1tjaGVja1BvaW50XVswXX0lYFxyXG5cdFx0XHRcdFx0fSwgNTAwKS5hbmltYXRlKHtcclxuXHRcdFx0XHRcdFx0J2xlZnQnOiBgJHtwb2ludHNbLS1jaGVja1BvaW50XVsxXX0lYCxcclxuXHRcdFx0XHRcdFx0J3RvcCc6IGAke3BvaW50c1tjaGVja1BvaW50XVswXX0lYFxyXG5cdFx0XHRcdFx0fSwgNTAwKTtcclxuXHRcdFx0XHRcdGlmICh3aW5kb3dJbm5lcldpZHRoID4gMTAyNCkge1xyXG5cdFx0XHRcdFx0XHRzZXRUaW1lb3V0KCgpID0+IHtcclxuXHRcdFx0XHRcdFx0XHRyZXNldENoZWNrQW5pbUV4aXN0KCk7XHJcblx0XHRcdFx0XHRcdFx0Y2hhbmdlVGV4dCgncHJldicpO1xyXG5cdFx0XHRcdFx0XHRcdGNoYW5nZUdhbWUoJ3ByZXYnKTtcclxuXHRcdFx0XHRcdFx0fSwgMzMwMCk7XHJcblx0XHRcdFx0XHR9IGVsc2Uge1xyXG5cdFx0XHRcdFx0XHRzZXRUaW1lb3V0KCgpID0+IHtcclxuXHRcdFx0XHRcdFx0XHRyZXNldENoZWNrQW5pbUV4aXN0KCk7XHJcblx0XHRcdFx0XHRcdFx0Y2hhbmdlVGV4dCgncHJldicpO1xyXG5cdFx0XHRcdFx0XHRcdGNoYW5nZUdhbWUoJ3ByZXYnKTtcclxuXHRcdFx0XHRcdFx0fSwgMjAwKTtcclxuXHRcdFx0XHRcdH1cclxuXHRcdFx0XHR9IGVsc2UgaWYgKGNoZWNrUG9pbnQgPT09IDMzKSB7XHJcblx0XHRcdFx0XHRjaGFyYWN0ZXIuc3RvcCh0cnVlLCBmYWxzZSkuYW5pbWF0ZSh7XHJcblx0XHRcdFx0XHRcdCdsZWZ0JzogYCR7cG9pbnRzWy0tY2hlY2tQb2ludF1bMV19JWAsXHJcblx0XHRcdFx0XHRcdCd0b3AnOiBgJHtwb2ludHNbY2hlY2tQb2ludF1bMF19JWBcclxuXHRcdFx0XHRcdH0sIDUwMCkuYW5pbWF0ZSh7XHJcblx0XHRcdFx0XHRcdCdsZWZ0JzogYCR7cG9pbnRzWy0tY2hlY2tQb2ludF1bMV19JWAsXHJcblx0XHRcdFx0XHRcdCd0b3AnOiBgJHtwb2ludHNbY2hlY2tQb2ludF1bMF19JWBcclxuXHRcdFx0XHRcdH0sIDUwMCkuYW5pbWF0ZSh7XHJcblx0XHRcdFx0XHRcdCdsZWZ0JzogYCR7cG9pbnRzWy0tY2hlY2tQb2ludF1bMV19JWAsXHJcblx0XHRcdFx0XHRcdCd0b3AnOiBgJHtwb2ludHNbY2hlY2tQb2ludF1bMF19JWBcclxuXHRcdFx0XHRcdH0sIDUwMCk7XHJcblx0XHRcdFx0XHRpZiAod2luZG93SW5uZXJXaWR0aCA+IDEwMjQpIHtcclxuXHRcdFx0XHRcdFx0c2V0VGltZW91dCgoKSA9PiB7XHJcblx0XHRcdFx0XHRcdFx0cmVzZXRDaGVja0FuaW1FeGlzdCgpO1xyXG5cdFx0XHRcdFx0XHRcdGNoYW5nZVRleHQoJ3ByZXYnKTtcclxuXHRcdFx0XHRcdFx0XHRjaGFuZ2VHYW1lKCdwcmV2Jyk7XHJcblx0XHRcdFx0XHRcdH0sIDE4MDApO1xyXG5cdFx0XHRcdFx0fSBlbHNlIHtcclxuXHRcdFx0XHRcdFx0c2V0VGltZW91dCgoKSA9PiB7XHJcblx0XHRcdFx0XHRcdFx0cmVzZXRDaGVja0FuaW1FeGlzdCgpO1xyXG5cdFx0XHRcdFx0XHRcdGNoYW5nZVRleHQoJ3ByZXYnKTtcclxuXHRcdFx0XHRcdFx0XHRjaGFuZ2VHYW1lKCdwcmV2Jyk7XHJcblx0XHRcdFx0XHRcdH0sIDIwMCk7XHJcblx0XHRcdFx0XHR9XHJcblx0XHRcdFx0fSBlbHNlIHtcclxuXHRcdFx0XHRcdGNoYXJhY3Rlci5zdG9wKHRydWUsIGZhbHNlKS5hbmltYXRlKHtcclxuXHRcdFx0XHRcdFx0J2xlZnQnOiBgJHtwb2ludHNbLS1jaGVja1BvaW50XVsxXX0lYCxcclxuXHRcdFx0XHRcdFx0J3RvcCc6IGAke3BvaW50c1tjaGVja1BvaW50XVswXX0lYFxyXG5cdFx0XHRcdFx0fSwgNTAwKS5hbmltYXRlKHtcclxuXHRcdFx0XHRcdFx0J2xlZnQnOiBgJHtwb2ludHNbLS1jaGVja1BvaW50XVsxXX0lYCxcclxuXHRcdFx0XHRcdFx0J3RvcCc6IGAke3BvaW50c1tjaGVja1BvaW50XVswXX0lYFxyXG5cdFx0XHRcdFx0fSwgNTAwKS5hbmltYXRlKHtcclxuXHRcdFx0XHRcdFx0J2xlZnQnOiBgJHtwb2ludHNbLS1jaGVja1BvaW50XVsxXX0lYCxcclxuXHRcdFx0XHRcdFx0J3RvcCc6IGAke3BvaW50c1tjaGVja1BvaW50XVswXX0lYFxyXG5cdFx0XHRcdFx0fSwgNTAwKS5hbmltYXRlKHtcclxuXHRcdFx0XHRcdFx0J2xlZnQnOiBgJHtwb2ludHNbLS1jaGVja1BvaW50XVsxXX0lYCxcclxuXHRcdFx0XHRcdFx0J3RvcCc6IGAke3BvaW50c1tjaGVja1BvaW50XVswXX0lYFxyXG5cdFx0XHRcdFx0fSwgNTAwKS5hbmltYXRlKHtcclxuXHRcdFx0XHRcdFx0J2xlZnQnOiBgJHtwb2ludHNbLS1jaGVja1BvaW50XVsxXX0lYCxcclxuXHRcdFx0XHRcdFx0J3RvcCc6IGAke3BvaW50c1tjaGVja1BvaW50XVswXX0lYFxyXG5cdFx0XHRcdFx0fSwgNTAwKTtcclxuXHRcdFx0XHRcdGlmICh3aW5kb3dJbm5lcldpZHRoID4gMTAyNCkge1xyXG5cdFx0XHRcdFx0XHRzZXRUaW1lb3V0KCgpID0+IHtcclxuXHRcdFx0XHRcdFx0XHRyZXNldENoZWNrQW5pbUV4aXN0KCk7XHJcblx0XHRcdFx0XHRcdFx0Y2hhbmdlVGV4dCgncHJldicpO1xyXG5cdFx0XHRcdFx0XHRcdGNoYW5nZUdhbWUoJ3ByZXYnKTtcclxuXHRcdFx0XHRcdFx0fSwgMjgwMCk7XHJcblx0XHRcdFx0XHR9IGVsc2Uge1xyXG5cdFx0XHRcdFx0XHRzZXRUaW1lb3V0KCgpID0+IHtcclxuXHRcdFx0XHRcdFx0XHRyZXNldENoZWNrQW5pbUV4aXN0KCk7XHJcblx0XHRcdFx0XHRcdFx0Y2hhbmdlVGV4dCgncHJldicpO1xyXG5cdFx0XHRcdFx0XHRcdGNoYW5nZUdhbWUoJ3ByZXYnKTtcclxuXHRcdFx0XHRcdFx0fSwgMjAwKTtcclxuXHRcdFx0XHRcdH1cclxuXHRcdFx0XHR9XHJcblx0XHRcdH1cclxuXHRcdH1cclxuXHR9O1xyXG59XHJcblxyXG4kKCcud3JhcHBlcicpLm9uKCd0b3VjaG1vdmUnLCBlID0+IGUucHJldmVudERlZmF1bHQoKSk7XHJcblxyXG4kKHdpbmRvdykub24oJ3doZWVsJywgZSA9PiB7XHJcblx0Y29uc3QgZGVsdGFZID0gZS5vcmlnaW5hbEV2ZW50LmRlbHRhWTtcclxuXHJcblx0aWYgKHNlY3Rpb25TcGVjaWFsdGllcy5oYXNDbGFzcygnc3BlY2lhbGl0ZXNfYWN0aXZlJykpIHtcclxuXHRcdGNvbnN0IGFjdGlvbiA9IHB1c2tBbmltYXRpb24oKTtcclxuXHJcblx0XHRpZiAoZGVsdGFZID4gMCAmJiBjaGVja0FuaW1FeGlzdCA9PT0gMCkge1xyXG5cdFx0XHRhY3Rpb24ubmV4dCgpO1xyXG5cdFx0fVxyXG5cclxuXHRcdGlmIChkZWx0YVkgPCAwICYmIGNoZWNrQW5pbUV4aXN0ID09PSAwKSB7XHJcblx0XHRcdGFjdGlvbi5wcmV2KCk7XHJcblx0XHR9XHJcblx0fVxyXG59KVxyXG4iXX0=
